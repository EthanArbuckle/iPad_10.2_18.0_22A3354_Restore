void sub_20C01B2C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C01B4BC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C01B2D4(std::runtime_error *a1)
{
  void *v2;
  void **v3;

  a1->__vftable = (std::runtime_error_vtbl *)&unk_24C526178;
  v3 = (void **)&a1[1].__vftable;
  sub_20C01B544(&v3);
  std::runtime_error::~runtime_error(a1);
  operator delete(v2);
}

uint64_t sub_20C01B324(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C01B398((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C01B398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 != a5)
  {
    v9 = a7;
    do
    {
      v10 = *(_OWORD *)(a3 - 48);
      *(_QWORD *)(v9 - 32) = *(_QWORD *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v10;
      v11 = *(_OWORD *)(a3 - 24);
      *(_QWORD *)(v9 - 8) = *(_QWORD *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v11;
      v9 -= 48;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 8) = 0;
      *(_QWORD *)(a3 - 24) = 0;
      v7 -= 48;
      a3 -= 48;
    }
    while (a3 != a5);
    *((_QWORD *)&v16 + 1) = v9;
  }
  v14 = 1;
  sub_20C01B444((uint64_t)v13);
  return a6;
}

uint64_t sub_20C01B444(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C01B478(a1);
  return a1;
}

void sub_20C01B478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 47) < 0)
      operator delete(*(void **)(v1 + 24));
    v1 += 48;
  }
}

uint64_t sub_20C01B4BC(uint64_t a1)
{
  sub_20C01B4F0(a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C01B4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      v5 = v2 - 48;
      *(_QWORD *)(a1 + 16) = v2 - 48;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        v5 = *(_QWORD *)(a1 + 16);
      }
      v2 = v5;
    }
    while (v5 != a2);
  }
}

void sub_20C01B544(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_20C01B584((uint64_t *)v2);
    operator delete(**a1);
  }
}

void sub_20C01B584(uint64_t *a1)
{
  uint64_t v2;
  uint64_t i;

  v2 = *a1;
  for (i = a1[1]; i != v2; i -= 48)
  {
    if (*(char *)(i - 1) < 0)
      operator delete(*(void **)(i - 24));
  }
  a1[1] = v2;
}

void sub_20C01B5D0(uint64_t a1)
{
  sub_20C01B69C(a1);
}

void sub_20C01B5E0()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01B610(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01B624(_QWORD *a1)
{
  _BYTE *v2;
  uint64_t v3;

  while ((sub_20C01AA0C(a1) & 1) != 0)
    ;
  v2 = (_BYTE *)a1[4];
  if (v2 == (_BYTE *)a1[8] || *v2 != 61)
    return 0;
  v3 = a1[5] + 1;
  a1[4] = v2 + 1;
  a1[5] = v3;
  ++a1[7];
  while ((sub_20C01AA0C(a1) & 1) != 0)
    ;
  return 1;
}

void sub_20C01B69C(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01B788(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01B728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01B788(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0AA9 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0AA9 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01B804(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01B818(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 32);
  if ((_QWORD)v4 != *(_QWORD *)(a1 + 64) && *(_BYTE *)v4 == 46)
  {
    v2 = *(_QWORD *)(a1 + 40) + 1;
    *(_QWORD *)(a1 + 32) = v4 + 1;
    *(_QWORD *)(a1 + 40) = v2;
    ++*(_QWORD *)(a1 + 56);
  }
  do
  {
    while ((sub_20C01A510((_QWORD *)a1) & 1) != 0)
      ;
  }
  while ((sub_20C01B8A8((_QWORD *)a1) & 1) != 0);
  return 1;
}

void sub_20C01B89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01B8A8(_QWORD *a1)
{
  char *v1;
  int v3;
  uint64_t *v4;
  char *v5;
  uint64_t v7;
  __int16 __s;
  uint64_t v9;

  v1 = (char *)a1[4];
  if (v1 == (char *)a1[8])
    return 0;
  v3 = *v1;
  __s = 11644;
  v4 = (uint64_t *)memchr(&__s, v3, 2uLL);
  v5 = (char *)(v4 ? v4 : &v9);
  if (v5 - (char *)&__s == 2)
    return 0;
  v7 = a1[5] + 1;
  a1[4] = v1 + 1;
  a1[5] = v7;
  ++a1[7];
  return 1;
}

void sub_20C01B940(uint64_t a1)
{
  sub_20C01BA0C(a1);
}

void sub_20C01B950()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01B980(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01B994(_QWORD *a1)
{
  _BYTE *v2;
  uint64_t v3;

  while ((sub_20C01AA0C(a1) & 1) != 0)
    ;
  v2 = (_BYTE *)a1[4];
  if (v2 == (_BYTE *)a1[8] || *v2 != 125)
    return 0;
  v3 = a1[5] + 1;
  a1[4] = v2 + 1;
  a1[5] = v3;
  ++a1[7];
  while ((sub_20C01AA0C(a1) & 1) != 0)
    ;
  return 1;
}

void sub_20C01BA0C(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01BAF8(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01BA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01BAF8(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0AF3 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0AF3 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01BB74(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01BB88(_QWORD *a1)
{
  int v2;
  char v3;

  sub_20C01BBD0((uint64_t)a1);
  if (v2)
  {
    do
    {
      sub_20C01BC64(a1);
      sub_20C01BBD0((uint64_t)a1);
    }
    while ((v3 & 1) != 0);
  }
  return 1;
}

__n128 sub_20C01BBD0(uint64_t a1)
{
  __n128 *v2;
  _BYTE *v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __n128 v7;

  v2 = (__n128 *)(a1 + 32);
  v6 = *(__n128 *)(a1 + 32);
  v7 = *(__n128 *)(a1 + 48);
  while ((sub_20C01AA0C((_QWORD *)a1) & 1) != 0)
    ;
  v3 = *(_BYTE **)(a1 + 32);
  if (v3 == *(_BYTE **)(a1 + 64) || *v3 != 123)
  {
    result = v6;
    *v2 = v6;
    v2[1] = v7;
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 40) + 1;
    *(_QWORD *)(a1 + 32) = v3 + 1;
    *(_QWORD *)(a1 + 40) = v4;
    ++*(_QWORD *)(a1 + 56);
    while ((sub_20C01AA0C((_QWORD *)a1) & 1) != 0)
      ;
  }
  return result;
}

uint64_t sub_20C01BC64(_QWORD *a1)
{
  if ((sub_20C01AB74(a1) & 1) == 0)
    sub_20C01AB20((uint64_t)a1);
  if ((sub_20C01B624(a1) & 1) == 0)
    sub_20C01B5D0((uint64_t)a1);
  sub_20C01B818((uint64_t)a1);
  if ((sub_20C01B994(a1) & 1) == 0)
    sub_20C01B940((uint64_t)a1);
  return 1;
}

void sub_20C01BCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01BD08(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;

  v2 = (_BYTE *)a1[4];
  if (v2 == (_BYTE *)a1[8] || *v2 != 47)
    return sub_20C01BD4C((uint64_t)a1, a2);
  v3 = a1[5] + 1;
  a1[4] = v2 + 1;
  a1[5] = v3;
  ++a1[7];
  return 1;
}

uint64_t sub_20C01BD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20C01BD94(a1, a2);
  if ((_DWORD)v4)
  {
    while ((sub_20C01C284(a1, a2) & 1) != 0)
      ;
  }
  return v4;
}

uint64_t sub_20C01BD94(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01A994((_QWORD *)a1);
  if ((_DWORD)v5)
  {
    sub_20C01BE20((_QWORD *)a1, a2);
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01C1C8((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01BE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01BE20(_QWORD *a1, uint64_t a2)
{
  if ((sub_20C01BEF0((uint64_t)a1, a2) & 1) == 0)
    sub_20C01BE9C((uint64_t)a1);
  if ((sub_20C01B624(a1) & 1) == 0)
    sub_20C01BFD0((uint64_t)a1);
  sub_20C01C024((uint64_t)a1, a2);
  if ((sub_20C01B994(a1) & 1) == 0)
    sub_20C01C174((uint64_t)a1);
  return 1;
}

void sub_20C01BE9C(uint64_t a1)
{
  sub_20C01AC24(a1);
}

void sub_20C01BEAC()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01BEDC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01BEF0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01AB74((_QWORD *)a1);
  if ((_DWORD)v5)
  {
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01BF70((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01BF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

double sub_20C01BF70(uint64_t a1, uint64_t a2)
{
  void **v3;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_20BE93368(&v5, *(char **)a1, *(char **)(*(_QWORD *)(a1 + 32) + 8), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) - *(_QWORD *)a1);
  v3 = (void **)(a2 + 32);
  if (*(char *)(a2 + 55) < 0)
    operator delete(*v3);
  result = *(double *)&v5;
  *(_OWORD *)v3 = v5;
  *(_QWORD *)(a2 + 48) = v6;
  return result;
}

void sub_20C01BFD0(uint64_t a1)
{
  sub_20C01B69C(a1);
}

void sub_20C01BFE0()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01C010(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C024(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01C0A4((_QWORD *)a1);
  if ((_DWORD)v5)
  {
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01C114((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01C098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C0A4(_QWORD *a1)
{
  _BYTE *v2;
  uint64_t v3;

  v2 = (_BYTE *)a1[4];
  if (v2 != (_BYTE *)a1[8] && *v2 == 46)
  {
    v3 = a1[5] + 1;
    a1[4] = v2 + 1;
    a1[5] = v3;
    ++a1[7];
  }
  do
  {
    while ((sub_20C01A510(a1) & 1) != 0)
      ;
  }
  while ((sub_20C01B8A8(a1) & 1) != 0);
  return 1;
}

double sub_20C01C114(uint64_t a1, uint64_t a2)
{
  void **v3;
  double result;
  __int128 v5;
  uint64_t v6;

  sub_20BE93368(&v5, *(char **)a1, *(char **)(*(_QWORD *)(a1 + 32) + 8), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) - *(_QWORD *)a1);
  v3 = (void **)(a2 + 56);
  if (*(char *)(a2 + 79) < 0)
    operator delete(*v3);
  result = *(double *)&v5;
  *(_OWORD *)v3 = v5;
  *(_QWORD *)(a2 + 72) = v6;
  return result;
}

void sub_20C01C174(uint64_t a1)
{
  sub_20C01BA0C(a1);
}

void sub_20C01C184()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01C1B4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C01C1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _DWORD *result;
  int v5;
  int v6;

  pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection((_DWORD *)(*(_QWORD *)(a2 + 8) - 8), a2 + 32, a2 + 56, &v5);
  v3 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v3 - 8), &v5);
  sub_20BFD3F10((int *)(v3 - 4), &v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v6);
  result = sub_20BFD265C(&v5);
  if (*(char *)(a2 + 55) < 0)
  {
    **(_BYTE **)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
  }
  else
  {
    *(_BYTE *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 55) = 0;
  }
  if (*(char *)(a2 + 79) < 0)
  {
    **(_BYTE **)(a2 + 56) = 0;
    *(_QWORD *)(a2 + 64) = 0;
  }
  else
  {
    *(_BYTE *)(a2 + 56) = 0;
    *(_BYTE *)(a2 + 79) = 0;
  }
  return result;
}

uint64_t sub_20C01C284(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01A994((_QWORD *)a1);
  if ((_DWORD)v5)
  {
    sub_20C01BE20((_QWORD *)a1, a2);
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01C1C8((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01C304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20C01C284(a1, a2);
  if ((_DWORD)v4)
  {
    while ((sub_20C01C284(a1, a2) & 1) != 0)
      ;
  }
  return v4;
}

__n128 sub_20C01C358(uint64_t a1, uint64_t *a2)
{
  __n128 *v2;
  uint64_t v5;
  __n128 result;
  __n128 v7;
  __n128 v8;

  v2 = (__n128 *)(a1 + 32);
  v7 = *(__n128 *)(a1 + 32);
  v8 = *(__n128 *)(a1 + 48);
  if (v7.n128_u64[0] != *(_QWORD *)(a1 + 64)
    && *(_BYTE *)v7.n128_u64[0] == 46
    && (v5 = *(_QWORD *)(a1 + 40) + 1,
        *(_QWORD *)(a1 + 32) = v7.n128_u64[0] + 1,
        *(_QWORD *)(a1 + 40) = v5,
        ++*(_QWORD *)(a1 + 56),
        sub_20C01C400(a1, (uint64_t)a2)))
  {
    sub_20C01C67C((_QWORD *)a1, a2);
  }
  else
  {
    result = v7;
    *v2 = v7;
    v2[1] = v8;
  }
  return result;
}

void sub_20C01C3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C400(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01C480((__n128 *)a1);
  if ((_DWORD)v5)
  {
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01C574((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01C474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C480(__n128 *a1)
{
  uint64_t v2;
  char v3;

  v2 = sub_20C01A26C(a1);
  if ((_DWORD)v2)
  {
    while ((sub_20C01A510(a1) & 1) != 0)
      ;
    do
      sub_20C01C4D4(a1);
    while ((v3 & 1) != 0);
  }
  return v2;
}

__n128 sub_20C01C4D4(__n128 *a1)
{
  __n128 *v1;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __n128 v6;

  v1 = a1 + 2;
  v5 = a1[2];
  v6 = a1[3];
  if (v5.n128_u64[0] != a1[4].n128_u64[0]
    && *(_BYTE *)v5.n128_u64[0] == 58
    && (v3 = a1[2].n128_u64[1] + 1,
        a1[2].n128_u64[0] = v5.n128_u64[0] + 1,
        a1[2].n128_u64[1] = v3,
        ++a1[3].n128_u64[1],
        sub_20C01A26C(a1)))
  {
    while ((sub_20C01A510(a1) & 1) != 0)
      ;
  }
  else
  {
    result = v5;
    *v1 = v5;
    v1[1] = v6;
  }
  return result;
}

void sub_20C01C564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

_DWORD *sub_20C01C574(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  _DWORD *v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  uint64_t v8;
  _DWORD *result;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;

  v4 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(*(_QWORD *)(a2 + 8) - 8));
  if (!v4)
  {
    v5 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::ReflexiveRelativePath((pxrInternal__aapl__pxrReserved__::SdfPath *)v4);
    v6 = *(_QWORD *)(a2 + 8);
    sub_20C01A074((int *)(v6 - 8), v5);
    sub_20C01A0C8((int *)(v6 - 4), v5 + 1);
  }
  v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)(a2 + 8) - 8);
  sub_20C01A674(a1, &v12);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v7, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v12, &v13);
  v8 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v8 - 8), &v13);
  sub_20BFD3F10((int *)(v8 - 4), &v14);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  result = sub_20BFD265C(&v13);
  if ((v12 & 7) != 0)
  {
    v10 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  return result;
}

uint64_t sub_20C01C67C(_QWORD *a1, uint64_t *a2)
{
  int v4;

  if ((sub_20C01C6D8((uint64_t)a1, a2) & 1) != 0)
    return 1;
  sub_20C01D5D0((uint64_t)a1);
  if (v4)
  {
    sub_20C01D770((uint64_t)a1, a2);
    return 1;
  }
  return sub_20C01DEF4(a1, (uint64_t)a2);
}

uint64_t sub_20C01C6D8(uint64_t a1, uint64_t *a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01C754(a1, a2);
  if ((_DWORD)v5)
  {
    sub_20C01C92C(a1, (uint64_t)a2);
    sub_20C01D054((_QWORD *)a1, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01C748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C754(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  if ((_QWORD)v4 == *(_QWORD *)(a1 + 64) || *(_BYTE *)v4 != 91)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 + 1;
  *(_QWORD *)(a1 + 40) = v2;
  ++*(_QWORD *)(a1 + 56);
  v6[0] = v4;
  v6[1] = v5;
  v7 = a1 + 24;
  sub_20C01C7E8((uint64_t)v6, a2);
  return 1;
}

void sub_20C01C7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C7E8(uint64_t a1, uint64_t *a2)
{
  _DWORD *v3;
  _DWORD *v4;
  _DWORD *v5;
  uint64_t result;

  v3 = (_DWORD *)a2[1];
  if ((unint64_t)v3 >= a2[2])
  {
    result = sub_20C01C840(a2);
    v4 = (_DWORD *)result;
  }
  else
  {
    *(_QWORD *)v3 = 0;
    v4 = v3 + 2;
    v5 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(v3);
    result = (uint64_t)pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(v5 + 1);
  }
  a2[1] = (uint64_t)v4;
  return result;
}

uint64_t sub_20C01C840(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v12[5];

  v2 = *a1;
  v3 = (a1[1] - *a1) >> 3;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 61)
    sub_20BDDF694();
  v5 = (uint64_t)(a1 + 2);
  v6 = a1[2] - v2;
  if (v6 >> 2 > v4)
    v4 = v6 >> 2;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFF8)
    v7 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  v12[4] = a1 + 2;
  if (v7)
    v8 = (char *)sub_20BDDF6A8(v5, v7);
  else
    v8 = 0;
  v9 = &v8[8 * v3];
  v12[0] = v8;
  v12[1] = v9;
  v12[3] = &v8[8 * v7];
  *(_QWORD *)v9 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)v9 + 1);
  v12[2] = v9 + 8;
  sub_20BFD797C(a1, v12);
  v10 = a1[1];
  sub_20BFD7B28(v12);
  return v10;
}

void sub_20C01C918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD7B28((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01C92C(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  char v5;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  if (!sub_20C01CA0C(a1, a2))
  {
    *v4 = v7;
    v4[1] = v8;
    sub_20C01C9B8(a1);
  }
  *(_DWORD *)(a2 + 24) = 0;
  v5 = sub_20C01CD0C(a1, a2);
  if ((v5 & 1) == 0)
    sub_20C01CCB8(a1);
  return 1;
}

void sub_20C01C9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

void sub_20C01C9B8(uint64_t a1)
{
  sub_20C01CB3C(a1);
}

void sub_20C01C9C8()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01C9F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01CA0C(uint64_t a1, uint64_t a2)
{
  char v4;

  if ((sub_20C019F34() & 1) != 0)
    return 1;
  if ((sub_20C01E320(a1, a2) & 1) != 0)
    return 1;
  sub_20C01E7A8(a1, a2);
  if ((v4 & 1) != 0)
    return 1;
  else
    return sub_20C01CA6C(a1, a2);
}

uint64_t sub_20C01CA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  if ((_QWORD)v4 == *(_QWORD *)(a1 + 64) || *(_BYTE *)v4 != 46)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 + 1;
  *(_QWORD *)(a1 + 40) = v2;
  ++*(_QWORD *)(a1 + 56);
  v6[0] = v4;
  v6[1] = v5;
  v7 = a1 + 24;
  sub_20C01CB00((pxrInternal__aapl__pxrReserved__::SdfPath *)v6, a2);
  return 1;
}

void sub_20C01CAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

int *sub_20C01CB00(pxrInternal__aapl__pxrReserved__::SdfPath *a1, uint64_t a2)
{
  _DWORD *v3;
  uint64_t v4;

  v3 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::ReflexiveRelativePath(a1);
  v4 = *(_QWORD *)(a2 + 8);
  sub_20C01A074((int *)(v4 - 8), v3);
  return sub_20C01A0C8((int *)(v4 - 4), v3 + 1);
}

void sub_20C01CB3C(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01CC28(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01CBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01CC28(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0B35 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0B35 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01CCA4(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C01CCB8(uint64_t a1)
{
  sub_20C01CED8(a1);
}

void sub_20C01CCC8()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01CCF8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01CD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  if ((_QWORD)v4 == *(_QWORD *)(a1 + 64) || *(_BYTE *)v4 != 93)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 + 1;
  *(_QWORD *)(a1 + 40) = v2;
  ++*(_QWORD *)(a1 + 56);
  v6[0] = v4;
  v6[1] = v5;
  v7 = a1 + 24;
  sub_20C01CDA0((uint64_t)v6, a2);
  return 1;
}

void sub_20C01CD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

_DWORD *sub_20C01CDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::SdfPath *v5;
  uint64_t v6;
  int v8;
  int v9;
  int v10;
  int v11;

  v3 = *(_QWORD *)(a2 + 8);
  v10 = *(_DWORD *)(v3 - 8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(v3 - 8));
  v11 = *(_DWORD *)(v3 - 4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(v3 - 4));
  v4 = *(_QWORD *)(a2 + 8);
  sub_20BFD6F64(a2 + 16, (_DWORD *)(v4 - 8));
  *(_QWORD *)(a2 + 8) = v4 - 8;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(v4 - 16);
  if (*(_DWORD *)(a2 + 24))
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapper(v5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10, &v8);
  else
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendTarget(v5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10, &v8);
  v6 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v6 - 8), &v8);
  sub_20BFD3F10((int *)(v6 - 4), &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  return sub_20BFD265C(&v10);
}

void sub_20C01CEB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void sub_20C01CED8(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01CFC4(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01CF64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01CFC4(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0BB0 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0BB0 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01D040(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01D054(_QWORD *a1, uint64_t *a2)
{
  _BYTE *v2;
  uint64_t v3;

  v2 = (_BYTE *)a1[4];
  if (v2 == (_BYTE *)a1[8] || *v2 != 46)
    return 0;
  v3 = a1[5] + 1;
  a1[4] = v2 + 1;
  a1[5] = v3;
  ++a1[7];
  sub_20C01D0AC(a1, a2);
  return 1;
}

uint64_t sub_20C01D0AC(_QWORD *a1, uint64_t *a2)
{
  if ((sub_20C01D16C((uint64_t)a1, (uint64_t)a2) & 1) == 0)
    sub_20C01D118((uint64_t)a1);
  sub_20C01D430(a1, a2);
  return 1;
}

void sub_20C01D10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

void sub_20C01D118(uint64_t a1)
{
  sub_20C01D2B4(a1);
}

void sub_20C01D128()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01D158(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01D16C(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01C480((__n128 *)a1);
  if ((_DWORD)v5)
  {
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01D1EC((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01D1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

_DWORD *sub_20C01D1EC(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  uint64_t v4;
  _DWORD *result;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  int v10;

  v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)(a2 + 8) - 8);
  sub_20C01A674(a1, &v8);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendRelationalAttribute(v3, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v8, &v9);
  v4 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v4 - 8), &v9);
  sub_20BFD3F10((int *)(v4 - 4), &v10);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  result = sub_20BFD265C(&v9);
  if ((v8 & 7) != 0)
  {
    v6 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  return result;
}

void sub_20C01D2B4(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01D3A0(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01D340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01D3A0(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0BF6 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0BF6 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01D41C(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01D430(_QWORD *a1, uint64_t *a2)
{
  int v4;

  if (sub_20C01D49C((uint64_t)a1, a2))
  {
    sub_20C01D530((uint64_t)a1, (uint64_t)a2);
    return 1;
  }
  sub_20C01D5D0((uint64_t)a1);
  if (v4)
  {
    sub_20C01D770((uint64_t)a1, a2);
    return 1;
  }
  return sub_20C01DEF4(a1, (uint64_t)a2);
}

uint64_t sub_20C01D49C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  if ((_QWORD)v4 == *(_QWORD *)(a1 + 64) || *(_BYTE *)v4 != 91)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 + 1;
  *(_QWORD *)(a1 + 40) = v2;
  ++*(_QWORD *)(a1 + 56);
  v6[0] = v4;
  v6[1] = v5;
  v7 = a1 + 24;
  sub_20C01C7E8((uint64_t)v6, a2);
  return 1;
}

void sub_20C01D524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01D530(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  char v5;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  if (!sub_20C01CA0C(a1, a2))
  {
    *v4 = v7;
    v4[1] = v8;
    sub_20C01C9B8(a1);
  }
  *(_DWORD *)(a2 + 24) = 0;
  v5 = sub_20C01CD0C(a1, a2);
  if ((v5 & 1) == 0)
    sub_20C01CCB8(a1);
  return 1;
}

void sub_20C01D5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12)
{
  _OWORD *v12;

  *v12 = a11;
  v12[1] = a12;
  *v12 = a9;
  v12[1] = a10;
  _Unwind_Resume(a1);
}

__n128 sub_20C01D5D0(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  __n128 result;
  char v4;
  __n128 v5;
  __n128 v6;

  v1 = (__n128 *)(a1 + 32);
  v5 = *(__n128 *)(a1 + 32);
  v6 = *(__n128 *)(a1 + 48);
  if (v5.n128_u64[0] == *(_QWORD *)(a1 + 64)
    || *(_BYTE *)v5.n128_u64[0] != 46
    || (v2 = *(_QWORD *)(a1 + 40) + 1,
        *(_QWORD *)(a1 + 32) = v5.n128_u64[0] + 1,
        *(_QWORD *)(a1 + 40) = v2,
        ++*(_QWORD *)(a1 + 56),
        result.n128_u64[0] = sub_20C01D65C(a1).n128_u64[0],
        (v4 & 1) == 0))
  {
    result = v5;
    *v1 = v5;
    v1[1] = v6;
  }
  return result;
}

void sub_20C01D650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

__n128 sub_20C01D65C(uint64_t a1)
{
  __n128 result;
  __n128 v3;
  __int128 v4;

  if (sub_20C01D6A4((_QWORD *)a1))
  {
    v3 = *(__n128 *)(a1 + 32);
    v4 = *(_OWORD *)(a1 + 48);
    sub_20C01D710((_QWORD *)a1);
    result = v3;
    *(__n128 *)(a1 + 32) = v3;
    *(_OWORD *)(a1 + 48) = v4;
  }
  return result;
}

uint64_t sub_20C01D6A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v4;

  v1 = a1[4];
  if ((unint64_t)(a1[8] - v1) < 6)
    return 0;
  if (*(_DWORD *)v1 != 1886413165 || *(_WORD *)(v1 + 4) != 29285)
    return 0;
  v4 = a1[5] + 6;
  a1[4] = v1 + 6;
  a1[5] = v4;
  a1[7] += 6;
  return 1;
}

uint64_t sub_20C01D710(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v4;

  v1 = (unsigned __int8 *)a1[4];
  if (v1 == (unsigned __int8 *)a1[8])
    return 0;
  v2 = *v1;
  if ((v2 & 0xFFFFFFDF) - 65 >= 0x1A && v2 != 95 && (v2 - 48) > 9)
    return 0;
  v4 = a1[5] + 1;
  a1[4] = v1 + 1;
  a1[5] = v4;
  ++a1[7];
  return 1;
}

uint64_t sub_20C01D770(uint64_t a1, uint64_t *a2)
{
  if (!sub_20C01D840(a1, a2))
    sub_20C01D7EC(a1);
  sub_20C01D8D4(a1, (uint64_t)a2);
  sub_20C01DCB0(a1, (uint64_t)a2);
  return 1;
}

void sub_20C01D7E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

void sub_20C01D7EC(uint64_t a1)
{
  sub_20C01DB34(a1);
}

void sub_20C01D7FC()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01D82C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01D840(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  if ((_QWORD)v4 == *(_QWORD *)(a1 + 64) || *(_BYTE *)v4 != 91)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 + 1;
  *(_QWORD *)(a1 + 40) = v2;
  ++*(_QWORD *)(a1 + 56);
  v6[0] = v4;
  v6[1] = v5;
  v7 = a1 + 24;
  sub_20C01C7E8((uint64_t)v6, a2);
  return 1;
}

void sub_20C01D8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01D8D4(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  char v5;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  if (!sub_20C01CA0C(a1, a2))
  {
    *v4 = v7;
    v4[1] = v8;
    sub_20C01D964(a1);
  }
  *(_DWORD *)(a2 + 24) = 1;
  v5 = sub_20C01CD0C(a1, a2);
  if ((v5 & 1) == 0)
    sub_20C01CCB8(a1);
  return 1;
}

void sub_20C01D958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

void sub_20C01D964(uint64_t a1)
{
  sub_20C01D9B8(a1);
}

void sub_20C01D974()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01D9A4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_20C01D9B8(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01DAA4(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01DA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01DAA4(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0C44 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0C44 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01DB20(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C01DB34(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01DC20(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01DBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01DC20(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0C85 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0C85 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01DC9C(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

__n128 sub_20C01DCB0(uint64_t a1, uint64_t a2)
{
  __n128 *v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __n128 v6;

  v2 = (__n128 *)(a1 + 32);
  v5 = *(__n128 *)(a1 + 32);
  v6 = *(__n128 *)(a1 + 48);
  if (v5.n128_u64[0] == *(_QWORD *)(a1 + 64)
    || *(_BYTE *)v5.n128_u64[0] != 46
    || (v3 = *(_QWORD *)(a1 + 40) + 1,
        *(_QWORD *)(a1 + 32) = v5.n128_u64[0] + 1,
        *(_QWORD *)(a1 + 40) = v3,
        ++*(_QWORD *)(a1 + 56),
        (sub_20C01DD3C(a1, a2) & 1) == 0))
  {
    result = v5;
    *v2 = v5;
    v2[1] = v6;
  }
  return result;
}

void sub_20C01DD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01DD3C(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01DDD0((_QWORD *)a1);
  if ((_DWORD)v5)
  {
    while ((sub_20C01D710((_QWORD *)a1) & 1) != 0)
      ;
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01DE2C((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01DDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01DDD0(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v4;

  v1 = (unsigned __int8 *)a1[4];
  if (v1 == (unsigned __int8 *)a1[8])
    return 0;
  v2 = *v1;
  if ((v2 - 97) >= 0x1A && v2 != 95 && (v2 - 65) > 0x19)
    return 0;
  v4 = a1[5] + 1;
  a1[4] = v1 + 1;
  a1[5] = v4;
  ++a1[7];
  return 1;
}

_DWORD *sub_20C01DE2C(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  uint64_t v4;
  _DWORD *result;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  int v10;

  v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)(a2 + 8) - 8);
  sub_20C01A674(a1, &v8);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendMapperArg(v3, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v8, &v9);
  v4 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v4 - 8), &v9);
  sub_20BFD3F10((int *)(v4 - 4), &v10);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  result = sub_20BFD265C(&v9);
  if ((v8 & 7) != 0)
  {
    v6 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  return result;
}

uint64_t sub_20C01DEF4(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v4;

  v2 = (_BYTE *)a1[4];
  if (v2 == (_BYTE *)a1[8] || *v2 != 46)
    return 0;
  v4 = a1[5] + 1;
  a1[4] = v2 + 1;
  a1[5] = v4;
  ++a1[7];
  if ((sub_20C01DFC0((uint64_t)a1, a2) & 1) == 0)
    sub_20C01DF6C((uint64_t)a1);
  return 1;
}

void sub_20C01DF6C(uint64_t a1)
{
  sub_20C01E1A4(a1);
}

void sub_20C01DF7C()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01DFAC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01DFC0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;

  v4 = (_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 48);
  sub_20C01E040(a1);
  v6 = v5;
  if ((_DWORD)v5)
  {
    v10[0] = v8;
    v10[1] = v9;
    v11 = a1 + 24;
    sub_20C01E138((uint64_t)v10, a2);
  }
  else
  {
    *v4 = v8;
    v4[1] = v9;
  }
  return v6;
}

void sub_20C01E034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

__n128 sub_20C01E040(uint64_t a1)
{
  __n128 result;
  __n128 v3;
  __int128 v4;

  if (sub_20C01E088((_QWORD *)a1))
  {
    v3 = *(__n128 *)(a1 + 32);
    v4 = *(_OWORD *)(a1 + 48);
    sub_20C01D710((_QWORD *)a1);
    result = v3;
    *(__n128 *)(a1 + 32) = v3;
    *(_OWORD *)(a1 + 48) = v4;
  }
  return result;
}

uint64_t sub_20C01E088(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v4;

  v1 = a1[4];
  if ((unint64_t)(a1[8] - v1) < 0xA)
    return 0;
  if (*(_QWORD *)v1 != 0x6973736572707865 || *(_WORD *)(v1 + 8) != 28271)
    return 0;
  v4 = a1[5] + 10;
  a1[4] = v1 + 10;
  a1[5] = v4;
  a1[7] += 10;
  return 1;
}

_DWORD *sub_20C01E138(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v5;
  int v6;

  pxrInternal__aapl__pxrReserved__::SdfPath::AppendExpression((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)(a2 + 8) - 8), &v5);
  v3 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v3 - 8), &v5);
  sub_20BFD3F10((int *)(v3 - 4), &v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v6);
  return sub_20BFD265C(&v5);
}

void sub_20C01E1A4(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01E290(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01E230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01E290(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0CDALL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0CDALL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01E30C(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01E320(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01E390(a1, a2);
  if ((_DWORD)v5)
  {
    sub_20C01E5E8((__n128 *)a1, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01E384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01E390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = sub_20C01E3D8(a1, a2);
  if ((_DWORD)v4)
  {
    do
      sub_20C01E55C(a1, a2);
    while ((v5 & 1) != 0);
  }
  return v4;
}

uint64_t sub_20C01E3D8(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _OWORD v9[2];
  uint64_t v10;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01E458((_QWORD *)a1);
  if ((_DWORD)v5)
  {
    v9[0] = v7;
    v9[1] = v8;
    v10 = a1 + 24;
    sub_20C01E4B0((uint64_t)v9, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01E44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01E458(_QWORD *a1)
{
  _WORD *v1;
  uint64_t v3;

  v1 = (_WORD *)a1[4];
  if (a1[8] - (_QWORD)v1 < 2uLL || *v1 != 11822)
    return 0;
  v3 = a1[5] + 2;
  a1[4] = v1 + 1;
  a1[5] = v3;
  a1[7] += 2;
  return 1;
}

_DWORD *sub_20C01E4B0(uint64_t a1, uint64_t a2)
{
  _BOOL8 v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  int v9;

  v3 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(*(_QWORD *)(a2 + 8) - 8));
  if (!v3)
  {
    v4 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::ReflexiveRelativePath((pxrInternal__aapl__pxrReserved__::SdfPath *)v3);
    v5 = *(_QWORD *)(a2 + 8);
    sub_20C01A074((int *)(v5 - 8), v4);
    sub_20C01A0C8((int *)(v5 - 4), v4 + 1);
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)(a2 + 8) - 8), &v8);
  v6 = *(_QWORD *)(a2 + 8);
  sub_20BFD3EBC((int *)(v6 - 8), &v8);
  sub_20BFD3F10((int *)(v6 - 4), &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  return sub_20BFD265C(&v8);
}

__n128 sub_20C01E55C(uint64_t a1, uint64_t a2)
{
  __n128 *v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __n128 v6;

  v2 = (__n128 *)(a1 + 32);
  v5 = *(__n128 *)(a1 + 32);
  v6 = *(__n128 *)(a1 + 48);
  if (v5.n128_u64[0] == *(_QWORD *)(a1 + 64)
    || *(_BYTE *)v5.n128_u64[0] != 47
    || (v3 = *(_QWORD *)(a1 + 40) + 1,
        *(_QWORD *)(a1 + 32) = v5.n128_u64[0] + 1,
        *(_QWORD *)(a1 + 40) = v3,
        ++*(_QWORD *)(a1 + 56),
        (sub_20C01E3D8(a1, a2) & 1) == 0))
  {
    result = v5;
    *v2 = v5;
    v2[1] = v6;
  }
  return result;
}

void sub_20C01E5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

__n128 sub_20C01E5E8(__n128 *a1, uint64_t a2)
{
  __n128 *v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __n128 v6;

  v2 = a1 + 2;
  v5 = a1[2];
  v6 = a1[3];
  if (v5.n128_u64[0] == a1[4].n128_u64[0]
    || *(_BYTE *)v5.n128_u64[0] != 47
    || (v3 = a1[2].n128_u64[1] + 1,
        a1[2].n128_u64[0] = v5.n128_u64[0] + 1,
        a1[2].n128_u64[1] = v3,
        ++a1[3].n128_u64[1],
        (sub_20C01E674(a1, a2) & 1) == 0))
  {
    result = v5;
    *v2 = v5;
    v2[1] = v6;
  }
  return result;
}

void sub_20C01E668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01E674(_QWORD *a1, uint64_t a2)
{
  if (!sub_20C01E6C0((uint64_t)a1, a2))
    return sub_20C01E730(a1, a2);
  sub_20C01C358(a1, a2);
  return 1;
}

uint64_t sub_20C01E6C0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;

  v4 = (_OWORD *)(a1 + 32);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 48);
  v5 = sub_20C01A18C(a1, a2);
  if ((_DWORD)v5)
  {
    sub_20C01C310(a1, a2);
  }
  else
  {
    *v4 = v7;
    v4[1] = v8;
  }
  return v5;
}

void sub_20C01E724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01E730(_QWORD *a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v5;
  uint64_t result;

  v2 = (_BYTE *)a1[4];
  if (v2 == (_BYTE *)a1[8] || *v2 != 46)
    return 0;
  v5 = a1[5] + 1;
  a1[4] = v2 + 1;
  a1[5] = v5;
  ++a1[7];
  result = sub_20C01C400((uint64_t)a1, a2);
  if ((_DWORD)result)
  {
    sub_20C01C67C(a1, a2);
    return 1;
  }
  return result;
}

__n128 sub_20C01E7A8(uint64_t a1, uint64_t a2)
{
  __n128 *v4;
  __n128 result;
  __n128 v6;
  __n128 v7;

  v4 = (__n128 *)(a1 + 32);
  v6 = *(__n128 *)(a1 + 32);
  v7 = *(__n128 *)(a1 + 48);
  if (sub_20C01E6C0(a1, a2))
  {
    sub_20C01C358(a1, a2);
  }
  else if ((sub_20C01E730((_QWORD *)a1, a2) & 1) == 0)
  {
    result = v6;
    *v4 = v6;
    v4[1] = v7;
  }
  return result;
}

void sub_20C01E820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C01E82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  if ((_QWORD)v4 == *(_QWORD *)(a1 + 64) || *(_BYTE *)v4 != 46)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v4 + 1;
  *(_QWORD *)(a1 + 40) = v2;
  ++*(_QWORD *)(a1 + 56);
  v6[0] = v4;
  v6[1] = v5;
  v7 = a1 + 24;
  sub_20C01CB00((pxrInternal__aapl__pxrReserved__::SdfPath *)v6, a2);
  return 1;
}

void sub_20C01E8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  _OWORD *v10;

  *v10 = a9;
  v10[1] = a10;
  _Unwind_Resume(a1);
}

void sub_20C01E8C0(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01E9AC(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01E94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01E9AC(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0B76 & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0B76 & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01EA28(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01EA3C(uint64_t a1)
{
  uint64_t v2;

  if ((sub_20C01EACC(a1) & 1) == 0 && v2)
    sub_20C01EA78(a1);
  return 1;
}

void sub_20C01EA78(uint64_t a1)
{
  sub_20C01EB40(a1);
}

void sub_20C01EA88()
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::logic_error::logic_error(exception, "code should be unreachable: Control< T >::raise() did not throw an exception");
  __cxa_throw(exception, MEMORY[0x24BEDB720], MEMORY[0x24BEDAAC0]);
}

void sub_20C01EAB8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01EACC(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  int64x2_t v8;

  v1 = *(unsigned __int8 **)(a1 + 64);
  v2 = *(unsigned __int8 **)(a1 + 32);
  v3 = v1 - v2;
  if (v1 == v2)
    return 0;
  v4 = *v2;
  if (v4 != 10)
  {
    v6 = v3 >= 2 && v4 == 13;
    if (v6 && v2[1] == 10)
    {
      v5 = 2;
      goto LABEL_11;
    }
    return 0;
  }
  v5 = 1;
LABEL_11:
  v7 = 1;
  v8 = vdupq_n_s64(1uLL);
  v8.i64[0] = v5;
  *(int64x2_t *)(a1 + 40) = vaddq_s64(*(int64x2_t *)(a1 + 40), v8);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 32) = &v2[v5];
  return v7;
}

void sub_20C01EB40(uint64_t a1)
{
  void *exception;
  std::string *v3;
  __int128 v4;
  std::string v5;
  __int128 v6;
  std::string::size_type v7;

  exception = __cxa_allocate_exception(0x28uLL);
  sub_20C01EC2C(&v5);
  v3 = std::string::insert(&v5, 0, "parse error matching ");
  v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v7 = v3->__r_.__value_.__r.__words[2];
  v6 = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_20C01ADA0((uint64_t)exception, (uint64_t)&v6, a1);
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C01EBCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  int v22;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v22 & 1) == 0)
LABEL_8:
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_20C01EC2C(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)(0x800000020CAB0D1BLL & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)(0x800000020CAB0D1BLL & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C01ECA8(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor::Sdf_SubLayerListEditor(_QWORD *a1, uint64_t *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v9;

  v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPseudoRoot(v3, &v8);
  v4 = (unsigned int *)v8;
  v9 = v8;
  if (v8)
  {
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 + 1, v4));
  }
  v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v6)
    v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20C01ED84((uint64_t)a1, &v9, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 360), 3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v9);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  *a1 = off_24C5261A0;
  return a1;
}

void sub_20C01ED64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va1);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01ED84(uint64_t a1, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, int a4)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  std::string **v12;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v13;
  __int128 *v15[3];
  std::string *v16;
  __int128 *v17;
  __int128 **v18;

  *(_QWORD *)a1 = &unk_24C5262F0;
  v7 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  if (v7)
  {
    do
      v8 = __ldaxr((unsigned int *)v7);
    while (__stlxr(v8 + 1, (unsigned int *)v7));
  }
  v9 = *(_QWORD *)a3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)a3;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a1 + 16) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)a1 = &unk_24C526268;
  *(_QWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = a4;
  *(_QWORD *)(a1 + 48) = 0;
  v12 = (std::string **)(a1 + 48);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a2) & 1) == 0)
  {
    v13 = sub_20BFD5244(a2);
    memset(v15, 0, sizeof(v15));
    sub_20C020070(v13, a3, v15, (uint64_t)&v16);
    if (v12 != &v16)
      sub_20BE75818(a1 + 48, v16, v17, 0xAAAAAAAAAAAAAAABLL * (((char *)v17 - (char *)v16) >> 3));
    v18 = (__int128 **)&v16;
    sub_20BDE5038((void ***)&v18);
    v18 = v15;
    sub_20BDE5038((void ***)&v18);
  }
  return a1;
}

void sub_20C01EEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, void ***a16)
{
  _QWORD *v16;
  pxrInternal__aapl__pxrReserved__::SdfSpec *v17;
  uint64_t v18;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;

  a16 = &a13;
  sub_20BDE5038((void ***)&a16);
  a16 = (void ***)&a10;
  sub_20BDE5038((void ***)&a16);
  sub_20BDE5038(&a13);
  v20 = v16[4];
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stlxr(v22 - 2, v21));
  }
  *v16 = v18 + 16;
  v23 = v16[2];
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v17);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor::~Sdf_SubLayerListEditor(pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void **v8;

  *(_QWORD *)this = &unk_24C526268;
  v8 = (void **)((char *)this + 48);
  sub_20BDE5038(&v8);
  v2 = *((_QWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  *(_QWORD *)this = &unk_24C5262F0;
  v5 = *((_QWORD *)this + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor *)((char *)this + 8));
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor::~Sdf_SubLayerListEditor(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor::_OnEdit(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v7;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v8;
  const char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v16;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v17;
  char *v18;
  void *__p;
  const char *v20;
  uint64_t v21;
  const char *v22;
  char v23;
  void *v24;
  _BYTE *v25;

  v6 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8);
  v7 = sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8));
  v8 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v8)
    v8 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  __p = 0;
  v20 = 0;
  v21 = 0;
  sub_20C01F284(v7, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v8 + 368), (uint64_t)&__p, &v24);
  if (__p)
  {
    v20 = (const char *)__p;
    operator delete(__p);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3) == (v25 - (_BYTE *)v24) >> 4
    || (__p = "sdf/subLayerListEditor.cpp",
        v20 = "_OnEdit",
        v21 = 59,
        v22 = "virtual void pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor::_OnEdit(SdfListOpType, const std::v"
              "ector<std::string> &, const std::vector<std::string> &) const",
        v23 = 0,
        v18 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Sublayer offsets do not match sublayer paths", v9, v10), (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "oldValues.size() == oldLayerOffsets.size()", v18) & 1) != 0))
  {
    sub_20C020150((double *)&__p, 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3));
    v11 = *a4;
    if (a4[1] != *a4)
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
      do
      {
        v15 = sub_20C020210(*a3, a3[1], (unsigned __int8 **)(v11 + v13));
        if (v15 != a3[1])
          *(_OWORD *)((char *)__p + v12) = *((_OWORD *)v24 - 0x555555555555555 * ((unint64_t)(v15 - *a3) >> 3));
        ++v14;
        v11 = *a4;
        v13 += 24;
        v12 += 16;
      }
      while (v14 < 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3));
    }
    v16 = sub_20BFD5244(v6);
    v17 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v17)
      v17 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    sub_20C01F358(v16, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v17 + 368), (uint64_t)&__p);
    if (__p)
    {
      v20 = (const char *)__p;
      operator delete(__p);
    }
  }
  if (v24)
  {
    v25 = v24;
    operator delete(v24);
  }
}

void sub_20C01F238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C01F284@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetField(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)&v7);
  if (v8 && (sub_20BFD4578((pxrInternal__aapl__pxrReserved__::VtValue *)&v7) & 1) != 0)
  {
    if ((v8 & 4) != 0)
      a3 = (*(uint64_t (**)(uint64_t *))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(&v7);
    else
      a3 = v7;
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  sub_20BFD45F0(a4, *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 4);
  return sub_20BF4C2D8((uint64_t)&v7);
}

void sub_20C01F33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  _Unwind_Resume(exception_object);
}

BOOL sub_20C01F358(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3)
{
  _BOOL8 v5;
  _QWORD v7[3];

  v7[2] = *MEMORY[0x24BDAC8D0];
  v7[1] = &off_24C526368;
  sub_20C020690(v7, a3);
  v5 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  sub_20BF4C2D8((uint64_t)v7);
  return v5;
}

void sub_20C01F3E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C01F400(uint64_t a1)
{
  return *(_DWORD *)(a1 + 40) == 0;
}

BOOL sub_20C01F410(uint64_t a1)
{
  return *(_DWORD *)(a1 + 40) == 3;
}

double sub_20C01F420@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v3;
  char *v4;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v5;
  double result;
  __int128 v7;
  uint64_t v8;

  v3 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8);
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8)))
  {
    v4 = "List editor is expired";
  }
  else
  {
    v5 = sub_20BFD5244(v3);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::PermissionToEdit(v5) & 1) != 0)
    {
      *(_BYTE *)a2 = 0;
      *(_BYTE *)(a2 + 24) = 0;
      return result;
    }
    v4 = "Permission denied";
  }
  sub_20BDDC0E4(&v7, v4);
  result = *(double *)&v7;
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = 1;
  return result;
}

uint64_t sub_20C01F4A4(uint64_t a1, void *lpsrc)
{
  __int128 **v3;
  char *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  char v9;

  v3 = (__int128 **)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C526218, (const struct __class_type_info *)&unk_24C526228, 0);
  if (v3)
  {
    if (*(_DWORD *)(a1 + 40) == *((_DWORD *)v3 + 10))
    {
      sub_20C02070C(a1, v3 + 6);
      return 1;
    }
    v5 = "sdf/vectorListEditor.h";
    v6 = "CopyEdits";
    v7 = 223;
    v8 = "virtual BOOL pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLay"
         "erTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = pxrInternal__aapl__pxrReserved__::SdfSubLaye"
         "rTypePolicy, FieldStorageType = std::string]";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot copy from list editor in different mode");
  }
  else
  {
    v5 = "sdf/vectorListEditor.h";
    v6 = "CopyEdits";
    v7 = 218;
    v8 = "virtual BOOL pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLay"
         "erTypePolicy>::CopyEdits(const Sdf_ListEditor<TP> &) [TypePolicy = pxrInternal__aapl__pxrReserved__::SdfSubLaye"
         "rTypePolicy, FieldStorageType = std::string]";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot copy from list editor of different type");
  }
  return 0;
}

BOOL sub_20C01F584(uint64_t a1)
{
  int v1;
  __int128 *v3[3];
  __int128 **v4;

  v1 = *(_DWORD *)(a1 + 40);
  if (v1)
  {
    memset(v3, 0, sizeof(v3));
    sub_20C02070C(a1, v3);
    v4 = v3;
    sub_20BDE5038((void ***)&v4);
  }
  return v1 != 0;
}

void sub_20C01F5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BDE5038((void ***)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C01F5EC(uint64_t a1)
{
  int v1;
  __int128 *v3[3];
  __int128 **v4;

  v1 = *(_DWORD *)(a1 + 40);
  if (!v1)
  {
    memset(v3, 0, sizeof(v3));
    sub_20C02070C(a1, v3);
    v4 = v3;
    sub_20BDE5038((void ***)&v4);
  }
  return v1 == 0;
}

void sub_20C01F63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BDE5038((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C01F654(uint64_t a1, void **a2)
{
  uint64_t v2;
  void ***v5;
  uint64_t v6;
  __int128 **Items;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15[3];
  void ***v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 48;
  if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a1 + 56))
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v8);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems((uint64_t *)&v8, v2, *(_DWORD *)(a1 + 40));
    v15[0] = (void **)&unk_24C5264E8;
    v15[1] = (void **)a1;
    v15[2] = a2;
    v16 = v15;
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ModifyOperations(&v8, (uint64_t)v15, 1);
    v5 = v16;
    if (v16 == v15)
    {
      v6 = 4;
      v5 = v15;
    }
    else
    {
      if (!v16)
      {
LABEL_7:
        Items = (__int128 **)pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::GetItems((uint64_t)&v8, *(_DWORD *)(a1 + 40));
        sub_20C02070C(a1, Items);
        v15[0] = (void **)&v14;
        sub_20BDE5038(v15);
        v15[0] = (void **)&v13;
        sub_20BDE5038(v15);
        v15[0] = (void **)&v12;
        sub_20BDE5038(v15);
        v15[0] = (void **)&v11;
        sub_20BDE5038(v15);
        v15[0] = (void **)&v10;
        sub_20BDE5038(v15);
        v15[0] = (void **)&v9;
        sub_20BDE5038(v15);
        return;
      }
      v6 = 5;
    }
    ((void (*)(void))(*v5)[v6])();
    goto LABEL_7;
  }
}

void sub_20C01F7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v12 = *(_QWORD **)(v10 - 48);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 72);
  }
  else
  {
    if (!v12)
      goto LABEL_6;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_6:
  sub_20C020EAC(&a9);
  _Unwind_Resume(a1);
}

void sub_20C01F7F8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;

  v3 = a1 + 48;
  if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a1 + 56))
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v7);
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems(&v7, v3, *(_DWORD *)(a1 + 40));
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations((uint64_t)&v7, a2, a3);
    v14 = (void **)&v13;
    sub_20BDE5038(&v14);
    v14 = (void **)&v12;
    sub_20BDE5038(&v14);
    v14 = (void **)&v11;
    sub_20BDE5038(&v14);
    v14 = (void **)&v10;
    sub_20BDE5038(&v14);
    v14 = (void **)&v9;
    sub_20BDE5038(&v14);
    v14 = (void **)&v8;
    sub_20BDE5038(&v14);
  }
}

void sub_20C01F8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C020EAC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01F8DC(uint64_t a1, int a2, unint64_t a3, uint64_t a4, std::string **a5)
{
  uint64_t v10;
  __int128 **Items;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;

  if (*(_DWORD *)(a1 + 40) != a2)
    return 0;
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v13);
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems(&v13, a1 + 48, a2);
  v10 = pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ReplaceOperations(&v13, a2, a3, a4, a5);
  if ((v10 & 1) != 0)
  {
    Items = (__int128 **)pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::GetItems((uint64_t)&v13, a2);
    sub_20C02070C(a1, Items);
  }
  v20 = (void **)&v19;
  sub_20BDE5038(&v20);
  v20 = (void **)&v18;
  sub_20BDE5038(&v20);
  v20 = (void **)&v17;
  sub_20BDE5038(&v20);
  v20 = (void **)&v16;
  sub_20BDE5038(&v20);
  v20 = (void **)&v15;
  sub_20BDE5038(&v20);
  v20 = (void **)&v14;
  sub_20BDE5038(&v20);
  return v10;
}

void sub_20C01F9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C020EAC(&a9);
  _Unwind_Resume(a1);
}

void sub_20C01FA00(uint64_t a1, int a2, void *lpsrc)
{
  _DWORD *v5;
  _DWORD *v6;
  __int128 **Items;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[3];
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;

  v5 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C526218, (const struct __class_type_info *)&unk_24C526228, 0);
  if (v5)
  {
    v6 = v5;
    if (*(_DWORD *)(a1 + 40) == a2 || v5[10] == a2)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v15);
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems((uint64_t *)&v15, a1 + 48, a2);
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v8);
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems((uint64_t *)&v8, (uint64_t)(v6 + 12), a2);
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ComposeOperations((uint64_t *)&v15, (uint64_t)&v8, a2);
      Items = (__int128 **)pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::GetItems((uint64_t)&v15, a2);
      sub_20C02070C(a1, Items);
      v22 = (void **)&v14;
      sub_20BDE5038(&v22);
      v22 = (void **)&v13;
      sub_20BDE5038(&v22);
      v22 = (void **)&v12;
      sub_20BDE5038(&v22);
      v22 = (void **)&v11;
      sub_20BDE5038(&v22);
      v22 = (void **)&v10;
      sub_20BDE5038(&v22);
      v22 = (void **)&v9;
      sub_20BDE5038(&v22);
      v8 = (void **)&v21;
      sub_20BDE5038(&v8);
      v8 = (void **)&v20;
      sub_20BDE5038(&v8);
      v8 = (void **)&v19;
      sub_20BDE5038(&v8);
      v8 = (void **)&v18;
      sub_20BDE5038(&v8);
      v8 = (void **)&v17;
      sub_20BDE5038(&v8);
      v8 = (void **)v16;
      sub_20BDE5038(&v8);
    }
  }
  else
  {
    v15 = "sdf/vectorListEditor.h";
    v16[0] = "ApplyList";
    v16[1] = 322;
    v16[2] = "virtual void pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSu"
             "bLayerTypePolicy>::ApplyList(SdfListOpType, const Sdf_ListEditor<TP> &) [TypePolicy = pxrInternal__aapl__px"
             "rReserved__::SdfSubLayerTypePolicy, FieldStorageType = std::string]";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v15, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot apply from list editor of different type");
  }
}

void sub_20C01FBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
  sub_20C020EAC(&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_20C01FBF8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unsigned __int8 *v14;
  unsigned __int8 **j;
  unsigned __int8 *v16;
  int v17;
  unsigned __int8 *v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v20;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Schema;
  uint64_t *FieldDefinition;
  uint64_t *v23;
  uint64_t v24;
  void **v25;
  unint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned __int8 *v32;
  uint64_t v33;
  const char *Text;
  unint64_t v36;
  const char *v37;
  uint64_t *WhyNot;
  const char *v39;
  void *__p[2];
  char v41;
  char v42;
  int v43;
  int v44;
  char *v45;
  const char *v46;
  uint64_t v47;
  const char *v48;
  char v49;

  v5 = *a3;
  v6 = a3[1];
  v8 = *a4;
  v7 = a4[1];
  v9 = *a3 == v6 || v8 == v7;
  i = *a4;
  if (!v9)
  {
    for (i = *a4; v5 != v6 && i != v7; i += 24)
    {
      v28 = *(unsigned __int8 *)(v5 + 23);
      if ((v28 & 0x80u) == 0)
        v29 = *(unsigned __int8 *)(v5 + 23);
      else
        v29 = *(_QWORD *)(v5 + 8);
      v30 = *(unsigned __int8 *)(i + 23);
      v31 = (char)v30;
      if ((v30 & 0x80u) != 0)
        v30 = *(_QWORD *)(i + 8);
      if (v29 != v30)
        break;
      if (v31 >= 0)
        v32 = (unsigned __int8 *)i;
      else
        v32 = *(unsigned __int8 **)i;
      if ((v28 & 0x80) != 0)
      {
        if (memcmp(*(const void **)v5, v32, *(_QWORD *)(v5 + 8)))
          break;
      }
      else if (*(_BYTE *)(v5 + 23))
      {
        v33 = 0;
        while (*(unsigned __int8 *)(v5 + v33) == v32[v33])
        {
          if (v28 == ++v33)
            goto LABEL_55;
        }
        break;
      }
LABEL_55:
      v5 += 24;
    }
  }
  if (i != v7)
  {
    v11 = i;
    do
    {
      if (v8 != v11)
      {
        v12 = *(unsigned __int8 *)(v11 + 23);
        v13 = *(_QWORD *)(v11 + 8);
        if ((v12 & 0x80u) == 0)
          v14 = (unsigned __int8 *)*(unsigned __int8 *)(v11 + 23);
        else
          v14 = *(unsigned __int8 **)(v11 + 8);
        for (j = (unsigned __int8 **)v8; j != (unsigned __int8 **)v11; j += 3)
        {
          v16 = (unsigned __int8 *)*((unsigned __int8 *)j + 23);
          v17 = (char)v16;
          if ((char)v16 < 0)
            v16 = j[1];
          if (v14 == v16)
          {
            if (v17 >= 0)
              v18 = (unsigned __int8 *)j;
            else
              v18 = *j;
            if ((v12 & 0x80) != 0)
            {
              if (!memcmp(*(const void **)v11, v18, v13))
              {
LABEL_34:
                v45 = "sdf/listEditor.h";
                v46 = "_ValidateEdit";
                v47 = 262;
                v48 = "virtual BOOL pxrInternal__aapl__pxrReserved__::Sdf_ListEditor<pxrInternal__aapl__pxrReserved__::Sd"
                      "fSubLayerTypePolicy>::_ValidateEdit(SdfListOpType, const value_vector_type &, const value_vector_t"
                      "ype &) const [TypePolicy = pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy]";
                v49 = 0;
                v25 = __p;
                pxrInternal__aapl__pxrReserved__::TfStringify((char *)v11, (uint64_t)__p);
                if (v41 < 0)
                  v25 = (void **)__p[0];
                v26 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFFFF8;
                if (v26)
                {
                  v27 = (const char *)(v26 + 16);
                  if (*(char *)(v26 + 39) < 0)
                    v27 = *(const char **)v27;
                }
                else
                {
                  v27 = "";
                }
                sub_20BFD711C(a1, &v43);
                Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
                pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v45, 1, (pxrInternal__aapl__pxrReserved__ *)"Duplicate item '%s' not allowed for field '%s' on <%s>", (const char *)v25, v27, Text);
                pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v44);
                sub_20BFD265C(&v43);
                goto LABEL_60;
              }
            }
            else
            {
              if (!(_DWORD)v12)
                goto LABEL_34;
              v19 = 0;
              while (*(unsigned __int8 *)(v11 + v19) == v18[v19])
              {
                if (v12 == ++v19)
                  goto LABEL_34;
              }
            }
          }
        }
      }
      v11 += 24;
    }
    while (v11 != v7);
  }
  v20 = sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8));
  Schema = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::SdfSpec::GetSchema(v20);
  FieldDefinition = pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFieldDefinition(Schema, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a1 + 16));
  if (FieldDefinition)
  {
    if (i == v7)
    {
      return 1;
    }
    else
    {
      v23 = FieldDefinition;
      while (1)
      {
        sub_20C02115C(v23, i, __p);
        if (v42)
          break;
        i += 24;
        if (i == v7)
          return 1;
      }
      v45 = "sdf/listEditor.h";
      v46 = "_ValidateEdit";
      v47 = 279;
      v48 = "virtual BOOL pxrInternal__aapl__pxrReserved__::Sdf_ListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerT"
            "ypePolicy>::_ValidateEdit(SdfListOpType, const value_vector_type &, const value_vector_type &) const [TypePo"
            "licy = pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy]";
      v49 = 0;
      WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)__p);
      if (*((char *)WhyNot + 23) >= 0)
        v39 = (const char *)WhyNot;
      else
        v39 = (const char *)*WhyNot;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v45, 1, (pxrInternal__aapl__pxrReserved__ *)"%s", v39);
      if (v42)
      {
LABEL_60:
        if (v41 < 0)
          operator delete(__p[0]);
      }
      return 0;
    }
  }
  else
  {
    v45 = "sdf/listEditor.h";
    v46 = "_ValidateEdit";
    v47 = 273;
    v48 = "virtual BOOL pxrInternal__aapl__pxrReserved__::Sdf_ListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTyp"
          "ePolicy>::_ValidateEdit(SdfListOpType, const value_vector_type &, const value_vector_type &) const [TypePolicy"
          " = pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy]";
    v49 = 0;
    v36 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFFFF8;
    if (v36)
    {
      v37 = (const char *)(v36 + 16);
      if (*(char *)(v36 + 39) < 0)
        v37 = *(const char **)v37;
    }
    else
    {
      v37 = "";
    }
    v24 = 1;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v45, 1, (pxrInternal__aapl__pxrReserved__ *)"No field definition for field '%s'", v37);
  }
  return v24;
}

void sub_20C01FF84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, int a20,__int16 a21,char a22,char a23)
{
  if (a19)
  {
    if (a18 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C01FFC4(uint64_t a1, int a2)
{
  unsigned __int8 v3;

  if (*(_DWORD *)(a1 + 40) == a2)
    return (uint64_t *)(a1 + 48);
  if ((v3 & 1) != 0)
    return &pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy,std::string>::_GetOperations(pxrInternal__aapl__pxrReserved__::SdfListOpType)const::empty;
  {
    pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy,std::string>::_GetOperations(pxrInternal__aapl__pxrReserved__::SdfListOpType)const::empty = 0;
    *(_QWORD *)algn_25473B458 = 0;
    qword_25473B460 = 0;
    __cxa_atexit((void (*)(void *))sub_20BFBB378, &pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy,std::string>::_GetOperations(pxrInternal__aapl__pxrReserved__::SdfListOpType)const::empty, &dword_20BDBC000);
  }
  return &pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTypePolicy,std::string>::_GetOperations(pxrInternal__aapl__pxrReserved__::SdfListOpType)const::empty;
}

void sub_20C020058(pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_SubLayerListEditor::~Sdf_SubLayerListEditor(a1);
  operator delete(v1);
}

uint64_t sub_20C020070@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, __int128 **a3@<X2>, uint64_t a4@<X8>)
{
  __int128 **v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::SdfSpec::GetField(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)&v7);
  if (v8 && (sub_20BFD41F4((pxrInternal__aapl__pxrReserved__::VtValue *)&v7) & 1) != 0)
  {
    if ((v8 & 4) != 0)
      a3 = (__int128 **)(*(uint64_t (**)(__int128 ***))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(&v7);
    else
      a3 = v7;
  }
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  sub_20BE78B98((char *)a4, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a3[1] - (char *)*a3) >> 3));
  return sub_20BF4C2D8((uint64_t)&v7);
}

void sub_20C020134(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  _Unwind_Resume(exception_object);
}

double *sub_20C020150(double *a1, unint64_t a2)
{
  *a1 = 0.0;
  a1[1] = 0.0;
  a1[2] = 0.0;
  if (a2)
  {
    sub_20BE90F0C(a1, a2);
    sub_20C0201B0(a1, a2);
  }
  return a1;
}

void sub_20C020194(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double *sub_20C0201B0(double *result, uint64_t a2)
{
  double *v2;
  double *v3;
  uint64_t v4;
  double *v5;

  v2 = result;
  v3 = (double *)*((_QWORD *)result + 1);
  if (a2)
  {
    v4 = 16 * a2;
    v5 = &v3[2 * a2];
    do
    {
      result = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset(v3, 0.0, 1.0);
      v3 += 2;
      v4 -= 16;
    }
    while (v4);
    v3 = v5;
  }
  *((_QWORD *)v2 + 1) = v3;
  return result;
}

void sub_20C020208(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_20C020210(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v3;
  char v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;

  v3 = a1;
  if (a1 != a2)
  {
    v5 = *((_BYTE *)a3 + 23);
    if (v5 >= 0)
      v6 = (unsigned __int8 *)*((unsigned __int8 *)a3 + 23);
    else
      v6 = a3[1];
    if (v5 >= 0)
      v7 = (unsigned __int8 *)a3;
    else
      v7 = *a3;
    do
    {
      v8 = *(unsigned __int8 *)(v3 + 23);
      if ((v8 & 0x80u) == 0)
        v9 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 23);
      else
        v9 = *(unsigned __int8 **)(v3 + 8);
      if (v9 == v6)
      {
        if ((v8 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v3, v7, *(_QWORD *)(v3 + 8)))
            return v3;
        }
        else
        {
          if (!*(_BYTE *)(v3 + 23))
            return v3;
          v10 = 0;
          while (*(unsigned __int8 *)(v3 + v10) == v7[v10])
          {
            if (v8 == ++v10)
              return v3;
          }
        }
      }
      v3 += 24;
    }
    while (v3 != a2);
    return a2;
  }
  return v3;
}

uint64_t *sub_20C0202C4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void **sub_20C0202EC(void **a1, void **a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C020410(a1);
}

uint64_t sub_20C0202FC()
{
  return 1;
}

unint64_t sub_20C020304(uint64_t *a1)
{
  char v2;

  return sub_20C02046C((uint64_t)&v2, *a1);
}

BOOL sub_20C020328(double ***a1, uint64_t *a2)
{
  return sub_20C0204F4(*a1, *a2);
}

BOOL sub_20C020334(double ***a1, uint64_t a2)
{
  return sub_20C0204F4(*a1, a2);
}

uint64_t sub_20C020340()
{
  return 0;
}

_QWORD *sub_20C02034C(uint64_t **a1, _QWORD *a2)
{
  return sub_20C020608(a2, *a1);
}

void *sub_20C02035C()
{
  return &unk_24C524700;
}

uint64_t sub_20C020368()
{
  return 0;
}

uint64_t sub_20C020370()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C02037C()
{
  return 0;
}

uint64_t sub_20C020384()
{
  return 0;
}

BOOL sub_20C02038C(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAC1926 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C0203C4(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524700, a2, a3);
}

void *sub_20C0203E4()
{
  return &unk_24C524700;
}

uint64_t sub_20C0203F0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

_QWORD *sub_20C0203F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  a2[1] = &off_24C526368;
  return sub_20C020690(a2, v2);
}

void **sub_20C020410(void **a1)
{
  char *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void *v6;

  v2 = (char *)*a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v6 = *(void **)v2;
      if (*(_QWORD *)v2)
      {
        *((_QWORD *)v2 + 1) = v6;
        operator delete(v6);
      }
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C02046C(uint64_t a1, uint64_t a2)
{
  int8x16_t *v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t Hash;

  v2 = *(int8x16_t **)a2;
  v3 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v3)
  {
    v4 = 0;
    v5 = 0;
    v6 = v3 >> 4;
    do
    {
      Hash = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetHash(v2);
      if (v4)
      {
        v5 = Hash + ((Hash + v5 + (Hash + v5) * (Hash + v5)) >> 1);
      }
      else
      {
        v4 = 1;
        v5 = Hash;
      }
      ++v2;
      --v6;
    }
    while (v6);
  }
  else
  {
    v5 = 0;
  }
  return bswap64(0x9E3779B97F4A7C55 * v5);
}

BOOL sub_20C0204F4(double **a1, uint64_t a2)
{
  double *v2;
  double *v3;
  double *v4;
  _BOOL8 result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(double **)a2;
  if ((char *)v3 - (char *)*a1 != *(_QWORD *)(a2 + 8) - *(_QWORD *)a2)
    return 0;
  if (v2 == v3)
    return 1;
  do
  {
    result = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator==(v2, v4);
    if (!result)
      break;
    v2 += 2;
    v4 += 2;
  }
  while (v2 != v3);
  return result;
}

uint64_t sub_20C020564(uint64_t *a1)
{
  unsigned int v2;
  char *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  void *v8;

  v2 = atomic_load((unsigned int *)(*a1 + 24));
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x20uLL);
    v4 = *a1;
    *((_QWORD *)v3 + 1) = 0;
    *((_QWORD *)v3 + 2) = 0;
    *(_QWORD *)v3 = 0;
    sub_20BFD45F0(v3, *(const void **)v4, *(_QWORD *)(v4 + 8), (uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 4);
    v5 = (unsigned int *)(v3 + 24);
    atomic_store(0, (unsigned int *)v3 + 6);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v8 = (void *)*a1;
    *a1 = (uint64_t)v3;
    sub_20C020410(&v8);
  }
  return *a1;
}

void sub_20C0205F4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C020608(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_20BDDC1C8(a1, (uint64_t)"[ ", 2);
  v4 = *a2;
  v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      v6 = pxrInternal__aapl__pxrReserved__::operator<<(a1);
      sub_20BDDC1C8(v6, (uint64_t)" ", 1);
      v4 += 16;
    }
    while (v4 != v5);
  }
  sub_20BDDC1C8(a1, (uint64_t)"]", 1);
  return a1;
}

_QWORD *sub_20C020690(_QWORD *a1, uint64_t a2)
{
  char *v4;
  _QWORD *result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (char *)operator new(0x20uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  result = sub_20BFD45F0(v4, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 4);
  v6 = (unsigned int *)(v4 + 24);
  atomic_store(0, (unsigned int *)v4 + 6);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C0206F8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C02070C(uint64_t a1, __int128 **a2)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v4;
  uint64_t **v5;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v6;
  char v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned __int8 *v12;
  __int128 *v13;
  __int128 *v14;
  __int128 v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v19;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v20;
  void **v21[3];
  _BYTE v22[8];
  __int128 v23;
  uint64_t v24;
  const char *v25;
  char v26;
  void ***v27;

  v4 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8);
  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)(a1 + 8)))
  {
    *(_QWORD *)&v23 = "sdf/vectorListEditor.h";
    *((_QWORD *)&v23 + 1) = "_UpdateFieldData";
    v24 = 142;
    v25 = "void pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTypeP"
          "olicy>::_UpdateFieldData(const value_vector_type &) [TypePolicy = pxrInternal__aapl__pxrReserved__::SdfSubLaye"
          "rTypePolicy, FieldStorageType = std::string]";
    v26 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid owner.");
  }
  else
  {
    v5 = (uint64_t **)sub_20BFD5244(v4);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v5, (uint64_t *)&v23);
    v6 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&v23);
    v7 = pxrInternal__aapl__pxrReserved__::SdfLayer::PermissionToEdit(v6);
    v8 = *((_QWORD *)&v23 + 1);
    if (*((_QWORD *)&v23 + 1))
    {
      v9 = (unsigned int *)(*((_QWORD *)&v23 + 1) + 8);
      do
      {
        v10 = __ldxr(v9);
        v11 = v10 - 1;
      }
      while (__stlxr(v11, v9));
      if (!v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    }
    if ((v7 & 1) != 0)
    {
      v12 = *(unsigned __int8 **)(a1 + 48);
      v13 = *a2;
      v14 = a2[1];
      if ((char *)v14 - (char *)*a2 == *(_QWORD *)(a1 + 56) - (_QWORD)v12)
      {
        while (v13 != v14)
        {
          if (!sub_20BEB4EF8((uint64_t)&v23, (unsigned __int8 *)v13, v12))
            goto LABEL_15;
          v13 = (__int128 *)((char *)v13 + 24);
          v12 += 24;
        }
      }
      else
      {
LABEL_15:
        if ((*(unsigned int (**)(uint64_t, _QWORD, uint64_t, __int128 **))(*(_QWORD *)a1 + 96))(a1, *(unsigned int *)(a1 + 40), a1 + 48, a2))
        {
          pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v22);
          v23 = 0uLL;
          v24 = 0;
          sub_20BE78B98((char *)&v23, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
          v15 = *(_OWORD *)(a1 + 48);
          *(_OWORD *)(a1 + 48) = v23;
          v23 = v15;
          v16 = *(_QWORD *)(a1 + 64);
          *(_QWORD *)(a1 + 64) = v24;
          v24 = v16;
          v17 = *a2;
          v18 = a2[1];
          if (*a2 == v18)
          {
            v20 = sub_20BFD5244(v4);
            pxrInternal__aapl__pxrReserved__::SdfSpec::ClearField(v20, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a1 + 16));
          }
          else
          {
            memset(v21, 0, sizeof(v21));
            sub_20BE78B98((char *)v21, v17, v18, 0xAAAAAAAAAAAAAAABLL * (((char *)v18 - (char *)v17) >> 3));
            v19 = sub_20BFD5244(v4);
            sub_20C0209CC(v19, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a1 + 16), (__int128 **)v21);
            v27 = v21;
            sub_20BDE5038((void ***)&v27);
          }
          (*(void (**)(uint64_t, _QWORD, __int128 *, __int128 **))(*(_QWORD *)a1 + 104))(a1, *(unsigned int *)(a1 + 40), &v23, a2);
          v21[0] = (void **)&v23;
          sub_20BDE5038(v21);
          sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v22);
        }
      }
    }
    else
    {
      *(_QWORD *)&v23 = "sdf/vectorListEditor.h";
      *((_QWORD *)&v23 + 1) = "_UpdateFieldData";
      v24 = 147;
      v25 = "void pxrInternal__aapl__pxrReserved__::Sdf_VectorListEditor<pxrInternal__aapl__pxrReserved__::SdfSubLayerTyp"
            "ePolicy>::_UpdateFieldData(const value_vector_type &) [TypePolicy = pxrInternal__aapl__pxrReserved__::SdfSub"
            "LayerTypePolicy, FieldStorageType = std::string]";
      v26 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Layer is not editable.");
    }
  }
}

void sub_20C020970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, char a12, int a13, char a14)
{
  a9 = (void **)&a14;
  sub_20BDE5038(&a9);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&a12);
  _Unwind_Resume(a1);
}

BOOL sub_20C0209CC(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, __int128 **a3)
{
  _BOOL8 v5;
  _QWORD v7[3];

  v7[2] = *MEMORY[0x24BDAC8D0];
  v7[1] = &off_24C526420;
  sub_20C020E24(v7, a3);
  v5 = pxrInternal__aapl__pxrReserved__::SdfSpec::SetField(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  sub_20BF4C2D8((uint64_t)v7);
  return v5;
}

void sub_20C020A58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C020A74(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C020A9C(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C020BFC(a1);
}

uint64_t sub_20C020AAC()
{
  return 1;
}

unint64_t sub_20C020AB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v1 = *a1;
  v3 = 0;
  v4 = 0;
  sub_20BFB7FC4((unint64_t)&v3, *(uint64_t **)v1, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(v1 + 8) - *(_QWORD *)v1) >> 3));
  return bswap64(0x9E3779B97F4A7C55 * v3);
}

uint64_t sub_20C020B14(unsigned __int8 ***a1, uint64_t *a2)
{
  return sub_20C020C5C(*a1, *a2);
}

uint64_t sub_20C020B20(unsigned __int8 ***a1, uint64_t a2)
{
  return sub_20C020C5C(*a1, a2);
}

uint64_t sub_20C020B2C()
{
  return 0;
}

_QWORD *sub_20C020B38(uint64_t **a1, _QWORD *a2)
{
  return sub_20C020D88(a2, *a1);
}

void *sub_20C020B48()
{
  return &unk_24C51BE10;
}

uint64_t sub_20C020B54()
{
  return 0;
}

uint64_t sub_20C020B5C()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C020B68()
{
  return 0;
}

uint64_t sub_20C020B70()
{
  return 0;
}

BOOL sub_20C020B78(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAC18D0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C020BB0(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51BE10, a2, a3);
}

void *sub_20C020BD0()
{
  return &unk_24C51BE10;
}

uint64_t sub_20C020BDC(uint64_t a1)
{
  return *(_QWORD *)a1;
}

char *sub_20C020BE4@<X0>(__int128 ***a1@<X0>, _QWORD *a2@<X8>)
{
  __int128 **v2;

  v2 = *a1;
  a2[1] = &off_24C526420;
  return sub_20C020E24(a2, v2);
}

void ***sub_20C020BFC(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 3);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2;
      sub_20BDE5038(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

uint64_t sub_20C020C5C(unsigned __int8 **a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t result;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *(unsigned __int8 **)a2;
  if (v3 - *a1 != *(_QWORD *)(a2 + 8) - *(_QWORD *)a2)
    return 0;
  if (v2 == v3)
    return 1;
  do
  {
    result = sub_20BEB4EF8((uint64_t)&v6, v2, v4);
    if (!(_DWORD)result)
      break;
    v2 += 24;
    v4 += 24;
  }
  while (v2 != v3);
  return result;
}

__int128 **sub_20C020CD8(__int128 ***a1)
{
  unsigned int v2;
  char *v3;
  __int128 **v4;
  unsigned int *v5;
  unsigned int v6;
  __int128 **v8;

  v2 = atomic_load((unsigned int *)*a1 + 6);
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x20uLL);
    v4 = *a1;
    *((_QWORD *)v3 + 1) = 0;
    *((_QWORD *)v3 + 2) = 0;
    *(_QWORD *)v3 = 0;
    sub_20BE78B98(v3, *v4, v4[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v4[1] - (char *)*v4) >> 3));
    v5 = (unsigned int *)(v3 + 24);
    atomic_store(0, (unsigned int *)v3 + 6);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v8 = *a1;
    *a1 = (__int128 **)v3;
    sub_20C020BFC((void ***)&v8);
  }
  return *a1;
}

void sub_20C020D74(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C020D88(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  sub_20BDDC1C8(a1, (uint64_t)"[ ", 2);
  v4 = *a2;
  v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      v6 = *(char *)(v4 + 23);
      if (v6 >= 0)
        v7 = v4;
      else
        v7 = *(_QWORD *)v4;
      if (v6 >= 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = *(_QWORD *)(v4 + 8);
      v9 = sub_20BDDC1C8(a1, v7, v8);
      sub_20BDDC1C8(v9, (uint64_t)" ", 1);
      v4 += 24;
    }
    while (v4 != v5);
  }
  sub_20BDDC1C8(a1, (uint64_t)"]", 1);
  return a1;
}

char *sub_20C020E24(_QWORD *a1, __int128 **a2)
{
  char *v4;
  char *result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (char *)operator new(0x20uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  result = sub_20BE78B98(v4, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  v6 = (unsigned int *)(v4 + 24);
  atomic_store(0, (unsigned int *)v4 + 6);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C020E98(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void **sub_20C020EAC(void **a1)
{
  void **v3;

  v3 = a1 + 16;
  sub_20BDE5038(&v3);
  v3 = a1 + 13;
  sub_20BDE5038(&v3);
  v3 = a1 + 10;
  sub_20BDE5038(&v3);
  v3 = a1 + 7;
  sub_20BDE5038(&v3);
  v3 = a1 + 4;
  sub_20BDE5038(&v3);
  v3 = a1 + 1;
  sub_20BDE5038(&v3);
  return a1;
}

__n128 sub_20C020F3C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &unk_24C5264E8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_20C020F78(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &unk_24C5264E8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_20C020F9C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_20C020FF4(*(_QWORD *)(a1 + 16), a2, a3);
}

uint64_t sub_20C020FAC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C526558))
    return a1 + 8;
  else
    return 0;
}

void *sub_20C020FE8()
{
  return &unk_24C526558;
}

void sub_20C020FF4(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *__p[2];
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a1 + 24);
  if (!v3)
    sub_20BE9E974();
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 48))(__p, v3, a2);
  if (v7)
  {
    if (SHIBYTE(v6) < 0)
    {
      sub_20BDDBFAC((_BYTE *)a3, __p[0], (unint64_t)__p[1]);
    }
    else
    {
      *(_OWORD *)a3 = *(_OWORD *)__p;
      *(_QWORD *)(a3 + 16) = v6;
    }
    *(_BYTE *)(a3 + 24) = 1;
  }
  else
  {
    sub_20C0210BC(a3, (__int128 *)__p);
  }
  if (v7)
  {
    if (SHIBYTE(v6) < 0)
      operator delete(__p[0]);
  }
}

void sub_20C021098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C0210BC(uint64_t a1, __int128 *a2)
{
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 24) = 0;
  sub_20C021104((_OWORD *)a1, a2);
  return a1;
}

void sub_20C0210E8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 24))
    sub_20C96B518(v1);
  _Unwind_Resume(exception_object);
}

_OWORD *sub_20C021104(_OWORD *__dst, __int128 *a2)
{
  _BYTE *v2;
  __int128 v3;

  if (*((_BYTE *)a2 + 24))
  {
    v2 = __dst;
    if (*((char *)a2 + 23) < 0)
    {
      __dst = sub_20BDDBFAC(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    }
    else
    {
      v3 = *a2;
      *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
      *__dst = v3;
    }
    v2[24] = 1;
  }
  return __dst;
}

uint64_t *sub_20C02115C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  void (*v3)(uint64_t, unsigned int **);
  uint64_t v4;
  unsigned int *v5[3];

  v5[2] = *(unsigned int **)MEMORY[0x24BDAC8D0];
  v3 = (void (*)(uint64_t, unsigned int **))result[9];
  if (v3)
  {
    v4 = *result;
    v5[1] = (unsigned int *)&off_24C520700;
    sub_20BF77444(v5, a2);
    v3(v4, v5);
    return (uint64_t *)sub_20BF4C2D8((uint64_t)v5);
  }
  else
  {
    *a3 = 0;
    a3[24] = 0;
  }
  return result;
}

void sub_20C0211F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext::Sdf_TextParserContext(pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *this)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v2;
  _DWORD *v3;

  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset((double *)this + 12, 0.0, 1.0);
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 23) = (char *)this + 192;
  *((_QWORD *)this + 25) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_QWORD *)this + 22) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)this + 54);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)this + 55);
  *((_BYTE *)this + 232) = 0;
  *((_BYTE *)this + 256) = 0;
  *((_QWORD *)this + 54) = 0;
  *((_QWORD *)this + 55) = 0;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_QWORD *)this + 52) = (char *)this + 424;
  *((_QWORD *)this + 53) = 0;
  *((_DWORD *)this + 112) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::Sdf_ParserValueContext((pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)((char *)this + 456));
  *((_QWORD *)this + 96) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C021650((_QWORD *)this + 97, 1uLL);
  *((_BYTE *)this + 800) = 0;
  *((_QWORD *)this + 101) = 0;
  v3 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v2);
  sub_20BFD6E54((_DWORD *)this + 204, v3);
  sub_20BFD6EA4((_DWORD *)this + 205, v3 + 1);
  *((_QWORD *)this + 103) = 0;
  *((_QWORD *)this + 105) = 0;
  *((_QWORD *)this + 107) = 0;
  *((_WORD *)this + 432) = 0;
  *(_OWORD *)((char *)this + 872) = 0u;
  *(_OWORD *)((char *)this + 888) = 0u;
  *(_OWORD *)((char *)this + 904) = 0u;
  *(_OWORD *)((char *)this + 920) = 0u;
  *(_OWORD *)((char *)this + 936) = 0u;
  *(_OWORD *)((char *)this + 952) = 0u;
  *((_DWORD *)this + 242) = 1;
  *((_QWORD *)this + 122) = 0;
  return this;
}

void sub_20C021384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  void *v21;

  sub_20C0218E4(v16);
  sub_20C0216CC((void ***)&a12);
  sub_20BF4C2D8(v12 + 760);
  sub_20C0214F8(v15);
  v18 = *(_QWORD *)(v12 + 440);
  if ((v18 & 7) != 0)
  {
    v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
  sub_20BFE4CE8(v17 + 184, *(_QWORD **)(v12 + 424));
  a12 = v17 + 160;
  sub_20C021818((void ***)&a12);
  a12 = v17 + 136;
  sub_20C021740((void ***)&a12);
  a12 = v17 + 112;
  sub_20BFD6F90((void ***)&a12);
  a12 = v17 + 88;
  sub_20BFD6F90((void ***)&a12);
  a12 = v17 + 56;
  sub_20BFD6F90((void ***)&a12);
  a12 = v17 + 32;
  sub_20BFD6F90((void ***)&a12);
  if (*(_BYTE *)(v12 + 256))
  {
    a12 = v17;
    sub_20BFD6F90((void ***)&a12);
  }
  sub_20BFD1A18(v14);
  sub_20BFED2B4(v13, *(_QWORD **)(v12 + 192));
  sub_20BEEB2B8((void ***)&a12);
  v21 = *(void **)(v12 + 136);
  if (v21)
  {
    *(_QWORD *)(v12 + 144) = v21;
    operator delete(v21);
  }
  sub_20BDE5038((void ***)&a12);
  if (*(char *)(v12 + 95) < 0)
    operator delete(*(void **)(v12 + 72));
  if (*(char *)(v12 + 71) < 0)
    operator delete(*(void **)(v12 + 48));
  if (*(char *)(v12 + 47) < 0)
    operator delete(*(void **)(v12 + 24));
  if (*(char *)(v12 + 23) < 0)
    operator delete(*(void **)v12);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0214F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void **v9;

  if (*(char *)(a1 + 303) < 0)
    operator delete(*(void **)(a1 + 280));
  v2 = *(_QWORD **)(a1 + 264);
  if (v2 == (_QWORD *)(a1 + 240))
  {
    v3 = 4;
    v2 = (_QWORD *)(a1 + 240);
  }
  else
  {
    if (!v2)
      goto LABEL_8;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_8:
  v4 = *(_QWORD **)(a1 + 200);
  if (v4 == (_QWORD *)(a1 + 176))
  {
    v5 = 4;
    v4 = (_QWORD *)(a1 + 176);
  }
  else
  {
    if (!v4)
      goto LABEL_13;
    v5 = 5;
  }
  (*(void (**)(void))(*v4 + 8 * v5))();
LABEL_13:
  if (*(char *)(a1 + 175) < 0)
    operator delete(*(void **)(a1 + 152));
  if (*(char *)(a1 + 143) < 0)
    operator delete(*(void **)(a1 + 120));
  v6 = *(void **)(a1 + 88);
  if (v6)
  {
    *(_QWORD *)(a1 + 96) = v6;
    operator delete(v6);
  }
  v9 = (void **)(a1 + 64);
  sub_20C0215E0(&v9);
  v7 = *(void **)(a1 + 8);
  if (v7)
  {
    *(_QWORD *)(a1 + 16) = v7;
    operator delete(v7);
  }
  return a1;
}

void sub_20C0215E0(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = sub_20BFCD42C(v4 - 56);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *sub_20C021650(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_20BDDF654(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_20C0216B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20C0216CC(&a9);
  _Unwind_Resume(a1);
}

void sub_20C0216CC(void ***a1)
{
  void **v1;
  _QWORD ***v2;
  _QWORD ***v4;
  void *v5;

  v1 = *a1;
  v2 = (_QWORD ***)**a1;
  if (v2)
  {
    v4 = (_QWORD ***)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
        sub_20BF49F14(--v4, 0);
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C021740(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 56;
        sub_20C0217C4((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C0217C4(uint64_t a1, uint64_t a2)
{
  sub_20BF49F14((_QWORD ***)(a2 + 48), 0);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 28));
  sub_20BFD265C((_DWORD *)(a2 + 24));
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

void sub_20C021818(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        sub_20C02189C((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C02189C(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 28));
  sub_20BFD265C((_DWORD *)(a2 + 24));
  if (*(char *)(a2 + 23) < 0)
    operator delete(*(void **)a2);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C0218E4(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetupValue(std::string *a1, uint64_t a2)
{
  return pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::SetupFactory(a2 + 456, a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_MatchMagicIdentifier(uint64_t a1, uint64_t *a2)
{
  const std::string *v3;
  std::string *v4;
  __int128 v5;
  void *v6;
  int v7;
  void **v8;
  std::string::size_type size;
  size_t v10;
  std::string *p_str;
  const char *v12;
  char *v13;
  std::string *v14;
  const char *v15;
  std::string *v16;
  _QWORD *v17;
  const char *v18;
  size_t v19;
  _QWORD *v20;
  uint64_t *v21;
  void *v22;
  char *v23;
  std::string *p_p;
  std::string __p;
  std::string v26;
  const char *v27;
  char v28;
  void *v29[2];
  int64_t v30;
  std::string __str;
  char v32;

  v3 = (const std::string *)sub_20C007CCC(a1);
  pxrInternal__aapl__pxrReserved__::TfStringTrimRight(" \n\t\r", v3, &__str);
  std::operator+<char>();
  v4 = std::string::append(&v26, " ");
  v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v30 = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)v29 = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v26.__r_.__value_.__l.__data_);
  v6 = (void *)HIBYTE(v30);
  v7 = SHIBYTE(v30);
  if (v30 >= 0)
    v8 = v29;
  else
    v8 = (void **)v29[0];
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  else
    size = __str.__r_.__value_.__l.__size_;
  v10 = strlen((const char *)v8);
  if (size >= v10
    && ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
      ? (p_str = &__str)
      : (p_str = (std::string *)__str.__r_.__value_.__r.__words[0]),
        !strncmp((const char *)p_str, (const char *)v8, v10)))
  {
    if (*((char *)a2 + 47) < 0)
    {
      if (!a2[4])
        goto LABEL_25;
    }
    else if (!*((_BYTE *)a2 + 47))
    {
      goto LABEL_25;
    }
    v17 = a2 + 3;
    if (*((char *)a2 + 47) >= 0)
      v18 = (const char *)(a2 + 3);
    else
      v18 = (const char *)a2[3];
    v19 = strlen(v18);
    if (size < v19 || strcmp((const char *)p_str + size - v19, v18))
    {
      v26.__r_.__value_.__r.__words[0] = (std::string::size_type)"sdf/textParserHelpers.cpp";
      v26.__r_.__value_.__l.__size_ = (std::string::size_type)"_MatchMagicIdentifier";
      v26.__r_.__value_.__r.__words[2] = 61;
      v27 = "void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_MatchMagicIdentifier(const Sdf_ParserHelpe"
            "rs::Value &, Sdf_TextParserContext *)";
      v28 = 0;
      v20 = a2 + 6;
      if (*((char *)a2 + 71) < 0)
        v20 = (_QWORD *)*v20;
      v21 = a2;
      if (*((char *)a2 + 23) < 0)
        v21 = (uint64_t *)*a2;
      if (v7 >= 0)
        v22 = v6;
      else
        v22 = v29[1];
      std::string::basic_string(&__p, &__str, (std::string::size_type)v22, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v32);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (*((char *)a2 + 47) < 0)
        v17 = (_QWORD *)*v17;
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v26, (pxrInternal__aapl__pxrReserved__ *)"File '%s' is not the latest %s version (found '%s', expected '%s'). The file may parse correctly and yield incorrect results.", v23, v20, v21, p_p, v17);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringTrim(" \n\t\r", &__str, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v14 = &__p;
    else
      v14 = (std::string *)__p.__r_.__value_.__r.__words[0];
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Magic Cookie '%s'. Expected prefix of '%s'", v12, v13, v14, v8);
    if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = &v26;
    else
      v16 = (std::string *)v26.__r_.__value_.__r.__words[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v16, v15);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    LOBYTE(v7) = HIBYTE(v30);
  }
LABEL_25:
  if ((v7 & 0x80) != 0)
    operator delete(v29[0]);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_20C021BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  char v32;
  uint64_t v33;

  if (a18 < 0)
    operator delete(__p);
  if (v32 < 0)
    operator delete(a27);
  if (*(char *)(v33 - 73) < 0)
    operator delete(*(void **)(v33 - 96));
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2, const char *a3)
{
  uint64_t v5;
  const char *Text;
  const char *v7;
  char *v8;
  const std::string::value_type *p_p;
  std::string::size_type v10;
  void *v11;
  int v12;
  void *__p;
  const char *v14;
  uint64_t v15;
  const char *v16;
  char v17;
  std::string v18;
  void (*v19[5])(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD);

  v19[4] = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x24BDAC8D0];
  v5 = *((unsigned int *)this + 242);
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 816));
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s in <%s> on line %i", v7, v8, a2, Text, v5);
  if (*((char *)this + 71) < 0)
  {
    if (!*((_QWORD *)this + 7))
      goto LABEL_13;
  }
  else if (!*((_BYTE *)this + 71))
  {
    goto LABEL_13;
  }
  std::operator+<char>();
  if (v15 >= 0)
    p_p = (const std::string::value_type *)&__p;
  else
    p_p = (const std::string::value_type *)__p;
  if (v15 >= 0)
    v10 = HIBYTE(v15);
  else
    v10 = (std::string::size_type)v14;
  std::string::append(&v18, p_p, v10);
  if (SHIBYTE(v15) < 0)
    operator delete(__p);
LABEL_13:
  std::string::append(&v18, "\n");
  v19[0] = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_20C037274;
  v19[1] = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))v5;
  __p = "sdf/textParserHelpers.cpp";
  v14 = "_RaiseError";
  v15 = 996;
  v16 = "void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(Sdf_TextParserContext *, const char *)";
  v17 = 0;
  v11 = &unk_24C51B120;
  v12 = 3;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, v19, (uint64_t *)&v11, (uint64_t *)&v18);
  *((_BYTE *)this + 800) = 1;
  sub_20BEBAE7C((uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v19);
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v18.__r_.__value_.__l.__data_);
}

void sub_20C021DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a19 < 0)
    operator delete(__p);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_GetPermissionFromString(uint64_t *a1, char *a2, char *a3)
{
  int v4;
  uint64_t v5;
  const char *v10;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  char v13;

  if (*((char *)a1 + 23) < 0)
  {
    v5 = a1[1];
    if (v5 == 6 && *(_DWORD *)*a1 == 1818391920 && *(_WORD *)(*a1 + 4) == 25449)
      return 0;
    if (v5 != 7)
    {
      a1 = (uint64_t *)*a1;
      goto LABEL_25;
    }
    a1 = (uint64_t *)*a1;
LABEL_12:
    if (*(_DWORD *)a1 == 1986622064 && *(_DWORD *)((char *)a1 + 3) == 1702125942)
      return 1;
    goto LABEL_25;
  }
  v4 = *((unsigned __int8 *)a1 + 23);
  if (v4 == 6)
  {
    if (*(_DWORD *)a1 == 1818391920 && *((_WORD *)a1 + 2) == 25449)
      return 0;
    goto LABEL_25;
  }
  if (v4 == 7)
    goto LABEL_12;
LABEL_25:
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid permission constant", a2, a3, a1);
  if (v13 >= 0)
    p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
  else
    p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
  pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, p_p, v10);
  if (v13 < 0)
    operator delete(__p);
  return 0;
}

void sub_20C021F30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_GetDisplayUnitFromString(uint64_t a1, pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *a2)
{
  uint64_t *UnitFromName;
  const char *v5;
  char *v6;
  uint64_t v7;
  const char *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  char v12;

  UnitFromName = pxrInternal__aapl__pxrReserved__::SdfGetUnitFromName(a1);
  if (!*((_DWORD *)UnitFromName + 2)
    && !strcmp((const char *)(*(_QWORD *)(MEMORY[0x24BEDB798] + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*UnitFromName + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    if (*(char *)(a1 + 23) >= 0)
      v7 = a1;
    else
      v7 = *(_QWORD *)a1;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid display unit", v5, v6, v7);
    if (v12 >= 0)
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(a2, p_p, v8);
    if (v12 < 0)
      operator delete(__p);
  }
  return *UnitFromName;
}

void sub_20C022004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_ValueAppendAtomic(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::AppendValue((int *)(a2 + 456), a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_ValueSetAtomic(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  char *v3;
  const char *v4;
  char *v5;
  const char *v6;
  void **v7;
  const char *v8;
  char *v9;
  void **v10;
  const char *v11;
  void **v12;
  void *v13[2];
  uint64_t v14;
  void *__p[2];
  char v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = (char *)this + 456;
  if ((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::IsRecordingString((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 456)) & 1) != 0
    || !*((_BYTE *)this + 664))
  {
    v13[0] = 0;
    v13[1] = 0;
    v14 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::ProduceValue((uint64_t)v3, v13, v5, __p);
    sub_20BF4B5D8((_QWORD *)this + 95, __p);
    sub_20BF4C2D8((uint64_t)__p);
    if (!*((_QWORD *)this + 96))
    {
      v10 = v13;
      if (v14 < 0)
        v10 = (void **)v13[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Error parsing simple value: %s", v8, v9, v10);
      if (v16 >= 0)
        v12 = __p;
      else
        v12 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v12, v11);
      if (v16 < 0)
        operator delete(__p[0]);
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Type name has [] for non-shaped value!\n", v4, v5);
    if (v14 >= 0)
      v7 = v13;
    else
      v7 = (void **)v13[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v7, v6);
  }
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
}

void sub_20C022160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimSetInheritListItems(int a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void **v8;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v9;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  uint64_t *WhyNot;
  const char *v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v16;
  void *v17;
  char v18;
  void *__p[2];
  char v20;
  char v21;
  uint64_t v22;
  uint64_t i;

  v5 = *(_QWORD *)(a2 + 320);
  v6 = *(_QWORD *)(a2 + 328);
  if (a1 && v5 == v6)
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Setting inherit paths to None (or empty list) is only allowed when setting explicit inherit paths, not for list editing", (const char *)a2, a3);
    if (v20 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v8, v7);
LABEL_7:
    if (v20 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 320);
    for (i = v6; ; v6 = i)
    {
      if (v5 == v6)
      {
        v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v10)
          v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        sub_20C022338((_QWORD *)v10 + 24, a1, a2 + 320, (uint64_t *)a2);
        return;
      }
      v9 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)sub_20BFD71C4(&v22, a2, a3);
      pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidInheritPath(v9, (uint64_t)__p);
      if (v21)
        break;
      sub_20BFD7240(&v22);
      v5 = v22;
    }
    WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)__p);
    if (*((char *)WhyNot + 23) >= 0)
      v14 = (uint64_t)WhyNot;
    else
      v14 = *WhyNot;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v12, v13, v14);
    if (v18 >= 0)
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v17;
    else
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v17;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v16, v15);
    if (v18 < 0)
      operator delete(v17);
    if (v21)
      goto LABEL_7;
  }
}

void sub_20C0222F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a22)
  {
    if (a21 < 0)
      operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_20C022338(_QWORD *a1, int a2, uint64_t a3, uint64_t *a4)
{
  _DWORD *v8;
  _DWORD *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  void ***v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  void ***v19;
  uint64_t v20;
  _DWORD *v21;
  char v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void ***v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v8 = *(_DWORD **)a3;
  v9 = *(_DWORD **)(a3 + 8);
  v10 = (unint64_t)v9 - *(_QWORD *)a3;
  if (v10 >= 0x10)
  {
    if (v10 > 0x57)
    {
      if (v8 != v9)
      {
        while (1)
        {
          v21 = v8 + 2;
          if (v8 + 2 == v9)
            break;
          v22 = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v8 + 2));
          v8 = v21;
          if ((v22 & 1) == 0)
          {
            v9 = v21 - 2;
            break;
          }
        }
        if (v9 != *(_DWORD **)(a3 + 8) && sub_20C02846C((_DWORD **)a3))
        {
LABEL_20:
          v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
          if (v23)
          {
            v24 = (const char *)(v23 + 16);
            if (*(char *)(v23 + 39) < 0)
              v24 = *(const char **)v24;
          }
          else
          {
            v24 = "";
          }
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
          if (v32 >= 0)
            p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
          else
            p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
          pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, p_p, v28);
          if (v32 < 0)
            operator delete(__p);
        }
      }
    }
    else
    {
LABEL_6:
      while (v8 != v9 - 2)
      {
        v16 = (uint64_t *)v8;
        v8 += 2;
        if (v8 != v9)
        {
          v17 = *v16;
          v18 = v8;
          while (v17 != *v18)
          {
            if (++v18 == (_QWORD *)v9)
              goto LABEL_6;
          }
          goto LABEL_20;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPath>::SdfListOp((uint64_t)&v38);
  v14 = a4 + 102;
  (*(void (**)(void ****__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v45, v12, v14, a1, v13);
  if (sub_20BFD6B4C((pxrInternal__aapl__pxrReserved__::VtValue *)&v45))
  {
    if ((v46 & 4) != 0)
      v15 = (void ***)(*(uint64_t (**)(void ****))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(&v45);
    else
      v15 = v45;
  }
  else
  {
    v15 = &v38;
  }
  sub_20BFD6BC4((uint64_t)&__p, (uint64_t)v15);
  v19 = (void ***)sub_20BF4C2D8((uint64_t)&v45);
  v45 = (void ***)&v44;
  sub_20BFD6F90(v19);
  v45 = (void ***)&v43;
  sub_20BFD6F90((void ***)&v45);
  v45 = (void ***)&v42;
  sub_20BFD6F90((void ***)&v45);
  v45 = (void ***)&v41;
  sub_20BFD6F90((void ***)&v45);
  v45 = (void ***)&v40;
  sub_20BFD6F90((void ***)&v45);
  v45 = (void ***)&v39;
  sub_20BFD6F90((void ***)&v45);
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPath>::SetItems(&__p, (_DWORD **)a3, a2);
  v20 = sub_20C026788(v11);
  sub_20C02842C((char *)&__p, (pxrInternal__aapl__pxrReserved__::VtValue *)&v38);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, void ***))(*(_QWORD *)v20 + 152))(v20, v14, a1, &v38);
  sub_20BF4C2D8((uint64_t)&v38);
  v38 = (void **)&v37;
  sub_20BFD6F90(&v38);
  v38 = (void **)&v36;
  sub_20BFD6F90(&v38);
  v38 = (void **)&v35;
  sub_20BFD6F90(&v38);
  v38 = (void **)&v34;
  sub_20BFD6F90(&v38);
  v38 = (void **)&v33;
  sub_20BFD6F90(&v38);
  v38 = (void **)&v31;
  sub_20BFD6F90(&v38);
}

void sub_20C02264C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_InheritAppendPath(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  unint64_t v4;
  uint64_t v5;
  int v7;
  int v8;
  int v9;
  int v10;

  v3 = (pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 216);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 816), &v7);
  pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath(v3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v7, &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  v4 = *((_QWORD *)this + 41);
  if (v4 >= *((_QWORD *)this + 42))
  {
    v5 = sub_20BFD7890((uint64_t *)this + 40, &v9);
  }
  else
  {
    sub_20BFD6E54(*((_DWORD **)this + 41), &v9);
    sub_20BFD6EA4((_DWORD *)(v4 + 4), &v10);
    v5 = v4 + 8;
  }
  *((_QWORD *)this + 41) = v5;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  return sub_20BFD265C(&v9);
}

void sub_20C022764(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimSetSpecializesListItems(int a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void **v8;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v9;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  uint64_t *WhyNot;
  const char *v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v16;
  void *v17;
  char v18;
  void *__p[2];
  char v20;
  char v21;
  uint64_t v22;
  uint64_t i;

  v5 = *(_QWORD *)(a2 + 344);
  v6 = *(_QWORD *)(a2 + 352);
  if (a1 && v5 == v6)
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Setting specializes paths to None (or empty list) is only allowed when setting explicit specializes paths, not for list editing", (const char *)a2, a3);
    if (v20 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v8, v7);
LABEL_7:
    if (v20 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 344);
    for (i = v6; ; v6 = i)
    {
      if (v5 == v6)
      {
        v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v10)
          v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        sub_20C022338((_QWORD *)v10 + 38, a1, a2 + 344, (uint64_t *)a2);
        return;
      }
      v9 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)sub_20BFD71C4(&v22, a2, a3);
      pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidSpecializesPath(v9, (uint64_t)__p);
      if (v21)
        break;
      sub_20BFD7240(&v22);
      v5 = v22;
    }
    WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)__p);
    if (*((char *)WhyNot + 23) >= 0)
      v14 = (uint64_t)WhyNot;
    else
      v14 = *WhyNot;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v12, v13, v14);
    if (v18 >= 0)
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v17;
    else
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v17;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v16, v15);
    if (v18 < 0)
      operator delete(v17);
    if (v21)
      goto LABEL_7;
  }
}

void sub_20C0228DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a22)
  {
    if (a21 < 0)
      operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SpecializesAppendPath(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  unint64_t v4;
  uint64_t v5;
  int v7;
  int v8;
  int v9;
  int v10;

  v3 = (pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 216);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 816), &v7);
  pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath(v3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v7, &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  v4 = *((_QWORD *)this + 44);
  if (v4 >= *((_QWORD *)this + 45))
  {
    v5 = sub_20BFD7890((uint64_t *)this + 43, &v9);
  }
  else
  {
    sub_20BFD6E54(*((_DWORD **)this + 44), &v9);
    sub_20BFD6EA4((_DWORD *)(v4 + 4), &v10);
    v5 = v4 + 8;
  }
  *((_QWORD *)this + 44) = v5;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
  return sub_20BFD265C(&v9);
}

void sub_20C0229D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimSetReferenceListItems(int a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void **v8;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v9;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  uint64_t *WhyNot;
  const char *v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v16;
  void *v17;
  char v18;
  void *__p[2];
  char v20;
  char v21;
  uint64_t v22;
  uint64_t i;

  v5 = *(_QWORD *)(a2 + 368);
  v6 = *(_QWORD *)(a2 + 376);
  if (a1 && v5 == v6)
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Setting references to None (or an empty list) is only allowed when setting explicit references, not for list editing", (const char *)a2, a3);
    if (v20 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v8, v7);
LABEL_7:
    if (v20 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 368);
    for (i = v6; ; v6 = i)
    {
      if (v5 == v6)
      {
        v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v10)
          v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        sub_20C022C88((_QWORD *)v10 + 35, a1, (__int128 **)(a2 + 368), (uint64_t *)a2);
        return;
      }
      v9 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)sub_20C022B90(&v22, a2, a3);
      pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidReference(v9, (uint64_t)__p);
      if (v21)
        break;
      sub_20C022C0C(&v22);
      v5 = v22;
    }
    WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)__p);
    if (*((char *)WhyNot + 23) >= 0)
      v14 = (uint64_t)WhyNot;
    else
      v14 = *WhyNot;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v12, v13, v14);
    if (v18 >= 0)
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v17;
    else
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v17;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v16, v15);
    if (v18 < 0)
      operator delete(v17);
    if (v21)
      goto LABEL_7;
  }
}

void sub_20C022B4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a22)
  {
    if (a21 < 0)
      operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C022B90(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result;
  _QWORD v5[4];
  char v6;
  int v7;

  result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::SdfRefe"
            "rence>>::operator*() [T = std::vector<pxrInternal__aapl__pxrReserved__::SdfReference>, Reverse = false]";
    v6 = 0;
    v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_20C022C04()
{
  JUMPOUT(0x20C022BB4);
}

_QWORD *sub_20C022C0C(_QWORD *a1)
{
  _QWORD v3[4];
  char v4;

  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::SdfReference>>::operator++() [T = std::vector<pxrInternal__aapl__pxrReserved__::SdfReference>, Reverse = false]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 56;
  }
  return a1;
}

void sub_20C022C88(_QWORD *a1, int a2, __int128 **a3, uint64_t *a4)
{
  __int128 *v8;
  __int128 *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  void ***v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  void ***v18;
  uint64_t v19;
  char *v20;
  BOOL v21;
  unint64_t v22;
  const char *v23;
  const char *Text;
  const char *v25;
  char *v26;
  const char *v27;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void ***v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v8 = *a3;
  v9 = a3[1];
  v10 = 0x6DB6DB6DB6DB6DB7 * (((char *)v9 - (char *)*a3) >> 3);
  if (v10 >= 2)
  {
    if (v10 > 0xA)
    {
      if (v8 != v9)
      {
        while (1)
        {
          v20 = (char *)v8 + 56;
          if ((__int128 *)((char *)v8 + 56) == v9)
            break;
          v21 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v8, (unsigned __int8 *)v8 + 56);
          v8 = (__int128 *)((char *)v8 + 56);
          if (!v21)
          {
            v9 = (__int128 *)(v20 - 56);
            break;
          }
        }
        if (v9 != a3[1] && sub_20C029C48(a3))
        {
LABEL_19:
          v22 = *a1 & 0xFFFFFFFFFFFFFFF8;
          if (v22)
          {
            v23 = (const char *)(v22 + 16);
            if (*(char *)(v22 + 39) < 0)
              v23 = *(const char **)v23;
          }
          else
          {
            v23 = "";
          }
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v25, v26, v23, Text);
          if (v31 >= 0)
            p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
          else
            p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
          pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, p_p, v27);
          if (v31 < 0)
            operator delete(__p);
        }
      }
    }
    else
    {
LABEL_6:
      while (v8 != (__int128 *)((char *)v9 - 56))
      {
        v16 = (unsigned __int8 *)v8;
        v8 = (__int128 *)((char *)v8 + 56);
        v17 = (unsigned __int8 *)v8;
        if (v8 != v9)
        {
          while ((pxrInternal__aapl__pxrReserved__::SdfReference::operator==(v16, v17) & 1) == 0)
          {
            v17 += 56;
            if (v17 == (unsigned __int8 *)v9)
              goto LABEL_6;
          }
          goto LABEL_19;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfReference>::SdfListOp((uint64_t)&v37);
  v14 = a4 + 102;
  (*(void (**)(void ****__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v44, v12, v14, a1, v13);
  if (sub_20BFE4618((pxrInternal__aapl__pxrReserved__::VtValue *)&v44))
  {
    if ((v45 & 4) != 0)
      v15 = (void ***)(*(uint64_t (**)(void ****))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(&v44);
    else
      v15 = v44;
  }
  else
  {
    v15 = &v37;
  }
  sub_20C02BDC4((uint64_t)&__p, (uint64_t)v15);
  v18 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  v44 = (void ***)&v43;
  sub_20C021740(v18);
  v44 = (void ***)&v42;
  sub_20C021740((void ***)&v44);
  v44 = (void ***)&v41;
  sub_20C021740((void ***)&v44);
  v44 = (void ***)&v40;
  sub_20C021740((void ***)&v44);
  v44 = (void ***)&v39;
  sub_20C021740((void ***)&v44);
  v44 = (void ***)&v38;
  sub_20C021740((void ***)&v44);
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfReference>::SetItems((unsigned __int8 *)&__p, a3, a2);
  v19 = sub_20C026788(v11);
  sub_20C029C08((char *)&__p, (pxrInternal__aapl__pxrReserved__::VtValue *)&v37);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, void ***))(*(_QWORD *)v19 + 152))(v19, v14, a1, &v37);
  sub_20BF4C2D8((uint64_t)&v37);
  v37 = (void **)&v36;
  sub_20C021740(&v37);
  v37 = (void **)&v35;
  sub_20C021740(&v37);
  v37 = (void **)&v34;
  sub_20C021740(&v37);
  v37 = (void **)&v33;
  sub_20C021740(&v37);
  v37 = (void **)&v32;
  sub_20C021740(&v37);
  v37 = (void **)&v30;
  sub_20C021740(&v37);
}

void sub_20C022FBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimSetPayloadListItems(int a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  void **v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  uint64_t *WhyNot;
  const char *v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v16;
  void *v17;
  char v18;
  void *__p[2];
  char v20;
  char v21;
  uint64_t v22;
  uint64_t i;

  v5 = *(_QWORD *)(a2 + 392);
  v6 = *(_QWORD *)(a2 + 400);
  if (a1 && v5 == v6)
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Setting payload to None (or an empty list) is only allowed when setting explicit payloads, not for list editing", (const char *)a2, a3);
    if (v20 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v8, v7);
LABEL_7:
    if (v20 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 392);
    for (i = v6; ; v6 = i)
    {
      if (v5 == v6)
      {
        v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v10)
          v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        sub_20C0232AC((_QWORD *)v10 + 30, a1, (uint64_t *)(a2 + 392), (uint64_t *)a2);
        return;
      }
      v9 = sub_20C0231B4(&v22, a2, a3);
      pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidPayload(v9, (uint64_t)__p);
      if (v21)
        break;
      sub_20C023230(&v22);
      v5 = v22;
    }
    WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)__p);
    if (*((char *)WhyNot + 23) >= 0)
      v14 = (uint64_t)WhyNot;
    else
      v14 = *WhyNot;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v12, v13, v14);
    if (v18 >= 0)
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v17;
    else
      v16 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v17;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v16, v15);
    if (v18 < 0)
      operator delete(v17);
    if (v21)
      goto LABEL_7;
  }
}

void sub_20C023170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a22)
  {
    if (a21 < 0)
      operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C0231B4(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result;
  _QWORD v5[4];
  char v6;
  int v7;

  result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::SdfPayl"
            "oad>>::operator*() [T = std::vector<pxrInternal__aapl__pxrReserved__::SdfPayload>, Reverse = false]";
    v6 = 0;
    v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_20C023228()
{
  JUMPOUT(0x20C0231D8);
}

_QWORD *sub_20C023230(_QWORD *a1)
{
  _QWORD v3[4];
  char v4;

  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::SdfPayload>>::operator++() [T = std::vector<pxrInternal__aapl__pxrReserved__::SdfPayload>, Reverse = false]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 48;
  }
  return a1;
}

void sub_20C0232AC(_QWORD *a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  unsigned __int8 *v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  void ***v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  void ***v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  const char *v23;
  const char *Text;
  const char *v25;
  char *v26;
  const char *v27;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void ***v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v8 = *a3;
  v9 = (unsigned __int8 *)a3[1];
  v10 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v9[-*a3] >> 4);
  if (v10 >= 2)
  {
    if (v10 > 0xA)
    {
      if ((unsigned __int8 *)v8 != v9)
      {
        while (1)
        {
          v20 = v8 + 48;
          if ((unsigned __int8 *)(v8 + 48) == v9)
            break;
          v21 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v8, (unsigned __int8 *)(v8 + 48));
          v8 += 48;
          if (!v21)
          {
            v9 = (unsigned __int8 *)(v20 - 48);
            break;
          }
        }
        if (v9 != (unsigned __int8 *)a3[1] && sub_20C02CA8C(a3))
        {
LABEL_19:
          v22 = *a1 & 0xFFFFFFFFFFFFFFF8;
          if (v22)
          {
            v23 = (const char *)(v22 + 16);
            if (*(char *)(v22 + 39) < 0)
              v23 = *(const char **)v23;
          }
          else
          {
            v23 = "";
          }
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v25, v26, v23, Text);
          if (v31 >= 0)
            p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
          else
            p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
          pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, p_p, v27);
          if (v31 < 0)
            operator delete(__p);
        }
      }
    }
    else
    {
LABEL_6:
      while ((unsigned __int8 *)v8 != v9 - 48)
      {
        v16 = (unsigned __int8 *)v8;
        v8 += 48;
        v17 = (unsigned __int8 *)v8;
        if ((unsigned __int8 *)v8 != v9)
        {
          while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator==(v16, v17))
          {
            v17 += 48;
            if (v17 == v9)
              goto LABEL_6;
          }
          goto LABEL_19;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPayload>::SdfListOp((uint64_t)&v37);
  v14 = a4 + 102;
  (*(void (**)(void ****__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v44, v12, v14, a1, v13);
  if (sub_20BFE45A0((pxrInternal__aapl__pxrReserved__::VtValue *)&v44))
  {
    if ((v45 & 4) != 0)
      v15 = (void ***)(*(uint64_t (**)(void ****))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(&v44);
    else
      v15 = v44;
  }
  else
  {
    v15 = &v37;
  }
  sub_20C02E924((uint64_t)&__p, (uint64_t)v15);
  v18 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  v44 = (void ***)&v43;
  sub_20C021818(v18);
  v44 = (void ***)&v42;
  sub_20C021818((void ***)&v44);
  v44 = (void ***)&v41;
  sub_20C021818((void ***)&v44);
  v44 = (void ***)&v40;
  sub_20C021818((void ***)&v44);
  v44 = (void ***)&v39;
  sub_20C021818((void ***)&v44);
  v44 = (void ***)&v38;
  sub_20C021818((void ***)&v44);
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPayload>::SetItems((unsigned __int8 *)&__p, (std::string **)a3, a2);
  v19 = sub_20C026788(v11);
  sub_20C02CA4C((char *)&__p, (pxrInternal__aapl__pxrReserved__::VtValue *)&v37);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, void ***))(*(_QWORD *)v19 + 152))(v19, v14, a1, &v37);
  sub_20BF4C2D8((uint64_t)&v37);
  v37 = (void **)&v36;
  sub_20C021818(&v37);
  v37 = (void **)&v35;
  sub_20C021818(&v37);
  v37 = (void **)&v34;
  sub_20C021818(&v37);
  v37 = (void **)&v33;
  sub_20C021818(&v37);
  v37 = (void **)&v32;
  sub_20C021818(&v37);
  v37 = (void **)&v30;
  sub_20C021818(&v37);
}

void sub_20C0235D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimSetVariantSetNamesListItems(unsigned int a1, _QWORD *a2)
{
  uint64_t **v4;
  uint64_t v5;
  char *v6;
  pxrInternal__aapl__pxrReserved__::TfToken *v7;
  uint64_t *EmptyString;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  _OWORD *v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  std::type_info **v19;
  __int128 v20;
  char *v21;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v22;
  uint64_t v23;
  char *v24;
  _DWORD *v25;
  uint64_t *v26;
  pxrInternal__aapl__pxrReserved__::TfToken *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *WhyNot;
  const char *v31;
  char *v32;
  uint64_t v33;
  const char *v34;
  void **v35;
  pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *v36;
  uint64_t v37;
  void *__p[2];
  std::type_info *v39;
  __int128 i;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  void *v44;
  std::type_info **v45;
  char *v46;
  char *v47;
  unint64_t *v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v41 = 0;
  v42 = 0;
  v43 = 0;
  v4 = (uint64_t **)(a2 + 20);
  sub_20BE71C2C(&v41, (uint64_t)(a2[21] - a2[20]) >> 3);
  for (i = *(_OWORD *)v4; (_QWORD)i != *((_QWORD *)&i + 1); sub_20C023C08(&i))
  {
    v7 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C023B14((uint64_t *)&i, v5, v6);
    if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) != 0)
      EmptyString = (uint64_t *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) + 16);
    else
      EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v7);
    pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidVariantIdentifier((__int128 *)EmptyString, (uint64_t)&v44);
    if ((_BYTE)v47)
    {
      WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)&v44);
      if (*((char *)WhyNot + 23) >= 0)
        v33 = (uint64_t)WhyNot;
      else
        v33 = *WhyNot;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v31, v32, v33);
      if (SHIBYTE(v39) >= 0)
        v35 = __p;
      else
        v35 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v35, v34);
      if (SHIBYTE(v39) < 0)
        operator delete(__p[0]);
      if ((_BYTE)v47 && SHIBYTE(v46) < 0)
        operator delete(v44);
      goto LABEL_50;
    }
    v11 = *(_QWORD *)*sub_20C023B90(&i, v9, v10) & 0xFFFFFFFFFFFFFFF8;
    if (v11)
    {
      v12 = (char *)(v11 + 16);
      if (*(char *)(v11 + 39) < 0)
        v12 = *(char **)v12;
    }
    else
    {
      v12 = "";
    }
    sub_20BDDC0E4(__p, v12);
    v13 = v42;
    if ((unint64_t)v42 >= v43)
    {
      v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v42[-v41] >> 3);
      v16 = v15 + 1;
      if (v15 + 1 > 0xAAAAAAAAAAAAAAALL)
        sub_20BDDF694();
      if (0x5555555555555556 * ((uint64_t)(v43 - v41) >> 3) > v16)
        v16 = 0x5555555555555556 * ((uint64_t)(v43 - v41) >> 3);
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v43 - v41) >> 3) >= 0x555555555555555)
        v17 = 0xAAAAAAAAAAAAAAALL;
      else
        v17 = v16;
      v48 = &v43;
      if (v17)
        v18 = (char *)sub_20BDE4FF4((uint64_t)&v43, v17);
      else
        v18 = 0;
      v19 = (std::type_info **)&v18[24 * v15];
      v44 = v18;
      v45 = v19;
      v47 = &v18[24 * v17];
      v20 = *(_OWORD *)__p;
      v19[2] = v39;
      *(_OWORD *)v19 = v20;
      __p[1] = 0;
      v39 = 0;
      __p[0] = 0;
      v46 = (char *)(v19 + 3);
      sub_20BDF34C0(&v41, &v44);
      v21 = v42;
      sub_20BDF3648((uint64_t)&v44);
      v42 = v21;
      if (SHIBYTE(v39) < 0)
        operator delete(__p[0]);
    }
    else
    {
      v14 = *(_OWORD *)__p;
      *((_QWORD *)v42 + 2) = v39;
      *v13 = v14;
      v42 = (char *)v13 + 24;
    }
  }
  v22 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v22)
    v22 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20C023C84((_QWORD *)v22 + 59, a1, &v41, a2);
  if (a1 <= 1)
  {
    *(_OWORD *)__p = *((_OWORD *)a2 + 10);
    v25 = a2 + 102;
    v26 = a2 + 101;
    while (__p[0] != __p[1])
    {
      v27 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C023B14((uint64_t *)__p, v23, v24);
      if ((*(_QWORD *)v27 & 0xFFFFFFFFFFFFFFF8) != 0)
        v28 = (uint64_t *)((*(_QWORD *)v27 & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        v28 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v27);
      sub_20BDDC0E4(&v44, "");
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendVariantSelection(v25, (uint64_t)v28, (uint64_t)&v44, &i);
      v29 = sub_20C026788(v26);
      (*(void (**)(uint64_t, __int128 *, uint64_t))(*(_QWORD *)v29 + 64))(v29, &i, 11);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&i + 1);
      sub_20BFD265C(&i);
      if (SHIBYTE(v46) < 0)
        operator delete(v44);
      sub_20C023C08(__p);
    }
    v36 = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
    if (!v36)
      v36 = sub_20BFD416C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
    v37 = sub_20C026788(v26);
    v45 = &off_24C526790;
    sub_20C030230(&v44, v4);
    (*(void (**)(uint64_t, _DWORD *, uint64_t, void **))(*(_QWORD *)v37 + 152))(v37, v25, (uint64_t)v36 + 64, &v44);
    sub_20BF4C2D8((uint64_t)&v44);
  }
LABEL_50:
  v44 = &v41;
  sub_20BDE5038((void ***)&v44);
}

void sub_20C023A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  sub_20BF4C2D8((uint64_t)&a24);
  __p = &a21;
  sub_20BDE5038((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C023B14(uint64_t *a1, uint64_t a2, char *a3)
{
  uint64_t result;
  _QWORD v5[4];
  char v6;
  int v7;

  result = *a1;
  if (result == a1[1])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator*";
    v5[2] = 271;
    v5[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::TfToken"
            ">>::operator*() [T = std::vector<pxrInternal__aapl__pxrReserved__::TfToken>, Reverse = false]";
    v6 = 0;
    v7 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v5, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_20C023B88()
{
  JUMPOUT(0x20C023B38);
}

_QWORD *sub_20C023B90(_QWORD *result, uint64_t a2, char *a3)
{
  _QWORD v3[4];
  char v4;
  int v5;

  if (*result == result[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator->";
    v3[2] = 287;
    v3[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReserved__::TfToken"
            ">>::operator->() [T = std::vector<pxrInternal__aapl__pxrReserved__::TfToken>, Reverse = false]";
    v4 = 0;
    v5 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v3, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

_QWORD *sub_20C023C08(_QWORD *a1)
{
  _QWORD v3[4];
  char v4;

  if (*a1 == a1[1])
  {
    v3[0] = "tf/iterator.h";
    v3[1] = "operator++";
    v3[2] = 250;
    v3[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::vector<pxrInternal__aapl__pxrReser"
            "ved__::TfToken>>::operator++() [T = std::vector<pxrInternal__aapl__pxrReserved__::TfToken>, Reverse = false]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v3, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    *a1 += 8;
  }
  return a1;
}

void sub_20C023C84(_QWORD *a1, int a2, uint64_t *a3, uint64_t *a4)
{
  __int128 **v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unsigned __int8 *v14;
  unsigned __int8 **v15;
  unsigned __int8 *v16;
  int v17;
  unsigned __int8 *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  uint64_t *v30;
  uint64_t v31;
  double v32;
  uint64_t *v33;
  void ***v34;
  void ***v35;
  uint64_t v36;
  void *__p;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void ***v54;
  uint64_t v55;
  uint64_t v56;

  v5 = (__int128 **)a3;
  v56 = *MEMORY[0x24BDAC8D0];
  v8 = *a3;
  v7 = a3[1];
  v9 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a3) >> 3);
  if (v9 >= 2)
  {
    if (v9 > 0xA)
    {
      if (a3[1] != sub_20C02F5A4(v8, v7) && sub_20C02F4B8(v5))
      {
LABEL_27:
        v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
        if (v23)
        {
          v24 = (const char *)(v23 + 16);
          if (*(char *)(v23 + 39) < 0)
            v24 = *(const char **)v24;
        }
        else
        {
          v24 = "";
        }
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
        if (v41 >= 0)
          p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
        else
          p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
        pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, p_p, v28);
        if (v41 < 0)
          operator delete(__p);
      }
    }
    else
    {
      v10 = v7 - 24;
      while (v8 != v10)
      {
        v11 = v8;
        v8 += 24;
        if (v8 != v7)
        {
          v12 = *(unsigned __int8 *)(v11 + 23);
          v13 = *(_QWORD *)(v11 + 8);
          if ((v12 & 0x80u) == 0)
            v14 = (unsigned __int8 *)*(unsigned __int8 *)(v11 + 23);
          else
            v14 = *(unsigned __int8 **)(v11 + 8);
          v15 = (unsigned __int8 **)v8;
          do
          {
            v16 = (unsigned __int8 *)*((unsigned __int8 *)v15 + 23);
            v17 = (char)v16;
            if ((char)v16 < 0)
              v16 = v15[1];
            if (v14 == v16)
            {
              if (v17 >= 0)
                v18 = (unsigned __int8 *)v15;
              else
                v18 = *v15;
              if ((v12 & 0x80) != 0)
              {
                v20 = a1;
                v21 = v10;
                v22 = memcmp(*(const void **)v11, v18, v13);
                v10 = v21;
                a1 = v20;
                v5 = (__int128 **)a3;
                if (!v22)
                  goto LABEL_27;
              }
              else
              {
                if (!(_DWORD)v12)
                  goto LABEL_27;
                v19 = 0;
                while (*(unsigned __int8 *)(v11 + v19) == v18[v19])
                {
                  if (v12 == ++v19)
                    goto LABEL_27;
                }
              }
            }
            v15 += 3;
          }
          while (v15 != (unsigned __int8 **)v7);
        }
      }
    }
  }
  v30 = a4 + 101;
  v31 = sub_20C026788(a4 + 101);
  v32 = pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v47);
  v33 = a4 + 102;
  (*(void (**)(void ****__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v31 + 136))(&v54, v31, v33, a1, v32);
  if (sub_20BFE5104((pxrInternal__aapl__pxrReserved__::VtValue *)&v54))
  {
    if ((v55 & 4) != 0)
      v34 = (void ***)(*(uint64_t (**)(void ****))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(&v54);
    else
      v34 = v54;
  }
  else
  {
    v34 = &v47;
  }
  sub_20C02F650((uint64_t)&__p, (uint64_t)v34);
  v35 = (void ***)sub_20BF4C2D8((uint64_t)&v54);
  v54 = (void ***)&v53;
  sub_20BDE5038(v35);
  v54 = (void ***)&v52;
  sub_20BDE5038((void ***)&v54);
  v54 = (void ***)&v51;
  sub_20BDE5038((void ***)&v54);
  v54 = (void ***)&v50;
  sub_20BDE5038((void ***)&v54);
  v54 = (void ***)&v49;
  sub_20BDE5038((void ***)&v54);
  v54 = (void ***)&v48;
  sub_20BDE5038((void ***)&v54);
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems((uint64_t *)&__p, (uint64_t)v5, a2);
  v36 = sub_20C026788(v30);
  sub_20C02F478((char *)&__p, (pxrInternal__aapl__pxrReserved__::VtValue *)&v47);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, void ***))(*(_QWORD *)v36 + 152))(v36, v33, a1, &v47);
  sub_20BF4C2D8((uint64_t)&v47);
  v47 = (void **)&v46;
  sub_20BDE5038(&v47);
  v47 = (void **)&v45;
  sub_20BDE5038(&v47);
  v47 = (void **)&v44;
  sub_20BDE5038(&v47);
  v47 = (void **)&v43;
  sub_20BDE5038(&v47);
  v47 = (void **)&v42;
  sub_20BDE5038(&v47);
  v47 = (void **)&v40;
  sub_20BDE5038(&v47);
}

void sub_20C024018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RelationshipInitTarget(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v10;
  int v11;

  pxrInternal__aapl__pxrReserved__::SdfPath::AppendTarget((const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)a2 + 816), this, &v10);
  v5 = sub_20C026788((uint64_t *)a2 + 101);
  if (((*(uint64_t (**)(uint64_t, int *))(*(_QWORD *)v5 + 72))(v5, &v10) & 1) == 0)
  {
    v6 = sub_20C026788((uint64_t *)a2 + 101);
    (*(void (**)(uint64_t, int *, uint64_t))(*(_QWORD *)v6 + 64))(v6, &v10, 9);
    v7 = *((_QWORD *)a2 + 34);
    if (v7 >= *((_QWORD *)a2 + 35))
    {
      v8 = sub_20BFD7890((uint64_t *)a2 + 33, this);
    }
    else
    {
      sub_20BFD6E54(*((_DWORD **)a2 + 34), this);
      sub_20BFD6EA4((_DWORD *)(v7 + 4), (_DWORD *)this + 1);
      v8 = v7 + 8;
    }
    *((_QWORD *)a2 + 34) = v8;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  return sub_20BFD265C(&v10);
}

void sub_20C02414C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RelationshipSetTargetsList(unsigned int a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v9;
  void *v10;
  void *v11;
  pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *v12;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v13;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v14;
  uint64_t *WhyNot;
  const char *v16;
  char *v17;
  uint64_t v18;
  const char *v19;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v20;
  void *v21;
  char v22;
  void *__p;
  void *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t i;

  if (*(_BYTE *)(a2 + 256))
  {
    v5 = *(_QWORD *)(a2 + 232);
    v6 = *(_QWORD *)(a2 + 240);
    if (a1 && v5 == v6)
    {
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Setting relationship targets to None (or empty list) is only allowed when setting explicit targets, not for list editing", (const char *)a2, a3);
      if (v25 >= 0)
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
      else
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, p_p, v7);
LABEL_8:
      if (v25 < 0)
        operator delete(__p);
    }
    else
    {
      v27 = *(_QWORD *)(a2 + 232);
      for (i = v6; ; v6 = i)
      {
        if (v5 == v6)
        {
          if (a1 <= 1)
          {
            v10 = *(void **)(a2 + 232);
            v11 = *(void **)(a2 + 240);
            __p = v10;
            v24 = v11;
            while (v10 != v11)
            {
              v12 = (pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)sub_20BFD71C4((uint64_t *)&__p, a2, a3);
              pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RelationshipInitTarget(v12, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2, v13);
              sub_20BFD7240(&__p);
              v10 = __p;
              v11 = v24;
            }
          }
          v14 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v14)
            v14 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          sub_20C022338((_QWORD *)v14 + 53, a1, a2 + 232, (uint64_t *)a2);
          return;
        }
        v9 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)sub_20BFD71C4(&v27, a2, a3);
        pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidRelationshipTargetPath(v9, (uint64_t)&__p);
        if (v26)
          break;
        sub_20BFD7240(&v27);
        v5 = v27;
      }
      WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)&__p);
      if (*((char *)WhyNot + 23) >= 0)
        v18 = (uint64_t)WhyNot;
      else
        v18 = *WhyNot;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v16, v17, v18);
      if (v22 >= 0)
        v20 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v21;
      else
        v20 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v21;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v20, v19);
      if (v22 < 0)
        operator delete(v21);
      if (v26)
        goto LABEL_8;
    }
  }
}

void sub_20C0242F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
    operator delete(__p);
  if (a22)
  {
    if (a21 < 0)
      operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimSetVariantSelection(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  uint64_t v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::VtDictionary *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  const char *v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  const char *v21;
  void **v22;
  void *v23;
  uint64_t *WhyNot;
  const char *v25;
  char *v26;
  uint64_t v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v30;
  uint64_t v31;
  void *__p;
  char v33;
  void *v34[2];
  char v35;
  char v36;
  std::string __str;
  uint64_t *v38;
  _QWORD *v39[2];
  __int128 v40;
  __int128 v41;
  _BYTE v42[8];
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v39[0] = 0;
  v39[1] = 0;
  v38 = (uint64_t *)v39;
  v43 = 0;
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  v4 = sub_20C026788((uint64_t *)this + 101);
  if ((*(unsigned int (**)(uint64_t, char *, uint64_t, _BYTE *))(*(_QWORD *)v4 + 112))(v4, (char *)this + 816, (uint64_t)v3 + 456, v42))
  {
    v5 = sub_20C02470C((pxrInternal__aapl__pxrReserved__::VtValue *)v42);
    if (&v38 != (uint64_t **)v5)
      sub_20BDFC4AC(&v38, *(__int128 **)v5, (__int128 *)(v5 + 8));
  }
  v6 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)*((_QWORD *)this + 97);
  v40 = 0u;
  v41 = 0u;
  *(_QWORD *)&v40 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(v6);
  *((_QWORD *)&v40 + 1) = v7;
  *(_QWORD *)&v41 = pxrInternal__aapl__pxrReserved__::VtDictionary::end(v6);
  *((_QWORD *)&v41 + 1) = v8;
  while (1)
  {
    if (*((_QWORD *)&v40 + 1) == *((_QWORD *)&v41 + 1) && (!*((_QWORD *)&v40 + 1) || (_QWORD)v40 == (_QWORD)v41))
    {
      v30 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v30)
        v30 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      v31 = sub_20C026788((uint64_t *)this + 101);
      *((_QWORD *)&v40 + 1) = &off_24C526858;
      sub_20C0307AC(&v40, (const void ***)&v38);
      (*(void (**)(uint64_t, char *, uint64_t, __int128 *))(*(_QWORD *)v31 + 152))(v31, (char *)this + 816, (uint64_t)v30 + 456, &v40);
      sub_20BF4C2D8((uint64_t)&v40);
      pxrInternal__aapl__pxrReserved__::VtDictionary::clear(*((pxrInternal__aapl__pxrReserved__::VtDictionary **)this
                                                            + 97));
      goto LABEL_40;
    }
    v10 = sub_20BF4B198(&v40, v8, v9);
    if ((sub_20BFB4608((pxrInternal__aapl__pxrReserved__::VtValue *)(*v10 + 56)) & 1) == 0)
      break;
    v13 = sub_20BF4B198(&v40, (uint64_t)v11, v12);
    v14 = sub_20BFB2D9C((pxrInternal__aapl__pxrReserved__::VtValue *)(*v13 + 56));
    if (*(char *)(v14 + 23) < 0)
    {
      sub_20BDDBFAC(&__str, *(void **)v14, *(_QWORD *)(v14 + 8));
    }
    else
    {
      v15 = *(_OWORD *)v14;
      __str.__r_.__value_.__r.__words[2] = *(_QWORD *)(v14 + 16);
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v15;
    }
    pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidVariantSelection((__int128 *)&__str, v34);
    if (v36)
    {
      WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)v34);
      if (*((char *)WhyNot + 23) >= 0)
        v27 = (uint64_t)WhyNot;
      else
        v27 = *WhyNot;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v25, v26, v27);
      if (v33 >= 0)
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
      else
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, p_p, v28);
      if (v33 < 0)
        operator delete(__p);
      if (v36 && v35 < 0)
        operator delete(v34[0]);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      {
        v23 = (void *)__str.__r_.__value_.__r.__words[0];
        goto LABEL_36;
      }
      goto LABEL_40;
    }
    v34[0] = (void *)(*sub_20BF4B198(&v40, v16, v17) + 32);
    v18 = sub_20BDDDFDC(&v38, (const void **)v34[0], (uint64_t)&unk_20CAC184C, (__int128 **)v34);
    std::string::operator=((std::string *)(v18 + 7), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    sub_20BF4B224(&v40, v19, v20);
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"variant name must be a string", v11, v12);
  if (v35 >= 0)
    v22 = v34;
  else
    v22 = (void **)v34[0];
  pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v22, v21);
  if (v35 < 0)
  {
    v23 = v34[0];
LABEL_36:
    operator delete(v23);
  }
LABEL_40:
  sub_20BF4C2D8((uint64_t)v42);
  sub_20BDE9D48((uint64_t)&v38, v39[0]);
}

void sub_20C024664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,_QWORD *a30,uint64_t a31,char a32)
{
  uint64_t v32;

  sub_20BF4C2D8((uint64_t)&a32);
  sub_20BF4C2D8(v32 - 72);
  sub_20BDE9D48((uint64_t)&a29, a30);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02470C(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v2;

  if ((sub_20C0302AC(a1) & 1) == 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_FailGet((uint64_t)a1, (void (*)(void **__return_ptr))sub_20C030324, (uint64_t)&stru_24C526848);
  v2 = *((_QWORD *)a1 + 1);
  if ((v2 & 4) != 0)
    return (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v2 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  else
    return *(_QWORD *)a1;
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RelocatesAdd(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  char *v8;
  uint64_t v9;
  const char *v10;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  const char *v12;
  char *v13;
  uint64_t v14;
  int v16;
  int v17;
  int v18;
  int v19;
  void *__p;
  int v21;
  int v22;
  char v23;
  char v24;
  int v25;
  int v26;
  int v27;
  int v28;

  v5 = sub_20C007CCC(a1);
  v6 = sub_20C007CCC(a2);
  pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(&v27, v5);
  pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(&v25, v6);
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidRelocatesPath((pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)&v27, (uint64_t)&__p);
  if (v24)
  {
    if (v23 < 0)
      operator delete(__p);
    if (*(char *)(v5 + 23) >= 0)
      v9 = v5;
    else
      v9 = *(_QWORD *)v5;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid relocates path", v7, v8, v9);
    if (v23 >= 0)
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidRelocatesPath((pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)&v25, (uint64_t)&__p);
    if (!v24)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v27, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a3 + 816), &v18);
      pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a3 + 816), &v16);
      sub_20C028354(&__p, &v18, &v16);
      sub_20C030818((uint64_t **)(a3 + 416), (pxrInternal__aapl__pxrReserved__::SdfPath *)&__p, &__p);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
      sub_20BFD265C(&v21);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
      sub_20BFD265C(&__p);
      *(_BYTE *)(a3 + 865) = 1;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
      sub_20BFD265C(&v16);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
      goto LABEL_22;
    }
    if (v23 < 0)
      operator delete(__p);
    if (*(char *)(v6 + 23) >= 0)
      v14 = v6;
    else
      v14 = *(_QWORD *)v6;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid relocates path", v12, v13, v14);
    if (v23 >= 0)
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a3, p_p, v10);
  if (v23 < 0)
    operator delete(__p);
LABEL_22:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
  sub_20BFD265C(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v28);
  return sub_20BFD265C(&v27);
}

void sub_20C024988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;

  sub_20C024A08(&__p);
  sub_20BFD1A18(&a11);
  sub_20BFD1A18(&a13);
  sub_20BFD1A18((_DWORD *)(v19 - 48));
  sub_20BFD1A18((_DWORD *)(v19 - 40));
  _Unwind_Resume(a1);
}

_DWORD *sub_20C024A08(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 3);
  sub_20BFD265C(a1 + 2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_AttributeSetConnectionTargetsList(unsigned int a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v9;
  std::type_info **v10;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v11;
  uint64_t v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v16;
  uint64_t *WhyNot;
  const char *v18;
  char *v19;
  uint64_t v20;
  const char *v21;
  void **v22;
  void *v23[2];
  char v24;
  uint64_t v25;
  uint64_t i;
  void *__p;
  std::type_info **v28;
  char v29;
  char v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a2 + 288);
  v6 = *(_QWORD *)(a2 + 296);
  if (a1 && v5 == v6)
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Setting connection paths to None (or an empty list) is only allowed when setting explicit connection paths, not for list editing", (const char *)a2, a3);
    if (v29 >= 0)
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, p_p, v7);
LABEL_7:
    if (v29 < 0)
      operator delete(__p);
  }
  else
  {
    v25 = *(_QWORD *)(a2 + 288);
    for (i = v6; ; v6 = i)
    {
      if (v5 == v6)
      {
        if (a1 <= 1)
        {
          v10 = *(std::type_info ***)(a2 + 296);
          __p = *(void **)(a2 + 288);
          v28 = v10;
          while (__p != v28)
          {
            v11 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD71C4((uint64_t *)&__p, a2, a3);
            pxrInternal__aapl__pxrReserved__::SdfPath::AppendTarget((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 816), v11, v23);
            v12 = sub_20C026788((uint64_t *)(a2 + 808));
            if (((*(uint64_t (**)(uint64_t, void **))(*(_QWORD *)v12 + 72))(v12, v23) & 1) == 0)
            {
              v13 = sub_20C026788((uint64_t *)(a2 + 808));
              (*(void (**)(uint64_t, void **, uint64_t))(*(_QWORD *)v13 + 64))(v13, v23, 2);
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v23 + 1);
            sub_20BFD265C(v23);
            sub_20BFD7240(&__p);
          }
          v14 = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
          if (!v14)
            v14 = sub_20BFD416C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
          v15 = sub_20C026788((uint64_t *)(a2 + 808));
          v28 = &off_24C526910;
          sub_20C030C78(&__p, (_DWORD **)(a2 + 288));
          (*(void (**)(uint64_t, uint64_t, pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *, void **))(*(_QWORD *)v15 + 152))(v15, a2 + 816, v14, &__p);
          sub_20BF4C2D8((uint64_t)&__p);
        }
        v16 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v16)
          v16 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        sub_20C022338((_QWORD *)v16 + 7, a1, a2 + 288, (uint64_t *)a2);
        return;
      }
      v9 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)sub_20BFD71C4(&v25, a2, a3);
      pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidAttributeConnectionPath(v9, (uint64_t)&__p);
      if (v30)
        break;
      sub_20BFD7240(&v25);
      v5 = v25;
    }
    WhyNot = pxrInternal__aapl__pxrReserved__::SdfAllowed::GetWhyNot((uint64_t *)&__p);
    if (*((char *)WhyNot + 23) >= 0)
      v20 = (uint64_t)WhyNot;
    else
      v20 = *WhyNot;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s", v18, v19, v20);
    if (v24 >= 0)
      v22 = v23;
    else
      v22 = (void **)v23[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v22, v21);
    if (v24 < 0)
      operator delete(v23[0]);
    if (v30)
      goto LABEL_7;
  }
}

void sub_20C024CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a16 < 0)
    operator delete(__p);
  if (a25)
  {
    if (a24 < 0)
      operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_AttributeAppendConnectionPath(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  const char *Text;
  _QWORD *v5;
  uint64_t v6;
  const char *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  int v12;
  int v13;
  _QWORD v14[4];
  char v15;
  int v16;
  int v17;

  v3 = (pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 216);
  pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 816), v14);
  pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath(v3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v14, &v16);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v14 + 1);
  sub_20BFD265C(v14);
  if (pxrInternal__aapl__pxrReserved__::SdfPath::ContainsPrimVariantSelection((pxrInternal__aapl__pxrReserved__::SdfPath *)&v16))
  {
    v14[0] = "sdf/textParserHelpers.cpp";
    v14[1] = "_AttributeAppendConnectionPath";
    v14[2] = 449;
    v14[3] = "void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_AttributeAppendConnectionPath(Sdf_TextParserContext *)";
    v15 = 0;
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v16);
    v5 = (_QWORD *)((char *)this + 48);
    if (*((char *)this + 71) < 0)
      v5 = (_QWORD *)*v5;
    v6 = *((unsigned int *)this + 242);
    pxrInternal__aapl__pxrReserved__::SdfPath::StripAllVariantSelections((pxrInternal__aapl__pxrReserved__::SdfPath *)&v16, &v12);
    v7 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v14, (pxrInternal__aapl__pxrReserved__ *)"Connection path <%s> (in file @%s@, line %i) has a variant selection, but variant selections are not meaningful in connection paths.  Stripping the variant selection and using <%s> instead.  Resaving the file will fix this issue.", v8, Text, v5, v6, v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_20BFD265C(&v12);
    pxrInternal__aapl__pxrReserved__::SdfPath::StripAllVariantSelections((pxrInternal__aapl__pxrReserved__::SdfPath *)&v16, (int *)v14);
    sub_20BFD3EBC(&v16, (int *)v14);
    sub_20BFD3F10(&v17, (int *)v14 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v14 + 1);
    sub_20BFD265C(v14);
  }
  v9 = *((_QWORD *)this + 37);
  if (v9 >= *((_QWORD *)this + 38))
  {
    v10 = sub_20BFD7890((uint64_t *)this + 36, &v16);
  }
  else
  {
    sub_20BFD6E54(*((_DWORD **)this + 37), &v16);
    sub_20BFD6EA4((_DWORD *)(v9 + 4), &v17);
    v10 = v9 + 8;
  }
  *((_QWORD *)this + 37) = v10;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  return sub_20BFD265C(&v16);
}

void sub_20C024EDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimInitAttribute(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::TfToken *v3;
  uint64_t *EmptyString;
  const char *v5;
  char *v6;
  unint64_t v7;
  const char *v8;
  const char *v9;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  char *v19;
  uint64_t v20;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v21;
  uint64_t v22;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v23;
  uint64_t v24;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *Name;
  const char *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  const char *v33;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  unint64_t v38;
  const char *v39;
  const char *v40;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v41;
  unsigned int v42;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unsigned int *v47;
  int v48;
  void **v49;
  const char *v50;
  char *v51;
  void **v52;
  void **v53;
  const char *v54;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v55;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v56;
  uint64_t v57;
  uint64_t result;
  unsigned int *v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  void *__p[2];
  char v64;
  void *v65[2];
  char v66;
  unint64_t v67;
  uint64_t v68;
  _BYTE v69[8];
  uint64_t v70;
  _BYTE v71[8];
  uint64_t v72;
  unsigned int *v73;
  char *v74;
  char v75;
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  sub_20C007CCC(a1);
  v3 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v68);
  if ((v68 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((v68 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v3);
  if ((pxrInternal__aapl__pxrReserved__::SdfPath::IsValidNamespacedIdentifier((size_t *)EmptyString) & 1) == 0)
  {
    v7 = v68 & 0xFFFFFFFFFFFFFFF8;
    if ((v68 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v8 = (const char *)(v7 + 16);
      if (*(char *)(v7 + 39) < 0)
        v8 = *(const char **)v8;
    }
    else
    {
      v8 = "";
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid attribute name", v5, v6, v8);
    if (v75 >= 0)
      v10 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v73;
    else
      v10 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v73;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v10, v9);
    if (v75 < 0)
      operator delete(v73);
  }
  v11 = a2 + 816;
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 816), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v68, (int *)&v73);
  sub_20BFD3EBC((int *)(a2 + 816), (int *)&v73);
  sub_20BFD3F10((int *)(a2 + 820), (int *)&v73 + 1);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
  sub_20BFD265C(&v73);
  v12 = (uint64_t *)(a2 + 808);
  v13 = sub_20C026788((uint64_t *)(a2 + 808));
  if (((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 72))(v13, a2 + 816) & 1) == 0)
  {
    v14 = *(_QWORD *)(a2 + 904);
    v15 = *(_QWORD **)(v14 - 16);
    if ((unint64_t)v15 >= *(_QWORD *)(v14 - 8))
    {
      v19 = sub_20BFCA068((char **)(v14 - 24), &v68);
    }
    else
    {
      v16 = v68;
      *v15 = v68;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 2, v17));
        if ((v18 & 1) == 0)
          *v15 &= 0xFFFFFFFFFFFFFFF8;
      }
      v19 = (char *)(v15 + 1);
    }
    *(_QWORD *)(v14 - 16) = v19;
    v20 = sub_20C026788((uint64_t *)(a2 + 808));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v20 + 64))(v20, a2 + 816, 1);
    v21 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v21)
      v21 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v22 = sub_20C026788((uint64_t *)(a2 + 808));
    v74 = (char *)&unk_24C51FCF3;
    LOBYTE(v73) = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned int **))(*(_QWORD *)v22 + 152))(v22, a2 + 816, (uint64_t)v21 + 64, &v73);
    sub_20BF4C2D8((uint64_t)&v73);
  }
  if (*(_BYTE *)(a2 + 801))
  {
    v23 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v23)
      v23 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v24 = sub_20C026788((uint64_t *)(a2 + 808));
    v74 = (char *)&unk_24C51FCF3;
    LOBYTE(v73) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned int **))(*(_QWORD *)v24 + 152))(v24, a2 + 816, (uint64_t)v23 + 64, &v73);
    sub_20BF4C2D8((uint64_t)&v73);
  }
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v67);
  v72 = 0;
  v25 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v25)
    v25 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  v26 = sub_20C026788((uint64_t *)(a2 + 808));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(*(_QWORD *)v26 + 112))(v26, a2 + 816, (uint64_t)v25 + 448, v71))
  {
    v27 = (_QWORD *)sub_20BFB46E8((pxrInternal__aapl__pxrReserved__::VtValue *)v71);
    if ((v67 & 0xFFFFFFFFFFFFFFF8) != (*v27 & 0xFFFFFFFFFFFFFFF8))
    {
      Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 816));
      if (*((char *)Name + 23) >= 0)
        v31 = (uint64_t)Name;
      else
        v31 = *Name;
      v32 = *v27 & 0xFFFFFFFFFFFFFFF8;
      if (v32)
      {
        v33 = (const char *)(v32 + 16);
        if (*(char *)(v32 + 39) < 0)
          v33 = *(const char **)v33;
      }
      else
      {
        v33 = "";
      }
      v38 = v67 & 0xFFFFFFFFFFFFFFF8;
      if ((v67 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        v39 = (const char *)(v38 + 16);
        if (*(char *)(v38 + 39) < 0)
          v39 = *(const char **)v39;
      }
      else
      {
        v39 = "";
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"attribute '%s' already has type '%s', cannot change to '%s'", v29, v30, v31, v33, v39);
      if (v75 >= 0)
        v41 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v73;
      else
        v41 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v73;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v41, v40);
      if (v75 < 0)
        operator delete(v73);
    }
  }
  else
  {
    v34 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v34)
      v34 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v35 = sub_20C026788((uint64_t *)(a2 + 808));
    v73 = (unsigned int *)v67;
    v74 = (char *)&off_24C5207B8 + 1;
    if ((v67 & 7) != 0)
    {
      v36 = (unsigned int *)(v67 & 0xFFFFFFFFFFFFFFF8);
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 2, v36));
      if ((v37 & 1) == 0)
        v73 = v36;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned int **))(*(_QWORD *)v35 + 152))(v35, a2 + 816, (uint64_t)v34 + 448, &v73);
    sub_20BF4C2D8((uint64_t)&v73);
  }
  if (*(_QWORD *)(a2 + 840))
    v42 = *(_DWORD *)sub_20C02569C((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 832));
  else
    v42 = 0;
  v70 = 0;
  v43 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v43)
    v43 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  v44 = sub_20C026788((uint64_t *)(a2 + 808));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(*(_QWORD *)v44 + 112))(v44, a2 + 816, (uint64_t)v43 + 464, v69))
  {
    if (v42 != *(_DWORD *)sub_20C02569C((pxrInternal__aapl__pxrReserved__::VtValue *)v69))
    {
      v45 = pxrInternal__aapl__pxrReserved__::SdfPath::GetName((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 816));
      if (*((char *)v45 + 23) >= 0)
        v46 = (uint64_t)v45;
      else
        v46 = *v45;
      v47 = (unsigned int *)sub_20C02569C((pxrInternal__aapl__pxrReserved__::VtValue *)v69);
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C5269D8, *v47, (uint64_t)v65);
      v48 = v66;
      v49 = (void **)v65[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C5269D8, v42, (uint64_t)__p);
      v52 = v65;
      if (v48 < 0)
        v52 = v49;
      if (v64 >= 0)
        v53 = __p;
      else
        v53 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"attribute '%s' already has variability '%s', cannot change to '%s'", v50, v51, v46, v52, v53);
      if (v75 >= 0)
        v55 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v73;
      else
        v55 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v73;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v55, v54);
      if (v75 < 0)
        operator delete(v73);
      if (v64 < 0)
        operator delete(__p[0]);
      if (v66 < 0)
        operator delete(v65[0]);
    }
  }
  else
  {
    v56 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v56)
      v56 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v57 = sub_20C026788(v12);
    v74 = (char *)&off_24C5269E8 + 3;
    LODWORD(v73) = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t, unsigned int **))(*(_QWORD *)v57 + 152))(v57, v11, (uint64_t)v56 + 464, &v73);
    sub_20BF4C2D8((uint64_t)&v73);
  }
  sub_20BF4C2D8((uint64_t)v69);
  result = sub_20BF4C2D8((uint64_t)v71);
  if ((v67 & 7) != 0)
  {
    v59 = (unsigned int *)(v67 & 0xFFFFFFFFFFFFFFF8);
    do
      v60 = __ldxr(v59);
    while (__stlxr(v60 - 2, v59));
  }
  if ((v68 & 7) != 0)
  {
    v61 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v62 = __ldxr(v61);
    while (__stlxr(v62 - 2, v61));
  }
  return result;
}

void sub_20C025548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;

  if (*(char *)(v27 - 57) < 0)
    operator delete(*(void **)(v27 - 80));
  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  sub_20BF4C2D8((uint64_t)&a27);
  sub_20BF4C2D8(v27 - 96);
  if ((a25 & 7) != 0)
  {
    v29 = (unsigned int *)(a25 & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
  if ((a26 & 7) != 0)
  {
    v31 = (unsigned int *)(a26 & 0xFFFFFFFFFFFFFFF8);
    do
      v32 = __ldxr(v31);
    while (__stlxr(v32 - 2, v31));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C02569C(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v2;
  uint64_t result;

  if ((sub_20C030CF4(a1) & 1) == 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_FailGet((uint64_t)a1, (void (*)(void **__return_ptr))sub_20C030D6C, (uint64_t)&stru_24C5269D8);
  v2 = *((_QWORD *)a1 + 1);
  result = (uint64_t)a1;
  if ((v2 & 4) != 0)
    return (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v2 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_DictionaryBegin(_QWORD *a1)
{
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  int64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD **v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  int64x2_t v19;
  char *v20;
  pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext *v21;
  uint64_t result;
  _QWORD **v23;
  uint64_t v24;
  int64x2_t v25;
  char *v26;
  _QWORD *v27;

  v23 = 0;
  v2 = (_QWORD *)a1[98];
  v3 = a1[99];
  if ((unint64_t)v2 >= v3)
  {
    v5 = (int64x2_t *)(a1 + 97);
    v6 = a1[97];
    v7 = ((uint64_t)v2 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      sub_20BDDF694();
    v8 = (uint64_t)(a1 + 99);
    v9 = v3 - v6;
    v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v7 + 1))
      v10 = v7 + 1;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    v27 = a1 + 99;
    if (v11)
    {
      v12 = (char *)sub_20BDDF6A8(v8, v11);
      v13 = v23;
    }
    else
    {
      v13 = 0;
      v12 = 0;
    }
    v14 = &v12[8 * v7];
    v15 = &v12[8 * v11];
    v26 = v15;
    v23 = 0;
    *(_QWORD *)v14 = v13;
    v4 = v14 + 8;
    v25.i64[1] = (uint64_t)(v14 + 8);
    v16 = (_QWORD *)a1[98];
    v17 = (_QWORD *)a1[97];
    if (v16 == v17)
    {
      v19 = vdupq_n_s64((unint64_t)v16);
    }
    else
    {
      do
      {
        v18 = *--v16;
        *v16 = 0;
        *((_QWORD *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      v19 = *v5;
      v4 = (_QWORD *)v25.i64[1];
      v15 = v26;
    }
    a1[97] = v14;
    a1[98] = v4;
    v25 = v19;
    v20 = (char *)a1[99];
    a1[99] = v15;
    v26 = v20;
    v24 = v19.i64[0];
    sub_20C030F7C((uint64_t)&v24);
  }
  else
  {
    *v2 = 0;
    v4 = v2 + 1;
  }
  a1[98] = v4;
  sub_20BF49F14(&v23, 0);
  v21 = (pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext *)(a1 + 57);
  result = pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::IsRecordingString(v21);
  if ((_DWORD)result)
    return pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::StopRecordingString((uint64_t)v21);
  return result;
}

void sub_20C025850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD **a9)
{
  sub_20BF49F14(&a9, 0);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_DictionaryEnd(uint64_t a1)
{
  _QWORD ***v2;

  v2 = (_QWORD ***)(*(_QWORD *)(a1 + 784) - 8);
  sub_20BF49F14(v2, 0);
  *(_QWORD *)(a1 + 784) = v2;
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_DictionaryInsertValue(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  pxrInternal__aapl__pxrReserved__::VtDictionary *v3;
  __int128 *v4;
  uint64_t *v5;

  v2 = (_QWORD *)(a2 + 760);
  v3 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(_QWORD *)(a2 + 784) - 16);
  v4 = (__int128 *)sub_20C007CCC(a1);
  v5 = pxrInternal__aapl__pxrReserved__::VtDictionary::operator[](v3, v4);
  return sub_20BF4A9BC(v5, v2);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_DictionaryInsertDictionary(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::VtDictionary *v5;
  __int128 *v6;
  uint64_t *v7;

  v3 = *(_QWORD *)(a2 + 784);
  v4 = v3 - *(_QWORD *)(a2 + 776);
  v5 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)(v3 - 16);
  v6 = (__int128 *)sub_20C007CCC(a1);
  v7 = pxrInternal__aapl__pxrReserved__::VtDictionary::operator[](v5, v6);
  sub_20BF4AB1C((pxrInternal__aapl__pxrReserved__::VtValue *)v7, (const void ****)(*(_QWORD *)(a2 + 776) + v4 - 8));
  pxrInternal__aapl__pxrReserved__::VtDictionary::clear((pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(_QWORD *)(a2 + 776) + v4 - 8));
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_DictionaryInitScalarFactory(uint64_t a1, pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *a2)
{
  uint64_t v3;
  const char *v4;
  char *v5;
  uint64_t v6;
  const char *v7;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  char v10;

  v3 = sub_20C007CCC(a1);
  if ((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::SetupFactory((uint64_t)a2 + 456, (std::string *)v3) & 1) == 0)
  {
    if (*(char *)(v3 + 23) >= 0)
      v6 = v3;
    else
      v6 = *(_QWORD *)v3;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Unrecognized value typename '%s' for dictionary", v4, v5, v6);
    if (v10 >= 0)
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(a2, p_p, v7);
    if (v10 < 0)
      operator delete(__p);
  }
}

void sub_20C0259BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_DictionaryInitShapedFactory(uint64_t a1, pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *a2)
{
  uint64_t v3;
  char *v4;
  size_t v5;
  std::string *v6;
  char *v7;
  const char *v8;
  char *v9;
  std::string *v10;
  const char *v11;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *__p;
  char v14;
  std::string v15;

  v3 = sub_20C007CCC(a1);
  v4 = (char *)v3;
  if (*(char *)(v3 + 23) >= 0)
    v5 = *(unsigned __int8 *)(v3 + 23);
  else
    v5 = *(_QWORD *)(v3 + 8);
  v6 = &v15;
  sub_20BDF6BDC((uint64_t)&v15, v5 + 2);
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v6 = (std::string *)v15.__r_.__value_.__r.__words[0];
  if (v5)
  {
    if (v4[23] >= 0)
      v7 = v4;
    else
      v7 = *(char **)v4;
    memmove(v6, v7, v5);
  }
  strcpy((char *)v6 + v5, "[]");
  if ((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::SetupFactory((uint64_t)a2 + 456, &v15) & 1) == 0)
  {
    v10 = &v15;
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v10 = (std::string *)v15.__r_.__value_.__r.__words[0];
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Unrecognized value typename '%s' for dictionary", v8, v9, v10);
    if (v14 >= 0)
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(a2, p_p, v11);
    if (v14 < 0)
      operator delete(__p);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v15.__r_.__value_.__l.__data_);
}

void sub_20C025AE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
    operator delete(__p);
  if (a22 < 0)
    operator delete(a17);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_ValueSetTuple(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  char *v3;
  const char *v4;
  char *v5;
  const char *v6;
  void **v7;
  char *v8;
  int v9;
  const char *v10;
  char *v11;
  void **v12;
  const char *v13;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  void *v15[2];
  uint64_t v16;
  std::type_info __p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = (char *)this + 456;
  if ((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::IsRecordingString((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 456)) & 1) != 0
    || !*((_BYTE *)this + 664))
  {
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::ProduceValue((uint64_t)v3, v15, v5, &__p);
    sub_20BF4B5D8((_QWORD *)this + 95, &__p);
    sub_20BF4C2D8((uint64_t)&__p);
    __p.__type_name = 0;
    v9 = pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 760), &__p, v8);
    sub_20BF4C2D8((uint64_t)&__p);
    if (v9)
    {
      v12 = v15;
      if (v16 < 0)
        v12 = (void **)v15[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Error parsing tuple value: %s", v10, v11, v12);
      if (v18 >= 0)
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
      else
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p.__vftable;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, p_p, v13);
      if (v18 < 0)
        operator delete(__p.__vftable);
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Type name has [] for non-shaped value.\n", v4, v5);
    if (v16 >= 0)
      v7 = v15;
    else
      v7 = (void **)v15[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v7, v6);
  }
  if (SHIBYTE(v16) < 0)
    operator delete(v15[0]);
}

void sub_20C025C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_ValueSetList(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  char *v3;
  const char *v4;
  char *v5;
  char *v6;
  int v7;
  const char *v8;
  char *v9;
  void **v10;
  const char *v11;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  const char *v13;
  void **v14;
  void *v15[2];
  uint64_t v16;
  std::type_info __p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = (char *)this + 456;
  if ((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::IsRecordingString((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 456)) & 1) != 0
    || *((_BYTE *)this + 664))
  {
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::ProduceValue((uint64_t)v3, v15, v5, &__p);
    sub_20BF4B5D8((_QWORD *)this + 95, &__p);
    sub_20BF4C2D8((uint64_t)&__p);
    __p.__type_name = 0;
    v7 = pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 760), &__p, v6);
    sub_20BF4C2D8((uint64_t)&__p);
    if (v7)
    {
      v10 = v15;
      if (v16 < 0)
        v10 = (void **)v15[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Error parsing shaped value: %s", v8, v9, v10);
      if (v18 >= 0)
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
      else
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p.__vftable;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, p_p, v11);
      if (v18 < 0)
        operator delete(__p.__vftable);
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Type name missing [] for shaped value.", v4, v5);
    if (v16 >= 0)
      v14 = v15;
    else
      v14 = (void **)v15[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v14, v13);
  }
  if (SHIBYTE(v16) < 0)
    operator delete(v15[0]);
}

void sub_20C025E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_ValueSetShaped(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  char *v3;
  const char *v4;
  char *v5;
  char *v6;
  int v7;
  const char *v8;
  char *v9;
  void **v10;
  const char *v11;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  const char *v13;
  void **v14;
  void *v15[2];
  uint64_t v16;
  std::type_info __p;
  char v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = (char *)this + 456;
  if ((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::IsRecordingString((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 456)) & 1) != 0
    || *((_BYTE *)this + 664))
  {
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::ProduceValue((uint64_t)v3, v15, v5, &__p);
    sub_20BF4B5D8((_QWORD *)this + 95, &__p);
    sub_20BF4C2D8((uint64_t)&__p);
    __p.__type_name = 0;
    v7 = pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 760), &__p, v6);
    sub_20BF4C2D8((uint64_t)&__p);
    if (v7)
    {
      v10 = v15;
      if (v16 < 0)
        v10 = (void **)v15[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Error parsing shaped value: %s", v8, v9, v10);
      if (v18 >= 0)
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
      else
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p.__vftable;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, p_p, v11);
      if (v18 < 0)
        operator delete(__p.__vftable);
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Type name missing [] for shaped value.", v4, v5);
    if (v16 >= 0)
      v14 = v15;
    else
      v14 = (void **)v15[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError(this, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v14, v13);
  }
  if (SHIBYTE(v16) < 0)
    operator delete(v15[0]);
}

void sub_20C025FAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_ValueSetCurrentToSdfPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  void *__p[2];
  uint64_t v8;

  v3 = sub_20C007CCC(a1);
  if (*(char *)(v3 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)v3, *(_QWORD *)(v3 + 8));
  }
  else
  {
    v4 = *(_OWORD *)v3;
    v8 = *(_QWORD *)(v3 + 16);
    *(_OWORD *)__p = v4;
  }
  v5 = (void *)HIBYTE(v8);
  if (v8 < 0)
    v5 = __p[1];
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(&v6, __p);
  }
  else
  {
    v6 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v6);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v6 + 1);
  }
  sub_20C0260F8(a2 + 760, &v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v6 + 1);
  sub_20BFD265C(&v6);
  if (SHIBYTE(v8) < 0)
    operator delete(__p[0]);
}

void sub_20C0260C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C0260F8(uint64_t a1, _DWORD *a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = (char *)&off_24C524B10 + 1;
  sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4((_DWORD *)(a1 + 4), a2 + 1);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C026198(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20BDC12F4(a1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimInitRelationship(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::TfToken *v3;
  uint64_t *EmptyString;
  const char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  unint64_t v14;
  const char *v15;
  const char *v16;
  void **v17;
  uint64_t v18;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v19;
  uint64_t v20;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v21;
  uint64_t v22;
  _DWORD *i;
  _DWORD *v24;
  unsigned int *v25;
  unsigned int v26;
  uint64_t v27;
  void *__p[2];
  char v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  sub_20C007CCC(a1);
  v3 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v27);
  if ((v27 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((v27 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v3);
  if ((pxrInternal__aapl__pxrReserved__::SdfPath::IsValidNamespacedIdentifier((size_t *)EmptyString) & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 816), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v27, (int *)__p);
    sub_20BFD3EBC((int *)(a2 + 816), (int *)__p);
    sub_20BFD3F10((int *)(a2 + 820), (int *)__p + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
    sub_20BFD265C(__p);
    v7 = sub_20C026788((uint64_t *)(a2 + 808));
    if (((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 72))(v7, a2 + 816) & 1) == 0)
    {
      v8 = *(_QWORD *)(a2 + 904);
      v9 = *(_QWORD **)(v8 - 16);
      if ((unint64_t)v9 >= *(_QWORD *)(v8 - 8))
      {
        v13 = sub_20BFCA068((char **)(v8 - 24), &v27);
      }
      else
      {
        v10 = v27;
        *v9 = v27;
        if ((v10 & 7) != 0)
        {
          v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 2, v11));
          if ((v12 & 1) == 0)
            *v9 &= 0xFFFFFFFFFFFFFFF8;
        }
        v13 = (char *)(v9 + 1);
      }
      *(_QWORD *)(v8 - 16) = v13;
      v18 = sub_20C026788((uint64_t *)(a2 + 808));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v18 + 64))(v18, a2 + 816, 8);
    }
    v19 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v19)
      v19 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v20 = sub_20C026788((uint64_t *)(a2 + 808));
    sub_20BF4C6D0(__p, (_QWORD *)(a2 + 832));
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)v20 + 152))(v20, a2 + 816, (uint64_t)v19 + 464, __p);
    sub_20BF4C2D8((uint64_t)__p);
    if (*(_BYTE *)(a2 + 801))
    {
      v21 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v21)
        v21 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      v22 = sub_20C026788((uint64_t *)(a2 + 808));
      __p[1] = &unk_24C51FCF3;
      LOBYTE(__p[0]) = *(_BYTE *)(a2 + 801);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)v22 + 152))(v22, a2 + 816, (uint64_t)v21 + 64, __p);
      sub_20BF4C2D8((uint64_t)__p);
    }
    *(_BYTE *)(a2 + 224) = 0;
    if (*(_BYTE *)(a2 + 256))
    {
      __p[0] = (void *)(a2 + 232);
      sub_20BFD6F90((void ***)__p);
      *(_BYTE *)(a2 + 256) = 0;
    }
    v24 = *(_DWORD **)(a2 + 264);
    for (i = *(_DWORD **)(a2 + 272); i != v24; sub_20BFD6F64(a2 + 280, i))
      i -= 2;
    *(_QWORD *)(a2 + 272) = v24;
  }
  else
  {
    v14 = v27 & 0xFFFFFFFFFFFFFFF8;
    if ((v27 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v15 = (const char *)(v14 + 16);
      if (*(char *)(v14 + 39) < 0)
        v15 = *(const char **)v15;
    }
    else
    {
      v15 = "";
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid relationship name", v5, v6, v15);
    if (v29 >= 0)
      v17 = __p;
    else
      v17 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v17, v16);
    if (v29 < 0)
      operator delete(__p[0]);
  }
  if ((v27 & 7) != 0)
  {
    v25 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
    do
      v26 = __ldxr(v25);
    while (__stlxr(v26 - 2, v25));
  }
}

void sub_20C0264AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  unsigned int *v17;
  unsigned int v18;

  sub_20BF4C2D8((uint64_t)&__p);
  if ((a10 & 7) != 0)
  {
    v17 = (unsigned int *)(a10 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PrimEndRelationship(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a2)
{
  uint64_t v3;
  pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *v4;
  void ***v5;
  pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *v6;
  uint64_t v7;
  _DWORD *v9;
  int *v10;
  uint64_t v11;
  void **v12;
  std::type_info **v13;
  uint64_t v14;
  void ***v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  if (*((_QWORD *)this + 33) != *((_QWORD *)this + 34))
  {
    v3 = sub_20C026788((uint64_t *)this + 101);
    v4 = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
    if (!v4)
      v4 = sub_20BFD416C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
    v12 = 0;
    v13 = 0;
    v14 = 0;
    (*(void (**)(void ****__return_ptr, uint64_t, char *, uint64_t))(*(_QWORD *)v3 + 136))(&v15, v3, (char *)this + 816, (uint64_t)v4 + 48);
    if (sub_20C030FCC((pxrInternal__aapl__pxrReserved__::VtValue *)&v15))
    {
      if ((v16 & 4) != 0)
        v5 = (void ***)(*(uint64_t (**)(void ****))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(&v15);
      else
        v5 = v15;
    }
    else
    {
      v5 = &v12;
    }
    v9 = 0;
    v10 = 0;
    v11 = 0;
    sub_20BFD6D38(&v9, *v5, v5[1], v5[1] - *v5);
    sub_20BF4C2D8((uint64_t)&v15);
    v15 = &v12;
    sub_20BFD6F90((void ***)&v15);
    sub_20C031044((uint64_t *)&v9, v10, *((_DWORD **)this + 33), *((_DWORD **)this + 34), (uint64_t)(*((_QWORD *)this + 34) - *((_QWORD *)this + 33)) >> 3);
    v6 = (pxrInternal__aapl__pxrReserved__::SdfChildrenKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
    if (!v6)
      v6 = sub_20BFD416C(&pxrInternal__aapl__pxrReserved__::SdfChildrenKeys);
    v7 = sub_20C026788((uint64_t *)this + 101);
    v13 = &off_24C526910;
    sub_20C030C78(&v12, &v9);
    (*(void (**)(uint64_t, char *, uint64_t, void ***))(*(_QWORD *)v7 + 152))(v7, (char *)this + 816, (uint64_t)v6 + 48, &v12);
    sub_20BF4C2D8((uint64_t)&v12);
    v12 = (void **)&v9;
    sub_20BFD6F90(&v12);
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)((char *)this + 816), &v9);
  sub_20BFD3EBC((int *)this + 204, (int *)&v9);
  sub_20BFD3F10((int *)this + 205, (int *)&v9 + 1);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v9 + 1);
  return sub_20BFD265C(&v9);
}

void sub_20C02671C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void **a16)
{
  sub_20BF4C2D8((uint64_t)&a13);
  a16 = (void **)&a9;
  sub_20BFD6F90(&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C026788(uint64_t *a1)
{
  uint64_t result;
  char *v2;
  _QWORD v3[4];
  char v4;

  result = *a1;
  if (!result)
  {
    v2 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", 47);
    v3[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", (uint64_t)v2, 0x2Fu);
    v3[1] = "operator->";
    v3[2] = 953;
    v3[3] = "T *pxrInternal__aapl__pxrReserved__::TfRefPtr<pxrInternal__aapl__pxrReserved__::SdfData>::operator->() const"
            " [U = pxrInternal__aapl__pxrReserved__::SdfData]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v3, (pxrInternal__aapl__pxrReserved__ *)(0x800000020CAB1105 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

_DWORD *pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RelationshipAppendTargetPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  int v8;
  int v9;
  void **v10;

  v3 = sub_20C007CCC(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(&v8, v3);
  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8))
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 816), &v10);
    pxrInternal__aapl__pxrReserved__::SdfPath::MakeAbsolutePath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10, (int *)v7);
    sub_20BFD3EBC(&v8, (int *)v7);
    sub_20BFD3F10(&v9, (int *)v7 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v7 + 1);
    sub_20BFD265C(v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v10 + 1);
    sub_20BFD265C(&v10);
  }
  if (!*(_BYTE *)(a2 + 256))
  {
    memset(v7, 0, sizeof(v7));
    sub_20C026988(a2 + 232, (uint64_t)v7);
    v10 = (void **)v7;
    sub_20BFD6F90(&v10);
  }
  v4 = *(_QWORD *)(a2 + 240);
  if (v4 >= *(_QWORD *)(a2 + 248))
  {
    v5 = sub_20BFD7890((uint64_t *)(a2 + 232), &v8);
  }
  else
  {
    sub_20BFD6E54(*(_DWORD **)(a2 + 240), &v8);
    sub_20BFD6EA4((_DWORD *)(v4 + 4), &v9);
    v5 = v4 + 8;
  }
  *(_QWORD *)(a2 + 240) = v5;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  return sub_20BFD265C(&v8);
}

void sub_20C026940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  sub_20BFD6F90((void ***)va1);
  sub_20BFD1A18((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C026988(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 24))
  {
    sub_20BFD7014((_QWORD *)a1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_BYTE *)(a1 + 24) = 1;
  }
  return a1;
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PathSetPrim(uint64_t a1, int *a2)
{
  uint64_t v3;
  const char *v4;
  char *v5;
  uint64_t v6;
  const char *v7;
  void **v8;
  void *__p[2];
  char v10;

  v3 = sub_20C007CCC(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(__p, v3);
  sub_20BFD3EBC(a2 + 54, (int *)__p);
  sub_20BFD3F10(a2 + 55, (int *)__p + 1);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
  sub_20BFD265C(__p);
  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 54)))
  {
    if (*(char *)(v3 + 23) >= 0)
      v6 = v3;
    else
      v6 = *(_QWORD *)v3;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid prim path", v4, v5, v6);
    if (v10 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v8, v7);
    if (v10 < 0)
      operator delete(__p[0]);
  }
}

void sub_20C026AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_PathSetPrimOrPropertyScenePath(uint64_t a1, int *a2)
{
  uint64_t v3;
  const char *v4;
  char *v5;
  uint64_t v6;
  const char *v7;
  void **v8;
  void *__p[2];
  char v10;

  v3 = sub_20C007CCC(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(__p, v3);
  sub_20BFD3EBC(a2 + 54, (int *)__p);
  sub_20BFD3F10(a2 + 55, (int *)__p + 1);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
  sub_20BFD265C(__p);
  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 54))
    && !pxrInternal__aapl__pxrReserved__::SdfPath::IsPropertyPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 54))
    || pxrInternal__aapl__pxrReserved__::SdfPath::ContainsPrimVariantSelection((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 54)))
  {
    if (*(char *)(v3 + 23) >= 0)
      v6 = v3;
    else
      v6 = *(_QWORD *)v3;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"'%s' is not a valid prim or property scene path", v4, v5, v6);
    if (v10 >= 0)
      v8 = __p;
    else
      v8 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v8, v7);
    if (v10 < 0)
      operator delete(__p[0]);
  }
}

void sub_20C026BD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetGenericMetadataListOpItems(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, const pxrInternal__aapl__pxrReserved__::TfType *a2, pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *a3)
{
  uint64_t result;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;

  result = sub_20C026C74((char *)this, (uint64_t)a2, (char *)a3);
  if ((result & 1) == 0)
  {
    result = sub_20C026DA0((char *)this, (uint64_t)a2, v6);
    if ((result & 1) == 0)
    {
      result = sub_20C026ECC((char *)this, (uint64_t)a2, v7);
      if ((result & 1) == 0)
      {
        result = sub_20C026FF8((char *)this, (uint64_t)a2, v8);
        if ((result & 1) == 0)
        {
          result = sub_20C027124((char *)this, (uint64_t)a2, v9);
          if ((result & 1) == 0)
            return sub_20C027250((char *)this, (uint64_t)a2, v10);
        }
      }
    }
  }
  return result;
}

uint64_t sub_20C026C74(char *a1, uint64_t a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  uint64_t IsA;
  uint64_t v8;
  __int128 *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v5 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524CF0, (const std::type_info *)a2, a3);
  IsA = pxrInternal__aapl__pxrReserved__::TfType::IsA(a1, *v5, v6);
  if ((_DWORD)IsA)
  {
    if ((sub_20BF64C0C((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)) & 1) != 0
      || !*(_QWORD *)(a2 + 768)
      || (*(_QWORD *)&v11 = "sdf/textParserHelpers.h",
          *((_QWORD *)&v11 + 1) = "_SetItemsIfListOp",
          *(_QWORD *)&v12 = 280,
          *((_QWORD *)&v12 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetItemsIfListOp(con"
                                  "st TfType &, Sdf_TextParserContext *) [ListOpType = pxrInternal__aapl__pxrReserved__::SdfListOp<int>]",
          LOBYTE(v13) = 0,
          (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()", 0) & 1) != 0))
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
      if (sub_20BF64C0C((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
      {
        v8 = *(_QWORD *)(a2 + 768);
        if ((v8 & 4) != 0)
          v9 = (__int128 *)(*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a2 + 760);
        else
          v9 = *(__int128 **)(a2 + 760);
        sub_20C03150C((uint64_t)&v11, v9);
      }
      sub_20C0315C4((_QWORD *)(a2 + 440), *(_DWORD *)(a2 + 448), (unint64_t *)&v11, (uint64_t *)a2);
      sub_20BF5618C((uint64_t)&v11);
    }
  }
  return IsA;
}

void sub_20C026D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C026DA0(char *a1, uint64_t a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  uint64_t IsA;
  uint64_t v8;
  __int128 *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v5 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D00, (const std::type_info *)a2, a3);
  IsA = pxrInternal__aapl__pxrReserved__::TfType::IsA(a1, *v5, v6);
  if ((_DWORD)IsA)
  {
    if ((sub_20C032314((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)) & 1) != 0
      || !*(_QWORD *)(a2 + 768)
      || (*(_QWORD *)&v11 = "sdf/textParserHelpers.h",
          *((_QWORD *)&v11 + 1) = "_SetItemsIfListOp",
          *(_QWORD *)&v12 = 280,
          *((_QWORD *)&v12 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetItemsIfListOp(con"
                                  "st TfType &, Sdf_TextParserContext *) [ListOpType = pxrInternal__aapl__pxrReserved__::"
                                  "SdfListOp<int64_t>]",
          LOBYTE(v13) = 0,
          (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()", 0) & 1) != 0))
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
      if (sub_20C032314((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
      {
        v8 = *(_QWORD *)(a2 + 768);
        if ((v8 & 4) != 0)
          v9 = (__int128 *)(*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a2 + 760);
        else
          v9 = *(__int128 **)(a2 + 760);
        sub_20C03234C((uint64_t)&v11, v9);
      }
      sub_20C032404((_QWORD *)(a2 + 440), *(_DWORD *)(a2 + 448), (unint64_t *)&v11, (uint64_t *)a2);
      sub_20BF5618C((uint64_t)&v11);
    }
  }
  return IsA;
}

void sub_20C026EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C026ECC(char *a1, uint64_t a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  uint64_t IsA;
  uint64_t v8;
  __int128 *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v5 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D10, (const std::type_info *)a2, a3);
  IsA = pxrInternal__aapl__pxrReserved__::TfType::IsA(a1, *v5, v6);
  if ((_DWORD)IsA)
  {
    if ((sub_20BF6374C((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)) & 1) != 0
      || !*(_QWORD *)(a2 + 768)
      || (*(_QWORD *)&v11 = "sdf/textParserHelpers.h",
          *((_QWORD *)&v11 + 1) = "_SetItemsIfListOp",
          *(_QWORD *)&v12 = 280,
          *((_QWORD *)&v12 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetItemsIfListOp(con"
                                  "st TfType &, Sdf_TextParserContext *) [ListOpType = pxrInternal__aapl__pxrReserved__::"
                                  "SdfListOp<unsigned int>]",
          LOBYTE(v13) = 0,
          (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()", 0) & 1) != 0))
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
      if (sub_20BF6374C((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
      {
        v8 = *(_QWORD *)(a2 + 768);
        if ((v8 & 4) != 0)
          v9 = (__int128 *)(*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a2 + 760);
        else
          v9 = *(__int128 **)(a2 + 760);
        sub_20C032F5C((uint64_t)&v11, v9);
      }
      sub_20C033014((_QWORD *)(a2 + 440), *(_DWORD *)(a2 + 448), (unint64_t *)&v11, (uint64_t *)a2);
      sub_20BF5618C((uint64_t)&v11);
    }
  }
  return IsA;
}

void sub_20C026FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C026FF8(char *a1, uint64_t a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  uint64_t IsA;
  uint64_t v8;
  __int128 *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v5 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D20, (const std::type_info *)a2, a3);
  IsA = pxrInternal__aapl__pxrReserved__::TfType::IsA(a1, *v5, v6);
  if ((_DWORD)IsA)
  {
    if ((sub_20C033AF4((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)) & 1) != 0
      || !*(_QWORD *)(a2 + 768)
      || (*(_QWORD *)&v11 = "sdf/textParserHelpers.h",
          *((_QWORD *)&v11 + 1) = "_SetItemsIfListOp",
          *(_QWORD *)&v12 = 280,
          *((_QWORD *)&v12 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetItemsIfListOp(con"
                                  "st TfType &, Sdf_TextParserContext *) [ListOpType = pxrInternal__aapl__pxrReserved__::"
                                  "SdfListOp<uint64_t>]",
          LOBYTE(v13) = 0,
          (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()", 0) & 1) != 0))
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
      if (sub_20C033AF4((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
      {
        v8 = *(_QWORD *)(a2 + 768);
        if ((v8 & 4) != 0)
          v9 = (__int128 *)(*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a2 + 760);
        else
          v9 = *(__int128 **)(a2 + 760);
        sub_20C033B2C((uint64_t)&v11, v9);
      }
      sub_20C033BE4((_QWORD *)(a2 + 440), *(_DWORD *)(a2 + 448), (unint64_t *)&v11, (uint64_t *)a2);
      sub_20BF5618C((uint64_t)&v11);
    }
  }
  return IsA;
}

void sub_20C02710C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C027124(char *a1, uint64_t a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  uint64_t IsA;
  uint64_t v8;
  __int128 *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v5 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D30, (const std::type_info *)a2, a3);
  IsA = pxrInternal__aapl__pxrReserved__::TfType::IsA(a1, *v5, v6);
  if ((_DWORD)IsA)
  {
    if ((sub_20BFED418((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)) & 1) != 0
      || !*(_QWORD *)(a2 + 768)
      || (*(_QWORD *)&v11 = "sdf/textParserHelpers.h",
          *((_QWORD *)&v11 + 1) = "_SetItemsIfListOp",
          *(_QWORD *)&v12 = 280,
          *((_QWORD *)&v12 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetItemsIfListOp(con"
                                  "st TfType &, Sdf_TextParserContext *) [ListOpType = pxrInternal__aapl__pxrReserved__::"
                                  "SdfListOp<std::string>]",
          LOBYTE(v13) = 0,
          (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()", 0) & 1) != 0))
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
      if (sub_20BFED418((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
      {
        v8 = *(_QWORD *)(a2 + 768);
        if ((v8 & 4) != 0)
          v9 = (__int128 *)(*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a2 + 760);
        else
          v9 = *(__int128 **)(a2 + 760);
        sub_20C0346C4((uint64_t)&v11, v9);
      }
      sub_20C03477C((_QWORD *)(a2 + 440), *(_DWORD *)(a2 + 448), (unint64_t *)&v11, (uint64_t *)a2);
      sub_20C008280(&v11);
    }
  }
  return IsA;
}

void sub_20C027238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C008280(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C027250(char *a1, uint64_t a2, char *a3)
{
  uint64_t *v5;
  char *v6;
  uint64_t IsA;
  uint64_t v8;
  __int128 *v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v5 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D40, (const std::type_info *)a2, a3);
  IsA = pxrInternal__aapl__pxrReserved__::TfType::IsA(a1, *v5, v6);
  if ((_DWORD)IsA)
  {
    if ((sub_20BFED450((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)) & 1) != 0
      || !*(_QWORD *)(a2 + 768)
      || (*(_QWORD *)&v11 = "sdf/textParserHelpers.h",
          *((_QWORD *)&v11 + 1) = "_SetItemsIfListOp",
          *(_QWORD *)&v12 = 280,
          *((_QWORD *)&v12 + 1) = "BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetItemsIfListOp(con"
                                  "st TfType &, Sdf_TextParserContext *) [ListOpType = pxrInternal__aapl__pxrReserved__::"
                                  "SdfListOp<TfToken>]",
          LOBYTE(v13) = 0,
          (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v11, "context->currentValue.IsHolding<ArrayType>() || context->currentValue.IsEmpty()", 0) & 1) != 0))
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
      if (sub_20BFED450((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
      {
        v8 = *(_QWORD *)(a2 + 768);
        if ((v8 & 4) != 0)
          v9 = (__int128 *)(*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a2 + 760);
        else
          v9 = *(__int128 **)(a2 + 760);
        sub_20C034C28((uint64_t)&v11, v9);
      }
      sub_20C034CE0((_QWORD *)(a2 + 440), *(_DWORD *)(a2 + 448), (unint64_t *)&v11, (uint64_t *)a2);
      sub_20C00918C(&v11);
    }
  }
  return IsA;
}

void sub_20C027364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C00918C(&a9);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_IsGenericMetadataListOpType(pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *this, const pxrInternal__aapl__pxrReserved__::TfType *a2, pxrInternal__aapl__pxrReserved__::TfType *a3)
{
  unsigned __int8 v5;
  uint64_t v6;
  _BOOL8 result;
  uint64_t v8;
  const std::type_info *v9;
  char *v10;
  const std::type_info *v11;
  char *v12;
  const std::type_info *v13;
  char *v14;
  const std::type_info *v15;
  char *v16;
  const std::type_info *v17;
  char *v18;
  const std::type_info *v19;
  char *v20;
  uint64_t v21;

  v5 = atomic_load((unsigned __int8 *)&qword_254985948);
  if ((v5 & 1) == 0)
  {
    v8 = __cxa_guard_acquire(&qword_254985948);
    if ((_DWORD)v8)
    {
      qword_2549858E8[0] = sub_20C027494(v8, v9, v10);
      unk_2549858F0 = v11;
      qword_2549858F8 = sub_20C0274D4(qword_2549858E8[0], v11, v12);
      unk_254985900 = v13;
      qword_254985908 = sub_20C027514(qword_2549858F8, v13, v14);
      unk_254985910 = v15;
      qword_254985918 = sub_20C027554(qword_254985908, v15, v16);
      unk_254985920 = v17;
      qword_254985928 = sub_20C027594(qword_254985918, v17, v18);
      unk_254985930 = v19;
      qword_254985938 = sub_20C0275D4(qword_254985928, v19, v20);
      unk_254985940 = v21;
      __cxa_guard_release(&qword_254985948);
    }
  }
  v6 = 0;
  while (qword_2549858E8[v6] != *(_QWORD *)this)
  {
    v6 += 2;
    if (v6 == 12)
      return 0;
  }
  result = v6 != 12;
  if (a2)
  {
    *(_QWORD *)a2 = qword_2549858E8[v6 + 1];
    return 1;
  }
  return result;
}

void sub_20C02747C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254985948);
  _Unwind_Resume(a1);
}

uint64_t sub_20C027494(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  const std::type_info *v4;
  char *v5;

  v3 = pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C524CF0, a2, a3);
  pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51DD20, v4, v5);
  return *(_QWORD *)v3;
}

uint64_t sub_20C0274D4(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  const std::type_info *v4;
  char *v5;

  v3 = pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C524D00, a2, a3);
  pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51DD50, v4, v5);
  return *(_QWORD *)v3;
}

uint64_t sub_20C027514(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  const std::type_info *v4;
  char *v5;

  v3 = pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C524D10, a2, a3);
  pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51DD38, v4, v5);
  return *(_QWORD *)v3;
}

uint64_t sub_20C027554(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  const std::type_info *v4;
  char *v5;

  v3 = pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C524D20, a2, a3);
  pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51DD68, v4, v5);
  return *(_QWORD *)v3;
}

uint64_t sub_20C027594(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  const std::type_info *v4;
  char *v5;

  v3 = pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D30, a2, a3);
  pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51DDC8, v4, v5);
  return *(_QWORD *)v3;
}

uint64_t sub_20C0275D4(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  const std::type_info *v4;
  char *v5;

  v3 = pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C524D40, a2, a3);
  pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51DDE0, v4, v5);
  return *(_QWORD *)v3;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_GenericMetadataStart(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t *v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  char *v12;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition *v13;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *FieldDefinition;
  pxrInternal__aapl__pxrReserved__::VtValue *FallbackValue;
  const std::type_info *v16;
  char *v17;
  pxrInternal__aapl__pxrReserved__::TfType *v18;
  pxrInternal__aapl__pxrReserved__::TfToken *AsToken;
  std::string *EmptyString;
  uint64_t result;
  const pxrInternal__aapl__pxrReserved__::VtValue *v22;
  pxrInternal__aapl__pxrReserved__::TfToken *v23;
  std::string *v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _BYTE v36[8];
  uint64_t Type;

  sub_20C007CCC(a1);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&Type);
  v5 = (uint64_t *)(a3 + 440);
  if (&Type == (uint64_t *)(a3 + 440))
  {
    v8 = Type;
  }
  else
  {
    if ((*v5 & 7) != 0)
    {
      v6 = (unsigned int *)(*v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    v8 = 0;
    *v5 = Type;
    Type = 0;
  }
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  *(_DWORD *)(a3 + 448) = 0;
  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  v12 = (char *)Instance + 72 * a2;
  if (v12[120])
    v13 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition *)(v12 + 56);
  else
    v13 = 0;
  if (!pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition::IsMetadataField(v13, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a3 + 440)))return pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::StartRecordingString(a3 + 456);
  FieldDefinition = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFieldDefinition(Instance, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a3 + 440));
  FallbackValue = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::GetFallbackValue(FieldDefinition);
  Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType(FallbackValue, v16, v17);
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v36);
  if (pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_IsGenericMetadataListOpType((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)&Type, (const pxrInternal__aapl__pxrReserved__::TfType *)v36, v18))
  {
    v33 = 0;
    v34 = pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FindType((unint64_t ***)Instance, (const pxrInternal__aapl__pxrReserved__::TfType *)v36, (unsigned int **)&v33);
    AsToken = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetAsToken((uint64_t)&v34, (unsigned int **)&v35);
    if ((v35 & 0xFFFFFFFFFFFFFFF8) != 0)
      EmptyString = (std::string *)((v35 & 0xFFFFFFFFFFFFFFF8) + 16);
    else
      EmptyString = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(AsToken);
    result = pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::SetupFactory(a3 + 456, EmptyString);
    if ((v35 & 7) != 0)
    {
      v25 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    if ((v33 & 7) != 0)
    {
      v27 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
  }
  else
  {
    v22 = (const pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::GetFallbackValue(FieldDefinition);
    v33 = 0;
    v34 = pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FindType((unint64_t ***)Instance, v22, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v33);
    v23 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetAsToken((uint64_t)&v34, (unsigned int **)&v35);
    if ((v35 & 0xFFFFFFFFFFFFFFF8) != 0)
      v24 = (std::string *)((v35 & 0xFFFFFFFFFFFFFFF8) + 16);
    else
      v24 = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v23);
    result = pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::SetupFactory(a3 + 456, v24);
    if ((v35 & 7) != 0)
    {
      v29 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
      do
        v30 = __ldxr(v29);
      while (__stlxr(v30 - 2, v29));
    }
    if ((v33 & 7) != 0)
    {
      v31 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_GenericMetadataEnd(unsigned int a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  char *v5;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition *v6;
  _QWORD *v7;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *FieldDefinition;
  pxrInternal__aapl__pxrReserved__::VtValue *FallbackValue;
  const std::type_info *v10;
  char *v11;
  pxrInternal__aapl__pxrReserved__::TfType *v12;
  const char *v13;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v14;
  unint64_t v15;
  const char *v16;
  const char *v17;
  char *v18;
  unint64_t v19;
  const char *v20;
  const void ****v21;
  void **v22;
  const char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  const char *v27;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  uint64_t v29;
  void **v30;
  unint64_t v31;
  const char *v32;
  const char *v33;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v34;
  unsigned int v35;
  unsigned __int8 *v36;
  int v37;
  uint64_t v38;
  std::string *v39;
  uint64_t v40;
  void **p_size;
  void **v43;
  _QWORD v44[2];
  char v45;
  std::string v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *__p;
  const char *v53;
  uint64_t v54;
  const char *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE v65[16];
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  v5 = (char *)Instance + 72 * a1;
  if (v5[120])
    v6 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition *)(v5 + 56);
  else
    v6 = 0;
  v7 = (_QWORD *)(a2 + 440);
  if (!pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition::IsMetadataField(v6, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a2 + 440)))
  {
    if (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::SpecDefinition::IsValidField(v6, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a2 + 440)))
    {
      v19 = *v7 & 0xFFFFFFFFFFFFFFF8;
      if (v19)
      {
        v20 = (const char *)(v19 + 16);
        if (*(char *)(v19 + 39) < 0)
          v20 = *(const char **)v20;
      }
      else
      {
        v20 = "";
      }
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"\"%s\" is registered as a non-metadata field", v17, v18, v20);
      if (v54 >= 0)
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
      else
        p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, p_p, v27);
      goto LABEL_48;
    }
    v64 = 0;
    if (sub_20BF4A73C((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760)))
    {
      v21 = (const void ****)sub_20BF4D3FC((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 760));
      pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::SdfUnregisteredValue((pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue *)&__p, v21);
      sub_20C018558((uint64_t)&v63, &__p);
      v22 = &__p;
LABEL_84:
      sub_20BF4C2D8((uint64_t)v22);
      if (v64)
      {
        v40 = sub_20C026788((uint64_t *)(a2 + 808));
        sub_20BF4C6D0(&__p, &v63);
        (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)v40 + 152))(v40, a2 + 816, a2 + 440, &__p);
        sub_20BF4C2D8((uint64_t)&__p);
      }
      v30 = (void **)&v63;
      goto LABEL_87;
    }
    v62 = 0;
    v25 = sub_20C026788((uint64_t *)(a2 + 808));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, _QWORD **))(*(_QWORD *)v25 + 112))(v25, a2 + 816, a2 + 440, &v61)&& ((sub_20BFE4DCC((pxrInternal__aapl__pxrReserved__::VtValue *)&v61) & 1) != 0|| (__p = "sdf/textParserHelpers.cpp", v53 = "operator()", v54 = 913, v55 = "auto pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_GenericMetadataEnd(SdfSpecType, Sdf_TextParserContext *)::(anonymous class)::operator()() const", v56 = 0, (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "v.IsHolding<SdfUnregisteredValue>()", 0) & 1) != 0)))
    {
      if ((v62 & 4) != 0)
        v26 = (_QWORD *)(*(uint64_t (**)(_QWORD **))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(&v61);
      else
        v26 = v61;
      sub_20BF4A9BC(&v61, v26);
    }
    else
    {
      v53 = 0;
      sub_20BF4B5D8(&v61, &__p);
      sub_20BF4C2D8((uint64_t)&__p);
    }
    if (!*(_DWORD *)(a2 + 448))
    {
      pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::GetRecordedString((char *)(a2 + 456), (uint64_t)&__p);
      pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::SdfUnregisteredValue((uint64_t)&v46, (uint64_t)&__p);
      sub_20C018558((uint64_t)&v63, &v46);
      sub_20BF4C2D8((uint64_t)&v46);
      if (SHIBYTE(v54) < 0)
        operator delete(__p);
      goto LABEL_83;
    }
    if (v62 && !sub_20BFE4EAC((pxrInternal__aapl__pxrReserved__::VtValue *)&v61))
    {
LABEL_83:
      v22 = (void **)&v61;
      goto LABEL_84;
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue>::SdfListOp((uint64_t)&v46);
    sub_20C02826C((uint64_t *)&v61, (uint64_t)&v46, (uint64_t)&__p);
    p_size = (void **)&v51;
    sub_20BF8CA20(&p_size);
    p_size = (void **)&v50;
    sub_20BF8CA20(&p_size);
    p_size = (void **)&v49;
    sub_20BF8CA20(&p_size);
    p_size = (void **)&v48;
    sub_20BF8CA20(&p_size);
    p_size = (void **)&v47;
    sub_20BF8CA20(&p_size);
    p_size = (void **)&v46.__r_.__value_.__l.__size_;
    sub_20BF8CA20(&p_size);
    pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::GetRecordedString((char *)(a2 + 456), (uint64_t)&v46);
    v35 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v46.__r_.__value_.__l.__size_)
        goto LABEL_79;
      if (v46.__r_.__value_.__l.__size_ == 4)
      {
        v36 = (unsigned __int8 *)v46.__r_.__value_.__r.__words[0];
        if (*(_DWORD *)v46.__r_.__value_.__l.__data_ == 1701736270)
        {
LABEL_58:
          p_size = 0;
          v43 = 0;
          v44[0] = 0;
LABEL_80:
          if ((v35 & 0x80) != 0)
            operator delete(v46.__r_.__value_.__l.__data_);
          pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue>::SetItems((unsigned __int8 *)&__p, (unsigned __int8 *)&p_size, *(_DWORD *)(a2 + 448));
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&p_size;
          sub_20BF8CA20((void ***)&v46);
          pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::SdfUnregisteredValue((uint64_t)&v46, (uint64_t)&__p);
          sub_20C018558((uint64_t)&v63, &v46);
          sub_20BF4C2D8((uint64_t)&v46);
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v60;
          sub_20BF8CA20((void ***)&v46);
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v59;
          sub_20BF8CA20((void ***)&v46);
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v58;
          sub_20BF8CA20((void ***)&v46);
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
          sub_20BF8CA20((void ***)&v46);
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v56;
          sub_20BF8CA20((void ***)&v46);
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
          sub_20BF8CA20((void ***)&v46);
          goto LABEL_83;
        }
      }
      else
      {
        v36 = (unsigned __int8 *)v46.__r_.__value_.__r.__words[0];
      }
      v37 = *v36;
    }
    else
    {
      if (HIBYTE(v46.__r_.__value_.__r.__words[2]) == 4 && LODWORD(v46.__r_.__value_.__l.__data_) == 1701736270)
        goto LABEL_58;
      if (!*((_BYTE *)&v46.__r_.__value_.__s + 23))
        goto LABEL_79;
      v37 = v46.__r_.__value_.__s.__data_[0];
    }
    if (v37 == 91)
    {
      std::string::erase(&v46, 0, 1uLL);
      v35 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
    }
    if ((v35 & 0x80) != 0)
    {
      if (!v46.__r_.__value_.__l.__size_)
        goto LABEL_79;
      v39 = (std::string *)v46.__r_.__value_.__r.__words[0];
      if (*(_BYTE *)(v46.__r_.__value_.__r.__words[0] + v46.__r_.__value_.__l.__size_ - 1) != 93)
        goto LABEL_79;
      v38 = --v46.__r_.__value_.__l.__size_;
    }
    else
    {
      if (!v35 || v46.__r_.__value_.__s.__data_[v35 - 1] != 93)
        goto LABEL_79;
      v38 = v35 - 1;
      *((_BYTE *)&v46.__r_.__value_.__s + 23) = v35 - 1;
      v39 = &v46;
    }
    v39->__r_.__value_.__s.__data_[v38] = 0;
LABEL_79:
    pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::SdfUnregisteredValue((uint64_t)v65, (uint64_t)&v46);
    p_size = 0;
    v43 = 0;
    v44[0] = 0;
    v44[1] = &p_size;
    v45 = 0;
    p_size = (void **)operator new(0x10uLL);
    v43 = p_size;
    v44[0] = p_size + 2;
    v43 = (void **)sub_20C0283AC((uint64_t)v44, (uint64_t)v65, (uint64_t)&v66, (uint64_t)p_size);
    sub_20BF4C2D8((uint64_t)v65);
    LOBYTE(v35) = *((_BYTE *)&v46.__r_.__value_.__s + 23);
    goto LABEL_80;
  }
  FieldDefinition = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFieldDefinition(Instance, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a2 + 440));
  FallbackValue = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::GetFallbackValue(FieldDefinition);
  v46.__r_.__value_.__r.__words[0] = pxrInternal__aapl__pxrReserved__::VtValue::GetType(FallbackValue, v10, v11);
  if (pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_IsGenericMetadataListOpType((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)&v46, 0, v12))
  {
    sub_20C028114((uint64_t *)FieldDefinition, (_QWORD *)(a2 + 760), &__p);
    if (!(_BYTE)v55)
    {
      pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_SetGenericMetadataListOpItems((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)&v46, (const pxrInternal__aapl__pxrReserved__::TfType *)a2, v14);
      goto LABEL_88;
    }
    if (SHIBYTE(v54) < 0)
      operator delete(__p);
    v15 = *v7 & 0xFFFFFFFFFFFFFFF8;
    if (v15)
    {
      v16 = (const char *)(v15 + 16);
      if (*(char *)(v15 + 39) < 0)
        v16 = *(const char **)v16;
    }
    else
    {
      v16 = "";
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"invalid value for field \"%s\"", v13, (char *)v14, v16);
    if (v54 >= 0)
      v34 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
    else
      v34 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
    goto LABEL_47;
  }
  sub_20C0281C0((uint64_t *)FieldDefinition, (_QWORD *)(a2 + 760), &__p);
  if ((_BYTE)v55)
  {
    if (SHIBYTE(v54) < 0)
      operator delete(__p);
    goto LABEL_36;
  }
  if (*(_QWORD *)(a2 + 768))
  {
    v29 = sub_20C026788((uint64_t *)(a2 + 808));
    sub_20BF4C6D0(&__p, (_QWORD *)(a2 + 760));
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(_QWORD *)v29 + 152))(v29, a2 + 816, a2 + 440, &__p);
    v30 = &__p;
LABEL_87:
    sub_20BF4C2D8((uint64_t)v30);
    goto LABEL_88;
  }
LABEL_36:
  v31 = *v7 & 0xFFFFFFFFFFFFFFF8;
  if (v31)
  {
    v32 = (const char *)(v31 + 16);
    if (*(char *)(v31 + 39) < 0)
      v32 = *(const char **)v32;
  }
  else
  {
    v32 = "";
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"invalid value for field \"%s\"", v23, v24, v32);
  if (v54 >= 0)
    v34 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
  else
    v34 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
LABEL_47:
  pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a2, v34, v33);
LABEL_48:
  if (SHIBYTE(v54) < 0)
    operator delete(__p);
LABEL_88:
  pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext::Clear((pxrInternal__aapl__pxrReserved__::Sdf_ParserValueContext *)(a2 + 456));
  v53 = 0;
  sub_20BF4B5D8((_QWORD *)(a2 + 760), &__p);
  return sub_20BF4C2D8((uint64_t)&__p);
}

void sub_20C027FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  sub_20BF4C2D8(v43 - 104);
  sub_20BF4C2D8(v43 - 88);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C028114@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  void (*v3)(uint64_t, _QWORD *);
  uint64_t v4;
  _QWORD v5[3];

  v5[2] = *MEMORY[0x24BDAC8D0];
  v3 = (void (*)(uint64_t, _QWORD *))result[9];
  if (v3)
  {
    v4 = *result;
    sub_20BF4C6D0(v5, a2);
    v3(v4, v5);
    return (uint64_t *)sub_20BF4C2D8((uint64_t)v5);
  }
  else
  {
    *a3 = 0;
    a3[24] = 0;
  }
  return result;
}

void sub_20C0281A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C0281C0@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  void (*v3)(uint64_t, _QWORD *);
  uint64_t v4;
  _QWORD v5[3];

  v5[2] = *MEMORY[0x24BDAC8D0];
  v3 = (void (*)(uint64_t, _QWORD *))result[8];
  if (v3)
  {
    v4 = *result;
    sub_20BF4C6D0(v5, a2);
    v3(v4, v5);
    return (uint64_t *)sub_20BF4C2D8((uint64_t)v5);
  }
  else
  {
    *a3 = 0;
    a3[24] = 0;
  }
  return result;
}

void sub_20C028250(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02826C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  if (sub_20BFE4EAC((pxrInternal__aapl__pxrReserved__::VtValue *)a1))
  {
    v6 = a1[1];
    if ((v6 & 4) != 0)
      a2 = (*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
    else
      a2 = *a1;
  }
  return sub_20C036FFC(a3, a2);
}

void **sub_20C0282CC(void **a1)
{
  void **v3;

  v3 = a1 + 16;
  sub_20BF8CA20(&v3);
  v3 = a1 + 13;
  sub_20BF8CA20(&v3);
  v3 = a1 + 10;
  sub_20BF8CA20(&v3);
  v3 = a1 + 7;
  sub_20BF8CA20(&v3);
  v3 = a1 + 4;
  sub_20BF8CA20(&v3);
  v3 = a1 + 1;
  sub_20BF8CA20(&v3);
  return a1;
}

_DWORD *sub_20C028354(_DWORD *a1, _DWORD *a2, _DWORD *a3)
{
  _DWORD *v6;

  v6 = sub_20BFD6E54(a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  sub_20BFD6E54(a1 + 2, a3);
  sub_20BFD6EA4(a1 + 3, a3 + 1);
  return a1;
}

uint64_t sub_20C0283AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      sub_20BF4C6D0((_QWORD *)(a4 + v7), (_QWORD *)(a2 + v7));
      v7 += 16;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_20C028408(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (v2)
  {
    v4 = v1 - 16;
    do
    {
      sub_20BF4C2D8(v4 + v2);
      v2 -= 16;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

char *sub_20C02842C@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C029950(a2, a1);
}

void sub_20C028458(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C02846C(_DWORD **a1)
{
  unint64_t v1;
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  int *v9;
  int *v10;
  uint64_t v11;
  char v12;
  void **v13;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  sub_20BFD6D38(&v9, *a1, a1[1], ((char *)a1[1] - (char *)*a1) >> 3);
  v1 = 126 - 2 * __clz(((char *)v10 - (char *)v9) >> 3);
  if (v10 == v9)
    v2 = 0;
  else
    v2 = v1;
  sub_20C028540((uint64_t)v9, v10, (uint64_t)&v12, v2, 1);
  v3 = v9;
  if (v9 != v10)
  {
    v4 = v9 + 2;
    while (v4 != v10)
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *(_QWORD *)v4;
      v4 += 2;
      if (v5 == v6)
      {
        v3 = v4 - 4;
        goto LABEL_10;
      }
    }
    v3 = v10;
  }
LABEL_10:
  v7 = v3 != v10;
  v13 = (void **)&v9;
  sub_20BFD6F90(&v13);
  return v7;
}

void sub_20C028524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 - 24) = &a10;
  sub_20BFD6F90((void ***)(v10 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_20C028540(uint64_t result, int *a2, uint64_t a3, uint64_t a4, char a5)
{
  int *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int *v15;
  int *v16;
  char v17;
  BOOL v18;

  v8 = (int *)result;
LABEL_2:
  v9 = v8;
LABEL_3:
  v10 = 1 - a4;
  while (2)
  {
    v8 = v9;
    v11 = v10;
    v12 = (char *)a2 - (char *)v9;
    v13 = ((char *)a2 - (char *)v9) >> 3;
    switch(v13)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        result = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 - 2), (const pxrInternal__aapl__pxrReserved__::SdfPath *)v9);
        if ((_DWORD)result)
        {
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(v9, a2 - 2);
          return (uint64_t)pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v9 + 1, a2 - 1);
        }
        return result;
      case 3uLL:
        return sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)v9, v9 + 2, a2 - 2);
      case 4uLL:
        return (uint64_t)sub_20C0291B0(v9, v9 + 2, v9 + 4, a2 - 2);
      case 5uLL:
        return (uint64_t)sub_20C029280(v9, v9 + 2, v9 + 4, v9 + 6, a2 - 2);
      default:
        if (v12 <= 191)
        {
          if ((a5 & 1) != 0)
            return sub_20C0288A4((uint64_t)v9, a2);
          else
            return sub_20C0289E8((uint64_t)v9, a2);
        }
        if (v11 != 1)
        {
          v14 = v13 >> 1;
          v15 = &v9[2 * (v13 >> 1)];
          if ((unint64_t)v12 < 0x401)
          {
            sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)&v9[2 * (v13 >> 1)], v9, a2 - 2);
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)v9, &v9[2 * (v13 >> 1)], a2 - 2);
            sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)(v9 + 2), v15 - 2, a2 - 4);
            sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)(v9 + 4), &v9[2 * v14 + 2], a2 - 6);
            sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)(v15 - 2), v15, &v9[2 * v14 + 2]);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(v9, v15);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v9 + 1, &v9[2 * v14 + 1]);
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          if ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)(v9 - 2), (const pxrInternal__aapl__pxrReserved__::SdfPath *)v9) & 1) == 0)
          {
            result = (uint64_t)sub_20C028C2C(v9, a2);
            v9 = (int *)result;
            goto LABEL_17;
          }
LABEL_12:
          v16 = sub_20C028DD0(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)a2);
          if ((v17 & 1) == 0)
            goto LABEL_15;
          v18 = sub_20C028F80(v9, v16);
          v9 = v16 + 2;
          result = sub_20C028F80(v16 + 2, a2);
          if (!(_DWORD)result)
          {
            v10 = v11 + 1;
            if (v18)
              continue;
LABEL_15:
            result = sub_20C028540(v8, v16, a3, -v11, a5 & 1);
            v9 = v16 + 2;
LABEL_17:
            a5 = 0;
            a4 = -v11;
            goto LABEL_3;
          }
          a4 = -v11;
          a2 = v16;
          if (v18)
            return result;
          goto LABEL_2;
        }
        if (v9 != a2)
          return (uint64_t)sub_20C029380(v9, a2, a2, a3);
        return result;
    }
  }
}

uint64_t sub_20C0288A4(uint64_t result, _DWORD *a2)
{
  int *v3;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  uint64_t v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  uint64_t v8;
  int *v9;
  int *v10;
  int v11;
  int v12;

  if ((_DWORD *)result != a2)
  {
    v3 = (int *)result;
    v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(result + 8);
    if ((_DWORD *)(result + 8) != a2)
    {
      v5 = 0;
      v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)result;
      do
      {
        v7 = v4;
        result = sub_20BFD758C(v4, v6);
        if ((_DWORD)result)
        {
          v11 = *(_DWORD *)v7;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(v7);
          v12 = *((_DWORD *)v6 + 3);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v6 + 3);
          v8 = v5;
          while (1)
          {
            v9 = (int *)((char *)v3 + v8);
            sub_20BFD3EBC((int *)((char *)v3 + v8 + 8), (int *)((char *)v3 + v8));
            sub_20BFD3F10(v9 + 3, v9 + 1);
            if (!v8)
              break;
            v8 -= 8;
            if ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v9 - 2)) & 1) == 0)
            {
              v10 = (int *)((char *)v3 + v8 + 8);
              goto LABEL_10;
            }
          }
          v10 = v3;
LABEL_10:
          sub_20BFD3EBC(v10, &v11);
          sub_20BFD3F10(v9 + 1, &v12);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
          result = (uint64_t)sub_20BFD265C(&v11);
        }
        v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v7 + 8);
        v5 += 8;
        v6 = v7;
      }
      while ((_DWORD *)((char *)v7 + 8) != a2);
    }
  }
  return result;
}

void sub_20C0289D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0289E8(uint64_t result, _DWORD *a2)
{
  const pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  int *v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int *v7;
  int *v8;
  int v9;
  int v10;

  if ((_DWORD *)result != a2)
  {
    v3 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)result;
    v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(result + 8);
    if ((_DWORD *)(result + 8) != a2)
    {
      v5 = (int *)(result + 12);
      do
      {
        v6 = v4;
        result = sub_20BFD758C(v4, v3);
        if ((_DWORD)result)
        {
          v9 = *(_DWORD *)v6;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(v6);
          v10 = *((_DWORD *)v3 + 3);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v3 + 3);
          v7 = v5;
          do
          {
            v8 = v7;
            sub_20BFD3EBC(v7 - 1, v7 - 3);
            v7 -= 2;
            sub_20BFD3F10(v8, v7);
          }
          while ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v9, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v8 - 5)) & 1) != 0);
          sub_20BFD3EBC(v7 - 1, &v9);
          sub_20BFD3F10(v7, &v10);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
          result = (uint64_t)sub_20BFD265C(&v9);
        }
        v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v6 + 8);
        v5 += 2;
        v3 = v6;
      }
      while ((_DWORD *)((char *)v6 + 8) != a2);
    }
  }
  return result;
}

void sub_20C028AF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C028B0C(const pxrInternal__aapl__pxrReserved__::SdfPath *a1, int *a2, int *a3)
{
  char v6;
  int v7;
  int *v8;
  int *v9;
  uint64_t v10;
  int *v11;

  v6 = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a2, a1);
  v7 = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2);
  if ((v6 & 1) == 0)
  {
    if (!v7)
      return 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a2, a3);
    v9 = a2 + 1;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a2 + 1, a3 + 1);
    if (sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a2, a1))
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap((int *)a1, a2);
      v8 = (int *)((char *)a1 + 4);
      v10 = 2;
      goto LABEL_9;
    }
    return 1;
  }
  v8 = (int *)((char *)a1 + 4);
  if (!v7)
  {
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap((int *)a1, a2);
    v11 = a2 + 1;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v8, a2 + 1);
    if (sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2))
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a2, a3);
      v9 = a3 + 1;
      v10 = 2;
      v8 = v11;
      goto LABEL_9;
    }
    return 1;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap((int *)a1, a3);
  v9 = a3 + 1;
  v10 = 1;
LABEL_9:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v8, v9);
  return v10;
}

int *sub_20C028C2C(int *a1, int *a2)
{
  int *v4;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v5;
  int v6;
  int v8;
  int v9;

  v8 = *a1;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(a1);
  v9 = a1[1];
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(a1 + 1);
  if ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 - 2)) & 1) != 0)
  {
    v4 = a1;
    do
      v4 += 2;
    while ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v4) & 1) == 0);
  }
  else
  {
    v5 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a1 + 2);
    do
    {
      v4 = (int *)v5;
      if (v5 >= (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2)
        break;
      v6 = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, v5);
      v5 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v4 + 2);
    }
    while (!v6);
  }
  if (v4 < a2)
  {
    do
      a2 -= 2;
    while ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2) & 1) != 0);
  }
  while (v4 < a2)
  {
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(v4, a2);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v4 + 1, a2 + 1);
    do
      v4 += 2;
    while (!sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v4));
    do
      a2 -= 2;
    while ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2) & 1) != 0);
  }
  if (v4 - 2 != a1)
  {
    sub_20BFD3EBC(a1, v4 - 2);
    sub_20BFD3F10(a1 + 1, v4 - 1);
  }
  sub_20BFD3EBC(v4 - 2, &v8);
  sub_20BFD3F10(v4 - 1, &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  return v4;
}

void sub_20C028DA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

int *sub_20C028DD0(int *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v4;
  char v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int *v7;
  int *v8;
  int v10;
  int v11;

  v10 = *a1;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(a1);
  v11 = a1[1];
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(a1 + 1);
  v4 = 0;
  do
  {
    v5 = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&a1[v4 + 2], (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10);
    v4 += 2;
  }
  while ((v5 & 1) != 0);
  v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&a1[v4];
  if (v4 == 2)
  {
    do
    {
      if (v6 >= a2)
        break;
      a2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)a2 - 8);
    }
    while ((sub_20BFD758C(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10) & 1) == 0);
  }
  else
  {
    do
      a2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)a2 - 8);
    while (!sub_20BFD758C(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10));
  }
  v7 = &a1[v4];
  if (v6 < a2)
  {
    v8 = (int *)a2;
    do
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(v7, v8);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v7 + 1, v8 + 1);
      do
        v7 += 2;
      while ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10) & 1) != 0);
      do
        v8 -= 2;
      while (!sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v10));
    }
    while (v7 < v8);
  }
  if (v7 - 2 != a1)
  {
    sub_20BFD3EBC(a1, v7 - 2);
    sub_20BFD3F10(a1 + 1, v7 - 1);
  }
  sub_20BFD3EBC(v7 - 2, &v10);
  sub_20BFD3F10(v7 - 1, &v11);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  return v7 - 2;
}

void sub_20C028F5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C028F80(int *a1, int *a2)
{
  uint64_t v4;
  _BOOL8 result;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int *v11;
  int *v12;
  int v13;
  int v14;

  v4 = ((char *)a2 - (char *)a1) >> 3;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 - 2), (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1))
      {
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a1, a2 - 2);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a1 + 1, a2 - 1);
      }
      return 1;
    case 3:
      sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_20C0291B0(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      sub_20C029280(a1, a1 + 2, a1 + 4, a1 + 6, a2 - 2);
      return 1;
    default:
      v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a1 + 4);
      sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)a1, a1 + 2, a1 + 4);
      v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a1 + 6);
      if (a1 + 6 == a2)
        return 1;
      v8 = 0;
      v9 = 0;
      break;
  }
  while (1)
  {
    if (sub_20BFD758C(v7, v6))
    {
      v13 = *(_DWORD *)v7;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(v7);
      v14 = *((_DWORD *)v7 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v7 + 1);
      v10 = v8;
      while (1)
      {
        v11 = (int *)((char *)a1 + v10);
        sub_20BFD3EBC((int *)((char *)a1 + v10 + 24), (int *)((char *)a1 + v10 + 16));
        sub_20BFD3F10(v11 + 7, v11 + 5);
        if (v10 == -16)
          break;
        v10 -= 8;
        if ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v11 + 2)) & 1) == 0)
        {
          v12 = (int *)((char *)a1 + v10 + 24);
          goto LABEL_12;
        }
      }
      v12 = a1;
LABEL_12:
      sub_20BFD3EBC(v12, &v13);
      sub_20BFD3F10(v11 + 5, &v14);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
      ++v9;
      sub_20BFD265C(&v13);
      if (v9 == 8)
        return (int *)((char *)v7 + 8) == a2;
    }
    v6 = v7;
    v8 += 8;
    v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v7 + 8);
    if (v7 == (pxrInternal__aapl__pxrReserved__::SdfPath *)a2)
      return 1;
  }
}

void sub_20C02919C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

int *sub_20C0291B0(int *a1, int *a2, int *a3, int *a4)
{
  int *result;

  sub_20C028B0C((const pxrInternal__aapl__pxrReserved__::SdfPath *)a1, a2, a3);
  result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a4, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a3);
  if ((_DWORD)result)
  {
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a3, a4);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a3 + 1, a4 + 1);
    result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2);
    if ((_DWORD)result)
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a2, a3);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a2 + 1, a3 + 1);
      result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1);
      if ((_DWORD)result)
      {
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a1, a2);
        return pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a1 + 1, a2 + 1);
      }
    }
  }
  return result;
}

int *sub_20C029280(int *a1, int *a2, int *a3, int *a4, int *a5)
{
  int *result;

  sub_20C0291B0(a1, a2, a3, a4);
  result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a4);
  if ((_DWORD)result)
  {
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a4, a5);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a4 + 1, a5 + 1);
    result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a4, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a3);
    if ((_DWORD)result)
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a3, a4);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a3 + 1, a4 + 1);
      result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2);
      if ((_DWORD)result)
      {
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a2, a3);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a2 + 1, a3 + 1);
        result = (int *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1);
        if ((_DWORD)result)
        {
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(a1, a2);
          return pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(a1 + 1, a2 + 1);
        }
      }
    }
  }
  return result;
}

int *sub_20C029380(int *a1, int *a2, int *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;

  if (a1 != a2)
  {
    v6 = (uint64_t)a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = ((char *)a2 - (char *)a1) >> 3;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[2 * v10];
      do
      {
        sub_20C0294A4((uint64_t)a1, a4, v9, v12);
        v12 -= 2;
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if ((int *)v6 != a3)
    {
      v14 = (int *)v6;
      do
      {
        if (sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a1))
        {
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::swap(v14, a1);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::swap(v14 + 1, a1 + 1);
          sub_20C0294A4((uint64_t)a1, a4, v9, a1);
        }
        v14 += 2;
      }
      while (v14 != a3);
      v13 = (uint64_t)a3;
    }
    if (v8 >= 9)
    {
      v15 = (unint64_t)v8 >> 3;
      do
      {
        sub_20C029640(a1, v6, a4, v15);
        v6 -= 8;
      }
      while (v15-- > 2);
    }
    return (int *)v13;
  }
  return a3;
}

uint64_t sub_20C0294A4(uint64_t result, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  int *v13;
  int *v14;
  uint64_t v15;
  int v16;
  int v17;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v6 = result;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      v9 = ((uint64_t)a4 - result) >> 2;
      v10 = v9 + 1;
      v11 = (int *)(result + 8 * (v9 + 1));
      v12 = v9 + 2;
      if (v9 + 2 < a3
        && sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)(result + 8 * (v9 + 1)), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v11 + 2)))
      {
        v11 += 2;
        v10 = v12;
      }
      result = sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v5);
      if ((result & 1) == 0)
      {
        v16 = *v5;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(v5);
        v17 = v5[1];
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(v5 + 1);
        do
        {
          v13 = v11;
          sub_20BFD3EBC(v5, v11);
          v14 = v11 + 1;
          sub_20BFD3F10(v5 + 1, v11 + 1);
          if (v7 < v10)
            break;
          v15 = (2 * v10) | 1;
          v11 = (int *)(v6 + 8 * v15);
          v10 = 2 * v10 + 2;
          if (v10 >= a3)
          {
            v10 = v15;
          }
          else if (sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)(v6 + 8 * v15), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v11 + 2)))
          {
            v11 += 2;
          }
          else
          {
            v10 = v15;
          }
          v5 = v13;
        }
        while (!sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v11, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v16));
        sub_20BFD3EBC(v13, &v16);
        sub_20BFD3F10(v14, &v17);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
        return (uint64_t)sub_20BFD265C(&v16);
      }
    }
  }
  return result;
}

void sub_20C02962C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

int *sub_20C029640(int *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int v13;
  int v14;

  if (a4 >= 2)
  {
    v7 = result;
    v13 = *result;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(result);
    v14 = v7[1];
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(v7 + 1);
    v8 = sub_20C02977C(v7, a3, a4);
    v9 = v8;
    v10 = (int *)(a2 - 8);
    v11 = v8 + 1;
    if (v8 == (int *)(a2 - 8))
    {
      sub_20BFD3EBC(v8, &v13);
      sub_20BFD3F10(v11, &v14);
    }
    else
    {
      sub_20BFD3EBC(v8, (int *)(a2 - 8));
      v12 = (int *)(a2 - 4);
      sub_20BFD3F10(v11, v12);
      sub_20BFD3EBC(v10, &v13);
      sub_20BFD3F10(v12, &v14);
      sub_20C029830(v7, (uint64_t)(v9 + 2), a3, ((char *)(v9 + 2) - (char *)v7) >> 3);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
    return sub_20BFD265C(&v13);
  }
  return result;
}

void sub_20C029768(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

int *sub_20C02977C(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = &a1[2 * v5 + 2];
    v9 = (2 * v5) | 1;
    v10 = 2 * v5 + 2;
    if (v10 < a3
      && sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)&a1[2 * v5 + 2], (const pxrInternal__aapl__pxrReserved__::SdfPath *)&a1[2 * v5 + 4]))
    {
      v8 += 2;
      v9 = v10;
    }
    sub_20BFD3EBC(a1, v8);
    sub_20BFD3F10(a1 + 1, v8 + 1);
    a1 = v8;
    v5 = v9;
  }
  while (v9 <= v7);
  return v8;
}

_DWORD *sub_20C029830(_DWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _DWORD *v6;
  unint64_t v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int v12;
  int v13;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v6 = result;
    v7 = v4 >> 1;
    v8 = &result[2 * (v4 >> 1)];
    v9 = (int *)(a2 - 8);
    result = (_DWORD *)sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 - 8));
    if ((_DWORD)result)
    {
      v12 = *v9;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(v9);
      v13 = *(_DWORD *)(a2 - 4);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a2 - 4));
      do
      {
        v10 = v8;
        sub_20BFD3EBC(v9, v8);
        v11 = v8 + 1;
        sub_20BFD3F10(v9 + 1, v8 + 1);
        if (!v7)
          break;
        v7 = (v7 - 1) >> 1;
        v8 = &v6[2 * v7];
        v9 = v10;
      }
      while ((sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v12) & 1) != 0);
      sub_20BFD3EBC(v10, &v12);
      sub_20BFD3F10(v11, &v13);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
      return sub_20BFD265C(&v12);
    }
  }
  return result;
}

void sub_20C02993C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

char *sub_20C029950(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;

  if ((sub_20BFD6B4C(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPath>::SdfListOp((uint64_t)&v6);
    sub_20C029A24((uint64_t)a1, (uint64_t)&v6);
    v13 = (void **)&v12;
    sub_20BFD6F90(&v13);
    v13 = (void **)&v11;
    sub_20BFD6F90(&v13);
    v13 = (void **)&v10;
    sub_20BFD6F90(&v13);
    v13 = (void **)&v9;
    sub_20BFD6F90(&v13);
    v13 = (void **)&v8;
    sub_20BFD6F90(&v13);
    v13 = (void **)&v7;
    sub_20BFD6F90(&v13);
  }
  v4 = (char *)sub_20C029AF0((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPath>::Swap(v4, a2);
}

void sub_20C029A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20BFD6A50(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C029A24(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C5249C8;
  sub_20BFD86E0((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C029AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C029AF0(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20BFD8650(a1);
}

void **sub_20C029B80(void **a1)
{
  void **v3;

  v3 = a1 + 16;
  sub_20C021740(&v3);
  v3 = a1 + 13;
  sub_20C021740(&v3);
  v3 = a1 + 10;
  sub_20C021740(&v3);
  v3 = a1 + 7;
  sub_20C021740(&v3);
  v3 = a1 + 4;
  sub_20C021740(&v3);
  v3 = a1 + 1;
  sub_20C021740(&v3);
  return a1;
}

char *sub_20C029C08@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C02BF80(a2, a1);
}

void sub_20C029C34(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C029C48(__int128 **a1)
{
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;
  _BOOL8 v7;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char v12;
  unsigned __int8 **v13;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  sub_20C029D40((char *)&v9, *a1, a1[1], 0x6DB6DB6DB6DB6DB7 * (((char *)a1[1] - (char *)*a1) >> 3));
  v1 = 126 - 2 * __clz(0x6DB6DB6DB6DB6DB7 * ((v10 - v9) >> 3));
  if (v10 == v9)
    v2 = 0;
  else
    v2 = v1;
  sub_20C029FE4(v9, v10, (uint64_t)&v12, v2, 1);
  v3 = v9;
  v4 = v10;
  if (v9 == v10)
  {
    v4 = v9;
  }
  else
  {
    while (1)
    {
      v5 = v3 + 56;
      if (v3 + 56 == v4)
        break;
      v6 = pxrInternal__aapl__pxrReserved__::SdfReference::operator==(v3, v3 + 56);
      v3 = v5;
      if (v6)
      {
        v4 = v5 - 56;
        break;
      }
    }
    v3 = v10;
  }
  v7 = v4 != v3;
  v13 = &v9;
  sub_20C021740((void ***)&v13);
  return v7;
}

void sub_20C029D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 - 24) = &a10;
  sub_20C021740((void ***)(v10 - 24));
  _Unwind_Resume(a1);
}

char *sub_20C029D40(char *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  char *v6;

  if (a4)
  {
    v6 = result;
    sub_20BE1B554(result, a4);
    result = sub_20C029DC4((uint64_t)(v6 + 16), a2, a3, *((char **)v6 + 1));
    *((_QWORD *)v6 + 1) = result;
  }
  return result;
}

void sub_20C029DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C021740(&a9);
  _Unwind_Resume(a1);
}

char *sub_20C029DC4(uint64_t a1, __int128 *a2, __int128 *a3, char *__dst)
{
  char *v4;
  __int128 *v6;
  _QWORD v8[3];
  char v9;
  char *v10;
  char *v11;

  v4 = __dst;
  v10 = __dst;
  v11 = __dst;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C029E64(v4, v6);
      v6 = (__int128 *)((char *)v6 + 56);
      v4 = v11 + 56;
      v11 += 56;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_20C029F10((uint64_t)v8);
  return v4;
}

void sub_20C029E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C029F10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_20C029E64(char *__dst, __int128 *a2)
{
  __int128 v4;

  if (*((char *)a2 + 23) < 0)
  {
    sub_20BDDBFAC(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  sub_20BFD6E54((_DWORD *)__dst + 6, (_DWORD *)a2 + 6);
  sub_20BFD6EA4((_DWORD *)__dst + 7, (_DWORD *)a2 + 7);
  *((_OWORD *)__dst + 2) = a2[2];
  pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)(__dst + 48), (const pxrInternal__aapl__pxrReserved__::VtDictionary *)(a2 + 3));
  return __dst;
}

void sub_20C029EEC(_Unwind_Exception *a1)
{
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20C96B52C(v2, v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C029F10(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C029F44((uint64_t *)a1);
  return a1;
}

void sub_20C029F44(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 56;
      sub_20C0217C4(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_20C029F94(uint64_t a1)
{
  sub_20BF49F14((_QWORD ***)(a1 + 48), 0);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C029FE4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  char v21;
  BOOL v22;

void sub_20C02A368(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v4;
  uint64_t v5;
  int *v6;
  uint64_t *v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int *v10;
  uint64_t *v11;
  _QWORD **v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  _QWORD **v17;
  BOOL v18;
  unsigned __int8 *v19;
  _QWORD ***v20;
  unsigned __int8 *v21;
  _QWORD **v22;
  void *__p[2];
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD **v28;

  if (a1 != a2)
  {
    v4 = a1 + 56;
    if (a1 + 56 != a2)
    {
      v5 = 0;
      v6 = &v25;
      v7 = &v27;
      v8 = a1;
      do
      {
        v9 = v4;
        if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(v4, v8))
        {
          *(_OWORD *)__p = *(_OWORD *)v9;
          v24 = *((_QWORD *)v9 + 2);
          *((_QWORD *)v9 + 1) = 0;
          *((_QWORD *)v9 + 2) = 0;
          *(_QWORD *)v9 = 0;
          v25 = *((_DWORD *)v8 + 20);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v8 + 20);
          v26 = *((_DWORD *)v8 + 21);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v8 + 21);
          v10 = v6;
          v11 = v7;
          *(_OWORD *)v7 = *(_OWORD *)(v8 + 88);
          v12 = (_QWORD **)*((_QWORD *)v8 + 13);
          *((_QWORD *)v8 + 13) = 0;
          v28 = v12;
          v13 = v5;
          while (1)
          {
            v14 = v13;
            v15 = &a1[v13];
            v16 = (uint64_t)&a1[v13 + 56];
            if ((char)a1[v13 + 79] < 0)
              operator delete(*(void **)v16);
            *(_OWORD *)v16 = *(_OWORD *)v15;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v15 + 2);
            v15[23] = 0;
            *v15 = 0;
            sub_20BFD3EBC((int *)v15 + 20, (int *)v15 + 6);
            sub_20BFD3F10((int *)v15 + 21, (int *)v15 + 7);
            *(_OWORD *)(v15 + 88) = *((_OWORD *)v15 + 2);
            v17 = (_QWORD **)*((_QWORD *)v15 + 6);
            *((_QWORD *)v15 + 6) = 0;
            sub_20BF49F14((_QWORD ***)v15 + 13, v17);
            if (!v14)
              break;
            v18 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, &a1[v14 - 56]);
            v13 = v14 - 56;
            if (!v18)
            {
              v19 = &a1[v14];
              goto LABEL_12;
            }
          }
          v19 = a1;
LABEL_12:
          if ((char)v19[23] < 0)
            operator delete(*(void **)v19);
          v20 = (_QWORD ***)(v19 + 48);
          v21 = &a1[v14 + 32];
          *(_OWORD *)v19 = *(_OWORD *)__p;
          *((_QWORD *)v19 + 2) = v24;
          HIBYTE(v24) = 0;
          LOBYTE(__p[0]) = 0;
          v6 = v10;
          sub_20BFD3EBC((int *)&a1[v14 + 24], v10);
          sub_20BFD3F10((int *)&a1[v14 + 28], &v26);
          v7 = v11;
          *(_OWORD *)v21 = *(_OWORD *)v11;
          v22 = v28;
          v28 = 0;
          sub_20BF49F14(v20, v22);
          sub_20BF49F14(&v28, 0);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
          sub_20BFD265C(v10);
          if (SHIBYTE(v24) < 0)
            operator delete(__p[0]);
        }
        v4 = v9 + 56;
        v5 += 56;
        v8 = v9;
      }
      while (v9 + 56 != a2);
    }
  }
}

void sub_20C02A5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C02A5BC(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  _QWORD ***v5;
  unsigned __int8 *v6;
  _QWORD **v7;
  _QWORD ***v8;
  void **v9;
  _QWORD **v10;
  BOOL v11;
  void **v12;
  _QWORD **v13;
  void *__p[2];
  _QWORD **v15;
  int v16;
  int v17;
  __int128 v18;
  _QWORD **v19;

  if ((unsigned __int8 *)a1 != a2)
  {
    v3 = (unsigned __int8 *)a1;
    v4 = (unsigned __int8 *)(a1 + 56);
    if ((unsigned __int8 *)(a1 + 56) != a2)
    {
      v5 = (_QWORD ***)(a1 + 104);
      do
      {
        v6 = v4;
        if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(v4, v3))
        {
          *(_OWORD *)__p = *(_OWORD *)v6;
          v15 = (_QWORD **)*((_QWORD *)v6 + 2);
          *((_QWORD *)v6 + 1) = 0;
          *((_QWORD *)v6 + 2) = 0;
          *(_QWORD *)v6 = 0;
          v16 = *((_DWORD *)v3 + 20);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v3 + 20);
          v17 = *((_DWORD *)v3 + 21);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v3 + 21);
          v18 = *(_OWORD *)(v3 + 88);
          v7 = (_QWORD **)*((_QWORD *)v3 + 13);
          *((_QWORD *)v3 + 13) = 0;
          v19 = v7;
          v8 = v5;
          do
          {
            v9 = (void **)(v8 - 6);
            if (*((char *)v8 - 25) < 0)
              operator delete(*v9);
            *(_OWORD *)v9 = *(_OWORD *)(v8 - 13);
            *(v8 - 4) = *(v8 - 11);
            *((_BYTE *)v8 - 81) = 0;
            *((_BYTE *)v8 - 104) = 0;
            sub_20BFD3EBC((int *)v8 - 6, (int *)v8 - 20);
            sub_20BFD3F10((int *)v8 - 5, (int *)v8 - 19);
            *((_OWORD *)v8 - 1) = *(_OWORD *)(v8 - 9);
            v10 = *(v8 - 7);
            *(v8 - 7) = 0;
            sub_20BF49F14(v8, v10);
            v11 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, (unsigned __int8 *)v8 - 160);
            v8 -= 7;
          }
          while (v11);
          v12 = (void **)(v8 - 6);
          if (*((char *)v8 - 25) < 0)
            operator delete(*v12);
          *(_OWORD *)v12 = *(_OWORD *)__p;
          *(v8 - 4) = v15;
          HIBYTE(v15) = 0;
          LOBYTE(__p[0]) = 0;
          sub_20BFD3EBC((int *)v8 - 6, &v16);
          sub_20BFD3F10((int *)v8 - 5, &v17);
          *((_OWORD *)v8 - 1) = v18;
          v13 = v19;
          v19 = 0;
          sub_20BF49F14(v8, v13);
          sub_20BF49F14(&v19, 0);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
          sub_20BFD265C(&v16);
          if (SHIBYTE(v15) < 0)
            operator delete(__p[0]);
        }
        v4 = v6 + 56;
        v5 += 7;
        v3 = v6;
      }
      while (v6 + 56 != a2);
    }
  }
}

void sub_20C02A7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02A7D8(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  BOOL v6;
  uint64_t result;
  uint64_t v8;
  __int128 *v9;

  v6 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a2, a1);
  result = pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a3, a2);
  if (!v6)
  {
    if (!(_DWORD)result)
      return result;
    sub_20C02B118((uint64_t)a2, (__int128 *)a3);
    if (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a2, a1))
      return 1;
    v8 = (uint64_t)a1;
    v9 = (__int128 *)a2;
    goto LABEL_9;
  }
  if (!(_DWORD)result)
  {
    sub_20C02B118((uint64_t)a1, (__int128 *)a2);
    if (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a3, a2))
      return 1;
    v8 = (uint64_t)a2;
    v9 = (__int128 *)a3;
LABEL_9:
    sub_20C02B118(v8, v9);
    return 2;
  }
  sub_20C02B118((uint64_t)a1, (__int128 *)a3);
  return 1;
}

unsigned __int8 *sub_20C02A898(uint64_t a1, unsigned __int8 *a2)
{
  int *v4;
  _QWORD **v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  _BOOL4 v8;
  void **v9;
  __int128 v10;
  _QWORD **v11;
  __int128 v12;
  _QWORD **v13;
  void *__p[2];
  uint64_t v16;
  int v17;
  int v18;
  __int128 v19;
  _QWORD **v20;

  *(_OWORD *)__p = *(_OWORD *)a1;
  v16 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v4 = (int *)(a1 + 24);
  v17 = *(_DWORD *)(a1 + 24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
  v18 = *(_DWORD *)(a1 + 28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
  v5 = *(_QWORD ***)(a1 + 48);
  v19 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 48) = 0;
  v20 = v5;
  if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, a2 - 56))
  {
    v6 = (unsigned __int8 *)a1;
    do
      v6 += 56;
    while (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, v6));
  }
  else
  {
    v7 = (unsigned __int8 *)(a1 + 56);
    do
    {
      v6 = v7;
      if (v7 >= a2)
        break;
      v8 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, v7);
      v7 = v6 + 56;
    }
    while (!v8);
  }
  if (v6 < a2)
  {
    do
      a2 -= 56;
    while (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, a2));
  }
  while (v6 < a2)
  {
    sub_20C02B118((uint64_t)v6, (__int128 *)a2);
    do
      v6 += 56;
    while (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, v6));
    do
      a2 -= 56;
    while (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, a2));
  }
  v9 = (void **)(v6 - 56);
  if (v6 - 56 != (unsigned __int8 *)a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v10 = *(_OWORD *)v9;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)v6 - 5);
    *(_OWORD *)a1 = v10;
    *(v6 - 33) = 0;
    *(v6 - 56) = 0;
    sub_20BFD3EBC(v4, (int *)v6 - 8);
    sub_20BFD3F10((int *)(a1 + 28), (int *)v6 - 7);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v6 - 24);
    v11 = (_QWORD **)*((_QWORD *)v6 - 1);
    *((_QWORD *)v6 - 1) = 0;
    sub_20BF49F14((_QWORD ***)(a1 + 48), v11);
  }
  if ((char)*(v6 - 33) < 0)
    operator delete(*v9);
  v12 = *(_OWORD *)__p;
  *((_QWORD *)v6 - 5) = v16;
  *(_OWORD *)v9 = v12;
  HIBYTE(v16) = 0;
  LOBYTE(__p[0]) = 0;
  sub_20BFD3EBC((int *)v6 - 8, &v17);
  sub_20BFD3F10((int *)v6 - 7, &v18);
  *(_OWORD *)(v6 - 24) = v19;
  v13 = v20;
  v20 = 0;
  sub_20BF49F14((_QWORD ***)v6 - 1, v13);
  sub_20BF49F14(&v20, 0);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (SHIBYTE(v16) < 0)
    operator delete(__p[0]);
  return v6;
}

void sub_20C02AAFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C029F94((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_20C02AB2C(uint64_t a1, unsigned __int8 *a2)
{
  int *v4;
  uint64_t v5;
  _QWORD **v6;
  BOOL v7;
  unint64_t v8;
  unsigned __int8 *v9;
  __int128 *v10;
  void **v11;
  __int128 v12;
  _QWORD **v13;
  __int128 v14;
  _QWORD **v15;
  void *__p[2];
  uint64_t v18;
  int v19;
  int v20;
  __int128 v21;
  _QWORD **v22;

  *(_OWORD *)__p = *(_OWORD *)a1;
  v18 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v4 = (int *)(a1 + 24);
  v19 = *(_DWORD *)(a1 + 24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
  v20 = *(_DWORD *)(a1 + 28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
  v5 = 0;
  v6 = *(_QWORD ***)(a1 + 48);
  v21 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 48) = 0;
  v22 = v6;
  do
  {
    v7 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)(a1 + v5 + 56), (unsigned __int8 *)__p);
    v5 += 56;
  }
  while (v7);
  v8 = a1 + v5;
  if (v5 == 56)
  {
    do
    {
      if (v8 >= (unint64_t)a2)
        break;
      a2 -= 56;
    }
    while (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a2, (unsigned __int8 *)__p));
  }
  else
  {
    do
      a2 -= 56;
    while (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a2, (unsigned __int8 *)__p));
  }
  v9 = (unsigned __int8 *)(a1 + v5);
  if (v8 < (unint64_t)a2)
  {
    v10 = (__int128 *)a2;
    do
    {
      sub_20C02B118((uint64_t)v9, v10);
      do
        v9 += 56;
      while (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(v9, (unsigned __int8 *)__p));
      do
        v10 = (__int128 *)((char *)v10 - 56);
      while (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v10, (unsigned __int8 *)__p));
    }
    while (v9 < (unsigned __int8 *)v10);
  }
  v11 = (void **)(v9 - 56);
  if (v9 - 56 != (unsigned __int8 *)a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v12 = *(_OWORD *)v11;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)v9 - 5);
    *(_OWORD *)a1 = v12;
    *(v9 - 33) = 0;
    *(v9 - 56) = 0;
    sub_20BFD3EBC(v4, (int *)v9 - 8);
    sub_20BFD3F10((int *)(a1 + 28), (int *)v9 - 7);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v9 - 24);
    v13 = (_QWORD **)*((_QWORD *)v9 - 1);
    *((_QWORD *)v9 - 1) = 0;
    sub_20BF49F14((_QWORD ***)(a1 + 48), v13);
  }
  if ((char)*(v9 - 33) < 0)
    operator delete(*v11);
  v14 = *(_OWORD *)__p;
  *((_QWORD *)v9 - 5) = v18;
  *(_OWORD *)v11 = v14;
  HIBYTE(v18) = 0;
  LOBYTE(__p[0]) = 0;
  sub_20BFD3EBC((int *)v9 - 8, &v19);
  sub_20BFD3F10((int *)v9 - 7, &v20);
  *(_OWORD *)(v9 - 24) = v21;
  v15 = v22;
  v22 = 0;
  sub_20BF49F14((_QWORD ***)v9 - 1, v15);
  sub_20BF49F14(&v22, 0);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
  sub_20BFD265C(&v19);
  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);
  return v9 - 56;
}

void sub_20C02ADB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C02ADD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL8 result;
  __int128 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int *v11;
  int *v12;
  _QWORD **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD **v18;
  BOOL v19;
  uint64_t v20;
  _QWORD ***v21;
  _QWORD **v22;
  void *__p[2];
  uint64_t v24;
  int v25;
  int v26;
  __int128 v27;
  _QWORD **v28;

  v4 = 0x6DB6DB6DB6DB6DB7 * ((a2 - a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = (__int128 *)(a2 - 56);
      if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)(a2 - 56), (unsigned __int8 *)a1))
      {
        sub_20C02B118(a1, v6);
      }
      return 1;
    case 3:
      sub_20C02A7D8((unsigned __int8 *)a1, (unsigned __int8 *)(a1 + 56), (unsigned __int8 *)(a2 - 56));
      return 1;
    case 4:
      sub_20C02B2D8((unsigned __int8 *)a1, (unsigned __int8 *)(a1 + 56), (unsigned __int8 *)(a1 + 112), (__int128 *)(a2 - 56));
      return 1;
    case 5:
      sub_20C02B370((unsigned __int8 *)a1, (unsigned __int8 *)(a1 + 56), (unsigned __int8 *)(a1 + 112), (__int128 *)(a1 + 168), (__int128 *)(a2 - 56));
      return 1;
    default:
      v7 = (unsigned __int8 *)(a1 + 112);
      sub_20C02A7D8((unsigned __int8 *)a1, (unsigned __int8 *)(a1 + 56), (unsigned __int8 *)(a1 + 112));
      v8 = a1 + 168;
      if (a1 + 168 == a2)
        return 1;
      v9 = 0;
      v10 = 0;
      v11 = &v25;
      break;
  }
  while (1)
  {
    if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v8, v7))
    {
      *(_OWORD *)__p = *(_OWORD *)v8;
      v24 = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v8 + 8) = 0;
      *(_QWORD *)(v8 + 16) = 0;
      *(_QWORD *)v8 = 0;
      v25 = *(_DWORD *)(v8 + 24);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(v8 + 24));
      v26 = *(_DWORD *)(v8 + 28);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(v8 + 28));
      v12 = v11;
      v27 = *(_OWORD *)(v8 + 32);
      v13 = *(_QWORD ***)(v8 + 48);
      *(_QWORD *)(v8 + 48) = 0;
      v28 = v13;
      v14 = v9;
      while (1)
      {
        v15 = v14;
        v16 = a1 + v14;
        v17 = a1 + v14 + 168;
        if (*(char *)(a1 + v14 + 191) < 0)
          operator delete(*(void **)v17);
        *(_OWORD *)v17 = *(_OWORD *)(v16 + 112);
        *(_QWORD *)(v17 + 16) = *(_QWORD *)(v16 + 128);
        *(_BYTE *)(v16 + 135) = 0;
        *(_BYTE *)(v16 + 112) = 0;
        sub_20BFD3EBC((int *)(v16 + 192), (int *)(v16 + 136));
        sub_20BFD3F10((int *)(v16 + 196), (int *)(v16 + 140));
        *(_OWORD *)(v16 + 200) = *(_OWORD *)(v16 + 144);
        v18 = *(_QWORD ***)(v16 + 160);
        *(_QWORD *)(v16 + 160) = 0;
        sub_20BF49F14((_QWORD ***)(v16 + 216), v18);
        if (v15 == -112)
          break;
        v19 = pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)__p, (unsigned __int8 *)(a1 + v15 + 56));
        v14 = v15 - 56;
        if (!v19)
        {
          v20 = a1 + v14 + 168;
          goto LABEL_14;
        }
      }
      v20 = a1;
LABEL_14:
      if (*(char *)(v20 + 23) < 0)
        operator delete(*(void **)v20);
      v21 = (_QWORD ***)(v20 + 48);
      *(_OWORD *)v20 = *(_OWORD *)__p;
      *(_QWORD *)(v20 + 16) = v24;
      HIBYTE(v24) = 0;
      LOBYTE(__p[0]) = 0;
      v11 = v12;
      sub_20BFD3EBC((int *)(a1 + v15 + 136), v12);
      sub_20BFD3F10((int *)(a1 + v15 + 140), &v26);
      *(_OWORD *)(a1 + v15 + 144) = v27;
      v22 = v28;
      v28 = 0;
      sub_20BF49F14(v21, v22);
      sub_20BF49F14(&v28, 0);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v26);
      sub_20BFD265C(v12);
      if (SHIBYTE(v24) < 0)
        operator delete(__p[0]);
      if (++v10 == 8)
        return v8 + 56 == a2;
    }
    v7 = (unsigned __int8 *)v8;
    v9 += 56;
    v8 += 56;
    if (v8 == a2)
      return 1;
  }
}

void sub_20C02B104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C02B118(uint64_t a1, __int128 *a2)
{
  int *v4;
  _QWORD **v5;
  __int128 v6;
  _QWORD **v7;
  _QWORD **v8;
  void *__p[2];
  uint64_t v10;
  int v11;
  int v12;
  __int128 v13;
  _QWORD **v14;

  *(_OWORD *)__p = *(_OWORD *)a1;
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v4 = (int *)(a1 + 24);
  v11 = *(_DWORD *)(a1 + 24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
  v12 = *(_DWORD *)(a1 + 28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
  v5 = *(_QWORD ***)(a1 + 48);
  v13 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 48) = 0;
  v14 = v5;
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  v6 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v6;
  *((_BYTE *)a2 + 23) = 0;
  *(_BYTE *)a2 = 0;
  sub_20BFD3EBC(v4, (int *)a2 + 6);
  sub_20BFD3F10((int *)(a1 + 28), (int *)a2 + 7);
  *(_OWORD *)(a1 + 32) = a2[2];
  v7 = (_QWORD **)*((_QWORD *)a2 + 6);
  *((_QWORD *)a2 + 6) = 0;
  sub_20BF49F14((_QWORD ***)(a1 + 48), v7);
  if (*((char *)a2 + 23) < 0)
    operator delete(*(void **)a2);
  *a2 = *(_OWORD *)__p;
  *((_QWORD *)a2 + 2) = v10;
  sub_20BFD3EBC((int *)a2 + 6, &v11);
  sub_20BFD3F10((int *)a2 + 7, &v12);
  a2[2] = v13;
  v8 = v14;
  v14 = 0;
  sub_20BF49F14((_QWORD ***)a2 + 6, v8);
  sub_20BF49F14(&v14, 0);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
}

void sub_20C02B2D8(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3, __int128 *a4)
{
  sub_20C02A7D8(a1, a2, a3);
  if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)a4, a3))
  {
    sub_20C02B118((uint64_t)a3, a4);
    if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a3, a2))
    {
      sub_20C02B118((uint64_t)a2, (__int128 *)a3);
      if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a2, a1))
        sub_20C02B118((uint64_t)a1, (__int128 *)a2);
    }
  }
}

void sub_20C02B370(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3, __int128 *a4, __int128 *a5)
{
  sub_20C02B2D8(a1, a2, a3, a4);
  if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)a5, (unsigned __int8 *)a4))
  {
    sub_20C02B118((uint64_t)a4, a5);
    if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)a4, a3))
    {
      sub_20C02B118((uint64_t)a3, a4);
      if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a3, a2))
      {
        sub_20C02B118((uint64_t)a2, (__int128 *)a3);
        if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(a2, a1))
          sub_20C02B118((uint64_t)a1, (__int128 *)a2);
      }
    }
  }
}

unsigned __int8 *sub_20C02B434(__int128 *a1, __int128 *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unint64_t v15;

  if (a1 != a2)
  {
    v6 = (uint64_t)a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = ((char *)a2 - (char *)a1) / 56;
    if ((char *)a2 - (char *)a1 >= 57)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = (__int128 *)((char *)a1 + 56 * v10);
      do
      {
        sub_20C02B578((uint64_t)a1, a4, v9, v12);
        v12 = (__int128 *)((char *)v12 - 56);
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if ((unsigned __int8 *)v6 != a3)
    {
      v14 = (unsigned __int8 *)v6;
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<(v14, (unsigned __int8 *)a1))
        {
          sub_20C02B118((uint64_t)v14, a1);
          sub_20C02B578((uint64_t)a1, a4, v9, a1);
        }
        v14 += 56;
      }
      while (v14 != a3);
      v13 = (uint64_t)a3;
    }
    if (v8 >= 57)
    {
      v15 = v8 / 0x38uLL;
      do
      {
        sub_20C02B830((uint64_t)a1, v6, a4, v15);
        v6 -= 56;
      }
      while (v15-- > 2);
    }
    return (unsigned __int8 *)v13;
  }
  return a3;
}

void sub_20C02B578(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  unint64_t v4;
  __int128 *v5;
  int64_t v7;
  int64_t v9;
  __int128 *v10;
  int64_t v11;
  _QWORD **v12;
  __int128 *v13;
  __int128 v14;
  _QWORD **v15;
  uint64_t v16;
  __int128 v17;
  _QWORD **v18;
  void *__p[2];
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  _QWORD **v24;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= 0x6DB6DB6DB6DB6DB7 * (((uint64_t)a4 - a1) >> 3))
    {
      v9 = (0xDB6DB6DB6DB6DB6ELL * (((uint64_t)a4 - a1) >> 3)) | 1;
      v10 = (__int128 *)(a1 + 56 * v9);
      v11 = 0xDB6DB6DB6DB6DB6ELL * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v11 < a3
        && pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)(a1 + 56 * v9), (unsigned __int8 *)v10 + 56))
      {
        v10 = (__int128 *)((char *)v10 + 56);
        v9 = v11;
      }
      if (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v10, (unsigned __int8 *)v5))
      {
        *(_OWORD *)__p = *v5;
        v20 = *((_QWORD *)v5 + 2);
        *((_QWORD *)v5 + 1) = 0;
        *((_QWORD *)v5 + 2) = 0;
        *(_QWORD *)v5 = 0;
        v21 = *((_DWORD *)v5 + 6);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v5 + 6);
        v22 = *((_DWORD *)v5 + 7);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v5 + 7);
        v23 = v5[2];
        v12 = (_QWORD **)*((_QWORD *)v5 + 6);
        *((_QWORD *)v5 + 6) = 0;
        v24 = v12;
        do
        {
          v13 = v10;
          if (*((char *)v5 + 23) < 0)
            operator delete(*(void **)v5);
          v14 = *v10;
          *((_QWORD *)v5 + 2) = *((_QWORD *)v10 + 2);
          *v5 = v14;
          *((_BYTE *)v10 + 23) = 0;
          *(_BYTE *)v10 = 0;
          sub_20BFD3EBC((int *)v5 + 6, (int *)v10 + 6);
          sub_20BFD3F10((int *)v5 + 7, (int *)v10 + 7);
          v5[2] = v10[2];
          v15 = (_QWORD **)*((_QWORD *)v10 + 6);
          *((_QWORD *)v10 + 6) = 0;
          sub_20BF49F14((_QWORD ***)v5 + 6, v15);
          if (v7 < v9)
            break;
          v16 = (2 * v9) | 1;
          v10 = (__int128 *)(a1 + 56 * v16);
          v9 = 2 * v9 + 2;
          if (v9 >= a3)
          {
            v9 = v16;
          }
          else if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)(a1 + 56 * v16), (unsigned __int8 *)v10 + 56))
          {
            v10 = (__int128 *)((char *)v10 + 56);
          }
          else
          {
            v9 = v16;
          }
          v5 = v13;
        }
        while (!pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v10, (unsigned __int8 *)__p));
        if (*((char *)v13 + 23) < 0)
          operator delete(*(void **)v13);
        v17 = *(_OWORD *)__p;
        *((_QWORD *)v13 + 2) = v20;
        *v13 = v17;
        HIBYTE(v20) = 0;
        LOBYTE(__p[0]) = 0;
        sub_20BFD3EBC((int *)v13 + 6, &v21);
        sub_20BFD3F10((int *)v13 + 7, &v22);
        v13[2] = v23;
        v18 = v24;
        v24 = 0;
        sub_20BF49F14((_QWORD ***)v13 + 6, v18);
        sub_20BF49F14(&v24, 0);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
        sub_20BFD265C(&v21);
        if (SHIBYTE(v20) < 0)
          operator delete(__p[0]);
      }
    }
  }
}

void sub_20C02B81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C02B830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD **v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  int v12;
  __int128 v13;
  _QWORD **v14;
  uint64_t v15;
  _QWORD **v16;
  _QWORD **v17;
  void *__p[2];
  uint64_t v19;
  int v20;
  int v21;
  __int128 v22;
  _QWORD **v23;

  if (a4 >= 2)
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v19 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    v20 = *(_DWORD *)(a1 + 24);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
    v21 = *(_DWORD *)(a1 + 28);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
    v22 = *(_OWORD *)(a1 + 32);
    v8 = *(_QWORD ***)(a1 + 48);
    *(_QWORD *)(a1 + 48) = 0;
    v23 = v8;
    v9 = sub_20C02BAB0(a1, a3, a4);
    v10 = v9;
    v11 = (void **)(a2 - 56);
    v12 = *(char *)(v9 + 23);
    if (v9 == a2 - 56)
    {
      if (v12 < 0)
        operator delete(*(void **)v9);
      *(_QWORD *)(v10 + 16) = v19;
      *(_OWORD *)v10 = *(_OWORD *)__p;
      sub_20BFD3EBC((int *)(v10 + 24), &v20);
      sub_20BFD3F10((int *)(v10 + 28), &v21);
      *(_OWORD *)(v10 + 32) = v22;
      v17 = v23;
      v23 = 0;
      sub_20BF49F14((_QWORD ***)(v10 + 48), v17);
    }
    else
    {
      if (v12 < 0)
        operator delete(*(void **)v9);
      v13 = *(_OWORD *)v11;
      *(_QWORD *)(v10 + 16) = *(_QWORD *)(a2 - 40);
      *(_OWORD *)v10 = v13;
      *(_BYTE *)(a2 - 33) = 0;
      *(_BYTE *)(a2 - 56) = 0;
      sub_20BFD3EBC((int *)(v10 + 24), (int *)(a2 - 32));
      sub_20BFD3F10((int *)(v10 + 28), (int *)(a2 - 28));
      *(_OWORD *)(v10 + 32) = *(_OWORD *)(a2 - 24);
      v14 = *(_QWORD ***)(a2 - 8);
      *(_QWORD *)(a2 - 8) = 0;
      sub_20BF49F14((_QWORD ***)(v10 + 48), v14);
      v15 = v10 + 56;
      if (*(char *)(a2 - 33) < 0)
        operator delete(*v11);
      *(_OWORD *)v11 = *(_OWORD *)__p;
      *(_QWORD *)(a2 - 40) = v19;
      sub_20BFD3EBC((int *)(a2 - 32), &v20);
      sub_20BFD3F10((int *)(a2 - 28), &v21);
      *(_OWORD *)(a2 - 24) = v22;
      v16 = v23;
      v23 = 0;
      sub_20BF49F14((_QWORD ***)(a2 - 8), v16);
      sub_20C02BBA8(a1, v15, a3, 0x6DB6DB6DB6DB6DB7 * ((v15 - a1) >> 3));
    }
    sub_20BF49F14(&v23, 0);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
    sub_20BFD265C(&v20);
  }
}

void sub_20C02BA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02BAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD **v12;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = a1 + 56 * v5 + 56;
    v9 = 2 * v5;
    v5 = (2 * v5) | 1;
    v10 = v9 + 2;
    if (v9 + 2 < a3
      && pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v8, (unsigned __int8 *)(v8 + 56)))
    {
      v8 += 56;
      v5 = v10;
    }
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v11 = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(v8 + 16);
    *(_OWORD *)a1 = v11;
    *(_BYTE *)(v8 + 23) = 0;
    *(_BYTE *)v8 = 0;
    sub_20BFD3EBC((int *)(a1 + 24), (int *)(v8 + 24));
    sub_20BFD3F10((int *)(a1 + 28), (int *)(v8 + 28));
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v8 + 32);
    v12 = *(_QWORD ***)(v8 + 48);
    *(_QWORD *)(v8 + 48) = 0;
    sub_20BF49F14((_QWORD ***)(a1 + 48), v12);
    a1 = v8;
  }
  while (v5 <= v7);
  return v8;
}

void sub_20C02BBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  __int128 *v7;
  __int128 *v8;
  _QWORD **v9;
  __int128 *v10;
  __int128 v11;
  _QWORD **v12;
  _QWORD **v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  int v17;
  __int128 v18;
  _QWORD **v19;

  if (a4 >= 2)
  {
    v6 = (unint64_t)(a4 - 2) >> 1;
    v7 = (__int128 *)(a1 + 56 * v6);
    v8 = (__int128 *)(a2 - 56);
    if (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v7, (unsigned __int8 *)(a2 - 56)))
    {
      *(_OWORD *)__p = *v8;
      v15 = *((_QWORD *)v8 + 2);
      *((_QWORD *)v8 + 1) = 0;
      *((_QWORD *)v8 + 2) = 0;
      *(_QWORD *)v8 = 0;
      v16 = *(_DWORD *)(a2 - 32);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a2 - 32));
      v17 = *(_DWORD *)(a2 - 28);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a2 - 28));
      v18 = *(_OWORD *)(a2 - 24);
      v9 = *(_QWORD ***)(a2 - 8);
      *(_QWORD *)(a2 - 8) = 0;
      v19 = v9;
      do
      {
        v10 = v7;
        if (*((char *)v8 + 23) < 0)
          operator delete(*(void **)v8);
        v11 = *v7;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v7 + 2);
        *v8 = v11;
        *((_BYTE *)v7 + 23) = 0;
        *(_BYTE *)v7 = 0;
        sub_20BFD3EBC((int *)v8 + 6, (int *)v7 + 6);
        sub_20BFD3F10((int *)v8 + 7, (int *)v7 + 7);
        v8[2] = v7[2];
        v12 = (_QWORD **)*((_QWORD *)v7 + 6);
        *((_QWORD *)v7 + 6) = 0;
        sub_20BF49F14((_QWORD ***)v8 + 6, v12);
        if (!v6)
          break;
        v6 = (v6 - 1) >> 1;
        v7 = (__int128 *)(a1 + 56 * v6);
        v8 = v10;
      }
      while (pxrInternal__aapl__pxrReserved__::SdfReference::operator<((unsigned __int8 *)v7, (unsigned __int8 *)__p));
      if (*((char *)v10 + 23) < 0)
        operator delete(*(void **)v10);
      *v10 = *(_OWORD *)__p;
      *((_QWORD *)v10 + 2) = v15;
      HIBYTE(v15) = 0;
      LOBYTE(__p[0]) = 0;
      sub_20BFD3EBC((int *)v10 + 6, &v16);
      sub_20BFD3F10((int *)v10 + 7, &v17);
      v10[2] = v18;
      v13 = v19;
      v19 = 0;
      sub_20BF49F14((_QWORD ***)v10 + 6, v13);
      sub_20BF49F14(&v19, 0);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
      sub_20BFD265C(&v16);
      if (SHIBYTE(v15) < 0)
        operator delete(__p[0]);
    }
  }
}

void sub_20C02BDB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C029F94((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02BDC4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20C029D40((char *)(a1 + 8), *(__int128 **)(a2 + 8), *(__int128 **)(a2 + 16), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3));
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20C029D40((char *)(a1 + 32), *(__int128 **)(a2 + 32), *(__int128 **)(a2 + 40), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20C029D40((char *)(a1 + 56), *(__int128 **)(a2 + 56), *(__int128 **)(a2 + 64), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 3));
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20C029D40((char *)(a1 + 80), *(__int128 **)(a2 + 80), *(__int128 **)(a2 + 88), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 3));
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20C029D40((char *)(a1 + 104), *(__int128 **)(a2 + 104), *(__int128 **)(a2 + 112), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 3));
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20C029D40((char *)(a1 + 128), *(__int128 **)(a2 + 128), *(__int128 **)(a2 + 136), 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 3));
  return a1;
}

void sub_20C02BF18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C021740((void ***)va);
  sub_20C021740((void ***)va);
  sub_20C021740((void ***)va);
  sub_20C021740((void ***)va);
  sub_20C021740((void ***)va);
  _Unwind_Resume(a1);
}

char *sub_20C02BF80(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;

  if ((sub_20BFE4618(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfReference>::SdfListOp((uint64_t)&v6);
    sub_20C02C054((uint64_t)a1, (uint64_t)&v6);
    v13 = (void **)&v12;
    sub_20C021740(&v13);
    v13 = (void **)&v11;
    sub_20C021740(&v13);
    v13 = (void **)&v10;
    sub_20C021740(&v13);
    v13 = (void **)&v9;
    sub_20C021740(&v13);
    v13 = (void **)&v8;
    sub_20C021740(&v13);
    v13 = (void **)&v7;
    sub_20C021740(&v13);
  }
  v4 = (char *)sub_20C02C934((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfReference>::Swap(v4, a2);
}

void sub_20C02C040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C029B80(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02C054(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526568;
  sub_20C02C8C8((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C02C0E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C02C120(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C02C148(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C02C250(a1);
}

uint64_t sub_20C02C158()
{
  return 1;
}

unint64_t sub_20C02C160(unsigned __int8 **a1)
{
  return sub_20C02C304(*a1);
}

uint64_t sub_20C02C168(unsigned __int8 **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfReference>::operator==(*a1, *a2);
}

uint64_t sub_20C02C174(unsigned __int8 **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfReference>::operator==(*a1, a2);
}

uint64_t sub_20C02C180()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C02C18C(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<pxrInternal__aapl__pxrReserved__::SdfReference>(a2, *a1);
}

void *sub_20C02C19C()
{
  return &unk_24C524CE0;
}

uint64_t sub_20C02C1A8()
{
  return 0;
}

uint64_t sub_20C02C1B0()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C02C1BC()
{
  return 0;
}

uint64_t sub_20C02C1C4()
{
  return 0;
}

BOOL sub_20C02C1CC(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB04B6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C02C204(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524CE0, a2, a3);
}

void *sub_20C02C224()
{
  return &unk_24C524CE0;
}

uint64_t sub_20C02C230(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C02C238@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526568;
  return sub_20C02C8C8((unsigned int **)a2, v2);
}

void ***sub_20C02C250(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 19);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2 + 16;
      sub_20C021740(&v7);
      v7 = v2 + 13;
      sub_20C021740(&v7);
      v7 = v2 + 10;
      sub_20C021740(&v7);
      v7 = v2 + 7;
      sub_20C021740(&v7);
      v7 = v2 + 4;
      sub_20C021740(&v7);
      v7 = v2 + 1;
      sub_20C021740(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C02C304(unsigned __int8 *a1)
{
  uint64_t v2;
  char v3;

  v2 = 0;
  v3 = 0;
  sub_20C02C36C((unint64_t)&v2, a1, (uint64_t)(a1 + 8), (uint64_t)(a1 + 32), (uint64_t)(a1 + 56), (uint64_t)(a1 + 80), (uint64_t)(a1 + 104), (uint64_t)(a1 + 128));
  return bswap64(0x9E3779B97F4A7C55 * bswap64(0x9E3779B97F4A7C55 * v2));
}

unint64_t sub_20C02C36C(unint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  v8 = *a2;
  if (*(_BYTE *)(a1 + 8))
    v8 += (unint64_t)(*(_QWORD *)a1 + v8 + (*(_QWORD *)a1 + v8) * (*(_QWORD *)a1 + v8)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v8;
  return sub_20C02C3B4(a1, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_20C02C3B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int8x16_t *v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t *v17;

  v14 = *(int8x16_t **)a2;
  v15 = *(_QWORD *)(a2 + 8) - (_QWORD)v14;
  if (v15)
  {
    v16 = 0x6DB6DB6DB6DB6DB7 * (v15 >> 3);
    do
    {
      --v16;
      v17 = (int8x16_t *)((char *)v14 + 56);
      sub_20C02C4F4(a1, v14);
      v14 = v17;
    }
    while (v16);
  }
  return sub_20C02C458(a1, a3, a4, a5, a6, a7);
}

unint64_t sub_20C02C458(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int8x16_t *v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t *v15;

  v12 = *(int8x16_t **)a2;
  v13 = *(_QWORD *)(a2 + 8) - (_QWORD)v12;
  if (v13)
  {
    v14 = 0x6DB6DB6DB6DB6DB7 * (v13 >> 3);
    do
    {
      --v14;
      v15 = (int8x16_t *)((char *)v12 + 56);
      sub_20C02C4F4(a1, v12);
      v12 = v15;
    }
    while (v14);
  }
  return sub_20C02C680(a1, a3, a4, a5, a6);
}

unint64_t sub_20C02C4F4(uint64_t a1, int8x16_t *a2)
{
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  char v6;

  v5 = 0;
  v6 = 0;
  result = sub_20C02C578((pxrInternal__aapl__pxrReserved__::Tf_HashState *)&v5, (pxrInternal__aapl__pxrReserved__ *)a2, &a2[1].u32[2], a2 + 2, a2[3].i64);
  v4 = bswap64(0x9E3779B97F4A7C55 * v5);
  if (*(_BYTE *)(a1 + 8))
    v4 += (*(_QWORD *)a1 + v4 + (*(_QWORD *)a1 + v4) * (*(_QWORD *)a1 + v4)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v4;
  return result;
}

unint64_t sub_20C02C578(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, pxrInternal__aapl__pxrReserved__ *a2, unsigned int *a3, int8x16_t *a4, uint64_t *a5)
{
  char *v9;
  char *v10;

  v9 = (char *)*((_QWORD *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    v10 = (char *)*((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(pxrInternal__aapl__pxrReserved__ **)a2;
    v10 = v9;
  }
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, a2, v10);
  sub_20BFD84AC((uint64_t)a1, a3);
  return sub_20C02C5DC((uint64_t)a1, a4, a5);
}

unint64_t sub_20C02C5DC(uint64_t a1, int8x16_t *this, uint64_t *a3)
{
  unint64_t Hash;

  Hash = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetHash(this);
  if (*(_BYTE *)(a1 + 8))
    Hash += (*(_QWORD *)a1 + Hash + (*(_QWORD *)a1 + Hash) * (*(_QWORD *)a1 + Hash)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = Hash;
  return sub_20C02C634(a1, a3);
}

unint64_t sub_20C02C634(uint64_t a1, uint64_t *a2)
{
  unint64_t result;

  result = sub_20BF4CE60(a2);
  if (*(_BYTE *)(a1 + 8))
    result += (*(_QWORD *)a1 + result + (*(_QWORD *)a1 + result) * (*(_QWORD *)a1 + result)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = result;
  return result;
}

unint64_t sub_20C02C680(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t *v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t *v13;

  v10 = *(int8x16_t **)a2;
  v11 = *(_QWORD *)(a2 + 8) - (_QWORD)v10;
  if (v11)
  {
    v12 = 0x6DB6DB6DB6DB6DB7 * (v11 >> 3);
    do
    {
      --v12;
      v13 = (int8x16_t *)((char *)v10 + 56);
      sub_20C02C4F4(a1, v10);
      v10 = v13;
    }
    while (v12);
  }
  return sub_20C02C70C(a1, a3, a4, a5);
}

unint64_t sub_20C02C70C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int8x16_t *v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t *v11;

  v8 = *(int8x16_t **)a2;
  v9 = *(_QWORD *)(a2 + 8) - (_QWORD)v8;
  if (v9)
  {
    v10 = 0x6DB6DB6DB6DB6DB7 * (v9 >> 3);
    do
    {
      --v10;
      v11 = (int8x16_t *)((char *)v8 + 56);
      sub_20C02C4F4(a1, v8);
      v8 = v11;
    }
    while (v10);
  }
  return sub_20C02C790(a1, a3, a4);
}

unint64_t sub_20C02C790(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int8x16_t *v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t *v9;
  int8x16_t *v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t *v13;

  v5 = result;
  v6 = *(int8x16_t **)a2;
  v7 = *(_QWORD *)(a2 + 8) - (_QWORD)v6;
  if (v7)
  {
    v8 = 0x6DB6DB6DB6DB6DB7 * (v7 >> 3);
    do
    {
      --v8;
      v9 = (int8x16_t *)((char *)v6 + 56);
      result = sub_20C02C4F4(v5, v6);
      v6 = v9;
    }
    while (v8);
  }
  v10 = *(int8x16_t **)a3;
  v11 = *(_QWORD *)(a3 + 8) - *(_QWORD *)a3;
  if (v11)
  {
    v12 = 0x6DB6DB6DB6DB6DB7 * (v11 >> 3);
    do
    {
      --v12;
      v13 = (int8x16_t *)((char *)v10 + 56);
      result = sub_20C02C4F4(v5, v10);
      v10 = v13;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_20C02C838(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  void **v7;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C02BDC4((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v7 = (void **)*a1;
    *a1 = (uint64_t)v3;
    sub_20C02C250(&v7);
  }
  return *a1;
}

void sub_20C02C8B4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02C8C8(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C02BDC4((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C02C920(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02C934(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C02C838(a1);
}

void **sub_20C02C9C4(void **a1)
{
  void **v3;

  v3 = a1 + 16;
  sub_20C021818(&v3);
  v3 = a1 + 13;
  sub_20C021818(&v3);
  v3 = a1 + 10;
  sub_20C021818(&v3);
  v3 = a1 + 7;
  sub_20C021818(&v3);
  v3 = a1 + 4;
  sub_20C021818(&v3);
  v3 = a1 + 1;
  sub_20C021818(&v3);
  return a1;
}

char *sub_20C02CA4C@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C02EAC8(a2, a1);
}

void sub_20C02CA78(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C02CA8C(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unint64_t v4;
  unsigned __int8 *v5;
  _BOOL4 v6;
  _BOOL8 v7;
  __n128 v9;
  uint64_t v10;
  char v11;
  __n128 *v12;

  v9 = 0uLL;
  v10 = 0;
  sub_20C02CB7C(&v9, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 4));
  v1 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9.n128_u64[1] - v9.n128_u64[0]) >> 4));
  if (v9.n128_u64[1] == v9.n128_u64[0])
    v2 = 0;
  else
    v2 = v1;
  sub_20C02CE28((unsigned __int8 *)v9.n128_u64[0], (const void **)v9.n128_u64[1], (uint64_t)&v11, v2, 1);
  v4 = v9.n128_u64[1];
  v3 = (unsigned __int8 *)v9.n128_u64[0];
  if (v9.n128_u64[0] == v9.n128_u64[1])
  {
    v4 = v9.n128_u64[0];
  }
  else
  {
    while (1)
    {
      v5 = v3 + 48;
      if (v3 + 48 == (unsigned __int8 *)v4)
        break;
      v6 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator==(v3, v3 + 48);
      v3 = v5;
      if (v6)
      {
        v4 = (unint64_t)(v5 - 48);
        break;
      }
    }
    v3 = (unsigned __int8 *)v9.n128_u64[1];
  }
  v7 = v4 != (_QWORD)v3;
  v12 = &v9;
  sub_20C021818((void ***)&v12);
  return v7;
}

void sub_20C02CB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 - 24) = &a10;
  sub_20C021818((void ***)(v10 - 24));
  _Unwind_Resume(a1);
}

__n128 *sub_20C02CB7C(__n128 *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  __n128 *v6;

  if (a4)
  {
    v6 = result;
    sub_20C02CC00(result, a4);
    result = sub_20C02CC50((uint64_t)&v6[1], a2, a3, (__n128 *)v6->n128_u64[1]);
    v6->n128_u64[1] = (unint64_t)result;
  }
  return result;
}

void sub_20C02CBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C021818(&a9);
  _Unwind_Resume(a1);
}

char *sub_20C02CC00(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x555555555555556)
    sub_20BDDF694();
  result = (char *)sub_20BE6D0B4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

__n128 *sub_20C02CC50(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *__dst)
{
  __n128 *v4;
  uint64_t v6;
  int v7;
  _QWORD v9[3];
  char v10;
  __n128 *v11;
  __n128 *v12;

  v4 = __dst;
  v11 = __dst;
  v12 = __dst;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    v7 = a1;
    do
    {
      sub_20C02CCF8(v7, v4, v6);
      v6 += 48;
      v4 = v12 + 3;
      v12 += 3;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C02CD60((uint64_t)v9);
  return v4;
}

void sub_20C02CCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C02CD60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

__n128 sub_20C02CCF8(int a1, __n128 *__dst, uint64_t a3)
{
  __n128 v5;
  __n128 result;

  if (*(char *)(a3 + 23) < 0)
  {
    sub_20BDDBFAC(__dst, *(void **)a3, *(_QWORD *)(a3 + 8));
  }
  else
  {
    v5 = *(__n128 *)a3;
    __dst[1].n128_u64[0] = *(_QWORD *)(a3 + 16);
    *__dst = v5;
  }
  sub_20BFD6E54(&__dst[1].n128_u32[2], (_DWORD *)(a3 + 24));
  sub_20BFD6EA4(&__dst[1].n128_u32[3], (_DWORD *)(a3 + 28));
  result = *(__n128 *)(a3 + 32);
  __dst[2] = result;
  return result;
}

uint64_t sub_20C02CD60(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C02CD94((uint64_t *)a1);
  return a1;
}

void sub_20C02CD94(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[1];
  v1 = (uint64_t *)a1[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 48;
      sub_20C02189C(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_20C02CDE4(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20C02CE28(unsigned __int8 *a1, const void **a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  const void **v17;
  unsigned __int8 *v18;
  const void **v19;
  const void **v20;
  char v21;
  BOOL v22;

void sub_20C02D198(const void **a1, const void **a2)
{
  const void **v4;
  uint64_t v5;
  const void **v6;
  const void **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  const void **v13;
  void *__p[2];
  const void *v15;
  int v16;
  int v17;
  __int128 v18;

  if (a1 != a2)
  {
    v4 = a1 + 6;
    if (a1 + 6 != a2)
    {
      v5 = 0;
      v6 = a1;
      do
      {
        v7 = v4;
        if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(v4, (unsigned __int8 *)v6))
        {
          *(_OWORD *)__p = *(_OWORD *)v7;
          v15 = v7[2];
          v7[1] = 0;
          v7[2] = 0;
          *v7 = 0;
          v16 = *((_DWORD *)v6 + 18);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v6 + 18);
          v17 = *((_DWORD *)v6 + 19);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v6 + 19);
          v18 = *((_OWORD *)v6 + 5);
          v8 = v5;
          while (1)
          {
            v9 = v8;
            v10 = (uint64_t)a1 + v8;
            v11 = (uint64_t)a1 + v8 + 48;
            if (*((char *)a1 + v8 + 71) < 0)
              operator delete(*(void **)v11);
            *(_OWORD *)v11 = *(_OWORD *)v10;
            *(_QWORD *)(v11 + 16) = *(_QWORD *)(v10 + 16);
            *(_BYTE *)(v10 + 23) = 0;
            *(_BYTE *)v10 = 0;
            sub_20BFD3EBC((int *)(v10 + 72), (int *)(v10 + 24));
            sub_20BFD3F10((int *)(v10 + 76), (int *)(v10 + 28));
            *(_OWORD *)(v10 + 80) = *(_OWORD *)(v10 + 32);
            if (!v9)
              break;
            v12 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, (unsigned __int8 *)a1 + v9 - 48);
            v8 = v9 - 48;
            if (!v12)
            {
              v13 = (const void **)((char *)a1 + v9);
              goto LABEL_12;
            }
          }
          v13 = a1;
LABEL_12:
          if (*((char *)v13 + 23) < 0)
            operator delete((void *)*v13);
          *(_OWORD *)v13 = *(_OWORD *)__p;
          v13[2] = v15;
          HIBYTE(v15) = 0;
          LOBYTE(__p[0]) = 0;
          sub_20BFD3EBC((int *)((char *)a1 + v9 + 24), &v16);
          sub_20BFD3F10((int *)((char *)a1 + v9 + 28), &v17);
          *(_OWORD *)((char *)a1 + v9 + 32) = v18;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
          sub_20BFD265C(&v16);
          if (SHIBYTE(v15) < 0)
            operator delete(__p[0]);
        }
        v4 = v7 + 6;
        v5 += 48;
        v6 = v7;
      }
      while (v7 + 6 != a2);
    }
  }
}

void sub_20C02D380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C02CDE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C02D394(const void **a1, const void **a2)
{
  const void **v3;
  const void **v4;
  const void **v5;
  const void **v6;
  const void **v7;
  void **v8;
  BOOL v9;
  void **v10;
  void *__p[2];
  const void *v12;
  int v13;
  int v14;
  __int128 v15;

  if (a1 != a2)
  {
    v3 = a1;
    v4 = a1 + 6;
    if (a1 + 6 != a2)
    {
      v5 = a1 - 6;
      do
      {
        v6 = v4;
        if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(v4, (unsigned __int8 *)v3))
        {
          *(_OWORD *)__p = *(_OWORD *)v6;
          v12 = v6[2];
          v6[1] = 0;
          v6[2] = 0;
          *v6 = 0;
          v13 = *((_DWORD *)v3 + 18);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v3 + 18);
          v14 = *((_DWORD *)v3 + 19);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v3 + 19);
          v15 = *((_OWORD *)v3 + 5);
          v7 = v5;
          do
          {
            v8 = (void **)(v7 + 12);
            if (*((char *)v7 + 119) < 0)
              operator delete(*v8);
            *(_OWORD *)v8 = *((_OWORD *)v7 + 3);
            v7[14] = v7[8];
            *((_BYTE *)v7 + 71) = 0;
            *((_BYTE *)v7 + 48) = 0;
            sub_20BFD3EBC((int *)v7 + 30, (int *)v7 + 18);
            sub_20BFD3F10((int *)v7 + 31, (int *)v7 + 19);
            *((_OWORD *)v7 + 8) = *((_OWORD *)v7 + 5);
            v9 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, (unsigned __int8 *)v7);
            v7 -= 6;
          }
          while (v9);
          v10 = (void **)(v7 + 12);
          if (*((char *)v7 + 119) < 0)
            operator delete(*v10);
          *(_OWORD *)v10 = *(_OWORD *)__p;
          v7[14] = v12;
          HIBYTE(v12) = 0;
          LOBYTE(__p[0]) = 0;
          sub_20BFD3EBC((int *)v7 + 30, &v13);
          sub_20BFD3F10((int *)v7 + 31, &v14);
          *((_OWORD *)v7 + 8) = v15;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
          sub_20BFD265C(&v13);
          if (SHIBYTE(v12) < 0)
            operator delete(__p[0]);
        }
        v4 = v6 + 6;
        v5 += 6;
        v3 = v6;
      }
      while (v6 + 6 != a2);
    }
  }
}

void sub_20C02D55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C02CDE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02D570(unsigned __int8 *a1, const void **a2, const void **a3)
{
  BOOL v6;
  uint64_t result;
  uint64_t v8;
  __int128 *v9;

  v6 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a2, a1);
  result = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a3, (unsigned __int8 *)a2);
  if (!v6)
  {
    if (!(_DWORD)result)
      return result;
    sub_20C02DDC8((uint64_t)a2, (__int128 *)a3);
    if (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a2, a1))
      return 1;
    v8 = (uint64_t)a1;
    v9 = (__int128 *)a2;
    goto LABEL_9;
  }
  if (!(_DWORD)result)
  {
    sub_20C02DDC8((uint64_t)a1, (__int128 *)a2);
    if (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a3, (unsigned __int8 *)a2))
      return 1;
    v8 = (uint64_t)a2;
    v9 = (__int128 *)a3;
LABEL_9:
    sub_20C02DDC8(v8, v9);
    return 2;
  }
  sub_20C02DDC8((uint64_t)a1, (__int128 *)a3);
  return 1;
}

unsigned __int8 *sub_20C02D630(uint64_t a1, unsigned __int8 *a2)
{
  int *v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  _BOOL4 v7;
  void **v8;
  __int128 v9;
  __int128 v10;
  void *__p[2];
  uint64_t v13;
  int v14;
  int v15;
  __int128 v16;

  *(_OWORD *)__p = *(_OWORD *)a1;
  v13 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v4 = (int *)(a1 + 24);
  v14 = *(_DWORD *)(a1 + 24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
  v15 = *(_DWORD *)(a1 + 28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
  v16 = *(_OWORD *)(a1 + 32);
  if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, a2 - 48))
  {
    v5 = (unsigned __int8 *)a1;
    do
      v5 += 48;
    while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, v5));
  }
  else
  {
    v6 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = v6;
      if (v6 >= a2)
        break;
      v7 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, v6);
      v6 = v5 + 48;
    }
    while (!v7);
  }
  if (v5 < a2)
  {
    do
      a2 -= 48;
    while (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, a2));
  }
  while (v5 < a2)
  {
    sub_20C02DDC8((uint64_t)v5, (__int128 *)a2);
    do
      v5 += 48;
    while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, v5));
    do
      a2 -= 48;
    while (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, a2));
  }
  v8 = (void **)(v5 - 48);
  if (v5 - 48 != (unsigned __int8 *)a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v9 = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)v5 - 4);
    *(_OWORD *)a1 = v9;
    *(v5 - 25) = 0;
    *(v5 - 48) = 0;
    sub_20BFD3EBC(v4, (int *)v5 - 6);
    sub_20BFD3F10((int *)(a1 + 28), (int *)v5 - 5);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)v5 - 1);
  }
  if ((char)*(v5 - 25) < 0)
    operator delete(*v8);
  v10 = *(_OWORD *)__p;
  *((_QWORD *)v5 - 4) = v13;
  *(_OWORD *)v8 = v10;
  HIBYTE(v13) = 0;
  LOBYTE(__p[0]) = 0;
  sub_20BFD3EBC((int *)v5 - 6, &v14);
  sub_20BFD3F10((int *)v5 - 5, &v15);
  *((_OWORD *)v5 - 1) = v16;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_20BFD265C(&v14);
  if (SHIBYTE(v13) < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_20C02D850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C02CDE4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

const void **sub_20C02D880(uint64_t a1, const void **a2)
{
  int *v4;
  uint64_t v5;
  BOOL v6;
  unint64_t v7;
  const void **v8;
  __int128 *v9;
  void **v10;
  __int128 v11;
  __int128 v12;
  void *__p[2];
  const void *v15;
  int v16;
  int v17;
  __int128 v18;

  *(_OWORD *)__p = *(_OWORD *)a1;
  v15 = *(const void **)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v4 = (int *)(a1 + 24);
  v16 = *(_DWORD *)(a1 + 24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
  v17 = *(_DWORD *)(a1 + 28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
  v5 = 0;
  v18 = *(_OWORD *)(a1 + 32);
  do
  {
    v6 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)(a1 + v5 + 48), (unsigned __int8 *)__p);
    v5 += 48;
  }
  while (v6);
  v7 = a1 + v5;
  if (v5 == 48)
  {
    do
    {
      if (v7 >= (unint64_t)a2)
        break;
      a2 -= 6;
    }
    while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a2, (unsigned __int8 *)__p));
  }
  else
  {
    do
      a2 -= 6;
    while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a2, (unsigned __int8 *)__p));
  }
  v8 = (const void **)(a1 + v5);
  if (v7 < (unint64_t)a2)
  {
    v9 = (__int128 *)a2;
    do
    {
      sub_20C02DDC8((uint64_t)v8, v9);
      do
        v8 += 6;
      while (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(v8, (unsigned __int8 *)__p));
      do
        v9 -= 3;
      while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v9, (unsigned __int8 *)__p));
    }
    while (v8 < (const void **)v9);
  }
  v10 = (void **)(v8 - 6);
  if (v8 - 6 != (const void **)a1)
  {
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v11 = *(_OWORD *)v10;
    *(_QWORD *)(a1 + 16) = *(v8 - 4);
    *(_OWORD *)a1 = v11;
    *((_BYTE *)v8 - 25) = 0;
    *((_BYTE *)v8 - 48) = 0;
    sub_20BFD3EBC(v4, (int *)v8 - 6);
    sub_20BFD3F10((int *)(a1 + 28), (int *)v8 - 5);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)v8 - 1);
  }
  if (*((char *)v8 - 25) < 0)
    operator delete(*v10);
  v12 = *(_OWORD *)__p;
  *(v8 - 4) = v15;
  *(_OWORD *)v10 = v12;
  HIBYTE(v15) = 0;
  LOBYTE(__p[0]) = 0;
  sub_20BFD3EBC((int *)v8 - 6, &v16);
  sub_20BFD3F10((int *)v8 - 5, &v17);
  *((_OWORD *)v8 - 1) = v18;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
  return v8 - 6;
}

void sub_20C02DAB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C02CDE4((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C02DAD8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  __int128 *v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  void *__p[2];
  uint64_t v18;
  int v19;
  int v20;
  __int128 v21;

  v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 4);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v6 = (__int128 *)(a2 - 48);
      if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)(a2 - 48), (unsigned __int8 *)a1))
        sub_20C02DDC8(a1, v6);
      return 1;
    case 3uLL:
      sub_20C02D570((unsigned __int8 *)a1, (const void **)(a1 + 48), (const void **)(a2 - 48));
      return 1;
    case 4uLL:
      sub_20C02DF38((unsigned __int8 *)a1, (const void **)(a1 + 48), (const void **)(a1 + 96), (__int128 *)(a2 - 48));
      return 1;
    case 5uLL:
      sub_20C02DFD0((unsigned __int8 *)a1, (const void **)(a1 + 48), (const void **)(a1 + 96), (__int128 *)(a1 + 144), (__int128 *)(a2 - 48));
      return 1;
    default:
      v7 = (unsigned __int8 *)(a1 + 96);
      sub_20C02D570((unsigned __int8 *)a1, (const void **)(a1 + 48), (const void **)(a1 + 96));
      v8 = a1 + 144;
      if (a1 + 144 == a2)
        return 1;
      v9 = 0;
      v10 = 0;
      break;
  }
  while (1)
  {
    if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v8, v7))
    {
      *(_OWORD *)__p = *(_OWORD *)v8;
      v18 = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v8 + 8) = 0;
      *(_QWORD *)(v8 + 16) = 0;
      *(_QWORD *)v8 = 0;
      v19 = *(_DWORD *)(v8 + 24);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(v8 + 24));
      v20 = *(_DWORD *)(v8 + 28);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(v8 + 28));
      v21 = *(_OWORD *)(v8 + 32);
      v11 = v9;
      while (1)
      {
        v12 = v11;
        v13 = a1 + v11;
        v14 = a1 + v11 + 144;
        if (*(char *)(a1 + v11 + 167) < 0)
          operator delete(*(void **)v14);
        *(_OWORD *)v14 = *(_OWORD *)(v13 + 96);
        *(_QWORD *)(v14 + 16) = *(_QWORD *)(v13 + 112);
        *(_BYTE *)(v13 + 119) = 0;
        *(_BYTE *)(v13 + 96) = 0;
        sub_20BFD3EBC((int *)(v13 + 168), (int *)(v13 + 120));
        sub_20BFD3F10((int *)(v13 + 172), (int *)(v13 + 124));
        *(_OWORD *)(v13 + 176) = *(_OWORD *)(v13 + 128);
        if (v12 == -96)
          break;
        v15 = pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)__p, (unsigned __int8 *)(a1 + v12 + 48));
        v11 = v12 - 48;
        if (!v15)
        {
          v16 = a1 + v11 + 144;
          goto LABEL_14;
        }
      }
      v16 = a1;
LABEL_14:
      if (*(char *)(v16 + 23) < 0)
        operator delete(*(void **)v16);
      *(_OWORD *)v16 = *(_OWORD *)__p;
      *(_QWORD *)(v16 + 16) = v18;
      HIBYTE(v18) = 0;
      LOBYTE(__p[0]) = 0;
      sub_20BFD3EBC((int *)(a1 + v12 + 120), &v19);
      sub_20BFD3F10((int *)(a1 + v12 + 124), &v20);
      *(_OWORD *)(a1 + v12 + 128) = v21;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
      if (SHIBYTE(v18) < 0)
        operator delete(__p[0]);
      if (++v10 == 8)
        return v8 + 48 == a2;
    }
    v7 = (unsigned __int8 *)v8;
    v9 += 48;
    v8 += 48;
    if (v8 == a2)
      return 1;
  }
}

void sub_20C02DDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C02CDE4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C02DDC8(uint64_t a1, __int128 *a2)
{
  int *v4;
  __int128 v5;
  void *__p[2];
  uint64_t v7;
  int v8;
  int v9;
  __int128 v10;

  *(_OWORD *)__p = *(_OWORD *)a1;
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = 0;
  v4 = (int *)(a1 + 24);
  v8 = *(_DWORD *)(a1 + 24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
  v9 = *(_DWORD *)(a1 + 28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
  v10 = *(_OWORD *)(a1 + 32);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  v5 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v5;
  *((_BYTE *)a2 + 23) = 0;
  *(_BYTE *)a2 = 0;
  sub_20BFD3EBC(v4, (int *)a2 + 6);
  sub_20BFD3F10((int *)(a1 + 28), (int *)a2 + 7);
  *(_OWORD *)(a1 + 32) = a2[2];
  if (*((char *)a2 + 23) < 0)
    operator delete(*(void **)a2);
  *a2 = *(_OWORD *)__p;
  *((_QWORD *)a2 + 2) = v7;
  sub_20BFD3EBC((int *)a2 + 6, &v8);
  sub_20BFD3F10((int *)a2 + 7, &v9);
  a2[2] = v10;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
}

void sub_20C02DF38(unsigned __int8 *a1, const void **a2, const void **a3, __int128 *a4)
{
  sub_20C02D570(a1, a2, a3);
  if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)a4, (unsigned __int8 *)a3))
  {
    sub_20C02DDC8((uint64_t)a3, a4);
    if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a3, (unsigned __int8 *)a2))
    {
      sub_20C02DDC8((uint64_t)a2, (__int128 *)a3);
      if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a2, a1))
        sub_20C02DDC8((uint64_t)a1, (__int128 *)a2);
    }
  }
}

void sub_20C02DFD0(unsigned __int8 *a1, const void **a2, const void **a3, __int128 *a4, __int128 *a5)
{
  sub_20C02DF38(a1, a2, a3, a4);
  if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)a5, (unsigned __int8 *)a4))
  {
    sub_20C02DDC8((uint64_t)a4, a5);
    if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)a4, (unsigned __int8 *)a3))
    {
      sub_20C02DDC8((uint64_t)a3, a4);
      if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a3, (unsigned __int8 *)a2))
      {
        sub_20C02DDC8((uint64_t)a2, (__int128 *)a3);
        if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(a2, a1))
          sub_20C02DDC8((uint64_t)a1, (__int128 *)a2);
      }
    }
  }
}

const void **sub_20C02E094(__int128 *a1, __int128 *a2, const void **a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  const void **v14;
  unint64_t v15;

  if (a1 != a2)
  {
    v6 = (uint64_t)a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = ((char *)a2 - (char *)a1) / 48;
    if ((char *)a2 - (char *)a1 >= 49)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[3 * v10];
      do
      {
        sub_20C02E1CC((uint64_t)a1, a4, v9, v12);
        v12 -= 3;
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if ((const void **)v6 != a3)
    {
      v14 = (const void **)v6;
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<(v14, (unsigned __int8 *)a1))
        {
          sub_20C02DDC8((uint64_t)v14, a1);
          sub_20C02E1CC((uint64_t)a1, a4, v9, a1);
        }
        v14 += 6;
      }
      while (v14 != a3);
      v13 = (uint64_t)a3;
    }
    if (v8 >= 49)
    {
      v15 = v8 / 0x30uLL;
      do
      {
        sub_20C02E43C((uint64_t)a1, v6, a4, v15);
        v6 -= 48;
      }
      while (v15-- > 2);
    }
    return (const void **)v13;
  }
  return a3;
}

void sub_20C02E1CC(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  unint64_t v4;
  __int128 *v5;
  uint64_t v7;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  void *__p[2];
  uint64_t v17;
  int v18;
  int v19;
  __int128 v20;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 4)))
    {
      v9 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 4)) | 1;
      v10 = (__int128 *)(a1 + 48 * v9);
      v11 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 4) + 2;
      if (v11 < a3
        && pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)(a1 + 48 * v9), (unsigned __int8 *)v10 + 48))
      {
        v10 += 3;
        v9 = v11;
      }
      if (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v10, (unsigned __int8 *)v5))
      {
        *(_OWORD *)__p = *v5;
        v17 = *((_QWORD *)v5 + 2);
        *((_QWORD *)v5 + 1) = 0;
        *((_QWORD *)v5 + 2) = 0;
        *(_QWORD *)v5 = 0;
        v18 = *((_DWORD *)v5 + 6);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v5 + 6);
        v19 = *((_DWORD *)v5 + 7);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)v5 + 7);
        v20 = v5[2];
        do
        {
          v12 = v10;
          if (*((char *)v5 + 23) < 0)
            operator delete(*(void **)v5);
          v13 = *v10;
          *((_QWORD *)v5 + 2) = *((_QWORD *)v10 + 2);
          *v5 = v13;
          *((_BYTE *)v10 + 23) = 0;
          *(_BYTE *)v10 = 0;
          sub_20BFD3EBC((int *)v5 + 6, (int *)v10 + 6);
          sub_20BFD3F10((int *)v5 + 7, (int *)v10 + 7);
          v5[2] = v10[2];
          if (v7 < v9)
            break;
          v14 = (2 * v9) | 1;
          v10 = (__int128 *)(a1 + 48 * v14);
          v9 = 2 * v9 + 2;
          if (v9 >= a3)
          {
            v9 = v14;
          }
          else if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)(a1 + 48 * v14), (unsigned __int8 *)v10 + 48))
          {
            v10 += 3;
          }
          else
          {
            v9 = v14;
          }
          v5 = v12;
        }
        while (!pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v10, (unsigned __int8 *)__p));
        if (*((char *)v12 + 23) < 0)
          operator delete(*(void **)v12);
        v15 = *(_OWORD *)__p;
        *((_QWORD *)v12 + 2) = v17;
        *v12 = v15;
        HIBYTE(v17) = 0;
        LOBYTE(__p[0]) = 0;
        sub_20BFD3EBC((int *)v12 + 6, &v18);
        sub_20BFD3F10((int *)v12 + 7, &v19);
        v12[2] = v20;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
        sub_20BFD265C(&v18);
        if (SHIBYTE(v17) < 0)
          operator delete(__p[0]);
      }
    }
  }
}

void sub_20C02E428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20C02CDE4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C02E43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  void **v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  int v16;
  int v17;
  __int128 v18;

  if (a4 >= 2)
  {
    *(_OWORD *)__p = *(_OWORD *)a1;
    v15 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)a1 = 0;
    v16 = *(_DWORD *)(a1 + 24);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 24));
    v17 = *(_DWORD *)(a1 + 28);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a1 + 28));
    v18 = *(_OWORD *)(a1 + 32);
    v8 = sub_20C02E660(a1, a3, a4);
    v9 = v8;
    v10 = (void **)(a2 - 48);
    v11 = *(char *)(v8 + 23);
    if (v8 == a2 - 48)
    {
      if (v11 < 0)
        operator delete(*(void **)v8);
      *(_QWORD *)(v9 + 16) = v15;
      *(_OWORD *)v9 = *(_OWORD *)__p;
      sub_20BFD3EBC((int *)(v9 + 24), &v16);
      sub_20BFD3F10((int *)(v9 + 28), &v17);
      *(_OWORD *)(v9 + 32) = v18;
    }
    else
    {
      if (v11 < 0)
        operator delete(*(void **)v8);
      v12 = *(_OWORD *)v10;
      *(_QWORD *)(v9 + 16) = *(_QWORD *)(a2 - 32);
      *(_OWORD *)v9 = v12;
      *(_BYTE *)(a2 - 25) = 0;
      *(_BYTE *)(a2 - 48) = 0;
      sub_20BFD3EBC((int *)(v9 + 24), (int *)(a2 - 24));
      sub_20BFD3F10((int *)(v9 + 28), (int *)(a2 - 20));
      *(_OWORD *)(v9 + 32) = *(_OWORD *)(a2 - 16);
      v13 = v9 + 48;
      if (*(char *)(a2 - 25) < 0)
        operator delete(*v10);
      *(_OWORD *)v10 = *(_OWORD *)__p;
      *(_QWORD *)(a2 - 32) = v15;
      sub_20BFD3EBC((int *)(a2 - 24), &v16);
      sub_20BFD3F10((int *)(a2 - 20), &v17);
      *(_OWORD *)(a2 - 16) = v18;
      sub_20C02E748(a1, v13, a3, 0xAAAAAAAAAAAAAAABLL * ((v13 - a1) >> 4));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
    sub_20BFD265C(&v16);
  }
}

void sub_20C02E64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C02CDE4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02E660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = a1 + 48 * v5 + 48;
    v9 = 2 * v5;
    v5 = (2 * v5) | 1;
    v10 = v9 + 2;
    if (v9 + 2 < a3
      && pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v8, (unsigned __int8 *)(v8 + 48)))
    {
      v8 += 48;
      v5 = v10;
    }
    if (*(char *)(a1 + 23) < 0)
      operator delete(*(void **)a1);
    v11 = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(v8 + 16);
    *(_OWORD *)a1 = v11;
    *(_BYTE *)(v8 + 23) = 0;
    *(_BYTE *)v8 = 0;
    sub_20BFD3EBC((int *)(a1 + 24), (int *)(v8 + 24));
    sub_20BFD3F10((int *)(a1 + 28), (int *)(v8 + 28));
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v8 + 32);
    a1 = v8;
  }
  while (v5 <= v7);
  return v8;
}

void sub_20C02E748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  __int128 *v7;
  __int128 *v8;
  __int128 *v9;
  __int128 v10;
  void *__p[2];
  uint64_t v12;
  int v13;
  int v14;
  __int128 v15;

  if (a4 >= 2)
  {
    v6 = (unint64_t)(a4 - 2) >> 1;
    v7 = (__int128 *)(a1 + 48 * v6);
    v8 = (__int128 *)(a2 - 48);
    if (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v7, (unsigned __int8 *)(a2 - 48)))
    {
      *(_OWORD *)__p = *v8;
      v12 = *((_QWORD *)v8 + 2);
      *((_QWORD *)v8 + 1) = 0;
      *((_QWORD *)v8 + 2) = 0;
      *(_QWORD *)v8 = 0;
      v13 = *(_DWORD *)(a2 - 24);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a2 - 24));
      v14 = *(_DWORD *)(a2 - 20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)(a2 - 20));
      v15 = *(_OWORD *)(a2 - 16);
      do
      {
        v9 = v7;
        if (*((char *)v8 + 23) < 0)
          operator delete(*(void **)v8);
        v10 = *v7;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v7 + 2);
        *v8 = v10;
        *((_BYTE *)v7 + 23) = 0;
        *(_BYTE *)v7 = 0;
        sub_20BFD3EBC((int *)v8 + 6, (int *)v7 + 6);
        sub_20BFD3F10((int *)v8 + 7, (int *)v7 + 7);
        v8[2] = v7[2];
        if (!v6)
          break;
        v6 = (v6 - 1) >> 1;
        v7 = (__int128 *)(a1 + 48 * v6);
        v8 = v9;
      }
      while (pxrInternal__aapl__pxrReserved__::SdfPayload::operator<((const void **)v7, (unsigned __int8 *)__p));
      if (*((char *)v9 + 23) < 0)
        operator delete(*(void **)v9);
      *v9 = *(_OWORD *)__p;
      *((_QWORD *)v9 + 2) = v12;
      HIBYTE(v12) = 0;
      LOBYTE(__p[0]) = 0;
      sub_20BFD3EBC((int *)v9 + 6, &v13);
      sub_20BFD3F10((int *)v9 + 7, &v14);
      v9[2] = v15;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
      sub_20BFD265C(&v13);
      if (SHIBYTE(v12) < 0)
        operator delete(__p[0]);
    }
  }
}

void sub_20C02E910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C02CDE4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02E924(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20C02CB7C((__n128 *)(a1 + 8), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 4));
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20C02CB7C((__n128 *)(a1 + 32), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 4));
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20C02CB7C((__n128 *)(a1 + 56), *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 4));
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20C02CB7C((__n128 *)(a1 + 80), *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 4));
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20C02CB7C((__n128 *)(a1 + 104), *(_QWORD *)(a2 + 104), *(_QWORD *)(a2 + 112), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 4));
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20C02CB7C((__n128 *)(a1 + 128), *(_QWORD *)(a2 + 128), *(_QWORD *)(a2 + 136), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 4));
  return a1;
}

void sub_20C02EA60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C021818((void ***)va);
  sub_20C021818((void ***)va);
  sub_20C021818((void ***)va);
  sub_20C021818((void ***)va);
  sub_20C021818((void ***)va);
  _Unwind_Resume(a1);
}

char *sub_20C02EAC8(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;

  if ((sub_20BFE45A0(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPayload>::SdfListOp((uint64_t)&v6);
    sub_20C02EB9C((uint64_t)a1, (uint64_t)&v6);
    v13 = (void **)&v12;
    sub_20C021818(&v13);
    v13 = (void **)&v11;
    sub_20C021818(&v13);
    v13 = (void **)&v10;
    sub_20C021818(&v13);
    v13 = (void **)&v9;
    sub_20C021818(&v13);
    v13 = (void **)&v8;
    sub_20C021818(&v13);
    v13 = (void **)&v7;
    sub_20C021818(&v13);
  }
  v4 = (char *)sub_20C02F3E8((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPayload>::Swap(v4, a2);
}

void sub_20C02EB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C02C9C4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02EB9C(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526620;
  sub_20C02F37C((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C02EC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C02EC68(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C02EC90(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C02ED98(a1);
}

uint64_t sub_20C02ECA0()
{
  return 1;
}

unint64_t sub_20C02ECA8(unsigned __int8 **a1)
{
  return sub_20C02EE4C(*a1);
}

BOOL sub_20C02ECB0(unsigned __int8 **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPayload>::operator==(*a1, *a2);
}

BOOL sub_20C02ECBC(unsigned __int8 **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::SdfPayload>::operator==(*a1, a2);
}

uint64_t sub_20C02ECC8()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C02ECD4(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<pxrInternal__aapl__pxrReserved__::SdfPayload>(a2, *a1);
}

void *sub_20C02ECE4()
{
  return &unk_24C524CD0;
}

uint64_t sub_20C02ECF0()
{
  return 0;
}

uint64_t sub_20C02ECF8()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C02ED04()
{
  return 0;
}

uint64_t sub_20C02ED0C()
{
  return 0;
}

BOOL sub_20C02ED14(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB1142 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C02ED4C(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524CD0, a2, a3);
}

void *sub_20C02ED6C()
{
  return &unk_24C524CD0;
}

uint64_t sub_20C02ED78(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C02ED80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526620;
  return sub_20C02F37C((unsigned int **)a2, v2);
}

void ***sub_20C02ED98(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 19);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2 + 16;
      sub_20C021818(&v7);
      v7 = v2 + 13;
      sub_20C021818(&v7);
      v7 = v2 + 10;
      sub_20C021818(&v7);
      v7 = v2 + 7;
      sub_20C021818(&v7);
      v7 = v2 + 4;
      sub_20C021818(&v7);
      v7 = v2 + 1;
      sub_20C021818(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C02EE4C(unsigned __int8 *a1)
{
  uint64_t v2;
  char v3;

  v2 = 0;
  v3 = 0;
  sub_20C02EEB4((unint64_t)&v2, a1, (uint64_t)(a1 + 8), (uint64_t)(a1 + 32), (uint64_t)(a1 + 56), (uint64_t)(a1 + 80), (uint64_t)(a1 + 104), (uint64_t)(a1 + 128));
  return bswap64(0x9E3779B97F4A7C55 * bswap64(0x9E3779B97F4A7C55 * v2));
}

unint64_t sub_20C02EEB4(unint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  v8 = *a2;
  if (*(_BYTE *)(a1 + 8))
    v8 += (unint64_t)(*(_QWORD *)a1 + v8 + (*(_QWORD *)a1 + v8) * (*(_QWORD *)a1 + v8)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v8;
  return sub_20C02EEFC(a1, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_20C02EEFC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int8x16_t *v14;
  uint64_t v15;
  unint64_t v16;
  int8x16_t *v17;

  v14 = *(int8x16_t **)a2;
  v15 = *(_QWORD *)(a2 + 8) - (_QWORD)v14;
  if (v15)
  {
    v16 = 0xAAAAAAAAAAAAAAABLL * (v15 >> 4);
    do
    {
      --v16;
      v17 = v14 + 3;
      sub_20C02F02C(a1, v14);
      v14 = v17;
    }
    while (v16);
  }
  return sub_20C02EF98(a1, a3, a4, a5, a6, a7);
}

unint64_t sub_20C02EF98(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int8x16_t *v12;
  uint64_t v13;
  unint64_t v14;
  int8x16_t *v15;

  v12 = *(int8x16_t **)a2;
  v13 = *(_QWORD *)(a2 + 8) - (_QWORD)v12;
  if (v13)
  {
    v14 = 0xAAAAAAAAAAAAAAABLL * (v13 >> 4);
    do
    {
      --v14;
      v15 = v12 + 3;
      sub_20C02F02C(a1, v12);
      v12 = v15;
    }
    while (v14);
  }
  return sub_20C02F154(a1, a3, a4, a5, a6);
}

unint64_t sub_20C02F02C(uint64_t a1, int8x16_t *a2)
{
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  char v6;

  v5 = 0;
  v6 = 0;
  result = sub_20C02F0AC((pxrInternal__aapl__pxrReserved__::Tf_HashState *)&v5, (pxrInternal__aapl__pxrReserved__ *)a2, &a2[1].u32[2], a2 + 2);
  v4 = bswap64(0x9E3779B97F4A7C55 * v5);
  if (*(_BYTE *)(a1 + 8))
    v4 += (*(_QWORD *)a1 + v4 + (*(_QWORD *)a1 + v4) * (*(_QWORD *)a1 + v4)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v4;
  return result;
}

unint64_t sub_20C02F0AC(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, pxrInternal__aapl__pxrReserved__ *a2, unsigned int *a3, int8x16_t *a4)
{
  char *v7;
  char *v8;

  v7 = (char *)*((_QWORD *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    v8 = (char *)*((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(pxrInternal__aapl__pxrReserved__ **)a2;
    v8 = v7;
  }
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, a2, v8);
  sub_20BFD84AC((uint64_t)a1, a3);
  return sub_20C02F108((uint64_t)a1, a4);
}

unint64_t sub_20C02F108(uint64_t a1, int8x16_t *this)
{
  unint64_t result;

  result = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetHash(this);
  if (*(_BYTE *)(a1 + 8))
    result += (*(_QWORD *)a1 + result + (*(_QWORD *)a1 + result) * (*(_QWORD *)a1 + result)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = result;
  return result;
}

unint64_t sub_20C02F154(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t *v10;
  uint64_t v11;
  unint64_t v12;
  int8x16_t *v13;

  v10 = *(int8x16_t **)a2;
  v11 = *(_QWORD *)(a2 + 8) - (_QWORD)v10;
  if (v11)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * (v11 >> 4);
    do
    {
      --v12;
      v13 = v10 + 3;
      sub_20C02F02C(a1, v10);
      v10 = v13;
    }
    while (v12);
  }
  return sub_20C02F1D8(a1, a3, a4, a5);
}

unint64_t sub_20C02F1D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int8x16_t *v8;
  uint64_t v9;
  unint64_t v10;
  int8x16_t *v11;

  v8 = *(int8x16_t **)a2;
  v9 = *(_QWORD *)(a2 + 8) - (_QWORD)v8;
  if (v9)
  {
    v10 = 0xAAAAAAAAAAAAAAABLL * (v9 >> 4);
    do
    {
      --v10;
      v11 = v8 + 3;
      sub_20C02F02C(a1, v8);
      v8 = v11;
    }
    while (v10);
  }
  return sub_20C02F254(a1, a3, a4);
}

unint64_t sub_20C02F254(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int8x16_t *v6;
  uint64_t v7;
  unint64_t v8;
  int8x16_t *v9;
  int8x16_t *v10;
  uint64_t v11;
  unint64_t v12;
  int8x16_t *v13;

  v5 = result;
  v6 = *(int8x16_t **)a2;
  v7 = *(_QWORD *)(a2 + 8) - (_QWORD)v6;
  if (v7)
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * (v7 >> 4);
    do
    {
      --v8;
      v9 = v6 + 3;
      result = sub_20C02F02C(v5, v6);
      v6 = v9;
    }
    while (v8);
  }
  v10 = *(int8x16_t **)a3;
  v11 = *(_QWORD *)(a3 + 8) - *(_QWORD *)a3;
  if (v11)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * (v11 >> 4);
    do
    {
      --v12;
      v13 = v10 + 3;
      result = sub_20C02F02C(v5, v10);
      v10 = v13;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_20C02F2EC(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  void **v7;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C02E924((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v7 = (void **)*a1;
    *a1 = (uint64_t)v3;
    sub_20C02ED98(&v7);
  }
  return *a1;
}

void sub_20C02F368(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02F37C(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C02E924((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C02F3D4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02F3E8(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C02F2EC(a1);
}

char *sub_20C02F478@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C02F7F4(a2, a1);
}

void sub_20C02F4A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C02F4B8(__int128 **a1)
{
  unint64_t v1;
  uint64_t v2;
  const void **v3;
  const void **v4;
  const void **v5;
  int v6;
  _BOOL8 v7;
  const void **v9;
  const void **v10;
  uint64_t v11;
  char v12;
  const void ***v13;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  sub_20BE78B98((char *)&v9, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a1[1] - (char *)*a1) >> 3));
  v1 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (v10 - v9));
  if (v10 == v9)
    v2 = 0;
  else
    v2 = v1;
  sub_20BEDAFAC((uint64_t)v9, v10, (uint64_t)&v12, v2, 1);
  v3 = v9;
  v4 = v10;
  if (v9 == v10)
  {
    v4 = v9;
  }
  else
  {
    while (1)
    {
      v5 = v3 + 3;
      if (v3 + 3 == v4)
        break;
      v6 = sub_20BEB4EF8((uint64_t)&v13, (unsigned __int8 *)v3, (unsigned __int8 *)v3 + 24);
      v3 = v5;
      if (v6)
      {
        v4 = v5 - 3;
        break;
      }
    }
    v3 = v10;
  }
  v7 = v4 != v3;
  v13 = &v9;
  sub_20BDE5038((void ***)&v13);
  return v7;
}

void sub_20C02F58C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 24) = v1;
  sub_20BDE5038((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_20C02F5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  int v8;
  int v9;
  size_t v10;
  const void *v11;
  size_t v12;
  const void *v13;
  size_t v14;
  int v15;
  _BOOL4 v16;

  v2 = a1;
  if (a1 != a2)
  {
    v2 = a1 - 24;
    while (1)
    {
      v4 = (const void *)(v2 + 48);
      if (v2 + 48 == a2)
        break;
      v5 = (const void *)(v2 + 24);
      v7 = *(const void **)(v2 + 24);
      v2 += 24;
      v6 = v7;
      v8 = *(char *)(v2 + 47);
      v9 = *(char *)(v2 + 23);
      if (v9 >= 0)
        v10 = *(unsigned __int8 *)(v2 + 23);
      else
        v10 = *(_QWORD *)(v2 + 8);
      if (v9 >= 0)
        v11 = v5;
      else
        v11 = v6;
      if (v8 >= 0)
        v12 = *(unsigned __int8 *)(v2 + 47);
      else
        v12 = *(_QWORD *)(v2 + 32);
      if (v8 >= 0)
        v13 = v4;
      else
        v13 = *(const void **)(v2 + 24);
      if (v12 >= v10)
        v14 = v10;
      else
        v14 = v12;
      v15 = memcmp(v11, v13, v14);
      v16 = v10 >= v12;
      if (v15)
        v16 = v15 >= 0;
      if (v16)
        return v2;
    }
    return a2;
  }
  return v2;
}

uint64_t sub_20C02F650(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20BE78B98((char *)(a1 + 8), *(__int128 **)(a2 + 8), *(__int128 **)(a2 + 16), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3));
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20BE78B98((char *)(a1 + 32), *(__int128 **)(a2 + 32), *(__int128 **)(a2 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3));
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BE78B98((char *)(a1 + 56), *(__int128 **)(a2 + 56), *(__int128 **)(a2 + 64), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 3));
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20BE78B98((char *)(a1 + 80), *(__int128 **)(a2 + 80), *(__int128 **)(a2 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 3));
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20BE78B98((char *)(a1 + 104), *(__int128 **)(a2 + 104), *(__int128 **)(a2 + 112), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 3));
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20BE78B98((char *)(a1 + 128), *(__int128 **)(a2 + 128), *(__int128 **)(a2 + 136), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 3));
  return a1;
}

void sub_20C02F78C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDE5038((void ***)va);
  sub_20BDE5038((void ***)va);
  sub_20BDE5038((void ***)va);
  sub_20BDE5038((void ***)va);
  sub_20BDE5038((void ***)va);
  _Unwind_Resume(a1);
}

char *sub_20C02F7F4(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;

  if ((sub_20BFE5104(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v6);
    sub_20C02F8C8((uint64_t)a1, (uint64_t)&v6);
    v13 = (void **)&v12;
    sub_20BDE5038(&v13);
    v13 = (void **)&v11;
    sub_20BDE5038(&v13);
    v13 = (void **)&v10;
    sub_20BDE5038(&v13);
    v13 = (void **)&v9;
    sub_20BDE5038(&v13);
    v13 = (void **)&v8;
    sub_20BDE5038(&v13);
    v13 = (void **)&v7;
    sub_20BDE5038(&v13);
  }
  v4 = (char *)sub_20C02FE90((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::Swap(v4, a2);
}

void sub_20C02F8B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C020EAC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02F8C8(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C5266D8;
  sub_20C02FE24((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C02F958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C02F994(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C02F9BC(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C02FAC4(a1);
}

uint64_t sub_20C02F9CC()
{
  return 1;
}

unint64_t sub_20C02F9D4(unsigned __int8 **a1)
{
  return sub_20C02FB78(*a1);
}

uint64_t sub_20C02F9DC(unsigned __int8 **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::operator==(*a1, *a2);
}

uint64_t sub_20C02F9E8(unsigned __int8 **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::operator==(*a1, a2);
}

uint64_t sub_20C02F9F4()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C02FA00(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<std::string>(a2, *a1);
}

void *sub_20C02FA10()
{
  return &unk_24C524D30;
}

uint64_t sub_20C02FA1C()
{
  return 0;
}

uint64_t sub_20C02FA24()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C02FA30()
{
  return 0;
}

uint64_t sub_20C02FA38()
{
  return 0;
}

BOOL sub_20C02FA40(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAC16ECLL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C02FA78(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D30, a2, a3);
}

void *sub_20C02FA98()
{
  return &unk_24C524D30;
}

uint64_t sub_20C02FAA4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C02FAAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C5266D8;
  return sub_20C02FE24((unsigned int **)a2, v2);
}

void ***sub_20C02FAC4(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 19);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2 + 16;
      sub_20BDE5038(&v7);
      v7 = v2 + 13;
      sub_20BDE5038(&v7);
      v7 = v2 + 10;
      sub_20BDE5038(&v7);
      v7 = v2 + 7;
      sub_20BDE5038(&v7);
      v7 = v2 + 4;
      sub_20BDE5038(&v7);
      v7 = v2 + 1;
      sub_20BDE5038(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C02FB78(unsigned __int8 *a1)
{
  uint64_t v2;
  char v3;

  v2 = 0;
  v3 = 0;
  sub_20C02FBE0((unint64_t)&v2, a1, (uint64_t)(a1 + 8), (uint64_t)(a1 + 32), (uint64_t)(a1 + 56), (uint64_t)(a1 + 80), (uint64_t)(a1 + 104), (uint64_t)(a1 + 128));
  return bswap64(0x9E3779B97F4A7C55 * bswap64(0x9E3779B97F4A7C55 * v2));
}

unint64_t sub_20C02FBE0(unint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  v8 = *a2;
  if (*(_BYTE *)(a1 + 8))
    v8 += (unint64_t)(*(_QWORD *)a1 + v8 + (*(_QWORD *)a1 + v8) * (*(_QWORD *)a1 + v8)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v8;
  return sub_20C02FC28(a1, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_20C02FC28(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_20BFB7FC4(a1, *(uint64_t **)a2, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
  sub_20BFB7FC4(a1, *(uint64_t **)a3, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 3));
  return sub_20C02FCBC(a1, a4, a5, a6, a7);
}

unint64_t sub_20C02FCBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_20BFB7FC4(a1, *(uint64_t **)a2, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
  sub_20BFB7FC4(a1, *(uint64_t **)a3, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 3));
  return sub_20C02FD38(a1, a4, a5);
}

unint64_t sub_20C02FD38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20BFB7FC4(a1, *(uint64_t **)a2, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
  return sub_20BFB7FC4(a1, *(uint64_t **)a3, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 3));
}

uint64_t sub_20C02FD94(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  void **v7;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C02F650((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v7 = (void **)*a1;
    *a1 = (uint64_t)v3;
    sub_20C02FAC4(&v7);
  }
  return *a1;
}

void sub_20C02FE10(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02FE24(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C02F650((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C02FE7C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C02FE90(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C02FD94(a1);
}

uint64_t *sub_20C02FF20(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C02FF48(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C030070(a1);
}

uint64_t sub_20C02FF58()
{
  return 1;
}

unint64_t sub_20C02FF60(uint64_t *a1)
{
  char v2;

  return sub_20C0300D0((uint64_t)&v2, *a1);
}

BOOL sub_20C02FF84(uint64_t **a1, uint64_t *a2)
{
  return sub_20C030130(*a1, *a2);
}

BOOL sub_20C02FF90(uint64_t **a1, uint64_t a2)
{
  return sub_20C030130(*a1, a2);
}

uint64_t sub_20C02FF9C()
{
  return 0;
}

_QWORD *sub_20C02FFA8(uint64_t *a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&stru_24C51BCF0, *a1, a2);
}

void *sub_20C02FFBC()
{
  return &unk_24C51BCF0;
}

uint64_t sub_20C02FFC8()
{
  return 0;
}

uint64_t sub_20C02FFD0()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C02FFDC()
{
  return 0;
}

uint64_t sub_20C02FFE4()
{
  return 0;
}

BOOL sub_20C02FFEC(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB1184 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C030024(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C51BCF0, a2, a3);
}

void *sub_20C030044()
{
  return &unk_24C51BCF0;
}

uint64_t sub_20C030050(uint64_t a1)
{
  return *(_QWORD *)a1;
}

_QWORD *sub_20C030058@<X0>(uint64_t ***a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t **v2;

  v2 = *a1;
  a2[1] = &off_24C526790;
  return sub_20C030230(a2, v2);
}

void ***sub_20C030070(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 3);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2;
      sub_20BEEB2B8(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C0300D0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = *(uint64_t **)a2;
  v3 = 0;
  v4 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v4)
  {
    v5 = 0;
    v6 = v4 >> 3;
    do
    {
      v7 = *v2++;
      v8 = v7 & 0xFFFFFFFFFFFFFFF8;
      if (v5)
      {
        v3 = v8 + ((v8 + v3 + (v8 + v3) * (v8 + v3)) >> 1);
      }
      else
      {
        v5 = 1;
        v3 = v8;
      }
      --v6;
    }
    while (v6);
  }
  return bswap64(0x9E3779B97F4A7C55 * v3);
}

BOOL sub_20C030130(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 result;
  BOOL v8;

  v3 = *a1;
  v2 = a1[1];
  v4 = *(uint64_t **)a2;
  if (v2 - *a1 != *(_QWORD *)(a2 + 8) - *(_QWORD *)a2)
    return 0;
  if (v3 == v2)
    return 1;
  v5 = v3 + 8;
  do
  {
    v6 = *v4++;
    result = (*(_QWORD *)(v5 - 8) & 0xFFFFFFFFFFFFFFF8) == (v6 & 0xFFFFFFFFFFFFFFF8);
    v8 = (*(_QWORD *)(v5 - 8) & 0xFFFFFFFFFFFFFFF8) != (v6 & 0xFFFFFFFFFFFFFFF8) || v5 == v2;
    v5 += 8;
  }
  while (!v8);
  return result;
}

uint64_t **sub_20C03018C(uint64_t ***a1)
{
  unsigned int v2;
  char *v3;
  uint64_t **v4;
  unsigned int *v5;
  unsigned int v6;
  void **v8;

  v2 = atomic_load((unsigned int *)*a1 + 6);
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x20uLL);
    v4 = *a1;
    *((_QWORD *)v3 + 1) = 0;
    *((_QWORD *)v3 + 2) = 0;
    *(_QWORD *)v3 = 0;
    sub_20BFE538C(v3, *v4, v4[1], v4[1] - *v4);
    v5 = (unsigned int *)(v3 + 24);
    atomic_store(0, (unsigned int *)v3 + 6);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v8 = (void **)*a1;
    *a1 = (uint64_t **)v3;
    sub_20C030070(&v8);
  }
  return *a1;
}

void sub_20C03021C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C030230(_QWORD *a1, uint64_t **a2)
{
  char *v4;
  _QWORD *result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (char *)operator new(0x20uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  result = sub_20BFE538C(v4, *a2, a2[1], a2[1] - *a2);
  v6 = (unsigned int *)(v4 + 24);
  atomic_store(0, (unsigned int *)v4 + 6);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C030298(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0302AC(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CAC17D6 & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C526848);
}

_QWORD *sub_20C030324@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = operator new(0x18uLL);
  result[2] = 0;
  result[1] = 0;
  *result = result + 1;
  *a1 = result;
  a1[1] = sub_20C030370;
  a1[2] = &stru_24C526848;
  return result;
}

void sub_20C030370(_QWORD **a1)
{
  if (a1)
  {
    sub_20BDE9D48((uint64_t)a1, a1[1]);
    operator delete(a1);
  }
}

uint64_t *sub_20C0303A0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

unsigned int **sub_20C0303C8(unsigned int **a1, unsigned int **a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C030518(a1);
}

uint64_t sub_20C0303D8()
{
  return 1;
}

unint64_t sub_20C0303E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v1 = *a1;
  v3 = 0;
  v4 = 0;
  sub_20C030570((unint64_t)&v3, *(_QWORD **)v1, (_QWORD *)(v1 + 8));
  return bswap64(0x9E3779B97F4A7C55 * v3);
}

uint64_t sub_20C03042C(_QWORD **a1, unsigned __int8 ***a2)
{
  return sub_20C030644(*a1, *a2);
}

uint64_t sub_20C030438(_QWORD **a1, unsigned __int8 **a2)
{
  return sub_20C030644(*a1, a2);
}

uint64_t sub_20C030444()
{
  return 0;
}

_QWORD *sub_20C030450(uint64_t *a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&stru_24C526848, *a1, a2);
}

void *sub_20C030464()
{
  return &unk_24C526848;
}

uint64_t sub_20C030470()
{
  return 0;
}

uint64_t sub_20C030478()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C030484()
{
  return 0;
}

uint64_t sub_20C03048C()
{
  return 0;
}

BOOL sub_20C030494(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAC17D6 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C0304CC(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C526848, a2, a3);
}

void *sub_20C0304EC()
{
  return &unk_24C526848;
}

uint64_t sub_20C0304F8(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t *sub_20C030500@<X0>(const void ****a1@<X0>, _QWORD *a2@<X8>)
{
  const void ***v2;

  v2 = *a1;
  a2[1] = &off_24C526858;
  return sub_20C0307AC(a2, v2);
}

unsigned int **sub_20C030518(unsigned int **a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *a1;
  if (*a1)
  {
    v3 = v2 + 6;
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      sub_20BDE9D48((uint64_t)v2, *((_QWORD **)v2 + 1));
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C030570(unint64_t result, _QWORD *a2, _QWORD *a3)
{
  pxrInternal__aapl__pxrReserved__::Tf_HashState *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  if (a2 != a3)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::Tf_HashState *)result;
    do
    {
      v5 = (_QWORD *)a2[1];
      v6 = a2;
      if (v5)
      {
        do
        {
          v7 = v5;
          v5 = (_QWORD *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v6[2];
          v8 = *v7 == (_QWORD)v6;
          v6 = v7;
        }
        while (!v8);
      }
      result = sub_20C0305E8(v4, (pxrInternal__aapl__pxrReserved__ *)(a2 + 4));
      a2 = v7;
    }
    while (v7 != a3);
  }
  return result;
}

unint64_t sub_20C0305E8(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, pxrInternal__aapl__pxrReserved__ *a2)
{
  pxrInternal__aapl__pxrReserved__ *v2;
  char *v4;
  char *v5;
  pxrInternal__aapl__pxrReserved__ *v6;
  uint64_t *v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  int v9;
  pxrInternal__aapl__pxrReserved__ *v10;
  char *v11;

  v2 = a2;
  v4 = (char *)*((_QWORD *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    v5 = (char *)*((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(pxrInternal__aapl__pxrReserved__ **)a2;
    v5 = v4;
  }
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, a2, v5);
  v8 = (pxrInternal__aapl__pxrReserved__ *)*((_QWORD *)v2 + 3);
  v7 = (uint64_t *)((char *)v2 + 24);
  v6 = v8;
  v9 = *((char *)v7 + 23);
  if (v9 >= 0)
    v10 = (pxrInternal__aapl__pxrReserved__ *)v7;
  else
    v10 = v6;
  if (v9 >= 0)
    v11 = (char *)*((unsigned __int8 *)v7 + 23);
  else
    v11 = (char *)v7[1];
  return pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, v10, v11);
}

uint64_t sub_20C030644(_QWORD *a1, unsigned __int8 **a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t result;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  BOOL v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  char v11;

  if ((unsigned __int8 *)a1[2] != a2[2])
    return 0;
  v2 = (unsigned __int8 *)(a1 + 1);
  v3 = (unsigned __int8 *)*a1;
  if ((_QWORD *)*a1 == a1 + 1)
    return 1;
  v4 = *a2;
  do
  {
    result = sub_20BF77F70((uint64_t)&v11, v3 + 32, v4 + 32);
    if (!(_DWORD)result)
      break;
    v6 = (unsigned __int8 *)*((_QWORD *)v3 + 1);
    v7 = v3;
    if (v6)
    {
      do
      {
        v3 = v6;
        v6 = *(unsigned __int8 **)v6;
      }
      while (v6);
    }
    else
    {
      do
      {
        v3 = (unsigned __int8 *)*((_QWORD *)v7 + 2);
        v8 = *(_QWORD *)v3 == (_QWORD)v7;
        v7 = v3;
      }
      while (!v8);
    }
    v9 = (unsigned __int8 *)*((_QWORD *)v4 + 1);
    if (v9)
    {
      do
      {
        v10 = v9;
        v9 = *(unsigned __int8 **)v9;
      }
      while (v9);
    }
    else
    {
      do
      {
        v10 = (unsigned __int8 *)*((_QWORD *)v4 + 2);
        v8 = *(_QWORD *)v10 == (_QWORD)v4;
        v4 = v10;
      }
      while (!v8);
    }
    v4 = v10;
  }
  while (v3 != v2);
  return result;
}

const void ***sub_20C03071C(const void ****a1)
{
  unsigned int v2;
  char *v3;
  unsigned int *v4;
  unsigned int v5;
  const void ***v7;

  v2 = atomic_load((unsigned int *)*a1 + 6);
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x20uLL);
    sub_20BDEBF8C((uint64_t *)v3, *a1);
    v4 = (unsigned int *)(v3 + 24);
    atomic_store(0, (unsigned int *)v3 + 6);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v7 = *a1;
    *a1 = (const void ***)v3;
    sub_20C030518((unsigned int **)&v7);
  }
  return *a1;
}

void sub_20C030798(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C0307AC(_QWORD *a1, const void ***a2)
{
  char *v4;
  uint64_t *result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (char *)operator new(0x20uLL);
  result = sub_20BDEBF8C((uint64_t *)v4, a2);
  v6 = (unsigned int *)(v4 + 24);
  atomic_store(0, (unsigned int *)v4 + 6);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C030804(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C030818(uint64_t **a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, _DWORD *a3)
{
  void **v5;
  uint64_t *v6;
  uint64_t **v7;
  _QWORD v9[2];
  char v10;
  uint64_t v11;

  v5 = (void **)sub_20BFD74FC((uint64_t)a1, &v11, a2);
  v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = (uint64_t *)operator new(0x30uLL);
    v9[1] = a1 + 1;
    sub_20C0308C4((_DWORD *)v6 + 7, a3);
    v10 = 1;
    sub_20BDDE1B4(a1, v11, v7, v6);
    v9[0] = 0;
    sub_20BFE4C64((uint64_t)v9, 0);
  }
  return v6;
}

_DWORD *sub_20C0308C4(_DWORD *a1, _DWORD *a2)
{
  _DWORD *v4;

  v4 = sub_20BFD38A4(a1, a2);
  sub_20BFD38DC(v4 + 1, a2 + 1);
  sub_20BFD38A4(a1 + 2, a2 + 2);
  sub_20BFD38DC(a1 + 3, a2 + 3);
  return a1;
}

uint64_t *sub_20C030910(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C030938(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C030B00(a1);
}

uint64_t sub_20C030948()
{
  return 1;
}

unint64_t sub_20C030950(unsigned int ***a1)
{
  char v2;

  return sub_20C030B60((uint64_t)&v2, *a1);
}

BOOL sub_20C030974(uint64_t **a1, uint64_t ***a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 result;
  BOOL v8;

  v3 = **a1;
  v2 = (*a1)[1];
  v4 = **a2;
  if (v2 - v3 != (char *)(*a2)[1] - (char *)v4)
    return 0;
  if (v3 == v2)
    return 1;
  v5 = v3 + 8;
  do
  {
    v6 = *v4++;
    result = *(_QWORD *)(v5 - 8) == v6;
    v8 = *(_QWORD *)(v5 - 8) != v6 || v5 == v2;
    v5 += 8;
  }
  while (!v8);
  return result;
}

BOOL sub_20C0309D0(uint64_t **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 result;
  BOOL v8;

  v3 = **a1;
  v2 = (*a1)[1];
  v4 = *(uint64_t **)a2;
  if (v2 - v3 != *(_QWORD *)(a2 + 8) - *(_QWORD *)a2)
    return 0;
  if (v3 == v2)
    return 1;
  v5 = v3 + 8;
  do
  {
    v6 = *v4++;
    result = *(_QWORD *)(v5 - 8) == v6;
    v8 = *(_QWORD *)(v5 - 8) != v6 || v5 == v2;
    v5 += 8;
  }
  while (!v8);
  return result;
}

uint64_t sub_20C030A2C()
{
  return 0;
}

_QWORD *sub_20C030A38(uint64_t *a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&stru_24C5269C8, *a1, a2);
}

void *sub_20C030A4C()
{
  return &unk_24C5269C8;
}

uint64_t sub_20C030A58()
{
  return 0;
}

uint64_t sub_20C030A60()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C030A6C()
{
  return 0;
}

uint64_t sub_20C030A74()
{
  return 0;
}

BOOL sub_20C030A7C(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB11D8 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C030AB4(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C5269C8, a2, a3);
}

void *sub_20C030AD4()
{
  return &unk_24C5269C8;
}

uint64_t sub_20C030AE0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

_QWORD *sub_20C030AE8@<X0>(_DWORD ***a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD **v2;

  v2 = *a1;
  a2[1] = &off_24C526910;
  return sub_20C030C78(a2, v2);
}

void ***sub_20C030B00(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 3);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2;
      sub_20BFD6F90(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C030B60(uint64_t a1, unsigned int **a2)
{
  char *v2;
  unsigned int *v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = (char *)*a2;
  v3 = a2[1];
  v4 = (char *)v3 - (char *)*a2;
  if (v3 == *a2)
  {
    v9 = 0;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = v4 >> 3;
    do
    {
      v8 = *(unsigned int *)v2;
      if (v5)
        v8 += (v6 + v8 + (v6 + v8) * (v6 + v8)) >> 1;
      else
        v5 = 1;
      v6 = *((unsigned int *)v2 + 1)
         + ((v8
           + *((unsigned int *)v2 + 1)
           + (v8 + *((unsigned int *)v2 + 1)) * (v8 + (unint64_t)*((unsigned int *)v2 + 1))) >> 1);
      v2 += 8;
      --v7;
    }
    while (v7);
    v9 = 0x9E3779B97F4A7C55 * v6;
  }
  return bswap64(v9);
}

uint64_t sub_20C030BD4(uint64_t a1)
{
  unsigned int v2;
  char *v3;
  _DWORD **v4;
  unsigned int *v5;
  unsigned int v6;
  void **v8;

  v2 = atomic_load((unsigned int *)(*(_QWORD *)a1 + 24));
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x20uLL);
    v4 = *(_DWORD ***)a1;
    *((_QWORD *)v3 + 1) = 0;
    *((_QWORD *)v3 + 2) = 0;
    *(_QWORD *)v3 = 0;
    sub_20BFD6D38(v3, *v4, v4[1], ((char *)v4[1] - (char *)*v4) >> 3);
    v5 = (unsigned int *)(v3 + 24);
    atomic_store(0, (unsigned int *)v3 + 6);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v8 = *(void ***)a1;
    *(_QWORD *)a1 = v3;
    sub_20C030B00(&v8);
  }
  return *(_QWORD *)a1;
}

void sub_20C030C64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C030C78(_QWORD *a1, _DWORD **a2)
{
  char *v4;
  _QWORD *result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (char *)operator new(0x20uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  result = sub_20BFD6D38(v4, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 3);
  v6 = (unsigned int *)(v4 + 24);
  atomic_store(0, (unsigned int *)v4 + 6);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C030CE0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C030CF4(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CAB122ALL & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C5269D8);
}

_DWORD *sub_20C030D6C@<X0>(_QWORD *a1@<X8>)
{
  _DWORD *result;

  result = operator new(4uLL);
  *result = 0;
  *a1 = result;
  a1[1] = sub_20C030DAC;
  a1[2] = &stru_24C5269D8;
  return result;
}

void sub_20C030DAC(void *__p)
{
  if (__p)
    operator delete(__p);
}

_DWORD *sub_20C030DB8(_DWORD *result, _DWORD *a2)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_20C030DC8(_DWORD *result, _DWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_20C030DD4()
{
  return 1;
}

unint64_t sub_20C030DDC(unsigned int *a1)
{
  return bswap64(0x9E3779B97F4A7C55 * *a1);
}

BOOL sub_20C030DFC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_20C030E10(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20C030E28()
{
  return 0;
}

void *sub_20C030E38()
{
  return &unk_24C5269D8;
}

uint64_t sub_20C030E44()
{
  return 0;
}

uint64_t sub_20C030E4C()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C030E58()
{
  return 0;
}

uint64_t sub_20C030E60()
{
  return 0;
}

BOOL sub_20C030E68(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB122ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C030EA0(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C5269D8, a2, a3);
}

void *sub_20C030EC0()
{
  return &unk_24C5269D8;
}

_DWORD *sub_20C030ED0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = (char *)&off_24C5269E8 + 3;
  *(_DWORD *)a2 = *result;
  return result;
}

_QWORD *sub_20C030EEC(unsigned int *a1, _QWORD *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *v5;
  void *__p[2];
  unsigned __int8 v8;

  pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C5269D8, *a1, (uint64_t)__p);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  v5 = sub_20BDDC1C8(a2, (uint64_t)v3, v4);
  if ((char)v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_20C030F60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C030F7C(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    sub_20BF49F14((_QWORD ***)(i - 8), 0);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20C030FCC(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CAB11D8 & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C5269C8);
}

int *sub_20C031044(uint64_t *a1, int *a2, _DWORD *a3, _DWORD *a4, uint64_t a5)
{
  int *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  void *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = a2;
  if (a5 >= 1)
  {
    v11 = a1[2];
    v9 = (uint64_t)(a1 + 2);
    v10 = v11;
    v12 = *(_QWORD *)(v9 - 8);
    if (a5 <= (uint64_t)(v11 - v12) >> 3)
    {
      v19 = v12 - (_QWORD)a2;
      v20 = (uint64_t)(v12 - (_QWORD)a2) >> 3;
      if (v20 >= a5)
      {
        v21 = &a3[2 * a5];
      }
      else
      {
        v21 = &a3[2 * v20];
        a1[1] = (uint64_t)sub_20BFD6DBC(v9, v21, a4, *(_DWORD **)(v9 - 8));
        if (v19 < 1)
          return v5;
      }
      sub_20C0311C4((uint64_t)a1, (uint64_t)v5, v12, (uint64_t)&v5[2 * a5]);
      sub_20C031408((uint64_t)&v23, a3, v21, v5);
    }
    else
    {
      v13 = *a1;
      v14 = a5 + ((uint64_t)(v12 - *a1) >> 3);
      if (v14 >> 61)
        sub_20BDDF694();
      v15 = ((uint64_t)a2 - v13) >> 3;
      v16 = v10 - v13;
      if (v16 >> 2 > v14)
        v14 = v16 >> 2;
      if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
        v17 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v17 = v14;
      v27 = v9;
      if (v17)
        v18 = (char *)sub_20BDDF6A8(v9, v17);
      else
        v18 = 0;
      v23 = v18;
      v24 = &v18[8 * v15];
      v25 = v24;
      v26 = &v18[8 * v17];
      sub_20C031268(&v23, a3, a5);
      v5 = (int *)sub_20C0312D8((uint64_t)a1, &v23, v5);
      sub_20BFD7B28(&v23);
    }
  }
  return v5;
}

void sub_20C0311A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C0311C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  _DWORD *v8;
  _DWORD *v10;
  char v12;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = a2 + v6 - a4;
  v8 = (_DWORD *)v6;
  if (v7 < a3)
  {
    v10 = (_DWORD *)(a2 + v6 - a4);
    v8 = *(_DWORD **)(a1 + 8);
    do
    {
      sub_20BFD38A4(v8, v10);
      sub_20BFD38DC(v8 + 1, v10 + 1);
      v10 += 2;
      v8 += 2;
    }
    while ((unint64_t)v10 < a3);
  }
  *(_QWORD *)(a1 + 8) = v8;
  return sub_20C031388((uint64_t)&v12, a2, v7, v6);
}

_DWORD *sub_20C031268(_DWORD *result, _DWORD *a2, uint64_t a3)
{
  _DWORD *v3;
  _DWORD *v4;
  uint64_t v6;
  _DWORD *v7;

  v3 = result;
  v4 = (_DWORD *)*((_QWORD *)result + 2);
  if (a3)
  {
    v6 = 8 * a3;
    v7 = &v4[2 * a3];
    do
    {
      sub_20BFD6E54(v4, a2);
      result = sub_20BFD6EA4(v4 + 1, a2 + 1);
      v4 += 2;
      a2 += 2;
      v6 -= 8;
    }
    while (v6);
    v4 = v7;
  }
  *((_QWORD *)v3 + 2) = v4;
  return result;
}

uint64_t sub_20C0312D8(uint64_t a1, _QWORD *a2, _DWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1 + 16;
  sub_20BFD79F0(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(_QWORD *)a1, *(_QWORD *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_20C031474(v7, a3, *(_DWORD **)(a1 + 8), (_DWORD *)a2[2]);
  v9 = *(_QWORD *)a1;
  *(_QWORD *)a1 = a2[1];
  a2[1] = v9;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[2];
  a2[2] = v10;
  v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_20C031388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 != a2)
  {
    v7 = a3;
    do
    {
      sub_20BFD3EBC((int *)(a4 - 8), (int *)(v7 - 8));
      sub_20BFD3F10((int *)(a4 - 4), (int *)(v7 - 4));
      a4 -= 8;
      v7 -= 8;
    }
    while (v7 != a2);
  }
  return a3;
}

_DWORD *sub_20C031408(uint64_t a1, _DWORD *a2, _DWORD *a3, int *a4)
{
  _DWORD *v5;
  _DWORD *v6;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    sub_20C01A074(a4, v5);
    sub_20C01A0C8(a4 + 1, v5 + 1);
    a4 += 2;
    v5 += 2;
  }
  while (v5 != v6);
  return v6;
}

_DWORD *sub_20C031474(uint64_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  _DWORD *v4;
  _DWORD *v6;
  _QWORD v8[3];
  char v9;
  _DWORD *v10;
  _DWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20BFD38A4(v4, v6);
      sub_20BFD38DC(v4 + 1, v6 + 1);
      v6 += 2;
      v4 = v11 + 2;
      v11 += 2;
    }
    while (v6 != a3);
  }
  v9 = 1;
  sub_20BFD6EE0((uint64_t)v8);
  return v4;
}

uint64_t sub_20C03150C(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  if ((__int128 *)a1 != a2)
  {
    v3 = a2[1];
    v9 = *a2;
    v10 = v3;
    v4 = *((_QWORD *)a2 + 4);
    v11 = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 - 16);
      if (*((_QWORD *)&v10 + 1))
        v5 = (unint64_t *)*((_QWORD *)&v10 + 1);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    if (&v9 != (__int128 *)a1)
    {
      sub_20BF5618C(a1);
      v7 = v10;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v7;
      v9 = 0u;
      v10 = 0u;
      *(_QWORD *)(a1 + 32) = v11;
      v11 = 0;
    }
    sub_20BF5618C((uint64_t)&v9);
  }
  return a1;
}

void sub_20C0315A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C0315C4(_QWORD *a1, int a2, unint64_t *a3, uint64_t *a4)
{
  const void *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  _BYTE *v15;
  int *v16;
  int v17;
  _DWORD *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[8];
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *__p;
  void *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v7 = (const void *)a3[4];
  v8 = *a3;
  v9 = (uint64_t)v7 + 4 * *a3;
  v44 = 0;
  v45 = 0;
  v43 = 0;
  sub_20BE31AF4(&v43, v7, v9, v8);
  v10 = (char *)v43;
  if ((unint64_t)(v44 - (_BYTE *)v43) >= 8)
  {
    if ((unint64_t)(v44 - (_BYTE *)v43) > 0x2B)
    {
      if (v43 != v44)
      {
        v20 = (char *)v43 + 4;
        while (v20 != v44)
        {
          v21 = *((_DWORD *)v20 - 1);
          v22 = *(_DWORD *)v20;
          v20 += 4;
          if (v21 >= v22)
          {
            if (sub_20C031A28((uint64_t)&v43))
            {
LABEL_45:
              v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
              if (v23)
              {
                v24 = (const char *)(v23 + 16);
                if (*(char *)(v23 + 39) < 0)
                  v24 = *(const char **)v24;
              }
              else
              {
                v24 = "";
              }
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
              pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
              if (SHIBYTE(v32) >= 0)
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v30;
              else
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v30;
              pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, v29, v28);
              if (SHIBYTE(v32) < 0)
                operator delete(v30);
            }
            break;
          }
        }
      }
    }
    else
    {
LABEL_6:
      while (v10 != v44 - 4)
      {
        v16 = (int *)v10;
        v10 += 4;
        if (v10 != v44)
        {
          v17 = *v16;
          v18 = v10;
          while (v17 != *v18)
          {
            if (++v18 == (_DWORD *)v44)
              goto LABEL_6;
          }
          goto LABEL_45;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)v46);
  v14 = a4 + 102;
  (*(void (**)(_BYTE **__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v59, v12, v14, a1, v13);
  if (sub_20BFE4F24((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
  {
    if ((v60 & 4) != 0)
      v15 = (_BYTE *)(*(uint64_t (**)(_BYTE **))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
    else
      v15 = v59;
  }
  else
  {
    v15 = v46;
  }
  sub_20C031ADC((uint64_t)&v30, (uint64_t)v15);
  sub_20BF4C2D8((uint64_t)&v59);
  if (__p)
  {
    v58 = __p;
    operator delete(__p);
  }
  if (v55)
  {
    v56 = v55;
    operator delete(v55);
  }
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
  if (v47)
  {
    v48 = v47;
    operator delete(v47);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetItems((uint64_t)&v30, (uint64_t)&v43, a2);
  v19 = sub_20C026788(v11);
  sub_20C0319E8((char *)&v30, (pxrInternal__aapl__pxrReserved__::VtValue *)v46);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, _BYTE *))(*(_QWORD *)v19 + 152))(v19, v14, a1, v46);
  sub_20BF4C2D8((uint64_t)v46);
  if (v41)
  {
    v42 = v41;
    operator delete(v41);
  }
  if (v39)
  {
    v40 = v39;
    operator delete(v39);
  }
  if (v37)
  {
    v38 = v37;
    operator delete(v37);
  }
  if (v35)
  {
    v36 = v35;
    operator delete(v35);
  }
  if (v33)
  {
    v34 = v33;
    operator delete(v33);
  }
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v43)
  {
    v44 = (char *)v43;
    operator delete(v43);
  }
}

void sub_20C0318E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,char a36)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C031968(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = (void *)a1[16];
  if (v2)
  {
    a1[17] = v2;
    operator delete(v2);
  }
  v3 = (void *)a1[13];
  if (v3)
  {
    a1[14] = v3;
    operator delete(v3);
  }
  v4 = (void *)a1[10];
  if (v4)
  {
    a1[11] = v4;
    operator delete(v4);
  }
  v5 = (void *)a1[7];
  if (v5)
  {
    a1[8] = v5;
    operator delete(v5);
  }
  v6 = (void *)a1[4];
  if (v6)
  {
    a1[5] = v6;
    operator delete(v6);
  }
  v7 = (void *)a1[1];
  if (v7)
  {
    a1[2] = v7;
    operator delete(v7);
  }
  return a1;
}

char *sub_20C0319E8@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C031C5C(a2, a1);
}

void sub_20C031A14(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C031A28(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  int v4;
  int v5;
  char *v7;
  char *v8;
  uint64_t v9;

  v7 = 0;
  v8 = 0;
  v9 = 0;
  sub_20BE8B214(&v7, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 2);
  std::__sort<std::__less<int,int> &,int *>();
  v1 = v8;
  v2 = v7;
  if (v7 == v8)
  {
LABEL_6:
    if (!v7)
      return v2 != v1;
LABEL_7:
    v8 = v7;
    operator delete(v7);
    return v2 != v1;
  }
  v3 = v7 + 4;
  while (v3 != v8)
  {
    v4 = *((_DWORD *)v3 - 1);
    v5 = *(_DWORD *)v3;
    v3 += 4;
    if (v4 == v5)
    {
      v2 = v3 - 8;
      goto LABEL_6;
    }
  }
  v2 = v8;
  if (v7)
    goto LABEL_7;
  return v2 != v1;
}

void sub_20C031AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C031ADC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20BE8B214((_QWORD *)(a1 + 8), *(const void **)(a2 + 8), *(_QWORD *)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 2);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20BE8B214((_QWORD *)(a1 + 32), *(const void **)(a2 + 32), *(_QWORD *)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 2);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BE8B214((_QWORD *)(a1 + 56), *(const void **)(a2 + 56), *(_QWORD *)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 2);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20BE8B214((_QWORD *)(a1 + 80), *(const void **)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 2);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20BE8B214((_QWORD *)(a1 + 104), *(const void **)(a2 + 104), *(_QWORD *)(a2 + 112), (uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 2);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20BE8B214((_QWORD *)(a1 + 128), *(const void **)(a2 + 128), *(_QWORD *)(a2 + 136), (uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 2);
  return a1;
}

void sub_20C031BE0(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v8 = *v6;
  if (*v6)
  {
    v1[14] = v8;
    operator delete(v8);
  }
  v9 = *v5;
  if (*v5)
  {
    v1[11] = v9;
    operator delete(v9);
  }
  v10 = *v4;
  if (*v4)
  {
    v1[8] = v10;
    operator delete(v10);
  }
  v11 = *v3;
  if (*v3)
  {
    v1[5] = v11;
    operator delete(v11);
  }
  v12 = *v2;
  if (*v2)
  {
    v1[2] = v12;
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

char *sub_20C031C5C(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  _BYTE v6[8];
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *__p;
  void *v18;

  if ((sub_20BFE4F24(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)v6);
    sub_20C031D24((uint64_t)a1, (uint64_t)v6);
    if (__p)
    {
      v18 = __p;
      operator delete(__p);
    }
    if (v15)
    {
      v16 = v15;
      operator delete(v15);
    }
    if (v13)
    {
      v14 = v13;
      operator delete(v13);
    }
    if (v11)
    {
      v12 = v11;
      operator delete(v11);
    }
    if (v9)
    {
      v10 = v9;
      operator delete(v9);
    }
    if (v7)
    {
      v8 = v7;
      operator delete(v7);
    }
  }
  v4 = (char *)sub_20C032284((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<int>::Swap(v4, a2);
}

void sub_20C031D10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C031968((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C031D24(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526AA0;
  sub_20C032218((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C031DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C031DF0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_20C031E14(unsigned int **a1)
{
  unsigned int *v1;

  v1 = *a1;
  if (v1)
    sub_20C031F2C(v1);
}

_QWORD *sub_20C031E24(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  *result = 0;
  return result;
}

uint64_t sub_20C031E34()
{
  return 1;
}

unint64_t sub_20C031E3C(unsigned __int8 **a1)
{
  return sub_20C031FD8(*a1);
}

BOOL sub_20C031E44(_QWORD **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<int>::operator==(*a1, *a2);
}

BOOL sub_20C031E50(_QWORD **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<int>::operator==(*a1, a2);
}

uint64_t sub_20C031E5C()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C031E68(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<int>(a2, *a1);
}

void *sub_20C031E78()
{
  return &unk_24C524CF0;
}

uint64_t sub_20C031E84()
{
  return 0;
}

uint64_t sub_20C031E8C()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C031E98()
{
  return 0;
}

uint64_t sub_20C031EA0()
{
  return 0;
}

BOOL sub_20C031EA8(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB04FALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C031EE0(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524CF0, a2, a3);
}

void *sub_20C031F00()
{
  return &unk_24C524CF0;
}

uint64_t sub_20C031F0C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C031F14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526AA0;
  return sub_20C032218((unsigned int **)a2, v2);
}

void sub_20C031F2C(unsigned int *__p)
{
  unsigned int *v2;
  unsigned int v3;
  unsigned int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = __p + 38;
  do
  {
    v3 = __ldxr(v2);
    v4 = v3 - 1;
  }
  while (__stlxr(v4, v2));
  if (!v4)
  {
    __dmb(9u);
    if (__p)
    {
      v5 = (void *)*((_QWORD *)__p + 16);
      if (v5)
      {
        *((_QWORD *)__p + 17) = v5;
        operator delete(v5);
      }
      v6 = (void *)*((_QWORD *)__p + 13);
      if (v6)
      {
        *((_QWORD *)__p + 14) = v6;
        operator delete(v6);
      }
      v7 = (void *)*((_QWORD *)__p + 10);
      if (v7)
      {
        *((_QWORD *)__p + 11) = v7;
        operator delete(v7);
      }
      v8 = (void *)*((_QWORD *)__p + 7);
      if (v8)
      {
        *((_QWORD *)__p + 8) = v8;
        operator delete(v8);
      }
      v9 = (void *)*((_QWORD *)__p + 4);
      if (v9)
      {
        *((_QWORD *)__p + 5) = v9;
        operator delete(v9);
      }
      v10 = (void *)*((_QWORD *)__p + 1);
      if (v10)
      {
        *((_QWORD *)__p + 2) = v10;
        operator delete(v10);
      }
      operator delete(__p);
    }
  }
}

unint64_t sub_20C031FD8(unsigned __int8 *a1)
{
  uint64_t v2;
  char v3;

  v2 = 0;
  v3 = 0;
  sub_20C032040((pxrInternal__aapl__pxrReserved__::Tf_HashState *)&v2, a1, (uint64_t)(a1 + 8), (uint64_t)(a1 + 32), (uint64_t)(a1 + 56), (uint64_t)(a1 + 80), (uint64_t)(a1 + 104), (uint64_t)(a1 + 128));
  return bswap64(0x9E3779B97F4A7C55 * bswap64(0x9E3779B97F4A7C55 * v2));
}

unint64_t sub_20C032040(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  v8 = *a2;
  if (*((_BYTE *)a1 + 8))
    v8 += (unint64_t)(*(_QWORD *)a1 + v8 + (*(_QWORD *)a1 + v8) * (*(_QWORD *)a1 + v8)) >> 1;
  else
    *((_BYTE *)a1 + 8) = 1;
  *(_QWORD *)a1 = v8;
  return sub_20C032088(a1, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_20C032088(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, *(pxrInternal__aapl__pxrReserved__ **)a2, (char *)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2));
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, *(pxrInternal__aapl__pxrReserved__ **)a3, (char *)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3));
  return sub_20C0320FC(a1, a4, a5, a6, a7);
}

unint64_t sub_20C0320FC(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, *(pxrInternal__aapl__pxrReserved__ **)a2, (char *)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2));
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, *(pxrInternal__aapl__pxrReserved__ **)a3, (char *)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3));
  return sub_20C032158(a1, a4, a5);
}

unint64_t sub_20C032158(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, *(pxrInternal__aapl__pxrReserved__ **)a2, (char *)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2));
  return pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, *(pxrInternal__aapl__pxrReserved__ **)a3, (char *)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3));
}

uint64_t sub_20C032194(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C031ADC((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v6 = (unsigned int *)*a1;
    *a1 = (uint64_t)v3;
    if (v6)
      sub_20C031F2C(v6);
  }
  return *a1;
}

void sub_20C032204(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C032218(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C031ADC((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C032270(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C032284(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C032194(a1);
}

uint64_t sub_20C032314(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (*(_DWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16) == 54)
    return 1;
  if ((v1 & 4) != 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C51DD50);
  else
    return 0;
}

uint64_t sub_20C03234C(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  if ((__int128 *)a1 != a2)
  {
    v3 = a2[1];
    v9 = *a2;
    v10 = v3;
    v4 = *((_QWORD *)a2 + 4);
    v11 = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 - 16);
      if (*((_QWORD *)&v10 + 1))
        v5 = (unint64_t *)*((_QWORD *)&v10 + 1);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    if (&v9 != (__int128 *)a1)
    {
      sub_20BF5618C(a1);
      v7 = v10;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v7;
      v9 = 0u;
      v10 = 0u;
      *(_QWORD *)(a1 + 32) = v11;
      v11 = 0;
    }
    sub_20BF5618C((uint64_t)&v9);
  }
  return a1;
}

void sub_20C0323E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C032404(_QWORD *a1, int a2, unint64_t *a3, uint64_t *a4)
{
  const void *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  _BYTE *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[8];
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *__p;
  void *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v7 = (const void *)a3[4];
  v8 = *a3;
  v9 = (uint64_t)v7 + 8 * *a3;
  v44 = 0;
  v45 = 0;
  v43 = 0;
  sub_20C0327E8(&v43, v7, v9, v8);
  v10 = (char *)v43;
  if ((unint64_t)(v44 - (_BYTE *)v43) >= 0x10)
  {
    if ((unint64_t)(v44 - (_BYTE *)v43) > 0x57)
    {
      if (v43 != v44)
      {
        v20 = (char *)v43 + 8;
        while (v20 != v44)
        {
          v21 = *((_QWORD *)v20 - 1);
          v22 = *(_QWORD *)v20;
          v20 += 8;
          if (v21 >= v22)
          {
            if (sub_20C032860((uint64_t)&v43))
            {
LABEL_45:
              v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
              if (v23)
              {
                v24 = (const char *)(v23 + 16);
                if (*(char *)(v23 + 39) < 0)
                  v24 = *(const char **)v24;
              }
              else
              {
                v24 = "";
              }
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
              pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
              if (SHIBYTE(v32) >= 0)
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v30;
              else
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v30;
              pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, v29, v28);
              if (SHIBYTE(v32) < 0)
                operator delete(v30);
            }
            break;
          }
        }
      }
    }
    else
    {
LABEL_6:
      while (v10 != v44 - 8)
      {
        v16 = (uint64_t *)v10;
        v10 += 8;
        if (v10 != v44)
        {
          v17 = *v16;
          v18 = v10;
          while (v17 != *v18)
          {
            if (++v18 == (_QWORD *)v44)
              goto LABEL_6;
          }
          goto LABEL_45;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)v46);
  v14 = a4 + 102;
  (*(void (**)(_BYTE **__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v59, v12, v14, a1, v13);
  if (sub_20BFE4F9C((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
  {
    if ((v60 & 4) != 0)
      v15 = (_BYTE *)(*(uint64_t (**)(_BYTE **))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
    else
      v15 = v59;
  }
  else
  {
    v15 = v46;
  }
  sub_20C03298C((uint64_t)&v30, (uint64_t)v15);
  sub_20BF4C2D8((uint64_t)&v59);
  if (__p)
  {
    v58 = __p;
    operator delete(__p);
  }
  if (v55)
  {
    v56 = v55;
    operator delete(v55);
  }
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
  if (v47)
  {
    v48 = v47;
    operator delete(v47);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetItems((uint64_t)&v30, (uint64_t)&v43, a2);
  v19 = sub_20C026788(v11);
  sub_20C0327A8((char *)&v30, (pxrInternal__aapl__pxrReserved__::VtValue *)v46);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, _BYTE *))(*(_QWORD *)v19 + 152))(v19, v14, a1, v46);
  sub_20BF4C2D8((uint64_t)v46);
  if (v41)
  {
    v42 = v41;
    operator delete(v41);
  }
  if (v39)
  {
    v40 = v39;
    operator delete(v39);
  }
  if (v37)
  {
    v38 = v37;
    operator delete(v37);
  }
  if (v35)
  {
    v36 = v35;
    operator delete(v35);
  }
  if (v33)
  {
    v34 = v33;
    operator delete(v33);
  }
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v43)
  {
    v44 = (char *)v43;
    operator delete(v43);
  }
}

void sub_20C032720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,char a36)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_20C0327A8@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C032B0C(a2, a1);
}

void sub_20C0327D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C0327E8(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C032844(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_20C032860(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  char *v8;
  uint64_t v9;

  v7 = 0;
  v8 = 0;
  v9 = 0;
  sub_20C032914(&v7, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  std::__sort<std::__less<long long,long long> &,long long *>();
  v1 = v8;
  v2 = v7;
  if (v7 == v8)
  {
LABEL_6:
    if (!v7)
      return v2 != v1;
LABEL_7:
    v8 = v7;
    operator delete(v7);
    return v2 != v1;
  }
  v3 = v7 + 8;
  while (v3 != v8)
  {
    v4 = *((_QWORD *)v3 - 1);
    v5 = *(_QWORD *)v3;
    v3 += 8;
    if (v4 == v5)
    {
      v2 = v3 - 16;
      goto LABEL_6;
    }
  }
  v2 = v8;
  if (v7)
    goto LABEL_7;
  return v2 != v1;
}

void sub_20C0328F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C032914(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C032970(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C03298C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20C032914((_QWORD *)(a1 + 8), *(const void **)(a2 + 8), *(_QWORD *)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20C032914((_QWORD *)(a1 + 32), *(const void **)(a2 + 32), *(_QWORD *)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20C032914((_QWORD *)(a1 + 56), *(const void **)(a2 + 56), *(_QWORD *)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 3);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20C032914((_QWORD *)(a1 + 80), *(const void **)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 3);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20C032914((_QWORD *)(a1 + 104), *(const void **)(a2 + 104), *(_QWORD *)(a2 + 112), (uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 3);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20C032914((_QWORD *)(a1 + 128), *(const void **)(a2 + 128), *(_QWORD *)(a2 + 136), (uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 3);
  return a1;
}

void sub_20C032A90(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v8 = *v6;
  if (*v6)
  {
    v1[14] = v8;
    operator delete(v8);
  }
  v9 = *v5;
  if (*v5)
  {
    v1[11] = v9;
    operator delete(v9);
  }
  v10 = *v4;
  if (*v4)
  {
    v1[8] = v10;
    operator delete(v10);
  }
  v11 = *v3;
  if (*v3)
  {
    v1[5] = v11;
    operator delete(v11);
  }
  v12 = *v2;
  if (*v2)
  {
    v1[2] = v12;
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

char *sub_20C032B0C(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  _BYTE v6[8];
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *__p;
  void *v18;

  if ((sub_20BFE4F9C(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)v6);
    sub_20C032BD4((uint64_t)a1, (uint64_t)v6);
    if (__p)
    {
      v18 = __p;
      operator delete(__p);
    }
    if (v15)
    {
      v16 = v15;
      operator delete(v15);
    }
    if (v13)
    {
      v14 = v13;
      operator delete(v13);
    }
    if (v11)
    {
      v12 = v11;
      operator delete(v11);
    }
    if (v9)
    {
      v10 = v9;
      operator delete(v9);
    }
    if (v7)
    {
      v8 = v7;
      operator delete(v7);
    }
  }
  v4 = (char *)sub_20C032ECC((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::Swap(v4, a2);
}

void sub_20C032BC0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C031968((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C032BD4(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526B58;
  sub_20C032E60((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C032C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C032CA0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_20C032CC4(unsigned int **a1)
{
  unsigned int *v1;

  v1 = *a1;
  if (v1)
    sub_20C031F2C(v1);
}

_QWORD *sub_20C032CD4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  *result = 0;
  return result;
}

uint64_t sub_20C032CE4()
{
  return 1;
}

unint64_t sub_20C032CEC(unsigned __int8 **a1)
{
  return sub_20C031FD8(*a1);
}

BOOL sub_20C032CF4(_QWORD **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::operator==(*a1, *a2);
}

BOOL sub_20C032D00(_QWORD **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::operator==(*a1, a2);
}

uint64_t sub_20C032D0C()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C032D18(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<long long>(a2, *a1);
}

void *sub_20C032D28()
{
  return &unk_24C524D00;
}

uint64_t sub_20C032D34()
{
  return 0;
}

uint64_t sub_20C032D3C()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C032D48()
{
  return 0;
}

uint64_t sub_20C032D50()
{
  return 0;
}

BOOL sub_20C032D58(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB1260 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C032D90(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D00, a2, a3);
}

void *sub_20C032DB0()
{
  return &unk_24C524D00;
}

uint64_t sub_20C032DBC(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C032DC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526B58;
  return sub_20C032E60((unsigned int **)a2, v2);
}

uint64_t sub_20C032DDC(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C03298C((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v6 = (unsigned int *)*a1;
    *a1 = (uint64_t)v3;
    if (v6)
      sub_20C031F2C(v6);
  }
  return *a1;
}

void sub_20C032E4C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C032E60(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C03298C((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C032EB8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C032ECC(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C032DDC(a1);
}

uint64_t sub_20C032F5C(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  if ((__int128 *)a1 != a2)
  {
    v3 = a2[1];
    v9 = *a2;
    v10 = v3;
    v4 = *((_QWORD *)a2 + 4);
    v11 = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 - 16);
      if (*((_QWORD *)&v10 + 1))
        v5 = (unint64_t *)*((_QWORD *)&v10 + 1);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    if (&v9 != (__int128 *)a1)
    {
      sub_20BF5618C(a1);
      v7 = v10;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v7;
      v9 = 0u;
      v10 = 0u;
      *(_QWORD *)(a1 + 32) = v11;
      v11 = 0;
    }
    sub_20BF5618C((uint64_t)&v9);
  }
  return a1;
}

void sub_20C032FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C033014(_QWORD *a1, int a2, unint64_t *a3, uint64_t *a4)
{
  const void *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  _BYTE *v15;
  int *v16;
  int v17;
  _DWORD *v18;
  uint64_t v19;
  char *v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[8];
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *__p;
  void *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v7 = (const void *)a3[4];
  v8 = *a3;
  v9 = (uint64_t)v7 + 4 * *a3;
  v44 = 0;
  v45 = 0;
  v43 = 0;
  sub_20C0333F8(&v43, v7, v9, v8);
  v10 = (char *)v43;
  if ((unint64_t)(v44 - (_BYTE *)v43) >= 8)
  {
    if ((unint64_t)(v44 - (_BYTE *)v43) > 0x2B)
    {
      if (v43 != v44)
      {
        v20 = (char *)v43 + 4;
        while (v20 != v44)
        {
          v21 = *((_DWORD *)v20 - 1);
          v22 = *(_DWORD *)v20;
          v20 += 4;
          if (v21 >= v22)
          {
            if (sub_20C033470((uint64_t)&v43))
            {
LABEL_45:
              v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
              if (v23)
              {
                v24 = (const char *)(v23 + 16);
                if (*(char *)(v23 + 39) < 0)
                  v24 = *(const char **)v24;
              }
              else
              {
                v24 = "";
              }
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
              pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
              if (SHIBYTE(v32) >= 0)
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v30;
              else
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v30;
              pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, v29, v28);
              if (SHIBYTE(v32) < 0)
                operator delete(v30);
            }
            break;
          }
        }
      }
    }
    else
    {
LABEL_6:
      while (v10 != v44 - 4)
      {
        v16 = (int *)v10;
        v10 += 4;
        if (v10 != v44)
        {
          v17 = *v16;
          v18 = v10;
          while (v17 != *v18)
          {
            if (++v18 == (_DWORD *)v44)
              goto LABEL_6;
          }
          goto LABEL_45;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)v46);
  v14 = a4 + 102;
  (*(void (**)(_BYTE **__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v59, v12, v14, a1, v13);
  if (sub_20BFE5014((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
  {
    if ((v60 & 4) != 0)
      v15 = (_BYTE *)(*(uint64_t (**)(_BYTE **))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
    else
      v15 = v59;
  }
  else
  {
    v15 = v46;
  }
  sub_20C033524((uint64_t)&v30, (uint64_t)v15);
  sub_20BF4C2D8((uint64_t)&v59);
  if (__p)
  {
    v58 = __p;
    operator delete(__p);
  }
  if (v55)
  {
    v56 = v55;
    operator delete(v55);
  }
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
  if (v47)
  {
    v48 = v47;
    operator delete(v47);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetItems((uint64_t)&v30, (uint64_t)&v43, a2);
  v19 = sub_20C026788(v11);
  sub_20C0333B8((char *)&v30, (pxrInternal__aapl__pxrReserved__::VtValue *)v46);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, _BYTE *))(*(_QWORD *)v19 + 152))(v19, v14, a1, v46);
  sub_20BF4C2D8((uint64_t)v46);
  if (v41)
  {
    v42 = v41;
    operator delete(v41);
  }
  if (v39)
  {
    v40 = v39;
    operator delete(v39);
  }
  if (v37)
  {
    v38 = v37;
    operator delete(v37);
  }
  if (v35)
  {
    v36 = v35;
    operator delete(v35);
  }
  if (v33)
  {
    v34 = v33;
    operator delete(v33);
  }
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v43)
  {
    v44 = (char *)v43;
    operator delete(v43);
  }
}

void sub_20C033330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,char a36)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_20C0333B8@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C0336A4(a2, a1);
}

void sub_20C0333E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C0333F8(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDE3738(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C033454(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_20C033470(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  int v4;
  int v5;
  char *v7;
  char *v8;
  uint64_t v9;

  v7 = 0;
  v8 = 0;
  v9 = 0;
  sub_20BE8B28C(&v7, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 2);
  std::__sort<std::__less<unsigned int,unsigned int> &,unsigned int *>();
  v1 = v8;
  v2 = v7;
  if (v7 == v8)
  {
LABEL_6:
    if (!v7)
      return v2 != v1;
LABEL_7:
    v8 = v7;
    operator delete(v7);
    return v2 != v1;
  }
  v3 = v7 + 4;
  while (v3 != v8)
  {
    v4 = *((_DWORD *)v3 - 1);
    v5 = *(_DWORD *)v3;
    v3 += 4;
    if (v4 == v5)
    {
      v2 = v3 - 8;
      goto LABEL_6;
    }
  }
  v2 = v8;
  if (v7)
    goto LABEL_7;
  return v2 != v1;
}

void sub_20C033508(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C033524(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20BE8B28C((_QWORD *)(a1 + 8), *(const void **)(a2 + 8), *(_QWORD *)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 2);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20BE8B28C((_QWORD *)(a1 + 32), *(const void **)(a2 + 32), *(_QWORD *)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 2);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BE8B28C((_QWORD *)(a1 + 56), *(const void **)(a2 + 56), *(_QWORD *)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 2);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20BE8B28C((_QWORD *)(a1 + 80), *(const void **)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 2);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20BE8B28C((_QWORD *)(a1 + 104), *(const void **)(a2 + 104), *(_QWORD *)(a2 + 112), (uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 2);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20BE8B28C((_QWORD *)(a1 + 128), *(const void **)(a2 + 128), *(_QWORD *)(a2 + 136), (uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 2);
  return a1;
}

void sub_20C033628(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v8 = *v6;
  if (*v6)
  {
    v1[14] = v8;
    operator delete(v8);
  }
  v9 = *v5;
  if (*v5)
  {
    v1[11] = v9;
    operator delete(v9);
  }
  v10 = *v4;
  if (*v4)
  {
    v1[8] = v10;
    operator delete(v10);
  }
  v11 = *v3;
  if (*v3)
  {
    v1[5] = v11;
    operator delete(v11);
  }
  v12 = *v2;
  if (*v2)
  {
    v1[2] = v12;
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

char *sub_20C0336A4(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  _BYTE v6[8];
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *__p;
  void *v18;

  if ((sub_20BFE5014(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)v6);
    sub_20C03376C((uint64_t)a1, (uint64_t)v6);
    if (__p)
    {
      v18 = __p;
      operator delete(__p);
    }
    if (v15)
    {
      v16 = v15;
      operator delete(v15);
    }
    if (v13)
    {
      v14 = v13;
      operator delete(v13);
    }
    if (v11)
    {
      v12 = v11;
      operator delete(v11);
    }
    if (v9)
    {
      v10 = v9;
      operator delete(v9);
    }
    if (v7)
    {
      v8 = v7;
      operator delete(v7);
    }
  }
  v4 = (char *)sub_20C033A64((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::Swap(v4, a2);
}

void sub_20C033758(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C031968((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C03376C(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526C10;
  sub_20C0339F8((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C0337FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C033838(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_20C03385C(unsigned int **a1)
{
  unsigned int *v1;

  v1 = *a1;
  if (v1)
    sub_20C031F2C(v1);
}

_QWORD *sub_20C03386C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  *result = 0;
  return result;
}

uint64_t sub_20C03387C()
{
  return 1;
}

unint64_t sub_20C033884(unsigned __int8 **a1)
{
  return sub_20C031FD8(*a1);
}

BOOL sub_20C03388C(_QWORD **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::operator==(*a1, *a2);
}

BOOL sub_20C033898(_QWORD **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::operator==(*a1, a2);
}

uint64_t sub_20C0338A4()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C0338B0(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<unsigned int>(a2, *a1);
}

void *sub_20C0338C0()
{
  return &unk_24C524D10;
}

uint64_t sub_20C0338CC()
{
  return 0;
}

uint64_t sub_20C0338D4()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C0338E0()
{
  return 0;
}

uint64_t sub_20C0338E8()
{
  return 0;
}

BOOL sub_20C0338F0(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAC1688 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C033928(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D10, a2, a3);
}

void *sub_20C033948()
{
  return &unk_24C524D10;
}

uint64_t sub_20C033954(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C03395C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526C10;
  return sub_20C0339F8((unsigned int **)a2, v2);
}

uint64_t sub_20C033974(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C033524((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v6 = (unsigned int *)*a1;
    *a1 = (uint64_t)v3;
    if (v6)
      sub_20C031F2C(v6);
  }
  return *a1;
}

void sub_20C0339E4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0339F8(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C033524((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C033A50(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C033A64(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C033974(a1);
}

uint64_t sub_20C033AF4(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (*(_DWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16) == 55)
    return 1;
  if ((v1 & 4) != 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C51DD68);
  else
    return 0;
}

uint64_t sub_20C033B2C(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  if ((__int128 *)a1 != a2)
  {
    v3 = a2[1];
    v9 = *a2;
    v10 = v3;
    v4 = *((_QWORD *)a2 + 4);
    v11 = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 - 16);
      if (*((_QWORD *)&v10 + 1))
        v5 = (unint64_t *)*((_QWORD *)&v10 + 1);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    if (&v9 != (__int128 *)a1)
    {
      sub_20BF5618C(a1);
      v7 = v10;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v7;
      v9 = 0u;
      v10 = 0u;
      *(_QWORD *)(a1 + 32) = v11;
      v11 = 0;
    }
    sub_20BF5618C((uint64_t)&v9);
  }
  return a1;
}

void sub_20C033BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C033BE4(_QWORD *a1, int a2, unint64_t *a3, uint64_t *a4)
{
  const void *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t *v14;
  _BYTE *v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[8];
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *__p;
  void *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v7 = (const void *)a3[4];
  v8 = *a3;
  v9 = (uint64_t)v7 + 8 * *a3;
  v44 = 0;
  v45 = 0;
  v43 = 0;
  sub_20C033FC8(&v43, v7, v9, v8);
  v10 = (char *)v43;
  if ((unint64_t)(v44 - (_BYTE *)v43) >= 0x10)
  {
    if ((unint64_t)(v44 - (_BYTE *)v43) > 0x57)
    {
      if (v43 != v44)
      {
        v20 = (char *)v43 + 8;
        while (v20 != v44)
        {
          v21 = *((_QWORD *)v20 - 1);
          v22 = *(_QWORD *)v20;
          v20 += 8;
          if (v21 >= v22)
          {
            if (sub_20C034040((uint64_t)&v43))
            {
LABEL_45:
              v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
              if (v23)
              {
                v24 = (const char *)(v23 + 16);
                if (*(char *)(v23 + 39) < 0)
                  v24 = *(const char **)v24;
              }
              else
              {
                v24 = "";
              }
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
              pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
              if (SHIBYTE(v32) >= 0)
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&v30;
              else
                v29 = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)v30;
              pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, v29, v28);
              if (SHIBYTE(v32) < 0)
                operator delete(v30);
            }
            break;
          }
        }
      }
    }
    else
    {
LABEL_6:
      while (v10 != v44 - 8)
      {
        v16 = (uint64_t *)v10;
        v10 += 8;
        if (v10 != v44)
        {
          v17 = *v16;
          v18 = v10;
          while (v17 != *v18)
          {
            if (++v18 == (_QWORD *)v44)
              goto LABEL_6;
          }
          goto LABEL_45;
        }
      }
    }
  }
  v11 = a4 + 101;
  v12 = sub_20C026788(a4 + 101);
  v13 = pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)v46);
  v14 = a4 + 102;
  (*(void (**)(_BYTE **__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v12 + 136))(&v59, v12, v14, a1, v13);
  if (sub_20BFE508C((pxrInternal__aapl__pxrReserved__::VtValue *)&v59))
  {
    if ((v60 & 4) != 0)
      v15 = (_BYTE *)(*(uint64_t (**)(_BYTE **))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(&v59);
    else
      v15 = v59;
  }
  else
  {
    v15 = v46;
  }
  sub_20C0340F4((uint64_t)&v30, (uint64_t)v15);
  sub_20BF4C2D8((uint64_t)&v59);
  if (__p)
  {
    v58 = __p;
    operator delete(__p);
  }
  if (v55)
  {
    v56 = v55;
    operator delete(v55);
  }
  if (v53)
  {
    v54 = v53;
    operator delete(v53);
  }
  if (v51)
  {
    v52 = v51;
    operator delete(v51);
  }
  if (v49)
  {
    v50 = v49;
    operator delete(v49);
  }
  if (v47)
  {
    v48 = v47;
    operator delete(v47);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetItems((uint64_t)&v30, (uint64_t)&v43, a2);
  v19 = sub_20C026788(v11);
  sub_20C033F88((char *)&v30, (pxrInternal__aapl__pxrReserved__::VtValue *)v46);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, _BYTE *))(*(_QWORD *)v19 + 152))(v19, v14, a1, v46);
  sub_20BF4C2D8((uint64_t)v46);
  if (v41)
  {
    v42 = v41;
    operator delete(v41);
  }
  if (v39)
  {
    v40 = v39;
    operator delete(v39);
  }
  if (v37)
  {
    v38 = v37;
    operator delete(v37);
  }
  if (v35)
  {
    v36 = v35;
    operator delete(v35);
  }
  if (v33)
  {
    v34 = v33;
    operator delete(v33);
  }
  if (v31)
  {
    v32 = v31;
    operator delete(v31);
  }
  if (v43)
  {
    v44 = (char *)v43;
    operator delete(v43);
  }
}

void sub_20C033F00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,char a36)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_20C033F88@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C034274(a2, a1);
}

void sub_20C033FB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C033FC8(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C034024(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_20C034040(uint64_t a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  char *v8;
  uint64_t v9;

  v7 = 0;
  v8 = 0;
  v9 = 0;
  sub_20BDE1364(&v7, *(const void **)a1, *(_QWORD *)(a1 + 8), (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3);
  std::__sort<std::__less<unsigned long long,unsigned long long> &,unsigned long long *>();
  v1 = v8;
  v2 = v7;
  if (v7 == v8)
  {
LABEL_6:
    if (!v7)
      return v2 != v1;
LABEL_7:
    v8 = v7;
    operator delete(v7);
    return v2 != v1;
  }
  v3 = v7 + 8;
  while (v3 != v8)
  {
    v4 = *((_QWORD *)v3 - 1);
    v5 = *(_QWORD *)v3;
    v3 += 8;
    if (v4 == v5)
    {
      v2 = v3 - 16;
      goto LABEL_6;
    }
  }
  v2 = v8;
  if (v7)
    goto LABEL_7;
  return v2 != v1;
}

void sub_20C0340D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C0340F4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20BDE1364((_QWORD *)(a1 + 8), *(const void **)(a2 + 8), *(_QWORD *)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20BDE1364((_QWORD *)(a1 + 32), *(const void **)(a2 + 32), *(_QWORD *)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BDE1364((_QWORD *)(a1 + 56), *(const void **)(a2 + 56), *(_QWORD *)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 3);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20BDE1364((_QWORD *)(a1 + 80), *(const void **)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 3);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20BDE1364((_QWORD *)(a1 + 104), *(const void **)(a2 + 104), *(_QWORD *)(a2 + 112), (uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 3);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20BDE1364((_QWORD *)(a1 + 128), *(const void **)(a2 + 128), *(_QWORD *)(a2 + 136), (uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 3);
  return a1;
}

void sub_20C0341F8(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v8 = *v6;
  if (*v6)
  {
    v1[14] = v8;
    operator delete(v8);
  }
  v9 = *v5;
  if (*v5)
  {
    v1[11] = v9;
    operator delete(v9);
  }
  v10 = *v4;
  if (*v4)
  {
    v1[8] = v10;
    operator delete(v10);
  }
  v11 = *v3;
  if (*v3)
  {
    v1[5] = v11;
    operator delete(v11);
  }
  v12 = *v2;
  if (*v2)
  {
    v1[2] = v12;
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

char *sub_20C034274(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  _BYTE v6[8];
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *__p;
  void *v18;

  if ((sub_20BFE508C(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)v6);
    sub_20C03433C((uint64_t)a1, (uint64_t)v6);
    if (__p)
    {
      v18 = __p;
      operator delete(__p);
    }
    if (v15)
    {
      v16 = v15;
      operator delete(v15);
    }
    if (v13)
    {
      v14 = v13;
      operator delete(v13);
    }
    if (v11)
    {
      v12 = v11;
      operator delete(v11);
    }
    if (v9)
    {
      v10 = v9;
      operator delete(v9);
    }
    if (v7)
    {
      v8 = v7;
      operator delete(v7);
    }
  }
  v4 = (char *)sub_20C034634((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::Swap(v4, a2);
}

void sub_20C034328(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C031968((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C03433C(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526CC8;
  sub_20C0345C8((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C0343CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C034408(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_20C03442C(unsigned int **a1)
{
  unsigned int *v1;

  v1 = *a1;
  if (v1)
    sub_20C031F2C(v1);
}

_QWORD *sub_20C03443C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  *result = 0;
  return result;
}

uint64_t sub_20C03444C()
{
  return 1;
}

unint64_t sub_20C034454(unsigned __int8 **a1)
{
  return sub_20C031FD8(*a1);
}

BOOL sub_20C03445C(_QWORD **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::operator==(*a1, *a2);
}

BOOL sub_20C034468(_QWORD **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::operator==(*a1, a2);
}

uint64_t sub_20C034474()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C034480(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<unsigned long long>(a2, *a1);
}

void *sub_20C034490()
{
  return &unk_24C524D20;
}

uint64_t sub_20C03449C()
{
  return 0;
}

uint64_t sub_20C0344A4()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C0344B0()
{
  return 0;
}

uint64_t sub_20C0344B8()
{
  return 0;
}

BOOL sub_20C0344C0(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB12C4 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C0344F8(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D20, a2, a3);
}

void *sub_20C034518()
{
  return &unk_24C524D20;
}

uint64_t sub_20C034524(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C03452C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526CC8;
  return sub_20C0345C8((unsigned int **)a2, v2);
}

uint64_t sub_20C034544(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C0340F4((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v6 = (unsigned int *)*a1;
    *a1 = (uint64_t)v3;
    if (v6)
      sub_20C031F2C(v6);
  }
  return *a1;
}

void sub_20C0345B4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0345C8(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C0340F4((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C034620(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C034634(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C034544(a1);
}

uint64_t sub_20C0346C4(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  if ((__int128 *)a1 != a2)
  {
    v3 = a2[1];
    v9 = *a2;
    v10 = v3;
    v4 = *((_QWORD *)a2 + 4);
    v11 = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 - 16);
      if (*((_QWORD *)&v10 + 1))
        v5 = (unint64_t *)*((_QWORD *)&v10 + 1);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    if (&v9 != (__int128 *)a1)
    {
      sub_20C008280((_QWORD *)a1);
      v7 = v10;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v7;
      v9 = 0u;
      v10 = 0u;
      *(_QWORD *)(a1 + 32) = v11;
      v11 = 0;
    }
    sub_20C008280(&v9);
  }
  return a1;
}

void sub_20C034760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C008280(&a9);
  _Unwind_Resume(a1);
}

void sub_20C03477C(_QWORD *a1, int a2, unint64_t *a3, uint64_t *a4)
{
  __int128 *v6;
  unint64_t v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  __int128 *v12;
  __int128 *v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  int v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  const char *Text;
  const char *v26;
  char *v27;
  const char *v28;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  uint64_t *v30;
  uint64_t v31;
  double v32;
  uint64_t *v33;
  void ***v34;
  void ***v35;
  uint64_t v36;
  void *__p;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void ***v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v6 = (__int128 *)a3[4];
  v7 = *a3;
  v8 = (__int128 *)((char *)v6 + 24 * *a3);
  v47 = 0;
  v48 = 0;
  v46 = 0;
  sub_20C034BA4((char *)&v46, v6, v8, v7);
  v9 = v46;
  v10 = v47;
  v11 = 0xAAAAAAAAAAAAAAABLL * ((v47 - (uint64_t)v46) >> 3);
  if (v11 >= 2)
  {
    if (v11 > 0xA)
    {
      v22 = sub_20C02F5A4((uint64_t)v46, v47);
      if (v47 != v22 && sub_20C02F4B8(&v46))
      {
LABEL_27:
        v23 = *a1 & 0xFFFFFFFFFFFFFFF8;
        if (v23)
        {
          v24 = (const char *)(v23 + 16);
          if (*(char *)(v23 + 39) < 0)
            v24 = *(const char **)v24;
        }
        else
        {
          v24 = "";
        }
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v26, v27, v24, Text);
        if (v40 >= 0)
          p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
        else
          p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
        pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, p_p, v28);
        if (v40 < 0)
          operator delete(__p);
      }
    }
    else
    {
      v12 = (__int128 *)(v47 - 24);
      while (v9 != v12)
      {
        v13 = v9;
        v9 = (__int128 *)((char *)v9 + 24);
        if (v9 != (__int128 *)v10)
        {
          v14 = *((unsigned __int8 *)v13 + 23);
          v15 = *((_QWORD *)v13 + 1);
          if ((v14 & 0x80u) == 0)
            v16 = *((unsigned __int8 *)v13 + 23);
          else
            v16 = *((_QWORD *)v13 + 1);
          v17 = v9;
          do
          {
            v18 = *((unsigned __int8 *)v17 + 23);
            v19 = (char)v18;
            if ((v18 & 0x80u) != 0)
              v18 = *((_QWORD *)v17 + 1);
            if (v16 == v18)
            {
              if (v19 >= 0)
                v20 = v17;
              else
                v20 = *(__int128 **)v17;
              if ((v14 & 0x80) != 0)
              {
                if (!memcmp(*(const void **)v13, v20, v15))
                  goto LABEL_27;
              }
              else
              {
                if (!(_DWORD)v14)
                  goto LABEL_27;
                v21 = 0;
                while (*((unsigned __int8 *)v13 + v21) == *((unsigned __int8 *)v20 + v21))
                {
                  if (v14 == ++v21)
                    goto LABEL_27;
                }
              }
            }
            v17 = (__int128 *)((char *)v17 + 24);
          }
          while (v17 != (__int128 *)v10);
        }
      }
    }
  }
  v30 = a4 + 101;
  v31 = sub_20C026788(a4 + 101);
  v32 = pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v49);
  v33 = a4 + 102;
  (*(void (**)(void ****__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v31 + 136))(&v56, v31, v33, a1, v32);
  if (sub_20BFE5104((pxrInternal__aapl__pxrReserved__::VtValue *)&v56))
  {
    if ((v57 & 4) != 0)
      v34 = (void ***)(*(uint64_t (**)(void ****))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(&v56);
    else
      v34 = v56;
  }
  else
  {
    v34 = &v49;
  }
  sub_20C02F650((uint64_t)&__p, (uint64_t)v34);
  v35 = (void ***)sub_20BF4C2D8((uint64_t)&v56);
  v56 = (void ***)&v55;
  sub_20BDE5038(v35);
  v56 = (void ***)&v54;
  sub_20BDE5038((void ***)&v56);
  v56 = (void ***)&v53;
  sub_20BDE5038((void ***)&v56);
  v56 = (void ***)&v52;
  sub_20BDE5038((void ***)&v56);
  v56 = (void ***)&v51;
  sub_20BDE5038((void ***)&v56);
  v56 = (void ***)&v50;
  sub_20BDE5038((void ***)&v56);
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetItems((uint64_t *)&__p, (uint64_t)&v46, a2);
  v36 = sub_20C026788(v30);
  sub_20C02F478((char *)&__p, (pxrInternal__aapl__pxrReserved__::VtValue *)&v49);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, void ***))(*(_QWORD *)v36 + 152))(v36, v33, a1, &v49);
  sub_20BF4C2D8((uint64_t)&v49);
  v49 = (void **)&v45;
  sub_20BDE5038(&v49);
  v49 = (void **)&v44;
  sub_20BDE5038(&v49);
  v49 = (void **)&v43;
  sub_20BDE5038(&v49);
  v49 = (void **)&v42;
  sub_20BDE5038(&v49);
  v49 = (void **)&v41;
  sub_20BDE5038(&v49);
  v49 = (void **)&v39;
  sub_20BDE5038(&v49);
  __p = &v46;
  sub_20BDE5038((void ***)&__p);
}

void sub_20C034B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a17 < 0)
    operator delete(__p);
  __p = &a34;
  sub_20BDE5038((void ***)&__p);
  _Unwind_Resume(a1);
}

char *sub_20C034BA4(char *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  char *v6;

  if (a4)
  {
    v6 = result;
    sub_20BDE4FA4(result, a4);
    result = sub_20BFB76A8((uint64_t)(v6 + 16), a2, a3, *((char **)v6 + 1));
    *((_QWORD *)v6 + 1) = result;
  }
  return result;
}

void sub_20C034C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20BDE5038(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C034C28(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  if ((__int128 *)a1 != a2)
  {
    v3 = a2[1];
    v9 = *a2;
    v10 = v3;
    v4 = *((_QWORD *)a2 + 4);
    v11 = v4;
    if (v4)
    {
      v5 = (unint64_t *)(v4 - 16);
      if (*((_QWORD *)&v10 + 1))
        v5 = (unint64_t *)*((_QWORD *)&v10 + 1);
      do
        v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
    }
    if (&v9 != (__int128 *)a1)
    {
      sub_20C00918C((_QWORD *)a1);
      v7 = v10;
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v7;
      v9 = 0u;
      v10 = 0u;
      *(_QWORD *)(a1 + 32) = v11;
      v11 = 0;
    }
    sub_20C00918C(&v9);
  }
  return a1;
}

void sub_20C034CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C00918C(&a9);
  _Unwind_Resume(a1);
}

void sub_20C034CE0(_QWORD *a1, int a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  char *v10;
  char *v11;
  unint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  const char *v16;
  const char *Text;
  const char *v18;
  char *v19;
  const char *v20;
  pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *p_p;
  uint64_t *v22;
  uint64_t v23;
  double v24;
  uint64_t *v25;
  void ***v26;
  void ***v27;
  uint64_t v28;
  void *__p;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void ***v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v7 = (uint64_t *)a3[4];
  v8 = *a3;
  v9 = &v7[*a3];
  v38 = 0;
  v39 = 0;
  v37 = 0;
  sub_20C035144(&v37, v7, v9, v8);
  v10 = v37;
  if ((unint64_t)(v38 - v37) >= 0x10)
  {
    if ((unint64_t)(v38 - v37) > 0x57)
    {
      v14 = (char *)sub_20C035294(v37, v38);
      if (v38 != v14 && sub_20C0351B8((uint64_t **)&v37))
      {
LABEL_11:
        v15 = *a1 & 0xFFFFFFFFFFFFFFF8;
        if (v15)
        {
          v16 = (const char *)(v15 + 16);
          if (*(char *)(v15 + 39) < 0)
            v16 = *(const char **)v16;
        }
        else
        {
          v16 = "";
        }
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a4 + 102));
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Duplicate items exist for field '%s' at '%s'", v18, v19, v16, Text);
        if (v31 >= 0)
          p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)&__p;
        else
          p_p = (pxrInternal__aapl__pxrReserved__::Sdf_TextParserContext *)__p;
        pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser::_RaiseError((pxrInternal__aapl__pxrReserved__::Sdf_TextFileFormatParser *)a4, p_p, v20);
        if (v31 < 0)
          operator delete(__p);
      }
    }
    else
    {
LABEL_3:
      while (v10 != v38 - 8)
      {
        v11 = v10;
        v10 += 8;
        if (v10 != v38)
        {
          v12 = *(_QWORD *)v11 & 0xFFFFFFFFFFFFFFF8;
          v13 = v10;
          while (v12 != (*(_QWORD *)v13 & 0xFFFFFFFFFFFFFFF8))
          {
            v13 += 8;
            if (v13 == v38)
              goto LABEL_3;
          }
          goto LABEL_11;
        }
      }
    }
  }
  v22 = a4 + 101;
  v23 = sub_20C026788(a4 + 101);
  v24 = pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v40);
  v25 = a4 + 102;
  (*(void (**)(void ****__return_ptr, uint64_t, uint64_t *, _QWORD *, double))(*(_QWORD *)v23 + 136))(&v47, v23, v25, a1, v24);
  if (sub_20BFE517C((pxrInternal__aapl__pxrReserved__::VtValue *)&v47))
  {
    if ((v48 & 4) != 0)
      v26 = (void ***)(*(uint64_t (**)(void ****))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(&v47);
    else
      v26 = v47;
  }
  else
  {
    v26 = &v40;
  }
  sub_20C0366AC((uint64_t)&__p, (uint64_t)v26);
  v27 = (void ***)sub_20BF4C2D8((uint64_t)&v47);
  v47 = (void ***)&v46;
  sub_20BEEB2B8(v27);
  v47 = (void ***)&v45;
  sub_20BEEB2B8((void ***)&v47);
  v47 = (void ***)&v44;
  sub_20BEEB2B8((void ***)&v47);
  v47 = (void ***)&v43;
  sub_20BEEB2B8((void ***)&v47);
  v47 = (void ***)&v42;
  sub_20BEEB2B8((void ***)&v47);
  v47 = (void ***)&v41;
  sub_20BEEB2B8((void ***)&v47);
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetItems((unsigned __int8 *)&__p, (uint64_t **)&v37, a2);
  v28 = sub_20C026788(v22);
  sub_20C035104((char *)&__p, (pxrInternal__aapl__pxrReserved__::VtValue *)&v40);
  (*(void (**)(uint64_t, uint64_t *, _QWORD *, void ***))(*(_QWORD *)v28 + 152))(v28, v25, a1, &v40);
  sub_20BF4C2D8((uint64_t)&v40);
  v40 = (void **)&v36;
  sub_20BEEB2B8(&v40);
  v40 = (void **)&v35;
  sub_20BEEB2B8(&v40);
  v40 = (void **)&v34;
  sub_20BEEB2B8(&v40);
  v40 = (void **)&v33;
  sub_20BEEB2B8(&v40);
  v40 = (void **)&v32;
  sub_20BEEB2B8(&v40);
  v40 = (void **)&v30;
  sub_20BEEB2B8(&v40);
  __p = &v37;
  sub_20BEEB2B8((void ***)&__p);
}

void sub_20C034FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a16 < 0)
    operator delete(__p);
  __p = &a33;
  sub_20BEEB2B8((void ***)&__p);
  _Unwind_Resume(a1);
}

void **sub_20C03507C(void **a1)
{
  void **v3;

  v3 = a1 + 16;
  sub_20BEEB2B8(&v3);
  v3 = a1 + 13;
  sub_20BEEB2B8(&v3);
  v3 = a1 + 10;
  sub_20BEEB2B8(&v3);
  v3 = a1 + 7;
  sub_20BEEB2B8(&v3);
  v3 = a1 + 4;
  sub_20BEEB2B8(&v3);
  v3 = a1 + 1;
  sub_20BEEB2B8(&v3);
  return a1;
}

char *sub_20C035104@<X0>(char *a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue *a2@<X8>)
{
  *((_QWORD *)a2 + 1) = 0;
  return sub_20C036820(a2, a1);
}

void sub_20C035130(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C035144(_QWORD *result, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6;

  if (a4)
  {
    v6 = (uint64_t)result;
    sub_20BDDF654(result, a4);
    return (_QWORD *)sub_20BFE5400(v6, a2, a3);
  }
  return result;
}

void sub_20C0351A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20BEEB2B8(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_20C0351B8(uint64_t **a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  _BOOL8 v7;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  void **v13;

  v9 = 0;
  v10 = 0;
  v11 = 0;
  sub_20BFE538C(&v9, *a1, a1[1], a1[1] - *a1);
  v1 = 126 - 2 * __clz(v10 - v9);
  if (v10 == v9)
    v2 = 0;
  else
    v2 = v1;
  sub_20C0353A4((uint64_t)v9, v10, (uint64_t)&v12, v2, 1);
  v3 = v9;
  if (v9 != v10)
  {
    v4 = v9 + 1;
    while (v4 != v10)
    {
      v5 = *(v4 - 1) & 0xFFFFFFFFFFFFFFF8;
      v6 = *v4++ & 0xFFFFFFFFFFFFFFF8;
      if (v5 == v6)
      {
        v3 = v4 - 2;
        goto LABEL_10;
      }
    }
    v3 = v10;
  }
LABEL_10:
  v7 = v3 != v10;
  v13 = (void **)&v9;
  sub_20BEEB2B8(&v13);
  return v7;
}

void sub_20C035278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 - 24) = &a10;
  sub_20BEEB2B8((void ***)(v10 - 24));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C035294(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  const void *v14;
  int v15;
  unint64_t v16;
  const void *v17;
  const void *v18;
  int v19;
  size_t v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  int v25;
  _BOOL4 v26;

  v2 = a1;
  if (a1 != a2)
  {
    v4 = a1 + 1;
    if (a1 + 1 == a2)
      return a2;
    v5 = *a1;
    v6 = a1;
    while (1)
    {
      v2 = v6;
      v6 = v4;
      v7 = v5;
      v5 = *v6;
      if (v7 && v5)
      {
        if (v7 == v5)
          return v2;
        v8 = v7 & 0xFFFFFFFFFFFFFFF8;
        v9 = v5 & 0xFFFFFFFFFFFFFFF8;
        v10 = *(_QWORD *)(v8 + 8);
        v11 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v10 >= v11)
        {
          if (v10 != v11)
            return v6 - 1;
          v14 = *(const void **)(v9 + 16);
          v12 = v9 + 16;
          v13 = v14;
          v15 = *(char *)(v12 + 23);
          v18 = *(const void **)(v8 + 16);
          v16 = v8 + 16;
          v17 = v18;
          v19 = *(char *)(v16 + 23);
          if (v19 >= 0)
            v20 = *(unsigned __int8 *)(v16 + 23);
          else
            v20 = *(_QWORD *)(v16 + 8);
          if (v19 >= 0)
            v21 = (const void *)v16;
          else
            v21 = v17;
          if (v15 >= 0)
            v22 = *(unsigned __int8 *)(v12 + 23);
          else
            v22 = *(_QWORD *)(v12 + 8);
          if (v15 >= 0)
            v23 = (const void *)v12;
          else
            v23 = v13;
          if (v22 >= v20)
            v24 = v20;
          else
            v24 = v22;
          v25 = memcmp(v21, v23, v24);
          v26 = v20 < v22;
          if (v25)
            v26 = v25 < 0;
          if (!v26)
            return v2;
        }
      }
      else if (v7 || !v5)
      {
        return v2;
      }
      v4 = v6 + 1;
      if (v6 + 1 == a2)
        return a2;
    }
  }
  return v2;
}

uint64_t sub_20C0353A4(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  char v19;
  BOOL v20;
  uint64_t v21;

  v8 = (uint64_t *)result;
LABEL_2:
  v9 = a2 - 1;
  v10 = v8;
LABEL_3:
  v11 = 1 - a4;
  while (2)
  {
    v8 = v10;
    v12 = v11;
    v13 = (char *)a2 - (char *)v10;
    v14 = a2 - v10;
    switch(v14)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        result = sub_20BF1E6D8(a3, a2 - 1, v10);
        if ((_DWORD)result)
        {
          v21 = *v10;
          *v10 = *v9;
          *v9 = v21;
        }
        return result;
      case 3uLL:
        return sub_20C03596C(v10, v10 + 1, a2 - 1, a3);
      case 4uLL:
        return sub_20C035FCC(v10, v10 + 1, v10 + 2, a2 - 1, a3);
      case 5uLL:
        return sub_20C03607C(v10, v10 + 1, v10 + 2, v10 + 3, a2 - 1, a3);
      default:
        if (v13 <= 191)
        {
          if ((a5 & 1) != 0)
            return sub_20C0356E8((uint64_t)v10, a2, a3);
          else
            return sub_20C035838((uint64_t)v10, a2, a3);
        }
        if (v12 != 1)
        {
          v15 = v14 >> 1;
          v16 = &v10[v14 >> 1];
          if ((unint64_t)v13 < 0x401)
          {
            sub_20C03596C(&v10[v14 >> 1], v10, a2 - 1, a3);
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          else
          {
            sub_20C03596C(v10, &v10[v14 >> 1], a2 - 1, a3);
            sub_20C03596C(v10 + 1, v16 - 1, a2 - 2, a3);
            sub_20C03596C(v10 + 2, &v10[v15 + 1], a2 - 3, a3);
            sub_20C03596C(v16 - 1, v16, &v10[v15 + 1], a3);
            v17 = *v10;
            *v10 = *v16;
            *v16 = v17;
            if ((a5 & 1) != 0)
              goto LABEL_12;
          }
          if ((sub_20BF1E6D8(a3, v10 - 1, v10) & 1) == 0)
          {
            result = (uint64_t)sub_20C035A58(v10, a2, a3);
            v10 = (uint64_t *)result;
            goto LABEL_17;
          }
LABEL_12:
          v18 = sub_20C035BF4(v10, a2, a3);
          if ((v19 & 1) == 0)
            goto LABEL_15;
          v20 = sub_20C035D98(v10, v18, a3);
          v10 = v18 + 1;
          result = sub_20C035D98(v18 + 1, a2, a3);
          if (!(_DWORD)result)
          {
            v11 = v12 + 1;
            if (v20)
              continue;
LABEL_15:
            result = sub_20C0353A4(v8, v18, a3, -v12, a5 & 1);
            v10 = v18 + 1;
LABEL_17:
            a5 = 0;
            a4 = -v12;
            goto LABEL_3;
          }
          a4 = -v12;
          a2 = v18;
          if (v20)
            return result;
          goto LABEL_2;
        }
        if (v10 != a2)
          return (uint64_t)sub_20C036154(v10, a2, a2, a3);
        return result;
    }
  }
}

uint64_t sub_20C0356E8(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20[11];

  if ((uint64_t *)result != a2)
  {
    v20[9] = v3;
    v20[10] = v4;
    v6 = (uint64_t *)result;
    v7 = (uint64_t *)(result + 8);
    if ((uint64_t *)(result + 8) != a2)
    {
      v9 = (uint64_t *)result;
      do
      {
        v10 = v7;
        result = sub_20BF1E6D8(a3, v7, v9);
        if ((_DWORD)result)
        {
          v20[0] = *v10;
          *v10 = 0;
          v11 = v10;
          while (1)
          {
            v12 = v9;
            if ((*v11 & 7) != 0)
            {
              v13 = (unsigned int *)(*v11 & 0xFFFFFFFFFFFFFFF8);
              do
                v14 = __ldxr(v13);
              while (__stlxr(v14 - 2, v13));
            }
            *v11 = *v9;
            *v9 = 0;
            if (v9 == v6)
              break;
            --v9;
            result = sub_20BF1E6D8(a3, v20, v12 - 1);
            v11 = v12;
            if ((result & 1) == 0)
              goto LABEL_13;
          }
          v12 = v6;
LABEL_13:
          if (v20 == v12)
          {
            v17 = v20[0];
          }
          else
          {
            if ((*v12 & 7) != 0)
            {
              v15 = (unsigned int *)(*v12 & 0xFFFFFFFFFFFFFFF8);
              do
                v16 = __ldxr(v15);
              while (__stlxr(v16 - 2, v15));
            }
            v17 = 0;
            *v12 = v20[0];
            v20[0] = 0;
          }
          if ((v17 & 7) != 0)
          {
            v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
            do
              v19 = __ldxr(v18);
            while (__stlxr(v19 - 2, v18));
          }
        }
        v7 = v10 + 1;
        v9 = v10;
      }
      while (v10 + 1 != a2);
    }
  }
  return result;
}

uint64_t sub_20C035838(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19[9];

  if ((uint64_t *)result != a2)
  {
    v19[7] = v3;
    v19[8] = v4;
    v6 = (uint64_t *)result;
    v7 = (uint64_t *)(result + 8);
    if ((uint64_t *)(result + 8) != a2)
    {
      do
      {
        v9 = v7;
        result = sub_20BF1E6D8(a3, v7, v6);
        if ((_DWORD)result)
        {
          v19[0] = *v9;
          *v9 = 0;
          v10 = v9;
          do
          {
            v11 = v6;
            if ((*v10 & 7) != 0)
            {
              v12 = (unsigned int *)(*v10 & 0xFFFFFFFFFFFFFFF8);
              do
                v13 = __ldxr(v12);
              while (__stlxr(v13 - 2, v12));
            }
            *v10 = *v6;
            *v6-- = 0;
            result = sub_20BF1E6D8(a3, v19, v11 - 1);
            v10 = v11;
          }
          while ((result & 1) != 0);
          if (v19 == v11)
          {
            v16 = v19[0];
          }
          else
          {
            if ((*v11 & 7) != 0)
            {
              v14 = (unsigned int *)(*v11 & 0xFFFFFFFFFFFFFFF8);
              do
                v15 = __ldxr(v14);
              while (__stlxr(v15 - 2, v14));
            }
            v16 = 0;
            *v11 = v19[0];
            v19[0] = 0;
          }
          if ((v16 & 7) != 0)
          {
            v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
            do
              v18 = __ldxr(v17);
            while (__stlxr(v18 - 2, v17));
          }
        }
        v7 = v9 + 1;
        v6 = v9;
      }
      while (v9 + 1 != a2);
    }
  }
  return result;
}

uint64_t sub_20C03596C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_20BF1E6D8(a4, a2, a1);
  result = sub_20BF1E6D8(a4, a3, a2);
  if ((v8 & 1) == 0)
  {
    if (!(_DWORD)result)
      return result;
    v11 = *a2;
    *a2 = *a3;
    *a3 = v11;
    if (!sub_20BF1E6D8(a4, a2, a1))
      return 1;
    v12 = *a1;
    *a1 = *a2;
    *a2 = v12;
    return 2;
  }
  v10 = *a1;
  if (!(_DWORD)result)
  {
    *a1 = *a2;
    *a2 = v10;
    if (!sub_20BF1E6D8(a4, a3, a2))
      return 1;
    v13 = *a2;
    *a2 = *a3;
    *a3 = v13;
    return 2;
  }
  *a1 = *a3;
  *a3 = v10;
  return 1;
}

uint64_t *sub_20C035A58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v18;

  v4 = a2;
  v18 = *a1;
  *a1 = 0;
  if ((sub_20BF1E6D8(a3, &v18, a2 - 1) & 1) != 0)
  {
    v6 = a1;
    do
      ++v6;
    while ((sub_20BF1E6D8(a3, &v18, v6) & 1) == 0);
  }
  else
  {
    v7 = a1 + 1;
    do
    {
      v6 = v7;
      if (v7 >= v4)
        break;
      v8 = sub_20BF1E6D8(a3, &v18, v7);
      v7 = v6 + 1;
    }
    while (!v8);
  }
  if (v6 < v4)
  {
    do
      --v4;
    while ((sub_20BF1E6D8(a3, &v18, v4) & 1) != 0);
  }
  while (v6 < v4)
  {
    v9 = *v6;
    *v6 = *v4;
    *v4 = v9;
    do
      ++v6;
    while (!sub_20BF1E6D8(a3, &v18, v6));
    do
      --v4;
    while ((sub_20BF1E6D8(a3, &v18, v4) & 1) != 0);
  }
  v10 = v6 - 1;
  if (v6 - 1 != a1)
  {
    if ((*a1 & 7) != 0)
    {
      v11 = (unsigned int *)(*a1 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    *a1 = *v10;
    *v10 = 0;
  }
  if (&v18 == v10)
  {
    if ((v18 & 7) != 0)
    {
      v15 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stlxr(v16 - 2, v15));
    }
  }
  else
  {
    if ((*v10 & 7) != 0)
    {
      v13 = (unsigned int *)(*v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
    *v10 = v18;
  }
  return v6;
}

uint64_t *sub_20C035BF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v19;

  v6 = 0;
  v19 = *a1;
  *a1 = 0;
  do
    ++v6;
  while ((sub_20BF1E6D8(a3, &a1[v6], &v19) & 1) != 0);
  v7 = &a1[v6];
  v8 = &a1[v6 - 1];
  if (v6 == 1)
  {
    do
    {
      if (v7 >= a2)
        break;
      --a2;
    }
    while ((sub_20BF1E6D8(a3, a2, &v19) & 1) == 0);
  }
  else
  {
    do
      --a2;
    while (!sub_20BF1E6D8(a3, a2, &v19));
  }
  if (v7 < a2)
  {
    v9 = &a1[v6];
    v10 = a2;
    do
    {
      v11 = *v9;
      *v9 = *v10;
      *v10 = v11;
      do
        ++v9;
      while ((sub_20BF1E6D8(a3, v9, &v19) & 1) != 0);
      do
        --v10;
      while (!sub_20BF1E6D8(a3, v10, &v19));
    }
    while (v9 < v10);
    v8 = v9 - 1;
  }
  if (v8 != a1)
  {
    if ((*a1 & 7) != 0)
    {
      v12 = (unsigned int *)(*a1 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
    *a1 = *v8;
    *v8 = 0;
  }
  if (&v19 == v8)
  {
    if ((v19 & 7) != 0)
    {
      v16 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
  }
  else
  {
    if ((*v8 & 7) != 0)
    {
      v14 = (unsigned int *)(*v8 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    *v8 = v19;
  }
  return v8;
}

BOOL sub_20C035D98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  _BOOL8 result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  uint64_t *v14;
  unsigned int *v15;
  unsigned int v16;
  char v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v8 = a2 - 1;
      if (sub_20BF1E6D8(a3, a2 - 1, a1))
      {
        v9 = *a1;
        *a1 = *v8;
        *v8 = v9;
      }
      return 1;
    case 3:
      sub_20C03596C(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      sub_20C035FCC(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      sub_20C03607C(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      v10 = a1 + 2;
      sub_20C03596C(a1, a1 + 1, a1 + 2, a3);
      v11 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v12 = 0;
      break;
  }
  while (1)
  {
    if (sub_20BF1E6D8(a3, v11, v10))
    {
      v23 = *v11;
      *v11 = 0;
      v13 = v11;
      while (1)
      {
        v14 = v10;
        if (v10 != v13)
        {
          if ((*v13 & 7) != 0)
          {
            v15 = (unsigned int *)(*v13 & 0xFFFFFFFFFFFFFFF8);
            do
              v16 = __ldxr(v15);
            while (__stlxr(v16 - 2, v15));
          }
          *v13 = *v10;
          *v10 = 0;
        }
        if (v10 == a1)
          break;
        --v10;
        v17 = sub_20BF1E6D8(a3, &v23, v14 - 1);
        v13 = v14;
        if ((v17 & 1) == 0)
          goto LABEL_17;
      }
      v14 = a1;
LABEL_17:
      if (&v23 == v14)
      {
        v20 = v23;
      }
      else
      {
        if ((*v14 & 7) != 0)
        {
          v18 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
          do
            v19 = __ldxr(v18);
          while (__stlxr(v19 - 2, v18));
        }
        v20 = 0;
        *v14 = v23;
        v23 = 0;
      }
      if ((v20 & 7) != 0)
      {
        v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v22 = __ldxr(v21);
        while (__stlxr(v22 - 2, v21));
      }
      if (++v12 == 8)
        return v11 + 1 == a2;
    }
    v10 = v11++;
    if (v11 == a2)
      return 1;
  }
}

uint64_t sub_20C035FCC(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_20C03596C(a1, a2, a3, a5);
  result = sub_20BF1E6D8(a5, a4, a3);
  if ((_DWORD)result)
  {
    v11 = *a3;
    *a3 = *a4;
    *a4 = v11;
    result = sub_20BF1E6D8(a5, a3, a2);
    if ((_DWORD)result)
    {
      v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      result = sub_20BF1E6D8(a5, a2, a1);
      if ((_DWORD)result)
      {
        v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

uint64_t sub_20C03607C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_20C035FCC(a1, a2, a3, a4, a6);
  result = sub_20BF1E6D8(a6, a5, a4);
  if ((_DWORD)result)
  {
    v13 = *a4;
    *a4 = *a5;
    *a5 = v13;
    result = sub_20BF1E6D8(a6, a4, a3);
    if ((_DWORD)result)
    {
      v14 = *a3;
      *a3 = *a4;
      *a4 = v14;
      result = sub_20BF1E6D8(a6, a3, a2);
      if ((_DWORD)result)
      {
        v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
        result = sub_20BF1E6D8(a6, a2, a1);
        if ((_DWORD)result)
        {
          v16 = *a1;
          *a1 = *a2;
          *a2 = v16;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_20C036154(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;

  if (a1 != a2)
  {
    v6 = a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[v10];
      do
      {
        sub_20C036300((uint64_t)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if (v6 != a3)
    {
      v14 = v6;
      do
      {
        if (sub_20BF1E6D8(a4, v14, a1))
        {
          v15 = *v14;
          *v14 = *a1;
          *a1 = v15;
          sub_20C036300((uint64_t)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      v13 = a3;
    }
    if (v8 >= 9)
    {
      v16 = (unint64_t)v8 >> 3;
      do
      {
        v17 = *a1;
        *a1 = 0;
        v18 = sub_20C0364B0(a1, a4, v16);
        --v6;
        v19 = *v18;
        v20 = *v18 & 7;
        if (v18 == v6)
        {
          if (v20)
          {
            v23 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stlxr(v24 - 2, v23));
          }
          *v18 = v17;
        }
        else
        {
          if (v20)
          {
            v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
            do
              v22 = __ldxr(v21);
            while (__stlxr(v22 - 2, v21));
          }
          *v18 = *v6;
          *v6 = v17;
          sub_20C036588((uint64_t)a1, (uint64_t)(v18 + 1), a4, v18 + 1 - a1);
        }
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_20C036300(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t v25[13];

  v6 = a3 - 2;
  if (a3 >= 2)
  {
    v25[11] = v4;
    v25[12] = v5;
    v7 = a4;
    v8 = result;
    v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      v12 = ((uint64_t)a4 - result) >> 2;
      v13 = v12 + 1;
      v14 = (uint64_t *)(result + 8 * (v12 + 1));
      v15 = v12 + 2;
      if (v12 + 2 < a3 && sub_20BF1E6D8(a2, (uint64_t *)(result + 8 * (v12 + 1)), v14 + 1))
      {
        ++v14;
        v13 = v15;
      }
      result = sub_20BF1E6D8(a2, v14, v7);
      if ((result & 1) == 0)
      {
        v25[0] = *v7;
        *v7 = 0;
        do
        {
          v16 = v14;
          if (v14 != v7)
          {
            if ((*v7 & 7) != 0)
            {
              v17 = (unsigned int *)(*v7 & 0xFFFFFFFFFFFFFFF8);
              do
                v18 = __ldxr(v17);
              while (__stlxr(v18 - 2, v17));
            }
            *v7 = *v14;
            *v14 = 0;
          }
          if (v9 < v13)
            break;
          v19 = (2 * v13) | 1;
          v14 = (uint64_t *)(v8 + 8 * v19);
          v20 = 2 * v13 + 2;
          if (v20 < a3 && sub_20BF1E6D8(a2, (uint64_t *)(v8 + 8 * v19), v14 + 1))
          {
            ++v14;
            v19 = v20;
          }
          result = sub_20BF1E6D8(a2, v14, v25);
          v7 = v16;
          v13 = v19;
        }
        while (!(_DWORD)result);
        if (v25 == v16)
        {
          if ((v25[0] & 7) != 0)
          {
            v23 = (unsigned int *)(v25[0] & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stlxr(v24 - 2, v23));
          }
        }
        else
        {
          if ((*v16 & 7) != 0)
          {
            v21 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
            do
              v22 = __ldxr(v21);
            while (__stlxr(v22 - 2, v21));
          }
          *v16 = v25[0];
        }
      }
    }
  }
  return result;
}

uint64_t *sub_20C0364B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;

  v6 = 0;
  v7 = a3 - 2;
  if (a3 < 2)
    v7 = a3 - 1;
  v8 = v7 >> 1;
  do
  {
    v9 = &a1[v6 + 1];
    v10 = 2 * v6;
    v6 = (2 * v6) | 1;
    v11 = v10 + 2;
    if (v10 + 2 < a3 && sub_20BF1E6D8(a2, v9, v9 + 1))
    {
      ++v9;
      v6 = v11;
    }
    if (v9 != a1)
    {
      if ((*a1 & 7) != 0)
      {
        v12 = (unsigned int *)(*a1 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stlxr(v13 - 2, v12));
      }
      *a1 = *v9;
      *v9 = 0;
    }
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

uint64_t sub_20C036588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19[9];

  v6 = a4 - 2;
  if (a4 >= 2)
  {
    v19[7] = v4;
    v19[8] = v5;
    v8 = result;
    v9 = v6 >> 1;
    v10 = (uint64_t *)(result + 8 * (v6 >> 1));
    v11 = (uint64_t *)(a2 - 8);
    result = sub_20BF1E6D8(a3, v10, (uint64_t *)(a2 - 8));
    if ((_DWORD)result)
    {
      v19[0] = *v11;
      *v11 = 0;
      do
      {
        v12 = v10;
        if (v10 != v11)
        {
          if ((*v11 & 7) != 0)
          {
            v13 = (unsigned int *)(*v11 & 0xFFFFFFFFFFFFFFF8);
            do
              v14 = __ldxr(v13);
            while (__stlxr(v14 - 2, v13));
          }
          *v11 = *v10;
          *v10 = 0;
        }
        if (!v9)
          break;
        v9 = (v9 - 1) >> 1;
        v10 = (uint64_t *)(v8 + 8 * v9);
        result = sub_20BF1E6D8(a3, v10, v19);
        v11 = v12;
      }
      while ((result & 1) != 0);
      if (v19 == v12)
      {
        if ((v19[0] & 7) != 0)
        {
          v17 = (unsigned int *)(v19[0] & 0xFFFFFFFFFFFFFFF8);
          do
            v18 = __ldxr(v17);
          while (__stlxr(v18 - 2, v17));
        }
      }
      else
      {
        if ((*v12 & 7) != 0)
        {
          v15 = (unsigned int *)(*v12 & 0xFFFFFFFFFFFFFFF8);
          do
            v16 = __ldxr(v15);
          while (__stlxr(v16 - 2, v15));
        }
        *v12 = v19[0];
      }
    }
  }
  return result;
}

uint64_t sub_20C0366AC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20BFE538C((_QWORD *)(a1 + 8), *(uint64_t **)(a2 + 8), *(uint64_t **)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 3);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20BFE538C((_QWORD *)(a1 + 32), *(uint64_t **)(a2 + 32), *(uint64_t **)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BFE538C((_QWORD *)(a1 + 56), *(uint64_t **)(a2 + 56), *(uint64_t **)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 3);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20BFE538C((_QWORD *)(a1 + 80), *(uint64_t **)(a2 + 80), *(uint64_t **)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 3);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20BFE538C((_QWORD *)(a1 + 104), *(uint64_t **)(a2 + 104), *(uint64_t **)(a2 + 112), (uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 3);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20BFE538C((_QWORD *)(a1 + 128), *(uint64_t **)(a2 + 128), *(uint64_t **)(a2 + 136), (uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 3);
  return a1;
}

void sub_20C0367B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  sub_20BEEB2B8((void ***)va);
  sub_20BEEB2B8((void ***)va);
  sub_20BEEB2B8((void ***)va);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

char *sub_20C036820(pxrInternal__aapl__pxrReserved__::VtValue *a1, char *a2)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;

  if ((sub_20BFE517C(a1) & 1) == 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v6);
    sub_20C0368F4((uint64_t)a1, (uint64_t)&v6);
    v13 = (void **)&v12;
    sub_20BEEB2B8(&v13);
    v13 = (void **)&v11;
    sub_20BEEB2B8(&v13);
    v13 = (void **)&v10;
    sub_20BEEB2B8(&v13);
    v13 = (void **)&v9;
    sub_20BEEB2B8(&v13);
    v13 = (void **)&v8;
    sub_20BEEB2B8(&v13);
    v13 = (void **)&v7;
    sub_20BEEB2B8(&v13);
  }
  v4 = (char *)sub_20C036F6C((uint64_t *)a1);
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::Swap(v4, a2);
}

void sub_20C0368E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C03507C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0368F4(uint64_t a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, a1);
  *(_QWORD *)(a1 + 8) = &off_24C526D80;
  sub_20C036F00((unsigned int **)a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C036984(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C0369C0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 152);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void ***sub_20C0369E8(void ***a1, void ***a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C036AF0(a1);
}

uint64_t sub_20C0369F8()
{
  return 1;
}

unint64_t sub_20C036A00(unsigned __int8 **a1)
{
  return sub_20C036BA4(*a1);
}

BOOL sub_20C036A08(_QWORD **a1, _QWORD **a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::operator==(*a1, *a2);
}

BOOL sub_20C036A14(_QWORD **a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::operator==(*a1, a2);
}

uint64_t sub_20C036A20()
{
  return 0;
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C036A2C(uint64_t *a1, pxrInternal__aapl__pxrReserved__::TfType *a2)
{
  return pxrInternal__aapl__pxrReserved__::operator<<<pxrInternal__aapl__pxrReserved__::TfToken>(a2, *a1);
}

void *sub_20C036A3C()
{
  return &unk_24C524D40;
}

uint64_t sub_20C036A48()
{
  return 0;
}

uint64_t sub_20C036A50()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C036A5C()
{
  return 0;
}

uint64_t sub_20C036A64()
{
  return 0;
}

BOOL sub_20C036A6C(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAC1760 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C036AA4(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D40, a2, a3);
}

void *sub_20C036AC4()
{
  return &unk_24C524D40;
}

uint64_t sub_20C036AD0(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C036AD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_QWORD *)(a2 + 8) = &off_24C526D80;
  return sub_20C036F00((unsigned int **)a2, v2);
}

void ***sub_20C036AF0(void ***a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  void **v7;

  v2 = *a1;
  if (*a1)
  {
    v3 = (unsigned int *)(v2 + 19);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      v7 = v2 + 16;
      sub_20BEEB2B8(&v7);
      v7 = v2 + 13;
      sub_20BEEB2B8(&v7);
      v7 = v2 + 10;
      sub_20BEEB2B8(&v7);
      v7 = v2 + 7;
      sub_20BEEB2B8(&v7);
      v7 = v2 + 4;
      sub_20BEEB2B8(&v7);
      v7 = v2 + 1;
      sub_20BEEB2B8(&v7);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C036BA4(unsigned __int8 *a1)
{
  uint64_t v2;
  char v3;

  v2 = 0;
  v3 = 0;
  sub_20C036C0C((uint64_t)&v2, a1, (uint64_t)(a1 + 8), (uint64_t)(a1 + 32), (uint64_t)(a1 + 56), (uint64_t)(a1 + 80), (uint64_t)(a1 + 104), (uint64_t)(a1 + 128));
  return bswap64(0x9E3779B97F4A7C55 * bswap64(0x9E3779B97F4A7C55 * v2));
}

uint64_t sub_20C036C0C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  v8 = *a2;
  if (*(_BYTE *)(a1 + 8))
    v8 += (unint64_t)(*(_QWORD *)a1 + v8 + (*(_QWORD *)a1 + v8) * (*(_QWORD *)a1 + v8)) >> 1;
  else
    *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)a1 = v8;
  return sub_20C036C54(a1, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_20C036C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v7 = *(uint64_t **)a2;
  v8 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v8)
  {
    v9 = v8 >> 3;
    v10 = *(unsigned __int8 *)(a1 + 8);
    v11 = *(_QWORD *)a1;
    do
    {
      v12 = *v7++;
      v13 = v12 & 0xFFFFFFFFFFFFFFF8;
      if (v10)
      {
        v11 = v13 + ((v13 + v11 + (v13 + v11) * (v13 + v11)) >> 1);
      }
      else
      {
        v10 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        v11 = v13;
      }
      *(_QWORD *)a1 = v11;
      --v9;
    }
    while (v9);
  }
  return sub_20C036CB8(a1, a3, a4, a5, a6, a7);
}

uint64_t sub_20C036CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v6 = *(uint64_t **)a2;
  v7 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v7)
  {
    v8 = v7 >> 3;
    v9 = *(unsigned __int8 *)(a1 + 8);
    v10 = *(_QWORD *)a1;
    do
    {
      v11 = *v6++;
      v12 = v11 & 0xFFFFFFFFFFFFFFF8;
      if (v9)
      {
        v10 = v12 + ((v12 + v10 + (v12 + v10) * (v12 + v10)) >> 1);
      }
      else
      {
        v9 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        v10 = v12;
      }
      *(_QWORD *)a1 = v10;
      --v8;
    }
    while (v8);
  }
  return sub_20C036D18(a1, a3, a4, a5, a6);
}

uint64_t sub_20C036D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *(uint64_t **)a2;
  v6 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v6)
  {
    v7 = v6 >> 3;
    v8 = *(unsigned __int8 *)(a1 + 8);
    v9 = *(_QWORD *)a1;
    do
    {
      v10 = *v5++;
      v11 = v10 & 0xFFFFFFFFFFFFFFF8;
      if (v8)
      {
        v9 = v11 + ((v11 + v9 + (v11 + v9) * (v11 + v9)) >> 1);
      }
      else
      {
        v8 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        v9 = v11;
      }
      *(_QWORD *)a1 = v9;
      --v7;
    }
    while (v7);
  }
  return sub_20C036D74(a1, a3, a4, a5);
}

uint64_t sub_20C036D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(uint64_t **)a2;
  v5 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v5)
  {
    v6 = v5 >> 3;
    v7 = *(unsigned __int8 *)(a1 + 8);
    v8 = *(_QWORD *)a1;
    do
    {
      v9 = *v4++;
      v10 = v9 & 0xFFFFFFFFFFFFFFF8;
      if (v7)
      {
        v8 = v10 + ((v10 + v8 + (v10 + v8) * (v10 + v8)) >> 1);
      }
      else
      {
        v7 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        v8 = v10;
      }
      *(_QWORD *)a1 = v8;
      --v6;
    }
    while (v6);
  }
  return sub_20C036DCC(a1, a3, a4);
}

uint64_t sub_20C036DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(uint64_t **)a2;
  v4 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v4)
  {
    v5 = v4 >> 3;
    v6 = *(unsigned __int8 *)(a1 + 8);
    v7 = *(_QWORD *)a1;
    do
    {
      v8 = *v3++;
      v9 = v8 & 0xFFFFFFFFFFFFFFF8;
      if (v6)
      {
        v7 = v9 + ((v9 + v7 + (v9 + v7) * (v9 + v7)) >> 1);
      }
      else
      {
        v6 = 1;
        *(_BYTE *)(a1 + 8) = 1;
        v7 = v9;
      }
      *(_QWORD *)a1 = v7;
      --v5;
    }
    while (v5);
  }
  return sub_20C036E20(a1, a3);
}

uint64_t sub_20C036E20(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = *(uint64_t **)a2;
  v3 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v3)
  {
    v4 = v3 >> 3;
    v5 = *(unsigned __int8 *)(result + 8);
    v6 = *(_QWORD *)result;
    do
    {
      v7 = *v2++;
      v8 = v7 & 0xFFFFFFFFFFFFFFF8;
      if (v5)
      {
        v6 = v8 + ((v8 + v6 + (v8 + v6) * (v8 + v6)) >> 1);
      }
      else
      {
        v5 = 1;
        *(_BYTE *)(result + 8) = 1;
        v6 = v8;
      }
      *(_QWORD *)result = v6;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_20C036E70(uint64_t *a1)
{
  unsigned int v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  void **v7;

  v2 = atomic_load((unsigned int *)(*a1 + 152));
  if (v2 != 1)
  {
    v3 = (unsigned int *)operator new(0xA0uLL);
    sub_20C0366AC((uint64_t)v3, *a1);
    v4 = v3 + 38;
    atomic_store(0, v3 + 38);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    v7 = (void **)*a1;
    *a1 = (uint64_t)v3;
    sub_20C036AF0(&v7);
  }
  return *a1;
}

void sub_20C036EEC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C036F00(unsigned int **a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (unsigned int *)operator new(0xA0uLL);
  result = sub_20C0366AC((uint64_t)v4, a2);
  v6 = v4 + 38;
  atomic_store(0, v4 + 38);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C036F58(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C036F6C(uint64_t *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, uint64_t *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C036E70(a1);
}

uint64_t sub_20C036FFC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20C037170((_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), (uint64_t)(*(_QWORD *)(a2 + 16) - *(_QWORD *)(a2 + 8)) >> 4);
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  sub_20C037170((_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), (uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 4);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20C037170((_QWORD *)(a1 + 56), *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64), (uint64_t)(*(_QWORD *)(a2 + 64) - *(_QWORD *)(a2 + 56)) >> 4);
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  sub_20C037170((_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)(*(_QWORD *)(a2 + 88) - *(_QWORD *)(a2 + 80)) >> 4);
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  sub_20C037170((_QWORD *)(a1 + 104), *(_QWORD *)(a2 + 104), *(_QWORD *)(a2 + 112), (uint64_t)(*(_QWORD *)(a2 + 112) - *(_QWORD *)(a2 + 104)) >> 4);
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = 0;
  sub_20C037170((_QWORD *)(a1 + 128), *(_QWORD *)(a2 + 128), *(_QWORD *)(a2 + 136), (uint64_t)(*(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 128)) >> 4);
  return a1;
}

void sub_20C037108(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF8CA20((void ***)va);
  sub_20BF8CA20((void ***)va);
  sub_20BF8CA20((void ***)va);
  sub_20BF8CA20((void ***)va);
  sub_20BF8CA20((void ***)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C037170(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BE90F0C(result, a4);
    result = (_QWORD *)sub_20C0371F4((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C0371D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20BF8CA20(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0371F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      sub_20BF4C6D0((_QWORD *)(a4 + v7), (_QWORD *)(a2 + v7));
      v7 += 16;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_20C037250(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (v2)
  {
    v4 = v1 - 16;
    do
    {
      sub_20BF4C2D8(v4 + v2);
      v2 -= 16;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_20C037274(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20C0372A8()
{
  _QWORD *v0;
  uint64_t result;

  result = 0;
  *v0 = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::CoreType::CoreType(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfType *v2;
  uint64_t v3;
  int64x2_t *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int64x2_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  int64x2_t v16;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::TfType *v18;

  v2 = pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)a1);
  *((_QWORD *)v2 + 14) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::TfType *)((char *)v2 + 112);
  *(_OWORD *)((char *)v2 - 104) = 0u;
  *((_QWORD *)v2 - 7) = 0;
  *(_OWORD *)((char *)v2 - 88) = 0u;
  v3 = MEMORY[0x24BEDB798];
  *((_QWORD *)v2 - 5) = 0;
  *((_QWORD *)v2 - 4) = v3;
  *((_DWORD *)v2 - 6) = 0;
  *((_QWORD *)v2 - 2) = 0;
  v4 = (int64x2_t *)((char *)v2 - 16);
  *((_QWORD *)v2 - 1) = 0;
  v18 = v2;
  v5 = sub_20BDDF6A8((uint64_t)v2, 1uLL);
  *v5 = 0;
  v8 = *(_QWORD **)(a1 + 96);
  v7 = *(_QWORD **)(a1 + 104);
  if (v7 == v8)
  {
    v11 = vdupq_n_s64((unint64_t)v7);
    v9 = v5;
  }
  else
  {
    v9 = v5;
    do
    {
      v10 = *--v7;
      *--v9 = v10;
      *v7 = 0;
    }
    while (v7 != v8);
    v11 = *v4;
  }
  v12 = v5 + 1;
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v5 + 1;
  v16 = v11;
  v13 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = &v5[v6];
  v17 = v13;
  v15 = v11.i64[0];
  sub_20BF1EE98((uint64_t)&v15);
  *(_QWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 80) = &unk_24C526E38;
  *(_DWORD *)(a1 + 88) = 1;
  return a1;
}

void sub_20C037418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void **a14)
{
  uint64_t v14;
  void **v15;
  void **v16;
  void **v17;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;

  v17 = v15;
  a14 = v17;
  sub_20BEEB2B8(&a14);
  sub_20BF4C2D8(v14 + 64);
  v19 = *(_QWORD *)(v14 + 32);
  if ((v19 & 7) != 0)
  {
    v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  if (*(char *)(v14 + 31) < 0)
    operator delete(*v16);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::MakeValueTypeName(uint64_t a1)
{
  uint64_t v2;

  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v2, a1);
  return v2;
}

void *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *this)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)&qword_254985970);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_254985970))
  {
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl::Sdf_ValueTypeImpl((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl *)&unk_254985950);
    __cxa_atexit((void (*)(void *))sub_20C037530, &unk_254985950, &dword_20BDBC000);
    __cxa_guard_release(&qword_254985970);
  }
  return &unk_254985950;
}

void sub_20C037514(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254985970);
  _Unwind_Resume(a1);
}

uint64_t sub_20C037530(uint64_t result)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  v1 = *(_QWORD *)(result + 8);
  if ((v1 & 7) != 0)
  {
    v2 = (unsigned int *)(v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl::Sdf_ValueTypeImpl(pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl *this)
{
  unsigned __int8 v2;

  *((_QWORD *)this + 1) = 0;
  v2 = atomic_load((unsigned __int8 *)&qword_2549859F0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_2549859F0))
  {
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::CoreType::CoreType((uint64_t)&unk_254985978);
    __cxa_atexit((void (*)(void *))sub_20C03828C, &unk_254985978, &dword_20BDBC000);
    __cxa_guard_release(&qword_2549859F0);
  }
  *(_QWORD *)this = &unk_254985978;
  *((_QWORD *)this + 2) = this;
  *((_QWORD *)this + 3) = this;
  return this;
}

void sub_20C0375E0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  __cxa_guard_abort(&qword_2549859F0);
  v3 = *(_QWORD *)(v1 + 8);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::Sdf_ValueTypeRegistry(pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry *this)
{
  _OWORD *v2;

  v2 = operator new(0xC0uLL);
  *v2 = 0u;
  v2[1] = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *((_DWORD *)v2 + 10) = 1065353216;
  v2[3] = 0u;
  v2[4] = 0u;
  *((_DWORD *)v2 + 20) = 1065353216;
  *(_OWORD *)((char *)v2 + 88) = 0u;
  *(_OWORD *)((char *)v2 + 104) = 0u;
  *(_OWORD *)((char *)v2 + 120) = 0u;
  *((_QWORD *)v2 + 17) = 0;
  *((_DWORD *)v2 + 36) = 1065353216;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  *(_OWORD *)((char *)v2 + 168) = 0u;
  *((_DWORD *)v2 + 46) = 1065353216;
  *(_QWORD *)this = v2;
  return this;
}

{
  _OWORD *v2;

  v2 = operator new(0xC0uLL);
  *v2 = 0u;
  v2[1] = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *((_DWORD *)v2 + 10) = 1065353216;
  v2[3] = 0u;
  v2[4] = 0u;
  *((_DWORD *)v2 + 20) = 1065353216;
  *(_OWORD *)((char *)v2 + 88) = 0u;
  *(_OWORD *)((char *)v2 + 104) = 0u;
  *(_OWORD *)((char *)v2 + 120) = 0u;
  *((_QWORD *)v2 + 17) = 0;
  *((_DWORD *)v2 + 36) = 1065353216;
  *(_OWORD *)((char *)v2 + 152) = 0u;
  *(_OWORD *)((char *)v2 + 168) = 0u;
  *((_DWORD *)v2 + 46) = 1065353216;
  *(_QWORD *)this = v2;
  return this;
}

void pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::~Sdf_ValueTypeRegistry(pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry *this)
{
  _QWORD *v1;

  v1 = *(_QWORD **)this;
  *(_QWORD *)this = 0;
  if (v1)
    sub_20C03A3A4((uint64_t)this, v1);
}

{
  _QWORD *v1;

  v1 = *(_QWORD **)this;
  *(_QWORD *)this = 0;
  if (v1)
    sub_20C03A3A4((uint64_t)this, v1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::GetAllTypes@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)this;
  v6 = 0;
  v5 = v3;
  tbb::spin_rw_mutex_v3::internal_acquire_reader((unint64_t *)v3);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_20C0385A4(a2, *(const void **)(v3 + 88), *(_QWORD *)(v3 + 96), (uint64_t)(*(_QWORD *)(v3 + 96) - *(_QWORD *)(v3 + 88)) >> 3);
  return sub_20BEBF29C(&v5);
}

void sub_20C0377AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BEBF29C(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::FindType(unint64_t **this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  unint64_t *v3;
  _QWORD *v4;
  void *v5;
  uint64_t v7;
  unint64_t *v8;
  char v9;

  v3 = *this;
  v9 = 0;
  v8 = v3;
  tbb::spin_rw_mutex_v3::internal_acquire_reader(v3);
  v4 = sub_20BF2B2B4(v3 + 6, a2);
  if (v4)
  {
    v5 = v4 + 3;
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(0);
    v5 = &unk_254985950;
  }
  sub_20BEBF29C(&v8);
  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v7, (uint64_t)v5);
  return v7;
}

void sub_20C037834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::FindType(unint64_t **this, const char *a2)
{
  unint64_t *v2;
  _QWORD *v3;
  void *v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  char v11;

  v2 = *this;
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&v8, a2);
  v11 = 0;
  v10 = v2;
  tbb::spin_rw_mutex_v3::internal_acquire_reader(v2);
  v3 = sub_20BF2B2B4(v2 + 6, &v8);
  if (v3)
  {
    v4 = v3 + 3;
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(0);
    v4 = &unk_254985950;
  }
  sub_20BEBF29C(&v10);
  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v9, (uint64_t)v4);
  if ((v8 & 7) != 0)
  {
    v5 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  return v9;
}

void sub_20C0378E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  sub_20BEBF29C((uint64_t *)va);
  if ((a2 & 7) != 0)
  {
    v4 = (unsigned int *)(a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::FindType(unint64_t **a1)
{
  unint64_t *v1;
  _QWORD *v2;
  void *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  char v10;

  v1 = *a1;
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v7);
  v10 = 0;
  v9 = v1;
  tbb::spin_rw_mutex_v3::internal_acquire_reader(v1);
  v2 = sub_20BF2B2B4(v1 + 6, &v7);
  if (v2)
  {
    v3 = v2 + 3;
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(0);
    v3 = &unk_254985950;
  }
  sub_20BEBF29C(&v9);
  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v8, (uint64_t)v3);
  if ((v7 & 7) != 0)
  {
    v4 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  return v8;
}

void sub_20C0379B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  sub_20BEBF29C((uint64_t *)va);
  if ((a2 & 7) != 0)
  {
    v4 = (unsigned int *)(a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::FindType(unint64_t **this, const pxrInternal__aapl__pxrReserved__::TfType *a2, unsigned int **a3)
{
  void *v3;
  uint64_t v5;

  v3 = sub_20C037A20(*this, (uint64_t *)a2, a3);
  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v5, (uint64_t)v3);
  return v5;
}

void *sub_20C037A20(unint64_t *a1, uint64_t *a2, unsigned int **a3)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  _QWORD *v9;
  void *v10;
  unsigned int *v11;
  unsigned int v12;
  unint64_t *v14;
  char v15;
  uint64_t v16;
  unsigned int *v17;

  v15 = 0;
  v14 = a1;
  tbb::spin_rw_mutex_v3::internal_acquire_reader(a1);
  v6 = *a3;
  v16 = *a2;
  v17 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v17 = v7;
  }
  v9 = sub_20C03861C(a1 + 1, &v16);
  if (v9 && (v9 = sub_20BF2B2B4(a1 + 6, (_QWORD *)v9[16])) != 0)
  {
    v10 = v9 + 3;
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)v9);
    v10 = &unk_254985950;
  }
  if ((v17 & 7) != 0)
  {
    v11 = (unsigned int *)((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  sub_20BEBF29C(&v14);
  return v10;
}

void sub_20C037AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int *v13;
  unsigned int v14;

  if ((a12 & 7) != 0)
  {
    v13 = (unsigned int *)(a12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  sub_20BEBF29C(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::FindType(unint64_t **this, const pxrInternal__aapl__pxrReserved__::VtValue *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  unint64_t *v4;
  void *v5;
  uint64_t Type;
  uint64_t v8;

  v4 = *this;
  Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType(a2, (const std::type_info *)a2, (char *)a3);
  v5 = sub_20C037A20(v4, &Type, (unsigned int **)a3);
  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v8, (uint64_t)v5);
  return v8;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::FindOrCreateTypeName(tbb::spin_rw_mutex_v3 **this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  tbb::spin_rw_mutex_v3 *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t *v23;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  int64x2_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  tbb::spin_rw_mutex_v3 *v32;
  char v33;
  uint64_t *v34;
  int64x2_t v35;
  char *v36;
  _QWORD *v37;

  v3 = *this;
  v33 = 1;
  v32 = v3;
  tbb::spin_rw_mutex_v3::internal_acquire_writer(v3);
  v4 = sub_20BF2B388((_QWORD *)v3 + 6, a2);
  if (v4 || (v5 = (uint64_t)v3 + 152, (v4 = sub_20BF2B388((_QWORD *)v3 + 19, a2)) != 0))
  {
    v6 = (uint64_t)(v4 + 3);
  }
  else
  {
    v34 = (uint64_t *)a2;
    v8 = sub_20C038708((uint64_t)v3 + 112, a2, (uint64_t)&unk_20CAC184C, &v34);
    v9 = v8;
    v10 = *(_QWORD *)a2;
    if ((*(_QWORD *)a2 & 7) != 0)
    {
      v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v10 &= 0xFFFFFFFFFFFFFFF8;
    }
    v13 = (uint64_t)(v8 + 17);
    v14 = v9[17];
    v15 = (uint64_t *)v9[16];
    if ((unint64_t)v15 >= v14)
    {
      v17 = v9[15];
      v18 = ((uint64_t)v15 - v17) >> 3;
      if ((unint64_t)(v18 + 1) >> 61)
        sub_20BDDF694();
      v19 = v14 - v17;
      v20 = v19 >> 2;
      if (v19 >> 2 <= (unint64_t)(v18 + 1))
        v20 = v18 + 1;
      if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF8)
        v21 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v21 = v20;
      v37 = v9 + 17;
      if (v21)
        v22 = (char *)sub_20BDDF6A8(v13, v21);
      else
        v22 = 0;
      v23 = (uint64_t *)&v22[8 * v18];
      v24 = &v22[8 * v21];
      v36 = v24;
      *v23 = v10;
      v16 = v23 + 1;
      v35.i64[1] = (uint64_t)(v23 + 1);
      v26 = (_QWORD *)v9[15];
      v25 = (_QWORD *)v9[16];
      if (v25 == v26)
      {
        v28 = vdupq_n_s64((unint64_t)v25);
      }
      else
      {
        do
        {
          v27 = *--v25;
          *--v23 = v27;
          *v25 = 0;
        }
        while (v25 != v26);
        v28 = *(int64x2_t *)(v9 + 15);
        v16 = (_QWORD *)v35.i64[1];
        v24 = v36;
      }
      v9[15] = v23;
      v9[16] = v16;
      v35 = v28;
      v29 = (char *)v9[17];
      v9[17] = v24;
      v36 = v29;
      v34 = (uint64_t *)v28.i64[0];
      sub_20BF1EE98((uint64_t)&v34);
    }
    else
    {
      *v15 = v10;
      v16 = v15 + 1;
    }
    v9[16] = v16;
    v34 = (uint64_t *)a2;
    v30 = sub_20C038AC0(v5, a2, (uint64_t)&unk_20CAC184C, &v34);
    v30[3] = v9 + 3;
    v6 = (uint64_t)(v30 + 3);
    sub_20BF32220(v30 + 4, (_QWORD *)(v9[16] - 8));
  }
  sub_20BEBF29C(&v32);
  pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&v31, v6);
  return v31;
}

void pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::AddType(tbb::spin_rw_mutex_v3 **a1, uint64_t a2, char *a3)
{
  const std::type_info *v5;
  char *v6;
  uint64_t v7;
  void *__p[2];
  uint64_t v9;
  uint64_t Type;
  void *v11[2];
  char v12;

  if (*(_QWORD *)(a2 + 24) | *(_QWORD *)(a2 + 40))
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 16), (const std::type_info *)a2, a3);
    sub_20C038044((pxrInternal__aapl__pxrReserved__::TfType *)&Type, a2 + 48, (uint64_t)v11);
    v7 = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 32), v5, v6);
    sub_20C038044((pxrInternal__aapl__pxrReserved__::TfType *)&v7, a2 + 72, (uint64_t)__p);
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::AddType(a1, (uint64_t *)a2, (pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 16), (pxrInternal__aapl__pxrReserved__::VtValue *)(a2 + 32), (uint64_t)v11, (uint64_t)__p, *(_QWORD **)(a2 + 96), *(_QWORD *)(a2 + 104), (uint64_t *)(a2 + 112), (_QWORD *)(a2 + 120));
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&Type);
    sub_20C038044((pxrInternal__aapl__pxrReserved__::TfType *)(a2 + 8), a2 + 48, (uint64_t)v11);
    __p[0] = 0;
    __p[1] = 0;
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::AddType(a1, (uint64_t *)a2, (pxrInternal__aapl__pxrReserved__::TfType *)(a2 + 8), (pxrInternal__aapl__pxrReserved__::TfType *)&Type, (uint64_t)v11, (uint64_t)__p, *(_QWORD **)(a2 + 96), *(_QWORD *)(a2 + 104), (uint64_t *)(a2 + 112), (_QWORD *)(a2 + 120));
  }
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  if (v12 < 0)
    operator delete(v11[0]);
}

void sub_20C037ED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  _Unwind_Resume(exception_object);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::AddType(tbb::spin_rw_mutex_v3 **a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3, pxrInternal__aapl__pxrReserved__::VtValue *a4, uint64_t a5, uint64_t a6, _QWORD *a7, _BOOL4 a8, uint64_t *a9, _QWORD *a10)
{
  tbb::spin_rw_mutex_v3 *v17;
  const std::type_info *v18;
  char *v19;
  uint64_t Type;
  const std::type_info *v21;
  char *v22;
  uint64_t v23;
  const std::type_info *v24;
  char *v25;
  const std::type_info *v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  tbb::spin_rw_mutex_v3 *v33;
  char v34;

  v17 = *a1;
  v34 = 1;
  v33 = v17;
  tbb::spin_rw_mutex_v3::internal_acquire_writer(v17);
  Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType(a3, v18, v19);
  v23 = pxrInternal__aapl__pxrReserved__::VtValue::GetType(a4, v21, v22);
  v31 = 0;
  v32 = 0;
  if (*(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid(MEMORY[0x24BEDB7C8], v24, v25) == Type)
    pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&v30);
  else
    v30 = Type;
  if (*(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid(MEMORY[0x24BEDB7C8], v26, v27) == v23)
    pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&v29);
  else
    v29 = v23;
  sub_20C038E74(v17, (char *)&v32, (char *)&v31, a2, (pxrInternal__aapl__pxrReserved__::TfType *)&v30, (pxrInternal__aapl__pxrReserved__::TfType *)&v29, a5, a6, a9, a10, (std::type_info *)a3, (std::type_info *)a4, a7, a8);
  return sub_20BEBF29C(&v33);
}

void sub_20C038024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::TfType *sub_20C038044@<X0>(pxrInternal__aapl__pxrReserved__::TfType *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfType *v3;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;

  v3 = result;
  if (*(char *)(a2 + 23) < 0)
  {
    v5 = *(_QWORD *)(a2 + 8);
    if (v5)
      return (pxrInternal__aapl__pxrReserved__::TfType *)sub_20BDDBFAC((_BYTE *)a3, *(void **)a2, v5);
  }
  else if (*(_BYTE *)(a2 + 23))
  {
    *(_OWORD *)a3 = *(_OWORD *)a2;
    *(_QWORD *)(a3 + 16) = *(_QWORD *)(a2 + 16);
    return result;
  }
  result = pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&v7);
  if (*(_QWORD *)v3 == v7)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  else
  {
    result = (pxrInternal__aapl__pxrReserved__::TfType *)pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(v3);
    if (*((char *)result + 23) < 0)
    {
      return (pxrInternal__aapl__pxrReserved__::TfType *)sub_20BDDBFAC((_BYTE *)a3, *(void **)result, *((_QWORD *)result + 1));
    }
    else
    {
      v6 = *(_OWORD *)result;
      *(_QWORD *)(a3 + 16) = *((_QWORD *)result + 2);
      *(_OWORD *)a3 = v6;
    }
  }
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::AddType(tbb::spin_rw_mutex_v3 **a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__::TfType *a3, pxrInternal__aapl__pxrReserved__::TfType *a4, uint64_t a5, uint64_t a6, _QWORD *a7, _BOOL4 a8, uint64_t *a9, _QWORD *a10)
{
  tbb::spin_rw_mutex_v3 *v17;
  uint64_t v19;
  uint64_t v20;
  tbb::spin_rw_mutex_v3 *v21;
  char v22;
  std::type_info v23;
  std::type_info v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v17 = *a1;
  v22 = 1;
  v21 = v17;
  tbb::spin_rw_mutex_v3::internal_acquire_writer(v17);
  v19 = 0;
  v20 = 0;
  v24.__type_name = 0;
  v23.__type_name = 0;
  sub_20C038E74(v17, (char *)&v20, (char *)&v19, a2, a3, a4, a5, a6, a9, a10, &v24, &v23, a7, a8);
  sub_20BF4C2D8((uint64_t)&v23);
  sub_20BF4C2D8((uint64_t)&v24);
  return sub_20BEBF29C(&v21);
}

void sub_20C038200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  uint64_t v16;
  va_list va2;

  va_start(va2, a10);
  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  sub_20BF4C2D8((uint64_t)va1);
  sub_20BF4C2D8((uint64_t)va2);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeRegistry::Clear(tbb::spin_rw_mutex_v3 **this)
{
  tbb::spin_rw_mutex_v3 *v1;
  tbb::spin_rw_mutex_v3 *v3;
  char v4;

  v1 = *this;
  v4 = 1;
  v3 = v1;
  tbb::spin_rw_mutex_v3::internal_acquire_writer(v1);
  sub_20C03A2A8((uint64_t)v1 + 8);
  sub_20C03A2FC((uint64_t)v1 + 48);
  *((_QWORD *)v1 + 12) = *((_QWORD *)v1 + 11);
  sub_20C03A350((uint64_t)v1 + 112);
  sub_20C03A2FC((uint64_t)v1 + 152);
  return sub_20BEBF29C(&v3);
}

uint64_t sub_20C03828C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void **v6;

  v6 = (void **)(a1 + 96);
  sub_20BEEB2B8(&v6);
  sub_20BF4C2D8(a1 + 64);
  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_20C0382FC(uint64_t a1)
{
  void *v2;

  sub_20C038334(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C038334(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C038370((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_20C038370(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)(a1 + 104);
  sub_20BEEB2B8(&v7);
  sub_20BF4C2D8(a1 + 72);
  v2 = *(_QWORD *)(a1 + 40);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

uint64_t sub_20C0383FC(uint64_t a1)
{
  void *v2;

  sub_20C038434(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C038434(int a1, _QWORD *__p)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  if (__p)
  {
    v2 = __p;
    do
    {
      v3 = (_QWORD *)*v2;
      v4 = v2[4];
      if ((v4 & 7) != 0)
      {
        v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stlxr(v6 - 2, v5));
      }
      v7 = v2[2];
      if ((v7 & 7) != 0)
      {
        v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v9 = __ldxr(v8);
        while (__stlxr(v9 - 2, v8));
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_20C0384A4(uint64_t a1)
{
  void *v2;

  sub_20C0384DC(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C0384DC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C038518((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

void sub_20C038518(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void **v8;

  v8 = (void **)(a1 + 112);
  sub_20BEEB2B8(&v8);
  sub_20BF4C2D8(a1 + 80);
  v2 = *(_QWORD *)(a1 + 48);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 8);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
}

_QWORD *sub_20C0385A4(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C038600(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C03861C(_QWORD *a1, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  uint8x8_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  unint64_t v9;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = a2[1] & 0xFFFFFFFFFFFFFFF8;
  v4 = bswap64(0x9E3779B97F4A7C55 * (v3 + ((v3 + *a2 + (v3 + *a2) * (v3 + *a2)) >> 1)));
  v5 = (uint8x8_t)vcnt_s8(v2);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    v6 = v4;
    if (v4 >= *(_QWORD *)&v2)
      v6 = v4 % *(_QWORD *)&v2;
  }
  else
  {
    v6 = v4 & (*(_QWORD *)&v2 - 1);
  }
  v7 = *(_QWORD **)(*a1 + 8 * v6);
  if (!v7)
    return 0;
  result = (_QWORD *)*v7;
  if (*v7)
  {
    do
    {
      v9 = result[1];
      if (v4 == v9)
      {
        if (result[2] == *a2 && (result[3] & 0xFFFFFFFFFFFFFFF8) == v3)
          return result;
      }
      else
      {
        if (v5.u32[0] > 1uLL)
        {
          if (v9 >= *(_QWORD *)&v2)
            v9 %= *(_QWORD *)&v2;
        }
        else
        {
          v9 &= *(_QWORD *)&v2 - 1;
        }
        if (v9 != v6)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_20C038708(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD v22[3];

  v6 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * v6);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = v7;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = v7 & (v8 - 1);
    }
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if ((v11[2] & 0xFFFFFFFFFFFFFFF8) == v6)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  sub_20C03896C(a1, v7, a4, (uint64_t)v22);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v19)
  {
    *(_QWORD *)v22[0] = *v19;
    *v19 = v22[0];
  }
  else
  {
    *(_QWORD *)v22[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v22[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v22[0])
    {
      v20 = *(_QWORD *)(*(_QWORD *)v22[0] + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v22[0];
    }
  }
  v11 = (_QWORD *)v22[0];
  v22[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C038A7C((uint64_t)v22, 0);
  return v11;
}

void sub_20C038954(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C038A7C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C03896C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x90uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C0389D8((uint64_t)(v8 + 2), *a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C0389C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C038A7C(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0389D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)(a1 + 8));
  *(_QWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v6 = MEMORY[0x24BEDB798];
  *(_QWORD *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = v6;
  *(_DWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  return a1;
}

void sub_20C038A7C(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C038370((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

_QWORD *sub_20C038AC0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD *v10;
  _QWORD *result;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;

  v6 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * v6);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = v7;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = v7 & (v8 - 1);
    }
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      result = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = result[1];
          if (v12 == v7)
          {
            if ((result[2] & 0xFFFFFFFFFFFFFFF8) == v6)
              return result;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          result = (_QWORD *)*result;
        }
        while (result);
      }
    }
  }
  sub_20C038D14(a1, v7, a4, (uint64_t)&v21);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v19)
  {
    *v21 = *v19;
    *v19 = v21;
  }
  else
  {
    *v21 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v21)
    {
      v20 = *(_QWORD *)(*v21 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v21;
    }
  }
  result = v21;
  ++*(_QWORD *)(a1 + 24);
  return result;
}

void sub_20C038CF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *__p, uint64_t a11)
{
  if (__p)
    sub_20C038E18((uint64_t)&a11, __p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C038D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t *result;

  v7 = a1 + 16;
  v8 = operator new(0x38uLL);
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C038D98(v8 + 2, *a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C038D7C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  sub_20C038E18(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C038D98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl::Sdf_ValueTypeImpl((pxrInternal__aapl__pxrReserved__::Sdf_ValueTypeImpl *)(a1 + 1));
  return a1;
}

void sub_20C038E18(uint64_t a1, _QWORD *__p)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  if (*(_BYTE *)(a1 + 8))
  {
    v2 = __p[4];
    if ((v2 & 7) != 0)
    {
      v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v4 = __ldxr(v3);
      while (__stlxr(v4 - 2, v3));
    }
    v5 = __p[2];
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void sub_20C038E74(_QWORD *a1, char *a2, char *a3, uint64_t *a4, pxrInternal__aapl__pxrReserved__::TfType *a5, pxrInternal__aapl__pxrReserved__::TfType *a6, uint64_t a7, uint64_t a8, uint64_t *a9, _QWORD *a10, std::type_info *a11, std::type_info *a12, _QWORD *a13, _BOOL4 a14)
{
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  char *v23;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *v24;
  void *v25;
  uint64_t EmptyTypeName;
  const char *v27;
  char *v28;
  unint64_t v29;
  const char *v30;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *v31;
  uint64_t *EmptyString;
  size_t v33;
  void *p_p;
  const void *v35;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *v36;
  void *v37;
  const char *v38;
  char *v39;
  void *v40;
  _BOOL4 v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *v45;
  uint64_t v46;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *v47;
  uint64_t v48;
  unsigned int *v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  void *v62;
  void *v63;
  unint64_t v64;
  void **v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t *v79;
  void *v80;
  unint64_t v81;
  void **v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  unsigned int *v95;
  unsigned int v96;
  char *v97;
  unint64_t v98;
  const char *v99;
  unint64_t v100;
  const char *v101;
  unint64_t v102;
  const char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void *__p;
  const char *v112;
  uint64_t v113;
  const char *v114;
  char v115;
  uint64_t v116;

  if (*a4
    || (__p = "sdf/valueTypeRegistry.cpp",
        v112 = "_AddType",
        v113 = 292,
        v114 = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, Sd"
               "f_ValueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const std::stri"
               "ng &, const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)",
        v115 = 0,
        v97 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Types must have names", a2, a3), (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "!name.IsEmpty()", v97) & 1) != 0))
  {
    v20 = *(unsigned __int8 *)(a7 + 23);
    if ((v20 & 0x80u) != 0)
      v20 = *(_QWORD *)(a7 + 8);
    if (v20)
      goto LABEL_138;
    v21 = *(unsigned __int8 *)(a8 + 23);
    if ((v21 & 0x80u) != 0)
      v21 = *(_QWORD *)(a8 + 8);
    if (v21)
      goto LABEL_138;
    __p = "sdf/valueTypeRegistry.cpp";
    v112 = "_AddType";
    v113 = 296;
    v114 = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, Sdf_Va"
           "lueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const std::string &, co"
           "nst TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)";
    v115 = 0;
    v100 = *a4 & 0xFFFFFFFFFFFFFFF8;
    if (v100)
    {
      v101 = (const char *)(v100 + 16);
      if (*(char *)(v100 + 39) < 0)
        v101 = *(const char **)v101;
    }
    else
    {
      v101 = "";
    }
    v106 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Type '%s' must have C++ names", a2, a3, v101);
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "!cppTypeName.empty() || !arrayCppTypeName.empty()", v106) & 1) != 0)
    {
LABEL_138:
      pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&__p);
      if (*(void **)a5 != __p)
        goto LABEL_10;
      pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&v116);
      if (*(_QWORD *)a6 != v116)
        goto LABEL_10;
      __p = "sdf/valueTypeRegistry.cpp";
      v112 = "_AddType";
      v113 = 300;
      v114 = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, Sdf_"
             "ValueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const std::string &"
             ", const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)";
      v115 = 0;
      v102 = *a4 & 0xFFFFFFFFFFFFFFF8;
      if (v102)
      {
        v103 = (const char *)(v102 + 16);
        if (*(char *)(v102 + 39) < 0)
          v103 = *(const char **)v103;
      }
      else
      {
        v103 = "";
      }
      v107 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Type '%s' must have a C++ type", v22, v23, v103);
      if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "!type.IsUnknown() || !arrayType.IsUnknown()", v107) & 1) != 0)
      {
LABEL_10:
        v24 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)sub_20BF2B2B4(a1 + 6, a4);
        if (v24)
        {
          v25 = (char *)v24 + 24;
          EmptyTypeName = (uint64_t)pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(v24);
          if (v25 != &unk_254985950)
          {
            __p = "sdf/valueTypeRegistry.cpp";
            v112 = "_AddType";
            v113 = 305;
            v114 = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **"
                   ", Sdf_ValueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const s"
                   "td::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)";
            v115 = 0;
            v29 = *a4 & 0xFFFFFFFFFFFFFFF8;
            if (v29)
            {
              v30 = (const char *)(v29 + 16);
              if (*(char *)(v29 + 39) < 0)
                v30 = *(const char **)v30;
            }
            else
            {
              v30 = "";
            }
            v104 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Type '%s' already exists", v27, v28, v30);
            EmptyTypeName = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "existing == Sdf_ValueTypePrivate::GetEmptyTypeName()", v104);
            if ((EmptyTypeName & 1) == 0)
              return;
          }
        }
        else
        {
          v31 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(0);
          EmptyTypeName = (uint64_t)pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(v31);
        }
        v108 = a8;
        if ((*a4 & 0xFFFFFFFFFFFFFFF8) != 0)
          EmptyString = (uint64_t *)((*a4 & 0xFFFFFFFFFFFFFFF8) + 16);
        else
          EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyTypeName);
        if (*((char *)EmptyString + 23) >= 0)
          v33 = *((unsigned __int8 *)EmptyString + 23);
        else
          v33 = EmptyString[1];
        p_p = &__p;
        sub_20BDF6BDC((uint64_t)&__p, v33 + 2);
        if (v113 < 0)
          p_p = __p;
        if (v33)
        {
          if (*((char *)EmptyString + 23) >= 0)
            v35 = EmptyString;
          else
            v35 = (const void *)*EmptyString;
          memmove(p_p, v35, v33);
        }
        strcpy((char *)p_p + v33, "[]");
        pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v116, &__p, 0);
        if (SHIBYTE(v113) < 0)
          operator delete(__p);
        v36 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)sub_20BF2B2B4(a1 + 6, &v116);
        if (v36)
        {
          v37 = (char *)v36 + 24;
        }
        else
        {
          v36 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(0);
          v37 = &unk_254985950;
        }
        pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(v36);
        if (v37 != &unk_254985950)
        {
          __p = "sdf/valueTypeRegistry.cpp";
          v112 = "_AddType";
          v113 = 312;
          v114 = "BOOL pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddType(Sdf_ValueTypeImpl **, "
                 "Sdf_ValueTypeImpl **, const TfToken &, const TfType &, const TfType &, const std::string &, const std::"
                 "string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, const VtValue &, TfEnum)";
          v115 = 0;
          v98 = v116 & 0xFFFFFFFFFFFFFFF8;
          if ((v116 & 0xFFFFFFFFFFFFFFF8) != 0)
          {
            v99 = (const char *)(v98 + 16);
            if (*(char *)(v98 + 39) < 0)
              v99 = *(const char **)v99;
          }
          else
          {
            v99 = "";
          }
          v105 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Type '%s' already exists", v38, v39, v99);
          if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "existing == Sdf_ValueTypePrivate::GetEmptyTypeName()", v105) & 1) == 0)
          {
LABEL_107:
            if ((v116 & 7) != 0)
            {
              v95 = (unsigned int *)(v116 & 0xFFFFFFFFFFFFFFF8);
              do
                v96 = __ldxr(v95);
              while (__stlxr(v96 - 2, v95));
            }
            return;
          }
        }
        v40 = a13;
        v41 = a14;
        if (!a14)
        {
          v42 = strcmp((const char *)(*(_QWORD *)(MEMORY[0x24BEDB798] + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(a13[1] & 0x7FFFFFFFFFFFFFFFLL));
          v41 = v42 == 0;
          if (!v42)
            v40 = &unk_24C526E38;
        }
        pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&__p);
        if (*(void **)a5 == __p)
        {
          v44 = 0;
        }
        else
        {
          v44 = sub_20C039714((uint64_t)a1, a4, a5, a7, a9, a10, a11, v43, (uint64_t)v40, v41);
          if (!v44)
            goto LABEL_107;
        }
        v45 = pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&__p);
        if (*(void **)a6 == __p)
        {
          v47 = 0;
          if (v44)
            goto LABEL_45;
        }
        else
        {
          v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)sub_20C039714((uint64_t)a1, &v116, a6, v108, a9, a10, a12, v46, (uint64_t)v40, v41);
          v47 = v45;
          if (!v45)
            goto LABEL_107;
          if (v44)
          {
LABEL_45:
            __p = a4;
            v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)sub_20C038AC0((uint64_t)(a1 + 6), a4, (uint64_t)&unk_20CAC184C, (uint64_t **)&__p);
            *(_QWORD *)a2 = (char *)v45 + 24;
            *((_QWORD *)v45 + 3) = v44;
            v48 = *a4;
            if ((*a4 & 7) != 0)
            {
              v49 = (unsigned int *)(v48 & 0xFFFFFFFFFFFFFFF8);
              do
                v50 = __ldxr(v49);
              while (__stxr(v50 + 2, v49));
              if ((v50 & 1) == 0)
                v48 &= 0xFFFFFFFFFFFFFFF8;
            }
            v51 = *(_QWORD *)a2;
            v52 = *(_QWORD *)(*(_QWORD *)a2 + 8);
            if ((v52 & 7) != 0)
            {
              v53 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
              do
                v54 = __ldxr(v53);
              while (__stlxr(v54 - 2, v53));
            }
            *(_QWORD *)(v51 + 8) = v48;
            if (v47)
              goto LABEL_54;
            goto LABEL_65;
          }
        }
        *(_QWORD *)a2 = 0;
        if (v47)
        {
LABEL_54:
          __p = &v116;
          v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)sub_20C038AC0((uint64_t)(a1 + 6), &v116, (uint64_t)&unk_20CAC184C, (uint64_t **)&__p);
          *(_QWORD *)a3 = (char *)v45 + 24;
          *((_QWORD *)v45 + 3) = v47;
          v55 = v116;
          if ((v116 & 7) != 0)
          {
            v56 = (unsigned int *)(v116 & 0xFFFFFFFFFFFFFFF8);
            do
              v57 = __ldxr(v56);
            while (__stxr(v57 + 2, v56));
            if ((v57 & 1) == 0)
              v55 &= 0xFFFFFFFFFFFFFFF8;
          }
          v58 = *(_QWORD *)a3;
          v59 = *(_QWORD *)(*(_QWORD *)a3 + 8);
          if ((v59 & 7) != 0)
          {
            v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
            do
              v61 = __ldxr(v60);
            while (__stlxr(v61 - 2, v60));
          }
          *(_QWORD *)(v58 + 8) = v55;
          goto LABEL_66;
        }
LABEL_65:
        *(_QWORD *)a3 = 0;
LABEL_66:
        if (*(_QWORD *)a2)
        {
          *(_QWORD *)(*(_QWORD *)a2 + 16) = *(_QWORD *)a2;
          v62 = *(void **)a3;
          if (!*(_QWORD *)a3)
          {
            pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(v45);
            v62 = &unk_254985950;
          }
          *(_QWORD *)(*(_QWORD *)a2 + 24) = v62;
          pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&__p, *(_QWORD *)a2);
          v63 = __p;
          v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)(a1 + 13);
          v64 = a1[13];
          v65 = (void **)a1[12];
          if ((unint64_t)v65 >= v64)
          {
            v67 = a1[11];
            v68 = ((uint64_t)v65 - v67) >> 3;
            if ((unint64_t)(v68 + 1) >> 61)
              sub_20BDDF694();
            v69 = v64 - v67;
            v70 = v69 >> 2;
            if (v69 >> 2 <= (unint64_t)(v68 + 1))
              v70 = v68 + 1;
            if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFF8)
              v71 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v71 = v70;
            if (v71)
              v72 = (char *)sub_20BDDF6A8((uint64_t)v45, v71);
            else
              v72 = 0;
            v73 = &v72[8 * v68];
            v74 = &v72[8 * v71];
            *(_QWORD *)v73 = v63;
            v66 = v73 + 8;
            v75 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)a1[11];
            v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)a1[12];
            if (v45 != v75)
            {
              do
              {
                v76 = *((_QWORD *)v45 - 1);
                v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)((char *)v45 - 8);
                *((_QWORD *)v73 - 1) = v76;
                v73 -= 8;
              }
              while (v45 != v75);
              v45 = (pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate *)a1[11];
            }
            a1[11] = v73;
            a1[12] = v66;
            a1[13] = v74;
            if (v45)
              operator delete(v45);
          }
          else
          {
            *v65 = __p;
            v66 = v65 + 1;
          }
          a1[12] = v66;
        }
        v77 = *(_QWORD *)a3;
        if (*(_QWORD *)a3)
        {
          v78 = *(void **)a2;
          if (*(_QWORD *)a2)
          {
            v79 = (uint64_t *)a3;
          }
          else
          {
            pxrInternal__aapl__pxrReserved__::Sdf_ValueTypePrivate::GetEmptyTypeName(v45);
            v79 = (uint64_t *)a3;
            v77 = *(_QWORD *)a3;
            v78 = &unk_254985950;
          }
          *(_QWORD *)(v77 + 16) = v78;
          *(_QWORD *)(*v79 + 24) = *v79;
          pxrInternal__aapl__pxrReserved__::SdfValueTypeName::SdfValueTypeName(&__p, *v79);
          v80 = __p;
          v81 = a1[13];
          v82 = (void **)a1[12];
          if ((unint64_t)v82 >= v81)
          {
            v84 = a1[11];
            v85 = ((uint64_t)v82 - v84) >> 3;
            if ((unint64_t)(v85 + 1) >> 61)
              sub_20BDDF694();
            v86 = v81 - v84;
            v87 = v86 >> 2;
            if (v86 >> 2 <= (unint64_t)(v85 + 1))
              v87 = v85 + 1;
            if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFF8)
              v88 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v88 = v87;
            if (v88)
              v89 = (char *)sub_20BDDF6A8((uint64_t)(a1 + 13), v88);
            else
              v89 = 0;
            v90 = &v89[8 * v85];
            v91 = &v89[8 * v88];
            *(_QWORD *)v90 = v80;
            v83 = v90 + 8;
            v93 = (char *)a1[11];
            v92 = (char *)a1[12];
            if (v92 != v93)
            {
              do
              {
                v94 = *((_QWORD *)v92 - 1);
                v92 -= 8;
                *((_QWORD *)v90 - 1) = v94;
                v90 -= 8;
              }
              while (v92 != v93);
              v92 = (char *)a1[11];
            }
            a1[11] = v90;
            a1[12] = v83;
            a1[13] = v91;
            if (v92)
              operator delete(v92);
          }
          else
          {
            *v82 = __p;
            v83 = v82 + 1;
          }
          a1[12] = v83;
        }
        goto LABEL_107;
      }
    }
  }
}

void sub_20C0396C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  unsigned int *v24;
  unsigned int v25;

  if ((a24 & 7) != 0)
  {
    v24 = (unsigned int *)(a24 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C039714(uint64_t a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__::TfType *a3, uint64_t a4, uint64_t *a5, _QWORD *a6, std::type_info *a7, uint64_t a8, uint64_t a9, int a10)
{
  const char *v17;
  char *v18;
  _QWORD *v19;
  const char *v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  _QWORD *v26;
  const char *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  const void **v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  const char *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  int64x2_t v58;
  const char *v59;
  unsigned int *v60;
  unsigned int v61;
  unint64_t v63;
  const char *v64;
  char *v65;
  unint64_t v66;
  const char *v67;
  unint64_t v68;
  const char *v69;
  unint64_t v70;
  const char *v71;
  const char *v72;
  uint64_t v73;
  const char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  const char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  const char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  const char *v91;
  uint64_t TypeName;
  const char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  int64x2_t v100;
  const char *v101;
  _QWORD *v102;

  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&v99);
  if (*(char **)a3 == v99)
  {
    v99 = "sdf/valueTypeRegistry.cpp";
    v100.i64[0] = (uint64_t)"_AddCoreType";
    v100.i64[1] = 430;
    v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(con"
           "st TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
    LOBYTE(v102) = 0;
    v66 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v66)
    {
      v67 = (const char *)(v66 + 16);
      if (*(char *)(v66 + 39) < 0)
        v67 = *(const char **)v67;
    }
    else
    {
      v67 = "";
    }
    v88 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Internal error: unknown TfType for '%s'", v17, v18, v67);
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "!tfType.IsUnknown()", v88) & 1) == 0)
      return 0;
  }
  v19 = (_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid(MEMORY[0x24BEDB7C8], (const std::type_info *)v17, v18);
  v22 = *(_QWORD **)a3;
  if (*(_QWORD *)a3 == *v19)
  {
    v99 = "sdf/valueTypeRegistry.cpp";
    v100.i64[0] = (uint64_t)"_AddCoreType";
    v100.i64[1] = 435;
    v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(con"
           "st TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
    LOBYTE(v102) = 0;
    v68 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v68)
    {
      v69 = (const char *)(v68 + 16);
      if (*(char *)(v68 + 39) < 0)
        v69 = *(const char **)v69;
    }
    else
    {
      v69 = "";
    }
    v89 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Internal error: TfType<void> for '%s'", v20, v21, v69);
    if (!pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "tfType != TfType::Find<void>()", v89))return 0;
    v22 = *(_QWORD **)a3;
  }
  v23 = *a5;
  v97 = v22;
  v98 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v98 &= 0xFFFFFFFFFFFFFFF8;
  }
  v99 = (char *)&v97;
  v26 = sub_20C039ECC(a1 + 8, &v97, (uint64_t)&unk_20CAC184C, (_QWORD **)&v99);
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&v99);
  v29 = v26 + 4;
  v30 = (char *)v26[4];
  if (v30 == v99)
  {
    v26[4] = *(_QWORD *)a3;
    std::string::operator=((std::string *)(v26 + 5), (const std::string *)a4);
    sub_20BF32220(v26 + 8, a5);
    v37 = a6[2];
    *(_OWORD *)(v26 + 9) = *(_OWORD *)a6;
    v26[11] = v37;
    sub_20BF4A9BC(v26 + 12, a7);
    v26[14] = a9;
    *((_DWORD *)v26 + 30) = a10;
LABEL_31:
    v41 = *a2;
    if ((*a2 & 7) != 0)
    {
      v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 2, v42));
      if ((v43 & 1) == 0)
        v41 &= 0xFFFFFFFFFFFFFFF8;
    }
    v44 = v26[18];
    v45 = (_QWORD *)v26[17];
    if ((unint64_t)v45 >= v44)
    {
      v47 = v26[16];
      v48 = ((uint64_t)v45 - v47) >> 3;
      if ((unint64_t)(v48 + 1) >> 61)
        sub_20BDDF694();
      v49 = v44 - v47;
      v50 = v49 >> 2;
      if (v49 >> 2 <= (unint64_t)(v48 + 1))
        v50 = v48 + 1;
      if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8)
        v51 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v51 = v50;
      v102 = v26 + 18;
      if (v51)
        v52 = (char *)sub_20BDDF6A8((uint64_t)(v26 + 18), v51);
      else
        v52 = 0;
      v53 = &v52[8 * v48];
      v54 = &v52[8 * v51];
      v101 = v54;
      *(_QWORD *)v53 = v41;
      v46 = v53 + 8;
      v100.i64[1] = (uint64_t)(v53 + 8);
      v56 = (_QWORD *)v26[16];
      v55 = (_QWORD *)v26[17];
      if (v55 == v56)
      {
        v58 = vdupq_n_s64((unint64_t)v55);
      }
      else
      {
        do
        {
          v57 = *--v55;
          *((_QWORD *)v53 - 1) = v57;
          v53 -= 8;
          *v55 = 0;
        }
        while (v55 != v56);
        v58 = *((int64x2_t *)v26 + 8);
        v46 = (_QWORD *)v100.i64[1];
        v54 = v101;
      }
      v26[16] = v53;
      v26[17] = v46;
      v100 = v58;
      v59 = (const char *)v26[18];
      v26[18] = v54;
      v101 = v59;
      v99 = (char *)v58.i64[0];
      sub_20BF1EE98((uint64_t)&v99);
    }
    else
    {
      *v45 = v41;
      v46 = v45 + 1;
    }
    v26[17] = v46;
    goto LABEL_53;
  }
  if (v30 != *(char **)a3)
  {
    v99 = "sdf/valueTypeRegistry.cpp";
    v100.i64[0] = (uint64_t)"_AddCoreType";
    v100.i64[1] = 455;
    v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(con"
           "st TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
    LOBYTE(v102) = 0;
    v70 = *a2 & 0xFFFFFFFFFFFFFFF8;
    if (v70)
    {
      v71 = (const char *)(v70 + 16);
      if (*(char *)(v70 + 39) < 0)
        v71 = *(const char **)v71;
    }
    else
    {
      v71 = "";
    }
    v90 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Internal error: unexpected core type for '%s'", v27, v28, v71);
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "coreType.type == tfType", v90) & 1) == 0)
      goto LABEL_62;
  }
  v31 = *((unsigned __int8 *)v26 + 63);
  v32 = (char *)v26[6];
  if ((v31 & 0x80u) == 0)
    v33 = *((unsigned __int8 *)v26 + 63);
  else
    v33 = v26[6];
  v34 = *(unsigned __int8 *)(a4 + 23);
  v35 = (char)v34;
  if ((v34 & 0x80u) != 0)
    v34 = *(_QWORD *)(a4 + 8);
  if (v33 == v34)
  {
    v36 = (const void **)(v26 + 5);
    if (v35 >= 0)
      v27 = (const char *)a4;
    else
      v27 = *(const char **)a4;
    if ((v31 & 0x80) != 0)
    {
      if (!memcmp(*v36, v27, (size_t)v32))
        goto LABEL_26;
    }
    else
    {
      if (!*((_BYTE *)v26 + 63))
        goto LABEL_26;
      while (*(unsigned __int8 *)v36 == *(unsigned __int8 *)v27)
      {
        v36 = (const void **)((char *)v36 + 1);
        ++v27;
        if (!--v31)
          goto LABEL_26;
      }
    }
  }
  v99 = "sdf/valueTypeRegistry.cpp";
  v100.i64[0] = (uint64_t)"_AddCoreType";
  v100.i64[1] = 459;
  v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(const"
         " TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
  LOBYTE(v102) = 0;
  v63 = *a2 & 0xFFFFFFFFFFFFFFF8;
  if (v63)
  {
    v64 = (const char *)(v63 + 16);
    if (*(char *)(v63 + 39) < 0)
      v64 = *(const char **)v64;
  }
  else
  {
    v64 = "";
  }
  v65 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Mismatched C++ name for core type '%s'", v27, v32, v64);
  if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "coreType.cppTypeName == cppTypeName", v65) & 1) == 0)goto LABEL_62;
LABEL_26:
  v38 = v26[8] & 0xFFFFFFFFFFFFFFF8;
  v39 = *a5 & 0xFFFFFFFFFFFFFFF8;
  if (v38 == v39)
    goto LABEL_113;
  v99 = "sdf/valueTypeRegistry.cpp";
  v100.i64[0] = (uint64_t)"_AddCoreType";
  v100.i64[1] = 466;
  v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(const"
         " TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
  LOBYTE(v102) = 0;
  if (v38)
  {
    v72 = (const char *)(v38 + 16);
    if (*(char *)(v38 + 39) < 0)
      v72 = *(const char **)v72;
  }
  else
  {
    v72 = "";
  }
  if (v39)
  {
    v91 = (const char *)(v39 + 16);
    if (*(char *)(v39 + 39) < 0)
      v91 = *(const char **)v91;
  }
  else
  {
    v91 = "";
  }
  TypeName = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a3);
  v95 = *(char *)(TypeName + 23) >= 0 ? TypeName : *(_QWORD *)TypeName;
  v96 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Mismatched roles '%s' and '%s' for core type '%s'", v93, v94, v72, v91, v95);
  if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "coreType.role == role", v96) & 1) != 0)
  {
LABEL_113:
    if (pxrInternal__aapl__pxrReserved__::SdfTupleDimensions::operator==(v26 + 9, a6))
      goto LABEL_114;
    v99 = "sdf/valueTypeRegistry.cpp";
    v100.i64[0] = (uint64_t)"_AddCoreType";
    v100.i64[1] = 471;
    v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(con"
           "st TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
    LOBYTE(v102) = 0;
    v73 = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a3);
    v76 = *(char *)(v73 + 23) >= 0 ? v73 : *(_QWORD *)v73;
    v77 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Mismatched dimensions for core type '%s'", v74, v75, v76);
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "coreType.dim == dimensions", v77) & 1) != 0)
    {
LABEL_114:
      if ((pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::VtValue *)(v26 + 12), a7, v40) & 1) != 0)goto LABEL_115;
      v99 = "sdf/valueTypeRegistry.cpp";
      v100.i64[0] = (uint64_t)"_AddCoreType";
      v100.i64[1] = 476;
      v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType(c"
             "onst TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const VtValue &, TfEnum)";
      LOBYTE(v102) = 0;
      v78 = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a3);
      v81 = *(char *)(v78 + 23) >= 0 ? v78 : *(_QWORD *)v78;
      v82 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Mismatched default value for core type '%s'", v79, v80, v81);
      if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "coreType.value == value", v82) & 1) != 0)
      {
LABEL_115:
        if (*((_DWORD *)v26 + 30) == a10
          && !strcmp((const char *)(*(_QWORD *)(a9 + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v26[14] + 8) & 0x7FFFFFFFFFFFFFFFLL)))
        {
          goto LABEL_31;
        }
        v99 = "sdf/valueTypeRegistry.cpp";
        v100.i64[0] = (uint64_t)"_AddCoreType";
        v100.i64[1] = 481;
        v101 = "const Registry::CoreType *pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Registry::_AddCoreType"
               "(const TfToken &, const TfType &, const std::string &, const TfToken &, const SdfTupleDimensions &, const"
               " VtValue &, TfEnum)";
        LOBYTE(v102) = 0;
        v83 = pxrInternal__aapl__pxrReserved__::TfType::GetTypeName(a3);
        v86 = *(char *)(v83 + 23) >= 0 ? v83 : *(_QWORD *)v83;
        v87 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Mismatched unit for core type '%s'", v84, v85, v86);
        if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v99, "coreType.unit == unit", v87) & 1) != 0)
          goto LABEL_31;
      }
    }
  }
LABEL_62:
  v29 = 0;
LABEL_53:
  if ((v98 & 7) != 0)
  {
    v60 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stlxr(v61 - 2, v60));
  }
  return v29;
}

void sub_20C039E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int *v14;
  unsigned int v15;

  if ((a14 & 7) != 0)
  {
    v14 = (unsigned int *)(a14 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20C039ECC(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD v22[3];

  v6 = a2[1] & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * (v6 + ((v6 + *a2 + (v6 + *a2) * (v6 + *a2)) >> 1)));
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = v7;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = v7 & (v8 - 1);
    }
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == *a2 && (v11[3] & 0xFFFFFFFFFFFFFFF8) == v6)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  sub_20C03A148(a1, v7, a4, (uint64_t)v22);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v19)
  {
    *(_QWORD *)v22[0] = *v19;
    *v19 = v22[0];
  }
  else
  {
    *(_QWORD *)v22[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v22[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*(_QWORD *)v22[0])
    {
      v20 = *(_QWORD *)(*(_QWORD *)v22[0] + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v22[0];
    }
  }
  v11 = (_QWORD *)v22[0];
  v22[0] = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C03A264((uint64_t)v22, 0);
  return v11;
}

void sub_20C03A130(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C03A264((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C03A148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x98uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C03A1B4((uint64_t)(v8 + 2), *a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C03A19C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C03A264(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C03A1B4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;

  *(_QWORD *)a1 = *a2;
  v3 = a2[1];
  *(_QWORD *)(a1 + 8) = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *(_QWORD *)(a1 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)(a1 + 16));
  *(_QWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  v6 = MEMORY[0x24BEDB798];
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = v6;
  *(_DWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  return a1;
}

void sub_20C03A264(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C038518((uint64_t)v2 + 16);
    operator delete(v2);
  }
}

void sub_20C03A2A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20C0384DC(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_20C03A2FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20C038434(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_20C03A350(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20C038334(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void sub_20C03A3A4(uint64_t a1, _QWORD *a2)
{
  void *v3;

  if (a2)
  {
    sub_20C0383FC((uint64_t)(a2 + 19));
    sub_20C0382FC((uint64_t)(a2 + 14));
    v3 = (void *)a2[11];
    if (v3)
    {
      a2[12] = v3;
      operator delete(v3);
    }
    sub_20C0383FC((uint64_t)(a2 + 6));
    sub_20C0384A4((uint64_t)(a2 + 1));
    operator delete(a2);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ConstantNode<long long>::ConstantNode(_QWORD *result, uint64_t a2)
{
  *result = &unk_24C526E58;
  result[1] = a2;
  return result;
}

{
  *result = &unk_24C526E58;
  result[1] = a2;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl12ConstantNodeIxEC1Ex(result, a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ConstantNode<long long>::Evaluate@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  a2[1] = &unk_24C52036B;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ConstantNode<BOOL>::ConstantNode(uint64_t result, char a2)
{
  *(_QWORD *)result = &unk_24C526E80;
  *(_BYTE *)(result + 8) = a2;
  return result;
}

{
  *(_QWORD *)result = &unk_24C526E80;
  *(_BYTE *)(result + 8) = a2;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl12ConstantNodeIbEC1Eb(result, a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ConstantNode<BOOL>::Evaluate@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)a2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(a2 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::equal_to>::ComparisonNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526EA8;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526EA8;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl14ComparisonNodeINSt3__18equal_toEEC1EONS2_10unique_ptrINS0_4NodeENS2_14default_deleteIS6_EEEESA_(result, a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::equal_to>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::type_info *v6;
  char *v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void ***v11;
  uint64_t Type;
  const std::type_info *v14;
  char *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  const char *v22;
  char *v23;
  void *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28[2];
  char v29;
  void *v30[2];
  char v31;
  void *v32;
  char v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  void **v37;
  void **v38;
  uint64_t v39;
  unsigned __int8 **v40;
  char v41;
  __int128 __p;
  char v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[4];

  v47[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v46);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(&v44, *(_QWORD *)(a1 + 16), a2);
  sub_20C03A81C((uint64_t)v46, (uint64_t)&v44, (uint64_t)&v37);
  v9 = v37;
  v8 = v38;
  if (v37 == v38)
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)v46, v6, v7);
    if (Type == pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v14, v15))
    {
      v34 = (char *)&v44;
      sub_20C03A920((uint64_t)v46, (unsigned __int8 **)&v34, a3);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v46, v30);
      v16 = v31;
      v17 = (void **)v30[0];
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v44, v28);
      v20 = v30;
      if (v16 < 0)
        v20 = v17;
      if (v29 >= 0)
        v21 = v28;
      else
        v21 = (void **)v28[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Cannot compare values of type %s and %s", v18, v19, v20, v21);
      if (v33 >= 0)
        v24 = &v32;
      else
        v24 = v32;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "eq", v24);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      v41 = 0;
      v34 = (char *)operator new(0x18uLL);
      v35 = (unsigned __int8 *)v34;
      v36 = (unsigned __int8 *)(v34 + 24);
      v25 = sub_20BFB76A8((uint64_t)&v36, &__p, &v44, v34);
      v26 = (unsigned __int8 *)v34;
      v27 = v36;
      a3[1] = 0;
      a3[2] = v26;
      a3[3] = v25;
      a3[4] = v27;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      sub_20BDE5038((void ***)&v40);
      if (v43 < 0)
        operator delete((void *)__p);
      if (v33 < 0)
        operator delete(v32);
      if (v29 < 0)
        operator delete(v28[0]);
      if (v31 < 0)
        operator delete(v30[0]);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v9;
    v10 = v39;
    a3[3] = v8;
    a3[4] = v10;
    v38 = 0;
    v39 = 0;
    v37 = 0;
  }
  v34 = (char *)&v37;
  sub_20BDE5038((void ***)&v34);
  v37 = (void **)&v45;
  sub_20BDE5038(&v37);
  v11 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  *(_QWORD *)&v44 = v47;
  sub_20BDE5038(v11);
  return sub_20BF4C2D8((uint64_t)v46);
}

void sub_20C03A758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char *a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  a30 = &a33;
  sub_20BDE5038((void ***)&a30);
  sub_20C03BFC8(v43 - 136);
  sub_20C03BFC8(v43 - 96);
  _Unwind_Resume(a1);
}

void sub_20C03A814()
{
  JUMPOUT(0x20C03A80CLL);
}

__int128 *sub_20C03A81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  sub_20C0447E0((__int128 *)a3, a1);
  return sub_20C0447E0((__int128 *)a3, a2);
}

void sub_20C03A864(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDE5038((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *this@<X0>, _QWORD *a2@<X8>)
{
  const std::type_info *v5;
  char *v6;
  char *v7;

  switch(sub_20C044D18(this))
  {
    case 1u:
      v7 = "BOOL";
      goto LABEL_8;
    case 2u:
      v7 = "int";
      goto LABEL_8;
    case 3u:
      v7 = "string";
      goto LABEL_8;
    case 4u:
      v7 = "list";
      goto LABEL_8;
    case 5u:
      v7 = "None";
LABEL_8:
      sub_20BDDC0E4(a2, v7);
      break;
    default:
      pxrInternal__aapl__pxrReserved__::VtValue::GetTypeName(this, v5, v6, (uint64_t)a2);
      break;
  }
}

void sub_20C03A920(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      sub_20C04C09C((unsigned __int8 *)a1, a2, (uint64_t)a3);
      break;
    case 1u:
      v6 = *(_QWORD *)(a1 + 8);
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04C1BC(a3);
      break;
    case 2u:
      v7 = *(_QWORD *)(a1 + 8);
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04C32C(a3);
      break;
    case 3u:
      v8 = *(_QWORD *)(a1 + 8);
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04C49C(a3);
      break;
    case 4u:
      v9 = *(_QWORD *)(a1 + 8);
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04C60C(a3);
      break;
    case 5u:
      v10 = *(_QWORD *)(a1 + 8);
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04C77C(a3);
      break;
    case 6u:
      v11 = *(_QWORD *)(a1 + 8);
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04C8EC(a3);
      break;
    case 7u:
      sub_20C04C12C((_QWORD *)a1, (uint64_t)a2, (uint64_t)a3);
      break;
    case 8u:
      v12 = *(_QWORD *)(a1 + 8);
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04CA5C(a3);
      break;
    case 9u:
      v13 = *(_QWORD *)(a1 + 8);
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04CBCC(a3);
      break;
    case 0xAu:
      v14 = *(_QWORD *)(a1 + 8);
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04CD3C(a3);
      break;
    case 0xBu:
      v15 = *(_QWORD *)(a1 + 8);
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04CEAC(a3);
      break;
    case 0xCu:
      v16 = *(_QWORD *)(a1 + 8);
      if ((v16 & 4) != 0)
        v17 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v17 = *(unsigned __int8 **)a1;
      sub_20C04D01C((uint64_t *)a2, v17, (uint64_t)a3);
      break;
    case 0xDu:
      v18 = *(_QWORD *)(a1 + 8);
      if ((v18 & 4) != 0)
        (*(void (**)(uint64_t))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D08C(a3);
      break;
    case 0xEu:
      v19 = *(_QWORD *)(a1 + 8);
      if ((v19 & 4) != 0)
        (*(void (**)(uint64_t))((v19 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D1FC(a3);
      break;
    case 0xFu:
      v20 = *(_QWORD *)(a1 + 8);
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D36C(a3);
      break;
    case 0x10u:
      v21 = *(_QWORD *)(a1 + 8);
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D4DC(a3);
      break;
    case 0x11u:
      v22 = *(_QWORD *)(a1 + 8);
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D64C(a3);
      break;
    case 0x12u:
      v23 = *(_QWORD *)(a1 + 8);
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D7BC(a3);
      break;
    case 0x13u:
      v24 = *(_QWORD *)(a1 + 8);
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04D92C(a3);
      break;
    case 0x14u:
      v25 = *(_QWORD *)(a1 + 8);
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04DA9C(a3);
      break;
    case 0x15u:
      v26 = *(_QWORD *)(a1 + 8);
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04DC0C(a3);
      break;
    case 0x16u:
      v27 = *(_QWORD *)(a1 + 8);
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04DD7C(a3);
      break;
    case 0x17u:
      v28 = *(_QWORD *)(a1 + 8);
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04DEEC(a3);
      break;
    case 0x18u:
      v29 = *(_QWORD *)(a1 + 8);
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E05C(a3);
      break;
    case 0x19u:
      v30 = *(_QWORD *)(a1 + 8);
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E1CC(a3);
      break;
    case 0x1Au:
      v31 = *(_QWORD *)(a1 + 8);
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E33C(a3);
      break;
    case 0x1Bu:
      v32 = *(_QWORD *)(a1 + 8);
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E4AC(a3);
      break;
    case 0x1Cu:
      v33 = *(_QWORD *)(a1 + 8);
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E61C(a3);
      break;
    case 0x1Du:
      v34 = *(_QWORD *)(a1 + 8);
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E78C(a3);
      break;
    case 0x1Eu:
      v35 = *(_QWORD *)(a1 + 8);
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04E8FC(a3);
      break;
    case 0x1Fu:
      v36 = *(_QWORD *)(a1 + 8);
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04EA6C(a3);
      break;
    case 0x20u:
      v37 = *(_QWORD *)(a1 + 8);
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04EBDC(a3);
      break;
    case 0x21u:
      v38 = *(_QWORD *)(a1 + 8);
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04ED4C(a3);
      break;
    case 0x22u:
      v39 = *(_QWORD *)(a1 + 8);
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04EEBC(a3);
      break;
    case 0x23u:
      v40 = *(_QWORD *)(a1 + 8);
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F02C(a3);
      break;
    case 0x24u:
      v41 = *(_QWORD *)(a1 + 8);
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F19C(a3);
      break;
    case 0x25u:
      v42 = *(_QWORD *)(a1 + 8);
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F30C(a3);
      break;
    case 0x26u:
      v43 = *(_QWORD *)(a1 + 8);
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F47C(a3);
      break;
    case 0x27u:
      v44 = *(_QWORD *)(a1 + 8);
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F5EC(a3);
      break;
    case 0x28u:
      v45 = *(_QWORD *)(a1 + 8);
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F75C(a3);
      break;
    case 0x29u:
      v46 = *(_QWORD *)(a1 + 8);
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04F8CC(a3);
      break;
    case 0x2Au:
      v47 = *(_QWORD *)(a1 + 8);
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04FA3C(a3);
      break;
    case 0x2Bu:
      v48 = *(_QWORD *)(a1 + 8);
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04FBAC(a3);
      break;
    case 0x2Cu:
      v49 = *(_QWORD *)(a1 + 8);
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04FD1C(a3);
      break;
    case 0x2Du:
      v50 = *(_QWORD *)(a1 + 8);
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04FE8C(a3);
      break;
    case 0x2Eu:
      v51 = *(_QWORD *)(a1 + 8);
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C04FFFC(a3);
      break;
    case 0x2Fu:
      v52 = *(_QWORD *)(a1 + 8);
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05016C(a3);
      break;
    case 0x30u:
      v53 = *(_QWORD *)(a1 + 8);
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0502DC(a3);
      break;
    case 0x31u:
      v54 = *(_QWORD *)(a1 + 8);
      if ((v54 & 4) != 0)
        (*(void (**)(uint64_t))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05044C(a3);
      break;
    case 0x32u:
      v55 = *(_QWORD *)(a1 + 8);
      if ((v55 & 4) != 0)
        (*(void (**)(uint64_t))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0505BC(a3);
      break;
    case 0x33u:
      v56 = *(_QWORD *)(a1 + 8);
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05072C(a3);
      break;
    case 0x34u:
      v57 = *(_QWORD *)(a1 + 8);
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05089C(a3);
      break;
    case 0x35u:
      v58 = *(_QWORD *)(a1 + 8);
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C050A0C(a3);
      break;
    case 0x36u:
      v59 = *(_QWORD *)(a1 + 8);
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C050B7C(a3);
      break;
    case 0x37u:
      v60 = *(_QWORD *)(a1 + 8);
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C050CEC(a3);
      break;
    case 0x38u:
      v61 = *(_QWORD *)(a1 + 8);
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C050E5C(a3);
      break;
    case 0x39u:
      v62 = *(_QWORD *)(a1 + 8);
      if ((v62 & 4) != 0)
        (*(void (**)(uint64_t))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C050FCC(a3);
      break;
    case 0x3Au:
      v63 = *(_QWORD *)(a1 + 8);
      if ((v63 & 4) != 0)
        (*(void (**)(uint64_t))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05113C(a3);
      break;
    case 0x3Bu:
      v64 = *(_QWORD *)(a1 + 8);
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0512AC(a3);
      break;
    case 0x3Cu:
      v65 = *(_QWORD *)(a1 + 8);
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05141C(a3);
      break;
    case 0x3Du:
      v66 = *(_QWORD *)(a1 + 8);
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05158C(a3);
      break;
    case 0x3Eu:
      v67 = *(_QWORD *)(a1 + 8);
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0516FC(a3);
      break;
    case 0x3Fu:
      v68 = *(_QWORD *)(a1 + 8);
      if ((v68 & 4) != 0)
        (*(void (**)(uint64_t))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05186C(a3);
      break;
    case 0x40u:
      v69 = *(_QWORD *)(a1 + 8);
      if ((v69 & 4) != 0)
        (*(void (**)(uint64_t))((v69 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0519DC(a3);
      break;
    case 0x41u:
      v70 = *(_QWORD *)(a1 + 8);
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C051B4C(a3);
      break;
    case 0x42u:
      v71 = *(_QWORD *)(a1 + 8);
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C051CBC(a3);
      break;
    case 0x43u:
      v72 = *(_QWORD *)(a1 + 8);
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C051E2C(a3);
      break;
    case 0x44u:
      v73 = *(_QWORD *)(a1 + 8);
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C051F9C(a3);
      break;
    case 0x45u:
      v74 = *(_QWORD *)(a1 + 8);
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05210C(a3);
      break;
    case 0x46u:
      v75 = *(_QWORD *)(a1 + 8);
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05227C(a3);
      break;
    case 0x47u:
      v76 = *(_QWORD *)(a1 + 8);
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0523EC(a3);
      break;
    case 0x48u:
      v77 = *(_QWORD *)(a1 + 8);
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05255C(a3);
      break;
    case 0x49u:
      v78 = *(_QWORD *)(a1 + 8);
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0526CC(a3);
      break;
    case 0x4Au:
      v79 = *(_QWORD *)(a1 + 8);
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05283C(a3);
      break;
    case 0x4Bu:
      v80 = *(_QWORD *)(a1 + 8);
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0529AC(a3);
      break;
    case 0x4Cu:
      v81 = *(_QWORD *)(a1 + 8);
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C052B1C(a3);
      break;
    case 0x4Du:
      v82 = *(_QWORD *)(a1 + 8);
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C052C8C(a3);
      break;
    case 0x4Eu:
      v83 = *(_QWORD *)(a1 + 8);
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C052DFC(a3);
      break;
    case 0x4Fu:
      v84 = *(_QWORD *)(a1 + 8);
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C052F6C(a3);
      break;
    case 0x50u:
      v85 = *(_QWORD *)(a1 + 8);
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0530DC(a3);
      break;
    case 0x51u:
      v86 = *(_QWORD *)(a1 + 8);
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05324C(a3);
      break;
    case 0x52u:
      v87 = *(_QWORD *)(a1 + 8);
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0533BC(a3);
      break;
    case 0x53u:
      v88 = *(_QWORD *)(a1 + 8);
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05352C(a3);
      break;
    case 0x54u:
      v89 = *(_QWORD *)(a1 + 8);
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05369C(a3);
      break;
    case 0x55u:
      v90 = *(_QWORD *)(a1 + 8);
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05380C(a3);
      break;
    case 0x56u:
      v91 = *(_QWORD *)(a1 + 8);
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05397C(a3);
      break;
    case 0x57u:
      v92 = *(_QWORD *)(a1 + 8);
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C053AEC(a3);
      break;
    case 0x58u:
      v93 = *(_QWORD *)(a1 + 8);
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C053C5C(a3);
      break;
    case 0x59u:
      v94 = *(_QWORD *)(a1 + 8);
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C053DCC(a3);
      break;
    case 0x5Au:
      v95 = *(_QWORD *)(a1 + 8);
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C053F3C(a3);
      break;
    case 0x5Bu:
      v96 = *(_QWORD *)(a1 + 8);
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0540AC(a3);
      break;
    case 0x5Cu:
      v97 = *(_QWORD *)(a1 + 8);
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05421C(a3);
      break;
    case 0x5Du:
      v98 = *(_QWORD *)(a1 + 8);
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05438C(a3);
      break;
    case 0x5Eu:
      v99 = *(_QWORD *)(a1 + 8);
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0544FC(a3);
      break;
    case 0x5Fu:
      v100 = *(_QWORD *)(a1 + 8);
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05466C(a3);
      break;
    default:
      sub_20C0547DC((uint64_t)a2, a1, (uint64_t)a3);
      break;
  }
}

uint64_t sub_20C03BFC8(uint64_t a1)
{
  void **v3;

  v3 = (void **)(a1 + 16);
  sub_20BDE5038(&v3);
  return sub_20BF4C2D8(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::not_equal_to>::ComparisonNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526ED0;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526ED0;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl14ComparisonNodeINSt3__112not_equal_toEEC1EONS2_10unique_ptrINS0_4NodeENS2_14default_deleteIS6_EEEESA_(result, a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::not_equal_to>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::type_info *v6;
  char *v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void ***v11;
  uint64_t Type;
  const std::type_info *v14;
  char *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  const char *v22;
  char *v23;
  void *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28[2];
  char v29;
  void *v30[2];
  char v31;
  void *v32;
  char v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  void **v37;
  void **v38;
  uint64_t v39;
  unsigned __int8 **v40;
  char v41;
  __int128 __p;
  char v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[4];

  v47[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v46);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(&v44, *(_QWORD *)(a1 + 16), a2);
  sub_20C03A81C((uint64_t)v46, (uint64_t)&v44, (uint64_t)&v37);
  v9 = v37;
  v8 = v38;
  if (v37 == v38)
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)v46, v6, v7);
    if (Type == pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v14, v15))
    {
      v34 = (char *)&v44;
      sub_20C03C38C((uint64_t)v46, (unsigned __int8 **)&v34, a3);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v46, v30);
      v16 = v31;
      v17 = (void **)v30[0];
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v44, v28);
      v20 = v30;
      if (v16 < 0)
        v20 = v17;
      if (v29 >= 0)
        v21 = v28;
      else
        v21 = (void **)v28[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Cannot compare values of type %s and %s", v18, v19, v20, v21);
      if (v33 >= 0)
        v24 = &v32;
      else
        v24 = v32;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "neq", v24);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      v41 = 0;
      v34 = (char *)operator new(0x18uLL);
      v35 = (unsigned __int8 *)v34;
      v36 = (unsigned __int8 *)(v34 + 24);
      v25 = sub_20BFB76A8((uint64_t)&v36, &__p, &v44, v34);
      v26 = (unsigned __int8 *)v34;
      v27 = v36;
      a3[1] = 0;
      a3[2] = v26;
      a3[3] = v25;
      a3[4] = v27;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      sub_20BDE5038((void ***)&v40);
      if (v43 < 0)
        operator delete((void *)__p);
      if (v33 < 0)
        operator delete(v32);
      if (v29 < 0)
        operator delete(v28[0]);
      if (v31 < 0)
        operator delete(v30[0]);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v9;
    v10 = v39;
    a3[3] = v8;
    a3[4] = v10;
    v38 = 0;
    v39 = 0;
    v37 = 0;
  }
  v34 = (char *)&v37;
  sub_20BDE5038((void ***)&v34);
  v37 = (void **)&v45;
  sub_20BDE5038(&v37);
  v11 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  *(_QWORD *)&v44 = v47;
  sub_20BDE5038(v11);
  return sub_20BF4C2D8((uint64_t)v46);
}

void sub_20C03C2C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char *a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  a30 = &a33;
  sub_20BDE5038((void ***)&a30);
  sub_20C03BFC8(v43 - 136);
  sub_20C03BFC8(v43 - 96);
  _Unwind_Resume(a1);
}

void sub_20C03C384()
{
  JUMPOUT(0x20C03C37CLL);
}

void sub_20C03C38C(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      sub_20C054870((unsigned __int8 *)a1, a2, (uint64_t)a3);
      break;
    case 1u:
      v6 = *(_QWORD *)(a1 + 8);
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C054990(a3);
      break;
    case 2u:
      v7 = *(_QWORD *)(a1 + 8);
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C054B00(a3);
      break;
    case 3u:
      v8 = *(_QWORD *)(a1 + 8);
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C054C70(a3);
      break;
    case 4u:
      v9 = *(_QWORD *)(a1 + 8);
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C054DE0(a3);
      break;
    case 5u:
      v10 = *(_QWORD *)(a1 + 8);
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C054F50(a3);
      break;
    case 6u:
      v11 = *(_QWORD *)(a1 + 8);
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0550C0(a3);
      break;
    case 7u:
      sub_20C054900((_QWORD *)a1, (uint64_t)a2, (uint64_t)a3);
      break;
    case 8u:
      v12 = *(_QWORD *)(a1 + 8);
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055230(a3);
      break;
    case 9u:
      v13 = *(_QWORD *)(a1 + 8);
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0553A0(a3);
      break;
    case 0xAu:
      v14 = *(_QWORD *)(a1 + 8);
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055510(a3);
      break;
    case 0xBu:
      v15 = *(_QWORD *)(a1 + 8);
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055680(a3);
      break;
    case 0xCu:
      v16 = *(_QWORD *)(a1 + 8);
      if ((v16 & 4) != 0)
        v17 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v17 = *(unsigned __int8 **)a1;
      sub_20C0557F0((uint64_t *)a2, v17, (uint64_t)a3);
      break;
    case 0xDu:
      v18 = *(_QWORD *)(a1 + 8);
      if ((v18 & 4) != 0)
        (*(void (**)(uint64_t))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055900(a3);
      break;
    case 0xEu:
      v19 = *(_QWORD *)(a1 + 8);
      if ((v19 & 4) != 0)
        (*(void (**)(uint64_t))((v19 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055A70(a3);
      break;
    case 0xFu:
      v20 = *(_QWORD *)(a1 + 8);
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055BE0(a3);
      break;
    case 0x10u:
      v21 = *(_QWORD *)(a1 + 8);
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055D50(a3);
      break;
    case 0x11u:
      v22 = *(_QWORD *)(a1 + 8);
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C055EC0(a3);
      break;
    case 0x12u:
      v23 = *(_QWORD *)(a1 + 8);
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056030(a3);
      break;
    case 0x13u:
      v24 = *(_QWORD *)(a1 + 8);
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0561A0(a3);
      break;
    case 0x14u:
      v25 = *(_QWORD *)(a1 + 8);
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056310(a3);
      break;
    case 0x15u:
      v26 = *(_QWORD *)(a1 + 8);
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056480(a3);
      break;
    case 0x16u:
      v27 = *(_QWORD *)(a1 + 8);
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0565F0(a3);
      break;
    case 0x17u:
      v28 = *(_QWORD *)(a1 + 8);
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056760(a3);
      break;
    case 0x18u:
      v29 = *(_QWORD *)(a1 + 8);
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0568D0(a3);
      break;
    case 0x19u:
      v30 = *(_QWORD *)(a1 + 8);
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056A40(a3);
      break;
    case 0x1Au:
      v31 = *(_QWORD *)(a1 + 8);
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056BB0(a3);
      break;
    case 0x1Bu:
      v32 = *(_QWORD *)(a1 + 8);
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056D20(a3);
      break;
    case 0x1Cu:
      v33 = *(_QWORD *)(a1 + 8);
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C056E90(a3);
      break;
    case 0x1Du:
      v34 = *(_QWORD *)(a1 + 8);
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057000(a3);
      break;
    case 0x1Eu:
      v35 = *(_QWORD *)(a1 + 8);
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057170(a3);
      break;
    case 0x1Fu:
      v36 = *(_QWORD *)(a1 + 8);
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0572E0(a3);
      break;
    case 0x20u:
      v37 = *(_QWORD *)(a1 + 8);
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057450(a3);
      break;
    case 0x21u:
      v38 = *(_QWORD *)(a1 + 8);
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0575C0(a3);
      break;
    case 0x22u:
      v39 = *(_QWORD *)(a1 + 8);
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057730(a3);
      break;
    case 0x23u:
      v40 = *(_QWORD *)(a1 + 8);
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0578A0(a3);
      break;
    case 0x24u:
      v41 = *(_QWORD *)(a1 + 8);
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057A10(a3);
      break;
    case 0x25u:
      v42 = *(_QWORD *)(a1 + 8);
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057B80(a3);
      break;
    case 0x26u:
      v43 = *(_QWORD *)(a1 + 8);
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057CF0(a3);
      break;
    case 0x27u:
      v44 = *(_QWORD *)(a1 + 8);
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057E60(a3);
      break;
    case 0x28u:
      v45 = *(_QWORD *)(a1 + 8);
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C057FD0(a3);
      break;
    case 0x29u:
      v46 = *(_QWORD *)(a1 + 8);
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058140(a3);
      break;
    case 0x2Au:
      v47 = *(_QWORD *)(a1 + 8);
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0582B0(a3);
      break;
    case 0x2Bu:
      v48 = *(_QWORD *)(a1 + 8);
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058420(a3);
      break;
    case 0x2Cu:
      v49 = *(_QWORD *)(a1 + 8);
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058590(a3);
      break;
    case 0x2Du:
      v50 = *(_QWORD *)(a1 + 8);
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058700(a3);
      break;
    case 0x2Eu:
      v51 = *(_QWORD *)(a1 + 8);
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058870(a3);
      break;
    case 0x2Fu:
      v52 = *(_QWORD *)(a1 + 8);
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0589E0(a3);
      break;
    case 0x30u:
      v53 = *(_QWORD *)(a1 + 8);
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058B50(a3);
      break;
    case 0x31u:
      v54 = *(_QWORD *)(a1 + 8);
      if ((v54 & 4) != 0)
        (*(void (**)(uint64_t))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058CC0(a3);
      break;
    case 0x32u:
      v55 = *(_QWORD *)(a1 + 8);
      if ((v55 & 4) != 0)
        (*(void (**)(uint64_t))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058E30(a3);
      break;
    case 0x33u:
      v56 = *(_QWORD *)(a1 + 8);
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C058FA0(a3);
      break;
    case 0x34u:
      v57 = *(_QWORD *)(a1 + 8);
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059110(a3);
      break;
    case 0x35u:
      v58 = *(_QWORD *)(a1 + 8);
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059280(a3);
      break;
    case 0x36u:
      v59 = *(_QWORD *)(a1 + 8);
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0593F0(a3);
      break;
    case 0x37u:
      v60 = *(_QWORD *)(a1 + 8);
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059560(a3);
      break;
    case 0x38u:
      v61 = *(_QWORD *)(a1 + 8);
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0596D0(a3);
      break;
    case 0x39u:
      v62 = *(_QWORD *)(a1 + 8);
      if ((v62 & 4) != 0)
        (*(void (**)(uint64_t))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059840(a3);
      break;
    case 0x3Au:
      v63 = *(_QWORD *)(a1 + 8);
      if ((v63 & 4) != 0)
        (*(void (**)(uint64_t))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0599B0(a3);
      break;
    case 0x3Bu:
      v64 = *(_QWORD *)(a1 + 8);
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059B20(a3);
      break;
    case 0x3Cu:
      v65 = *(_QWORD *)(a1 + 8);
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059C90(a3);
      break;
    case 0x3Du:
      v66 = *(_QWORD *)(a1 + 8);
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059E00(a3);
      break;
    case 0x3Eu:
      v67 = *(_QWORD *)(a1 + 8);
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C059F70(a3);
      break;
    case 0x3Fu:
      v68 = *(_QWORD *)(a1 + 8);
      if ((v68 & 4) != 0)
        (*(void (**)(uint64_t))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A0E0(a3);
      break;
    case 0x40u:
      v69 = *(_QWORD *)(a1 + 8);
      if ((v69 & 4) != 0)
        (*(void (**)(uint64_t))((v69 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A250(a3);
      break;
    case 0x41u:
      v70 = *(_QWORD *)(a1 + 8);
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A3C0(a3);
      break;
    case 0x42u:
      v71 = *(_QWORD *)(a1 + 8);
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A530(a3);
      break;
    case 0x43u:
      v72 = *(_QWORD *)(a1 + 8);
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A6A0(a3);
      break;
    case 0x44u:
      v73 = *(_QWORD *)(a1 + 8);
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A810(a3);
      break;
    case 0x45u:
      v74 = *(_QWORD *)(a1 + 8);
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05A980(a3);
      break;
    case 0x46u:
      v75 = *(_QWORD *)(a1 + 8);
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05AAF0(a3);
      break;
    case 0x47u:
      v76 = *(_QWORD *)(a1 + 8);
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05AC60(a3);
      break;
    case 0x48u:
      v77 = *(_QWORD *)(a1 + 8);
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05ADD0(a3);
      break;
    case 0x49u:
      v78 = *(_QWORD *)(a1 + 8);
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05AF40(a3);
      break;
    case 0x4Au:
      v79 = *(_QWORD *)(a1 + 8);
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B0B0(a3);
      break;
    case 0x4Bu:
      v80 = *(_QWORD *)(a1 + 8);
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B220(a3);
      break;
    case 0x4Cu:
      v81 = *(_QWORD *)(a1 + 8);
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B390(a3);
      break;
    case 0x4Du:
      v82 = *(_QWORD *)(a1 + 8);
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B500(a3);
      break;
    case 0x4Eu:
      v83 = *(_QWORD *)(a1 + 8);
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B670(a3);
      break;
    case 0x4Fu:
      v84 = *(_QWORD *)(a1 + 8);
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B7E0(a3);
      break;
    case 0x50u:
      v85 = *(_QWORD *)(a1 + 8);
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05B950(a3);
      break;
    case 0x51u:
      v86 = *(_QWORD *)(a1 + 8);
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05BAC0(a3);
      break;
    case 0x52u:
      v87 = *(_QWORD *)(a1 + 8);
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05BC30(a3);
      break;
    case 0x53u:
      v88 = *(_QWORD *)(a1 + 8);
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05BDA0(a3);
      break;
    case 0x54u:
      v89 = *(_QWORD *)(a1 + 8);
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05BF10(a3);
      break;
    case 0x55u:
      v90 = *(_QWORD *)(a1 + 8);
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C080(a3);
      break;
    case 0x56u:
      v91 = *(_QWORD *)(a1 + 8);
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C1F0(a3);
      break;
    case 0x57u:
      v92 = *(_QWORD *)(a1 + 8);
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C360(a3);
      break;
    case 0x58u:
      v93 = *(_QWORD *)(a1 + 8);
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C4D0(a3);
      break;
    case 0x59u:
      v94 = *(_QWORD *)(a1 + 8);
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C640(a3);
      break;
    case 0x5Au:
      v95 = *(_QWORD *)(a1 + 8);
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C7B0(a3);
      break;
    case 0x5Bu:
      v96 = *(_QWORD *)(a1 + 8);
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05C920(a3);
      break;
    case 0x5Cu:
      v97 = *(_QWORD *)(a1 + 8);
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05CA90(a3);
      break;
    case 0x5Du:
      v98 = *(_QWORD *)(a1 + 8);
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05CC00(a3);
      break;
    case 0x5Eu:
      v99 = *(_QWORD *)(a1 + 8);
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05CD70(a3);
      break;
    case 0x5Fu:
      v100 = *(_QWORD *)(a1 + 8);
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05CEE0(a3);
      break;
    default:
      sub_20C05D050((uint64_t)a2, a1, (uint64_t)a3);
      break;
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less>::ComparisonNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526EF8;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526EF8;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl14ComparisonNodeINSt3__14lessEEC1EONS2_10unique_ptrINS0_4NodeENS2_14default_deleteIS6_EEEESA_(result, a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::type_info *v6;
  char *v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void ***v11;
  uint64_t Type;
  const std::type_info *v14;
  char *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  const char *v22;
  char *v23;
  void *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28[2];
  char v29;
  void *v30[2];
  char v31;
  void *v32;
  char v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  void **v37;
  void **v38;
  uint64_t v39;
  unsigned __int8 **v40;
  char v41;
  __int128 __p;
  char v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[4];

  v47[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v46);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(&v44, *(_QWORD *)(a1 + 16), a2);
  sub_20C03A81C((uint64_t)v46, (uint64_t)&v44, (uint64_t)&v37);
  v9 = v37;
  v8 = v38;
  if (v37 == v38)
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)v46, v6, v7);
    if (Type == pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v14, v15))
    {
      v34 = (char *)&v44;
      sub_20C03DDBC((uint64_t)v46, (unsigned __int8 **)&v34, a3);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v46, v30);
      v16 = v31;
      v17 = (void **)v30[0];
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v44, v28);
      v20 = v30;
      if (v16 < 0)
        v20 = v17;
      if (v29 >= 0)
        v21 = v28;
      else
        v21 = (void **)v28[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Cannot compare values of type %s and %s", v18, v19, v20, v21);
      if (v33 >= 0)
        v24 = &v32;
      else
        v24 = v32;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "lt", v24);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      v41 = 0;
      v34 = (char *)operator new(0x18uLL);
      v35 = (unsigned __int8 *)v34;
      v36 = (unsigned __int8 *)(v34 + 24);
      v25 = sub_20BFB76A8((uint64_t)&v36, &__p, &v44, v34);
      v26 = (unsigned __int8 *)v34;
      v27 = v36;
      a3[1] = 0;
      a3[2] = v26;
      a3[3] = v25;
      a3[4] = v27;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      sub_20BDE5038((void ***)&v40);
      if (v43 < 0)
        operator delete((void *)__p);
      if (v33 < 0)
        operator delete(v32);
      if (v29 < 0)
        operator delete(v28[0]);
      if (v31 < 0)
        operator delete(v30[0]);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v9;
    v10 = v39;
    a3[3] = v8;
    a3[4] = v10;
    v38 = 0;
    v39 = 0;
    v37 = 0;
  }
  v34 = (char *)&v37;
  sub_20BDE5038((void ***)&v34);
  v37 = (void **)&v45;
  sub_20BDE5038(&v37);
  v11 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  *(_QWORD *)&v44 = v47;
  sub_20BDE5038(v11);
  return sub_20BF4C2D8((uint64_t)v46);
}

void sub_20C03DCF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char *a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  a30 = &a33;
  sub_20BDE5038((void ***)&a30);
  sub_20C03BFC8(v43 - 136);
  sub_20C03BFC8(v43 - 96);
  _Unwind_Resume(a1);
}

void sub_20C03DDB4()
{
  JUMPOUT(0x20C03DDACLL);
}

void sub_20C03DDBC(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      sub_20C05D0E0((unsigned __int8 *)a1, a2, (uint64_t)a3);
      break;
    case 1u:
      v6 = *(_QWORD *)(a1 + 8);
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05D200(a3);
      break;
    case 2u:
      v7 = *(_QWORD *)(a1 + 8);
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05D370(a3);
      break;
    case 3u:
      v8 = *(_QWORD *)(a1 + 8);
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05D4E0(a3);
      break;
    case 4u:
      v9 = *(_QWORD *)(a1 + 8);
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05D650(a3);
      break;
    case 5u:
      v10 = *(_QWORD *)(a1 + 8);
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05D7C0(a3);
      break;
    case 6u:
      v11 = *(_QWORD *)(a1 + 8);
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05D930(a3);
      break;
    case 7u:
      sub_20C05D170((_QWORD *)a1, (uint64_t)a2, (uint64_t)a3);
      break;
    case 8u:
      v12 = *(_QWORD *)(a1 + 8);
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05DAA0(a3);
      break;
    case 9u:
      v13 = *(_QWORD *)(a1 + 8);
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05DC10(a3);
      break;
    case 0xAu:
      v14 = *(_QWORD *)(a1 + 8);
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05DD80(a3);
      break;
    case 0xBu:
      v15 = *(_QWORD *)(a1 + 8);
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05DEF0(a3);
      break;
    case 0xCu:
      v16 = *(_QWORD *)(a1 + 8);
      if ((v16 & 4) != 0)
        v17 = (const void **)(*(uint64_t (**)(uint64_t))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v17 = *(const void ***)a1;
      sub_20C05E060((uint64_t *)a2, v17, (uint64_t)a3);
      break;
    case 0xDu:
      v18 = *(_QWORD *)(a1 + 8);
      if ((v18 & 4) != 0)
        (*(void (**)(uint64_t))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E0D0(a3);
      break;
    case 0xEu:
      v19 = *(_QWORD *)(a1 + 8);
      if ((v19 & 4) != 0)
        (*(void (**)(uint64_t))((v19 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E240(a3);
      break;
    case 0xFu:
      v20 = *(_QWORD *)(a1 + 8);
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E3B0(a3);
      break;
    case 0x10u:
      v21 = *(_QWORD *)(a1 + 8);
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E520(a3);
      break;
    case 0x11u:
      v22 = *(_QWORD *)(a1 + 8);
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E690(a3);
      break;
    case 0x12u:
      v23 = *(_QWORD *)(a1 + 8);
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E800(a3);
      break;
    case 0x13u:
      v24 = *(_QWORD *)(a1 + 8);
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05E970(a3);
      break;
    case 0x14u:
      v25 = *(_QWORD *)(a1 + 8);
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05EAE0(a3);
      break;
    case 0x15u:
      v26 = *(_QWORD *)(a1 + 8);
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05EC50(a3);
      break;
    case 0x16u:
      v27 = *(_QWORD *)(a1 + 8);
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05EDC0(a3);
      break;
    case 0x17u:
      v28 = *(_QWORD *)(a1 + 8);
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05EF30(a3);
      break;
    case 0x18u:
      v29 = *(_QWORD *)(a1 + 8);
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F0A0(a3);
      break;
    case 0x19u:
      v30 = *(_QWORD *)(a1 + 8);
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F210(a3);
      break;
    case 0x1Au:
      v31 = *(_QWORD *)(a1 + 8);
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F380(a3);
      break;
    case 0x1Bu:
      v32 = *(_QWORD *)(a1 + 8);
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F4F0(a3);
      break;
    case 0x1Cu:
      v33 = *(_QWORD *)(a1 + 8);
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F660(a3);
      break;
    case 0x1Du:
      v34 = *(_QWORD *)(a1 + 8);
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F7D0(a3);
      break;
    case 0x1Eu:
      v35 = *(_QWORD *)(a1 + 8);
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05F940(a3);
      break;
    case 0x1Fu:
      v36 = *(_QWORD *)(a1 + 8);
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05FAB0(a3);
      break;
    case 0x20u:
      v37 = *(_QWORD *)(a1 + 8);
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05FC20(a3);
      break;
    case 0x21u:
      v38 = *(_QWORD *)(a1 + 8);
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05FD90(a3);
      break;
    case 0x22u:
      v39 = *(_QWORD *)(a1 + 8);
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C05FF00(a3);
      break;
    case 0x23u:
      v40 = *(_QWORD *)(a1 + 8);
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060070(a3);
      break;
    case 0x24u:
      v41 = *(_QWORD *)(a1 + 8);
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0601E0(a3);
      break;
    case 0x25u:
      v42 = *(_QWORD *)(a1 + 8);
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060350(a3);
      break;
    case 0x26u:
      v43 = *(_QWORD *)(a1 + 8);
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0604C0(a3);
      break;
    case 0x27u:
      v44 = *(_QWORD *)(a1 + 8);
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060630(a3);
      break;
    case 0x28u:
      v45 = *(_QWORD *)(a1 + 8);
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0607A0(a3);
      break;
    case 0x29u:
      v46 = *(_QWORD *)(a1 + 8);
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060910(a3);
      break;
    case 0x2Au:
      v47 = *(_QWORD *)(a1 + 8);
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060A80(a3);
      break;
    case 0x2Bu:
      v48 = *(_QWORD *)(a1 + 8);
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060BF0(a3);
      break;
    case 0x2Cu:
      v49 = *(_QWORD *)(a1 + 8);
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060D60(a3);
      break;
    case 0x2Du:
      v50 = *(_QWORD *)(a1 + 8);
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C060ED0(a3);
      break;
    case 0x2Eu:
      v51 = *(_QWORD *)(a1 + 8);
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061040(a3);
      break;
    case 0x2Fu:
      v52 = *(_QWORD *)(a1 + 8);
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0611B0(a3);
      break;
    case 0x30u:
      v53 = *(_QWORD *)(a1 + 8);
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061320(a3);
      break;
    case 0x31u:
      v54 = *(_QWORD *)(a1 + 8);
      if ((v54 & 4) != 0)
        (*(void (**)(uint64_t))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061490(a3);
      break;
    case 0x32u:
      v55 = *(_QWORD *)(a1 + 8);
      if ((v55 & 4) != 0)
        (*(void (**)(uint64_t))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061600(a3);
      break;
    case 0x33u:
      v56 = *(_QWORD *)(a1 + 8);
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061770(a3);
      break;
    case 0x34u:
      v57 = *(_QWORD *)(a1 + 8);
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0618E0(a3);
      break;
    case 0x35u:
      v58 = *(_QWORD *)(a1 + 8);
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061A50(a3);
      break;
    case 0x36u:
      v59 = *(_QWORD *)(a1 + 8);
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061BC0(a3);
      break;
    case 0x37u:
      v60 = *(_QWORD *)(a1 + 8);
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061D30(a3);
      break;
    case 0x38u:
      v61 = *(_QWORD *)(a1 + 8);
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C061EA0(a3);
      break;
    case 0x39u:
      v62 = *(_QWORD *)(a1 + 8);
      if ((v62 & 4) != 0)
        (*(void (**)(uint64_t))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062010(a3);
      break;
    case 0x3Au:
      v63 = *(_QWORD *)(a1 + 8);
      if ((v63 & 4) != 0)
        (*(void (**)(uint64_t))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062180(a3);
      break;
    case 0x3Bu:
      v64 = *(_QWORD *)(a1 + 8);
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0622F0(a3);
      break;
    case 0x3Cu:
      v65 = *(_QWORD *)(a1 + 8);
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062460(a3);
      break;
    case 0x3Du:
      v66 = *(_QWORD *)(a1 + 8);
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0625D0(a3);
      break;
    case 0x3Eu:
      v67 = *(_QWORD *)(a1 + 8);
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062740(a3);
      break;
    case 0x3Fu:
      v68 = *(_QWORD *)(a1 + 8);
      if ((v68 & 4) != 0)
        (*(void (**)(uint64_t))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0628B0(a3);
      break;
    case 0x40u:
      v69 = *(_QWORD *)(a1 + 8);
      if ((v69 & 4) != 0)
        (*(void (**)(uint64_t))((v69 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062A20(a3);
      break;
    case 0x41u:
      v70 = *(_QWORD *)(a1 + 8);
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062B90(a3);
      break;
    case 0x42u:
      v71 = *(_QWORD *)(a1 + 8);
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062D00(a3);
      break;
    case 0x43u:
      v72 = *(_QWORD *)(a1 + 8);
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062E70(a3);
      break;
    case 0x44u:
      v73 = *(_QWORD *)(a1 + 8);
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C062FE0(a3);
      break;
    case 0x45u:
      v74 = *(_QWORD *)(a1 + 8);
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063150(a3);
      break;
    case 0x46u:
      v75 = *(_QWORD *)(a1 + 8);
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0632C0(a3);
      break;
    case 0x47u:
      v76 = *(_QWORD *)(a1 + 8);
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063430(a3);
      break;
    case 0x48u:
      v77 = *(_QWORD *)(a1 + 8);
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0635A0(a3);
      break;
    case 0x49u:
      v78 = *(_QWORD *)(a1 + 8);
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063710(a3);
      break;
    case 0x4Au:
      v79 = *(_QWORD *)(a1 + 8);
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063880(a3);
      break;
    case 0x4Bu:
      v80 = *(_QWORD *)(a1 + 8);
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0639F0(a3);
      break;
    case 0x4Cu:
      v81 = *(_QWORD *)(a1 + 8);
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063B60(a3);
      break;
    case 0x4Du:
      v82 = *(_QWORD *)(a1 + 8);
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063CD0(a3);
      break;
    case 0x4Eu:
      v83 = *(_QWORD *)(a1 + 8);
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063E40(a3);
      break;
    case 0x4Fu:
      v84 = *(_QWORD *)(a1 + 8);
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C063FB0(a3);
      break;
    case 0x50u:
      v85 = *(_QWORD *)(a1 + 8);
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064120(a3);
      break;
    case 0x51u:
      v86 = *(_QWORD *)(a1 + 8);
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064290(a3);
      break;
    case 0x52u:
      v87 = *(_QWORD *)(a1 + 8);
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064400(a3);
      break;
    case 0x53u:
      v88 = *(_QWORD *)(a1 + 8);
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064570(a3);
      break;
    case 0x54u:
      v89 = *(_QWORD *)(a1 + 8);
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0646E0(a3);
      break;
    case 0x55u:
      v90 = *(_QWORD *)(a1 + 8);
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064850(a3);
      break;
    case 0x56u:
      v91 = *(_QWORD *)(a1 + 8);
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0649C0(a3);
      break;
    case 0x57u:
      v92 = *(_QWORD *)(a1 + 8);
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064B30(a3);
      break;
    case 0x58u:
      v93 = *(_QWORD *)(a1 + 8);
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064CA0(a3);
      break;
    case 0x59u:
      v94 = *(_QWORD *)(a1 + 8);
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064E10(a3);
      break;
    case 0x5Au:
      v95 = *(_QWORD *)(a1 + 8);
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C064F80(a3);
      break;
    case 0x5Bu:
      v96 = *(_QWORD *)(a1 + 8);
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0650F0(a3);
      break;
    case 0x5Cu:
      v97 = *(_QWORD *)(a1 + 8);
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C065260(a3);
      break;
    case 0x5Du:
      v98 = *(_QWORD *)(a1 + 8);
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0653D0(a3);
      break;
    case 0x5Eu:
      v99 = *(_QWORD *)(a1 + 8);
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C065540(a3);
      break;
    case 0x5Fu:
      v100 = *(_QWORD *)(a1 + 8);
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0656B0(a3);
      break;
    default:
      sub_20C065820((uint64_t)a2, a1, a3);
      break;
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less_equal>::ComparisonNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526F20;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526F20;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl14ComparisonNodeINSt3__110less_equalEEC1EONS2_10unique_ptrINS0_4NodeENS2_14default_deleteIS6_EEEESA_(result, a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less_equal>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::type_info *v6;
  char *v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void ***v11;
  uint64_t Type;
  const std::type_info *v14;
  char *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  const char *v22;
  char *v23;
  void *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28[2];
  char v29;
  void *v30[2];
  char v31;
  void *v32;
  char v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  void **v37;
  void **v38;
  uint64_t v39;
  unsigned __int8 **v40;
  char v41;
  __int128 __p;
  char v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[4];

  v47[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v46);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(&v44, *(_QWORD *)(a1 + 16), a2);
  sub_20C03A81C((uint64_t)v46, (uint64_t)&v44, (uint64_t)&v37);
  v9 = v37;
  v8 = v38;
  if (v37 == v38)
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)v46, v6, v7);
    if (Type == pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v14, v15))
    {
      v34 = (char *)&v44;
      sub_20C03F7EC((uint64_t)v46, (unsigned __int8 **)&v34, a3);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v46, v30);
      v16 = v31;
      v17 = (void **)v30[0];
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v44, v28);
      v20 = v30;
      if (v16 < 0)
        v20 = v17;
      if (v29 >= 0)
        v21 = v28;
      else
        v21 = (void **)v28[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Cannot compare values of type %s and %s", v18, v19, v20, v21);
      if (v33 >= 0)
        v24 = &v32;
      else
        v24 = v32;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "leq", v24);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      v41 = 0;
      v34 = (char *)operator new(0x18uLL);
      v35 = (unsigned __int8 *)v34;
      v36 = (unsigned __int8 *)(v34 + 24);
      v25 = sub_20BFB76A8((uint64_t)&v36, &__p, &v44, v34);
      v26 = (unsigned __int8 *)v34;
      v27 = v36;
      a3[1] = 0;
      a3[2] = v26;
      a3[3] = v25;
      a3[4] = v27;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      sub_20BDE5038((void ***)&v40);
      if (v43 < 0)
        operator delete((void *)__p);
      if (v33 < 0)
        operator delete(v32);
      if (v29 < 0)
        operator delete(v28[0]);
      if (v31 < 0)
        operator delete(v30[0]);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v9;
    v10 = v39;
    a3[3] = v8;
    a3[4] = v10;
    v38 = 0;
    v39 = 0;
    v37 = 0;
  }
  v34 = (char *)&v37;
  sub_20BDE5038((void ***)&v34);
  v37 = (void **)&v45;
  sub_20BDE5038(&v37);
  v11 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  *(_QWORD *)&v44 = v47;
  sub_20BDE5038(v11);
  return sub_20BF4C2D8((uint64_t)v46);
}

void sub_20C03F728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char *a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  a30 = &a33;
  sub_20BDE5038((void ***)&a30);
  sub_20C03BFC8(v43 - 136);
  sub_20C03BFC8(v43 - 96);
  _Unwind_Resume(a1);
}

void sub_20C03F7E4()
{
  JUMPOUT(0x20C03F7DCLL);
}

void sub_20C03F7EC(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      sub_20C065A28((unsigned __int8 *)a1, a2, (uint64_t)a3);
      break;
    case 1u:
      v6 = *(_QWORD *)(a1 + 8);
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C065B48(a3);
      break;
    case 2u:
      v7 = *(_QWORD *)(a1 + 8);
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C065CB8(a3);
      break;
    case 3u:
      v8 = *(_QWORD *)(a1 + 8);
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C065E28(a3);
      break;
    case 4u:
      v9 = *(_QWORD *)(a1 + 8);
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C065F98(a3);
      break;
    case 5u:
      v10 = *(_QWORD *)(a1 + 8);
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066108(a3);
      break;
    case 6u:
      v11 = *(_QWORD *)(a1 + 8);
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066278(a3);
      break;
    case 7u:
      sub_20C065AB8((_QWORD *)a1, (uint64_t)a2, (uint64_t)a3);
      break;
    case 8u:
      v12 = *(_QWORD *)(a1 + 8);
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0663E8(a3);
      break;
    case 9u:
      v13 = *(_QWORD *)(a1 + 8);
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066558(a3);
      break;
    case 0xAu:
      v14 = *(_QWORD *)(a1 + 8);
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0666C8(a3);
      break;
    case 0xBu:
      v15 = *(_QWORD *)(a1 + 8);
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066838(a3);
      break;
    case 0xCu:
      v16 = *(_QWORD *)(a1 + 8);
      if ((v16 & 4) != 0)
        v17 = (_QWORD *)(*(uint64_t (**)(uint64_t))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v17 = *(_QWORD **)a1;
      sub_20C0669A8((uint64_t *)a2, v17, (uint64_t)a3);
      break;
    case 0xDu:
      v18 = *(_QWORD *)(a1 + 8);
      if ((v18 & 4) != 0)
        (*(void (**)(uint64_t))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066A80(a3);
      break;
    case 0xEu:
      v19 = *(_QWORD *)(a1 + 8);
      if ((v19 & 4) != 0)
        (*(void (**)(uint64_t))((v19 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066BF0(a3);
      break;
    case 0xFu:
      v20 = *(_QWORD *)(a1 + 8);
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066D60(a3);
      break;
    case 0x10u:
      v21 = *(_QWORD *)(a1 + 8);
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C066ED0(a3);
      break;
    case 0x11u:
      v22 = *(_QWORD *)(a1 + 8);
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067040(a3);
      break;
    case 0x12u:
      v23 = *(_QWORD *)(a1 + 8);
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0671B0(a3);
      break;
    case 0x13u:
      v24 = *(_QWORD *)(a1 + 8);
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067320(a3);
      break;
    case 0x14u:
      v25 = *(_QWORD *)(a1 + 8);
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067490(a3);
      break;
    case 0x15u:
      v26 = *(_QWORD *)(a1 + 8);
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067600(a3);
      break;
    case 0x16u:
      v27 = *(_QWORD *)(a1 + 8);
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067770(a3);
      break;
    case 0x17u:
      v28 = *(_QWORD *)(a1 + 8);
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0678E0(a3);
      break;
    case 0x18u:
      v29 = *(_QWORD *)(a1 + 8);
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067A50(a3);
      break;
    case 0x19u:
      v30 = *(_QWORD *)(a1 + 8);
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067BC0(a3);
      break;
    case 0x1Au:
      v31 = *(_QWORD *)(a1 + 8);
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067D30(a3);
      break;
    case 0x1Bu:
      v32 = *(_QWORD *)(a1 + 8);
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C067EA0(a3);
      break;
    case 0x1Cu:
      v33 = *(_QWORD *)(a1 + 8);
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068010(a3);
      break;
    case 0x1Du:
      v34 = *(_QWORD *)(a1 + 8);
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068180(a3);
      break;
    case 0x1Eu:
      v35 = *(_QWORD *)(a1 + 8);
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0682F0(a3);
      break;
    case 0x1Fu:
      v36 = *(_QWORD *)(a1 + 8);
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068460(a3);
      break;
    case 0x20u:
      v37 = *(_QWORD *)(a1 + 8);
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0685D0(a3);
      break;
    case 0x21u:
      v38 = *(_QWORD *)(a1 + 8);
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068740(a3);
      break;
    case 0x22u:
      v39 = *(_QWORD *)(a1 + 8);
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0688B0(a3);
      break;
    case 0x23u:
      v40 = *(_QWORD *)(a1 + 8);
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068A20(a3);
      break;
    case 0x24u:
      v41 = *(_QWORD *)(a1 + 8);
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068B90(a3);
      break;
    case 0x25u:
      v42 = *(_QWORD *)(a1 + 8);
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068D00(a3);
      break;
    case 0x26u:
      v43 = *(_QWORD *)(a1 + 8);
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068E70(a3);
      break;
    case 0x27u:
      v44 = *(_QWORD *)(a1 + 8);
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C068FE0(a3);
      break;
    case 0x28u:
      v45 = *(_QWORD *)(a1 + 8);
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069150(a3);
      break;
    case 0x29u:
      v46 = *(_QWORD *)(a1 + 8);
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0692C0(a3);
      break;
    case 0x2Au:
      v47 = *(_QWORD *)(a1 + 8);
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069430(a3);
      break;
    case 0x2Bu:
      v48 = *(_QWORD *)(a1 + 8);
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0695A0(a3);
      break;
    case 0x2Cu:
      v49 = *(_QWORD *)(a1 + 8);
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069710(a3);
      break;
    case 0x2Du:
      v50 = *(_QWORD *)(a1 + 8);
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069880(a3);
      break;
    case 0x2Eu:
      v51 = *(_QWORD *)(a1 + 8);
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0699F0(a3);
      break;
    case 0x2Fu:
      v52 = *(_QWORD *)(a1 + 8);
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069B60(a3);
      break;
    case 0x30u:
      v53 = *(_QWORD *)(a1 + 8);
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069CD0(a3);
      break;
    case 0x31u:
      v54 = *(_QWORD *)(a1 + 8);
      if ((v54 & 4) != 0)
        (*(void (**)(uint64_t))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069E40(a3);
      break;
    case 0x32u:
      v55 = *(_QWORD *)(a1 + 8);
      if ((v55 & 4) != 0)
        (*(void (**)(uint64_t))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C069FB0(a3);
      break;
    case 0x33u:
      v56 = *(_QWORD *)(a1 + 8);
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A120(a3);
      break;
    case 0x34u:
      v57 = *(_QWORD *)(a1 + 8);
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A290(a3);
      break;
    case 0x35u:
      v58 = *(_QWORD *)(a1 + 8);
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A400(a3);
      break;
    case 0x36u:
      v59 = *(_QWORD *)(a1 + 8);
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A570(a3);
      break;
    case 0x37u:
      v60 = *(_QWORD *)(a1 + 8);
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A6E0(a3);
      break;
    case 0x38u:
      v61 = *(_QWORD *)(a1 + 8);
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A850(a3);
      break;
    case 0x39u:
      v62 = *(_QWORD *)(a1 + 8);
      if ((v62 & 4) != 0)
        (*(void (**)(uint64_t))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06A9C0(a3);
      break;
    case 0x3Au:
      v63 = *(_QWORD *)(a1 + 8);
      if ((v63 & 4) != 0)
        (*(void (**)(uint64_t))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06AB30(a3);
      break;
    case 0x3Bu:
      v64 = *(_QWORD *)(a1 + 8);
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06ACA0(a3);
      break;
    case 0x3Cu:
      v65 = *(_QWORD *)(a1 + 8);
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06AE10(a3);
      break;
    case 0x3Du:
      v66 = *(_QWORD *)(a1 + 8);
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06AF80(a3);
      break;
    case 0x3Eu:
      v67 = *(_QWORD *)(a1 + 8);
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B0F0(a3);
      break;
    case 0x3Fu:
      v68 = *(_QWORD *)(a1 + 8);
      if ((v68 & 4) != 0)
        (*(void (**)(uint64_t))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B260(a3);
      break;
    case 0x40u:
      v69 = *(_QWORD *)(a1 + 8);
      if ((v69 & 4) != 0)
        (*(void (**)(uint64_t))((v69 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B3D0(a3);
      break;
    case 0x41u:
      v70 = *(_QWORD *)(a1 + 8);
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B540(a3);
      break;
    case 0x42u:
      v71 = *(_QWORD *)(a1 + 8);
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B6B0(a3);
      break;
    case 0x43u:
      v72 = *(_QWORD *)(a1 + 8);
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B820(a3);
      break;
    case 0x44u:
      v73 = *(_QWORD *)(a1 + 8);
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06B990(a3);
      break;
    case 0x45u:
      v74 = *(_QWORD *)(a1 + 8);
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06BB00(a3);
      break;
    case 0x46u:
      v75 = *(_QWORD *)(a1 + 8);
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06BC70(a3);
      break;
    case 0x47u:
      v76 = *(_QWORD *)(a1 + 8);
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06BDE0(a3);
      break;
    case 0x48u:
      v77 = *(_QWORD *)(a1 + 8);
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06BF50(a3);
      break;
    case 0x49u:
      v78 = *(_QWORD *)(a1 + 8);
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C0C0(a3);
      break;
    case 0x4Au:
      v79 = *(_QWORD *)(a1 + 8);
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C230(a3);
      break;
    case 0x4Bu:
      v80 = *(_QWORD *)(a1 + 8);
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C3A0(a3);
      break;
    case 0x4Cu:
      v81 = *(_QWORD *)(a1 + 8);
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C510(a3);
      break;
    case 0x4Du:
      v82 = *(_QWORD *)(a1 + 8);
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C680(a3);
      break;
    case 0x4Eu:
      v83 = *(_QWORD *)(a1 + 8);
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C7F0(a3);
      break;
    case 0x4Fu:
      v84 = *(_QWORD *)(a1 + 8);
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06C960(a3);
      break;
    case 0x50u:
      v85 = *(_QWORD *)(a1 + 8);
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06CAD0(a3);
      break;
    case 0x51u:
      v86 = *(_QWORD *)(a1 + 8);
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06CC40(a3);
      break;
    case 0x52u:
      v87 = *(_QWORD *)(a1 + 8);
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06CDB0(a3);
      break;
    case 0x53u:
      v88 = *(_QWORD *)(a1 + 8);
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06CF20(a3);
      break;
    case 0x54u:
      v89 = *(_QWORD *)(a1 + 8);
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D090(a3);
      break;
    case 0x55u:
      v90 = *(_QWORD *)(a1 + 8);
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D200(a3);
      break;
    case 0x56u:
      v91 = *(_QWORD *)(a1 + 8);
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D370(a3);
      break;
    case 0x57u:
      v92 = *(_QWORD *)(a1 + 8);
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D4E0(a3);
      break;
    case 0x58u:
      v93 = *(_QWORD *)(a1 + 8);
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D650(a3);
      break;
    case 0x59u:
      v94 = *(_QWORD *)(a1 + 8);
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D7C0(a3);
      break;
    case 0x5Au:
      v95 = *(_QWORD *)(a1 + 8);
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06D930(a3);
      break;
    case 0x5Bu:
      v96 = *(_QWORD *)(a1 + 8);
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06DAA0(a3);
      break;
    case 0x5Cu:
      v97 = *(_QWORD *)(a1 + 8);
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06DC10(a3);
      break;
    case 0x5Du:
      v98 = *(_QWORD *)(a1 + 8);
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06DD80(a3);
      break;
    case 0x5Eu:
      v99 = *(_QWORD *)(a1 + 8);
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06DEF0(a3);
      break;
    case 0x5Fu:
      v100 = *(_QWORD *)(a1 + 8);
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06E060(a3);
      break;
    default:
      sub_20C06E1D0((uint64_t)a2, a1, a3);
      break;
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater>::ComparisonNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526F48;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526F48;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl14ComparisonNodeINSt3__17greaterEEC1EONS2_10unique_ptrINS0_4NodeENS2_14default_deleteIS6_EEEESA_(result, a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::type_info *v6;
  char *v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void ***v11;
  uint64_t Type;
  const std::type_info *v14;
  char *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  const char *v22;
  char *v23;
  void *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28[2];
  char v29;
  void *v30[2];
  char v31;
  void *v32;
  char v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  void **v37;
  void **v38;
  uint64_t v39;
  unsigned __int8 **v40;
  char v41;
  __int128 __p;
  char v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[4];

  v47[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v46);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(&v44, *(_QWORD *)(a1 + 16), a2);
  sub_20C03A81C((uint64_t)v46, (uint64_t)&v44, (uint64_t)&v37);
  v9 = v37;
  v8 = v38;
  if (v37 == v38)
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)v46, v6, v7);
    if (Type == pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v14, v15))
    {
      v34 = (char *)&v44;
      sub_20C04121C((uint64_t)v46, (unsigned __int8 **)&v34, a3);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v46, v30);
      v16 = v31;
      v17 = (void **)v30[0];
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v44, v28);
      v20 = v30;
      if (v16 < 0)
        v20 = v17;
      if (v29 >= 0)
        v21 = v28;
      else
        v21 = (void **)v28[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Cannot compare values of type %s and %s", v18, v19, v20, v21);
      if (v33 >= 0)
        v24 = &v32;
      else
        v24 = v32;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "gt", v24);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      v41 = 0;
      v34 = (char *)operator new(0x18uLL);
      v35 = (unsigned __int8 *)v34;
      v36 = (unsigned __int8 *)(v34 + 24);
      v25 = sub_20BFB76A8((uint64_t)&v36, &__p, &v44, v34);
      v26 = (unsigned __int8 *)v34;
      v27 = v36;
      a3[1] = 0;
      a3[2] = v26;
      a3[3] = v25;
      a3[4] = v27;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      sub_20BDE5038((void ***)&v40);
      if (v43 < 0)
        operator delete((void *)__p);
      if (v33 < 0)
        operator delete(v32);
      if (v29 < 0)
        operator delete(v28[0]);
      if (v31 < 0)
        operator delete(v30[0]);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v9;
    v10 = v39;
    a3[3] = v8;
    a3[4] = v10;
    v38 = 0;
    v39 = 0;
    v37 = 0;
  }
  v34 = (char *)&v37;
  sub_20BDE5038((void ***)&v34);
  v37 = (void **)&v45;
  sub_20BDE5038(&v37);
  v11 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  *(_QWORD *)&v44 = v47;
  sub_20BDE5038(v11);
  return sub_20BF4C2D8((uint64_t)v46);
}

void sub_20C041158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char *a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  a30 = &a33;
  sub_20BDE5038((void ***)&a30);
  sub_20C03BFC8(v43 - 136);
  sub_20C03BFC8(v43 - 96);
  _Unwind_Resume(a1);
}

void sub_20C041214()
{
  JUMPOUT(0x20C04120CLL);
}

void sub_20C04121C(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      sub_20C06E3D8((unsigned __int8 *)a1, a2, (uint64_t)a3);
      break;
    case 1u:
      v6 = *(_QWORD *)(a1 + 8);
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06E4F8(a3);
      break;
    case 2u:
      v7 = *(_QWORD *)(a1 + 8);
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06E668(a3);
      break;
    case 3u:
      v8 = *(_QWORD *)(a1 + 8);
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06E7D8(a3);
      break;
    case 4u:
      v9 = *(_QWORD *)(a1 + 8);
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06E948(a3);
      break;
    case 5u:
      v10 = *(_QWORD *)(a1 + 8);
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06EAB8(a3);
      break;
    case 6u:
      v11 = *(_QWORD *)(a1 + 8);
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06EC28(a3);
      break;
    case 7u:
      sub_20C06E468((_QWORD *)a1, (uint64_t)a2, (uint64_t)a3);
      break;
    case 8u:
      v12 = *(_QWORD *)(a1 + 8);
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06ED98(a3);
      break;
    case 9u:
      v13 = *(_QWORD *)(a1 + 8);
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06EF08(a3);
      break;
    case 0xAu:
      v14 = *(_QWORD *)(a1 + 8);
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F078(a3);
      break;
    case 0xBu:
      v15 = *(_QWORD *)(a1 + 8);
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F1E8(a3);
      break;
    case 0xCu:
      v16 = *(_QWORD *)(a1 + 8);
      if ((v16 & 4) != 0)
        v17 = (_QWORD *)(*(uint64_t (**)(uint64_t))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v17 = *(_QWORD **)a1;
      sub_20C06F358((uint64_t *)a2, v17, (uint64_t)a3);
      break;
    case 0xDu:
      v18 = *(_QWORD *)(a1 + 8);
      if ((v18 & 4) != 0)
        (*(void (**)(uint64_t))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F430(a3);
      break;
    case 0xEu:
      v19 = *(_QWORD *)(a1 + 8);
      if ((v19 & 4) != 0)
        (*(void (**)(uint64_t))((v19 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F5A0(a3);
      break;
    case 0xFu:
      v20 = *(_QWORD *)(a1 + 8);
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F710(a3);
      break;
    case 0x10u:
      v21 = *(_QWORD *)(a1 + 8);
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F880(a3);
      break;
    case 0x11u:
      v22 = *(_QWORD *)(a1 + 8);
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06F9F0(a3);
      break;
    case 0x12u:
      v23 = *(_QWORD *)(a1 + 8);
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06FB60(a3);
      break;
    case 0x13u:
      v24 = *(_QWORD *)(a1 + 8);
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06FCD0(a3);
      break;
    case 0x14u:
      v25 = *(_QWORD *)(a1 + 8);
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06FE40(a3);
      break;
    case 0x15u:
      v26 = *(_QWORD *)(a1 + 8);
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C06FFB0(a3);
      break;
    case 0x16u:
      v27 = *(_QWORD *)(a1 + 8);
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070120(a3);
      break;
    case 0x17u:
      v28 = *(_QWORD *)(a1 + 8);
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070290(a3);
      break;
    case 0x18u:
      v29 = *(_QWORD *)(a1 + 8);
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070400(a3);
      break;
    case 0x19u:
      v30 = *(_QWORD *)(a1 + 8);
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070570(a3);
      break;
    case 0x1Au:
      v31 = *(_QWORD *)(a1 + 8);
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0706E0(a3);
      break;
    case 0x1Bu:
      v32 = *(_QWORD *)(a1 + 8);
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070850(a3);
      break;
    case 0x1Cu:
      v33 = *(_QWORD *)(a1 + 8);
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0709C0(a3);
      break;
    case 0x1Du:
      v34 = *(_QWORD *)(a1 + 8);
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070B30(a3);
      break;
    case 0x1Eu:
      v35 = *(_QWORD *)(a1 + 8);
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070CA0(a3);
      break;
    case 0x1Fu:
      v36 = *(_QWORD *)(a1 + 8);
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070E10(a3);
      break;
    case 0x20u:
      v37 = *(_QWORD *)(a1 + 8);
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C070F80(a3);
      break;
    case 0x21u:
      v38 = *(_QWORD *)(a1 + 8);
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0710F0(a3);
      break;
    case 0x22u:
      v39 = *(_QWORD *)(a1 + 8);
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071260(a3);
      break;
    case 0x23u:
      v40 = *(_QWORD *)(a1 + 8);
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0713D0(a3);
      break;
    case 0x24u:
      v41 = *(_QWORD *)(a1 + 8);
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071540(a3);
      break;
    case 0x25u:
      v42 = *(_QWORD *)(a1 + 8);
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0716B0(a3);
      break;
    case 0x26u:
      v43 = *(_QWORD *)(a1 + 8);
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071820(a3);
      break;
    case 0x27u:
      v44 = *(_QWORD *)(a1 + 8);
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071990(a3);
      break;
    case 0x28u:
      v45 = *(_QWORD *)(a1 + 8);
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071B00(a3);
      break;
    case 0x29u:
      v46 = *(_QWORD *)(a1 + 8);
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071C70(a3);
      break;
    case 0x2Au:
      v47 = *(_QWORD *)(a1 + 8);
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071DE0(a3);
      break;
    case 0x2Bu:
      v48 = *(_QWORD *)(a1 + 8);
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C071F50(a3);
      break;
    case 0x2Cu:
      v49 = *(_QWORD *)(a1 + 8);
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0720C0(a3);
      break;
    case 0x2Du:
      v50 = *(_QWORD *)(a1 + 8);
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072230(a3);
      break;
    case 0x2Eu:
      v51 = *(_QWORD *)(a1 + 8);
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0723A0(a3);
      break;
    case 0x2Fu:
      v52 = *(_QWORD *)(a1 + 8);
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072510(a3);
      break;
    case 0x30u:
      v53 = *(_QWORD *)(a1 + 8);
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072680(a3);
      break;
    case 0x31u:
      v54 = *(_QWORD *)(a1 + 8);
      if ((v54 & 4) != 0)
        (*(void (**)(uint64_t))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0727F0(a3);
      break;
    case 0x32u:
      v55 = *(_QWORD *)(a1 + 8);
      if ((v55 & 4) != 0)
        (*(void (**)(uint64_t))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072960(a3);
      break;
    case 0x33u:
      v56 = *(_QWORD *)(a1 + 8);
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072AD0(a3);
      break;
    case 0x34u:
      v57 = *(_QWORD *)(a1 + 8);
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072C40(a3);
      break;
    case 0x35u:
      v58 = *(_QWORD *)(a1 + 8);
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072DB0(a3);
      break;
    case 0x36u:
      v59 = *(_QWORD *)(a1 + 8);
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C072F20(a3);
      break;
    case 0x37u:
      v60 = *(_QWORD *)(a1 + 8);
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073090(a3);
      break;
    case 0x38u:
      v61 = *(_QWORD *)(a1 + 8);
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073200(a3);
      break;
    case 0x39u:
      v62 = *(_QWORD *)(a1 + 8);
      if ((v62 & 4) != 0)
        (*(void (**)(uint64_t))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073370(a3);
      break;
    case 0x3Au:
      v63 = *(_QWORD *)(a1 + 8);
      if ((v63 & 4) != 0)
        (*(void (**)(uint64_t))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0734E0(a3);
      break;
    case 0x3Bu:
      v64 = *(_QWORD *)(a1 + 8);
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073650(a3);
      break;
    case 0x3Cu:
      v65 = *(_QWORD *)(a1 + 8);
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0737C0(a3);
      break;
    case 0x3Du:
      v66 = *(_QWORD *)(a1 + 8);
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073930(a3);
      break;
    case 0x3Eu:
      v67 = *(_QWORD *)(a1 + 8);
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073AA0(a3);
      break;
    case 0x3Fu:
      v68 = *(_QWORD *)(a1 + 8);
      if ((v68 & 4) != 0)
        (*(void (**)(uint64_t))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073C10(a3);
      break;
    case 0x40u:
      v69 = *(_QWORD *)(a1 + 8);
      if ((v69 & 4) != 0)
        (*(void (**)(uint64_t))((v69 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073D80(a3);
      break;
    case 0x41u:
      v70 = *(_QWORD *)(a1 + 8);
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C073EF0(a3);
      break;
    case 0x42u:
      v71 = *(_QWORD *)(a1 + 8);
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074060(a3);
      break;
    case 0x43u:
      v72 = *(_QWORD *)(a1 + 8);
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0741D0(a3);
      break;
    case 0x44u:
      v73 = *(_QWORD *)(a1 + 8);
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074340(a3);
      break;
    case 0x45u:
      v74 = *(_QWORD *)(a1 + 8);
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0744B0(a3);
      break;
    case 0x46u:
      v75 = *(_QWORD *)(a1 + 8);
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074620(a3);
      break;
    case 0x47u:
      v76 = *(_QWORD *)(a1 + 8);
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074790(a3);
      break;
    case 0x48u:
      v77 = *(_QWORD *)(a1 + 8);
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074900(a3);
      break;
    case 0x49u:
      v78 = *(_QWORD *)(a1 + 8);
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074A70(a3);
      break;
    case 0x4Au:
      v79 = *(_QWORD *)(a1 + 8);
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074BE0(a3);
      break;
    case 0x4Bu:
      v80 = *(_QWORD *)(a1 + 8);
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074D50(a3);
      break;
    case 0x4Cu:
      v81 = *(_QWORD *)(a1 + 8);
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C074EC0(a3);
      break;
    case 0x4Du:
      v82 = *(_QWORD *)(a1 + 8);
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075030(a3);
      break;
    case 0x4Eu:
      v83 = *(_QWORD *)(a1 + 8);
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0751A0(a3);
      break;
    case 0x4Fu:
      v84 = *(_QWORD *)(a1 + 8);
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075310(a3);
      break;
    case 0x50u:
      v85 = *(_QWORD *)(a1 + 8);
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075480(a3);
      break;
    case 0x51u:
      v86 = *(_QWORD *)(a1 + 8);
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0755F0(a3);
      break;
    case 0x52u:
      v87 = *(_QWORD *)(a1 + 8);
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075760(a3);
      break;
    case 0x53u:
      v88 = *(_QWORD *)(a1 + 8);
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0758D0(a3);
      break;
    case 0x54u:
      v89 = *(_QWORD *)(a1 + 8);
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075A40(a3);
      break;
    case 0x55u:
      v90 = *(_QWORD *)(a1 + 8);
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075BB0(a3);
      break;
    case 0x56u:
      v91 = *(_QWORD *)(a1 + 8);
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075D20(a3);
      break;
    case 0x57u:
      v92 = *(_QWORD *)(a1 + 8);
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C075E90(a3);
      break;
    case 0x58u:
      v93 = *(_QWORD *)(a1 + 8);
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C076000(a3);
      break;
    case 0x59u:
      v94 = *(_QWORD *)(a1 + 8);
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C076170(a3);
      break;
    case 0x5Au:
      v95 = *(_QWORD *)(a1 + 8);
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0762E0(a3);
      break;
    case 0x5Bu:
      v96 = *(_QWORD *)(a1 + 8);
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C076450(a3);
      break;
    case 0x5Cu:
      v97 = *(_QWORD *)(a1 + 8);
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0765C0(a3);
      break;
    case 0x5Du:
      v98 = *(_QWORD *)(a1 + 8);
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C076730(a3);
      break;
    case 0x5Eu:
      v99 = *(_QWORD *)(a1 + 8);
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0768A0(a3);
      break;
    case 0x5Fu:
      v100 = *(_QWORD *)(a1 + 8);
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C076A10(a3);
      break;
    default:
      sub_20C076B80((uint64_t)a2, a1, a3);
      break;
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater_equal>::ComparisonNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526F70;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &unk_24C526F70;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  return __ZN32pxrInternal__aapl__pxrReserved__26Sdf_VariableExpressionImpl14ComparisonNodeINSt3__113greater_equalEEC1EONS2_10unique_ptrINS0_4NodeENS2_14default_deleteIS6_EEEESA_(result, a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater_equal>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const std::type_info *v6;
  char *v7;
  void **v8;
  void **v9;
  uint64_t v10;
  void ***v11;
  uint64_t Type;
  const std::type_info *v14;
  char *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  const char *v22;
  char *v23;
  void *v24;
  char *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  void *v28[2];
  char v29;
  void *v30[2];
  char v31;
  void *v32;
  char v33;
  char *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  void **v37;
  void **v38;
  uint64_t v39;
  unsigned __int8 **v40;
  char v41;
  __int128 __p;
  char v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[4];

  v47[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr))(**(_QWORD **)(a1 + 8) + 16))(v46);
  (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(&v44, *(_QWORD *)(a1 + 16), a2);
  sub_20C03A81C((uint64_t)v46, (uint64_t)&v44, (uint64_t)&v37);
  v9 = v37;
  v8 = v38;
  if (v37 == v38)
  {
    Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)v46, v6, v7);
    if (Type == pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v44, v14, v15))
    {
      v34 = (char *)&v44;
      sub_20C042C4C((uint64_t)v46, (unsigned __int8 **)&v34, a3);
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v46, v30);
      v16 = v31;
      v17 = (void **)v30[0];
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v44, v28);
      v20 = v30;
      if (v16 < 0)
        v20 = v17;
      if (v29 >= 0)
        v21 = v28;
      else
        v21 = (void **)v28[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Cannot compare values of type %s and %s", v18, v19, v20, v21);
      if (v33 >= 0)
        v24 = &v32;
      else
        v24 = v32;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v22, v23, "geq", v24);
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      v41 = 0;
      v34 = (char *)operator new(0x18uLL);
      v35 = (unsigned __int8 *)v34;
      v36 = (unsigned __int8 *)(v34 + 24);
      v25 = sub_20BFB76A8((uint64_t)&v36, &__p, &v44, v34);
      v26 = (unsigned __int8 *)v34;
      v27 = v36;
      a3[1] = 0;
      a3[2] = v26;
      a3[3] = v25;
      a3[4] = v27;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v40 = (unsigned __int8 **)&v34;
      sub_20BDE5038((void ***)&v40);
      if (v43 < 0)
        operator delete((void *)__p);
      if (v33 < 0)
        operator delete(v32);
      if (v29 < 0)
        operator delete(v28[0]);
      if (v31 < 0)
        operator delete(v30[0]);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v9;
    v10 = v39;
    a3[3] = v8;
    a3[4] = v10;
    v38 = 0;
    v39 = 0;
    v37 = 0;
  }
  v34 = (char *)&v37;
  sub_20BDE5038((void ***)&v34);
  v37 = (void **)&v45;
  sub_20BDE5038(&v37);
  v11 = (void ***)sub_20BF4C2D8((uint64_t)&v44);
  *(_QWORD *)&v44 = v47;
  sub_20BDE5038(v11);
  return sub_20BF4C2D8((uint64_t)v46);
}

void sub_20C042B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char *a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v43;

  a30 = &a33;
  sub_20BDE5038((void ***)&a30);
  sub_20C03BFC8(v43 - 136);
  sub_20C03BFC8(v43 - 96);
  _Unwind_Resume(a1);
}

void sub_20C042C44()
{
  JUMPOUT(0x20C042C3CLL);
}

void sub_20C042C4C(uint64_t a1@<X0>, unsigned __int8 **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      sub_20C076D88((unsigned __int8 *)a1, a2, (uint64_t)a3);
      break;
    case 1u:
      v6 = *(_QWORD *)(a1 + 8);
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C076EA8(a3);
      break;
    case 2u:
      v7 = *(_QWORD *)(a1 + 8);
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077018(a3);
      break;
    case 3u:
      v8 = *(_QWORD *)(a1 + 8);
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077188(a3);
      break;
    case 4u:
      v9 = *(_QWORD *)(a1 + 8);
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0772F8(a3);
      break;
    case 5u:
      v10 = *(_QWORD *)(a1 + 8);
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077468(a3);
      break;
    case 6u:
      v11 = *(_QWORD *)(a1 + 8);
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0775D8(a3);
      break;
    case 7u:
      sub_20C076E18((_QWORD *)a1, (uint64_t)a2, (uint64_t)a3);
      break;
    case 8u:
      v12 = *(_QWORD *)(a1 + 8);
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077748(a3);
      break;
    case 9u:
      v13 = *(_QWORD *)(a1 + 8);
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0778B8(a3);
      break;
    case 0xAu:
      v14 = *(_QWORD *)(a1 + 8);
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077A28(a3);
      break;
    case 0xBu:
      v15 = *(_QWORD *)(a1 + 8);
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077B98(a3);
      break;
    case 0xCu:
      v16 = *(_QWORD *)(a1 + 8);
      if ((v16 & 4) != 0)
        v17 = (const void **)(*(uint64_t (**)(uint64_t))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v17 = *(const void ***)a1;
      sub_20C077D08((uint64_t *)a2, v17, (uint64_t)a3);
      break;
    case 0xDu:
      v18 = *(_QWORD *)(a1 + 8);
      if ((v18 & 4) != 0)
        (*(void (**)(uint64_t))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077DE0(a3);
      break;
    case 0xEu:
      v19 = *(_QWORD *)(a1 + 8);
      if ((v19 & 4) != 0)
        (*(void (**)(uint64_t))((v19 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C077F50(a3);
      break;
    case 0xFu:
      v20 = *(_QWORD *)(a1 + 8);
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0780C0(a3);
      break;
    case 0x10u:
      v21 = *(_QWORD *)(a1 + 8);
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078230(a3);
      break;
    case 0x11u:
      v22 = *(_QWORD *)(a1 + 8);
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0783A0(a3);
      break;
    case 0x12u:
      v23 = *(_QWORD *)(a1 + 8);
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078510(a3);
      break;
    case 0x13u:
      v24 = *(_QWORD *)(a1 + 8);
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078680(a3);
      break;
    case 0x14u:
      v25 = *(_QWORD *)(a1 + 8);
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0787F0(a3);
      break;
    case 0x15u:
      v26 = *(_QWORD *)(a1 + 8);
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078960(a3);
      break;
    case 0x16u:
      v27 = *(_QWORD *)(a1 + 8);
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078AD0(a3);
      break;
    case 0x17u:
      v28 = *(_QWORD *)(a1 + 8);
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078C40(a3);
      break;
    case 0x18u:
      v29 = *(_QWORD *)(a1 + 8);
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078DB0(a3);
      break;
    case 0x19u:
      v30 = *(_QWORD *)(a1 + 8);
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C078F20(a3);
      break;
    case 0x1Au:
      v31 = *(_QWORD *)(a1 + 8);
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079090(a3);
      break;
    case 0x1Bu:
      v32 = *(_QWORD *)(a1 + 8);
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079200(a3);
      break;
    case 0x1Cu:
      v33 = *(_QWORD *)(a1 + 8);
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079370(a3);
      break;
    case 0x1Du:
      v34 = *(_QWORD *)(a1 + 8);
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0794E0(a3);
      break;
    case 0x1Eu:
      v35 = *(_QWORD *)(a1 + 8);
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079650(a3);
      break;
    case 0x1Fu:
      v36 = *(_QWORD *)(a1 + 8);
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0797C0(a3);
      break;
    case 0x20u:
      v37 = *(_QWORD *)(a1 + 8);
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079930(a3);
      break;
    case 0x21u:
      v38 = *(_QWORD *)(a1 + 8);
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079AA0(a3);
      break;
    case 0x22u:
      v39 = *(_QWORD *)(a1 + 8);
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079C10(a3);
      break;
    case 0x23u:
      v40 = *(_QWORD *)(a1 + 8);
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079D80(a3);
      break;
    case 0x24u:
      v41 = *(_QWORD *)(a1 + 8);
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C079EF0(a3);
      break;
    case 0x25u:
      v42 = *(_QWORD *)(a1 + 8);
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A060(a3);
      break;
    case 0x26u:
      v43 = *(_QWORD *)(a1 + 8);
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A1D0(a3);
      break;
    case 0x27u:
      v44 = *(_QWORD *)(a1 + 8);
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A340(a3);
      break;
    case 0x28u:
      v45 = *(_QWORD *)(a1 + 8);
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A4B0(a3);
      break;
    case 0x29u:
      v46 = *(_QWORD *)(a1 + 8);
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A620(a3);
      break;
    case 0x2Au:
      v47 = *(_QWORD *)(a1 + 8);
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A790(a3);
      break;
    case 0x2Bu:
      v48 = *(_QWORD *)(a1 + 8);
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07A900(a3);
      break;
    case 0x2Cu:
      v49 = *(_QWORD *)(a1 + 8);
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07AA70(a3);
      break;
    case 0x2Du:
      v50 = *(_QWORD *)(a1 + 8);
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07ABE0(a3);
      break;
    case 0x2Eu:
      v51 = *(_QWORD *)(a1 + 8);
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07AD50(a3);
      break;
    case 0x2Fu:
      v52 = *(_QWORD *)(a1 + 8);
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07AEC0(a3);
      break;
    case 0x30u:
      v53 = *(_QWORD *)(a1 + 8);
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B030(a3);
      break;
    case 0x31u:
      v54 = *(_QWORD *)(a1 + 8);
      if ((v54 & 4) != 0)
        (*(void (**)(uint64_t))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B1A0(a3);
      break;
    case 0x32u:
      v55 = *(_QWORD *)(a1 + 8);
      if ((v55 & 4) != 0)
        (*(void (**)(uint64_t))((v55 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B310(a3);
      break;
    case 0x33u:
      v56 = *(_QWORD *)(a1 + 8);
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B480(a3);
      break;
    case 0x34u:
      v57 = *(_QWORD *)(a1 + 8);
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B5F0(a3);
      break;
    case 0x35u:
      v58 = *(_QWORD *)(a1 + 8);
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B760(a3);
      break;
    case 0x36u:
      v59 = *(_QWORD *)(a1 + 8);
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07B8D0(a3);
      break;
    case 0x37u:
      v60 = *(_QWORD *)(a1 + 8);
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07BA40(a3);
      break;
    case 0x38u:
      v61 = *(_QWORD *)(a1 + 8);
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07BBB0(a3);
      break;
    case 0x39u:
      v62 = *(_QWORD *)(a1 + 8);
      if ((v62 & 4) != 0)
        (*(void (**)(uint64_t))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07BD20(a3);
      break;
    case 0x3Au:
      v63 = *(_QWORD *)(a1 + 8);
      if ((v63 & 4) != 0)
        (*(void (**)(uint64_t))((v63 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07BE90(a3);
      break;
    case 0x3Bu:
      v64 = *(_QWORD *)(a1 + 8);
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C000(a3);
      break;
    case 0x3Cu:
      v65 = *(_QWORD *)(a1 + 8);
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C170(a3);
      break;
    case 0x3Du:
      v66 = *(_QWORD *)(a1 + 8);
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C2E0(a3);
      break;
    case 0x3Eu:
      v67 = *(_QWORD *)(a1 + 8);
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C450(a3);
      break;
    case 0x3Fu:
      v68 = *(_QWORD *)(a1 + 8);
      if ((v68 & 4) != 0)
        (*(void (**)(uint64_t))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C5C0(a3);
      break;
    case 0x40u:
      v69 = *(_QWORD *)(a1 + 8);
      if ((v69 & 4) != 0)
        (*(void (**)(uint64_t))((v69 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C730(a3);
      break;
    case 0x41u:
      v70 = *(_QWORD *)(a1 + 8);
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07C8A0(a3);
      break;
    case 0x42u:
      v71 = *(_QWORD *)(a1 + 8);
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07CA10(a3);
      break;
    case 0x43u:
      v72 = *(_QWORD *)(a1 + 8);
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07CB80(a3);
      break;
    case 0x44u:
      v73 = *(_QWORD *)(a1 + 8);
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07CCF0(a3);
      break;
    case 0x45u:
      v74 = *(_QWORD *)(a1 + 8);
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07CE60(a3);
      break;
    case 0x46u:
      v75 = *(_QWORD *)(a1 + 8);
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07CFD0(a3);
      break;
    case 0x47u:
      v76 = *(_QWORD *)(a1 + 8);
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D140(a3);
      break;
    case 0x48u:
      v77 = *(_QWORD *)(a1 + 8);
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D2B0(a3);
      break;
    case 0x49u:
      v78 = *(_QWORD *)(a1 + 8);
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D420(a3);
      break;
    case 0x4Au:
      v79 = *(_QWORD *)(a1 + 8);
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D590(a3);
      break;
    case 0x4Bu:
      v80 = *(_QWORD *)(a1 + 8);
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D700(a3);
      break;
    case 0x4Cu:
      v81 = *(_QWORD *)(a1 + 8);
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D870(a3);
      break;
    case 0x4Du:
      v82 = *(_QWORD *)(a1 + 8);
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07D9E0(a3);
      break;
    case 0x4Eu:
      v83 = *(_QWORD *)(a1 + 8);
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07DB50(a3);
      break;
    case 0x4Fu:
      v84 = *(_QWORD *)(a1 + 8);
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07DCC0(a3);
      break;
    case 0x50u:
      v85 = *(_QWORD *)(a1 + 8);
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07DE30(a3);
      break;
    case 0x51u:
      v86 = *(_QWORD *)(a1 + 8);
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07DFA0(a3);
      break;
    case 0x52u:
      v87 = *(_QWORD *)(a1 + 8);
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E110(a3);
      break;
    case 0x53u:
      v88 = *(_QWORD *)(a1 + 8);
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E280(a3);
      break;
    case 0x54u:
      v89 = *(_QWORD *)(a1 + 8);
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E3F0(a3);
      break;
    case 0x55u:
      v90 = *(_QWORD *)(a1 + 8);
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E560(a3);
      break;
    case 0x56u:
      v91 = *(_QWORD *)(a1 + 8);
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E6D0(a3);
      break;
    case 0x57u:
      v92 = *(_QWORD *)(a1 + 8);
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E840(a3);
      break;
    case 0x58u:
      v93 = *(_QWORD *)(a1 + 8);
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07E9B0(a3);
      break;
    case 0x59u:
      v94 = *(_QWORD *)(a1 + 8);
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07EB20(a3);
      break;
    case 0x5Au:
      v95 = *(_QWORD *)(a1 + 8);
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07EC90(a3);
      break;
    case 0x5Bu:
      v96 = *(_QWORD *)(a1 + 8);
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07EE00(a3);
      break;
    case 0x5Cu:
      v97 = *(_QWORD *)(a1 + 8);
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07EF70(a3);
      break;
    case 0x5Du:
      v98 = *(_QWORD *)(a1 + 8);
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07F0E0(a3);
      break;
    case 0x5Eu:
      v99 = *(_QWORD *)(a1 + 8);
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07F250(a3);
      break;
    case 0x5Fu:
      v100 = *(_QWORD *)(a1 + 8);
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C07F3C0(a3);
      break;
    default:
      sub_20C07F530((uint64_t)a2, a1, a3);
      break;
  }
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::LogicalNode(_QWORD *a1, __n128 *a2)
{
  __n128 result;

  *a1 = &unk_24C526F98;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = &unk_24C526F98;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  BOOL v10;
  char v11;
  const char *v12;
  char *v13;
  void **v14;
  const char *v15;
  char *v16;
  void *v17;
  __int128 *v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void **v23;
  void **v24;
  __int128 v25;
  __int128 *v26;
  __int128 *v27;
  __int128 *v28;
  unint64_t v29;
  __int128 **v30;
  void *v32[2];
  char v33;
  void *v34;
  char v35;
  void *__p[2];
  void *v37;
  __int128 *v38;
  __int128 *v39;
  unint64_t v40;
  void **v41[5];
  uint64_t v42;
  uint64_t v43;
  __int128 *v44;
  __int128 *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v47 = 0;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v4 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a1 + 16) == v4)
    goto LABEL_55;
  v7 = 0;
  do
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(v4 + 8 * v7) + 16))(&v42, *(_QWORD *)(v4 + 8 * v7), a2);
    if (v44 == v45)
    {
      if ((sub_20BFB1AC0((pxrInternal__aapl__pxrReserved__::VtValue *)&v42) & 1) != 0)
      {
        if (v47)
        {
          if ((v47 & 4) != 0)
            v8 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(&v46);
          else
            v8 = &v46;
          if ((v43 & 4) != 0)
            v9 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(&v42);
          else
            v9 = &v42;
          if (*(_BYTE *)v8)
            v10 = *(_BYTE *)v9 == 0;
          else
            v10 = 1;
          v11 = !v10;
          if (v47 && (v47 & 3) != 3)
            (*(void (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 32))(&v46);
        }
        else if ((v43 & 4) != 0)
        {
          v11 = *(_BYTE *)(*(uint64_t (**)(uint64_t *))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(&v42);
          if (v47 && (v47 & 3) != 3)
            (*(void (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 32))(&v46);
        }
        else
        {
          v11 = v42;
        }
        v47 = (unint64_t)&unk_24C51FCF3;
        LOBYTE(v46) = v11;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v42, v32);
        v14 = v32;
        if (v33 < 0)
          v14 = (void **)v32[0];
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument %zu", v12, v13, v14, v7);
        if (v35 >= 0)
          v17 = &v34;
        else
          v17 = v34;
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v15, v16, "and", v17);
        v18 = v39;
        if ((unint64_t)v39 >= v40)
        {
          v20 = 0xAAAAAAAAAAAAAAABLL * (((char *)v39 - (char *)v38) >> 3);
          v21 = v20 + 1;
          if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_20BDDF694();
          if (0x5555555555555556 * ((uint64_t)(v40 - (_QWORD)v38) >> 3) > v21)
            v21 = 0x5555555555555556 * ((uint64_t)(v40 - (_QWORD)v38) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - (_QWORD)v38) >> 3) >= 0x555555555555555)
            v22 = 0xAAAAAAAAAAAAAAALL;
          else
            v22 = v21;
          v41[4] = (void **)&v40;
          if (v22)
            v23 = (void **)sub_20BDE4FF4((uint64_t)&v40, v22);
          else
            v23 = 0;
          v24 = &v23[3 * v20];
          v41[0] = v23;
          v41[1] = v24;
          v41[3] = &v23[3 * v22];
          v25 = *(_OWORD *)__p;
          v24[2] = v37;
          *(_OWORD *)v24 = v25;
          __p[1] = 0;
          v37 = 0;
          __p[0] = 0;
          v41[2] = v24 + 3;
          sub_20BDF34C0((uint64_t *)&v38, v41);
          v26 = v39;
          sub_20BDF3648((uint64_t)v41);
          v39 = v26;
          if (SHIBYTE(v37) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v19 = *(_OWORD *)__p;
          *((_QWORD *)v39 + 2) = v37;
          *v18 = v19;
          __p[1] = 0;
          v37 = 0;
          __p[0] = 0;
          v39 = (__int128 *)((char *)v18 + 24);
        }
        if (v35 < 0)
          operator delete(v34);
        if (v33 < 0)
          operator delete(v32[0]);
      }
    }
    else
    {
      sub_20C07F738((uint64_t *)&v38, v39, (uint64_t)v44, v45, 0xAAAAAAAAAAAAAAABLL * (((char *)v45 - (char *)v44) >> 3));
    }
    v41[0] = (void **)&v44;
    sub_20BDE5038(v41);
    sub_20BF4C2D8((uint64_t)&v42);
    ++v7;
    v4 = *(_QWORD *)(a1 + 8);
  }
  while (v7 < (*(_QWORD *)(a1 + 16) - v4) >> 3);
  v28 = v38;
  v27 = v39;
  if (v38 == v39)
  {
LABEL_55:
    sub_20BF4C200(a3, &v46);
    v30 = (__int128 **)(a3 + 2);
  }
  else
  {
    a3[1] = 0;
    a3[2] = v28;
    v29 = v40;
    a3[3] = v27;
    a3[4] = v29;
    v30 = &v38;
  }
  *v30 = 0;
  v30[1] = 0;
  v30[2] = 0;
  v41[0] = (void **)&v38;
  sub_20BDE5038(v41);
  return sub_20BF4C2D8((uint64_t)&v46);
}

void sub_20C044748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  if (a30 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  if (a18 < 0)
    operator delete(a13);
  sub_20C03BFC8(v34 - 152);
  *(_QWORD *)(v34 - 152) = &a31;
  sub_20BDE5038((void ***)(v34 - 152));
  sub_20BF4C2D8(v34 - 112);
  _Unwind_Resume(a1);
}

__int128 *sub_20C0447E0(__int128 *result, uint64_t a2)
{
  uint64_t v2;
  __int128 *v3;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(__int128 **)(a2 + 24);
  if ((__int128 *)v2 != v3)
    return sub_20C07F738((uint64_t *)result, *((__int128 **)result + 1), v2, v3, 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v3 - v2) >> 3));
  return result;
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::LogicalNode(_QWORD *a1, __n128 *a2)
{
  __n128 result;

  *a1 = &unk_24C526FC0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = &unk_24C526FC0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::Evaluate@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  char v10;
  const char *v11;
  char *v12;
  void **v13;
  const char *v14;
  char *v15;
  void *v16;
  __int128 *v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void **v22;
  void **v23;
  __int128 v24;
  __int128 *v25;
  __int128 *v26;
  __int128 *v27;
  unint64_t v28;
  __int128 **v29;
  void *v31[2];
  char v32;
  void *v33;
  char v34;
  void *__p[2];
  void *v36;
  __int128 *v37;
  __int128 *v38;
  unint64_t v39;
  void **v40[5];
  uint64_t v41;
  uint64_t v42;
  __int128 *v43;
  __int128 *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v46 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 0;
  v4 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a1 + 16) == v4)
    goto LABEL_49;
  v7 = 0;
  do
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(v4 + 8 * v7) + 16))(&v41, *(_QWORD *)(v4 + 8 * v7), a2);
    if (v43 == v44)
    {
      if ((sub_20BFB1AC0((pxrInternal__aapl__pxrReserved__::VtValue *)&v41) & 1) != 0)
      {
        if (v46)
        {
          if ((v46 & 4) != 0)
            v8 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t *))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(&v45);
          else
            v8 = (unsigned __int8 *)&v45;
          if ((v42 & 4) != 0)
            v9 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t *))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(&v41);
          else
            v9 = (unsigned __int8 *)&v41;
          v10 = (*v8 | *v9) != 0;
          if (v46 && (v46 & 3) != 3)
            (*(void (**)(uint64_t *))((v46 & 0xFFFFFFFFFFFFFFF8) + 32))(&v45);
        }
        else if ((v42 & 4) != 0)
        {
          v10 = *(_BYTE *)(*(uint64_t (**)(uint64_t *))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(&v41);
          if (v46 && (v46 & 3) != 3)
            (*(void (**)(uint64_t *))((v46 & 0xFFFFFFFFFFFFFFF8) + 32))(&v45);
        }
        else
        {
          v10 = v41;
        }
        v46 = (unint64_t)&unk_24C51FCF3;
        LOBYTE(v45) = v10;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v41, v31);
        v13 = v31;
        if (v32 < 0)
          v13 = (void **)v31[0];
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument %zu", v11, v12, v13, v7);
        if (v34 >= 0)
          v16 = &v33;
        else
          v16 = v33;
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v14, v15, "or", v16);
        v17 = v38;
        if ((unint64_t)v38 >= v39)
        {
          v19 = 0xAAAAAAAAAAAAAAABLL * (((char *)v38 - (char *)v37) >> 3);
          v20 = v19 + 1;
          if (v19 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_20BDDF694();
          if (0x5555555555555556 * ((uint64_t)(v39 - (_QWORD)v37) >> 3) > v20)
            v20 = 0x5555555555555556 * ((uint64_t)(v39 - (_QWORD)v37) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v39 - (_QWORD)v37) >> 3) >= 0x555555555555555)
            v21 = 0xAAAAAAAAAAAAAAALL;
          else
            v21 = v20;
          v40[4] = (void **)&v39;
          if (v21)
            v22 = (void **)sub_20BDE4FF4((uint64_t)&v39, v21);
          else
            v22 = 0;
          v23 = &v22[3 * v19];
          v40[0] = v22;
          v40[1] = v23;
          v40[3] = &v22[3 * v21];
          v24 = *(_OWORD *)__p;
          v23[2] = v36;
          *(_OWORD *)v23 = v24;
          __p[1] = 0;
          v36 = 0;
          __p[0] = 0;
          v40[2] = v23 + 3;
          sub_20BDF34C0((uint64_t *)&v37, v40);
          v25 = v38;
          sub_20BDF3648((uint64_t)v40);
          v38 = v25;
          if (SHIBYTE(v36) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v18 = *(_OWORD *)__p;
          *((_QWORD *)v38 + 2) = v36;
          *v17 = v18;
          __p[1] = 0;
          v36 = 0;
          __p[0] = 0;
          v38 = (__int128 *)((char *)v17 + 24);
        }
        if (v34 < 0)
          operator delete(v33);
        if (v32 < 0)
          operator delete(v31[0]);
      }
    }
    else
    {
      sub_20C07F738((uint64_t *)&v37, v38, (uint64_t)v43, v44, 0xAAAAAAAAAAAAAAABLL * (((char *)v44 - (char *)v43) >> 3));
    }
    v40[0] = (void **)&v43;
    sub_20BDE5038(v40);
    sub_20BF4C2D8((uint64_t)&v41);
    ++v7;
    v4 = *(_QWORD *)(a1 + 8);
  }
  while (v7 < (*(_QWORD *)(a1 + 16) - v4) >> 3);
  v27 = v37;
  v26 = v38;
  if (v37 == v38)
  {
LABEL_49:
    sub_20BF4C200(a3, &v45);
    v29 = (__int128 **)(a3 + 2);
  }
  else
  {
    a3[1] = 0;
    a3[2] = v27;
    v28 = v39;
    a3[3] = v26;
    a3[4] = v28;
    v29 = &v37;
  }
  *v29 = 0;
  v29[1] = 0;
  v29[2] = 0;
  v40[0] = (void **)&v37;
  sub_20BDE5038(v40);
  return sub_20BF4C2D8((uint64_t)&v45);
}

void sub_20C044C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  if (a30 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  if (a18 < 0)
    operator delete(a13);
  sub_20C03BFC8(v34 - 152);
  *(_QWORD *)(v34 - 152) = &a31;
  sub_20BDE5038((void ***)(v34 - 152));
  sub_20BF4C2D8(v34 - 112);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueType(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *this, const pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  return sub_20C044D18(this);
}

uint64_t sub_20C044D18(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  switch(sub_20C04BFEC((uint64_t)a1))
  {
    case 0u:
      v5 = *((_QWORD *)a1 + 1);
      if ((v5 & 4) != 0)
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      result = 1;
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x24u:
    case 0x25u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Cu:
    case 0x3Du:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x58u:
    case 0x59u:
    case 0x5Au:
    case 0x5Bu:
    case 0x5Cu:
    case 0x5Du:
    case 0x5Eu:
    case 0x5Fu:
      v2 = *((_QWORD *)a1 + 1);
      if ((v2 & 4) != 0)
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v2 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      result = 0;
      break;
    case 7u:
      v6 = *((_QWORD *)a1 + 1);
      if ((v6 & 4) != 0)
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      result = 2;
      break;
    case 0xCu:
      v7 = *((_QWORD *)a1 + 1);
      if ((v7 & 4) != 0)
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      result = 3;
      break;
    case 0x2Fu:
    case 0x36u:
    case 0x3Bu:
      v4 = *((_QWORD *)a1 + 1);
      if ((v4 & 4) != 0)
        (*(void (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      result = 4;
      break;
    default:
      if (*((_QWORD *)a1 + 1))
      {
        if (sub_20C047B98(a1))
          result = 4;
        else
          result = 0;
      }
      else
      {
        result = 5;
      }
      break;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::CoerceIfUnsupportedValueType(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _BYTE v8[40];

  v3 = this;
  if (sub_20BFB2CEC(this))
  {
    v5 = *((_QWORD *)v3 + 1);
    if ((v5 & 4) != 0)
      v3 = (pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
    *a2 = *(int *)v3;
    a2[1] = &unk_24C52036B;
  }
  else if (sub_20BF64C0C(v3))
  {
    v6 = *((_QWORD *)v3 + 1);
    if ((v6 & 4) != 0)
      v7 = (_QWORD *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
    else
      v7 = *(_QWORD **)v3;
    sub_20C044F24((uint64_t)v8, v7[4], v7[4] + 4 * *v7);
    a2[1] = &off_24C5250B0;
    sub_20BF56B40(a2, (uint64_t)v8);
    sub_20BF5618C((uint64_t)v8);
  }
  else
  {
    a2[1] = 0;
  }
}

void sub_20C044F0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C044F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20C0864C4((unint64_t *)a1, a2, a3);
  return a1;
}

void sub_20C044F54(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::EvalContext(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *this, const pxrInternal__aapl__pxrReserved__::VtDictionary *a2)
{
  double result;

  *(_QWORD *)this = a2;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = a2;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::HasVariable(uint64_t **a1, const void **a2)
{
  return sub_20C044FD4(*a1, a2) != 0;
}

uint64_t sub_20C044FD4(uint64_t *a1, const void **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = pxrInternal__aapl__pxrReserved__::VtDictionary::find(a1, a2);
  v5 = v4;
  v6 = pxrInternal__aapl__pxrReserved__::VtDictionary::end((pxrInternal__aapl__pxrReserved__::VtDictionary *)a1);
  if (v5 != v7)
    return v3 + 56;
  v8 = v6;
  result = 0;
  if (v5)
  {
    if (v3 != v8)
      return v3 + 56;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::GetVariable(std::string::size_type a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v23;
  std::string *v24;
  std::string::size_type v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  void **v33;
  unint64_t v34;
  std::string *locale;
  std::string *v36;
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *v37;
  pxrInternal__aapl__pxrReserved__::VtValue *v38;
  pxrInternal__aapl__pxrReserved__::VtValue *v39;
  uint64_t v40;
  std::string **v41;
  unint64_t v42;
  uint64_t *v43;
  const char *v44;
  char *v45;
  const char *v46;
  char *v47;
  std::string *v48;
  unsigned __int8 *v49;
  char *v50;
  void **v51;
  int v52;
  unsigned __int8 *v53;
  const char *v54;
  char *v55;
  uint64_t v56;
  void **v57;
  char *v58;
  std::string *v59;
  std::string *v60;
  unsigned __int8 *v61;
  const std::string::value_type *v62;
  std::string::size_type v63;
  std::locale::__imp *v64;
  uint64_t v65;
  uint64_t v66;
  std::locale v67;
  __int128 v68;
  uint64_t v69;
  std::string v70;
  std::string v71;
  std::string *v72;
  void *__p[2];
  char v74;
  void *v75;
  _OWORD v76[2];
  std::string *v77;
  uint64_t v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = (uint64_t *)(v7 + 8 * (v6 / 0xAA));
  if (v8 == v7)
  {
    v10 = 0;
    v13 = 0;
    v12 = (uint64_t *)(v7 + 8 * ((*(_QWORD *)(a1 + 88) + v6) / 0xAA));
  }
  else
  {
    v10 = *(_QWORD *)(v7 + 8 * (v6 / 0xAA)) + 24 * (v6 % 0xAA);
    v11 = *(_QWORD *)(a1 + 88) + v6;
    v12 = (uint64_t *)(v7 + 8 * (v11 / 0xAA));
    v13 = *v12 + 24 * (v11 % 0xAA);
  }
  sub_20C0866F8(v9, v10, v12, v13, (unsigned __int8 **)a2);
  v15 = *(_QWORD *)(a1 + 56);
  if (*(_QWORD *)(a1 + 64) == v15)
  {
    if (v14)
    {
      v36 = 0;
      locale = 0;
      v67.__locale_ = 0;
      v68 = 0uLL;
LABEL_41:
      sub_20BEE380C(", ", locale, v36, &v70);
      if ((v70.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v48 = &v70;
      else
        v48 = (std::string *)v70.__r_.__value_.__r.__words[0];
      if (*(char *)(a2 + 23) >= 0)
        v49 = (unsigned __int8 *)a2;
      else
        v49 = *(unsigned __int8 **)a2;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Encountered circular variable substitutions: [%s, '%s']", v46, v47, v48, v49);
      memset(&v71, 0, sizeof(v71));
      v77 = &v71;
      LOBYTE(v78) = 0;
      v71.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x18uLL);
      v71.__r_.__value_.__l.__size_ = v71.__r_.__value_.__r.__words[0];
      v71.__r_.__value_.__r.__words[2] = v71.__r_.__value_.__r.__words[0] + 24;
      v50 = sub_20BFB76A8((uint64_t)&v71.__r_.__value_.__r.__words[2], (__int128 *)__p, (__int128 *)&v75, v71.__r_.__value_.__l.__data_);
      *(_QWORD *)&v76[0] = 0;
      *((_QWORD *)&v76[0] + 1) = v71.__r_.__value_.__r.__words[0];
      *(_QWORD *)&v76[1] = v50;
      *((_QWORD *)&v76[1] + 1) = *((_QWORD *)&v71.__r_.__value_.__l + 2);
      memset(&v71, 0, sizeof(v71));
      sub_20BF4C200((_QWORD *)a3, &v75);
      *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
      *(_QWORD *)(a3 + 32) = *((_QWORD *)&v76[1] + 1);
      memset((char *)v76 + 8, 0, 24);
      *(_BYTE *)(a3 + 40) = 1;
      v77 = (std::string *)((char *)v76 + 8);
      sub_20BDE5038((void ***)&v77);
      sub_20BF4C2D8((uint64_t)&v75);
      v77 = &v71;
      sub_20BDE5038((void ***)&v77);
      if (v74 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v70.__r_.__value_.__l.__data_);
      v75 = &v67;
      sub_20BDE5038((void ***)&v75);
      return;
    }
  }
  else
  {
    v16 = *(_QWORD *)(a1 + 80);
    v17 = v16 + *(_QWORD *)(a1 + 88);
    v18 = v17 / 0xAA;
    v19 = *(_QWORD *)(v15 + 8 * (v17 / 0xAA));
    v20 = v17 % 0xAA;
    if (v19 + 24 * v20 != v14)
    {
      v67.__locale_ = 0;
      v68 = 0uLL;
      v21 = (_QWORD *)(v15 + 8 * (v16 / 0xAA));
      v22 = *v21 + 24 * (v16 % 0xAA);
      v23 = *(_QWORD *)(v15 + 8 * v18) + 24 * v20;
      if (v22 == v23)
      {
        v36 = 0;
        locale = 0;
      }
      else
      {
        v65 = a2;
        v66 = a3;
        do
        {
          std::operator+<char>();
          v24 = std::string::append(&v71, "'");
          v25 = v24->__r_.__value_.__r.__words[0];
          __p[0] = (void *)v24->__r_.__value_.__l.__size_;
          *(void **)((char *)__p + 7) = *(void **)((char *)&v24->__r_.__value_.__r.__words[1] + 7);
          v26 = HIBYTE(v24->__r_.__value_.__r.__words[2]);
          v24->__r_.__value_.__l.__size_ = 0;
          v24->__r_.__value_.__r.__words[2] = 0;
          v24->__r_.__value_.__r.__words[0] = 0;
          v27 = v68;
          if ((unint64_t)v68 >= *((_QWORD *)&v68 + 1))
          {
            v29 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v68 - (unint64_t)v67.__locale_) >> 3);
            v30 = v29 + 1;
            if (v29 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_20BDDF694();
            if (0x5555555555555556 * ((uint64_t)(*((_QWORD *)&v68 + 1) - (unint64_t)v67.__locale_) >> 3) > v30)
              v30 = 0x5555555555555556 * ((uint64_t)(*((_QWORD *)&v68 + 1) - (unint64_t)v67.__locale_) >> 3);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v68 + 1) - (unint64_t)v67.__locale_) >> 3) >= 0x555555555555555)
              v31 = 0xAAAAAAAAAAAAAAALL;
            else
              v31 = v30;
            *((_QWORD *)&v76[1] + 1) = (char *)&v68 + 8;
            if (v31)
              v32 = (char *)sub_20BDE4FF4((uint64_t)&v68 + 8, v31);
            else
              v32 = 0;
            v33 = (void **)&v32[24 * v29];
            v75 = v32;
            *(_QWORD *)&v76[0] = v33;
            *(_QWORD *)&v76[1] = &v32[24 * v31];
            *v33 = (void *)v25;
            v33[1] = __p[0];
            *(void **)((char *)v33 + 15) = *(void **)((char *)__p + 7);
            *((_BYTE *)v33 + 23) = v26;
            *((_QWORD *)&v76[0] + 1) = v33 + 3;
            sub_20BDF34C0((uint64_t *)&v67, &v75);
            v28 = v68;
            sub_20BDF3648((uint64_t)&v75);
          }
          else
          {
            *(_QWORD *)v68 = v25;
            *(void **)(v27 + 8) = __p[0];
            *(void **)(v27 + 15) = *(void **)((char *)__p + 7);
            *(_BYTE *)(v27 + 23) = v26;
            v28 = v27 + 24;
          }
          *(_QWORD *)&v68 = v28;
          if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v71.__r_.__value_.__l.__data_);
          v22 += 24;
          if (v22 - *v21 == 4080)
          {
            v34 = v21[1];
            ++v21;
            v22 = v34;
          }
        }
        while (v22 != v23);
        locale = (std::string *)v67.__locale_;
        v36 = (std::string *)v68;
        a2 = v65;
        a3 = v66;
      }
      goto LABEL_41;
    }
  }
  sub_20C086844(a1 + 8, (unsigned __int8 *)a2, a2);
  v37 = (pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)sub_20C044FD4(*(uint64_t **)a1, (const void **)a2);
  v38 = v37;
  if (v37)
  {
    v39 = (pxrInternal__aapl__pxrReserved__::VtValue *)&v77;
    pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::CoerceIfUnsupportedValueType(v37, &v77);
    v40 = v78;
    if (!v78)
      v39 = v38;
    if (sub_20C044D18(v39))
    {
      if (!sub_20BFB4608(v39))
        goto LABEL_53;
      v41 = &v77;
      if (!v40)
        v41 = (std::string **)v38;
      v42 = (unint64_t)v41[1];
      v43 = (v42 & 4) != 0
          ? (uint64_t *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v42 & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 168))(v39)
          : *(uint64_t **)v39;
      if (pxrInternal__aapl__pxrReserved__::Sdf_IsVariableExpression(v43))
      {
        pxrInternal__aapl__pxrReserved__::Sdf_ParseVariableExpression(v43, &v67);
        if (v67.__locale_)
        {
          sub_20C0459F8((_QWORD *)(a1 + 48), (__int128 *)a2);
          v72 = &v71;
          v71.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C5274A8;
          v71.__r_.__value_.__l.__size_ = a1;
          (*(void (**)(void **__return_ptr, std::locale::__imp *, std::string::size_type))(*(_QWORD *)v67.__locale_ + 16))(&v75, v67.__locale_, a1);
          sub_20BF4C200((_QWORD *)a3, &v75);
          *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
          *(_QWORD *)(a3 + 32) = *((_QWORD *)&v76[1] + 1);
          memset((char *)v76 + 8, 0, 24);
          *(_BYTE *)(a3 + 40) = 1;
          __p[0] = (char *)v76 + 8;
          sub_20BDE5038((void ***)__p);
          sub_20BF4C2D8((uint64_t)&v75);
          sub_20BF49CE8(&v71);
        }
        else
        {
          v59 = (std::string *)*((_QWORD *)&v68 + 1);
          v60 = (std::string *)v68;
          if ((_QWORD)v68 == *((_QWORD *)&v68 + 1))
          {
            memset(v76, 0, sizeof(v76));
          }
          else
          {
            do
            {
              if (*(char *)(a2 + 23) >= 0)
                v61 = (unsigned __int8 *)a2;
              else
                v61 = *(unsigned __int8 **)a2;
              pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" (in variable '%s')", v44, v45, v61);
              if (v76[0] >= 0)
                v62 = (const std::string::value_type *)&v75;
              else
                v62 = (const std::string::value_type *)v75;
              if (v76[0] >= 0)
                v63 = HIBYTE(v76[0]);
              else
                v63 = *(_QWORD *)&v76[0];
              std::string::append(v60, v62, v63);
              if (SHIBYTE(v76[0]) < 0)
                operator delete(v75);
              ++v60;
            }
            while (v60 != v59);
            *(_QWORD *)&v76[0] = 0;
            *(_OWORD *)((char *)v76 + 8) = v68;
            *((_QWORD *)&v76[1] + 1) = v69;
            v69 = 0;
            v68 = 0uLL;
          }
          sub_20BF4C200((_QWORD *)a3, &v75);
          *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
          *(_QWORD *)(a3 + 32) = *((_QWORD *)&v76[1] + 1);
          memset((char *)v76 + 8, 0, 24);
          *(_BYTE *)(a3 + 40) = 1;
          sub_20C03BFC8((uint64_t)&v75);
        }
        v75 = &v68;
        sub_20BDE5038((void ***)&v75);
        v64 = v67.__locale_;
        v67.__locale_ = 0;
        if (v64)
          (*(void (**)(std::locale::__imp *))(*(_QWORD *)v64 + 8))(v64);
      }
      else
      {
LABEL_53:
        sub_20BF4C6D0(&v75, v39);
        memset((char *)v76 + 8, 0, 24);
        sub_20BF4C200((_QWORD *)a3, &v75);
        *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
        *(_QWORD *)(a3 + 32) = *((_QWORD *)&v76[1] + 1);
        memset((char *)v76 + 8, 0, 24);
        *(_BYTE *)(a3 + 40) = 1;
        v67.__locale_ = (std::locale::__imp *)((char *)v76 + 8);
        sub_20BDE5038((void ***)&v67);
        sub_20BF4C2D8((uint64_t)&v75);
      }
    }
    else
    {
      v52 = *(char *)(a2 + 23);
      v53 = *(unsigned __int8 **)a2;
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName(v39, __p);
      if (v52 >= 0)
        v56 = a2;
      else
        v56 = (uint64_t)v53;
      if (v74 >= 0)
        v57 = __p;
      else
        v57 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Variable '%s' has unsupported type %s", v54, v55, v56, v57);
      v67.__locale_ = 0;
      v68 = 0uLL;
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
      v70.__r_.__value_.__s.__data_[8] = 0;
      v67.__locale_ = (std::locale::__imp *)operator new(0x18uLL);
      *(std::locale *)&v68 = v67;
      *((_QWORD *)&v68 + 1) = (char *)v67.__locale_ + 24;
      v58 = sub_20BFB76A8((uint64_t)&v68 + 8, (__int128 *)&v71, (__int128 *)&v72, (char *)v67.__locale_);
      *(_QWORD *)&v76[0] = 0;
      *((std::locale *)&v76[0] + 1) = v67;
      *(_QWORD *)&v76[1] = v58;
      *((_QWORD *)&v76[1] + 1) = *((_QWORD *)&v68 + 1);
      v67.__locale_ = 0;
      v68 = 0uLL;
      sub_20BF4C200((_QWORD *)a3, &v75);
      *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
      *(_QWORD *)(a3 + 32) = *((_QWORD *)&v76[1] + 1);
      memset((char *)v76 + 8, 0, 24);
      *(_BYTE *)(a3 + 40) = 1;
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)v76 + 8;
      sub_20BDE5038((void ***)&v70);
      sub_20BF4C2D8((uint64_t)&v75);
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
      sub_20BDE5038((void ***)&v70);
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v71.__r_.__value_.__l.__data_);
      if (v74 < 0)
        operator delete(__p[0]);
    }
    v51 = (void **)&v77;
  }
  else
  {
    memset(v76, 0, sizeof(v76));
    sub_20BF4C200((_QWORD *)a3, &v75);
    *(_OWORD *)(a3 + 16) = *(_OWORD *)((char *)v76 + 8);
    *(_QWORD *)(a3 + 32) = *((_QWORD *)&v76[1] + 1);
    memset((char *)v76 + 8, 0, 24);
    *(_BYTE *)(a3 + 40) = 0;
    v67.__locale_ = (std::locale::__imp *)((char *)v76 + 8);
    sub_20BDE5038((void ***)&v67);
    v51 = &v75;
  }
  sub_20BF4C2D8((uint64_t)v51);
}

void sub_20C04588C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  sub_20BF49CE8(&__p);
  a37 = &a15;
  sub_20BDE5038((void ***)&a37);
  if (a14)
    (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  sub_20BF4C2D8(v42 - 112);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C0459F8(_QWORD *a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *result;
  __int128 v9;

  v4 = a1[1];
  v5 = a1[2];
  v6 = 170 * ((v5 - v4) >> 3) - 1;
  if (v5 == v4)
    v6 = 0;
  if (v6 == a1[5] + a1[4])
  {
    sub_20C086AC0(a1);
    v4 = a1[1];
    v5 = a1[2];
  }
  if (v5 == v4)
  {
    result = 0;
  }
  else
  {
    v7 = a1[5] + a1[4];
    result = (_QWORD *)(*(_QWORD *)(v4 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  }
  if (*((char *)a2 + 23) < 0)
  {
    result = sub_20BDDBFAC(result, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v9 = *a2;
    result[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)result = v9;
  }
  ++a1[5];
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode::StringNode(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v7;
  uint64_t v8;

  *a1 = off_24C526FE8;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  *(_OWORD *)(a1 + 1) = *(_OWORD *)a2;
  a1[3] = *(_QWORD *)(a2 + 16);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v3 = a1[1];
  v4 = a1[2];
  while (v3 != v4)
  {
    if (!*(_BYTE *)(v3 + 24))
    {
      pxrInternal__aapl__pxrReserved__::TfEscapeString(v3, &v7);
      if (*(char *)(v3 + 23) < 0)
        operator delete(*(void **)v3);
      v5 = v7;
      *(_QWORD *)(v3 + 16) = v8;
      *(_OWORD *)v3 = v5;
    }
    v3 += 32;
  }
  return a1;
}

void sub_20C045B78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BED2E10((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode::Evaluate(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  std::string::size_type v8;
  std::string::size_type v9;
  BOOL v10;
  const std::string::value_type *v11;
  int v12;
  const std::string::value_type *v13;
  std::string::size_type v14;
  std::string::size_type v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  char *v19;
  void **v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25[2];
  char v26;
  char v27;
  std::string v28;
  void **v29;
  char v30;
  void *__p[2];
  char v32;
  __int128 v33;
  _QWORD v34[4];
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  memset(&v28, 0, sizeof(v28));
  v4 = *((_QWORD *)this + 1);
  v5 = *((_QWORD *)this + 2);
  if (v4 == v5)
  {
LABEL_30:
    *(_QWORD *)(a3 + 8) = &off_24C520700;
    sub_20BF77444((unsigned int **)a3, (uint64_t)&v28);
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    *(_QWORD *)(a3 + 32) = 0;
    goto LABEL_31;
  }
  while (1)
  {
    if (!*(_BYTE *)(v4 + 24))
    {
      v12 = *(char *)(v4 + 23);
      if (v12 >= 0)
        v13 = (const std::string::value_type *)v4;
      else
        v13 = *(const std::string::value_type **)v4;
      if (v12 >= 0)
        v14 = *(unsigned __int8 *)(v4 + 23);
      else
        v14 = *(_QWORD *)(v4 + 8);
      std::string::append(&v28, v13, v14);
      goto LABEL_27;
    }
    v36 = 0u;
    v37 = 0u;
    v27 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::GetVariable((std::string::size_type)a2, v4, (uint64_t)&v33);
    __p[0] = &v35;
    __p[1] = &v27;
    sub_20C045EF0((uint64_t *)__p, (uint64_t)&v33);
    __p[0] = v34;
    sub_20BDE5038((void ***)__p);
    sub_20BF4C2D8((uint64_t)&v33);
    if (v27)
      break;
    v8 = *(unsigned __int8 *)(v4 + 23);
    v9 = *(_QWORD *)(v4 + 8);
    v10 = (v8 & 0x80u) != 0;
    if ((v8 & 0x80u) == 0)
      v11 = (const std::string::value_type *)v4;
    else
      v11 = *(const std::string::value_type **)v4;
LABEL_21:
    if (v10)
      v15 = v9;
    else
      v15 = v8;
    std::string::append(&v28, v11, v15);
LABEL_26:
    *(_QWORD *)&v33 = (char *)&v36 + 8;
    sub_20BDE5038((void ***)&v33);
    sub_20BF4C2D8((uint64_t)&v35);
LABEL_27:
    v4 += 32;
    if (v4 == v5)
      goto LABEL_30;
  }
  if (!(_QWORD)v36)
  {
    v17 = *((_QWORD *)&v36 + 1);
    v16 = v37;
    if (*((_QWORD *)&v36 + 1) != (_QWORD)v37)
    {
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = v17;
      v24 = *((_QWORD *)&v37 + 1);
      *(_QWORD *)(a3 + 24) = v16;
      *(_QWORD *)(a3 + 32) = v24;
      v37 = 0uLL;
      *((_QWORD *)&v36 + 1) = 0;
      goto LABEL_44;
    }
    goto LABEL_26;
  }
  if (sub_20BFB4608((pxrInternal__aapl__pxrReserved__::VtValue *)&v35))
  {
    if ((v36 & 4) != 0)
      v7 = (*(uint64_t (**)(uint64_t *))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(&v35);
    else
      v7 = v35;
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(_QWORD *)(v7 + 8);
    v10 = (v8 & 0x80u) != 0;
    if ((v8 & 0x80u) == 0)
      v11 = (const std::string::value_type *)v7;
    else
      v11 = *(const std::string::value_type **)v7;
    goto LABEL_21;
  }
  if (*(char *)(v4 + 23) < 0)
    v4 = *(_QWORD *)v4;
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v35, v25);
  if (v26 >= 0)
    v20 = v25;
  else
    v20 = (void **)v25[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"String value required for substituting variable '%s', got %s.", v18, v19, v4, v20);
  v33 = 0uLL;
  v34[0] = 0;
  v29 = (void **)&v33;
  v30 = 0;
  *(_QWORD *)&v33 = operator new(0x18uLL);
  *((_QWORD *)&v33 + 1) = v33;
  v34[0] = v33 + 24;
  v21 = sub_20BFB76A8((uint64_t)v34, (__int128 *)__p, &v33, (char *)v33);
  v22 = v33;
  v23 = v34[0];
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = v21;
  *(_QWORD *)(a3 + 32) = v23;
  v33 = 0uLL;
  v34[0] = 0;
  v29 = (void **)&v33;
  sub_20BDE5038(&v29);
  if (v32 < 0)
    operator delete(__p[0]);
  if (v26 < 0)
    operator delete(v25[0]);
LABEL_44:
  *(_QWORD *)&v33 = (char *)&v36 + 8;
  sub_20BDE5038((void ***)&v33);
  sub_20BF4C2D8((uint64_t)&v35);
LABEL_31:
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__r_.__value_.__l.__data_);
}

void sub_20C045E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  sub_20BDE5038(&a24);
  if (a31 < 0)
    operator delete(__p);
  if (a16 < 0)
    operator delete(a11);
  sub_20C03BFC8(v33 - 128);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C045EF0(uint64_t *a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)*a1;
  sub_20BF4B5D8((_QWORD *)*a1, (_QWORD *)a2);
  sub_20BE7598C(v4 + 2);
  *((_OWORD *)v4 + 1) = *(_OWORD *)(a2 + 16);
  v4[4] = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)a1[1] = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode::VariableNode(uint64_t a1, __n128 *a2)
{
  __n128 result;

  *(_QWORD *)a1 = &off_24C527010;
  result = *a2;
  *(_QWORD *)(a1 + 24) = a2[1].n128_u64[0];
  *(__n128 *)(a1 + 8) = result;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  a2->n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *(_QWORD *)a1 = &off_24C527010;
  result = *a2;
  *(_QWORD *)(a1 + 24) = a2[1].n128_u64[0];
  *(__n128 *)(a1 + 8) = result;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  a2->n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  const char *v6;
  char *v7;
  char *v8;
  void **v9;
  void **v10;
  void **v12;
  void **v13;
  void **v14;
  void ***v15;
  char v16;
  __int128 __p;
  char v18;
  __int128 v19;
  __int128 *v20;
  __int128 *v21;
  char v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v5 = (_QWORD *)((char *)this + 8);
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext::GetVariable((std::string::size_type)a2, (uint64_t)this + 8, (uint64_t)&v19);
  if (v22)
  {
    sub_20BF4C6D0((_QWORD *)a3, &v19);
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    *(_QWORD *)(a3 + 32) = 0;
    sub_20BE78B98((char *)(a3 + 16), v20, v21, 0xAAAAAAAAAAAAAAABLL * (((char *)v21 - (char *)v20) >> 3));
  }
  else
  {
    if (*((char *)this + 31) < 0)
      v5 = (_QWORD *)*v5;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"No value for variable '%s'", v6, v7, v5);
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = &v12;
    v16 = 0;
    v12 = (void **)operator new(0x18uLL);
    v13 = v12;
    v14 = v12 + 3;
    v8 = sub_20BFB76A8((uint64_t)&v14, &__p, &v19, (char *)v12);
    v9 = v12;
    v10 = v14;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = v9;
    *(_QWORD *)(a3 + 24) = v8;
    *(_QWORD *)(a3 + 32) = v10;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = &v12;
    sub_20BDE5038((void ***)&v15);
    if (v18 < 0)
      operator delete((void *)__p);
  }
  v12 = (void **)&v20;
  sub_20BDE5038(&v12);
  return sub_20BF4C2D8((uint64_t)&v19);
}

void sub_20C046108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  sub_20BDE5038(&a13);
  if (a20 < 0)
    operator delete(__p);
  sub_20C03BFC8((uint64_t)&a21);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::NoneNode::NoneNode(_QWORD *this)
{
  *this = &off_24C527038;
  return this;
}

{
  *this = &off_24C527038;
  return this;
}

double pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::NoneNode::Evaluate@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  return result;
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode::ListNode(_QWORD *a1, __n128 *a2)
{
  __n128 result;

  *a1 = off_24C527060;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = off_24C527060;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ListNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v7;
  const char *v8;
  char *v9;
  void **v10;
  __int128 *v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void **v16;
  void **v17;
  __int128 v18;
  __int128 *v19;
  __int128 *v20;
  __int128 *v21;
  unint64_t v22;
  __int128 **v23;
  void *v25[2];
  char v26;
  void *__p[2];
  void *v28;
  __int128 *v29;
  __int128 *v30;
  unint64_t v31;
  void **v32[5];
  _QWORD v33[2];
  __int128 *v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v37 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v4 = *((_QWORD *)this + 1);
  if (*((_QWORD *)this + 2) == v4)
    goto LABEL_27;
  v7 = 0;
  do
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *))(**(_QWORD **)(v4 + 8 * v7) + 16))(v33, *(_QWORD *)(v4 + 8 * v7), a2);
    if (v34 == v35)
    {
      if ((sub_20C046548((uint64_t)v33, (pxrInternal__aapl__pxrReserved__::VtValue *)&v36) & 1) == 0)
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)v33, v25);
        if (v26 >= 0)
          v10 = v25;
        else
          v10 = (void **)v25[0];
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Unexpected value of type %s in list at element %zu", v8, v9, v10, v7);
        v11 = v30;
        if ((unint64_t)v30 >= v31)
        {
          v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v30 - (char *)v29) >> 3);
          v14 = v13 + 1;
          if (v13 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_20BDDF694();
          if (0x5555555555555556 * ((uint64_t)(v31 - (_QWORD)v29) >> 3) > v14)
            v14 = 0x5555555555555556 * ((uint64_t)(v31 - (_QWORD)v29) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - (_QWORD)v29) >> 3) >= 0x555555555555555)
            v15 = 0xAAAAAAAAAAAAAAALL;
          else
            v15 = v14;
          v32[4] = (void **)&v31;
          if (v15)
            v16 = (void **)sub_20BDE4FF4((uint64_t)&v31, v15);
          else
            v16 = 0;
          v17 = &v16[3 * v13];
          v32[0] = v16;
          v32[1] = v17;
          v32[3] = &v16[3 * v15];
          v18 = *(_OWORD *)__p;
          v17[2] = v28;
          *(_OWORD *)v17 = v18;
          __p[1] = 0;
          v28 = 0;
          __p[0] = 0;
          v32[2] = v17 + 3;
          sub_20BDF34C0((uint64_t *)&v29, v32);
          v19 = v30;
          sub_20BDF3648((uint64_t)v32);
          v30 = v19;
          if (SHIBYTE(v28) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v12 = *(_OWORD *)__p;
          *((_QWORD *)v30 + 2) = v28;
          *v11 = v12;
          __p[1] = 0;
          v28 = 0;
          __p[0] = 0;
          v30 = (__int128 *)((char *)v11 + 24);
        }
        if (v26 < 0)
          operator delete(v25[0]);
      }
    }
    else
    {
      sub_20C07F738((uint64_t *)&v29, v30, (uint64_t)v34, v35, 0xAAAAAAAAAAAAAAABLL * (((char *)v35 - (char *)v34) >> 3));
    }
    v32[0] = (void **)&v34;
    sub_20BDE5038(v32);
    sub_20BF4C2D8((uint64_t)v33);
    ++v7;
    v4 = *((_QWORD *)this + 1);
  }
  while (v7 < (*((_QWORD *)this + 2) - v4) >> 3);
  v21 = v29;
  v20 = v30;
  if (v29 == v30)
  {
LABEL_27:
    if (v37)
      sub_20BF4C200(a3, &v36);
    else
      a3[1] = (char *)&off_24C527518 + 3;
    v23 = (__int128 **)(a3 + 2);
  }
  else
  {
    a3[1] = 0;
    a3[2] = v21;
    v22 = v31;
    a3[3] = v20;
    a3[4] = v22;
    v23 = &v29;
  }
  *v23 = 0;
  v23[1] = 0;
  v23[2] = 0;
  v32[0] = (void **)&v29;
  sub_20BDE5038(v32);
  return sub_20BF4C2D8((uint64_t)&v36);
}

void sub_20C0464CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char *a32)
{
  uint64_t v32;

  if (a23 < 0)
    operator delete(__p);
  if (a17 < 0)
    operator delete(a12);
  sub_20C03BFC8((uint64_t)&a32);
  a32 = &a24;
  sub_20BDE5038((void ***)&a32);
  sub_20BF4C2D8(v32 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_20C046548(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[3];

  v3 = (uint64_t *)a1;
  v7[2] = *MEMORY[0x24BDAC8D0];
  switch(sub_20C04BFEC(a1))
  {
    case 0u:
      result = sub_20C07F98C((uint64_t)v3, a2);
      break;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0x3Du:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x58u:
    case 0x59u:
    case 0x5Au:
    case 0x5Bu:
    case 0x5Cu:
    case 0x5Du:
      v4 = v3[1];
      if ((v4 & 4) != 0)
        (*(void (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
      goto LABEL_4;
    case 7u:
      v6 = v3[1];
      if ((v6 & 4) != 0)
        v3 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(v3);
      result = sub_20C08018C(a2, *v3);
      break;
    case 0xCu:
      result = sub_20C07F9C8(v3, a2);
      break;
    case 0xDu:
      result = sub_20C07FA70(v3);
      break;
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x24u:
    case 0x25u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
      result = sub_20C07FAE0(v3);
      break;
    case 0x3Bu:
      result = sub_20C07FB58(v3);
      break;
    case 0x3Cu:
      result = sub_20C07FBD0(v3);
      break;
    case 0x5Eu:
      result = sub_20C07FC48((uint64_t)v3);
      break;
    case 0x5Fu:
      result = sub_20C07FC94(v3);
      break;
    default:
      sub_20BF4C6D0(v7, v3);
      sub_20BF4C2D8((uint64_t)v7);
LABEL_4:
      result = 0;
      break;
  }
  return result;
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode *this)
{
  return "if";
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::_Evaluate@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const std::type_info *v12;
  char *v13;
  uint64_t Type;
  const std::type_info *v15;
  char *v16;
  uint64_t v17;
  const char *v18;
  char *v19;
  void **v20;
  char *v21;
  void *v22;
  char *v23;
  const char *v24;
  char *v25;
  void *v26;
  char *v27;
  void **v28;
  void **v29;
  uint64_t *v30;
  int v31;
  void **v32;
  __int128 **v33;
  __int128 *v34;
  __int128 **v35;
  void *v37[2];
  char v38;
  void *v39;
  void *v40;
  char *v41;
  void **v42;
  char v43;
  void *__p[2];
  char v45;
  void *v46;
  __int128 v47;
  __int128 v48;
  void **v49;
  void **v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a2 + 16))(&v53, *a2, a1);
  v10 = v55;
  v9 = v56;
  if (v55 != v56)
  {
    *(_QWORD *)(a5 + 8) = 0;
    *(_QWORD *)(a5 + 16) = v10;
    v11 = v57;
    *(_QWORD *)(a5 + 24) = v9;
    *(_QWORD *)(a5 + 32) = v11;
    v56 = 0;
    v57 = 0;
    v55 = 0;
    goto LABEL_35;
  }
  if ((sub_20BFB1AC0((pxrInternal__aapl__pxrReserved__::VtValue *)&v53) & 1) != 0)
  {
    (*(void (**)(void ***__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a3 + 16))(&v49, *a3, a1);
    if (*a4)
    {
      (*(void (**)(void **__return_ptr, _QWORD, uint64_t))(*(_QWORD *)*a4 + 16))(&v46, *a4, a1);
      if (*a4)
      {
        Type = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v49, v12, v13);
        v17 = pxrInternal__aapl__pxrReserved__::VtValue::GetType((pxrInternal__aapl__pxrReserved__::VtValue *)&v46, v15, v16);
        if (v50)
        {
          if (Type != v17 && (_QWORD)v47)
          {
            sub_20BDDC0E4(v37, "if-value and else-value must evaluate to the same type or None.");
            if (v38 >= 0)
              v20 = v37;
            else
              v20 = (void **)v37[0];
            pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v18, v19, "if", v20);
            v39 = 0;
            v40 = 0;
            v41 = 0;
            v42 = &v39;
            v43 = 0;
            v39 = operator new(0x18uLL);
            v40 = v39;
            v41 = (char *)v39 + 24;
            v21 = sub_20BFB76A8((uint64_t)&v41, (__int128 *)__p, (__int128 *)&v46, (char *)v39);
            v22 = v39;
            v23 = v41;
            *(_QWORD *)(a5 + 8) = 0;
            *(_QWORD *)(a5 + 16) = v22;
            *(_QWORD *)(a5 + 24) = v21;
            *(_QWORD *)(a5 + 32) = v23;
            v39 = 0;
            v40 = 0;
            v41 = 0;
            v42 = &v39;
            sub_20BDE5038(&v42);
            if (v45 < 0)
              operator delete(__p[0]);
            if (v38 < 0)
              operator delete(v37[0]);
LABEL_34:
            v39 = (char *)&v47 + 8;
            sub_20BDE5038((void ***)&v39);
            sub_20BF4C2D8((uint64_t)&v46);
            v46 = &v51;
            sub_20BDE5038((void ***)&v46);
            sub_20BF4C2D8((uint64_t)&v49);
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      v48 = 0u;
      v47 = 0u;
    }
    if ((v54 & 4) != 0)
      v30 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(&v53);
    else
      v30 = &v53;
    v31 = *(unsigned __int8 *)v30;
    if (*(_BYTE *)v30)
      v32 = (void **)&v49;
    else
      v32 = &v46;
    sub_20BF4C6D0((_QWORD *)a5, v32);
    v33 = (__int128 **)&v47 + 1;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)(a5 + 24) = 0;
    *(_QWORD *)(a5 + 32) = 0;
    if (v31)
      v33 = (__int128 **)&v51;
    v34 = *v33;
    v35 = (__int128 **)&v48;
    if (v31)
      v35 = (__int128 **)&v52;
    sub_20BE78B98((char *)(a5 + 16), v34, *v35, 0xAAAAAAAAAAAAAAABLL * (((char *)*v35 - (char *)v34) >> 3));
    goto LABEL_34;
  }
  sub_20BDDC0E4(&v39, "Condition must be a BOOLean value");
  if (SHIBYTE(v41) >= 0)
    v26 = &v39;
  else
    v26 = v39;
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v24, v25, "if", v26);
  v49 = 0;
  v50 = 0;
  v51 = 0;
  __p[0] = &v49;
  LOBYTE(__p[1]) = 0;
  v49 = (void **)operator new(0x18uLL);
  v50 = v49;
  v51 = v49 + 3;
  v27 = sub_20BFB76A8((uint64_t)&v51, (__int128 *)&v46, &v48, (char *)v49);
  v28 = v49;
  v29 = v51;
  *(_QWORD *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = v28;
  *(_QWORD *)(a5 + 24) = v27;
  *(_QWORD *)(a5 + 32) = v29;
  v49 = 0;
  v50 = 0;
  v51 = 0;
  __p[0] = &v49;
  sub_20BDE5038((void ***)__p);
  if (SHIBYTE(v47) < 0)
    operator delete(v46);
  if (SHIBYTE(v41) < 0)
    operator delete(v39);
LABEL_35:
  v49 = (void **)&v55;
  sub_20BDE5038(&v49);
  return sub_20BF4C2D8((uint64_t)&v53);
}

void sub_20C047488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void **a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  uint64_t v37;

  sub_20BDE5038(&a24);
  if (a31 < 0)
    operator delete(__p);
  if (a17 < 0)
    operator delete(a12);
  sub_20C03BFC8((uint64_t)&a32);
  sub_20C03BFC8(v37 - 136);
  sub_20C03BFC8(v37 - 96);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node::If2Node(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &off_24C527088;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &off_24C527088;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If2Node *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = 0;
  return pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::_Evaluate((uint64_t)a2, (_QWORD *)this + 1, (_QWORD *)this + 2, &v4, a3);
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node::If3Node(_QWORD *result, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  *a2 = 0;
  *result = &off_24C5270B0;
  result[1] = v4;
  v5 = *a3;
  *a3 = 0;
  result[2] = v5;
  v6 = *a4;
  *a4 = 0;
  result[3] = v6;
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  *a2 = 0;
  *result = &off_24C5270B0;
  result[1] = v4;
  v5 = *a3;
  *a3 = 0;
  result[2] = v5;
  v6 = *a4;
  *a4 = 0;
  result[3] = v6;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::If3Node *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  return pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::IfNode::_Evaluate((uint64_t)a2, (_QWORD *)this + 1, (_QWORD *)this + 2, (_QWORD *)this + 3, a3);
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_Compare<std::equal_to>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
}

void pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_Compare<std::not_equal_to>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::equal_to>::GetFunctionName()
{
  return "eq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::not_equal_to>::GetFunctionName()
{
  return "neq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less>::GetFunctionName()
{
  return "lt";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::less_equal>::GetFunctionName()
{
  return "leq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater>::GetFunctionName()
{
  return "gt";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ComparisonNode<std::greater_equal>::GetFunctionName()
{
  return "geq";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_and>::GetFunctionName()
{
  return "and";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNode<std::logical_or>::GetFunctionName()
{
  return "or";
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode *this)
{
  return "not";
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::LogicalNotNode(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = &off_24C5270D8;
  result[1] = v2;
  return result;
}

{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = &off_24C5270D8;
  result[1] = v2;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LogicalNotNode *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  const char *v8;
  char *v9;
  void **v10;
  const char *v11;
  char *v12;
  void *v13;
  char *v14;
  void **v15;
  void **v16;
  void *v18[2];
  char v19;
  void *v20;
  char v21;
  void **v22;
  void **v23;
  void **v24;
  void ***v25;
  char v26;
  __int128 __p;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(__int128 *__return_ptr))(**((_QWORD **)this + 1) + 16))(&v29);
  v5 = v30;
  v4 = v31;
  if (v30 == v31)
  {
    if ((sub_20BFB1AC0((pxrInternal__aapl__pxrReserved__::VtValue *)&v29) & 1) != 0)
    {
      if ((BYTE8(v29) & 4) != 0)
        v7 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v29 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v29);
      else
        v7 = &v29;
      *(_BYTE *)a2 = *(_BYTE *)v7 ^ 1;
      *(_QWORD *)(a2 + 8) = &unk_24C51FCF3;
      *(_QWORD *)(a2 + 16) = 0;
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v29, v18);
      if (v19 >= 0)
        v10 = v18;
      else
        v10 = (void **)v18[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument", v8, v9, v10);
      if (v21 >= 0)
        v13 = &v20;
      else
        v13 = v20;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v11, v12, "not", v13);
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = &v22;
      v26 = 0;
      v22 = (void **)operator new(0x18uLL);
      v23 = v22;
      v24 = v22 + 3;
      v14 = sub_20BFB76A8((uint64_t)&v24, &__p, &v29, (char *)v22);
      v15 = v22;
      v16 = v24;
      *(_QWORD *)(a2 + 8) = 0;
      *(_QWORD *)(a2 + 16) = v15;
      *(_QWORD *)(a2 + 24) = v14;
      *(_QWORD *)(a2 + 32) = v16;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = &v22;
      sub_20BDE5038((void ***)&v25);
      if (v28 < 0)
        operator delete((void *)__p);
      if (v21 < 0)
        operator delete(v20);
      if (v19 < 0)
        operator delete(v18[0]);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = v5;
    v6 = v32;
    *(_QWORD *)(a2 + 24) = v4;
    *(_QWORD *)(a2 + 32) = v6;
    v31 = 0;
    v32 = 0;
    v30 = 0;
  }
  v22 = (void **)&v30;
  sub_20BDE5038(&v22);
  return sub_20BF4C2D8((uint64_t)&v29);
}

void sub_20C047934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;

  sub_20C03BFC8(v33 - 80);
  _Unwind_Resume(a1);
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode *this)
{
  return "contains";
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::ContainsNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &off_24C527100;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &off_24C527100;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::ContainsNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, _QWORD *a3@<X8>)
{
  void **v6;
  void **v7;
  uint64_t v8;
  void **v10;
  void **v11;
  uint64_t v12;
  void ***v13;
  void **v14[2];
  uint64_t v15;
  char **v16[2];
  _QWORD v17[4];

  v17[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(char ***__return_ptr))(**((_QWORD **)this + 1) + 16))(v16);
  (*(void (**)(void ***__return_ptr, _QWORD, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *))(**((_QWORD **)this + 2) + 16))(v14, *((_QWORD *)this + 2), a2);
  sub_20C03A81C((uint64_t)v16, (uint64_t)v14, (uint64_t)&v10);
  v7 = v10;
  v6 = v11;
  if (v10 == v11)
  {
    if (sub_20C047B98((pxrInternal__aapl__pxrReserved__::VtValue *)v16))
    {
      *(_BYTE *)a3 = 0;
      a3[1] = &unk_24C51FCF3;
      a3[2] = 0;
      a3[3] = 0;
      a3[4] = 0;
    }
    else
    {
      v13 = v14;
      sub_20C047C10(v16, (pxrInternal__aapl__pxrReserved__::VtValue **)&v13, a3);
    }
  }
  else
  {
    a3[1] = 0;
    a3[2] = v7;
    v8 = v12;
    a3[3] = v6;
    a3[4] = v8;
    v11 = 0;
    v12 = 0;
    v10 = 0;
  }
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  v10 = (void **)&v15;
  sub_20BDE5038(&v10);
  sub_20BF4C2D8((uint64_t)v14);
  v14[0] = (void **)v17;
  sub_20BDE5038(v14);
  return sub_20BF4C2D8((uint64_t)v16);
}

void sub_20C047B50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  va_list va1;
  uint64_t v9;
  va_list va2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va3;

  va_start(va3, a2);
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v9 = va_arg(va3, _QWORD);
  v11 = va_arg(va3, _QWORD);
  v12 = va_arg(va3, _QWORD);
  v13 = va_arg(va3, _QWORD);
  v14 = va_arg(va3, _QWORD);
  va_copy((va_list)v7, va);
  sub_20BDE5038((void ***)va1);
  sub_20C03BFC8((uint64_t)va2);
  sub_20C03BFC8((uint64_t)va3);
  _Unwind_Resume(a1);
}

uint64_t sub_20C047B98(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CAB2522 & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, (const std::type_info *)&unk_24C527488);
}

void sub_20C047C10(char ***a1@<X0>, pxrInternal__aapl__pxrReserved__::VtValue **a2@<X1>, _QWORD *a3@<X8>)
{
  char **v6;
  char **v7;
  char **v8;
  char **v9;
  char **v10;
  char **v11;
  char **v12;
  char **v13;
  char **v14;
  char **v15;
  char **v16;
  char **v17;
  char **v18;
  char **v19;
  char **v20;
  char **v21;
  char **v22;
  char **v23;
  char **v24;
  char **v25;
  char **v26;
  char **v27;
  char **v28;
  char **v29;
  char **v30;
  char **v31;
  char **v32;
  char **v33;
  char **v34;
  char **v35;
  char **v36;
  char **v37;
  char **v38;
  char **v39;
  char **v40;
  char **v41;
  char **v42;
  char **v43;
  char **v44;
  char **v45;
  char **v46;
  char **v47;
  char **v48;
  char **v49;
  char **v50;
  char **v51;
  char **v52;
  char **v53;
  char **v54;
  size_t *v55;
  char **v56;
  char **v57;
  char **v58;
  char **v59;
  char **v60;
  char **v61;
  char **v62;
  uint64_t *v63;
  char **v64;
  char **v65;
  char **v66;
  char **v67;
  char **v68;
  char **v69;
  char **v70;
  char **v71;
  char **v72;
  char **v73;
  char **v74;
  char **v75;
  char **v76;
  char **v77;
  char **v78;
  char **v79;
  char **v80;
  char **v81;
  char **v82;
  char **v83;
  char **v84;
  char **v85;
  char **v86;
  char **v87;
  char **v88;
  char **v89;
  char **v90;
  char **v91;
  char **v92;
  char **v93;
  char **v94;
  char **v95;
  char **v96;
  char **v97;
  char **v98;
  char **v99;
  char **v100;
  char **v101;
  char **v102;
  char **v103;
  char **v104;
  char **v105;

  switch(sub_20C04BFEC((uint64_t)a1))
  {
    case 0u:
      v6 = a1[1];
      if ((v6 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080A8C(a3);
      break;
    case 1u:
      v7 = a1[1];
      if ((v7 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080C2C(a3);
      break;
    case 2u:
      v8 = a1[1];
      if ((v8 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080C98(a3);
      break;
    case 3u:
      v9 = a1[1];
      if ((v9 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080D04(a3);
      break;
    case 4u:
      v10 = a1[1];
      if ((v10 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080D70(a3);
      break;
    case 5u:
      v11 = a1[1];
      if ((v11 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080DDC(a3);
      break;
    case 6u:
      v12 = a1[1];
      if ((v12 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080E48(a3);
      break;
    case 7u:
      v13 = a1[1];
      if ((v13 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080EB4(a3);
      break;
    case 8u:
      v14 = a1[1];
      if ((v14 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080F20(a3);
      break;
    case 9u:
      v15 = a1[1];
      if ((v15 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080F8C(a3);
      break;
    case 0xAu:
      v16 = a1[1];
      if ((v16 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C080FF8(a3);
      break;
    case 0xBu:
      v17 = a1[1];
      if ((v17 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081064(a3);
      break;
    case 0xCu:
      v18 = a1[1];
      if ((v18 & 4) != 0)
        v19 = (char **)(*(uint64_t (**)(char ***))(((unint64_t)v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v19 = *a1;
      sub_20C0810D0(a2, v19, a3);
      break;
    case 0xDu:
      v20 = a1[1];
      if ((v20 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0811AC(a3);
      break;
    case 0xEu:
      v21 = a1[1];
      if ((v21 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081218(a3);
      break;
    case 0xFu:
      v22 = a1[1];
      if ((v22 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081284(a3);
      break;
    case 0x10u:
      v23 = a1[1];
      if ((v23 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0812F0(a3);
      break;
    case 0x11u:
      v24 = a1[1];
      if ((v24 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08135C(a3);
      break;
    case 0x12u:
      v25 = a1[1];
      if ((v25 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0813C8(a3);
      break;
    case 0x13u:
      v26 = a1[1];
      if ((v26 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081434(a3);
      break;
    case 0x14u:
      v27 = a1[1];
      if ((v27 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0814A0(a3);
      break;
    case 0x15u:
      v28 = a1[1];
      if ((v28 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08150C(a3);
      break;
    case 0x16u:
      v29 = a1[1];
      if ((v29 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081578(a3);
      break;
    case 0x17u:
      v30 = a1[1];
      if ((v30 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0815E4(a3);
      break;
    case 0x18u:
      v31 = a1[1];
      if ((v31 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081650(a3);
      break;
    case 0x19u:
      v32 = a1[1];
      if ((v32 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0816BC(a3);
      break;
    case 0x1Au:
      v33 = a1[1];
      if ((v33 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081728(a3);
      break;
    case 0x1Bu:
      v34 = a1[1];
      if ((v34 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081794(a3);
      break;
    case 0x1Cu:
      v35 = a1[1];
      if ((v35 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081800(a3);
      break;
    case 0x1Du:
      v36 = a1[1];
      if ((v36 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08186C(a3);
      break;
    case 0x1Eu:
      v37 = a1[1];
      if ((v37 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0818D8(a3);
      break;
    case 0x1Fu:
      v38 = a1[1];
      if ((v38 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081944(a3);
      break;
    case 0x20u:
      v39 = a1[1];
      if ((v39 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0819B0(a3);
      break;
    case 0x21u:
      v40 = a1[1];
      if ((v40 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081A1C(a3);
      break;
    case 0x22u:
      v41 = a1[1];
      if ((v41 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081A88(a3);
      break;
    case 0x23u:
      v42 = a1[1];
      if ((v42 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081AF4(a3);
      break;
    case 0x24u:
      v43 = a1[1];
      if ((v43 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081B60(a3);
      break;
    case 0x25u:
      v44 = a1[1];
      if ((v44 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081BCC(a3);
      break;
    case 0x26u:
      v45 = a1[1];
      if ((v45 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081C38(a3);
      break;
    case 0x27u:
      v46 = a1[1];
      if ((v46 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081CA4(a3);
      break;
    case 0x28u:
      v47 = a1[1];
      if ((v47 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081D10(a3);
      break;
    case 0x29u:
      v48 = a1[1];
      if ((v48 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081D7C(a3);
      break;
    case 0x2Au:
      v49 = a1[1];
      if ((v49 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081DE8(a3);
      break;
    case 0x2Bu:
      v50 = a1[1];
      if ((v50 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081E54(a3);
      break;
    case 0x2Cu:
      v51 = a1[1];
      if ((v51 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081EC0(a3);
      break;
    case 0x2Du:
      v52 = a1[1];
      if ((v52 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081F2C(a3);
      break;
    case 0x2Eu:
      v53 = a1[1];
      if ((v53 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C081F98(a3);
      break;
    case 0x2Fu:
      v54 = a1[1];
      if ((v54 & 4) != 0)
        v55 = (size_t *)(*(uint64_t (**)(char ***))(((unint64_t)v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v55 = (size_t *)*a1;
      sub_20C082004(a2, v55, a3);
      break;
    case 0x30u:
      v56 = a1[1];
      if ((v56 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08210C(a3);
      break;
    case 0x31u:
      v57 = a1[1];
      if ((v57 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082178(a3);
      break;
    case 0x32u:
      v58 = a1[1];
      if ((v58 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0821E4(a3);
      break;
    case 0x33u:
      v59 = a1[1];
      if ((v59 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082250(a3);
      break;
    case 0x34u:
      v60 = a1[1];
      if ((v60 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0822BC(a3);
      break;
    case 0x35u:
      v61 = a1[1];
      if ((v61 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082328(a3);
      break;
    case 0x36u:
      v62 = a1[1];
      if ((v62 & 4) != 0)
        v63 = (uint64_t *)(*(uint64_t (**)(char ***))(((unint64_t)v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v63 = (uint64_t *)*a1;
      sub_20C082394(a2, v63, a3);
      break;
    case 0x37u:
      v64 = a1[1];
      if ((v64 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0824A8(a3);
      break;
    case 0x38u:
      v65 = a1[1];
      if ((v65 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082514(a3);
      break;
    case 0x39u:
      v66 = a1[1];
      if ((v66 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082580(a3);
      break;
    case 0x3Au:
      v67 = a1[1];
      if ((v67 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0825EC(a3);
      break;
    case 0x3Bu:
      v68 = a1[1];
      if ((v68 & 4) != 0)
        v69 = (char **)(*(uint64_t (**)(char ***))(((unint64_t)v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v69 = *a1;
      sub_20C082658(a2, v69, a3);
      break;
    case 0x3Cu:
      v70 = a1[1];
      if ((v70 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082760(a3);
      break;
    case 0x3Du:
      v71 = a1[1];
      if ((v71 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0827CC(a3);
      break;
    case 0x3Eu:
      v72 = a1[1];
      if ((v72 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082838(a3);
      break;
    case 0x3Fu:
      v73 = a1[1];
      if ((v73 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0828A4(a3);
      break;
    case 0x40u:
      v74 = a1[1];
      if ((v74 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082910(a3);
      break;
    case 0x41u:
      v75 = a1[1];
      if ((v75 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08297C(a3);
      break;
    case 0x42u:
      v76 = a1[1];
      if ((v76 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0829E8(a3);
      break;
    case 0x43u:
      v77 = a1[1];
      if ((v77 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082A54(a3);
      break;
    case 0x44u:
      v78 = a1[1];
      if ((v78 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082AC0(a3);
      break;
    case 0x45u:
      v79 = a1[1];
      if ((v79 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082B2C(a3);
      break;
    case 0x46u:
      v80 = a1[1];
      if ((v80 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082B98(a3);
      break;
    case 0x47u:
      v81 = a1[1];
      if ((v81 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082C04(a3);
      break;
    case 0x48u:
      v82 = a1[1];
      if ((v82 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082C70(a3);
      break;
    case 0x49u:
      v83 = a1[1];
      if ((v83 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082CDC(a3);
      break;
    case 0x4Au:
      v84 = a1[1];
      if ((v84 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082D48(a3);
      break;
    case 0x4Bu:
      v85 = a1[1];
      if ((v85 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082DB4(a3);
      break;
    case 0x4Cu:
      v86 = a1[1];
      if ((v86 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082E20(a3);
      break;
    case 0x4Du:
      v87 = a1[1];
      if ((v87 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082E8C(a3);
      break;
    case 0x4Eu:
      v88 = a1[1];
      if ((v88 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082EF8(a3);
      break;
    case 0x4Fu:
      v89 = a1[1];
      if ((v89 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082F64(a3);
      break;
    case 0x50u:
      v90 = a1[1];
      if ((v90 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C082FD0(a3);
      break;
    case 0x51u:
      v91 = a1[1];
      if ((v91 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08303C(a3);
      break;
    case 0x52u:
      v92 = a1[1];
      if ((v92 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0830A8(a3);
      break;
    case 0x53u:
      v93 = a1[1];
      if ((v93 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083114(a3);
      break;
    case 0x54u:
      v94 = a1[1];
      if ((v94 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083180(a3);
      break;
    case 0x55u:
      v95 = a1[1];
      if ((v95 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0831EC(a3);
      break;
    case 0x56u:
      v96 = a1[1];
      if ((v96 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083258(a3);
      break;
    case 0x57u:
      v97 = a1[1];
      if ((v97 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0832C4(a3);
      break;
    case 0x58u:
      v98 = a1[1];
      if ((v98 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083330(a3);
      break;
    case 0x59u:
      v99 = a1[1];
      if ((v99 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08339C(a3);
      break;
    case 0x5Au:
      v100 = a1[1];
      if ((v100 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083408(a3);
      break;
    case 0x5Bu:
      v101 = a1[1];
      if ((v101 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v101 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083474(a3);
      break;
    case 0x5Cu:
      v102 = a1[1];
      if ((v102 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v102 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0834E0(a3);
      break;
    case 0x5Du:
      v103 = a1[1];
      if ((v103 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v103 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08354C(a3);
      break;
    case 0x5Eu:
      v104 = a1[1];
      if ((v104 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v104 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0835B8(a3);
      break;
    case 0x5Fu:
      v105 = a1[1];
      if ((v105 & 4) != 0)
        (*(void (**)(char ***))(((unint64_t)v105 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083624(a3);
      break;
    default:
      sub_20C083690(a3);
      break;
  }
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode *this)
{
  return "at";
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::AtNode(_QWORD *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &off_24C527128;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *a2 = 0;
  *result = &off_24C527128;
  result[1] = v3;
  v4 = *a3;
  *a3 = 0;
  result[2] = v4;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::AtNode *this@<X0>, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *a2@<X1>, uint64_t a3@<X8>)
{
  void **v6;
  void **v7;
  uint64_t v8;
  void ***v9;
  const char *v10;
  char *v11;
  void **v12;
  char *v13;
  void **v14;
  void **v15;
  void ***v16;
  void *v18[2];
  char v19;
  void **v20;
  void **v21;
  void **v22;
  void **v23;
  void **v24;
  uint64_t v25;
  void ***v26;
  char v27;
  __int128 __p;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32[2];
  _QWORD v33[4];

  v33[3] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr))(**((_QWORD **)this + 1) + 16))(v32);
  (*(void (**)(__int128 *__return_ptr, _QWORD, pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::EvalContext *))(**((_QWORD **)this + 2) + 16))(&v30, *((_QWORD *)this + 2), a2);
  sub_20C03A81C((uint64_t)v32, (uint64_t)&v30, (uint64_t)&v23);
  v7 = v23;
  v6 = v24;
  if (v23 == v24)
  {
    if ((sub_20C0495EC((pxrInternal__aapl__pxrReserved__::VtValue *)&v30) & 1) != 0)
    {
      if ((BYTE8(v30) & 4) != 0)
        v9 = (void ***)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v30 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v30);
      else
        v9 = (void ***)&v30;
      v20 = *v9;
      sub_20C049624(v32, (uint64_t *)&v20, (unsigned int **)a3);
    }
    else
    {
      sub_20BDDC0E4(v18, "Index must be an integer");
      if (v19 >= 0)
        v12 = v18;
      else
        v12 = (void **)v18[0];
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v10, v11, "at", v12);
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v26 = &v20;
      v27 = 0;
      v20 = (void **)operator new(0x18uLL);
      v21 = v20;
      v22 = v20 + 3;
      v13 = sub_20BFB76A8((uint64_t)&v22, &__p, &v30, (char *)v20);
      v14 = v20;
      v15 = v22;
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = v14;
      *(_QWORD *)(a3 + 24) = v13;
      *(_QWORD *)(a3 + 32) = v15;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v26 = &v20;
      sub_20BDE5038((void ***)&v26);
      if (v29 < 0)
        operator delete((void *)__p);
      if (v19 < 0)
        operator delete(v18[0]);
    }
  }
  else
  {
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = v7;
    v8 = v25;
    *(_QWORD *)(a3 + 24) = v6;
    *(_QWORD *)(a3 + 32) = v8;
    v24 = 0;
    v25 = 0;
    v23 = 0;
  }
  v20 = (void **)&v23;
  sub_20BDE5038(&v20);
  v23 = (void **)&v31;
  sub_20BDE5038(&v23);
  v16 = (void ***)sub_20BF4C2D8((uint64_t)&v30);
  *(_QWORD *)&v30 = v33;
  sub_20BDE5038(v16);
  return sub_20BF4C2D8((uint64_t)v32);
}

void sub_20C04955C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char *a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;

  a18 = &a21;
  sub_20BDE5038((void ***)&a18);
  sub_20C03BFC8(v31 - 120);
  sub_20C03BFC8(v31 - 80);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0495EC(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (*(_DWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16) == 7)
    return 1;
  if ((v1 & 4) != 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, MEMORY[0x24BEDB7D0]);
  else
    return 0;
}

void sub_20C049624(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned int **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  switch(sub_20C04BFEC((uint64_t)a1))
  {
    case 0u:
      v6 = a1[1];
      if ((v6 & 4) != 0)
        (*(void (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0836FC(a3);
      break;
    case 1u:
      v7 = a1[1];
      if ((v7 & 4) != 0)
        (*(void (**)(uint64_t *))((v7 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08389C(a3);
      break;
    case 2u:
      v8 = a1[1];
      if ((v8 & 4) != 0)
        (*(void (**)(uint64_t *))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083908(a3);
      break;
    case 3u:
      v9 = a1[1];
      if ((v9 & 4) != 0)
        (*(void (**)(uint64_t *))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083974(a3);
      break;
    case 4u:
      v10 = a1[1];
      if ((v10 & 4) != 0)
        (*(void (**)(uint64_t *))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0839E0(a3);
      break;
    case 5u:
      v11 = a1[1];
      if ((v11 & 4) != 0)
        (*(void (**)(uint64_t *))((v11 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083A4C(a3);
      break;
    case 6u:
      v12 = a1[1];
      if ((v12 & 4) != 0)
        (*(void (**)(uint64_t *))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083AB8(a3);
      break;
    case 7u:
      v13 = a1[1];
      if ((v13 & 4) != 0)
        (*(void (**)(uint64_t *))((v13 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083B24(a3);
      break;
    case 8u:
      v14 = a1[1];
      if ((v14 & 4) != 0)
        (*(void (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083B90(a3);
      break;
    case 9u:
      v15 = a1[1];
      if ((v15 & 4) != 0)
        (*(void (**)(uint64_t *))((v15 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083BFC(a3);
      break;
    case 0xAu:
      v16 = a1[1];
      if ((v16 & 4) != 0)
        (*(void (**)(uint64_t *))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083C68(a3);
      break;
    case 0xBu:
      v17 = a1[1];
      if ((v17 & 4) != 0)
        (*(void (**)(uint64_t *))((v17 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083CD4(a3);
      break;
    case 0xCu:
      v18 = a1[1];
      if ((v18 & 4) != 0)
        v19 = (*(uint64_t (**)(uint64_t *))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v19 = *a1;
      sub_20C083D40(a2, v19, a3);
      break;
    case 0xDu:
      v20 = a1[1];
      if ((v20 & 4) != 0)
        (*(void (**)(uint64_t *))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083E10(a3);
      break;
    case 0xEu:
      v21 = a1[1];
      if ((v21 & 4) != 0)
        (*(void (**)(uint64_t *))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083E7C(a3);
      break;
    case 0xFu:
      v22 = a1[1];
      if ((v22 & 4) != 0)
        (*(void (**)(uint64_t *))((v22 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083EE8(a3);
      break;
    case 0x10u:
      v23 = a1[1];
      if ((v23 & 4) != 0)
        (*(void (**)(uint64_t *))((v23 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083F54(a3);
      break;
    case 0x11u:
      v24 = a1[1];
      if ((v24 & 4) != 0)
        (*(void (**)(uint64_t *))((v24 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C083FC0(a3);
      break;
    case 0x12u:
      v25 = a1[1];
      if ((v25 & 4) != 0)
        (*(void (**)(uint64_t *))((v25 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08402C(a3);
      break;
    case 0x13u:
      v26 = a1[1];
      if ((v26 & 4) != 0)
        (*(void (**)(uint64_t *))((v26 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084098(a3);
      break;
    case 0x14u:
      v27 = a1[1];
      if ((v27 & 4) != 0)
        (*(void (**)(uint64_t *))((v27 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084104(a3);
      break;
    case 0x15u:
      v28 = a1[1];
      if ((v28 & 4) != 0)
        (*(void (**)(uint64_t *))((v28 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084170(a3);
      break;
    case 0x16u:
      v29 = a1[1];
      if ((v29 & 4) != 0)
        (*(void (**)(uint64_t *))((v29 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0841DC(a3);
      break;
    case 0x17u:
      v30 = a1[1];
      if ((v30 & 4) != 0)
        (*(void (**)(uint64_t *))((v30 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084248(a3);
      break;
    case 0x18u:
      v31 = a1[1];
      if ((v31 & 4) != 0)
        (*(void (**)(uint64_t *))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0842B4(a3);
      break;
    case 0x19u:
      v32 = a1[1];
      if ((v32 & 4) != 0)
        (*(void (**)(uint64_t *))((v32 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084320(a3);
      break;
    case 0x1Au:
      v33 = a1[1];
      if ((v33 & 4) != 0)
        (*(void (**)(uint64_t *))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08438C(a3);
      break;
    case 0x1Bu:
      v34 = a1[1];
      if ((v34 & 4) != 0)
        (*(void (**)(uint64_t *))((v34 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0843F8(a3);
      break;
    case 0x1Cu:
      v35 = a1[1];
      if ((v35 & 4) != 0)
        (*(void (**)(uint64_t *))((v35 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084464(a3);
      break;
    case 0x1Du:
      v36 = a1[1];
      if ((v36 & 4) != 0)
        (*(void (**)(uint64_t *))((v36 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0844D0(a3);
      break;
    case 0x1Eu:
      v37 = a1[1];
      if ((v37 & 4) != 0)
        (*(void (**)(uint64_t *))((v37 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08453C(a3);
      break;
    case 0x1Fu:
      v38 = a1[1];
      if ((v38 & 4) != 0)
        (*(void (**)(uint64_t *))((v38 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0845A8(a3);
      break;
    case 0x20u:
      v39 = a1[1];
      if ((v39 & 4) != 0)
        (*(void (**)(uint64_t *))((v39 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084614(a3);
      break;
    case 0x21u:
      v40 = a1[1];
      if ((v40 & 4) != 0)
        (*(void (**)(uint64_t *))((v40 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084680(a3);
      break;
    case 0x22u:
      v41 = a1[1];
      if ((v41 & 4) != 0)
        (*(void (**)(uint64_t *))((v41 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0846EC(a3);
      break;
    case 0x23u:
      v42 = a1[1];
      if ((v42 & 4) != 0)
        (*(void (**)(uint64_t *))((v42 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084758(a3);
      break;
    case 0x24u:
      v43 = a1[1];
      if ((v43 & 4) != 0)
        (*(void (**)(uint64_t *))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0847C4(a3);
      break;
    case 0x25u:
      v44 = a1[1];
      if ((v44 & 4) != 0)
        (*(void (**)(uint64_t *))((v44 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084830(a3);
      break;
    case 0x26u:
      v45 = a1[1];
      if ((v45 & 4) != 0)
        (*(void (**)(uint64_t *))((v45 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08489C(a3);
      break;
    case 0x27u:
      v46 = a1[1];
      if ((v46 & 4) != 0)
        (*(void (**)(uint64_t *))((v46 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084908(a3);
      break;
    case 0x28u:
      v47 = a1[1];
      if ((v47 & 4) != 0)
        (*(void (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084974(a3);
      break;
    case 0x29u:
      v48 = a1[1];
      if ((v48 & 4) != 0)
        (*(void (**)(uint64_t *))((v48 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0849E0(a3);
      break;
    case 0x2Au:
      v49 = a1[1];
      if ((v49 & 4) != 0)
        (*(void (**)(uint64_t *))((v49 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084A4C(a3);
      break;
    case 0x2Bu:
      v50 = a1[1];
      if ((v50 & 4) != 0)
        (*(void (**)(uint64_t *))((v50 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084AB8(a3);
      break;
    case 0x2Cu:
      v51 = a1[1];
      if ((v51 & 4) != 0)
        (*(void (**)(uint64_t *))((v51 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084B24(a3);
      break;
    case 0x2Du:
      v52 = a1[1];
      if ((v52 & 4) != 0)
        (*(void (**)(uint64_t *))((v52 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084B90(a3);
      break;
    case 0x2Eu:
      v53 = a1[1];
      if ((v53 & 4) != 0)
        (*(void (**)(uint64_t *))((v53 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084BFC(a3);
      break;
    case 0x2Fu:
      v54 = a1[1];
      if ((v54 & 4) != 0)
        v55 = (_QWORD *)(*(uint64_t (**)(uint64_t *))((v54 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v55 = (_QWORD *)*a1;
      sub_20C084C68(a2, v55, a3);
      break;
    case 0x30u:
      v56 = a1[1];
      if ((v56 & 4) != 0)
        (*(void (**)(uint64_t *))((v56 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084D18(a3);
      break;
    case 0x31u:
      v57 = a1[1];
      if ((v57 & 4) != 0)
        (*(void (**)(uint64_t *))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084D84(a3);
      break;
    case 0x32u:
      v58 = a1[1];
      if ((v58 & 4) != 0)
        (*(void (**)(uint64_t *))((v58 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084DF0(a3);
      break;
    case 0x33u:
      v59 = a1[1];
      if ((v59 & 4) != 0)
        (*(void (**)(uint64_t *))((v59 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084E5C(a3);
      break;
    case 0x34u:
      v60 = a1[1];
      if ((v60 & 4) != 0)
        (*(void (**)(uint64_t *))((v60 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084EC8(a3);
      break;
    case 0x35u:
      v61 = a1[1];
      if ((v61 & 4) != 0)
        (*(void (**)(uint64_t *))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C084F34(a3);
      break;
    case 0x36u:
      v62 = a1[1];
      if ((v62 & 4) != 0)
        v63 = (_QWORD *)(*(uint64_t (**)(uint64_t *))((v62 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v63 = (_QWORD *)*a1;
      sub_20C084FA0(a2, v63, a3);
      break;
    case 0x37u:
      v64 = a1[1];
      if ((v64 & 4) != 0)
        (*(void (**)(uint64_t *))((v64 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085050(a3);
      break;
    case 0x38u:
      v65 = a1[1];
      if ((v65 & 4) != 0)
        (*(void (**)(uint64_t *))((v65 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0850BC(a3);
      break;
    case 0x39u:
      v66 = a1[1];
      if ((v66 & 4) != 0)
        (*(void (**)(uint64_t *))((v66 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085128(a3);
      break;
    case 0x3Au:
      v67 = a1[1];
      if ((v67 & 4) != 0)
        (*(void (**)(uint64_t *))((v67 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085194(a3);
      break;
    case 0x3Bu:
      v68 = a1[1];
      if ((v68 & 4) != 0)
        v69 = (_QWORD *)(*(uint64_t (**)(uint64_t *))((v68 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v69 = (_QWORD *)*a1;
      sub_20C085200(a2, v69, a3);
      break;
    case 0x3Cu:
      v70 = a1[1];
      if ((v70 & 4) != 0)
        (*(void (**)(uint64_t *))((v70 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0852B4(a3);
      break;
    case 0x3Du:
      v71 = a1[1];
      if ((v71 & 4) != 0)
        (*(void (**)(uint64_t *))((v71 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085320(a3);
      break;
    case 0x3Eu:
      v72 = a1[1];
      if ((v72 & 4) != 0)
        (*(void (**)(uint64_t *))((v72 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08538C(a3);
      break;
    case 0x3Fu:
      v73 = a1[1];
      if ((v73 & 4) != 0)
        (*(void (**)(uint64_t *))((v73 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0853F8(a3);
      break;
    case 0x40u:
      v74 = a1[1];
      if ((v74 & 4) != 0)
        (*(void (**)(uint64_t *))((v74 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085464(a3);
      break;
    case 0x41u:
      v75 = a1[1];
      if ((v75 & 4) != 0)
        (*(void (**)(uint64_t *))((v75 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0854D0(a3);
      break;
    case 0x42u:
      v76 = a1[1];
      if ((v76 & 4) != 0)
        (*(void (**)(uint64_t *))((v76 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08553C(a3);
      break;
    case 0x43u:
      v77 = a1[1];
      if ((v77 & 4) != 0)
        (*(void (**)(uint64_t *))((v77 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0855A8(a3);
      break;
    case 0x44u:
      v78 = a1[1];
      if ((v78 & 4) != 0)
        (*(void (**)(uint64_t *))((v78 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085614(a3);
      break;
    case 0x45u:
      v79 = a1[1];
      if ((v79 & 4) != 0)
        (*(void (**)(uint64_t *))((v79 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085680(a3);
      break;
    case 0x46u:
      v80 = a1[1];
      if ((v80 & 4) != 0)
        (*(void (**)(uint64_t *))((v80 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0856EC(a3);
      break;
    case 0x47u:
      v81 = a1[1];
      if ((v81 & 4) != 0)
        (*(void (**)(uint64_t *))((v81 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085758(a3);
      break;
    case 0x48u:
      v82 = a1[1];
      if ((v82 & 4) != 0)
        (*(void (**)(uint64_t *))((v82 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0857C4(a3);
      break;
    case 0x49u:
      v83 = a1[1];
      if ((v83 & 4) != 0)
        (*(void (**)(uint64_t *))((v83 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085830(a3);
      break;
    case 0x4Au:
      v84 = a1[1];
      if ((v84 & 4) != 0)
        (*(void (**)(uint64_t *))((v84 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08589C(a3);
      break;
    case 0x4Bu:
      v85 = a1[1];
      if ((v85 & 4) != 0)
        (*(void (**)(uint64_t *))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085908(a3);
      break;
    case 0x4Cu:
      v86 = a1[1];
      if ((v86 & 4) != 0)
        (*(void (**)(uint64_t *))((v86 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085974(a3);
      break;
    case 0x4Du:
      v87 = a1[1];
      if ((v87 & 4) != 0)
        (*(void (**)(uint64_t *))((v87 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0859E0(a3);
      break;
    case 0x4Eu:
      v88 = a1[1];
      if ((v88 & 4) != 0)
        (*(void (**)(uint64_t *))((v88 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085A4C(a3);
      break;
    case 0x4Fu:
      v89 = a1[1];
      if ((v89 & 4) != 0)
        (*(void (**)(uint64_t *))((v89 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085AB8(a3);
      break;
    case 0x50u:
      v90 = a1[1];
      if ((v90 & 4) != 0)
        (*(void (**)(uint64_t *))((v90 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085B24(a3);
      break;
    case 0x51u:
      v91 = a1[1];
      if ((v91 & 4) != 0)
        (*(void (**)(uint64_t *))((v91 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085B90(a3);
      break;
    case 0x52u:
      v92 = a1[1];
      if ((v92 & 4) != 0)
        (*(void (**)(uint64_t *))((v92 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085BFC(a3);
      break;
    case 0x53u:
      v93 = a1[1];
      if ((v93 & 4) != 0)
        (*(void (**)(uint64_t *))((v93 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085C68(a3);
      break;
    case 0x54u:
      v94 = a1[1];
      if ((v94 & 4) != 0)
        (*(void (**)(uint64_t *))((v94 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085CD4(a3);
      break;
    case 0x55u:
      v95 = a1[1];
      if ((v95 & 4) != 0)
        (*(void (**)(uint64_t *))((v95 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085D40(a3);
      break;
    case 0x56u:
      v96 = a1[1];
      if ((v96 & 4) != 0)
        (*(void (**)(uint64_t *))((v96 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085DAC(a3);
      break;
    case 0x57u:
      v97 = a1[1];
      if ((v97 & 4) != 0)
        (*(void (**)(uint64_t *))((v97 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085E18(a3);
      break;
    case 0x58u:
      v98 = a1[1];
      if ((v98 & 4) != 0)
        (*(void (**)(uint64_t *))((v98 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085E84(a3);
      break;
    case 0x59u:
      v99 = a1[1];
      if ((v99 & 4) != 0)
        (*(void (**)(uint64_t *))((v99 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085EF0(a3);
      break;
    case 0x5Au:
      v100 = a1[1];
      if ((v100 & 4) != 0)
        (*(void (**)(uint64_t *))((v100 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085F5C(a3);
      break;
    case 0x5Bu:
      v101 = a1[1];
      if ((v101 & 4) != 0)
        (*(void (**)(uint64_t *))((v101 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C085FC8(a3);
      break;
    case 0x5Cu:
      v102 = a1[1];
      if ((v102 & 4) != 0)
        (*(void (**)(uint64_t *))((v102 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C086034(a3);
      break;
    case 0x5Du:
      v103 = a1[1];
      if ((v103 & 4) != 0)
        (*(void (**)(uint64_t *))((v103 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C0860A0(a3);
      break;
    case 0x5Eu:
      v104 = a1[1];
      if ((v104 & 4) != 0)
        (*(void (**)(uint64_t *))((v104 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C08610C(a3);
      break;
    case 0x5Fu:
      v105 = a1[1];
      if ((v105 & 4) != 0)
        (*(void (**)(uint64_t *))((v105 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C086178(a3);
      break;
    default:
      sub_20C0861E4((pxrInternal__aapl__pxrReserved__::VtValue *)a1, a3);
      break;
  }
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode *this)
{
  return "len";
}

_QWORD *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::LenNode(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = &off_24C527150;
  result[1] = v2;
  return result;
}

{
  uint64_t v2;

  v2 = *a2;
  *a2 = 0;
  *result = &off_24C527150;
  result[1] = v2;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::LenNode *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v8;
  uint64_t v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr))(**((_QWORD **)this + 1) + 16))(v9);
  v5 = v10;
  v4 = v11;
  if (v10 == v11)
  {
    sub_20C04AE10(v9, a2);
  }
  else
  {
    a2[1] = 0;
    a2[2] = v5;
    v6 = v12;
    a2[3] = v4;
    a2[4] = v6;
    v11 = 0;
    v12 = 0;
    v10 = 0;
  }
  v8 = (void **)&v10;
  sub_20BDE5038(&v8);
  return sub_20BF4C2D8((uint64_t)v9);
}

void sub_20C04ADF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C03BFC8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C04AE10(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(sub_20C04BFEC((uint64_t)a1))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x24u:
    case 0x25u:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Cu:
    case 0x3Du:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x41u:
    case 0x42u:
    case 0x43u:
    case 0x44u:
    case 0x45u:
    case 0x46u:
    case 0x47u:
    case 0x48u:
    case 0x49u:
    case 0x4Au:
    case 0x4Bu:
    case 0x4Cu:
    case 0x4Du:
    case 0x4Eu:
    case 0x4Fu:
    case 0x50u:
    case 0x51u:
    case 0x52u:
    case 0x53u:
    case 0x54u:
    case 0x55u:
    case 0x56u:
    case 0x57u:
    case 0x58u:
    case 0x59u:
    case 0x5Au:
    case 0x5Bu:
    case 0x5Cu:
    case 0x5Du:
    case 0x5Eu:
    case 0x5Fu:
      v4 = a1[1];
      if ((v4 & 4) != 0)
        (*(void (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      sub_20C086280(a2);
      break;
    case 0xCu:
      v8 = a1[1];
      if ((v8 & 4) != 0)
        v9 = (*(uint64_t (**)(uint64_t *))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v9 = *a1;
      v7 = *(unsigned __int8 *)(v9 + 23);
      if ((v7 & 0x80u) != 0)
        v7 = *(_QWORD *)(v9 + 8);
      goto LABEL_12;
    case 0x2Fu:
    case 0x36u:
    case 0x3Bu:
      v5 = a1[1];
      if ((v5 & 4) != 0)
        v6 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
      else
        v6 = (uint64_t *)*a1;
      v7 = *v6;
LABEL_12:
      *a2 = v7;
      a2[1] = &unk_24C52036B;
      a2[3] = 0;
      a2[4] = 0;
      a2[2] = 0;
      break;
    default:
      sub_20C0863F0((pxrInternal__aapl__pxrReserved__::VtValue *)a1, a2);
      break;
  }
}

const char *pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::GetFunctionName(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode *this)
{
  return "defined";
}

__n128 pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::DefinedNode(_QWORD *a1, __n128 *a2)
{
  __n128 result;

  *a1 = off_24C527178;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

{
  __n128 result;

  *a1 = off_24C527178;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode::Evaluate@<X0>(pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::DefinedNode *this@<X0>, uint64_t **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v7;
  const void **v8;
  uint64_t v9;
  char v10;
  char v11;
  const char *v12;
  char *v13;
  void **v14;
  const char *v15;
  char *v16;
  void *v17;
  __int128 *v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void **v23;
  void **v24;
  __int128 v25;
  __int128 *v26;
  __int128 *v27;
  __int128 *v28;
  unint64_t v29;
  __int128 **v30;
  void *v32[2];
  char v33;
  void *v34;
  char v35;
  void *__p[2];
  void *v37;
  __int128 *v38;
  __int128 *v39;
  unint64_t v40;
  void **v41[5];
  const void **v42;
  uint64_t v43;
  __int128 *v44;
  __int128 *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v47 = 0;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v4 = *((_QWORD *)this + 1);
  if (*((_QWORD *)this + 2) == v4)
    goto LABEL_42;
  v7 = 0;
  do
  {
    (*(void (**)(const void ***__return_ptr, _QWORD, uint64_t **))(**(_QWORD **)(v4 + 8 * v7) + 16))(&v42, *(_QWORD *)(v4 + 8 * v7), a2);
    if (v44 == v45)
    {
      if ((sub_20BFB4608((pxrInternal__aapl__pxrReserved__::VtValue *)&v42) & 1) != 0)
      {
        if ((v43 & 4) != 0)
          v8 = (const void **)(*(uint64_t (**)(const void ***))((v43 & 0xFFFFFFFFFFFFFFF8) + 168))(&v42);
        else
          v8 = v42;
        v9 = sub_20C044FD4(*a2, v8);
        LOBYTE(v41[0]) = 1;
        v10 = sub_20C04B3B0((pxrInternal__aapl__pxrReserved__::VtValue *)&v46, (pxrInternal__aapl__pxrReserved__::VtValue *)v41);
        if (v9)
          v11 = v10;
        else
          v11 = 0;
        if (v47 && (v47 & 3) != 3)
          (*(void (**)(uint64_t *))((v47 & 0xFFFFFFFFFFFFFFF8) + 32))(&v46);
        v47 = (unint64_t)&unk_24C51FCF3;
        LOBYTE(v46) = v11;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::GetValueTypeName((pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl *)&v42, v32);
        v14 = v32;
        if (v33 < 0)
          v14 = (void **)v32[0];
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Invalid type %s for argument %zu", v12, v13, v14, v7);
        if (v35 >= 0)
          v17 = &v34;
        else
          v17 = v34;
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v15, v16, "defined", v17);
        v18 = v39;
        if ((unint64_t)v39 >= v40)
        {
          v20 = 0xAAAAAAAAAAAAAAABLL * (((char *)v39 - (char *)v38) >> 3);
          v21 = v20 + 1;
          if (v20 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_20BDDF694();
          if (0x5555555555555556 * ((uint64_t)(v40 - (_QWORD)v38) >> 3) > v21)
            v21 = 0x5555555555555556 * ((uint64_t)(v40 - (_QWORD)v38) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v40 - (_QWORD)v38) >> 3) >= 0x555555555555555)
            v22 = 0xAAAAAAAAAAAAAAALL;
          else
            v22 = v21;
          v41[4] = (void **)&v40;
          if (v22)
            v23 = (void **)sub_20BDE4FF4((uint64_t)&v40, v22);
          else
            v23 = 0;
          v24 = &v23[3 * v20];
          v41[0] = v23;
          v41[1] = v24;
          v41[3] = &v23[3 * v22];
          v25 = *(_OWORD *)__p;
          v24[2] = v37;
          *(_OWORD *)v24 = v25;
          __p[1] = 0;
          v37 = 0;
          __p[0] = 0;
          v41[2] = v24 + 3;
          sub_20BDF34C0((uint64_t *)&v38, v41);
          v26 = v39;
          sub_20BDF3648((uint64_t)v41);
          v39 = v26;
          if (SHIBYTE(v37) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v19 = *(_OWORD *)__p;
          *((_QWORD *)v39 + 2) = v37;
          *v18 = v19;
          __p[1] = 0;
          v37 = 0;
          __p[0] = 0;
          v39 = (__int128 *)((char *)v18 + 24);
        }
        if (v35 < 0)
          operator delete(v34);
        if (v33 < 0)
          operator delete(v32[0]);
      }
    }
    else
    {
      sub_20C07F738((uint64_t *)&v38, v39, (uint64_t)v44, v45, 0xAAAAAAAAAAAAAAABLL * (((char *)v45 - (char *)v44) >> 3));
    }
    v41[0] = (void **)&v44;
    sub_20BDE5038(v41);
    sub_20BF4C2D8((uint64_t)&v42);
    ++v7;
    v4 = *((_QWORD *)this + 1);
  }
  while (v7 < (*((_QWORD *)this + 2) - v4) >> 3);
  v28 = v38;
  v27 = v39;
  if (v38 == v39)
  {
LABEL_42:
    sub_20BF4C6D0(a3, &v46);
    v30 = (__int128 **)(a3 + 2);
  }
  else
  {
    a3[1] = 0;
    a3[2] = v28;
    v29 = v40;
    a3[3] = v27;
    a3[4] = v29;
    v30 = &v38;
  }
  *v30 = 0;
  v30[1] = 0;
  v30[2] = 0;
  v41[0] = (void **)&v38;
  sub_20BDE5038(v41);
  return sub_20BF4C2D8((uint64_t)&v46);
}

void sub_20C04B310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char *a37)
{
  uint64_t v37;

  a37 = &a29;
  sub_20BDE5038((void ***)&a37);
  sub_20BF4C2D8(v37 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_20C04B3B0(pxrInternal__aapl__pxrReserved__::VtValue *a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v4;

  if (sub_20BFB1AC0(a1))
  {
    v4 = *((_QWORD *)a1 + 1);
    if ((v4 & 4) != 0)
      a2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
    else
      a2 = a1;
  }
  return *(unsigned __int8 *)a2;
}

uint64_t sub_20C04B400(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = off_24C526FE8;
  v3 = (void **)(a1 + 8);
  sub_20BED2E10(&v3);
  return a1;
}

void sub_20C04B444(char *a1)
{
  void **v2;

  *(_QWORD *)a1 = off_24C526FE8;
  v2 = (void **)(a1 + 8);
  sub_20BED2E10(&v2);
  operator delete(a1);
}

uint64_t sub_20C04B48C(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C527010;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_20C04B4C8(void **__p)
{
  *__p = &off_24C527010;
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

uint64_t sub_20C04B51C(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = off_24C527060;
  v3 = (void **)(a1 + 8);
  sub_20C086448(&v3);
  return a1;
}

void sub_20C04B560(char *a1)
{
  void **v2;

  *(_QWORD *)a1 = off_24C527060;
  v2 = (void **)(a1 + 8);
  sub_20C086448(&v2);
  operator delete(a1);
}

_QWORD *sub_20C04B5A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &off_24C527088;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04B604(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &off_24C527088;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04B660(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = &off_24C5270B0;
  v2 = a1[3];
  a1[3] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[2];
  a1[2] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = a1[1];
  a1[1] = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  return a1;
}

void sub_20C04B6D4(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *__p = &off_24C5270B0;
  v2 = __p[3];
  __p[3] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[2];
  __p[2] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = __p[1];
  __p[1] = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  operator delete(__p);
}

_QWORD *sub_20C04B748(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &unk_24C526EA8;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04B7A8(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &unk_24C526EA8;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04B808(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &unk_24C526ED0;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04B868(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &unk_24C526ED0;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04B8C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &unk_24C526EF8;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04B928(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &unk_24C526EF8;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04B988(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &unk_24C526F20;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04B9E8(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &unk_24C526F20;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04BA48(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &unk_24C526F48;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04BAA8(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &unk_24C526F48;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04BB08(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &unk_24C526F70;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04BB68(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &unk_24C526F70;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

uint64_t sub_20C04BBC8(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = &unk_24C526F98;
  v3 = (void **)(a1 + 8);
  sub_20C086448(&v3);
  return a1;
}

void sub_20C04BC10(char *a1)
{
  void **v2;

  *(_QWORD *)a1 = &unk_24C526F98;
  v2 = (void **)(a1 + 8);
  sub_20C086448(&v2);
  operator delete(a1);
}

uint64_t sub_20C04BC5C(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = &unk_24C526FC0;
  v3 = (void **)(a1 + 8);
  sub_20C086448(&v3);
  return a1;
}

void sub_20C04BCA4(char *a1)
{
  void **v2;

  *(_QWORD *)a1 = &unk_24C526FC0;
  v2 = (void **)(a1 + 8);
  sub_20C086448(&v2);
  operator delete(a1);
}

_QWORD *sub_20C04BCF0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24C5270D8;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_20C04BD30(_QWORD *__p)
{
  uint64_t v2;

  v2 = __p[1];
  *__p = &off_24C5270D8;
  __p[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  operator delete(__p);
}

_QWORD *sub_20C04BD70(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &off_24C527100;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04BDCC(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &off_24C527100;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04BE28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = &off_24C527128;
  v2 = a1[2];
  a1[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = a1[1];
  a1[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  return a1;
}

void sub_20C04BE84(_QWORD *__p)
{
  uint64_t v2;
  uint64_t v3;

  *__p = &off_24C527128;
  v2 = __p[2];
  __p[2] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = __p[1];
  __p[1] = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  operator delete(__p);
}

_QWORD *sub_20C04BEE0(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24C527150;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_20C04BF20(_QWORD *__p)
{
  uint64_t v2;

  v2 = __p[1];
  *__p = &off_24C527150;
  __p[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  operator delete(__p);
}

uint64_t sub_20C04BF60(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = off_24C527178;
  v3 = (void **)(a1 + 8);
  sub_20C086448(&v3);
  return a1;
}

void sub_20C04BFA4(char *a1)
{
  void **v2;

  *(_QWORD *)a1 = off_24C527178;
  v2 = (void **)(a1 + 8);
  sub_20C086448(&v2);
  operator delete(a1);
}

uint64_t sub_20C04BFEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  if ((v1 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr))((v1 & 0xFFFFFFFFFFFFFFF8) + 176))(v4);
    v2 = sub_20C04BFEC(v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  else if (v1)
  {
    return *(unsigned int *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16);
  }
  else
  {
    return 0xFFFFFFFFLL;
  }
  return v2;
}

void sub_20C04C080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_20C04C09C@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v6;
  unsigned __int8 *result;
  uint64_t v8;

  v4 = a1;
  v6 = *((_QWORD *)a1 + 1);
  if ((v6 & 4) != 0)
    v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *a2;
  v8 = *((_QWORD *)*a2 + 1);
  if ((v8 & 4) != 0)
    result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 == *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

_QWORD *sub_20C04C12C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v4 = a1;
  v6 = a1[1];
  if ((v6 & 4) != 0)
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v8 & 4) != 0)
    result = (_QWORD *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 == *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C04C1BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04C2DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04C32C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04C44C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04C49C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04C5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04C60C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04C72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04C77C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04C89C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04C8EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04CA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04CA5C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04CB7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04CBCC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04CCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04CD3C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04CE5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04CEAC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04CFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C04D01C@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t result;
  char v9;

  v5 = *a1;
  v6 = *(_QWORD *)(v5 + 8);
  if ((v6 & 4) != 0)
    v7 = (unsigned __int8 *)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v7 = *(unsigned __int8 **)v5;
  result = sub_20BEB4EF8((uint64_t)&v9, a2, v7);
  *(_BYTE *)a3 = result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C04D08C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04D1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04D1FC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04D31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04D36C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04D48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04D4DC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04D5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04D64C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04D76C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04D7BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04D8DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04D92C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04DA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04DA9C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04DBBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04DC0C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04DD2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04DD7C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04DE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04DEEC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E05C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E1CC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E33C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E4AC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E5CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E61C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E78C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04E8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04E8FC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04EA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04EA6C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04EB8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04EBDC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04ECFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04ED4C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04EE6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04EEBC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04EFDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F02C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F19C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F2BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F30C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F47C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F59C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F5EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F75C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F87C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04F8CC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04F9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04FA3C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04FB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04FBAC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04FCCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04FD1C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04FE3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04FE8C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C04FFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C04FFFC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05011C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05016C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05028C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0502DC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0503FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05044C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05056C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0505BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0506DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05072C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05084C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05089C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0509BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C050A0C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C050B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C050B7C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C050C9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C050CEC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C050E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C050E5C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C050F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C050FCC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0510EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05113C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05125C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0512AC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0513CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05141C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05153C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05158C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0516AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0516FC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05181C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05186C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05198C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0519DC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C051AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C051B4C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C051C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C051CBC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C051DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C051E2C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C051F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C051F9C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0520BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05210C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05222C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05227C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05239C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0523EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05250C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05255C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05267C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0526CC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0527EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05283C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05295C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0529AC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C052ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C052B1C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C052C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C052C8C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C052DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C052DFC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C052F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C052F6C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05308C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0530DC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0531FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05324C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05336C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0533BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0534DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05352C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05364C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05369C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0537BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05380C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05392C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05397C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C053A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C053AEC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C053C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C053C5C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C053D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C053DCC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C053EEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C053F3C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05405C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0540AC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0541CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05421C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05433C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05438C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0544AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0544FC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05461C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05466C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "eq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05478C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0547DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD v4[4];
  char v5;

  if (*(_QWORD *)(a2 + 8) || *(_QWORD *)(*(_QWORD *)result + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::equal_to>::"
            "operator()(const VtValue &) const [Comparator = std::equal_to]";
    v5 = 0;
    result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  *(_BYTE *)a3 = 1;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

unsigned __int8 *sub_20C054870@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v6;
  unsigned __int8 *result;
  uint64_t v8;

  v4 = a1;
  v6 = *((_QWORD *)a1 + 1);
  if ((v6 & 4) != 0)
    v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *a2;
  v8 = *((_QWORD *)*a2 + 1);
  if ((v8 & 4) != 0)
    result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 != *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

_QWORD *sub_20C054900@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v4 = a1;
  v6 = a1[1];
  if ((v6 & 4) != 0)
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v8 & 4) != 0)
    result = (_QWORD *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 != *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C054990(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C054AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C054B00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C054C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C054C70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C054D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C054DE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C054F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C054F50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0550C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0551E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055230(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0553A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0554C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055510(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055680(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0557A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C0557F0@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t result;
  char v9;

  v5 = *a1;
  v6 = *(_QWORD *)(v5 + 8);
  if ((v6 & 4) != 0)
    v7 = (unsigned __int8 *)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v7 = *(unsigned __int8 **)v5;
  result = sub_20C055860((uint64_t)&v9, a2, v7);
  *(_BYTE *)a3 = result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

uint64_t sub_20C055860(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t result;

  v3 = a3;
  v4 = a2[23];
  if ((v4 & 0x80u) == 0)
    v5 = a2[23];
  else
    v5 = *((_QWORD *)a2 + 1);
  v6 = a3[23];
  v7 = (char)v6;
  if ((v6 & 0x80u) != 0)
    v6 = *((_QWORD *)a3 + 1);
  if (v5 != v6)
    return 1;
  if (v7 < 0)
    v3 = *(unsigned __int8 **)a3;
  if ((v4 & 0x80) != 0)
    return memcmp(*(const void **)a2, v3, *((_QWORD *)a2 + 1)) != 0;
  if (!a2[23])
    return 0;
  v8 = v4 - 1;
  do
  {
    v10 = *a2++;
    v9 = v10;
    v11 = *v3++;
    result = v9 != v11;
  }
  while (v9 == v11 && v8-- != 0);
  return result;
}

void sub_20C055900(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055A70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055BE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055D50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C055EC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C055FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056030(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0561A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0562C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056310(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056480(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0565A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0565F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056760(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0568D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0569F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056A40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056BB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056D20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C056E90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C056FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057000(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057170(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0572E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057450(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0575C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0576E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057730(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0578A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0579C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057A10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057B80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057CF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057E60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C057F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C057FD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0580F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058140(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0582B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0583D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058420(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058590(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0586B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058700(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058870(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0589E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058B50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058CC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058E30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C058F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C058FA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0590C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059110(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059280(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0593A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0593F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059560(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0596D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0597F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059840(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0599B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059B20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059C90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059E00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C059F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C059F70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A0E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A250(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A3C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A530(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A6A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A810(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05A930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05A980(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05AAA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05AAF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05AC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05AC60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05AD80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05ADD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05AEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05AF40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B0B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B1D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B220(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B390(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B500(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B670(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B7E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05B900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05B950(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05BA70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05BAC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05BBE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05BC30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05BD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05BDA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05BEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05BF10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C080(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C1F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C360(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C4D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C640(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C7B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05C8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05C920(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05CA40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05CA90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05CBB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05CC00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05CD20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05CD70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05CE90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05CEE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "neq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05D000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C05D050@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD v4[4];
  char v5;

  if (*(_QWORD *)(a2 + 8) || *(_QWORD *)(*(_QWORD *)result + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::not_equal_t"
            "o>::operator()(const VtValue &) const [Comparator = std::not_equal_to]";
    v5 = 0;
    result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  *(_BYTE *)a3 = 0;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

unsigned __int8 *sub_20C05D0E0@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v6;
  unsigned __int8 *result;
  uint64_t v8;

  v4 = a1;
  v6 = *((_QWORD *)a1 + 1);
  if ((v6 & 4) != 0)
    v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *a2;
  v8 = *((_QWORD *)*a2 + 1);
  if ((v8 & 4) != 0)
    result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 < *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

_QWORD *sub_20C05D170@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v4 = a1;
  v6 = a1[1];
  if ((v6 & 4) != 0)
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v8 & 4) != 0)
    result = (_QWORD *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 < *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C05D200(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05D320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05D370(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05D490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05D4E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05D600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05D650(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05D770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05D7C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05D8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05D930(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05DA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05DAA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05DBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05DC10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05DD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05DD80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05DEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05DEF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

BOOL sub_20C05E060@<W0>(uint64_t *a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  const void **v7;
  _BOOL8 result;
  char v9;

  v5 = *a1;
  v6 = *(_QWORD *)(v5 + 8);
  if ((v6 & 4) != 0)
    v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v7 = *(const void ***)v5;
  result = sub_20BDDDF74((uint64_t)&v9, a2, v7);
  *(_BYTE *)a3 = result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C05E0D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E1F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05E240(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05E3B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E4D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05E520(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05E690(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E7B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05E800(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05E920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05E970(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05EA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05EAE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05EC00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05EC50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05ED70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05EDC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05EEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05EF30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F0A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F1C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F210(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F380(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F4F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F660(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F7D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05F8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05F940(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05FA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05FAB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05FBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05FC20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05FD40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05FD90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C05FEB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C05FF00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060070(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0601E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060350(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0604C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0605E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060630(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0607A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0608C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060910(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060A80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060BF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060D60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C060ED0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C060FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061040(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0611B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0612D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061320(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061490(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0615B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061600(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061770(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0618E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061A50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061BC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061D30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C061EA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C061FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062010(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062180(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0622A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0622F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062460(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0625D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0626F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062740(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0628B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0629D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062A20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062B90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062D00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062E70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C062F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C062FE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063150(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0632C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0633E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063430(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0635A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0636C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063710(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063880(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0639A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0639F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063B60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063CD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063E40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C063F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C063FB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0640D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064120(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064290(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0643B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064400(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064570(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0646E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064850(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0649C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064B30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064CA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064E10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C064F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C064F80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0650A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0650F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C065210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C065260(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C065380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0653D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0654F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C065540(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C065660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0656B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0657D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C065820(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD v4[4];
  char v5;

  if (*(_QWORD *)(a2 + 8) || *(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::less>::oper"
            "ator()(const VtValue &) const [Comparator = std::less]";
    v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_20C0658B8(a3);
}

void sub_20C0658B8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Comparison operation not supported for None");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "lt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0659D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_20C065A28@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v6;
  unsigned __int8 *result;
  uint64_t v8;

  v4 = a1;
  v6 = *((_QWORD *)a1 + 1);
  if ((v6 & 4) != 0)
    v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *a2;
  v8 = *((_QWORD *)*a2 + 1);
  if ((v8 & 4) != 0)
    result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 <= *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

_QWORD *sub_20C065AB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v4 = a1;
  v6 = a1[1];
  if ((v6 & 4) != 0)
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v8 & 4) != 0)
    result = (_QWORD *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 <= *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C065B48(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C065C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C065CB8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C065DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C065E28(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C065F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C065F98(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0660B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066108(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066278(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0663E8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066558(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0666C8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0667E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066838(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

BOOL sub_20C0669A8@<W0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  const void **v7;
  _BOOL8 result;
  char v9;

  v5 = *a1;
  v6 = *(_QWORD *)(v5 + 8);
  if ((v6 & 4) != 0)
    v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v7 = *(const void ***)v5;
  result = sub_20C066A18((uint64_t)&v9, a2, v7);
  *(_BYTE *)a3 = result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

BOOL sub_20C066A18(uint64_t a1, _QWORD *a2, const void **a3)
{
  int v3;
  int v4;
  size_t v5;
  const void *v6;
  size_t v7;
  size_t v8;
  int v9;

  v3 = *((char *)a2 + 23);
  v4 = *((char *)a3 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a3 + 23);
  else
    v5 = (size_t)a3[1];
  if (v4 >= 0)
    v6 = a3;
  else
    v6 = *a3;
  if (v3 >= 0)
    v7 = *((unsigned __int8 *)a2 + 23);
  else
    v7 = a2[1];
  if (v3 < 0)
    a2 = (_QWORD *)*a2;
  if (v7 >= v5)
    v8 = v5;
  else
    v8 = v7;
  v9 = memcmp(v6, a2, v8);
  if (v9)
    return v9 >= 0;
  else
    return v5 >= v7;
}

void sub_20C066A80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066BF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066D60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C066ED0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C066FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067040(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0671B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0672D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067320(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067490(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0675B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067600(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067770(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0678E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067A00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067A50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067BC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067D30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C067EA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C067FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068010(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068180(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0682A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0682F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068460(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0685D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0686F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068740(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0688B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0689D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068A20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068B90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068D00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068E70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C068F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C068FE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069150(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0692C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0693E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069430(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0695A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0696C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069710(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069880(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0699A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0699F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069B10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069B60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069CD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069E40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C069F60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C069FB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A120(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A290(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A400(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A570(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A6E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A850(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06A970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06A9C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06AAE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06AB30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06AC50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06ACA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06ADC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06AE10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06AF30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06AF80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B0F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B260(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B3D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B4F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B540(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B6B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B820(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06B940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06B990(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06BAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06BB00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06BC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06BC70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06BD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06BDE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06BF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06BF50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C0C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C1E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C230(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C3A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C510(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C680(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C7F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06C910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06C960(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06CA80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06CAD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06CBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06CC40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06CD60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06CDB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06CED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06CF20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D090(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D200(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D370(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D4E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D650(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D7C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06D8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06D930(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06DA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06DAA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06DBC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06DC10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06DD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06DD80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06DEA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06DEF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06E010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06E060(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06E180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06E1D0(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD v4[4];
  char v5;

  if (*(_QWORD *)(a2 + 8) || *(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::less_equal>"
            "::operator()(const VtValue &) const [Comparator = std::less_equal]";
    v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_20C06E268(a3);
}

void sub_20C06E268(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Comparison operation not supported for None");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "leq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06E388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_20C06E3D8@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v6;
  unsigned __int8 *result;
  uint64_t v8;

  v4 = a1;
  v6 = *((_QWORD *)a1 + 1);
  if ((v6 & 4) != 0)
    v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *a2;
  v8 = *((_QWORD *)*a2 + 1);
  if ((v8 & 4) != 0)
    result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 > *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

_QWORD *sub_20C06E468@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v4 = a1;
  v6 = a1[1];
  if ((v6 & 4) != 0)
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v8 & 4) != 0)
    result = (_QWORD *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 > *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C06E4F8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06E618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06E668(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06E788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06E7D8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06E8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06E948(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06EA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06EAB8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06EBD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06EC28(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06ED48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06ED98(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06EEB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06EF08(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06F078(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06F1E8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

BOOL sub_20C06F358@<W0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  const void **v7;
  _BOOL8 result;
  char v9;

  v5 = *a1;
  v6 = *(_QWORD *)(v5 + 8);
  if ((v6 & 4) != 0)
    v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v7 = *(const void ***)v5;
  result = sub_20C06F3C8((uint64_t)&v9, a2, v7);
  *(_BYTE *)a3 = result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

BOOL sub_20C06F3C8(uint64_t a1, _QWORD *a2, const void **a3)
{
  int v3;
  int v4;
  size_t v5;
  const void *v6;
  size_t v7;
  size_t v8;
  int v9;

  v3 = *((char *)a2 + 23);
  v4 = *((char *)a3 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a3 + 23);
  else
    v5 = (size_t)a3[1];
  if (v4 >= 0)
    v6 = a3;
  else
    v6 = *a3;
  if (v3 >= 0)
    v7 = *((unsigned __int8 *)a2 + 23);
  else
    v7 = a2[1];
  if (v3 < 0)
    a2 = (_QWORD *)*a2;
  if (v7 >= v5)
    v8 = v5;
  else
    v8 = v7;
  v9 = memcmp(v6, a2, v8);
  if (v9)
    return v9 < 0;
  else
    return v5 < v7;
}

void sub_20C06F430(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06F5A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06F710(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06F880(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06F9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06F9F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06FB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06FB60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06FC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06FCD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06FDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06FE40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C06FF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C06FFB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0700D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070120(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070290(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0703B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070400(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070570(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0706E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070850(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0709C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070B30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070C50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070CA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070E10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C070F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C070F80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0710A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0710F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071260(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0713D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0714F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071540(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0716B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0717D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071820(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071990(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071B00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071C70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071DE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C071F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C071F50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0720C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0721E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072230(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0723A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0724C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072510(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072680(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0727A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0727F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072960(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072AD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072C40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072DB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C072ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C072F20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073090(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0731B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073200(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073370(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0734E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073650(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0737C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0738E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073930(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073AA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073C10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073D80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C073EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C073EF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074060(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0741D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0742F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074340(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0744B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0745D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074620(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074790(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0748B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074900(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074A70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074BE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074D50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074E70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C074EC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C074FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075030(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0751A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0752C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075310(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075480(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0755A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0755F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075760(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0758D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0759F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075A40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075BB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075CD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075D20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C075E90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C075FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C076000(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C076170(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0762E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C076450(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0765C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0766E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C076730(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0768A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0769C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C076A10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C076B80(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD v4[4];
  char v5;

  if (*(_QWORD *)(a2 + 8) || *(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::greater>::o"
            "perator()(const VtValue &) const [Comparator = std::greater]";
    v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_20C076C18(a3);
}

void sub_20C076C18(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Comparison operation not supported for None");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "gt", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076D38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_20C076D88@<X0>(unsigned __int8 *a1@<X0>, unsigned __int8 **a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v4;
  uint64_t v6;
  unsigned __int8 *result;
  uint64_t v8;

  v4 = a1;
  v6 = *((_QWORD *)a1 + 1);
  if ((v6 & 4) != 0)
    v4 = (unsigned __int8 *)(*(uint64_t (**)(unsigned __int8 *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *a2;
  v8 = *((_QWORD *)*a2 + 1);
  if ((v8 & 4) != 0)
    result = (unsigned __int8 *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 >= *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

_QWORD *sub_20C076E18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;

  v4 = a1;
  v6 = a1[1];
  if ((v6 & 4) != 0)
    v4 = (_QWORD *)(*(uint64_t (**)(_QWORD *))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  result = *(_QWORD **)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v8 & 4) != 0)
    result = (_QWORD *)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
  *(_BYTE *)a3 = *v4 >= *result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

void sub_20C076EA8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C076FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077018(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077188(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0772A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0772F8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077468(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0775D8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0776F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077748(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0778B8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0779D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077A28(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077B48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077B98(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

BOOL sub_20C077D08@<W0>(uint64_t *a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  const void **v7;
  _BOOL8 result;
  char v9;

  v5 = *a1;
  v6 = *(_QWORD *)(v5 + 8);
  if ((v6 & 4) != 0)
    v7 = (const void **)(*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v7 = *(const void ***)v5;
  result = sub_20C077D78((uint64_t)&v9, a2, v7);
  *(_BYTE *)a3 = result;
  *(_QWORD *)(a3 + 8) = &unk_24C51FCF3;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = 0;
  return result;
}

BOOL sub_20C077D78(uint64_t a1, const void **a2, const void **a3)
{
  int v3;
  int v4;
  size_t v5;
  const void *v6;
  size_t v7;
  const void *v8;
  size_t v9;
  int v10;

  v3 = *((char *)a3 + 23);
  v4 = *((char *)a2 + 23);
  if (v4 >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = (size_t)a2[1];
  if (v4 >= 0)
    v6 = a2;
  else
    v6 = *a2;
  if (v3 >= 0)
    v7 = *((unsigned __int8 *)a3 + 23);
  else
    v7 = (size_t)a3[1];
  if (v3 >= 0)
    v8 = a3;
  else
    v8 = *a3;
  if (v7 >= v5)
    v9 = v5;
  else
    v9 = v7;
  v10 = memcmp(v6, v8, v9);
  if (v10)
    return v10 >= 0;
  else
    return v5 >= v7;
}

void sub_20C077DE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C077F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C077F50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0780C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0781E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078230(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0783A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0784C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078510(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078680(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0787A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0787F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078960(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078AD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078C40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078DB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C078ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C078F20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079090(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0791B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079200(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079370(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0794E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079650(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0797C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0798E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079930(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079AA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079C10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079D80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C079EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C079EF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A060(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A1D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A340(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A4B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A620(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A790(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07A8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07A900(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07AA20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07AA70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07AB90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07ABE0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07AD00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07AD50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07AE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07AEC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07AFE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B030(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B1A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B310(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B480(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B5F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B760(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07B8D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07B9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07BA40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07BB60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07BBB0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07BCD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07BD20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07BE40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07BE90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07BFB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C000(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C170(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C2E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C450(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C5C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C6E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C730(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07C8A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07C9C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07CA10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07CB30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07CB80(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07CCA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07CCF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07CE10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07CE60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07CF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07CFD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D0F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D140(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D2B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D420(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D590(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D700(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D870(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07D990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07D9E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07DB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07DB50(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07DC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07DCC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07DDE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07DE30(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07DF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07DFA0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E0C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E110(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E280(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E3A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E3F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E560(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E6D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E7F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E840(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07E960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07E9B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07EAD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07EB20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07EC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07EC90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07EDB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07EE00(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07EF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07EF70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07F090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07F0E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07F200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07F250(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07F370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07F3C0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type for comparison");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07F4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C07F530(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD v4[4];
  char v5;

  if (*(_QWORD *)(a2 + 8) || *(_QWORD *)(*(_QWORD *)a1 + 8))
  {
    v4[0] = "sdf/variableExpressionImpl.cpp";
    v4[1] = "operator()";
    v4[2] = 614;
    v4[3] = "EvalResult pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::_ComparisonVisitor<std::greater_equ"
            "al>::operator()(const VtValue &) const [Comparator = std::greater_equal]";
    v5 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v4, "x.IsEmpty() && _y.IsEmpty()", 0);
  }
  sub_20C07F5C8(a3);
}

void sub_20C07F5C8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Comparison operation not supported for None");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "geq", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C07F6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

__int128 *sub_20C07F738(uint64_t *a1, __int128 *a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  __int128 *v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  __int128 *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  _QWORD v27[5];

  v5 = a2;
  if (a5 >= 1)
  {
    v7 = a3;
    v11 = a1[2];
    v9 = (uint64_t)(a1 + 2);
    v10 = v11;
    v12 = *(_QWORD *)(v9 - 8);
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v12) >> 3)) >= a5)
    {
      v20 = v12 - (_QWORD)a2;
      if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - (_QWORD)a2) >> 3)) >= a5)
      {
        v21 = (__int128 *)(a3 + 24 * a5);
      }
      else
      {
        v21 = (__int128 *)(a3 + 8 * ((uint64_t)(v12 - (_QWORD)a2) >> 3));
        a1[1] = sub_20BE7579C(v9, v21, a4, *(_QWORD *)(v9 - 8));
        if (v20 < 1)
          return v5;
      }
      sub_20BE752D4((uint64_t)a1, (uint64_t)v5, v12, (uint64_t)v5 + 24 * a5);
      sub_20C07F91C((uint64_t)v27, (__int128 *)v7, v21, (uint64_t)v5);
    }
    else
    {
      v13 = *a1;
      v14 = a5 - 0x5555555555555555 * ((uint64_t)(v12 - *a1) >> 3);
      if (v14 > 0xAAAAAAAAAAAAAAALL)
        sub_20BDDF694();
      v15 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - v13) >> 3);
      v16 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v13) >> 3);
      v17 = 2 * v16;
      if (2 * v16 <= v14)
        v17 = v14;
      if (v16 >= 0x555555555555555)
        v18 = 0xAAAAAAAAAAAAAAALL;
      else
        v18 = v17;
      v27[4] = v9;
      if (v18)
        v19 = (char *)sub_20BDE4FF4(v9, v18);
      else
        v19 = 0;
      v22 = &v19[24 * v15];
      v27[0] = v19;
      v27[1] = v22;
      v27[3] = &v19[24 * v18];
      v23 = &v22[24 * a5];
      v24 = 24 * a5;
      do
      {
        v25 = *(_OWORD *)v7;
        *((_QWORD *)v22 + 2) = *(_QWORD *)(v7 + 16);
        *(_OWORD *)v22 = v25;
        v22 += 24;
        *(_QWORD *)(v7 + 8) = 0;
        *(_QWORD *)(v7 + 16) = 0;
        *(_QWORD *)v7 = 0;
        v7 += 24;
        v24 -= 24;
      }
      while (v24);
      v27[2] = v23;
      v5 = (__int128 *)sub_20BE753F0((uint64_t)a1, v27, v5);
      sub_20BDF3648((uint64_t)v27);
    }
  }
  return v5;
}

void sub_20C07F8FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

__int128 *sub_20C07F91C(uint64_t a1, __int128 *a2, __int128 *a3, uint64_t a4)
{
  __int128 *v5;
  __int128 v7;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0)
        operator delete(*(void **)a4);
      v7 = *v5;
      *(_QWORD *)(a4 + 16) = *((_QWORD *)v5 + 2);
      *(_OWORD *)a4 = v7;
      a4 += 24;
      *((_BYTE *)v5 + 23) = 0;
      *(_BYTE *)v5 = 0;
      v5 = (__int128 *)((char *)v5 + 24);
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_20C07F98C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if ((v3 & 4) != 0)
    a1 = (*(uint64_t (**)(void))((v3 & 0xFFFFFFFFFFFFFFF8) + 168))();
  return sub_20C07FCE4(a2, *(_BYTE *)a1);
}

uint64_t sub_20C07F9C8(uint64_t *a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void *__p[2];
  uint64_t v9;

  v3 = a1[1];
  if ((v3 & 4) != 0)
    v4 = (*(uint64_t (**)(void))((v3 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v4 = *a1;
  if (*(char *)(v4 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)v4, *(_QWORD *)(v4 + 8));
  }
  else
  {
    v5 = *(_OWORD *)v4;
    v9 = *(_QWORD *)(v4 + 16);
    *(_OWORD *)__p = v5;
  }
  v6 = sub_20C0805FC(a2, (__int128 *)__p);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
  return v6;
}

void sub_20C07FA54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C07FA70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;

  v1 = a1[1];
  if ((v1 & 4) != 0)
    a1 = (uint64_t *)(*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  v2 = *a1;
  if ((*a1 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 2, v3));
    if ((v4 & 1) == 0)
      v2 &= 0xFFFFFFFFFFFFFFF8;
    if ((v2 & 7) != 0)
    {
      v5 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stlxr(v6 - 2, v5));
    }
  }
  return 0;
}

uint64_t sub_20C07FAE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v1 = a1[1];
  if ((v1 & 4) != 0)
    v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v2 = *a1;
  v3 = *(_OWORD *)(v2 + 16);
  v8 = *(_OWORD *)v2;
  v9 = v3;
  v4 = *(_QWORD *)(v2 + 32);
  v10 = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 - 16);
    if (*((_QWORD *)&v9 + 1))
      v5 = (unint64_t *)*((_QWORD *)&v9 + 1);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20BF5618C((uint64_t)&v8);
  return 0;
}

uint64_t sub_20C07FB58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v1 = a1[1];
  if ((v1 & 4) != 0)
    v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v2 = *a1;
  v3 = *(_OWORD *)(v2 + 16);
  v8 = *(_OWORD *)v2;
  v9 = v3;
  v4 = *(_QWORD *)(v2 + 32);
  v10 = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 - 16);
    if (*((_QWORD *)&v9 + 1))
      v5 = (unint64_t *)*((_QWORD *)&v9 + 1);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20C008280(&v8);
  return 0;
}

uint64_t sub_20C07FBD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v1 = a1[1];
  if ((v1 & 4) != 0)
    v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v2 = *a1;
  v3 = *(_OWORD *)(v2 + 16);
  v8 = *(_OWORD *)v2;
  v9 = v3;
  v4 = *(_QWORD *)(v2 + 32);
  v10 = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 - 16);
    if (*((_QWORD *)&v9 + 1))
      v5 = (unint64_t *)*((_QWORD *)&v9 + 1);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  sub_20C00918C(&v8);
  return 0;
}

uint64_t sub_20C07FC48(uint64_t a1)
{
  uint64_t v1;
  __int128 *v2;
  _BYTE v4[128];

  v1 = *(_QWORD *)(a1 + 8);
  if ((v1 & 4) != 0)
    v2 = (__int128 *)(*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v2 = *(__int128 **)a1;
  sub_20BEFBAD8((uint64_t)v4, v2);
  pxrInternal__aapl__pxrReserved__::GfFrustum::~GfFrustum((pxrInternal__aapl__pxrReserved__::GfFrustum *)v4);
  return 0;
}

uint64_t sub_20C07FC94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4[3];

  v1 = a1[1];
  if ((v1 & 4) != 0)
    v2 = (*(uint64_t (**)(void))((v1 & 0xFFFFFFFFFFFFFFF8) + 168))();
  else
    v2 = *a1;
  sub_20BF874BC(v4, v2);
  sub_20BE6100C((uint64_t)v4, (_QWORD *)v4[1]);
  return 0;
}

uint64_t sub_20C07FCE4(pxrInternal__aapl__pxrReserved__::VtValue *a1, char a2)
{
  uint64_t result;
  _BYTE *v4[5];
  char v5;

  v5 = a2;
  if (*((_QWORD *)a1 + 1))
  {
    result = sub_20C07FEB8(a1);
    if (!(_DWORD)result)
      return result;
    v4[0] = &v5;
    sub_20C07FEF0(a1, v4);
  }
  else
  {
    sub_20C07FD7C((uint64_t)v4, 1uLL, &v5);
    sub_20C07FDF0(a1, (uint64_t)v4);
    sub_20BF5618C((uint64_t)v4);
  }
  return 1;
}

void sub_20C07FD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C07FD7C(uint64_t a1, unint64_t a2, _BYTE *a3)
{
  _BYTE *v7;

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20BF56210((_QWORD *)a1);
  v7 = a3;
  sub_20C001780((unint64_t *)a1, a2, &v7);
  return a1;
}

void sub_20C07FDD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C07FDF0(_QWORD *a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, (uint64_t)a1);
  a1[1] = &off_24C524F38;
  sub_20BF56B40(a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C07FE80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20BDC12F4(exception_object);
}

uint64_t sub_20C07FEB8(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (*(_DWORD *)((v1 & 0xFFFFFFFFFFFFFFF8) + 16) == 47)
    return 1;
  if ((v1 & 4) != 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C51DCA8);
  else
    return 0;
}

void sub_20C07FEF0(_QWORD *a1, _BYTE **a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v3 = sub_20C07FF98(a1);
  v4 = *(_OWORD *)(v3 + 16);
  v6 = *(_OWORD *)v3;
  v7 = v4;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = 0;
  sub_20C080028((uint64_t)&v6, *a2);
  if ((__int128 *)v3 != &v6)
  {
    sub_20BF5618C(v3);
    v5 = v7;
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v5;
    v6 = 0u;
    v7 = 0u;
    *(_QWORD *)(v3 + 32) = v8;
    v8 = 0;
  }
  sub_20BF5618C((uint64_t)&v6);
}

void sub_20C07FF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C07FF98(_QWORD *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C0016C4((_OWORD **)a1);
}

void sub_20C080028(uint64_t a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  int v17;
  _QWORD v18[4];
  char v19;

  if (!*(_DWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)(a1 + 24))
      goto LABEL_14;
    v5 = *(_QWORD *)(a1 + 32);
    if (!v5)
      goto LABEL_10;
    v6 = atomic_load((unint64_t *)(v5 - 16));
    if (v6 != 1)
      goto LABEL_14;
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      if (*(_QWORD *)(a1 + 24))
        v7 = (uint64_t *)a1;
      else
        v7 = (uint64_t *)(v5 - 8);
      v8 = *v7;
    }
    else
    {
LABEL_10:
      v8 = 0;
    }
    if (v4 != v8)
    {
      *(_BYTE *)(v5 + v4) = *a2;
LABEL_13:
      ++*(_QWORD *)a1;
      return;
    }
LABEL_14:
    v9 = *(char **)(a1 + 32);
    v10 = 1;
    do
    {
      v11 = v10;
      v10 *= 2;
    }
    while (v11 < v4 + 1);
    v12 = sub_20C00190C(a1, v11);
    v13 = v12;
    if (v4)
    {
      v14 = v4;
      v15 = v12;
      do
      {
        v16 = *v9++;
        *v15++ = v16;
        --v14;
      }
      while (v14);
    }
    *((_BYTE *)v12 + v4) = *a2;
    sub_20BF5618C(a1);
    *(_QWORD *)(a1 + 32) = v13;
    goto LABEL_13;
  }
  v18[0] = "vt/array.h";
  v18[1] = "emplace_back";
  v18[2] = 433;
  v18[3] = "void pxrInternal__aapl__pxrReserved__::VtArray<BOOL>::emplace_back(Args &&...) [T = BOOL, Args = <BOOL>]";
  v19 = 0;
  if (*(_DWORD *)(a1 + 12))
  {
    if (*(_DWORD *)(a1 + 16))
      v17 = 4;
    else
      v17 = 3;
  }
  else
  {
    v17 = 2;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Array rank %u != 1", v17);
}

uint64_t sub_20C08018C(pxrInternal__aapl__pxrReserved__::VtValue *a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v4[5];
  uint64_t v5;

  v5 = a2;
  if (*((_QWORD *)a1 + 1))
  {
    result = sub_20C032314(a1);
    if (!(_DWORD)result)
      return result;
    v4[0] = &v5;
    sub_20C080360(a1, v4);
  }
  else
  {
    sub_20C080224((uint64_t)v4, 1uLL, &v5);
    sub_20C080298(a1, (uint64_t)v4);
    sub_20BF5618C((uint64_t)v4);
  }
  return 1;
}

void sub_20C08020C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C080224(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t *v7;

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20BF56210((_QWORD *)a1);
  v7 = a3;
  sub_20C004484((unint64_t *)a1, a2, &v7);
  return a1;
}

void sub_20C080280(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C080298(_QWORD *a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, (uint64_t)a1);
  a1[1] = &off_24C5250B0;
  sub_20BF56B40(a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C080328(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20BDC12F4(exception_object);
}

void sub_20C080360(_QWORD *a1, _QWORD **a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v3 = sub_20C080408(a1);
  v4 = *(_OWORD *)(v3 + 16);
  v6 = *(_OWORD *)v3;
  v7 = v4;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = 0;
  sub_20C080498((uint64_t)&v6, *a2);
  if ((__int128 *)v3 != &v6)
  {
    sub_20BF5618C(v3);
    v5 = v7;
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v5;
    v6 = 0u;
    v7 = 0u;
    *(_QWORD *)(v3 + 32) = v8;
    v8 = 0;
  }
  sub_20BF5618C((uint64_t)&v6);
}

void sub_20C0803F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C080408(_QWORD *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C0043C4((_OWORD **)a1);
}

void sub_20C080498(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  _QWORD v18[4];
  char v19;

  if (!*(_DWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)(a1 + 24))
      goto LABEL_14;
    v5 = *(_QWORD *)(a1 + 32);
    if (!v5)
      goto LABEL_10;
    v6 = atomic_load((unint64_t *)(v5 - 16));
    if (v6 != 1)
      goto LABEL_14;
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      if (*(_QWORD *)(a1 + 24))
        v7 = (uint64_t *)a1;
      else
        v7 = (uint64_t *)(v5 - 8);
      v8 = *v7;
    }
    else
    {
LABEL_10:
      v8 = 0;
    }
    if (v4 != v8)
    {
      *(_QWORD *)(v5 + 8 * v4) = *a2;
LABEL_13:
      ++*(_QWORD *)a1;
      return;
    }
LABEL_14:
    v9 = *(uint64_t **)(a1 + 32);
    v10 = 1;
    do
    {
      v11 = v10;
      v10 *= 2;
    }
    while (v11 < v4 + 1);
    v12 = sub_20C004638(a1, v11);
    v13 = v12;
    if (v4)
    {
      v14 = 8 * v4;
      v15 = v12;
      do
      {
        v16 = *v9++;
        *v15++ = v16;
        v14 -= 8;
      }
      while (v14);
    }
    v12[v4] = *a2;
    sub_20BF5618C(a1);
    *(_QWORD *)(a1 + 32) = v13;
    goto LABEL_13;
  }
  v18[0] = "vt/array.h";
  v18[1] = "emplace_back";
  v18[2] = 433;
  v18[3] = "void pxrInternal__aapl__pxrReserved__::VtArray<long long>::emplace_back(Args &&...) [T = long long, Args = <long long>]";
  v19 = 0;
  if (*(_DWORD *)(a1 + 12))
  {
    if (*(_DWORD *)(a1 + 16))
      v17 = 4;
    else
      v17 = 3;
  }
  else
  {
    v17 = 2;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Array rank %u != 1", v17);
}

uint64_t sub_20C0805FC(pxrInternal__aapl__pxrReserved__::VtValue *a1, __int128 *a2)
{
  uint64_t result;
  __int128 *v5[5];

  if (*((_QWORD *)a1 + 1))
  {
    result = sub_20BFED418(a1);
    if (!(_DWORD)result)
      return result;
    v5[0] = a2;
    sub_20C0807CC(a1, v5);
  }
  else
  {
    sub_20C080690((uint64_t)v5, 1uLL, a2);
    sub_20C080704(a1, (uint64_t)v5);
    sub_20C008280(v5);
  }
  return 1;
}

void sub_20C080678(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C008280((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C080690(uint64_t a1, unint64_t a2, __int128 *a3)
{
  __int128 *v7;

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20C008340((_QWORD *)a1);
  v7 = a3;
  sub_20C0083C4((unint64_t *)a1, a2, &v7);
  return a1;
}

void sub_20C0806EC(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20C008280(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C080704(_QWORD *a1, uint64_t a2)
{
  _BYTE v5[8];
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  sub_20BF4C144((uint64_t)v5, (uint64_t)a1);
  a1[1] = off_24C525448;
  sub_20BF56B40(a1, a2);
  if (v6)
    (*(void (**)(_BYTE *))(v6 + 32))(v5);
  return a1;
}

void sub_20C080794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20BDC12F4(exception_object);
}

void sub_20C0807CC(_QWORD *a1, __int128 **a2)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v3 = sub_20C080874(a1);
  v4 = *(_OWORD *)(v3 + 16);
  v6 = *(_OWORD *)v3;
  v7 = v4;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = 0;
  sub_20C080904((uint64_t)&v6, *a2);
  if ((__int128 *)v3 != &v6)
  {
    sub_20C008280((_QWORD *)v3);
    v5 = v7;
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v5;
    v6 = 0u;
    v7 = 0u;
    *(_QWORD *)(v3 + 32) = v8;
    v8 = 0;
  }
  sub_20C008280(&v6);
}

void sub_20C08085C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C008280(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C080874(_QWORD *a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if ((v2 & 4) != 0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD *))((v2 & 0xFFFFFFFFFFFFFFF8) + 176))(v4, a1);
    sub_20BF4B5D8(a1, v4);
    sub_20BF4C2D8((uint64_t)v4);
  }
  return sub_20C0081A8((_OWORD **)a1);
}

void sub_20C080904(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  _QWORD v19[4];
  char v20;

  if (!*(_DWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)(a1 + 24))
      goto LABEL_15;
    v5 = *(_QWORD *)(a1 + 32);
    if (!v5)
      goto LABEL_10;
    v6 = atomic_load((unint64_t *)(v5 - 16));
    if (v6 != 1)
      goto LABEL_15;
    v5 = *(_QWORD *)(a1 + 32);
    if (v5)
    {
      if (*(_QWORD *)(a1 + 24))
        v7 = (uint64_t *)a1;
      else
        v7 = (uint64_t *)(v5 - 8);
      v8 = *v7;
    }
    else
    {
LABEL_10:
      v8 = 0;
    }
    if (v4 != v8)
    {
      v9 = *a2;
      v10 = v5 + 24 * v4;
      *(_QWORD *)(v10 + 16) = *((_QWORD *)a2 + 2);
      *(_OWORD *)v10 = v9;
      *((_QWORD *)a2 + 1) = 0;
      *((_QWORD *)a2 + 2) = 0;
      *(_QWORD *)a2 = 0;
LABEL_13:
      ++*(_QWORD *)a1;
      return;
    }
LABEL_15:
    v11 = *(_QWORD *)(a1 + 32);
    v12 = 1;
    do
    {
      v13 = v12;
      v12 *= 2;
    }
    while (v13 < v4 + 1);
    v14 = sub_20C008558(a1, v13);
    v15 = 3 * v4;
    sub_20C0086AC(v11, v11 + 8 * v15, (uint64_t)v14);
    v16 = *((_QWORD *)a2 + 2);
    v17 = &v14[v15];
    *(_OWORD *)v17 = *a2;
    v17[2] = v16;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    sub_20C008280((_QWORD *)a1);
    *(_QWORD *)(a1 + 32) = v14;
    goto LABEL_13;
  }
  v19[0] = "vt/array.h";
  v19[1] = "emplace_back";
  v19[2] = 433;
  v19[3] = "void pxrInternal__aapl__pxrReserved__::VtArray<std::string>::emplace_back(Args &&...) [T = std::string, Args "
           "= <std::string>]";
  v20 = 0;
  if (*(_DWORD *)(a1 + 12))
  {
    if (*(_DWORD *)(a1 + 16))
      v18 = 4;
    else
      v18 = 3;
  }
  else
  {
    v18 = 2;
  }
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v19, 1, (pxrInternal__aapl__pxrReserved__ *)"Array rank %u != 1", v18);
}

void sub_20C080A8C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080ADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080AF8(uint64_t *a1@<X0>, const char *a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char **v12;
  char v13;
  __int128 __p;
  char v15;
  __int128 v16;

  *(_QWORD *)&v16 = *MEMORY[0x24BDAC8D0];
  if (*((char *)a1 + 23) >= 0)
    v5 = a1;
  else
    v5 = (uint64_t *)*a1;
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", a2, a3, "contains", v5);
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &v9;
  v13 = 0;
  v9 = (char *)operator new(0x18uLL);
  v10 = v9;
  v11 = v9 + 24;
  v6 = sub_20BFB76A8((uint64_t)&v11, &__p, &v16, v9);
  v7 = v9;
  v8 = v11;
  a4[1] = 0;
  a4[2] = v7;
  a4[3] = v6;
  a4[4] = v8;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &v9;
  sub_20BDE5038((void ***)&v12);
  if (v15 < 0)
    operator delete((void *)__p);
}

void sub_20C080BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_20BDE5038(&a15);
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C080C2C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080C7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080C98(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080CE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080D04(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080D54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080D70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080DC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080DDC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080E48(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080EB4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080F04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080F20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080F70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080F8C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C080FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C080FF8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081064(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0810B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0810D0(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, char **a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  const char *v9;
  char *v10;
  void *__p[2];
  char v12;

  if ((sub_20BFB4608(*a1) & 1) != 0)
  {
    v6 = *((_QWORD *)*a1 + 1);
    if ((v6 & 4) != 0)
      v7 = (*(uint64_t (**)(void))((v6 & 0xFFFFFFFFFFFFFFF8) + 168))();
    else
      v7 = *(_QWORD *)*a1;
    if (*(char *)(v7 + 23) >= 0)
      v8 = (char *)v7;
    else
      v8 = *(char **)v7;
    *(_BYTE *)a3 = pxrInternal__aapl__pxrReserved__::TfStringContains(a2, v8);
    a3[1] = &unk_24C51FCF3;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  else
  {
    sub_20BDDC0E4(__p, "Invalid search value");
    sub_20C080AF8((uint64_t *)__p, v9, v10, a3);
    if (v12 < 0)
      operator delete(__p[0]);
  }
}

void sub_20C081190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0811AC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0811FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081218(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081284(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0812D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0812F0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08135C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0813AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0813C8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081418(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081434(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0814A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0814F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08150C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08155C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081578(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0815C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0815E4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081650(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0816A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0816BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08170C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081728(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081794(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0817E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081800(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08186C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0818BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0818D8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081944(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0819B0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081A1C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081A88(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081AF4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081B60(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081BB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081BCC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081C1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081C38(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081CA4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081CF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081D10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081D7C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081DE8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081E54(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081EC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081F2C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081F7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C081F98(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C081FE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082004(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, size_t *a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  size_t v7;
  char *v8;
  pxrInternal__aapl__pxrReserved__::VtValue *v9;
  uint64_t v10;
  size_t v11;
  char *v12;
  char *v13;
  char *v14;
  const char *v15;
  char *v16;
  void *__p[2];
  char v18;

  if ((sub_20BFB1AC0(*a1) & 1) != 0)
  {
    v6 = (char *)a2[4];
    v7 = *a2;
    v8 = &v6[*a2];
    v9 = *a1;
    v10 = *((_QWORD *)*a1 + 1);
    if ((v10 & 4) != 0)
    {
      v9 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(void))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))();
      v12 = (char *)a2[4];
      v11 = *a2;
    }
    else
    {
      v11 = *a2;
      v12 = v6;
    }
    v13 = (char *)memchr(v6, *(unsigned __int8 *)v9, v7);
    if (v13)
      v14 = v13;
    else
      v14 = v8;
    *(_BYTE *)a3 = v14 != &v12[v11];
    a3[1] = &unk_24C51FCF3;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  else
  {
    sub_20BDDC0E4(__p, "Invalid search value");
    sub_20C080AF8((uint64_t *)__p, v15, v16, a3);
    if (v18 < 0)
      operator delete(__p[0]);
  }
}

void sub_20C0820F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08210C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08215C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082178(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0821C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0821E4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082250(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0822A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0822BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08230C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082328(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082394(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::VtValue *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  char *v13;
  void *__p[2];
  char v15;

  if ((sub_20C0495EC(*a1) & 1) != 0)
  {
    v6 = (_QWORD *)a2[4];
    v7 = *a2;
    v8 = *a1;
    v9 = *((_QWORD *)*a1 + 1);
    if ((v9 & 4) != 0)
    {
      v8 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(void))((v9 & 0xFFFFFFFFFFFFFFF8) + 168))();
      if (v7)
      {
LABEL_4:
        v10 = 8 * v7;
        v11 = &v6[v7];
        while (*v6 != *(_QWORD *)v8)
        {
          ++v6;
          v10 -= 8;
          if (!v10)
          {
            v6 = v11;
            break;
          }
        }
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
    *(_BYTE *)a3 = v6 != (_QWORD *)(a2[4] + 8 * *a2);
    a3[1] = &unk_24C51FCF3;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
    return;
  }
  sub_20BDDC0E4(__p, "Invalid search value");
  sub_20C080AF8((uint64_t *)__p, v12, v13, a3);
  if (v15 < 0)
    operator delete(__p[0]);
}

void sub_20C08248C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0824A8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0824F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082514(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082564(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082580(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0825D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0825EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08263C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082658(pxrInternal__aapl__pxrReserved__::VtValue **a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 **v9;
  const char *v10;
  char *v11;
  void *__p[2];
  char v13;

  if ((sub_20BFB4608(*a1) & 1) != 0)
  {
    v6 = a2[4];
    v7 = v6 + 24 * *a2;
    v8 = *((_QWORD *)*a1 + 1);
    if ((v8 & 4) != 0)
      v9 = (unsigned __int8 **)(*(uint64_t (**)(void))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))();
    else
      v9 = *(unsigned __int8 ***)*a1;
    *(_BYTE *)a3 = sub_20C020210(v6, v7, v9) != a2[4] + 24 * *a2;
    a3[1] = &unk_24C51FCF3;
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  else
  {
    sub_20BDDC0E4(__p, "Invalid search value");
    sub_20C080AF8((uint64_t *)__p, v10, v11, a3);
    if (v13 < 0)
      operator delete(__p[0]);
  }
}

void sub_20C082744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082760(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0827B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0827CC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08281C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082838(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0828A4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0828F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082910(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082960(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08297C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0829CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0829E8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082A38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082A54(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082AC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082B10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082B2C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082B7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082B98(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082C04(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082C54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082C70(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082CC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082CDC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082D2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082D48(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082D98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082DB4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082E20(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082E70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082E8C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082EF8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082F48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082F64(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C082FB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C082FD0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08303C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08308C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0830A8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0830F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083114(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083180(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0831D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0831EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08323C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083258(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0832A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0832C4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083330(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083380(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08339C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0833EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083408(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083474(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0834C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0834E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08354C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08359C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0835B8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083608(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083624(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083690(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Value to search must be a list or string");
  sub_20C080AF8((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0836E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0836FC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08374C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083768(uint64_t *a1@<X0>, const char *a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char **v12;
  char v13;
  __int128 __p;
  char v15;
  __int128 v16;

  *(_QWORD *)&v16 = *MEMORY[0x24BDAC8D0];
  if (*((char *)a1 + 23) >= 0)
    v5 = a1;
  else
    v5 = (uint64_t *)*a1;
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", a2, a3, "at", v5);
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &v9;
  v13 = 0;
  v9 = (char *)operator new(0x18uLL);
  v10 = v9;
  v11 = v9 + 24;
  v6 = sub_20BFB76A8((uint64_t)&v11, &__p, &v16, v9);
  v7 = v9;
  v8 = v11;
  a4[1] = 0;
  a4[2] = v7;
  a4[3] = v6;
  a4[4] = v8;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = &v9;
  sub_20BDE5038((void ***)&v12);
  if (v15 < 0)
    operator delete((void *)__p);
}

void sub_20C083864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_20BDE5038(&a15);
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C08389C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0838EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083908(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083974(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0839C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0839E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083A4C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083AB8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083B24(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083B90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083BFC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083C4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083C68(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083CD4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083D24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083D40(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  unint64_t v4;
  int64_t v5;
  const char *v6;
  char *v7;
  std::string __p;
  char v9;

  v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0)
    v4 = *(_QWORD *)(a2 + 8);
  v5 = (v4 & (*a1 >> 63)) + *a1;
  if (v5 < 0 || v5 >= v4)
  {
    sub_20BDDC0E4(&__p, "Index out of range");
    sub_20C083768((uint64_t *)&__p, v6, v7, a3);
  }
  else
  {
    std::string::basic_string(&__p, (const std::string *)a2, v5, 1uLL, (std::allocator<char> *)&v9);
    a3[1] = (unsigned int *)&off_24C520700;
    sub_20BF77444(a3, (uint64_t)&__p);
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20C083DF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083E10(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083E7C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083ECC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083EE8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083F38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083F54(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C083FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C083FC0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08402C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08407C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084098(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0840E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084104(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084154(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084170(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0841C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0841DC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08422C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084248(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0842B4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084320(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08438C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0843DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0843F8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084464(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0844B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0844D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08453C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08458C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0845A8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0845F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084614(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084680(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0846D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0846EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08473C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084758(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0847A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0847C4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084830(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08489C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0848EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084908(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084974(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0849C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0849E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084A4C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084AB8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084B24(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084B90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084BFC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084C4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084C68(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  char *v7;
  void *__p[2];
  char v9;

  v4 = (*a2 & (*a1 >> 63)) + *a1;
  if (v4 < 0 || (unint64_t)v4 >= *a2)
  {
    sub_20BDDC0E4(__p, "Index out of range");
    sub_20C083768((uint64_t *)__p, v6, v7, a3);
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v5 = a2[4];
    a3[1] = &unk_24C51FCF3;
    *(_BYTE *)a3 = *(_BYTE *)(v5 + v4);
    a3[3] = 0;
    a3[4] = 0;
    a3[2] = 0;
  }
}

void sub_20C084CFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084D18(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084D84(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084DF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084E40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084E5C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084EC8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084F34(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C084F84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C084FA0(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  char *v7;
  void *__p[2];
  char v9;

  v4 = (*a2 & (*a1 >> 63)) + *a1;
  if (v4 < 0 || (unint64_t)v4 >= *a2)
  {
    sub_20BDDC0E4(__p, "Index out of range");
    sub_20C083768((uint64_t *)__p, v6, v7, a3);
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v5 = a2[4];
    a3[1] = &unk_24C52036B;
    *a3 = *(_QWORD *)(v5 + 8 * v4);
    a3[3] = 0;
    a3[4] = 0;
    a3[2] = 0;
  }
}

void sub_20C085034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085050(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0850A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0850BC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08510C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085128(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085178(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085194(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0851E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085200(uint64_t *a1@<X0>, _QWORD *a2@<X1>, unsigned int **a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  char *v7;
  void *__p[2];
  char v9;

  v4 = (*a2 & (*a1 >> 63)) + *a1;
  if (v4 < 0 || (unint64_t)v4 >= *a2)
  {
    sub_20BDDC0E4(__p, "Index out of range");
    sub_20C083768((uint64_t *)__p, v6, v7, a3);
    if (v9 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v5 = a2[4] + 24 * v4;
    a3[1] = (unsigned int *)&off_24C520700;
    sub_20BF77444(a3, v5);
    a3[2] = 0;
    a3[3] = 0;
    a3[4] = 0;
  }
}

void sub_20C085298(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0852B4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085320(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08538C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0853DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0853F8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085448(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085464(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0854B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0854D0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08553C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08558C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0855A8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0855F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085614(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085680(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0856D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0856EC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08573C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085758(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0857A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0857C4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085830(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08589C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0858EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085908(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085958(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085974(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0859C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0859E0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085A30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085A4C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085AB8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085B08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085B24(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085B90(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085BFC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085C4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085C68(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085CD4(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085D24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085D40(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085DAC(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085DFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085E18(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085E68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085E84(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085EF0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085F40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085F5C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C085FAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C085FC8(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C086018(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C086034(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C086084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0860A0(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0860F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08610C(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C08615C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C086178(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void *__p[2];
  char v5;

  sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v2, v3, a1);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_20C0861C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0861E4(pxrInternal__aapl__pxrReserved__::VtValue *a1@<X1>, _QWORD *a2@<X8>)
{
  const char *v3;
  char *v4;
  void *__p[2];
  char v6;

  if (sub_20C047B98(a1))
    sub_20BDDC0E4(__p, "Index out of range");
  else
    sub_20BDDC0E4(__p, "Only supported for lists or strings");
  sub_20C083768((uint64_t *)__p, v3, v4, a2);
  if (v6 < 0)
    operator delete(__p[0]);
}

void sub_20C086260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C086280(_QWORD *a1@<X8>)
{
  const char *v2;
  char *v3;
  void **v4;
  char *v5;
  char *v6;
  char *v7;
  void *__p[2];
  char v9;
  char *v10;
  char *v11;
  char *v12;
  char **v13;
  char v14;
  __int128 v15;
  char v16;
  __int128 v17;

  *(_QWORD *)&v17 = *MEMORY[0x24BDAC8D0];
  sub_20BDDC0E4(__p, "Unsupported type");
  if (v9 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s: %s", v2, v3, "len", v4);
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  v14 = 0;
  v10 = (char *)operator new(0x18uLL);
  v11 = v10;
  v12 = v10 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v12, &v15, &v17, v10);
  v6 = v10;
  v7 = v12;
  a1[1] = 0;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = &v10;
  sub_20BDE5038((void ***)&v13);
  if (v16 < 0)
    operator delete((void *)v15);
  if (v9 < 0)
    operator delete(__p[0]);
}

void sub_20C0863A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void **a20)
{
  uint64_t v20;

  sub_20BDE5038(&a20);
  if (*(char *)(v20 - 41) < 0)
    operator delete(*(void **)(v20 - 64));
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C0863F0(pxrInternal__aapl__pxrReserved__::VtValue *a1@<X1>, _QWORD *a2@<X8>)
{
  if (sub_20C047B98(a1))
  {
    *a2 = 0;
    a2[1] = &unk_24C52036B;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 0;
  }
  else
  {
    sub_20C086280(a2);
  }
}

void sub_20C086448(void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v7 = *--v4;
        v6 = v7;
        *v4 = 0;
        if (v7)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C0864C4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int **v6[2];
  uint64_t v7;
  uint64_t v8;

  v7 = a3;
  v8 = a2;
  sub_20BF56210(a1);
  v6[0] = (int **)&v8;
  v6[1] = (int **)&v7;
  sub_20C086520(a1, (a3 - a2) >> 2, v6);
}

void sub_20C086520(unint64_t *a1, unint64_t a2, int ***a3)
{
  unint64_t v3;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t i;
  int *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  int *v18;
  int *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int *v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *a1;
  if (*a1 == a2)
    return;
  if (!a2)
    goto LABEL_20;
  v7 = (uint64_t *)a1[4];
  if (!v7)
  {
    if (8 * a2 / a2 == 8)
    {
      v17 = sub_20C004638((uint64_t)a1, a2);
      v16 = v17;
      v18 = **a3;
      v19 = *a3[1];
      if (v18 != v19)
      {
        v20 = v17;
        do
        {
          v21 = *v18++;
          *v20++ = v21;
        }
        while (v18 != v19);
      }
      goto LABEL_32;
    }
LABEL_20:
    sub_20BF56210(a1);
    return;
  }
  if (a1[3])
  {
LABEL_22:
    if (v3 >= a2)
      v22 = a2;
    else
      v22 = *a1;
    v23 = sub_20C004638((uint64_t)a1, a2);
    v16 = v23;
    if (v22)
    {
      v24 = 8 * v22;
      v25 = v23;
      do
      {
        v26 = *v7++;
        *v25++ = v26;
        v24 -= 8;
      }
      while (v24);
    }
    if (v3 < a2)
    {
      v27 = **a3;
      v28 = *a3[1];
      if (v27 != v28)
      {
        v29 = v3;
        do
        {
          v30 = *v27++;
          v23[v29++] = v30;
        }
        while (v27 != v28);
      }
    }
    goto LABEL_32;
  }
  v8 = atomic_load((unint64_t *)v7 - 2);
  if (v8 != 1)
  {
    v7 = (uint64_t *)a1[4];
    goto LABEL_22;
  }
  if (v3 < a2)
  {
    v9 = a1[4];
    if (*(_QWORD *)(v9 - 8) < a2)
    {
      v10 = sub_20C004638((uint64_t)a1, a2);
      v7 = v10;
      if (v3)
      {
        for (i = 0; i != v3; ++i)
          v10[i] = *(_QWORD *)(v9 + i * 8);
      }
    }
    v12 = **a3;
    v13 = *a3[1];
    if (v12 != v13)
    {
      v14 = v3;
      do
      {
        v15 = *v12++;
        v7[v14++] = v15;
      }
      while (v12 != v13);
    }
  }
  v16 = v7;
LABEL_32:
  if (v16 != (uint64_t *)a1[4])
  {
    sub_20BF5618C((uint64_t)a1);
    a1[4] = (unint64_t)v16;
  }
  *a1 = a2;
}

uint64_t *sub_20C0866F8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, unsigned __int8 **a5)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v7 = a1;
  if (a1 == a3)
  {
    v11 = sub_20C020210(a2, a4, a5);
    if (!v7)
      return 0;
    goto LABEL_5;
  }
  v8 = a3;
  v9 = *a1 + 4080;
  v10 = sub_20C020210(a2, v9, a5);
  if (v10 != v9)
  {
    v11 = v10;
LABEL_5:
    if (*v7 + 4080 == v11)
      ++v7;
    return v7;
  }
  v13 = v7 + 2;
  v14 = v7 + 1;
  while (v14 != v8)
  {
    v15 = *v14++;
    v16 = sub_20C020210(v15, v15 + 4080, a5);
    ++v13;
    if (v16 != v15 + 4080)
    {
      if (*(v14 - 1) + 4080 != v16)
        --v14;
      return v14;
    }
  }
  if (*v8 + 4080 == sub_20C020210(*v8, a4, a5))
    return v13;
  return v8;
}

unsigned __int8 *sub_20C086844(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *i;
  unint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD v25[3];

  v7 = (_QWORD *)(a1 + 24);
  v8 = sub_20BEF33B4(a1 + 24, (uint64_t)a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v10)
        v3 = v8 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v8;
    }
    v13 = *(unsigned __int8 ***)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(unsigned __int8 **)i)
      {
        v15 = *((_QWORD *)i + 1);
        if (v15 == v9)
        {
          if ((sub_20BEB4EF8(a1 + 32, i + 16, a2) & 1) != 0)
            return i;
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10)
              v15 %= v10;
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3)
            break;
        }
      }
    }
  }
  sub_20BEB5244(a1, v9, a3, (uint64_t)v25);
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_20BDEC6E0(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *(_QWORD *)v25[0] = *v22;
    *v22 = v25[0];
  }
  else
  {
    *(_QWORD *)v25[0] = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25[0];
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*(_QWORD *)v25[0])
    {
      v23 = *(_QWORD *)(*(_QWORD *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10)
          v23 %= v10;
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25[0];
    }
  }
  i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_20C086A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p)
    sub_20BEB52E4((uint64_t)&a11, __p);
  _Unwind_Resume(exception_object);
}

void sub_20C086AC0(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v2 = a1[4];
  v3 = v2 >= 0xAA;
  v4 = v2 - 170;
  if (v3)
  {
    v5 = (uint64_t)(a1 + 3);
    v6 = (char *)a1[3];
    a1[4] = v4;
    v7 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v11 = *v7;
    v9 = (char *)(v7 + 1);
    v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(_QWORD *)v8 = v10;
      a1[2] += 8;
      return;
    }
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v33 = 1;
      else
        v33 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_20BDDF6A8(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      v8 = v35;
      v39 = a1[2] - (_QWORD)v38;
      if (v39)
      {
        v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          v42 = *v38++;
          *(_QWORD *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    v13 = v12 >> 3;
    v14 = v12 >> 3 < -1;
    v15 = (v12 >> 3) + 2;
    if (v14)
      v16 = v15;
    else
      v16 = v13 + 1;
    v17 = -(v16 >> 1);
    v18 = v16 >> 1;
    v19 = &v9[-8 * v18];
    v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      v9 = (char *)a1[1];
    }
    v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  v21 = a1[2];
  v22 = (v21 - a1[1]) >> 3;
  v23 = a1[3];
  v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(_QWORD *)&v54 = operator new(0xFF0uLL);
      sub_20BE972A0(a1, &v54);
      return;
    }
    *(_QWORD *)&v54 = operator new(0xFF0uLL);
    sub_20BE973B4((uint64_t)a1, &v54);
    v44 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v45 = *v44;
    v9 = (char *)(v44 + 1);
    v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3])
      goto LABEL_33;
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_20BDDF6A8((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      v8 = v35;
      v49 = a1[2] - (_QWORD)v48;
      if (v49)
      {
        v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          v52 = *v48++;
          *(_QWORD *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1)
    v25 = 1;
  else
    v25 = v24 >> 2;
  v56 = a1 + 3;
  *(_QWORD *)&v54 = sub_20BDDF6A8((uint64_t)(a1 + 3), v25);
  *((_QWORD *)&v54 + 1) = v54 + 8 * v22;
  *(_QWORD *)&v55 = *((_QWORD *)&v54 + 1);
  *((_QWORD *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0xFF0uLL);
  sub_20BE974D0(&v54, &v53);
  v27 = (_QWORD *)a1[2];
  v28 = -7 - (_QWORD)v27;
  while (v27 != (_QWORD *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_20BE975E4((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  v30 = v54;
  v31 = v55;
  *(_QWORD *)&v54 = *a1;
  *((_QWORD *)&v54 + 1) = v27;
  v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  v55 = v32;
  if (v27 != (_QWORD *)v32)
    *(_QWORD *)&v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v29)
    operator delete(v29);
}

void sub_20C086D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v13;

  operator delete(v13);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C086DDC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24C5274A8;
  result[1] = v3;
  return result;
}

uint64_t sub_20C086E10(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24C5274A8;
  a2[1] = v2;
  return result;
}

uint64_t sub_20C086E2C(uint64_t a1)
{
  return sub_20C086E80((_QWORD *)(*(_QWORD *)(a1 + 8) + 48));
}

uint64_t sub_20C086E38(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C527508))
    return a1 + 8;
  else
    return 0;
}

void *sub_20C086E74()
{
  return &unk_24C527508;
}

uint64_t sub_20C086E80(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = a1[5] - 1;
  v3 = *(_QWORD *)(a1[1] + 8 * ((v2 + a1[4]) / 0xAAuLL)) + 24 * ((v2 + a1[4]) % 0xAAuLL);
  if (*(char *)(v3 + 23) < 0)
  {
    operator delete(*(void **)v3);
    v2 = a1[5] - 1;
  }
  a1[5] = v2;
  return sub_20C086EF4(a1, 1);
}

uint64_t sub_20C086EF4(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v7;

  v3 = a1[1];
  v2 = a1[2];
  if (v2 == v3)
    v4 = 0;
  else
    v4 = 170 * ((v2 - v3) >> 3) - 1;
  v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0xAA)
    a2 = 1;
  if (v5 < 0x154)
    v7 = a2;
  else
    v7 = 0;
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t sub_20C086F74()
{
  return 0;
}

uint64_t sub_20C086F7C(uint64_t a1, const std::type_info *a2)
{
  pxrInternal__aapl__pxrReserved__::Vt_HashDetail::_IssueUnimplementedHashError((pxrInternal__aapl__pxrReserved__::Vt_HashDetail *)&unk_24C527488, a2);
  return 0;
}

uint64_t sub_20C086F9C()
{
  return 1;
}

uint64_t sub_20C086FA4()
{
  return 1;
}

uint64_t sub_20C086FB0()
{
  return 0;
}

_QWORD *sub_20C086FBC(uint64_t a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&unk_24C527488, a1, a2);
}

void *sub_20C086FD0()
{
  return &unk_24C527488;
}

uint64_t sub_20C086FDC()
{
  return 0;
}

uint64_t sub_20C086FE4()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C086FF0()
{
  return 0;
}

uint64_t sub_20C086FF8()
{
  return 0;
}

BOOL sub_20C087000(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CAB2522 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C087038(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C527488, a2, a3);
}

void *sub_20C087058()
{
  return &unk_24C527488;
}

void sub_20C087068(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = (char *)&off_24C527518 + 3;
}

void pxrInternal__aapl__pxrReserved__::Sdf_ParseVariableExpression(uint64_t *a1@<X0>, std::locale *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  _BYTE *v5;
  _BYTE *v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 *v17;
  uint64_t v18;
  _QWORD *v19;
  const std::locale::facet *v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  const std::locale::facet *v33;
  _BYTE *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  const std::locale::facet *v46;
  _BYTE *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  const std::locale::facet *v59;
  _BYTE *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  const std::locale::facet *v72;
  _BYTE *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  const std::locale::facet *v85;
  _BYTE *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  void *v95;
  uint64_t v96;
  _QWORD *v97;
  const std::locale::facet *v98;
  _BYTE *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  __int128 *v108;
  uint64_t v109;
  _QWORD *v110;
  const std::locale::facet *v111;
  std::locale *v112;
  char *v113;
  std::locale::__imp *locale;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  void *v127;
  uint64_t v128;
  _QWORD *v129;
  const std::locale::facet *v130;
  _BYTE *v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  void *v139;
  uint64_t v140;
  _QWORD *v141;
  const std::locale::facet *v142;
  _BYTE *v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  void *v151;
  uint64_t v152;
  _QWORD *v153;
  const std::locale::facet *v154;
  uint64_t *v155;
  _BYTE v156[32];
  _BYTE *v157;
  __int128 v158;
  uint64_t v159;
  void *v160;
  _QWORD *v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  unsigned __int8 v165;
  std::locale v166;
  std::locale v167[2];
  _BYTE __p[24];
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;

  v172 = *MEMORY[0x24BDAC8D0];
  v160 = 0;
  v161 = 0;
  v162 = 0;
  v3 = *((unsigned __int8 *)a1 + 23);
  if ((v3 & 0x80u) == 0)
    v4 = a1;
  else
    v4 = (uint64_t *)*a1;
  if ((v3 & 0x80u) != 0)
    v3 = a1[1];
  v155 = v4;
  *(_QWORD *)v156 = v4;
  *(_OWORD *)&v156[8] = xmmword_20CA59F70;
  *(_QWORD *)&v156[24] = 0;
  v157 = (char *)v4 + v3;
  sub_20BDDC0E4(&v158, "");
  if (sub_20BFCE180(4))
  {
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v8 = &__p[8];
    else
      v8 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v9 = HIBYTE(v169);
    else
      v9 = *(_QWORD *)&__p[16];
    v10 = (_QWORD *)MEMORY[0x24BEDB310];
    v11 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v8, v9);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v11, (uint64_t)&v163, 1);
    v12 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v12, (uint64_t)&v163, 1);
    v13 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v13, (uint64_t)&v163, 1);
    v14 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v15 = sub_20BDDC1C8(v14, (uint64_t)&v163, 1);
    v16 = sub_20BDDC1C8(v15, (uint64_t)"  start  ", 9);
    sub_20C088C50(&v170);
    if ((SBYTE7(v171) & 0x80u) == 0)
      v17 = &v170;
    else
      v17 = (__int128 *)v170;
    if ((SBYTE7(v171) & 0x80u) == 0)
      v18 = BYTE7(v171);
    else
      v18 = *((_QWORD *)&v170 + 1);
    v19 = sub_20BDDC1C8(v16, (uint64_t)v17, v18);
    sub_20BDDC1C8(v19, (uint64_t)"; current ", 10);
    if (SBYTE7(v171) < 0)
      operator delete((void *)v170);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v10 + *(_QWORD *)(*v10 - 24)));
    v20 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v20->__vftable[2].~facet_0)(v20, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    v170 = *(_OWORD *)v156;
    v171 = *(_OWORD *)&v156[16];
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v21 = &__p[8];
    else
      v21 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v22 = HIBYTE(v169);
    else
      v22 = *(_QWORD *)&__p[16];
    v23 = (_QWORD *)MEMORY[0x24BEDB310];
    v24 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v21, v22);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v24, (uint64_t)&v163, 1);
    v25 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v25, (uint64_t)&v163, 1);
    v26 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v26, (uint64_t)&v163, 1);
    v27 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v28 = sub_20BDDC1C8(v27, (uint64_t)&v163, 1);
    v29 = sub_20BDDC1C8(v28, (uint64_t)"  start  ", 9);
    sub_20C088E3C(&v163);
    if ((v165 & 0x80u) == 0)
      v30 = &v163;
    else
      v30 = v163;
    if ((v165 & 0x80u) == 0)
      v31 = v165;
    else
      v31 = v164;
    v32 = sub_20BDDC1C8(v29, (uint64_t)v30, v31);
    sub_20BDDC1C8(v32, (uint64_t)"; current ", 10);
    if ((char)v165 < 0)
      operator delete(v163);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v23 + *(_QWORD *)(*v23 - 24)));
    v33 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v33->__vftable[2].~facet_0)(v33, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    if (v157 == *(_BYTE **)v156 || **(_BYTE **)v156 != 96)
    {
      *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
      *(_QWORD *)__p = *(_QWORD *)&v156[24];
      if (SHIBYTE(v159) < 0)
      {
        sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
      }
      else
      {
        *(_OWORD *)&__p[8] = v158;
        v169 = v159;
      }
      if (v169 >= 0)
        v119 = &__p[8];
      else
        v119 = *(_BYTE **)&__p[8];
      if (v169 >= 0)
        v120 = HIBYTE(v169);
      else
        v120 = *(_QWORD *)&__p[16];
      v121 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v119, v120);
      LOBYTE(v163) = 58;
      sub_20BDDC1C8(v121, (uint64_t)&v163, 1);
      v122 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v163) = 58;
      sub_20BDDC1C8(v122, (uint64_t)&v163, 1);
      v123 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v163) = 40;
      sub_20BDDC1C8(v123, (uint64_t)&v163, 1);
      v124 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v163) = 41;
      v125 = sub_20BDDC1C8(v124, (uint64_t)&v163, 1);
      v126 = sub_20BDDC1C8(v125, (uint64_t)" failure ", 9);
      sub_20C088E3C(&v163);
      if ((v165 & 0x80u) == 0)
        v127 = &v163;
      else
        v127 = v163;
      if ((v165 & 0x80u) == 0)
        v128 = v165;
      else
        v128 = v164;
      v129 = sub_20BDDC1C8(v126, (uint64_t)v127, v128);
      std::ios_base::getloc((const std::ios_base *)((char *)v129 + *(_QWORD *)(*v129 - 24)));
      v130 = std::locale::use_facet(&v166, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v130->__vftable[2].~facet_0)(v130, 10);
      std::locale::~locale(&v166);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v165 < 0)
        operator delete(v163);
      if (SHIBYTE(v169) < 0)
        operator delete(*(void **)&__p[8]);
      sub_20C088EC4((uint64_t)&v155);
    }
    ++*(_QWORD *)v156;
    ++*(_QWORD *)&v156[8];
    ++*(_QWORD *)&v156[24];
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v34 = &__p[8];
    else
      v34 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v35 = HIBYTE(v169);
    else
      v35 = *(_QWORD *)&__p[16];
    v36 = (_QWORD *)MEMORY[0x24BEDB310];
    v37 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v34, v35);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v37, (uint64_t)&v163, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v38, (uint64_t)&v163, 1);
    v39 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v39, (uint64_t)&v163, 1);
    v40 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v41 = sub_20BDDC1C8(v40, (uint64_t)&v163, 1);
    v42 = sub_20BDDC1C8(v41, (uint64_t)" success ", 9);
    sub_20C088E3C(&v163);
    if ((v165 & 0x80u) == 0)
      v43 = &v163;
    else
      v43 = v163;
    if ((v165 & 0x80u) == 0)
      v44 = v165;
    else
      v44 = v164;
    v45 = sub_20BDDC1C8(v42, (uint64_t)v43, v44);
    sub_20BDDC1C8(v45, (uint64_t)"; next ", 7);
    if ((char)v165 < 0)
      operator delete(v163);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v36 + *(_QWORD *)(*v36 - 24)));
    v46 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v47 = &__p[8];
    else
      v47 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v48 = HIBYTE(v169);
    else
      v48 = *(_QWORD *)&__p[16];
    v49 = (_QWORD *)MEMORY[0x24BEDB310];
    v50 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v47, v48);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v50, (uint64_t)&v163, 1);
    v51 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v51, (uint64_t)&v163, 1);
    v52 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v52, (uint64_t)&v163, 1);
    v53 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v54 = sub_20BDDC1C8(v53, (uint64_t)&v163, 1);
    v55 = sub_20BDDC1C8(v54, (uint64_t)"  start  ", 9);
    sub_20C0891A4(&v163);
    if ((v165 & 0x80u) == 0)
      v56 = &v163;
    else
      v56 = v163;
    if ((v165 & 0x80u) == 0)
      v57 = v165;
    else
      v57 = v164;
    v58 = sub_20BDDC1C8(v55, (uint64_t)v56, v57);
    sub_20BDDC1C8(v58, (uint64_t)"; current ", 10);
    if ((char)v165 < 0)
      operator delete(v163);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(_QWORD *)(*v49 - 24)));
    v59 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    if ((sub_20C08922C((uint64_t)&v155, (char **)&v160) & 1) == 0)
    {
      sub_20C0A1B34((uint64_t)&v155);
      *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)v156;
      *(_OWORD *)__p = *(_OWORD *)&v156[16];
      sub_20C0A2150((uint64_t)&v155);
      if (*(_BYTE **)v156 == v157 || **(_BYTE **)v156 != 91)
      {
        sub_20C0A26F8((uint64_t)&v155);
        *(_OWORD *)v156 = *(_OWORD *)&v167[0].__locale_;
        *(_OWORD *)&v156[16] = *(_OWORD *)__p;
        sub_20C0A1F04((uint64_t)&v155);
        *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
        *(_QWORD *)__p = *(_QWORD *)&v156[24];
        if (SHIBYTE(v159) < 0)
        {
          sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
        }
        else
        {
          *(_OWORD *)&__p[8] = v158;
          v169 = v159;
        }
        if (v169 >= 0)
          v143 = &__p[8];
        else
          v143 = *(_BYTE **)&__p[8];
        if (v169 >= 0)
          v144 = HIBYTE(v169);
        else
          v144 = *(_QWORD *)&__p[16];
        v145 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v143, v144);
        LOBYTE(v163) = 58;
        sub_20BDDC1C8(v145, (uint64_t)&v163, 1);
        v146 = (_QWORD *)std::ostream::operator<<();
        LOBYTE(v163) = 58;
        sub_20BDDC1C8(v146, (uint64_t)&v163, 1);
        v147 = (_QWORD *)std::ostream::operator<<();
        LOBYTE(v163) = 40;
        sub_20BDDC1C8(v147, (uint64_t)&v163, 1);
        v148 = (_QWORD *)std::ostream::operator<<();
        LOBYTE(v163) = 41;
        v149 = sub_20BDDC1C8(v148, (uint64_t)&v163, 1);
        v150 = sub_20BDDC1C8(v149, (uint64_t)" failure ", 9);
        sub_20C0891A4(&v163);
        if ((v165 & 0x80u) == 0)
          v151 = &v163;
        else
          v151 = v163;
        if ((v165 & 0x80u) == 0)
          v152 = v165;
        else
          v152 = v164;
        v153 = sub_20BDDC1C8(v150, (uint64_t)v151, v152);
        std::ios_base::getloc((const std::ios_base *)((char *)v153 + *(_QWORD *)(*v153 - 24)));
        v154 = std::locale::use_facet(&v166, MEMORY[0x24BEDB350]);
        ((void (*)(const std::locale::facet *, uint64_t))v154->__vftable[2].~facet_0)(v154, 10);
        std::locale::~locale(&v166);
        std::ostream::put();
        std::ostream::flush();
        if ((char)v165 < 0)
          operator delete(v163);
        if (SHIBYTE(v169) < 0)
          operator delete(*(void **)&__p[8]);
        sub_20C0A4F40((uint64_t)&v155);
      }
      ++*(_QWORD *)v156;
      ++*(_QWORD *)&v156[8];
      ++*(_QWORD *)&v156[24];
      sub_20C0A2338((uint64_t)&v155, (char **)&v160);
      sub_20C0A2510((uint64_t)&v155);
      sub_20C0A2AB0((__int128 *)&v155, (char **)&v160);
      if ((sub_20C0A4504((uint64_t)&v155) & 1) == 0)
        sub_20C0A4ACC((uint64_t)&v155);
      sub_20C0A1D1C((uint64_t)&v155);
    }
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v60 = &__p[8];
    else
      v60 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v61 = HIBYTE(v169);
    else
      v61 = *(_QWORD *)&__p[16];
    v62 = (_QWORD *)MEMORY[0x24BEDB310];
    v63 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v60, v61);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v63, (uint64_t)&v163, 1);
    v64 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v64, (uint64_t)&v163, 1);
    v65 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v65, (uint64_t)&v163, 1);
    v66 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v67 = sub_20BDDC1C8(v66, (uint64_t)&v163, 1);
    v68 = sub_20BDDC1C8(v67, (uint64_t)" success ", 9);
    sub_20C0891A4(&v163);
    if ((v165 & 0x80u) == 0)
      v69 = &v163;
    else
      v69 = v163;
    if ((v165 & 0x80u) == 0)
      v70 = v165;
    else
      v70 = v164;
    v71 = sub_20BDDC1C8(v68, (uint64_t)v69, v70);
    sub_20BDDC1C8(v71, (uint64_t)"; next ", 7);
    if ((char)v165 < 0)
      operator delete(v163);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(_QWORD *)(*v62 - 24)));
    v72 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v73 = &__p[8];
    else
      v73 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v74 = HIBYTE(v169);
    else
      v74 = *(_QWORD *)&__p[16];
    v75 = (_QWORD *)MEMORY[0x24BEDB310];
    v76 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v73, v74);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v76, (uint64_t)&v163, 1);
    v77 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v77, (uint64_t)&v163, 1);
    v78 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v78, (uint64_t)&v163, 1);
    v79 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v80 = sub_20BDDC1C8(v79, (uint64_t)&v163, 1);
    v81 = sub_20BDDC1C8(v80, (uint64_t)"  start  ", 9);
    sub_20C0A4F90(&v163);
    if ((v165 & 0x80u) == 0)
      v82 = &v163;
    else
      v82 = v163;
    if ((v165 & 0x80u) == 0)
      v83 = v165;
    else
      v83 = v164;
    v84 = sub_20BDDC1C8(v81, (uint64_t)v82, v83);
    sub_20BDDC1C8(v84, (uint64_t)"; current ", 10);
    if ((char)v165 < 0)
      operator delete(v163);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v75 + *(_QWORD *)(*v75 - 24)));
    v85 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    if (v157 == *(_BYTE **)v156 || **(_BYTE **)v156 != 96)
    {
      *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
      *(_QWORD *)__p = *(_QWORD *)&v156[24];
      if (SHIBYTE(v159) < 0)
      {
        sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
      }
      else
      {
        *(_OWORD *)&__p[8] = v158;
        v169 = v159;
      }
      if (v169 >= 0)
        v131 = &__p[8];
      else
        v131 = *(_BYTE **)&__p[8];
      if (v169 >= 0)
        v132 = HIBYTE(v169);
      else
        v132 = *(_QWORD *)&__p[16];
      v133 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v131, v132);
      LOBYTE(v163) = 58;
      sub_20BDDC1C8(v133, (uint64_t)&v163, 1);
      v134 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v163) = 58;
      sub_20BDDC1C8(v134, (uint64_t)&v163, 1);
      v135 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v163) = 40;
      sub_20BDDC1C8(v135, (uint64_t)&v163, 1);
      v136 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v163) = 41;
      v137 = sub_20BDDC1C8(v136, (uint64_t)&v163, 1);
      v138 = sub_20BDDC1C8(v137, (uint64_t)" failure ", 9);
      sub_20C0A4F90(&v163);
      if ((v165 & 0x80u) == 0)
        v139 = &v163;
      else
        v139 = v163;
      if ((v165 & 0x80u) == 0)
        v140 = v165;
      else
        v140 = v164;
      v141 = sub_20BDDC1C8(v138, (uint64_t)v139, v140);
      std::ios_base::getloc((const std::ios_base *)((char *)v141 + *(_QWORD *)(*v141 - 24)));
      v142 = std::locale::use_facet(&v166, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v142->__vftable[2].~facet_0)(v142, 10);
      std::locale::~locale(&v166);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v165 < 0)
        operator delete(v163);
      if (SHIBYTE(v169) < 0)
        operator delete(*(void **)&__p[8]);
      sub_20C0A5018((uint64_t)&v155);
    }
    ++*(_QWORD *)v156;
    ++*(_QWORD *)&v156[8];
    ++*(_QWORD *)&v156[24];
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v86 = &__p[8];
    else
      v86 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v87 = HIBYTE(v169);
    else
      v87 = *(_QWORD *)&__p[16];
    v88 = (_QWORD *)MEMORY[0x24BEDB310];
    v89 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v86, v87);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v89, (uint64_t)&v163, 1);
    v90 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v90, (uint64_t)&v163, 1);
    v91 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v91, (uint64_t)&v163, 1);
    v92 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v93 = sub_20BDDC1C8(v92, (uint64_t)&v163, 1);
    v94 = sub_20BDDC1C8(v93, (uint64_t)" success ", 9);
    sub_20C0A4F90(&v163);
    if ((v165 & 0x80u) == 0)
      v95 = &v163;
    else
      v95 = v163;
    if ((v165 & 0x80u) == 0)
      v96 = v165;
    else
      v96 = v164;
    v97 = sub_20BDDC1C8(v94, (uint64_t)v95, v96);
    sub_20BDDC1C8(v97, (uint64_t)"; next ", 7);
    if ((char)v165 < 0)
      operator delete(v163);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v88 + *(_QWORD *)(*v88 - 24)));
    v98 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)&v156[8];
    *(_QWORD *)__p = *(_QWORD *)&v156[24];
    if (SHIBYTE(v159) < 0)
    {
      sub_20BDDBFAC(&__p[8], (void *)v158, *((unint64_t *)&v158 + 1));
    }
    else
    {
      *(_OWORD *)&__p[8] = v158;
      v169 = v159;
    }
    if (v169 >= 0)
      v99 = &__p[8];
    else
      v99 = *(_BYTE **)&__p[8];
    if (v169 >= 0)
      v100 = HIBYTE(v169);
    else
      v100 = *(_QWORD *)&__p[16];
    v101 = (_QWORD *)MEMORY[0x24BEDB310];
    v102 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v99, v100);
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v102, (uint64_t)&v163, 1);
    v103 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 58;
    sub_20BDDC1C8(v103, (uint64_t)&v163, 1);
    v104 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 40;
    sub_20BDDC1C8(v104, (uint64_t)&v163, 1);
    v105 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v163) = 41;
    v106 = sub_20BDDC1C8(v105, (uint64_t)&v163, 1);
    v107 = sub_20BDDC1C8(v106, (uint64_t)" success ", 9);
    sub_20C088C50(&v170);
    if ((SBYTE7(v171) & 0x80u) == 0)
      v108 = &v170;
    else
      v108 = (__int128 *)v170;
    if ((SBYTE7(v171) & 0x80u) == 0)
      v109 = BYTE7(v171);
    else
      v109 = *((_QWORD *)&v170 + 1);
    v110 = sub_20BDDC1C8(v107, (uint64_t)v108, v109);
    sub_20BDDC1C8(v110, (uint64_t)"; next ", 7);
    if (SBYTE7(v171) < 0)
      operator delete((void *)v170);
    if (SHIBYTE(v169) < 0)
      operator delete(*(void **)&__p[8]);
    sub_20C088CD8((uint64_t)&v155);
    std::ios_base::getloc((const std::ios_base *)((char *)v101 + *(_QWORD *)(*v101 - 24)));
    v111 = std::locale::use_facet(v167, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v111->__vftable[2].~facet_0)(v111, 10);
    std::locale::~locale(v167);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    *(_OWORD *)&v167[0].__locale_ = *(_OWORD *)v156;
    *(_OWORD *)__p = *(_OWORD *)&v156[16];
    if (v157 == *(_BYTE **)v156 || **(_BYTE **)v156 != 96)
      sub_20C088EC4((uint64_t)&v155);
    ++*(_QWORD *)v156;
    ++*(_QWORD *)&v156[8];
    ++*(_QWORD *)&v156[24];
    sub_20C0A5068((uint64_t)&v155, (char **)&v160);
    v5 = v157;
    v6 = *(_BYTE **)v156;
    if ((v7 & 1) == 0)
    {
      if (*(_BYTE **)v156 == v157 || **(_BYTE **)v156 != 91)
        sub_20C0A4F40((uint64_t)&v155);
      ++*(_QWORD *)v156;
      ++*(_QWORD *)&v156[8];
      ++*(_QWORD *)&v156[24];
      sub_20C0A2944((char **)&v160);
      sub_20C0A5FF0((uint64_t)&v155, (char **)&v160);
      v5 = v157;
      if (*(_BYTE **)v156 == v157 || **(_BYTE **)v156 != 93)
        sub_20C0A4ACC((uint64_t)&v155);
      v6 = (_BYTE *)++*(_QWORD *)v156;
      ++*(_QWORD *)&v156[8];
      ++*(_QWORD *)&v156[24];
    }
    if (v5 == v6 || *v6 != 96)
      sub_20C0A5018((uint64_t)&v155);
    *(_QWORD *)v156 = v6 + 1;
    ++*(_QWORD *)&v156[8];
    ++*(_QWORD *)&v156[24];
  }
  v167[0].__locale_ = 0;
  v167[1].__locale_ = 0;
  *(_QWORD *)__p = 0;
  sub_20C088A1C(&v160, (uint64_t)v167, &v166);
  v112 = a2 + 1;
  if (v166.__locale_)
  {
    a2->__locale_ = v166.__locale_;
    a2[2].__locale_ = 0;
    a2[3].__locale_ = 0;
    v112->__locale_ = 0;
  }
  else
  {
    a2->__locale_ = 0;
    v170 = *(_OWORD *)&v167[0].__locale_;
    *(_QWORD *)&v171 = *(_QWORD *)__p;
    v167[0].__locale_ = 0;
    v167[1].__locale_ = 0;
    *(_QWORD *)__p = 0;
    a2[2].__locale_ = 0;
    a2[3].__locale_ = 0;
    v112->__locale_ = 0;
    v163 = &a2[1];
    LOBYTE(v164) = 0;
    v113 = (char *)operator new(0x18uLL);
    a2[3].__locale_ = (std::locale::__imp *)(v113 + 24);
    a2[1].__locale_ = (std::locale::__imp *)v113;
    a2[2].__locale_ = (std::locale::__imp *)v113;
    a2[2].__locale_ = (std::locale::__imp *)sub_20BFB76A8((uint64_t)&a2[3], &v170, (__int128 *)((char *)&v171 + 8), v113);
    if (SBYTE7(v171) < 0)
      operator delete((void *)v170);
    locale = v166.__locale_;
    v166.__locale_ = 0;
    if (locale)
      (*(void (**)(std::locale::__imp *))(*(_QWORD *)locale + 8))(locale);
  }
  if ((__p[7] & 0x80000000) != 0)
    operator delete(v167[0].__locale_);
  if (SHIBYTE(v159) < 0)
    operator delete((void *)v158);
  v115 = v160;
  if (v160)
  {
    v116 = v161;
    while (v116 != v115)
    {
      v118 = *--v116;
      v117 = v118;
      *v116 = 0;
      if (v118)
        (*(void (**)(uint64_t))(*(_QWORD *)v117 + 8))(v117);
    }
    operator delete(v115);
  }
}

void sub_20C088684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,std::locale a32,std::locale a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  _QWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  __int128 v49;
  void *v50;
  const char *v51;
  char *v52;

  std::locale::~locale(&a32);
  if (a31 < 0)
    operator delete(a26);
  if (a44 < 0)
    operator delete(a39);
  v49 = *(_OWORD *)(v46 - 96);
  *v45 = *(_OWORD *)(v46 - 112);
  v45[1] = v49;
  if (a2 == 1)
  {
    v50 = __cxa_begin_catch(a1);
    *v44 = 0;
    (*(void (**)(void *))(*(_QWORD *)v50 + 16))(v50);
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s at character %zu", v51, v52);
    sub_20C088980((uint64_t)(v44 + 1), (__int128 *)(v46 - 112), 1uLL);
    if (*(char *)(v46 - 89) < 0)
      operator delete(*(void **)(v46 - 112));
    __cxa_end_catch();
    JUMPOUT(0x20C088100);
  }
  if (a22 < 0)
    operator delete(__p);
  sub_20C088B80(&a23);
  _Unwind_Resume(a1);
}

void sub_20C08892C()
{
  JUMPOUT(0x20C088778);
}

void sub_20C088934()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  if (*(char *)(v1 - 89) < 0)
    operator delete(*(void **)(v1 - 112));
  v2 = *v0;
  *v0 = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  __cxa_end_catch();
  JUMPOUT(0x20C088778);
}

void sub_20C088970(void *a1, int a2)
{
  if (a2)
    sub_20BDC12F4(a1);
  JUMPOUT(0x20C08881CLL);
}

uint64_t sub_20C088980(uint64_t a1, __int128 *a2, unint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)(a1 + 16) = 0;
  v4 = a1 + 16;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  if (a3)
  {
    sub_20BDE4FA4((_QWORD *)a1, a3);
    *(_QWORD *)(a1 + 8) = sub_20BFB76A8(v4, a2, (__int128 *)((char *)a2 + 24 * a3), *(char **)(a1 + 8));
  }
  return a1;
}

void sub_20C0889FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20BDE5038(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C088A1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[4];
  char v14;
  _QWORD v15[4];
  char v16;

  v6 = a1[1];
  if (*a1 == v6)
  {
    v15[0] = "sdf/variableExpressionParser.cpp";
    v15[1] = "CreateExpressionNode";
    v15[2] = 290;
    v15[3] = "std::unique_ptr<Impl::Node> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::ParserContext::CreateE"
             "xpressionNode(std::string *)";
    v16 = 0;
    if (!pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v15, "!_nodeStack.empty()", 0))goto LABEL_11;
    v6 = a1[1];
  }
  if (!*(_QWORD *)(v6 - 8))
  {
    v13[0] = "sdf/variableExpressionParser.cpp";
    v13[1] = "CreateExpressionNode";
    v13[2] = 290;
    v13[3] = "std::unique_ptr<Impl::Node> pxrInternal__aapl__pxrReserved__::(anonymous namespace)::ParserContext::CreateE"
             "xpressionNode(std::string *)";
    v14 = 0;
    if (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v13, "_nodeStack.back()", 0))
    {
      v6 = a1[1];
      goto LABEL_3;
    }
LABEL_11:
    result = MEMORY[0x212B929D0](a2, "Unknown error");
    *a3 = 0;
    return result;
  }
LABEL_3:
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v6 - 8) = 0;
  v8 = a1[1];
  v11 = *(_QWORD *)(v8 - 8);
  v10 = (_QWORD *)(v8 - 8);
  v9 = v11;
  *v10 = 0;
  if (v11)
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  a1[1] = v10;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
}

void sub_20C088B64(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C088B80(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (_QWORD *)*a1;
  if (*a1)
  {
    v3 = (_QWORD *)a1[1];
    v4 = (_QWORD *)*a1;
    if (v3 != v2)
    {
      do
      {
        v6 = *--v3;
        v5 = v6;
        *v3 = 0;
        if (v6)
          (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
      }
      while (v3 != v2);
      v4 = (_QWORD *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::Sdf_IsVariableExpression(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  if (*((char *)a1 + 23) < 0)
  {
    v2 = a1[1];
    if (v2 <= 2)
      return 0;
    a1 = (uint64_t *)*a1;
    if (*(_BYTE *)a1 != 96)
      return 0;
    return *((_BYTE *)a1 + v2 - 1) == 96;
  }
  v1 = 0;
  v2 = *((unsigned __int8 *)a1 + 23);
  if (v2 >= 3 && *(_BYTE *)a1 == 96)
    return *((_BYTE *)a1 + v2 - 1) == 96;
  return v1;
}

void sub_20C088C50(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_110ExpressionE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_110ExpressionE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C088CC4(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C088CD8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  _QWORD *v3;
  const char *v4;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  char v9;

  v1 = *(_BYTE **)(a1 + 8);
  if (v1 == *(_BYTE **)(a1 + 40))
    return sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)"<eof>", 5);
  v2 = *v1;
  if (*v1 > 9u)
  {
    if ((_DWORD)v2 == 10)
    {
      v3 = (_QWORD *)MEMORY[0x24BEDB310];
      v4 = "<lf> = ";
      goto LABEL_12;
    }
    if ((_DWORD)v2 == 13)
    {
      v3 = (_QWORD *)MEMORY[0x24BEDB310];
      v4 = "<cr> = ";
      goto LABEL_12;
    }
  }
  else
  {
    if (!*v1)
    {
      v3 = (_QWORD *)MEMORY[0x24BEDB310];
      v4 = "<nul> = ";
      v6 = 8;
      goto LABEL_13;
    }
    if ((_DWORD)v2 == 9)
    {
      v3 = (_QWORD *)MEMORY[0x24BEDB310];
      v4 = "<ht> = ";
LABEL_12:
      v6 = 7;
      goto LABEL_13;
    }
  }
  if ((char)v2 < 0)
  {
    if (!__maskrune(*v1, 0x40000uLL))
      goto LABEL_14;
  }
  else if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v2 + 60) & 0x40000) == 0)
  {
    goto LABEL_14;
  }
  v8 = 39;
  v7 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)&v8, 1);
  v9 = v2;
  v3 = sub_20BDDC1C8(v7, (uint64_t)&v9, 1);
  v4 = "' = ";
  v6 = 4;
LABEL_13:
  sub_20BDDC1C8(v3, (uint64_t)v4, v6);
LABEL_14:
  sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)"(char)", 6);
  return (_QWORD *)std::ostream::operator<<();
}

void sub_20C088E3C(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115ExpressionStartE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_115ExpressionStartE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C088EB0(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C088EC4(uint64_t a1)
{
  std::string v2;

  sub_20C088F14(a1, &v2);
}

void sub_20C088EF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C088F14(uint64_t a1, const std::string *a2)
{
  std::runtime_error *exception;
  std::runtime_error v5;
  _QWORD v6[2];
  char v7;
  _BYTE v8[48];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  exception = (std::runtime_error *)__cxa_allocate_exception(0x28uLL);
  sub_20C01AE64((uint64_t)v8, a1 + 8, (__int128 *)(a1 + 48));
  v5 = (std::runtime_error)0;
  v6[0] = 0;
  v6[1] = &v5;
  v7 = 0;
  v5.__vftable = (std::runtime_error_vtbl *)operator new(0x30uLL);
  v5.__imp_.__imp_ = (const char *)v5.__vftable;
  v6[0] = v5.__vftable + 2;
  v5.__imp_.__imp_ = (const char *)sub_20C089058((uint64_t)v6, (uint64_t)v8, (uint64_t)&v9, (uint64_t)v5.__vftable);
  std::runtime_error::runtime_error(exception, a2);
  exception->__vftable = (std::runtime_error_vtbl *)&unk_24C526178;
  exception[1] = v5;
  exception[2].__vftable = (std::runtime_error_vtbl *)v6[0];
  v6[0] = 0;
  v5 = (std::runtime_error)0;
  __cxa_throw(exception, (struct type_info *)&unk_24C526150, (void (*)(void *))sub_20C01AE18);
}

void sub_20C088FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  int v23;

  a12 = &a9;
  sub_20C01B544((void ***)&a12);
  if (a22 < 0)
    operator delete(__p);
  if (v23)
    __cxa_free_exception(v22);
  _Unwind_Resume(a1);
}

uint64_t sub_20C089058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a4;
  v14 = a4;
  v15 = a4;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a2 != a3)
  {
    v6 = (__int128 *)(a2 + 24);
    do
    {
      v7 = *(__int128 *)((char *)v6 - 24);
      *(_QWORD *)(v4 + 16) = *((_QWORD *)v6 - 1);
      *(_OWORD *)v4 = v7;
      v8 = (_BYTE *)(v4 + 24);
      if (*((char *)v6 + 23) < 0)
      {
        sub_20BDDBFAC(v8, *(void **)v6, *((_QWORD *)v6 + 1));
        v4 = v15;
      }
      else
      {
        v9 = *v6;
        *(_QWORD *)(v4 + 40) = *((_QWORD *)v6 + 2);
        *(_OWORD *)v8 = v9;
      }
      v10 = (uint64_t)v6 - 24;
      v4 += 48;
      v15 = v4;
      v6 += 3;
    }
    while (v10 + 48 != a3);
  }
  v13 = 1;
  sub_20C08912C((uint64_t)v12);
  return v4;
}

void sub_20C089118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C08912C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08912C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C089160(a1);
  return a1;
}

void sub_20C089160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = **(_QWORD **)(a1 + 16);
  v2 = **(_QWORD **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0)
      operator delete(*(void **)(v1 - 24));
    v1 -= 48;
  }
}

void sub_20C0891A4(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_114ExpressionBodyE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_114ExpressionBodyE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C089218(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08922C(uint64_t a1, char **a2)
{
  uint64_t v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *p_p;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  const std::locale::facet *v31;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  const std::locale::facet *v44;
  void *__p;
  uint64_t v46;
  unsigned __int8 v47;
  std::locale v48;
  void *v49;
  uint64_t v50;
  unsigned __int8 v51;
  std::locale v52;

  v4 = a1 + 8;
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v48, a1 + 8, (__int128 *)(a1 + 48));
  if ((v51 & 0x80u) == 0)
    v6 = &v49;
  else
    v6 = v49;
  if ((v51 & 0x80u) == 0)
    v7 = v51;
  else
    v7 = v50;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v9, (uint64_t)&__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v10, (uint64_t)&__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_20BDDC1C8(v11, (uint64_t)&__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)&__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C0897B0(&__p);
  if ((v47 & 0x80u) == 0)
    p_p = &__p;
  else
    p_p = __p;
  if ((v47 & 0x80u) == 0)
    v16 = v47;
  else
    v16 = v46;
  v17 = sub_20BDDC1C8(v14, (uint64_t)p_p, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if ((char)v47 < 0)
    operator delete(__p);
  if ((char)v51 < 0)
    operator delete(v49);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(&v48, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  if ((sub_20C089838(a1, (uint64_t)a2) & 1) != 0
    || (sub_20C08A408(a1, (uint64_t)a2) & 1) != 0
    || (sub_20C08AFC0(a1, (uint64_t)a2) & 1) != 0
    || (sub_20C098000(a1, (uint64_t)a2) & 1) != 0
    || (sub_20C08BB78(a1, (uint64_t)a2) & 1) != 0
    || (sub_20C08C098(a1, (uint64_t)a2) & 1) != 0
    || sub_20C09C868(a1, a2))
  {
    sub_20C01AE64((uint64_t)&v48, v4, v5);
    if ((v51 & 0x80u) == 0)
      v19 = &v49;
    else
      v19 = v49;
    if ((v51 & 0x80u) == 0)
      v20 = v51;
    else
      v20 = v50;
    v21 = (_QWORD *)MEMORY[0x24BEDB310];
    v22 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v19, v20);
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v22, (uint64_t)&__p, 1);
    v23 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v23, (uint64_t)&__p, 1);
    v24 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_20BDDC1C8(v24, (uint64_t)&__p, 1);
    v25 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    v26 = sub_20BDDC1C8(v25, (uint64_t)&__p, 1);
    v27 = sub_20BDDC1C8(v26, (uint64_t)" success ", 9);
    sub_20C0897B0(&__p);
    if ((v47 & 0x80u) == 0)
      v28 = &__p;
    else
      v28 = __p;
    if ((v47 & 0x80u) == 0)
      v29 = v47;
    else
      v29 = v46;
    v30 = sub_20BDDC1C8(v27, (uint64_t)v28, v29);
    sub_20BDDC1C8(v30, (uint64_t)"; next ", 7);
    if ((char)v47 < 0)
      operator delete(__p);
    if ((char)v51 < 0)
      operator delete(v49);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(_QWORD *)(*v21 - 24)));
    v31 = std::locale::use_facet(&v48, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(&v48);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
  else
  {
    sub_20C01AE64((uint64_t)&v48, v4, v5);
    if ((v51 & 0x80u) == 0)
      v33 = &v49;
    else
      v33 = v49;
    if ((v51 & 0x80u) == 0)
      v34 = v51;
    else
      v34 = v50;
    v35 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v35, (uint64_t)&__p, 1);
    v36 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v36, (uint64_t)&__p, 1);
    v37 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_20BDDC1C8(v37, (uint64_t)&__p, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    v39 = sub_20BDDC1C8(v38, (uint64_t)&__p, 1);
    v40 = sub_20BDDC1C8(v39, (uint64_t)" failure ", 9);
    sub_20C0897B0(&__p);
    if ((v47 & 0x80u) == 0)
      v41 = &__p;
    else
      v41 = __p;
    if ((v47 & 0x80u) == 0)
      v42 = v47;
    else
      v42 = v46;
    v43 = sub_20BDDC1C8(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(_QWORD *)(*v43 - 24)));
    v44 = std::locale::use_facet(&v52, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0)
      operator delete(__p);
    if ((char)v51 < 0)
      operator delete(v49);
    return 0;
  }
}

void sub_20C08973C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,std::locale a24)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C0897B0(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116ScalarExpressionE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116ScalarExpressionE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C089824(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C089838(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  const std::locale::facet *v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  const std::locale::facet *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  const std::locale::facet *v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  _QWORD *v71;
  const std::locale::facet *v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  void **v81;
  uint64_t v82;
  _QWORD *v83;
  const std::locale::facet *v84;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  void *v94;
  uint64_t v95;
  _QWORD *v96;
  const std::locale::facet *v97;
  __int128 v98;
  _OWORD v99[2];
  void *__p[2];
  __int128 v101;
  _OWORD *v102;
  void *v103;
  uint64_t v104;
  unsigned __int8 v105;
  std::locale v106;
  std::locale v107;
  void *v108;
  uint64_t v109;
  unsigned __int8 v110;

  v4 = (_OWORD *)(a1 + 8);
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v107, a1 + 8, (__int128 *)(a1 + 48));
  if ((v110 & 0x80u) == 0)
    v6 = &v108;
  else
    v6 = v108;
  if ((v110 & 0x80u) == 0)
    v7 = v110;
  else
    v7 = v109;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v9, (uint64_t)__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v10, (uint64_t)__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v11, (uint64_t)__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C08D090(__p);
  if ((SBYTE7(v101) & 0x80u) == 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if ((SBYTE7(v101) & 0x80u) == 0)
    v16 = BYTE7(v101);
  else
    v16 = (uint64_t)__p[1];
  v17 = sub_20BDDC1C8(v14, (uint64_t)v15, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v101) < 0)
    operator delete(__p[0]);
  if ((char)v110 < 0)
    operator delete(v108);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v107);
  std::ostream::put();
  std::ostream::flush();
  v19 = sub_20C08D118((_QWORD *)a1);
  if ((_DWORD)v19)
  {
    v20 = v4[1];
    v99[0] = *v4;
    v99[1] = v20;
    v21 = v4[1];
    *(_OWORD *)__p = *v4;
    v101 = v21;
    v102 = v4;
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v22 = &v108;
    else
      v22 = v108;
    if ((v110 & 0x80u) == 0)
      v23 = v110;
    else
      v23 = v109;
    v24 = (_QWORD *)MEMORY[0x24BEDB310];
    v25 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v22, v23);
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v25, (uint64_t)&v103, 1);
    v26 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v26, (uint64_t)&v103, 1);
    v27 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_20BDDC1C8(v27, (uint64_t)&v103, 1);
    v28 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    v29 = sub_20BDDC1C8(v28, (uint64_t)&v103, 1);
    v30 = sub_20BDDC1C8(v29, (uint64_t)"  start  ", 9);
    sub_20C08DD10(&v103);
    if ((v105 & 0x80u) == 0)
      v31 = &v103;
    else
      v31 = v103;
    if ((v105 & 0x80u) == 0)
      v32 = v105;
    else
      v32 = v104;
    v33 = sub_20BDDC1C8(v30, (uint64_t)v31, v32);
    sub_20BDDC1C8(v33, (uint64_t)"; current ", 10);
    if ((char)v105 < 0)
      operator delete(v103);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(_QWORD *)(*v24 - 24)));
    v34 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v34->__vftable[2].~facet_0)(v34, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    if (!sub_20C08DD98((_QWORD *)a1))
    {
      sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
      if ((v110 & 0x80u) == 0)
        v86 = &v108;
      else
        v86 = v108;
      if ((v110 & 0x80u) == 0)
        v87 = v110;
      else
        v87 = v109;
      v88 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v86, v87);
      LOBYTE(v103) = 58;
      sub_20BDDC1C8(v88, (uint64_t)&v103, 1);
      v89 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v103) = 58;
      sub_20BDDC1C8(v89, (uint64_t)&v103, 1);
      v90 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v103) = 40;
      sub_20BDDC1C8(v90, (uint64_t)&v103, 1);
      v91 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v103) = 41;
      v92 = sub_20BDDC1C8(v91, (uint64_t)&v103, 1);
      v93 = sub_20BDDC1C8(v92, (uint64_t)" failure ", 9);
      sub_20C08DD10(&v103);
      if ((v105 & 0x80u) == 0)
        v94 = &v103;
      else
        v94 = v103;
      if ((v105 & 0x80u) == 0)
        v95 = v105;
      else
        v95 = v104;
      v96 = sub_20BDDC1C8(v93, (uint64_t)v94, v95);
      std::ios_base::getloc((const std::ios_base *)((char *)v96 + *(_QWORD *)(*v96 - 24)));
      v97 = std::locale::use_facet(&v106, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v97->__vftable[2].~facet_0)(v97, 10);
      std::locale::~locale(&v106);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v105 < 0)
        operator delete(v103);
      if ((char)v110 < 0)
        operator delete(v108);
      v98 = v101;
      *v4 = *(_OWORD *)__p;
      v4[1] = v98;
      sub_20C08E14C(a1);
    }
    while ((sub_20C08DDF4((_QWORD *)a1) & 1) != 0)
      ;
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v35 = &v108;
    else
      v35 = v108;
    if ((v110 & 0x80u) == 0)
      v36 = v110;
    else
      v36 = v109;
    v37 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v35, v36);
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v37, (uint64_t)&v103, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v38, (uint64_t)&v103, 1);
    v39 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_20BDDC1C8(v39, (uint64_t)&v103, 1);
    v40 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    v41 = sub_20BDDC1C8(v40, (uint64_t)&v103, 1);
    v42 = sub_20BDDC1C8(v41, (uint64_t)"  apply  ", 9);
    sub_20C08DD10(&v103);
    if ((v105 & 0x80u) == 0)
      v43 = &v103;
    else
      v43 = v103;
    if ((v105 & 0x80u) == 0)
      v44 = v105;
    else
      v44 = v104;
    v45 = sub_20BDDC1C8(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(_QWORD *)(*v45 - 24)));
    v46 = std::locale::use_facet(&v106, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v106);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v105 < 0)
      operator delete(v103);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C08DE54((char **)__p, a1, a2);
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v47 = &v108;
    else
      v47 = v108;
    if ((v110 & 0x80u) == 0)
      v48 = v110;
    else
      v48 = v109;
    v49 = (_QWORD *)MEMORY[0x24BEDB310];
    v50 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v47, v48);
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v50, (uint64_t)&v103, 1);
    v51 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v51, (uint64_t)&v103, 1);
    v52 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_20BDDC1C8(v52, (uint64_t)&v103, 1);
    v53 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    v54 = sub_20BDDC1C8(v53, (uint64_t)&v103, 1);
    v55 = sub_20BDDC1C8(v54, (uint64_t)" success ", 9);
    sub_20C08DD10(&v103);
    if ((v105 & 0x80u) == 0)
      v56 = &v103;
    else
      v56 = v103;
    if ((v105 & 0x80u) == 0)
      v57 = v105;
    else
      v57 = v104;
    v58 = sub_20BDDC1C8(v55, (uint64_t)v56, v57);
    sub_20BDDC1C8(v58, (uint64_t)"; next ", 7);
    if ((char)v105 < 0)
      operator delete(v103);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(_QWORD *)(*v49 - 24)));
    v59 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    sub_20C08D7D4(a1);
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v60 = &v108;
    else
      v60 = v108;
    if ((v110 & 0x80u) == 0)
      v61 = v110;
    else
      v61 = v109;
    v62 = (_QWORD *)MEMORY[0x24BEDB310];
    v63 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v63, (uint64_t)__p, 1);
    v64 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v64, (uint64_t)__p, 1);
    v65 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v65, (uint64_t)__p, 1);
    v66 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v67 = sub_20BDDC1C8(v66, (uint64_t)__p, 1);
    v68 = sub_20BDDC1C8(v67, (uint64_t)" success ", 9);
    sub_20C08D090(__p);
    if ((SBYTE7(v101) & 0x80u) == 0)
      v69 = __p;
    else
      v69 = (void **)__p[0];
    if ((SBYTE7(v101) & 0x80u) == 0)
      v70 = BYTE7(v101);
    else
      v70 = (uint64_t)__p[1];
    v71 = sub_20BDDC1C8(v68, (uint64_t)v69, v70);
    sub_20BDDC1C8(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v101) < 0)
      operator delete(__p[0]);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(_QWORD *)(*v62 - 24)));
    v72 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v73 = &v108;
    else
      v73 = v108;
    if ((v110 & 0x80u) == 0)
      v74 = v110;
    else
      v74 = v109;
    v75 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v73, v74);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v75, (uint64_t)__p, 1);
    v76 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v76, (uint64_t)__p, 1);
    v77 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v77, (uint64_t)__p, 1);
    v78 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v79 = sub_20BDDC1C8(v78, (uint64_t)__p, 1);
    v80 = sub_20BDDC1C8(v79, (uint64_t)" failure ", 9);
    sub_20C08D090(__p);
    if ((SBYTE7(v101) & 0x80u) == 0)
      v81 = __p;
    else
      v81 = (void **)__p[0];
    if ((SBYTE7(v101) & 0x80u) == 0)
      v82 = BYTE7(v101);
    else
      v82 = (uint64_t)__p[1];
    v83 = sub_20BDDC1C8(v80, (uint64_t)v81, v82);
    std::ios_base::getloc((const std::ios_base *)((char *)v83 + *(_QWORD *)(*v83 - 24)));
    v84 = std::locale::use_facet((const std::locale *)v99, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v84->__vftable[2].~facet_0)(v84, 10);
    std::locale::~locale((std::locale *)v99);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v101) < 0)
      operator delete(__p[0]);
    if ((char)v110 < 0)
      operator delete(v108);
  }
  return v19;
}

void sub_20C08A2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,std::locale a21,std::locale a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  _OWORD *v30;

  std::locale::~locale(&a21);
  if (a20 < 0)
    operator delete(__p);
  if (a30 < 0)
    operator delete(a25);
  *v30 = a11;
  v30[1] = a12;
  *v30 = a9;
  v30[1] = a10;
  _Unwind_Resume(a1);
}

uint64_t sub_20C08A408(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  void *locale;
  uint64_t v30;
  _QWORD *v31;
  const std::locale::facet *v32;
  _BYTE *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  const std::locale::facet *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  const std::locale::facet *v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  _QWORD *v71;
  const std::locale::facet *v72;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  const std::locale::facet *v85;
  __int128 v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  void **v95;
  uint64_t v96;
  _QWORD *v97;
  const std::locale::facet *v98;
  void *__p[2];
  __int128 v100;
  std::locale v101;
  uint64_t v102;
  unsigned __int8 v103;
  std::locale v104;
  std::locale v105;
  void *v106;
  uint64_t v107;
  unsigned __int8 v108;

  v4 = (_OWORD *)(a1 + 8);
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v105, a1 + 8, (__int128 *)(a1 + 48));
  if ((v108 & 0x80u) == 0)
    v6 = &v106;
  else
    v6 = v106;
  if ((v108 & 0x80u) == 0)
    v7 = v108;
  else
    v7 = v107;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v9, (uint64_t)__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v10, (uint64_t)__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v11, (uint64_t)__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C08E274(__p);
  if ((SBYTE7(v100) & 0x80u) == 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if ((SBYTE7(v100) & 0x80u) == 0)
    v16 = BYTE7(v100);
  else
    v16 = (uint64_t)__p[1];
  v17 = sub_20BDDC1C8(v14, (uint64_t)v15, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v100) < 0)
    operator delete(__p[0]);
  if ((char)v108 < 0)
    operator delete(v106);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  v19 = v4[1];
  *(_OWORD *)__p = *v4;
  v100 = v19;
  sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
  if ((v108 & 0x80u) == 0)
    v20 = &v106;
  else
    v20 = v106;
  if ((v108 & 0x80u) == 0)
    v21 = v108;
  else
    v21 = v107;
  v22 = (_QWORD *)MEMORY[0x24BEDB310];
  v23 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v20, v21);
  LOBYTE(v101.__locale_) = 58;
  sub_20BDDC1C8(v23, (uint64_t)&v101, 1);
  v24 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 58;
  sub_20BDDC1C8(v24, (uint64_t)&v101, 1);
  v25 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 40;
  sub_20BDDC1C8(v25, (uint64_t)&v101, 1);
  v26 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 41;
  v27 = sub_20BDDC1C8(v26, (uint64_t)&v101, 1);
  v28 = sub_20BDDC1C8(v27, (uint64_t)"  start  ", 9);
  sub_20C08E2FC(&v101);
  if ((v103 & 0x80u) == 0)
    locale = &v101;
  else
    locale = v101.__locale_;
  if ((v103 & 0x80u) == 0)
    v30 = v103;
  else
    v30 = v102;
  v31 = sub_20BDDC1C8(v28, (uint64_t)locale, v30);
  sub_20BDDC1C8(v31, (uint64_t)"; current ", 10);
  if ((char)v103 < 0)
    operator delete(v101.__locale_);
  if ((char)v108 < 0)
    operator delete(v106);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(_QWORD *)(*v22 - 24)));
  v32 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  v33 = *(_BYTE **)(a1 + 8);
  if (*(_BYTE **)(a1 + 40) == v33 || *v33 != 34)
  {
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v74 = &v106;
    else
      v74 = v106;
    if ((v108 & 0x80u) == 0)
      v75 = v108;
    else
      v75 = v107;
    v76 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v74, v75);
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v76, (uint64_t)&v101, 1);
    v77 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v77, (uint64_t)&v101, 1);
    v78 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_20BDDC1C8(v78, (uint64_t)&v101, 1);
    v79 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    v80 = sub_20BDDC1C8(v79, (uint64_t)&v101, 1);
    v81 = sub_20BDDC1C8(v80, (uint64_t)" failure ", 9);
    sub_20C08E2FC(&v101);
    if ((v103 & 0x80u) == 0)
      v82 = &v101;
    else
      v82 = v101.__locale_;
    if ((v103 & 0x80u) == 0)
      v83 = v103;
    else
      v83 = v102;
    v84 = sub_20BDDC1C8(v81, (uint64_t)v82, v83);
    std::ios_base::getloc((const std::ios_base *)((char *)v84 + *(_QWORD *)(*v84 - 24)));
    v85 = std::locale::use_facet(&v104, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0)
      operator delete(v101.__locale_);
    if ((char)v108 < 0)
      operator delete(v106);
    v86 = v100;
    *v4 = *(_OWORD *)__p;
    v4[1] = v86;
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v87 = &v106;
    else
      v87 = v106;
    if ((v108 & 0x80u) == 0)
      v88 = v108;
    else
      v88 = v107;
    v89 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v87, v88);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v89, (uint64_t)__p, 1);
    v90 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v90, (uint64_t)__p, 1);
    v91 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v91, (uint64_t)__p, 1);
    v92 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v93 = sub_20BDDC1C8(v92, (uint64_t)__p, 1);
    v94 = sub_20BDDC1C8(v93, (uint64_t)" failure ", 9);
    sub_20C08E274(__p);
    if ((SBYTE7(v100) & 0x80u) == 0)
      v95 = __p;
    else
      v95 = (void **)__p[0];
    if ((SBYTE7(v100) & 0x80u) == 0)
      v96 = BYTE7(v100);
    else
      v96 = (uint64_t)__p[1];
    v97 = sub_20BDDC1C8(v94, (uint64_t)v95, v96);
    std::ios_base::getloc((const std::ios_base *)((char *)v97 + *(_QWORD *)(*v97 - 24)));
    v98 = std::locale::use_facet(&v101, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
    std::locale::~locale(&v101);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v100) < 0)
      operator delete(__p[0]);
    if ((char)v108 < 0)
      operator delete(v106);
    return 0;
  }
  else
  {
    v34 = *(_QWORD *)(a1 + 16) + 1;
    *(_QWORD *)(a1 + 8) = v33 + 1;
    *(_QWORD *)(a1 + 16) = v34;
    ++*(_QWORD *)(a1 + 32);
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v35 = &v106;
    else
      v35 = v106;
    if ((v108 & 0x80u) == 0)
      v36 = v108;
    else
      v36 = v107;
    v37 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v35, v36);
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v37, (uint64_t)&v101, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v38, (uint64_t)&v101, 1);
    v39 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_20BDDC1C8(v39, (uint64_t)&v101, 1);
    v40 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    v41 = sub_20BDDC1C8(v40, (uint64_t)&v101, 1);
    v42 = sub_20BDDC1C8(v41, (uint64_t)"  apply  ", 9);
    sub_20C08E2FC(&v101);
    if ((v103 & 0x80u) == 0)
      v43 = &v101;
    else
      v43 = v101.__locale_;
    if ((v103 & 0x80u) == 0)
      v44 = v103;
    else
      v44 = v102;
    v45 = sub_20BDDC1C8(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(_QWORD *)(*v45 - 24)));
    v46 = std::locale::use_facet(&v104, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0)
      operator delete(v101.__locale_);
    if ((char)v108 < 0)
      operator delete(v106);
    sub_20C08E384(a2);
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v47 = &v106;
    else
      v47 = v106;
    if ((v108 & 0x80u) == 0)
      v48 = v108;
    else
      v48 = v107;
    v49 = (_QWORD *)MEMORY[0x24BEDB310];
    v50 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v47, v48);
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v50, (uint64_t)&v101, 1);
    v51 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v51, (uint64_t)&v101, 1);
    v52 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_20BDDC1C8(v52, (uint64_t)&v101, 1);
    v53 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    v54 = sub_20BDDC1C8(v53, (uint64_t)&v101, 1);
    v55 = sub_20BDDC1C8(v54, (uint64_t)" success ", 9);
    sub_20C08E2FC(&v101);
    if ((v103 & 0x80u) == 0)
      v56 = &v101;
    else
      v56 = v101.__locale_;
    if ((v103 & 0x80u) == 0)
      v57 = v103;
    else
      v57 = v102;
    v58 = sub_20BDDC1C8(v55, (uint64_t)v56, v57);
    sub_20BDDC1C8(v58, (uint64_t)"; next ", 7);
    if ((char)v103 < 0)
      operator delete(v101.__locale_);
    if ((char)v108 < 0)
      operator delete(v106);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(_QWORD *)(*v49 - 24)));
    v59 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    sub_20C08E51C(a1, a2);
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v60 = &v106;
    else
      v60 = v106;
    if ((v108 & 0x80u) == 0)
      v61 = v108;
    else
      v61 = v107;
    v62 = (_QWORD *)MEMORY[0x24BEDB310];
    v63 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v63, (uint64_t)__p, 1);
    v64 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v64, (uint64_t)__p, 1);
    v65 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v65, (uint64_t)__p, 1);
    v66 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v67 = sub_20BDDC1C8(v66, (uint64_t)__p, 1);
    v68 = sub_20BDDC1C8(v67, (uint64_t)" success ", 9);
    sub_20C08E274(__p);
    if ((SBYTE7(v100) & 0x80u) == 0)
      v69 = __p;
    else
      v69 = (void **)__p[0];
    if ((SBYTE7(v100) & 0x80u) == 0)
      v70 = BYTE7(v100);
    else
      v70 = (uint64_t)__p[1];
    v71 = sub_20BDDC1C8(v68, (uint64_t)v69, v70);
    sub_20BDDC1C8(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v100) < 0)
      operator delete(__p[0]);
    if ((char)v108 < 0)
      operator delete(v106);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(_QWORD *)(*v62 - 24)));
    v72 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_20C08AEBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::locale a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22,std::locale a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C08AFC0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  void *locale;
  uint64_t v30;
  _QWORD *v31;
  const std::locale::facet *v32;
  _BYTE *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  const std::locale::facet *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  const std::locale::facet *v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  _QWORD *v71;
  const std::locale::facet *v72;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  const std::locale::facet *v85;
  __int128 v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  void **v95;
  uint64_t v96;
  _QWORD *v97;
  const std::locale::facet *v98;
  void *__p[2];
  __int128 v100;
  std::locale v101;
  uint64_t v102;
  unsigned __int8 v103;
  std::locale v104;
  std::locale v105;
  void *v106;
  uint64_t v107;
  unsigned __int8 v108;

  v4 = (_OWORD *)(a1 + 8);
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v105, a1 + 8, (__int128 *)(a1 + 48));
  if ((v108 & 0x80u) == 0)
    v6 = &v106;
  else
    v6 = v106;
  if ((v108 & 0x80u) == 0)
    v7 = v108;
  else
    v7 = v107;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v9, (uint64_t)__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v10, (uint64_t)__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v11, (uint64_t)__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C093FE4(__p);
  if ((SBYTE7(v100) & 0x80u) == 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if ((SBYTE7(v100) & 0x80u) == 0)
    v16 = BYTE7(v100);
  else
    v16 = (uint64_t)__p[1];
  v17 = sub_20BDDC1C8(v14, (uint64_t)v15, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v100) < 0)
    operator delete(__p[0]);
  if ((char)v108 < 0)
    operator delete(v106);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  v19 = v4[1];
  *(_OWORD *)__p = *v4;
  v100 = v19;
  sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
  if ((v108 & 0x80u) == 0)
    v20 = &v106;
  else
    v20 = v106;
  if ((v108 & 0x80u) == 0)
    v21 = v108;
  else
    v21 = v107;
  v22 = (_QWORD *)MEMORY[0x24BEDB310];
  v23 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v20, v21);
  LOBYTE(v101.__locale_) = 58;
  sub_20BDDC1C8(v23, (uint64_t)&v101, 1);
  v24 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 58;
  sub_20BDDC1C8(v24, (uint64_t)&v101, 1);
  v25 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 40;
  sub_20BDDC1C8(v25, (uint64_t)&v101, 1);
  v26 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v101.__locale_) = 41;
  v27 = sub_20BDDC1C8(v26, (uint64_t)&v101, 1);
  v28 = sub_20BDDC1C8(v27, (uint64_t)"  start  ", 9);
  sub_20C09406C(&v101);
  if ((v103 & 0x80u) == 0)
    locale = &v101;
  else
    locale = v101.__locale_;
  if ((v103 & 0x80u) == 0)
    v30 = v103;
  else
    v30 = v102;
  v31 = sub_20BDDC1C8(v28, (uint64_t)locale, v30);
  sub_20BDDC1C8(v31, (uint64_t)"; current ", 10);
  if ((char)v103 < 0)
    operator delete(v101.__locale_);
  if ((char)v108 < 0)
    operator delete(v106);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(_QWORD *)(*v22 - 24)));
  v32 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
  std::locale::~locale(&v105);
  std::ostream::put();
  std::ostream::flush();
  v33 = *(_BYTE **)(a1 + 8);
  if (*(_BYTE **)(a1 + 40) == v33 || *v33 != 39)
  {
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v74 = &v106;
    else
      v74 = v106;
    if ((v108 & 0x80u) == 0)
      v75 = v108;
    else
      v75 = v107;
    v76 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v74, v75);
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v76, (uint64_t)&v101, 1);
    v77 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v77, (uint64_t)&v101, 1);
    v78 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_20BDDC1C8(v78, (uint64_t)&v101, 1);
    v79 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    v80 = sub_20BDDC1C8(v79, (uint64_t)&v101, 1);
    v81 = sub_20BDDC1C8(v80, (uint64_t)" failure ", 9);
    sub_20C09406C(&v101);
    if ((v103 & 0x80u) == 0)
      v82 = &v101;
    else
      v82 = v101.__locale_;
    if ((v103 & 0x80u) == 0)
      v83 = v103;
    else
      v83 = v102;
    v84 = sub_20BDDC1C8(v81, (uint64_t)v82, v83);
    std::ios_base::getloc((const std::ios_base *)((char *)v84 + *(_QWORD *)(*v84 - 24)));
    v85 = std::locale::use_facet(&v104, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v85->__vftable[2].~facet_0)(v85, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0)
      operator delete(v101.__locale_);
    if ((char)v108 < 0)
      operator delete(v106);
    v86 = v100;
    *v4 = *(_OWORD *)__p;
    v4[1] = v86;
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v87 = &v106;
    else
      v87 = v106;
    if ((v108 & 0x80u) == 0)
      v88 = v108;
    else
      v88 = v107;
    v89 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v87, v88);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v89, (uint64_t)__p, 1);
    v90 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v90, (uint64_t)__p, 1);
    v91 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v91, (uint64_t)__p, 1);
    v92 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v93 = sub_20BDDC1C8(v92, (uint64_t)__p, 1);
    v94 = sub_20BDDC1C8(v93, (uint64_t)" failure ", 9);
    sub_20C093FE4(__p);
    if ((SBYTE7(v100) & 0x80u) == 0)
      v95 = __p;
    else
      v95 = (void **)__p[0];
    if ((SBYTE7(v100) & 0x80u) == 0)
      v96 = BYTE7(v100);
    else
      v96 = (uint64_t)__p[1];
    v97 = sub_20BDDC1C8(v94, (uint64_t)v95, v96);
    std::ios_base::getloc((const std::ios_base *)((char *)v97 + *(_QWORD *)(*v97 - 24)));
    v98 = std::locale::use_facet(&v101, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v98->__vftable[2].~facet_0)(v98, 10);
    std::locale::~locale(&v101);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v100) < 0)
      operator delete(__p[0]);
    if ((char)v108 < 0)
      operator delete(v106);
    return 0;
  }
  else
  {
    v34 = *(_QWORD *)(a1 + 16) + 1;
    *(_QWORD *)(a1 + 8) = v33 + 1;
    *(_QWORD *)(a1 + 16) = v34;
    ++*(_QWORD *)(a1 + 32);
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v35 = &v106;
    else
      v35 = v106;
    if ((v108 & 0x80u) == 0)
      v36 = v108;
    else
      v36 = v107;
    v37 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v35, v36);
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v37, (uint64_t)&v101, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v38, (uint64_t)&v101, 1);
    v39 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_20BDDC1C8(v39, (uint64_t)&v101, 1);
    v40 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    v41 = sub_20BDDC1C8(v40, (uint64_t)&v101, 1);
    v42 = sub_20BDDC1C8(v41, (uint64_t)"  apply  ", 9);
    sub_20C09406C(&v101);
    if ((v103 & 0x80u) == 0)
      v43 = &v101;
    else
      v43 = v101.__locale_;
    if ((v103 & 0x80u) == 0)
      v44 = v103;
    else
      v44 = v102;
    v45 = sub_20BDDC1C8(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(_QWORD *)(*v45 - 24)));
    v46 = std::locale::use_facet(&v104, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v104);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v103 < 0)
      operator delete(v101.__locale_);
    if ((char)v108 < 0)
      operator delete(v106);
    sub_20C08E384(a2);
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v47 = &v106;
    else
      v47 = v106;
    if ((v108 & 0x80u) == 0)
      v48 = v108;
    else
      v48 = v107;
    v49 = (_QWORD *)MEMORY[0x24BEDB310];
    v50 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v47, v48);
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v50, (uint64_t)&v101, 1);
    v51 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 58;
    sub_20BDDC1C8(v51, (uint64_t)&v101, 1);
    v52 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 40;
    sub_20BDDC1C8(v52, (uint64_t)&v101, 1);
    v53 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v101.__locale_) = 41;
    v54 = sub_20BDDC1C8(v53, (uint64_t)&v101, 1);
    v55 = sub_20BDDC1C8(v54, (uint64_t)" success ", 9);
    sub_20C09406C(&v101);
    if ((v103 & 0x80u) == 0)
      v56 = &v101;
    else
      v56 = v101.__locale_;
    if ((v103 & 0x80u) == 0)
      v57 = v103;
    else
      v57 = v102;
    v58 = sub_20BDDC1C8(v55, (uint64_t)v56, v57);
    sub_20BDDC1C8(v58, (uint64_t)"; next ", 7);
    if ((char)v103 < 0)
      operator delete(v101.__locale_);
    if ((char)v108 < 0)
      operator delete(v106);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(_QWORD *)(*v49 - 24)));
    v59 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    sub_20C0940F4(a1, a2);
    sub_20C01AE64((uint64_t)&v105, (uint64_t)v4, v5);
    if ((v108 & 0x80u) == 0)
      v60 = &v106;
    else
      v60 = v106;
    if ((v108 & 0x80u) == 0)
      v61 = v108;
    else
      v61 = v107;
    v62 = (_QWORD *)MEMORY[0x24BEDB310];
    v63 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v63, (uint64_t)__p, 1);
    v64 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v64, (uint64_t)__p, 1);
    v65 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v65, (uint64_t)__p, 1);
    v66 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v67 = sub_20BDDC1C8(v66, (uint64_t)__p, 1);
    v68 = sub_20BDDC1C8(v67, (uint64_t)" success ", 9);
    sub_20C093FE4(__p);
    if ((SBYTE7(v100) & 0x80u) == 0)
      v69 = __p;
    else
      v69 = (void **)__p[0];
    if ((SBYTE7(v100) & 0x80u) == 0)
      v70 = BYTE7(v100);
    else
      v70 = (uint64_t)__p[1];
    v71 = sub_20BDDC1C8(v68, (uint64_t)v69, v70);
    sub_20BDDC1C8(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v100) < 0)
      operator delete(__p[0]);
    if ((char)v108 < 0)
      operator delete(v106);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(_QWORD *)(*v62 - 24)));
    v72 = std::locale::use_facet(&v105, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v105);
    std::ostream::put();
    std::ostream::flush();
    return 1;
  }
}

void sub_20C08BA74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::locale a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::locale a22,std::locale a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C08BB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *p_p;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  const std::locale::facet *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  const std::locale::facet *v44;
  void *__p;
  uint64_t v47;
  unsigned __int8 v48;
  std::locale v49;
  void *v50;
  uint64_t v51;
  unsigned __int8 v52;
  std::locale v53;

  v4 = a1 + 8;
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v49, a1 + 8, (__int128 *)(a1 + 48));
  if ((v52 & 0x80u) == 0)
    v6 = &v50;
  else
    v6 = v50;
  if ((v52 & 0x80u) == 0)
    v7 = v52;
  else
    v7 = v51;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v9, (uint64_t)&__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v10, (uint64_t)&__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_20BDDC1C8(v11, (uint64_t)&__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)&__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C099F30(&__p);
  if ((v48 & 0x80u) == 0)
    p_p = &__p;
  else
    p_p = __p;
  if ((v48 & 0x80u) == 0)
    v16 = v48;
  else
    v16 = v47;
  v17 = sub_20BDDC1C8(v14, (uint64_t)p_p, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if ((char)v48 < 0)
    operator delete(__p);
  if ((char)v52 < 0)
    operator delete(v50);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(&v49, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v49);
  std::ostream::put();
  std::ostream::flush();
  v19 = sub_20C099FB8(a1, a2);
  if ((_DWORD)v19)
  {
    sub_20C01AE64((uint64_t)&v49, v4, v5);
    if ((v52 & 0x80u) == 0)
      v20 = &v50;
    else
      v20 = v50;
    if ((v52 & 0x80u) == 0)
      v21 = v52;
    else
      v21 = v51;
    v22 = (_QWORD *)MEMORY[0x24BEDB310];
    v23 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v20, v21);
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v23, (uint64_t)&__p, 1);
    v24 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v24, (uint64_t)&__p, 1);
    v25 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_20BDDC1C8(v25, (uint64_t)&__p, 1);
    v26 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    v27 = sub_20BDDC1C8(v26, (uint64_t)&__p, 1);
    v28 = sub_20BDDC1C8(v27, (uint64_t)" success ", 9);
    sub_20C099F30(&__p);
    if ((v48 & 0x80u) == 0)
      v29 = &__p;
    else
      v29 = __p;
    if ((v48 & 0x80u) == 0)
      v30 = v48;
    else
      v30 = v47;
    v31 = sub_20BDDC1C8(v28, (uint64_t)v29, v30);
    sub_20BDDC1C8(v31, (uint64_t)"; next ", 7);
    if ((char)v48 < 0)
      operator delete(__p);
    if ((char)v52 < 0)
      operator delete(v50);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v22 + *(_QWORD *)(*v22 - 24)));
    v32 = std::locale::use_facet(&v49, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v32->__vftable[2].~facet_0)(v32, 10);
    std::locale::~locale(&v49);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_20C01AE64((uint64_t)&v49, v4, v5);
    if ((v52 & 0x80u) == 0)
      v33 = &v50;
    else
      v33 = v50;
    if ((v52 & 0x80u) == 0)
      v34 = v52;
    else
      v34 = v51;
    v35 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v35, (uint64_t)&__p, 1);
    v36 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v36, (uint64_t)&__p, 1);
    v37 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_20BDDC1C8(v37, (uint64_t)&__p, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    v39 = sub_20BDDC1C8(v38, (uint64_t)&__p, 1);
    v40 = sub_20BDDC1C8(v39, (uint64_t)" failure ", 9);
    sub_20C099F30(&__p);
    if ((v48 & 0x80u) == 0)
      v41 = &__p;
    else
      v41 = __p;
    if ((v48 & 0x80u) == 0)
      v42 = v48;
    else
      v42 = v47;
    v43 = sub_20BDDC1C8(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(_QWORD *)(*v43 - 24)));
    v44 = std::locale::use_facet(&v53, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v53);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v48 < 0)
      operator delete(__p);
    if ((char)v52 < 0)
      operator delete(v50);
  }
  return v19;
}

void sub_20C08C024(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,std::locale a24)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C08C098(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  void **v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void **v28;
  uint64_t v29;
  _QWORD *v30;
  const std::locale::facet *v31;
  __int128 v32;
  __int128 v33;
  char v34;
  __int128 v35;
  __int128 v36;
  void **v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  void **v45;
  uint64_t v46;
  _QWORD *v47;
  const std::locale::facet *v48;
  void **v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  void **v58;
  uint64_t v59;
  _QWORD *v60;
  const std::locale::facet *v61;
  __int128 v62;
  char v63;
  __int128 v64;
  void **v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  void **v73;
  uint64_t v74;
  _QWORD *v75;
  const std::locale::facet *v76;
  void **v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  void **v85;
  uint64_t v86;
  _QWORD *v87;
  const std::locale::facet *v88;
  uint64_t result;
  void **v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  void **v99;
  uint64_t v100;
  _QWORD *v101;
  void **v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  void **v110;
  uint64_t v111;
  _QWORD *v112;
  const std::locale::facet *v113;
  void **v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  void **v122;
  uint64_t v123;
  _QWORD *v124;
  const std::locale::facet *v125;
  void **v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  _QWORD *v134;
  void **v135;
  uint64_t v136;
  _QWORD *v137;
  const std::locale::facet *v138;
  __int128 v139;
  __int128 v140;
  void *__p[2];
  __int128 v142;
  std::locale v143[2];
  void *v144[2];
  uint64_t v145;
  unsigned __int8 v146;
  std::locale v147;

  v4 = (_OWORD *)(a1 + 8);
  v139 = *(_OWORD *)(a1 + 8);
  v140 = *(_OWORD *)(a1 + 24);
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)v143, a1 + 8, (__int128 *)(a1 + 48));
  if ((v146 & 0x80u) == 0)
    v6 = &v144[1];
  else
    v6 = (void **)v144[1];
  if ((v146 & 0x80u) == 0)
    v7 = v146;
  else
    v7 = v145;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v9, (uint64_t)__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v10, (uint64_t)__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v11, (uint64_t)__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C09C508(__p);
  if ((SBYTE7(v142) & 0x80u) == 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if ((SBYTE7(v142) & 0x80u) == 0)
    v16 = BYTE7(v142);
  else
    v16 = (uint64_t)__p[1];
  v17 = sub_20BDDC1C8(v14, (uint64_t)v15, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v142) < 0)
    operator delete(__p[0]);
  if ((char)v146 < 0)
    operator delete(v144[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(v143, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
  if ((v146 & 0x80u) == 0)
    v19 = &v144[1];
  else
    v19 = (void **)v144[1];
  if ((v146 & 0x80u) == 0)
    v20 = v146;
  else
    v20 = v145;
  v21 = (_QWORD *)MEMORY[0x24BEDB310];
  v22 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v19, v20);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v22, (uint64_t)__p, 1);
  v23 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v23, (uint64_t)__p, 1);
  v24 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v24, (uint64_t)__p, 1);
  v25 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v26 = sub_20BDDC1C8(v25, (uint64_t)__p, 1);
  v27 = sub_20BDDC1C8(v26, (uint64_t)"  start  ", 9);
  sub_20C09C590(__p);
  if ((SBYTE7(v142) & 0x80u) == 0)
    v28 = __p;
  else
    v28 = (void **)__p[0];
  if ((SBYTE7(v142) & 0x80u) == 0)
    v29 = BYTE7(v142);
  else
    v29 = (uint64_t)__p[1];
  v30 = sub_20BDDC1C8(v27, (uint64_t)v28, v29);
  sub_20BDDC1C8(v30, (uint64_t)"; current ", 10);
  if (SBYTE7(v142) < 0)
    operator delete(__p[0]);
  if ((char)v146 < 0)
    operator delete(v144[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(_QWORD *)(*v21 - 24)));
  v31 = std::locale::use_facet(v143, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  v32 = v4[1];
  *(_OWORD *)__p = *v4;
  v142 = v32;
  if (sub_20C09C620((_QWORD *)a1)
    && (v33 = v4[1],
        *(_OWORD *)&v143[0].__locale_ = *v4,
        *(_OWORD *)v144 = v33,
        v34 = sub_20C08DDF4((_QWORD *)a1),
        v35 = *(_OWORD *)v144,
        *v4 = *(_OWORD *)&v143[0].__locale_,
        v4[1] = v35,
        (v34 & 1) == 0))
  {
    sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0)
      v90 = &v144[1];
    else
      v90 = (void **)v144[1];
    if ((v146 & 0x80u) == 0)
      v91 = v146;
    else
      v91 = v145;
    v92 = (_QWORD *)MEMORY[0x24BEDB310];
    v93 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v90, v91);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v93, (uint64_t)__p, 1);
    v94 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v94, (uint64_t)__p, 1);
    v95 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v95, (uint64_t)__p, 1);
    v96 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v97 = sub_20BDDC1C8(v96, (uint64_t)__p, 1);
    v98 = sub_20BDDC1C8(v97, (uint64_t)" success ", 9);
    sub_20C09C590(__p);
    if ((SBYTE7(v142) & 0x80u) == 0)
      v99 = __p;
    else
      v99 = (void **)__p[0];
    if ((SBYTE7(v142) & 0x80u) == 0)
      v100 = BYTE7(v142);
    else
      v100 = (uint64_t)__p[1];
    v101 = sub_20BDDC1C8(v98, (uint64_t)v99, v100);
    sub_20BDDC1C8(v101, (uint64_t)"; next ", 7);
    if (SBYTE7(v142) < 0)
      operator delete(__p[0]);
    if ((char)v146 < 0)
      operator delete(v144[1]);
  }
  else
  {
    v36 = v142;
    *v4 = *(_OWORD *)__p;
    v4[1] = v36;
    sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0)
      v37 = &v144[1];
    else
      v37 = (void **)v144[1];
    if ((v146 & 0x80u) == 0)
      v38 = v146;
    else
      v38 = v145;
    v39 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v37, v38);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v39, (uint64_t)__p, 1);
    v40 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v40, (uint64_t)__p, 1);
    v41 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v41, (uint64_t)__p, 1);
    v42 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v43 = sub_20BDDC1C8(v42, (uint64_t)__p, 1);
    v44 = sub_20BDDC1C8(v43, (uint64_t)" failure ", 9);
    sub_20C09C590(__p);
    if ((SBYTE7(v142) & 0x80u) == 0)
      v45 = __p;
    else
      v45 = (void **)__p[0];
    if ((SBYTE7(v142) & 0x80u) == 0)
      v46 = BYTE7(v142);
    else
      v46 = (uint64_t)__p[1];
    v47 = sub_20BDDC1C8(v44, (uint64_t)v45, v46);
    std::ios_base::getloc((const std::ios_base *)((char *)v47 + *(_QWORD *)(*v47 - 24)));
    v48 = std::locale::use_facet(&v147, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v48->__vftable[2].~facet_0)(v48, 10);
    std::locale::~locale(&v147);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v142) < 0)
      operator delete(__p[0]);
    if ((char)v146 < 0)
      operator delete(v144[1]);
    sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0)
      v49 = &v144[1];
    else
      v49 = (void **)v144[1];
    if ((v146 & 0x80u) == 0)
      v50 = v146;
    else
      v50 = v145;
    v51 = (_QWORD *)MEMORY[0x24BEDB310];
    v52 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v49, v50);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v52, (uint64_t)__p, 1);
    v53 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v53, (uint64_t)__p, 1);
    v54 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v54, (uint64_t)__p, 1);
    v55 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v56 = sub_20BDDC1C8(v55, (uint64_t)__p, 1);
    v57 = sub_20BDDC1C8(v56, (uint64_t)"  start  ", 9);
    sub_20C09C680(__p);
    if ((SBYTE7(v142) & 0x80u) == 0)
      v58 = __p;
    else
      v58 = (void **)__p[0];
    if ((SBYTE7(v142) & 0x80u) == 0)
      v59 = BYTE7(v142);
    else
      v59 = (uint64_t)__p[1];
    v60 = sub_20BDDC1C8(v57, (uint64_t)v58, v59);
    sub_20BDDC1C8(v60, (uint64_t)"; current ", 10);
    if (SBYTE7(v142) < 0)
      operator delete(__p[0]);
    if ((char)v146 < 0)
      operator delete(v144[1]);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v51 + *(_QWORD *)(*v51 - 24)));
    v61 = std::locale::use_facet(v143, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v61->__vftable[2].~facet_0)(v61, 10);
    std::locale::~locale(v143);
    std::ostream::put();
    std::ostream::flush();
    if (!sub_20C09C710((_QWORD *)a1)
      || (v62 = v4[1],
          *(_OWORD *)&v143[0].__locale_ = *v4,
          *(_OWORD *)v144 = v62,
          v63 = sub_20C08DDF4((_QWORD *)a1),
          v64 = *(_OWORD *)v144,
          *v4 = *(_OWORD *)&v143[0].__locale_,
          v4[1] = v64,
          (v63 & 1) != 0))
    {
      sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
      if ((v146 & 0x80u) == 0)
        v65 = &v144[1];
      else
        v65 = (void **)v144[1];
      if ((v146 & 0x80u) == 0)
        v66 = v146;
      else
        v66 = v145;
      v67 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v65, v66);
      LOBYTE(__p[0]) = 58;
      sub_20BDDC1C8(v67, (uint64_t)__p, 1);
      v68 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_20BDDC1C8(v68, (uint64_t)__p, 1);
      v69 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_20BDDC1C8(v69, (uint64_t)__p, 1);
      v70 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v71 = sub_20BDDC1C8(v70, (uint64_t)__p, 1);
      v72 = sub_20BDDC1C8(v71, (uint64_t)" failure ", 9);
      sub_20C09C680(__p);
      if ((SBYTE7(v142) & 0x80u) == 0)
        v73 = __p;
      else
        v73 = (void **)__p[0];
      if ((SBYTE7(v142) & 0x80u) == 0)
        v74 = BYTE7(v142);
      else
        v74 = (uint64_t)__p[1];
      v75 = sub_20BDDC1C8(v72, (uint64_t)v73, v74);
      std::ios_base::getloc((const std::ios_base *)((char *)v75 + *(_QWORD *)(*v75 - 24)));
      v76 = std::locale::use_facet(&v147, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v76->__vftable[2].~facet_0)(v76, 10);
      std::locale::~locale(&v147);
      std::ostream::put();
      std::ostream::flush();
      if (SBYTE7(v142) < 0)
        operator delete(__p[0]);
      if ((char)v146 < 0)
        operator delete(v144[1]);
      sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
      if ((v146 & 0x80u) == 0)
        v77 = &v144[1];
      else
        v77 = (void **)v144[1];
      if ((v146 & 0x80u) == 0)
        v78 = v146;
      else
        v78 = v145;
      v79 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v77, v78);
      LOBYTE(__p[0]) = 58;
      sub_20BDDC1C8(v79, (uint64_t)__p, 1);
      v80 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 58;
      sub_20BDDC1C8(v80, (uint64_t)__p, 1);
      v81 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 40;
      sub_20BDDC1C8(v81, (uint64_t)__p, 1);
      v82 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(__p[0]) = 41;
      v83 = sub_20BDDC1C8(v82, (uint64_t)__p, 1);
      v84 = sub_20BDDC1C8(v83, (uint64_t)" failure ", 9);
      sub_20C09C508(__p);
      if ((SBYTE7(v142) & 0x80u) == 0)
        v85 = __p;
      else
        v85 = (void **)__p[0];
      if ((SBYTE7(v142) & 0x80u) == 0)
        v86 = BYTE7(v142);
      else
        v86 = (uint64_t)__p[1];
      v87 = sub_20BDDC1C8(v84, (uint64_t)v85, v86);
      std::ios_base::getloc((const std::ios_base *)((char *)v87 + *(_QWORD *)(*v87 - 24)));
      v88 = std::locale::use_facet(&v147, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v88->__vftable[2].~facet_0)(v88, 10);
      std::locale::~locale(&v147);
      std::ostream::put();
      std::ostream::flush();
      if (SBYTE7(v142) < 0)
        operator delete(__p[0]);
      if ((char)v146 < 0)
        operator delete(v144[1]);
      result = 0;
      *v4 = v139;
      v4[1] = v140;
      return result;
    }
    sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
    if ((v146 & 0x80u) == 0)
      v102 = &v144[1];
    else
      v102 = (void **)v144[1];
    if ((v146 & 0x80u) == 0)
      v103 = v146;
    else
      v103 = v145;
    v92 = (_QWORD *)MEMORY[0x24BEDB310];
    v104 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v102, v103);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v104, (uint64_t)__p, 1);
    v105 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v105, (uint64_t)__p, 1);
    v106 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v106, (uint64_t)__p, 1);
    v107 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v108 = sub_20BDDC1C8(v107, (uint64_t)__p, 1);
    v109 = sub_20BDDC1C8(v108, (uint64_t)" success ", 9);
    sub_20C09C680(__p);
    if ((SBYTE7(v142) & 0x80u) == 0)
      v110 = __p;
    else
      v110 = (void **)__p[0];
    if ((SBYTE7(v142) & 0x80u) == 0)
      v111 = BYTE7(v142);
    else
      v111 = (uint64_t)__p[1];
    v112 = sub_20BDDC1C8(v109, (uint64_t)v110, v111);
    sub_20BDDC1C8(v112, (uint64_t)"; next ", 7);
    if (SBYTE7(v142) < 0)
      operator delete(__p[0]);
    if ((char)v146 < 0)
      operator delete(v144[1]);
  }
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v92 + *(_QWORD *)(*v92 - 24)));
  v113 = std::locale::use_facet(v143, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v113->__vftable[2].~facet_0)(v113, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
  if ((v146 & 0x80u) == 0)
    v114 = &v144[1];
  else
    v114 = (void **)v144[1];
  if ((v146 & 0x80u) == 0)
    v115 = v146;
  else
    v115 = v145;
  v116 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v114, v115);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v116, (uint64_t)__p, 1);
  v117 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v117, (uint64_t)__p, 1);
  v118 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v118, (uint64_t)__p, 1);
  v119 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v120 = sub_20BDDC1C8(v119, (uint64_t)__p, 1);
  v121 = sub_20BDDC1C8(v120, (uint64_t)"  apply  ", 9);
  sub_20C09C508(__p);
  if ((SBYTE7(v142) & 0x80u) == 0)
    v122 = __p;
  else
    v122 = (void **)__p[0];
  if ((SBYTE7(v142) & 0x80u) == 0)
    v123 = BYTE7(v142);
  else
    v123 = (uint64_t)__p[1];
  v124 = sub_20BDDC1C8(v121, (uint64_t)v122, v123);
  std::ios_base::getloc((const std::ios_base *)((char *)v124 + *(_QWORD *)(*v124 - 24)));
  v125 = std::locale::use_facet(&v147, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v125->__vftable[2].~facet_0)(v125, 10);
  std::locale::~locale(&v147);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v142) < 0)
    operator delete(__p[0]);
  if ((char)v146 < 0)
    operator delete(v144[1]);
  sub_20C09C770(a2);
  sub_20C01AE64((uint64_t)v143, (uint64_t)v4, v5);
  if ((v146 & 0x80u) == 0)
    v126 = &v144[1];
  else
    v126 = (void **)v144[1];
  if ((v146 & 0x80u) == 0)
    v127 = v146;
  else
    v127 = v145;
  v128 = (_QWORD *)MEMORY[0x24BEDB310];
  v129 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v126, v127);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v129, (uint64_t)__p, 1);
  v130 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v130, (uint64_t)__p, 1);
  v131 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v131, (uint64_t)__p, 1);
  v132 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v133 = sub_20BDDC1C8(v132, (uint64_t)__p, 1);
  v134 = sub_20BDDC1C8(v133, (uint64_t)" success ", 9);
  sub_20C09C508(__p);
  if ((SBYTE7(v142) & 0x80u) == 0)
    v135 = __p;
  else
    v135 = (void **)__p[0];
  if ((SBYTE7(v142) & 0x80u) == 0)
    v136 = BYTE7(v142);
  else
    v136 = (uint64_t)__p[1];
  v137 = sub_20BDDC1C8(v134, (uint64_t)v135, v136);
  sub_20BDDC1C8(v137, (uint64_t)"; next ", 7);
  if (SBYTE7(v142) < 0)
    operator delete(__p[0]);
  if ((char)v146 < 0)
    operator delete(v144[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v128 + *(_QWORD *)(*v128 - 24)));
  v138 = std::locale::use_facet(v143, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v138->__vftable[2].~facet_0)(v138, 10);
  std::locale::~locale(v143);
  std::ostream::put();
  std::ostream::flush();
  return 1;
}

void sub_20C08CF9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, __int128 a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, std::locale a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  _OWORD *v26;

  if (a26 < 0)
    operator delete(__p);
  *v26 = a9;
  v26[1] = a10;
  _Unwind_Resume(exception_object);
}

void sub_20C08D090(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_18VariableE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_18VariableE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08D104(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08D118(_QWORD *a1)
{
  uint64_t v2;

  sub_20C08D160((uint64_t)a1);
  v2 = sub_20C08D77C(a1);
  if ((_DWORD)v2)
    sub_20C08D348((uint64_t)a1);
  else
    sub_20C08D530((uint64_t)a1);
  return v2;
}

uint64_t sub_20C08D160(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  void *__p[2];
  unsigned __int8 v17;
  std::locale v18;
  void *v19[2];
  unsigned __int8 v20;

  sub_20C01AE64((uint64_t)&v18, a1 + 8, (__int128 *)(a1 + 48));
  if ((v20 & 0x80u) == 0)
    v2 = v19;
  else
    v2 = (void **)v19[0];
  if ((v20 & 0x80u) == 0)
    v3 = v20;
  else
    v3 = (uint64_t)v19[1];
  v4 = (_QWORD *)MEMORY[0x24BEDB310];
  v5 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v5, (uint64_t)__p, 1);
  v6 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v6, (uint64_t)__p, 1);
  v7 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v7, (uint64_t)__p, 1);
  v8 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v9 = sub_20BDDC1C8(v8, (uint64_t)__p, 1);
  v10 = sub_20BDDC1C8(v9, (uint64_t)"  start  ", 9);
  sub_20C08D6F4(__p);
  if ((v17 & 0x80u) == 0)
    v11 = __p;
  else
    v11 = (void **)__p[0];
  if ((v17 & 0x80u) == 0)
    v12 = v17;
  else
    v12 = (uint64_t)__p[1];
  v13 = sub_20BDDC1C8(v10, (uint64_t)v11, v12);
  sub_20BDDC1C8(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0)
    operator delete(__p[0]);
  if ((char)v20 < 0)
    operator delete(v19[0]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(_QWORD *)(*v4 - 24)));
  v14 = std::locale::use_facet(&v18, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_20C08D300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C08D348(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  void *__p[2];
  unsigned __int8 v17;
  std::locale v18;
  void *v19[2];
  unsigned __int8 v20;

  sub_20C01AE64((uint64_t)&v18, a1 + 8, (__int128 *)(a1 + 48));
  if ((v20 & 0x80u) == 0)
    v2 = v19;
  else
    v2 = (void **)v19[0];
  if ((v20 & 0x80u) == 0)
    v3 = v20;
  else
    v3 = (uint64_t)v19[1];
  v4 = (_QWORD *)MEMORY[0x24BEDB310];
  v5 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v5, (uint64_t)__p, 1);
  v6 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v6, (uint64_t)__p, 1);
  v7 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v7, (uint64_t)__p, 1);
  v8 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v9 = sub_20BDDC1C8(v8, (uint64_t)__p, 1);
  v10 = sub_20BDDC1C8(v9, (uint64_t)" success ", 9);
  sub_20C08D6F4(__p);
  if ((v17 & 0x80u) == 0)
    v11 = __p;
  else
    v11 = (void **)__p[0];
  if ((v17 & 0x80u) == 0)
    v12 = v17;
  else
    v12 = (uint64_t)__p[1];
  v13 = sub_20BDDC1C8(v10, (uint64_t)v11, v12);
  sub_20BDDC1C8(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0)
    operator delete(__p[0]);
  if ((char)v20 < 0)
    operator delete(v19[0]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(_QWORD *)(*v4 - 24)));
  v14 = std::locale::use_facet(&v18, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_20C08D4E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08D530(uint64_t a1)
{
  void **v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  uint64_t v10;
  _QWORD *v11;
  const std::locale::facet *v12;
  void *__p[2];
  unsigned __int8 v14;
  uint64_t v15;
  void *v16[2];
  unsigned __int8 v17;
  std::locale v18;

  sub_20C01AE64((uint64_t)&v15, a1 + 8, (__int128 *)(a1 + 48));
  if ((v17 & 0x80u) == 0)
    v1 = v16;
  else
    v1 = (void **)v16[0];
  if ((v17 & 0x80u) == 0)
    v2 = v17;
  else
    v2 = (uint64_t)v16[1];
  v3 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v1, v2);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v3, (uint64_t)__p, 1);
  v4 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v4, (uint64_t)__p, 1);
  v5 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v5, (uint64_t)__p, 1);
  v6 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v7 = sub_20BDDC1C8(v6, (uint64_t)__p, 1);
  v8 = sub_20BDDC1C8(v7, (uint64_t)" failure ", 9);
  sub_20C08D6F4(__p);
  if ((v14 & 0x80u) == 0)
    v9 = __p;
  else
    v9 = (void **)__p[0];
  if ((v14 & 0x80u) == 0)
    v10 = v14;
  else
    v10 = (uint64_t)__p[1];
  v11 = sub_20BDDC1C8(v8, (uint64_t)v9, v10);
  std::ios_base::getloc((const std::ios_base *)((char *)v11 + *(_QWORD *)(*v11 - 24)));
  v12 = std::locale::use_facet(&v18, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v12->__vftable[2].~facet_0)(v12, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v14 < 0)
    operator delete(__p[0]);
  if ((char)v17 < 0)
    operator delete(v16[0]);
}

void sub_20C08D6AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08D6F4(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_113VariableStartE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08D768(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08D77C(_QWORD *a1)
{
  _WORD *v1;
  uint64_t v3;

  v1 = (_WORD *)a1[1];
  if (a1[5] - (_QWORD)v1 < 2uLL || *v1 != 31524)
    return 0;
  v3 = a1[2] + 2;
  a1[1] = v1 + 1;
  a1[2] = v3;
  a1[4] += 2;
  return 1;
}

uint64_t sub_20C08D7D4(uint64_t a1)
{
  uint64_t v2;
  __int128 *v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  void *p_p;
  uint64_t v14;
  _QWORD *v15;
  const std::locale::facet *v16;
  _BYTE *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  const std::locale::facet *v31;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  const std::locale::facet *v44;
  void *__p;
  uint64_t v46;
  unsigned __int8 v47;
  std::locale v48;
  void *v49;
  uint64_t v50;
  unsigned __int8 v51;
  std::locale v52;

  v2 = a1 + 8;
  v3 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v48, a1 + 8, (__int128 *)(a1 + 48));
  if ((v51 & 0x80u) == 0)
    v4 = &v49;
  else
    v4 = v49;
  if ((v51 & 0x80u) == 0)
    v5 = v51;
  else
    v5 = v50;
  v6 = (_QWORD *)MEMORY[0x24BEDB310];
  v7 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v4, v5);
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v7, (uint64_t)&__p, 1);
  v8 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v8, (uint64_t)&__p, 1);
  v9 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_20BDDC1C8(v9, (uint64_t)&__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  v11 = sub_20BDDC1C8(v10, (uint64_t)&__p, 1);
  v12 = sub_20BDDC1C8(v11, (uint64_t)"  start  ", 9);
  sub_20C08E19C(&__p);
  if ((v47 & 0x80u) == 0)
    p_p = &__p;
  else
    p_p = __p;
  if ((v47 & 0x80u) == 0)
    v14 = v47;
  else
    v14 = v46;
  v15 = sub_20BDDC1C8(v12, (uint64_t)p_p, v14);
  sub_20BDDC1C8(v15, (uint64_t)"; current ", 10);
  if ((char)v47 < 0)
    operator delete(__p);
  if ((char)v51 < 0)
    operator delete(v49);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v6 + *(_QWORD *)(*v6 - 24)));
  v16 = std::locale::use_facet(&v48, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v16->__vftable[2].~facet_0)(v16, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  std::ostream::flush();
  v17 = *(_BYTE **)(a1 + 8);
  if (*(_BYTE **)(a1 + 40) == v17 || *v17 != 125)
  {
    sub_20C01AE64((uint64_t)&v48, v2, v3);
    if ((v51 & 0x80u) == 0)
      v33 = &v49;
    else
      v33 = v49;
    if ((v51 & 0x80u) == 0)
      v34 = v51;
    else
      v34 = v50;
    v35 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v33, v34);
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v35, (uint64_t)&__p, 1);
    v36 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 58;
    sub_20BDDC1C8(v36, (uint64_t)&__p, 1);
    v37 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 40;
    sub_20BDDC1C8(v37, (uint64_t)&__p, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p) = 41;
    v39 = sub_20BDDC1C8(v38, (uint64_t)&__p, 1);
    v40 = sub_20BDDC1C8(v39, (uint64_t)" failure ", 9);
    sub_20C08E19C(&__p);
    if ((v47 & 0x80u) == 0)
      v41 = &__p;
    else
      v41 = __p;
    if ((v47 & 0x80u) == 0)
      v42 = v47;
    else
      v42 = v46;
    v43 = sub_20BDDC1C8(v40, (uint64_t)v41, v42);
    std::ios_base::getloc((const std::ios_base *)((char *)v43 + *(_QWORD *)(*v43 - 24)));
    v44 = std::locale::use_facet(&v52, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
    std::locale::~locale(&v52);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v47 < 0)
      operator delete(__p);
    if ((char)v51 < 0)
      operator delete(v49);
    sub_20C08E224(a1);
  }
  v18 = *(_QWORD *)(a1 + 16) + 1;
  *(_QWORD *)(a1 + 8) = v17 + 1;
  *(_QWORD *)(a1 + 16) = v18;
  ++*(_QWORD *)(a1 + 32);
  sub_20C01AE64((uint64_t)&v48, v2, v3);
  if ((v51 & 0x80u) == 0)
    v19 = &v49;
  else
    v19 = v49;
  if ((v51 & 0x80u) == 0)
    v20 = v51;
  else
    v20 = v50;
  v21 = (_QWORD *)MEMORY[0x24BEDB310];
  v22 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v19, v20);
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v22, (uint64_t)&__p, 1);
  v23 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 58;
  sub_20BDDC1C8(v23, (uint64_t)&__p, 1);
  v24 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 40;
  sub_20BDDC1C8(v24, (uint64_t)&__p, 1);
  v25 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p) = 41;
  v26 = sub_20BDDC1C8(v25, (uint64_t)&__p, 1);
  v27 = sub_20BDDC1C8(v26, (uint64_t)" success ", 9);
  sub_20C08E19C(&__p);
  if ((v47 & 0x80u) == 0)
    v28 = &__p;
  else
    v28 = __p;
  if ((v47 & 0x80u) == 0)
    v29 = v47;
  else
    v29 = v46;
  v30 = sub_20BDDC1C8(v27, (uint64_t)v28, v29);
  sub_20BDDC1C8(v30, (uint64_t)"; next ", 7);
  if ((char)v47 < 0)
    operator delete(__p);
  if ((char)v51 < 0)
    operator delete(v49);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v21 + *(_QWORD *)(*v21 - 24)));
  v31 = std::locale::use_facet(&v48, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
  std::locale::~locale(&v48);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_20C08DC9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  std::locale::~locale((std::locale *)(v23 - 56));
  if (a14 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(a1);
}

void sub_20C08DD10(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_8VariableEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_8VariableEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08DD84(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08DD98(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v4;

  v1 = (unsigned __int8 *)a1[1];
  if (v1 == (unsigned __int8 *)a1[5])
    return 0;
  v2 = *v1;
  if ((v2 - 97) >= 0x1A && v2 != 95 && (v2 - 65) > 0x19)
    return 0;
  v4 = a1[2] + 1;
  a1[1] = v1 + 1;
  a1[2] = v4;
  ++a1[4];
  return 1;
}

uint64_t sub_20C08DDF4(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v4;

  v1 = (unsigned __int8 *)a1[1];
  if (v1 == (unsigned __int8 *)a1[5])
    return 0;
  v2 = *v1;
  if ((v2 & 0xFFFFFFDF) - 65 >= 0x1A && v2 != 95 && (v2 - 48) > 9)
    return 0;
  v4 = a1[2] + 1;
  a1[1] = v1 + 1;
  a1[2] = v4;
  ++a1[4];
  return 1;
}

__n128 sub_20C08DE54(char **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const void *v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  __n128 result;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;

  sub_20BE93368(&v10, *a1, *(char **)(a2 + 8), *(_QWORD *)(a2 + 8) - (_QWORD)*a1);
  v4 = *(_QWORD *)(a3 + 8);
  if (*(_QWORD *)a3 == v4
    || (v5 = *(const void **)(v4 - 8)) == 0
    || (v6 = (char *)__dynamic_cast(v5, (const struct __class_type_info *)&unk_24C5275D0, (const struct __class_type_info *)&unk_24C5275E0, 0)) == 0)
  {
    v7 = operator new(0x20uLL);
    *v7 = &off_24C527608;
    v7[1] = 0;
    v7[2] = 0;
    v7[3] = 0;
    v12 = v7;
    sub_20C08DF60((char **)a3, (uint64_t *)&v12);
    if (v12)
      (*(void (**)(_QWORD *))(*v12 + 8))(v12);
    v6 = *(char **)(*(_QWORD *)(a3 + 8) - 8);
  }
  v8 = v6 + 8;
  if (v6[31] < 0)
    operator delete(*(void **)v8);
  result = v10;
  *((_QWORD *)v8 + 2) = v11;
  *(__n128 *)v8 = result;
  return result;
}

void sub_20C08DF28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a15)
    (*(void (**)(uint64_t))(*(_QWORD *)a15 + 8))(a15);
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08DF60(char **a1, uint64_t *a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = a1[1];
  v4 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v4)
  {
    v8 = (v5 - *a1) >> 3;
    if ((unint64_t)(v8 + 1) >> 61)
      sub_20BDDF694();
    v9 = v4 - (_QWORD)*a1;
    v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1))
      v10 = v8 + 1;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      v11 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    if (v11)
    {
      if (v11 >> 61)
        sub_20BDDF5B4();
      v12 = (char *)operator new(8 * v11);
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[8 * v8];
    v14 = &v12[8 * v11];
    v15 = *a2;
    *a2 = 0;
    *(_QWORD *)v13 = v15;
    v7 = v13 + 8;
    v16 = *a1;
    v17 = a1[1];
    if (v17 == *a1)
    {
      *a1 = v13;
      a1[1] = v7;
      a1[2] = v14;
    }
    else
    {
      do
      {
        v18 = *((_QWORD *)v17 - 1);
        v17 -= 8;
        *(_QWORD *)v17 = 0;
        *((_QWORD *)v13 - 1) = v18;
        v13 -= 8;
      }
      while (v17 != v16);
      v17 = *a1;
      v19 = a1[1];
      *a1 = v13;
      a1[1] = v7;
      a1[2] = v14;
      while (v19 != v17)
      {
        v21 = *((_QWORD *)v19 - 1);
        v19 -= 8;
        v20 = v21;
        *(_QWORD *)v19 = 0;
        if (v21)
          (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
      }
    }
    if (v17)
      operator delete(v17);
  }
  else
  {
    v6 = *a2;
    *a2 = 0;
    *(_QWORD *)v5 = v6;
    v7 = v5 + 8;
  }
  a1[1] = v7;
}

uint64_t sub_20C08E080(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24C527608;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_20C08E0BC(void **__p)
{
  *__p = &off_24C527608;
  if (*((char *)__p + 31) < 0)
    operator delete(__p[1]);
  operator delete(__p);
}

void sub_20C08E0F8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __n128 *v3;
  void *v4;

  v3 = (__n128 *)(a1 + 8);
  v4 = operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::VariableNode::VariableNode((uint64_t)v4, v3);
  *a2 = v4;
}

void sub_20C08E138(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C08E14C(uint64_t a1)
{
  std::string v2;

  sub_20BDDC0E4(&v2, "Variables must be a C identifier");
  sub_20C088F14(a1, &v2);
}

void sub_20C08E180(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08E19C(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111VariableEndE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_111VariableEndE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08E210(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C08E224(uint64_t a1)
{
  std::string v2;

  sub_20BDDC0E4(&v2, "Missing ending '}'");
  sub_20C088F14(a1, &v2);
}

void sub_20C08E258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C08E274(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112QuotedStringILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112QuotedStringILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08E2E8(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C08E2FC(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringStartILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringStartILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08E370(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void *sub_20C08E384(uint64_t a1)
{
  uint64_t v2;
  const void *v3;
  void *result;
  _QWORD *v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)a1 == v2
    || (v3 = *(const void **)(v2 - 8)) == 0
    || (result = __dynamic_cast(v3, (const struct __class_type_info *)&unk_24C5275D0, (const struct __class_type_info *)&unk_24C527620, 0)) == 0)
  {
    v5 = operator new(0x20uLL);
    *v5 = off_24C527648;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0;
    v6 = v5;
    sub_20C08DF60((char **)a1, (uint64_t *)&v6);
    if (v6)
      (*(void (**)(_QWORD *))(*v6 + 8))(v6);
    return *(void **)(*(_QWORD *)(a1 + 8) - 8);
  }
  return result;
}

void sub_20C08E41C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    (*(void (**)(uint64_t))(*(_QWORD *)a10 + 8))(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C08E43C(uint64_t a1)
{
  void **v3;

  *(_QWORD *)a1 = off_24C527648;
  v3 = (void **)(a1 + 8);
  sub_20BED2E10(&v3);
  return a1;
}

void sub_20C08E480(char *a1)
{
  void **v2;

  *(_QWORD *)a1 = off_24C527648;
  v2 = (void **)(a1 + 8);
  sub_20BED2E10(&v2);
  operator delete(a1);
}

uint64_t sub_20C08E4C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t result;

  v3 = a1 + 8;
  v4 = operator new(0x20uLL);
  result = pxrInternal__aapl__pxrReserved__::Sdf_VariableExpressionImpl::StringNode::StringNode(v4, v3);
  *a2 = v4;
  return result;
}

void sub_20C08E508(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08E51C(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  __int128 *v4;
  void **v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  void **v14;
  uint64_t v15;
  _QWORD *v16;
  const std::locale::facet *v17;
  _QWORD *v18;
  std::locale::id *v19;
  void **v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void **v28;
  uint64_t v29;
  _QWORD *v30;
  const std::locale::facet *v31;
  __int128 v32;
  void **v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  void *locale;
  uint64_t v42;
  _QWORD *v43;
  const std::locale::facet *v44;
  __int128 v45;
  __int128 v46;
  int v47;
  void **v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  const std::locale::facet *v59;
  void **v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  _QWORD *v70;
  const std::locale::facet *v71;
  void **v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  void *v80;
  uint64_t v81;
  _QWORD *v82;
  const std::locale::facet *v83;
  void **v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  void *v92;
  uint64_t v93;
  _QWORD *v94;
  const std::locale::facet *v95;
  void **v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  void **v104;
  uint64_t v105;
  _QWORD *v106;
  const std::locale::facet *v107;
  void **v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  void *v116;
  uint64_t v117;
  _QWORD *v118;
  const std::locale::facet *v119;
  __int128 v120;
  void **v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  void **v129;
  uint64_t v130;
  _QWORD *v131;
  const std::locale::facet *v132;
  void **v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD *v139;
  _QWORD *v140;
  _QWORD *v141;
  void **v142;
  uint64_t v143;
  _QWORD *v144;
  const std::locale::facet *v145;
  void **v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  _QWORD *v154;
  void **v155;
  uint64_t v156;
  _QWORD *v157;
  const std::locale::facet *v158;
  _BYTE *v159;
  uint64_t v160;
  void **v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  _QWORD *v165;
  _QWORD *v166;
  _QWORD *v167;
  _QWORD *v168;
  _QWORD *v169;
  void **v170;
  uint64_t v171;
  _QWORD *v172;
  const std::locale::facet *v173;
  void **v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  _QWORD *v179;
  _QWORD *v180;
  _QWORD *v181;
  _QWORD *v182;
  void **v183;
  uint64_t v184;
  _QWORD *v185;
  const std::locale::facet *v186;
  void *__p[2];
  __int128 v189;
  _OWORD *v190;
  std::locale v191;
  uint64_t v192;
  unsigned __int8 v193;
  std::locale v194;
  std::locale v195[2];
  void *v196[2];
  uint64_t v197;
  unsigned __int8 v198;

  v3 = (_OWORD *)(a1 + 8);
  v4 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)v195, a1 + 8, (__int128 *)(a1 + 48));
  if ((v198 & 0x80u) == 0)
    v5 = &v196[1];
  else
    v5 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v6 = v198;
  else
    v6 = v197;
  v7 = (_QWORD *)MEMORY[0x24BEDB310];
  v8 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v5, v6);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v8, (uint64_t)__p, 1);
  v9 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v9, (uint64_t)__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v10, (uint64_t)__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v12 = sub_20BDDC1C8(v11, (uint64_t)__p, 1);
  v13 = sub_20BDDC1C8(v12, (uint64_t)"  start  ", 9);
  sub_20C08FB80(__p);
  if ((SBYTE7(v189) & 0x80u) == 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  if ((SBYTE7(v189) & 0x80u) == 0)
    v15 = BYTE7(v189);
  else
    v15 = (uint64_t)__p[1];
  v16 = sub_20BDDC1C8(v13, (uint64_t)v14, v15);
  sub_20BDDC1C8(v16, (uint64_t)"; current ", 10);
  if (SBYTE7(v189) < 0)
    operator delete(__p[0]);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v7 + *(_QWORD *)(*v7 - 24)));
  v17 = std::locale::use_facet(v195, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v17->__vftable[2].~facet_0)(v17, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  v18 = (_QWORD *)MEMORY[0x24BEDB310];
  std::ostream::flush();
  v19 = (std::locale::id *)MEMORY[0x24BEDB350];
  while (1)
  {
    sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0)
      v20 = &v196[1];
    else
      v20 = (void **)v196[1];
    if ((v198 & 0x80u) == 0)
      v21 = v198;
    else
      v21 = v197;
    v22 = sub_20BDDC1C8(v18, (uint64_t)v20, v21);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v22, (uint64_t)__p, 1);
    v23 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v23, (uint64_t)__p, 1);
    v24 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v24, (uint64_t)__p, 1);
    v25 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v26 = sub_20BDDC1C8(v25, (uint64_t)__p, 1);
    v27 = sub_20BDDC1C8(v26, (uint64_t)"  start  ", 9);
    sub_20C08FC08(__p);
    if ((SBYTE7(v189) & 0x80u) == 0)
      v28 = __p;
    else
      v28 = (void **)__p[0];
    if ((SBYTE7(v189) & 0x80u) == 0)
      v29 = BYTE7(v189);
    else
      v29 = (uint64_t)__p[1];
    v30 = sub_20BDDC1C8(v27, (uint64_t)v28, v29);
    sub_20BDDC1C8(v30, (uint64_t)"; current ", 10);
    if (SBYTE7(v189) < 0)
      operator delete(__p[0]);
    if ((char)v198 < 0)
      operator delete(v196[1]);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(_QWORD *)(*v18 - 24)));
    v31 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v31->__vftable[2].~facet_0)(v31, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
    if ((sub_20C08FC90(a1, a2) & 1) == 0)
      break;
LABEL_128:
    sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0)
      v96 = &v196[1];
    else
      v96 = (void **)v196[1];
    if ((v198 & 0x80u) == 0)
      v97 = v198;
    else
      v97 = v197;
    v98 = sub_20BDDC1C8(v18, (uint64_t)v96, v97);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v98, (uint64_t)__p, 1);
    v99 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v99, (uint64_t)__p, 1);
    v100 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v100, (uint64_t)__p, 1);
    v101 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v102 = sub_20BDDC1C8(v101, (uint64_t)__p, 1);
    v103 = sub_20BDDC1C8(v102, (uint64_t)" success ", 9);
    sub_20C08FC08(__p);
    if ((SBYTE7(v189) & 0x80u) == 0)
      v104 = __p;
    else
      v104 = (void **)__p[0];
    if ((SBYTE7(v189) & 0x80u) == 0)
      v105 = BYTE7(v189);
    else
      v105 = (uint64_t)__p[1];
    v106 = sub_20BDDC1C8(v103, (uint64_t)v104, v105);
    sub_20BDDC1C8(v106, (uint64_t)"; next ", 7);
    if (SBYTE7(v189) < 0)
      operator delete(__p[0]);
    if ((char)v198 < 0)
      operator delete(v196[1]);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(_QWORD *)(*v18 - 24)));
    v107 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v107->__vftable[2].~facet_0)(v107, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
  }
  v32 = v3[1];
  *(_OWORD *)__p = *v3;
  v189 = v32;
  v190 = v3;
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v33 = &v196[1];
  else
    v33 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v34 = v198;
  else
    v34 = v197;
  v35 = sub_20BDDC1C8(v18, (uint64_t)v33, v34);
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v35, (uint64_t)&v191, 1);
  v36 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v36, (uint64_t)&v191, 1);
  v37 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_20BDDC1C8(v37, (uint64_t)&v191, 1);
  v38 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  v39 = sub_20BDDC1C8(v38, (uint64_t)&v191, 1);
  v40 = sub_20BDDC1C8(v39, (uint64_t)"  start  ", 9);
  sub_20C090C84(&v191);
  if ((v193 & 0x80u) == 0)
    locale = &v191;
  else
    locale = v191.__locale_;
  if ((v193 & 0x80u) == 0)
    v42 = v193;
  else
    v42 = v192;
  v43 = sub_20BDDC1C8(v40, (uint64_t)locale, v42);
  sub_20BDDC1C8(v43, (uint64_t)"; current ", 10);
  if ((char)v193 < 0)
    operator delete(v191.__locale_);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(_QWORD *)(*v18 - 24)));
  v44 = std::locale::use_facet(v195, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v44->__vftable[2].~facet_0)(v44, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  sub_20C090D0C(a1);
  if ((sub_20C091164(a1) & 1) == 0)
  {
    sub_20C0922EC(a1);
    if (!sub_20C092744(a1) || !sub_20C093608(a1))
    {
      v47 = 0;
      goto LABEL_62;
    }
    sub_20C0924D4(a1);
  }
  while (1)
  {
    do
    {
      sub_20C090EF4(a1);
      sub_20C090D0C(a1);
    }
    while ((sub_20C091164(a1) & 1) != 0);
    sub_20C0922EC(a1);
    v45 = v3[1];
    *(_OWORD *)&v195[0].__locale_ = *v3;
    *(_OWORD *)v196 = v45;
    if (!sub_20C092744(a1) || !sub_20C093608(a1))
      break;
    sub_20C0924D4(a1);
  }
  v46 = *(_OWORD *)v196;
  *v3 = *(_OWORD *)&v195[0].__locale_;
  v3[1] = v46;
  v47 = 1;
LABEL_62:
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v48 = &v196[1];
  else
    v48 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v49 = v198;
  else
    v49 = v197;
  v50 = sub_20BDDC1C8(v18, (uint64_t)v48, v49);
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v50, (uint64_t)&v191, 1);
  v51 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v51, (uint64_t)&v191, 1);
  v52 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_20BDDC1C8(v52, (uint64_t)&v191, 1);
  v53 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  v54 = sub_20BDDC1C8(v53, (uint64_t)&v191, 1);
  v55 = sub_20BDDC1C8(v54, (uint64_t)" failure ", 9);
  sub_20C0926BC(&v191);
  if ((v193 & 0x80u) == 0)
    v56 = &v191;
  else
    v56 = v191.__locale_;
  if ((v193 & 0x80u) == 0)
    v57 = v193;
  else
    v57 = v192;
  v58 = sub_20BDDC1C8(v55, (uint64_t)v56, v57);
  std::ios_base::getloc((const std::ios_base *)((char *)v58 + *(_QWORD *)(*v58 - 24)));
  v59 = std::locale::use_facet(&v194, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0)
    operator delete(v191.__locale_);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v60 = &v196[1];
  else
    v60 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v61 = v198;
  else
    v61 = v197;
  v62 = sub_20BDDC1C8(v18, (uint64_t)v60, v61);
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v62, (uint64_t)&v191, 1);
  v63 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v63, (uint64_t)&v191, 1);
  v64 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_20BDDC1C8(v64, (uint64_t)&v191, 1);
  v65 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  v66 = sub_20BDDC1C8(v65, (uint64_t)&v191, 1);
  v67 = sub_20BDDC1C8(v66, (uint64_t)" failure ", 9);
  sub_20C0910DC(&v191);
  if ((v193 & 0x80u) == 0)
    v68 = &v191;
  else
    v68 = v191.__locale_;
  if ((v193 & 0x80u) == 0)
    v69 = v193;
  else
    v69 = v192;
  v70 = sub_20BDDC1C8(v67, (uint64_t)v68, v69);
  std::ios_base::getloc((const std::ios_base *)((char *)v70 + *(_QWORD *)(*v70 - 24)));
  v71 = std::locale::use_facet(&v194, v19);
  ((void (*)(const std::locale::facet *, uint64_t))v71->__vftable[2].~facet_0)(v71, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0)
    operator delete(v191.__locale_);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  if (v47)
  {
    sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0)
      v72 = &v196[1];
    else
      v72 = (void **)v196[1];
    if ((v198 & 0x80u) == 0)
      v73 = v198;
    else
      v73 = v197;
    v74 = sub_20BDDC1C8(v18, (uint64_t)v72, v73);
    LOBYTE(v191.__locale_) = 58;
    sub_20BDDC1C8(v74, (uint64_t)&v191, 1);
    v75 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 58;
    sub_20BDDC1C8(v75, (uint64_t)&v191, 1);
    v76 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 40;
    sub_20BDDC1C8(v76, (uint64_t)&v191, 1);
    v77 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 41;
    v78 = sub_20BDDC1C8(v77, (uint64_t)&v191, 1);
    v79 = sub_20BDDC1C8(v78, (uint64_t)"  apply  ", 9);
    sub_20C090C84(&v191);
    if ((v193 & 0x80u) == 0)
      v80 = &v191;
    else
      v80 = v191.__locale_;
    if ((v193 & 0x80u) == 0)
      v81 = v193;
    else
      v81 = v192;
    v82 = sub_20BDDC1C8(v79, (uint64_t)v80, v81);
    std::ios_base::getloc((const std::ios_base *)((char *)v82 + *(_QWORD *)(*v82 - 24)));
    v83 = std::locale::use_facet(&v194, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v83->__vftable[2].~facet_0)(v83, 10);
    std::locale::~locale(&v194);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v193 < 0)
      operator delete(v191.__locale_);
    if ((char)v198 < 0)
      operator delete(v196[1]);
    sub_20C093DA0((char **)__p, a1, a2);
    sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0)
      v84 = &v196[1];
    else
      v84 = (void **)v196[1];
    if ((v198 & 0x80u) == 0)
      v85 = v198;
    else
      v85 = v197;
    v86 = sub_20BDDC1C8(v18, (uint64_t)v84, v85);
    LOBYTE(v191.__locale_) = 58;
    sub_20BDDC1C8(v86, (uint64_t)&v191, 1);
    v87 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 58;
    sub_20BDDC1C8(v87, (uint64_t)&v191, 1);
    v88 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 40;
    sub_20BDDC1C8(v88, (uint64_t)&v191, 1);
    v89 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v191.__locale_) = 41;
    v90 = sub_20BDDC1C8(v89, (uint64_t)&v191, 1);
    v91 = sub_20BDDC1C8(v90, (uint64_t)" success ", 9);
    sub_20C090C84(&v191);
    if ((v193 & 0x80u) == 0)
      v92 = &v191;
    else
      v92 = v191.__locale_;
    if ((v193 & 0x80u) == 0)
      v93 = v193;
    else
      v93 = v192;
    v94 = sub_20BDDC1C8(v91, (uint64_t)v92, v93);
    sub_20BDDC1C8(v94, (uint64_t)"; next ", 7);
    if ((char)v193 < 0)
      operator delete(v191.__locale_);
    if ((char)v198 < 0)
      operator delete(v196[1]);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v18 + *(_QWORD *)(*v18 - 24)));
    v95 = std::locale::use_facet(v195, v19);
    ((void (*)(const std::locale::facet *, uint64_t))v95->__vftable[2].~facet_0)(v95, 10);
    std::locale::~locale(v195);
    std::ostream::put();
    std::ostream::flush();
    goto LABEL_128;
  }
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v108 = &v196[1];
  else
    v108 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v109 = v198;
  else
    v109 = v197;
  v110 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v108, v109);
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v110, (uint64_t)&v191, 1);
  v111 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 58;
  sub_20BDDC1C8(v111, (uint64_t)&v191, 1);
  v112 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 40;
  sub_20BDDC1C8(v112, (uint64_t)&v191, 1);
  v113 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(v191.__locale_) = 41;
  v114 = sub_20BDDC1C8(v113, (uint64_t)&v191, 1);
  v115 = sub_20BDDC1C8(v114, (uint64_t)" failure ", 9);
  sub_20C090C84(&v191);
  if ((v193 & 0x80u) == 0)
    v116 = &v191;
  else
    v116 = v191.__locale_;
  if ((v193 & 0x80u) == 0)
    v117 = v193;
  else
    v117 = v192;
  v118 = sub_20BDDC1C8(v115, (uint64_t)v116, v117);
  std::ios_base::getloc((const std::ios_base *)((char *)v118 + *(_QWORD *)(*v118 - 24)));
  v119 = std::locale::use_facet(&v194, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v119->__vftable[2].~facet_0)(v119, 10);
  std::locale::~locale(&v194);
  std::ostream::put();
  std::ostream::flush();
  if ((char)v193 < 0)
    operator delete(v191.__locale_);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  v120 = v189;
  *v3 = *(_OWORD *)__p;
  v3[1] = v120;
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v121 = &v196[1];
  else
    v121 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v122 = v198;
  else
    v122 = v197;
  v123 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v121, v122);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v123, (uint64_t)__p, 1);
  v124 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v124, (uint64_t)__p, 1);
  v125 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v125, (uint64_t)__p, 1);
  v126 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v127 = sub_20BDDC1C8(v126, (uint64_t)__p, 1);
  v128 = sub_20BDDC1C8(v127, (uint64_t)" failure ", 9);
  sub_20C08FC08(__p);
  if ((SBYTE7(v189) & 0x80u) == 0)
    v129 = __p;
  else
    v129 = (void **)__p[0];
  if ((SBYTE7(v189) & 0x80u) == 0)
    v130 = BYTE7(v189);
  else
    v130 = (uint64_t)__p[1];
  v131 = sub_20BDDC1C8(v128, (uint64_t)v129, v130);
  std::ios_base::getloc((const std::ios_base *)((char *)v131 + *(_QWORD *)(*v131 - 24)));
  v132 = std::locale::use_facet(&v191, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v132->__vftable[2].~facet_0)(v132, 10);
  std::locale::~locale(&v191);
  std::ostream::put();
  std::ostream::flush();
  if (SBYTE7(v189) < 0)
    operator delete(__p[0]);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v133 = &v196[1];
  else
    v133 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v134 = v198;
  else
    v134 = v197;
  v135 = (_QWORD *)MEMORY[0x24BEDB310];
  v136 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v133, v134);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v136, (uint64_t)__p, 1);
  v137 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v137, (uint64_t)__p, 1);
  v138 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v138, (uint64_t)__p, 1);
  v139 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v140 = sub_20BDDC1C8(v139, (uint64_t)__p, 1);
  v141 = sub_20BDDC1C8(v140, (uint64_t)" success ", 9);
  sub_20C08FB80(__p);
  if ((SBYTE7(v189) & 0x80u) == 0)
    v142 = __p;
  else
    v142 = (void **)__p[0];
  if ((SBYTE7(v189) & 0x80u) == 0)
    v143 = BYTE7(v189);
  else
    v143 = (uint64_t)__p[1];
  v144 = sub_20BDDC1C8(v141, (uint64_t)v142, v143);
  sub_20BDDC1C8(v144, (uint64_t)"; next ", 7);
  if (SBYTE7(v189) < 0)
    operator delete(__p[0]);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v135 + *(_QWORD *)(*v135 - 24)));
  v145 = std::locale::use_facet(v195, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v145->__vftable[2].~facet_0)(v145, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v146 = &v196[1];
  else
    v146 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v147 = v198;
  else
    v147 = v197;
  v148 = (_QWORD *)MEMORY[0x24BEDB310];
  v149 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v146, v147);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v149, (uint64_t)__p, 1);
  v150 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v150, (uint64_t)__p, 1);
  v151 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v151, (uint64_t)__p, 1);
  v152 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v153 = sub_20BDDC1C8(v152, (uint64_t)__p, 1);
  v154 = sub_20BDDC1C8(v153, (uint64_t)"  start  ", 9);
  sub_20C093F0C(__p);
  if ((SBYTE7(v189) & 0x80u) == 0)
    v155 = __p;
  else
    v155 = (void **)__p[0];
  if ((SBYTE7(v189) & 0x80u) == 0)
    v156 = BYTE7(v189);
  else
    v156 = (uint64_t)__p[1];
  v157 = sub_20BDDC1C8(v154, (uint64_t)v155, v156);
  sub_20BDDC1C8(v157, (uint64_t)"; current ", 10);
  if (SBYTE7(v189) < 0)
    operator delete(__p[0]);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v148 + *(_QWORD *)(*v148 - 24)));
  v158 = std::locale::use_facet(v195, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v158->__vftable[2].~facet_0)(v158, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  std::ostream::flush();
  v159 = *(_BYTE **)(a1 + 8);
  if (*(_BYTE **)(a1 + 40) == v159 || *v159 != 34)
  {
    sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
    if ((v198 & 0x80u) == 0)
      v175 = &v196[1];
    else
      v175 = (void **)v196[1];
    if ((v198 & 0x80u) == 0)
      v176 = v198;
    else
      v176 = v197;
    v177 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v175, v176);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v177, (uint64_t)__p, 1);
    v178 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v178, (uint64_t)__p, 1);
    v179 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v179, (uint64_t)__p, 1);
    v180 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v181 = sub_20BDDC1C8(v180, (uint64_t)__p, 1);
    v182 = sub_20BDDC1C8(v181, (uint64_t)" failure ", 9);
    sub_20C093F0C(__p);
    if ((SBYTE7(v189) & 0x80u) == 0)
      v183 = __p;
    else
      v183 = (void **)__p[0];
    if ((SBYTE7(v189) & 0x80u) == 0)
      v184 = BYTE7(v189);
    else
      v184 = (uint64_t)__p[1];
    v185 = sub_20BDDC1C8(v182, (uint64_t)v183, v184);
    std::ios_base::getloc((const std::ios_base *)((char *)v185 + *(_QWORD *)(*v185 - 24)));
    v186 = std::locale::use_facet(&v191, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v186->__vftable[2].~facet_0)(v186, 10);
    std::locale::~locale(&v191);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v189) < 0)
      operator delete(__p[0]);
    if ((char)v198 < 0)
      operator delete(v196[1]);
    sub_20C093F94(a1);
  }
  v160 = *(_QWORD *)(a1 + 16) + 1;
  *(_QWORD *)(a1 + 8) = v159 + 1;
  *(_QWORD *)(a1 + 16) = v160;
  ++*(_QWORD *)(a1 + 32);
  sub_20C01AE64((uint64_t)v195, (uint64_t)v3, v4);
  if ((v198 & 0x80u) == 0)
    v161 = &v196[1];
  else
    v161 = (void **)v196[1];
  if ((v198 & 0x80u) == 0)
    v162 = v198;
  else
    v162 = v197;
  v163 = (_QWORD *)MEMORY[0x24BEDB310];
  v164 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v161, v162);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v164, (uint64_t)__p, 1);
  v165 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v165, (uint64_t)__p, 1);
  v166 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v166, (uint64_t)__p, 1);
  v167 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v168 = sub_20BDDC1C8(v167, (uint64_t)__p, 1);
  v169 = sub_20BDDC1C8(v168, (uint64_t)" success ", 9);
  sub_20C093F0C(__p);
  if ((SBYTE7(v189) & 0x80u) == 0)
    v170 = __p;
  else
    v170 = (void **)__p[0];
  if ((SBYTE7(v189) & 0x80u) == 0)
    v171 = BYTE7(v189);
  else
    v171 = (uint64_t)__p[1];
  v172 = sub_20BDDC1C8(v169, (uint64_t)v170, v171);
  sub_20BDDC1C8(v172, (uint64_t)"; next ", 7);
  if (SBYTE7(v189) < 0)
    operator delete(__p[0]);
  if ((char)v198 < 0)
    operator delete(v196[1]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v163 + *(_QWORD *)(*v163 - 24)));
  v173 = std::locale::use_facet(v195, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v173->__vftable[2].~facet_0)(v173, 10);
  std::locale::~locale(v195);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_20C08F9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, __int128 __p, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,std::locale a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,std::locale a27,std::locale a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  _OWORD *v36;

  std::locale::~locale(&a21);
  if (a17 < 0)
    operator delete((void *)__p);
  if (a36 < 0)
    operator delete(a31);
  *v36 = a11;
  v36[1] = a12;
  _Unwind_Resume(a1);
}

void sub_20C08FB80(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116QuotedStringBodyILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_116QuotedStringBodyILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08FBF4(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C08FC08(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableENS3_17QuotedStringCharsILc34EEEEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N3tao21PXR_INTERNAL_NS_pegtl3sorIJN32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableENS3_17QuotedStringCharsILc34EEEEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C08FC7C(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C08FC90(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  const std::locale::facet *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  const std::locale::facet *v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  const std::locale::facet *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  const std::locale::facet *v59;
  void *v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  void **v69;
  uint64_t v70;
  _QWORD *v71;
  const std::locale::facet *v72;
  void *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  void **v81;
  uint64_t v82;
  _QWORD *v83;
  const std::locale::facet *v84;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  void *v94;
  uint64_t v95;
  _QWORD *v96;
  const std::locale::facet *v97;
  __int128 v98;
  _OWORD v99[2];
  void *__p[2];
  __int128 v101;
  _OWORD *v102;
  void *v103;
  uint64_t v104;
  unsigned __int8 v105;
  std::locale v106;
  std::locale v107;
  void *v108;
  uint64_t v109;
  unsigned __int8 v110;

  v4 = (_OWORD *)(a1 + 8);
  v5 = (__int128 *)(a1 + 48);
  sub_20C01AE64((uint64_t)&v107, a1 + 8, (__int128 *)(a1 + 48));
  if ((v110 & 0x80u) == 0)
    v6 = &v108;
  else
    v6 = v108;
  if ((v110 & 0x80u) == 0)
    v7 = v110;
  else
    v7 = v109;
  v8 = (_QWORD *)MEMORY[0x24BEDB310];
  v9 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v6, v7);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v9, (uint64_t)__p, 1);
  v10 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v10, (uint64_t)__p, 1);
  v11 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v11, (uint64_t)__p, 1);
  v12 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v13 = sub_20BDDC1C8(v12, (uint64_t)__p, 1);
  v14 = sub_20BDDC1C8(v13, (uint64_t)"  start  ", 9);
  sub_20C090860(__p);
  if ((SBYTE7(v101) & 0x80u) == 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if ((SBYTE7(v101) & 0x80u) == 0)
    v16 = BYTE7(v101);
  else
    v16 = (uint64_t)__p[1];
  v17 = sub_20BDDC1C8(v14, (uint64_t)v15, v16);
  sub_20BDDC1C8(v17, (uint64_t)"; current ", 10);
  if (SBYTE7(v101) < 0)
    operator delete(__p[0]);
  if ((char)v110 < 0)
    operator delete(v108);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(_QWORD *)(*v8 - 24)));
  v18 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v18->__vftable[2].~facet_0)(v18, 10);
  std::locale::~locale(&v107);
  std::ostream::put();
  std::ostream::flush();
  v19 = sub_20C08D118((_QWORD *)a1);
  if ((_DWORD)v19)
  {
    v20 = v4[1];
    v99[0] = *v4;
    v99[1] = v20;
    v21 = v4[1];
    *(_OWORD *)__p = *v4;
    v101 = v21;
    v102 = v4;
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v22 = &v108;
    else
      v22 = v108;
    if ((v110 & 0x80u) == 0)
      v23 = v110;
    else
      v23 = v109;
    v24 = (_QWORD *)MEMORY[0x24BEDB310];
    v25 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v22, v23);
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v25, (uint64_t)&v103, 1);
    v26 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v26, (uint64_t)&v103, 1);
    v27 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_20BDDC1C8(v27, (uint64_t)&v103, 1);
    v28 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    v29 = sub_20BDDC1C8(v28, (uint64_t)&v103, 1);
    v30 = sub_20BDDC1C8(v29, (uint64_t)"  start  ", 9);
    sub_20C0908E8(&v103);
    if ((v105 & 0x80u) == 0)
      v31 = &v103;
    else
      v31 = v103;
    if ((v105 & 0x80u) == 0)
      v32 = v105;
    else
      v32 = v104;
    v33 = sub_20BDDC1C8(v30, (uint64_t)v31, v32);
    sub_20BDDC1C8(v33, (uint64_t)"; current ", 10);
    if ((char)v105 < 0)
      operator delete(v103);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(_QWORD *)(*v24 - 24)));
    v34 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v34->__vftable[2].~facet_0)(v34, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    if (!sub_20C08DD98((_QWORD *)a1))
    {
      sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
      if ((v110 & 0x80u) == 0)
        v86 = &v108;
      else
        v86 = v108;
      if ((v110 & 0x80u) == 0)
        v87 = v110;
      else
        v87 = v109;
      v88 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v86, v87);
      LOBYTE(v103) = 58;
      sub_20BDDC1C8(v88, (uint64_t)&v103, 1);
      v89 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v103) = 58;
      sub_20BDDC1C8(v89, (uint64_t)&v103, 1);
      v90 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v103) = 40;
      sub_20BDDC1C8(v90, (uint64_t)&v103, 1);
      v91 = (_QWORD *)std::ostream::operator<<();
      LOBYTE(v103) = 41;
      v92 = sub_20BDDC1C8(v91, (uint64_t)&v103, 1);
      v93 = sub_20BDDC1C8(v92, (uint64_t)" failure ", 9);
      sub_20C0908E8(&v103);
      if ((v105 & 0x80u) == 0)
        v94 = &v103;
      else
        v94 = v103;
      if ((v105 & 0x80u) == 0)
        v95 = v105;
      else
        v95 = v104;
      v96 = sub_20BDDC1C8(v93, (uint64_t)v94, v95);
      std::ios_base::getloc((const std::ios_base *)((char *)v96 + *(_QWORD *)(*v96 - 24)));
      v97 = std::locale::use_facet(&v106, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v97->__vftable[2].~facet_0)(v97, 10);
      std::locale::~locale(&v106);
      std::ostream::put();
      std::ostream::flush();
      if ((char)v105 < 0)
        operator delete(v103);
      if ((char)v110 < 0)
        operator delete(v108);
      v98 = v101;
      *v4 = *(_OWORD *)__p;
      v4[1] = v98;
      sub_20C090C34(a1);
    }
    while ((sub_20C08DDF4((_QWORD *)a1) & 1) != 0)
      ;
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v35 = &v108;
    else
      v35 = v108;
    if ((v110 & 0x80u) == 0)
      v36 = v110;
    else
      v36 = v109;
    v37 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v35, v36);
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v37, (uint64_t)&v103, 1);
    v38 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v38, (uint64_t)&v103, 1);
    v39 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_20BDDC1C8(v39, (uint64_t)&v103, 1);
    v40 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    v41 = sub_20BDDC1C8(v40, (uint64_t)&v103, 1);
    v42 = sub_20BDDC1C8(v41, (uint64_t)"  apply  ", 9);
    sub_20C0908E8(&v103);
    if ((v105 & 0x80u) == 0)
      v43 = &v103;
    else
      v43 = v103;
    if ((v105 & 0x80u) == 0)
      v44 = v105;
    else
      v44 = v104;
    v45 = sub_20BDDC1C8(v42, (uint64_t)v43, v44);
    std::ios_base::getloc((const std::ios_base *)((char *)v45 + *(_QWORD *)(*v45 - 24)));
    v46 = std::locale::use_facet(&v106, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v46->__vftable[2].~facet_0)(v46, 10);
    std::locale::~locale(&v106);
    std::ostream::put();
    std::ostream::flush();
    if ((char)v105 < 0)
      operator delete(v103);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C090970((char **)__p, a1, a2);
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v47 = &v108;
    else
      v47 = v108;
    if ((v110 & 0x80u) == 0)
      v48 = v110;
    else
      v48 = v109;
    v49 = (_QWORD *)MEMORY[0x24BEDB310];
    v50 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v47, v48);
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v50, (uint64_t)&v103, 1);
    v51 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 58;
    sub_20BDDC1C8(v51, (uint64_t)&v103, 1);
    v52 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 40;
    sub_20BDDC1C8(v52, (uint64_t)&v103, 1);
    v53 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(v103) = 41;
    v54 = sub_20BDDC1C8(v53, (uint64_t)&v103, 1);
    v55 = sub_20BDDC1C8(v54, (uint64_t)" success ", 9);
    sub_20C0908E8(&v103);
    if ((v105 & 0x80u) == 0)
      v56 = &v103;
    else
      v56 = v103;
    if ((v105 & 0x80u) == 0)
      v57 = v105;
    else
      v57 = v104;
    v58 = sub_20BDDC1C8(v55, (uint64_t)v56, v57);
    sub_20BDDC1C8(v58, (uint64_t)"; next ", 7);
    if ((char)v105 < 0)
      operator delete(v103);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v49 + *(_QWORD *)(*v49 - 24)));
    v59 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v59->__vftable[2].~facet_0)(v59, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
    sub_20C08D7D4(a1);
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v60 = &v108;
    else
      v60 = v108;
    if ((v110 & 0x80u) == 0)
      v61 = v110;
    else
      v61 = v109;
    v62 = (_QWORD *)MEMORY[0x24BEDB310];
    v63 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v60, v61);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v63, (uint64_t)__p, 1);
    v64 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v64, (uint64_t)__p, 1);
    v65 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v65, (uint64_t)__p, 1);
    v66 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v67 = sub_20BDDC1C8(v66, (uint64_t)__p, 1);
    v68 = sub_20BDDC1C8(v67, (uint64_t)" success ", 9);
    sub_20C090860(__p);
    if ((SBYTE7(v101) & 0x80u) == 0)
      v69 = __p;
    else
      v69 = (void **)__p[0];
    if ((SBYTE7(v101) & 0x80u) == 0)
      v70 = BYTE7(v101);
    else
      v70 = (uint64_t)__p[1];
    v71 = sub_20BDDC1C8(v68, (uint64_t)v69, v70);
    sub_20BDDC1C8(v71, (uint64_t)"; next ", 7);
    if (SBYTE7(v101) < 0)
      operator delete(__p[0]);
    if ((char)v110 < 0)
      operator delete(v108);
    sub_20C088CD8(a1);
    std::ios_base::getloc((const std::ios_base *)((char *)v62 + *(_QWORD *)(*v62 - 24)));
    v72 = std::locale::use_facet(&v107, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v72->__vftable[2].~facet_0)(v72, 10);
    std::locale::~locale(&v107);
    std::ostream::put();
    std::ostream::flush();
  }
  else
  {
    sub_20C01AE64((uint64_t)&v107, (uint64_t)v4, v5);
    if ((v110 & 0x80u) == 0)
      v73 = &v108;
    else
      v73 = v108;
    if ((v110 & 0x80u) == 0)
      v74 = v110;
    else
      v74 = v109;
    v75 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v73, v74);
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v75, (uint64_t)__p, 1);
    v76 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 58;
    sub_20BDDC1C8(v76, (uint64_t)__p, 1);
    v77 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 40;
    sub_20BDDC1C8(v77, (uint64_t)__p, 1);
    v78 = (_QWORD *)std::ostream::operator<<();
    LOBYTE(__p[0]) = 41;
    v79 = sub_20BDDC1C8(v78, (uint64_t)__p, 1);
    v80 = sub_20BDDC1C8(v79, (uint64_t)" failure ", 9);
    sub_20C090860(__p);
    if ((SBYTE7(v101) & 0x80u) == 0)
      v81 = __p;
    else
      v81 = (void **)__p[0];
    if ((SBYTE7(v101) & 0x80u) == 0)
      v82 = BYTE7(v101);
    else
      v82 = (uint64_t)__p[1];
    v83 = sub_20BDDC1C8(v80, (uint64_t)v81, v82);
    std::ios_base::getloc((const std::ios_base *)((char *)v83 + *(_QWORD *)(*v83 - 24)));
    v84 = std::locale::use_facet((const std::locale *)v99, MEMORY[0x24BEDB350]);
    ((void (*)(const std::locale::facet *, uint64_t))v84->__vftable[2].~facet_0)(v84, 10);
    std::locale::~locale((std::locale *)v99);
    std::ostream::put();
    std::ostream::flush();
    if (SBYTE7(v101) < 0)
      operator delete(__p[0]);
    if ((char)v110 < 0)
      operator delete(v108);
  }
  return v19;
}

void sub_20C09074C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,std::locale a21,std::locale a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  _OWORD *v30;

  std::locale::~locale(&a21);
  if (a20 < 0)
    operator delete(__p);
  if (a30 < 0)
    operator delete(a25);
  *v30 = a11;
  v30[1] = a12;
  *v30 = a9;
  v30[1] = a10;
  _Unwind_Resume(a1);
}

void sub_20C090860(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_120QuotedStringVariableE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C0908D4(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C0908E8(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_20QuotedStringVariableEEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_112VariableNameINS0_20QuotedStringVariableEEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C09095C(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

void sub_20C090970(char **a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  void *__p[2];
  uint64_t v21;
  char v22;
  _QWORD v23[5];

  v4 = *a1;
  v5 = (uint64_t *)sub_20C08E384(a3);
  sub_20BE93368(__p, v4, *(char **)(a2 + 8), *(_QWORD *)(a2 + 8) - (_QWORD)v4);
  v22 = 1;
  v6 = v5[2];
  v7 = v5[3];
  if (v6 >= v7)
  {
    v9 = v5[1];
    v10 = (uint64_t)(v6 - v9) >> 5;
    v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 59)
      sub_20BDDF694();
    v12 = v7 - v9;
    if (v12 >> 4 > v11)
      v11 = v12 >> 4;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0)
      v13 = 0x7FFFFFFFFFFFFFFLL;
    else
      v13 = v11;
    v23[4] = v5 + 3;
    v14 = (char *)sub_20BED2F10((uint64_t)(v5 + 3), v13);
    v15 = &v14[32 * v10];
    v23[0] = v14;
    v23[1] = v15;
    v23[3] = &v14[32 * v16];
    v17 = *(_OWORD *)__p;
    *((_QWORD *)v15 + 2) = v21;
    *(_OWORD *)v15 = v17;
    __p[1] = 0;
    v21 = 0;
    __p[0] = 0;
    v15[24] = v22;
    v23[2] = v15 + 32;
    sub_20C090AE0(v5 + 1, v23);
    v18 = v5[2];
    sub_20BED3064((uint64_t)v23);
    v19 = SHIBYTE(v21);
    v5[2] = v18;
    if (v19 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v8 = *(_OWORD *)__p;
    *(_QWORD *)(v6 + 16) = v21;
    *(_OWORD *)v6 = v8;
    *(_BYTE *)(v6 + 24) = v22;
    v5[2] = v6 + 32;
  }
}

void sub_20C090AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17)
{
  sub_20BED3064((uint64_t)&a17);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C090AE0(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C090B54((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C090B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v8 = a7;
    do
    {
      v9 = *(_OWORD *)(a3 - 32);
      *(_QWORD *)(v8 - 16) = *(_QWORD *)(a3 - 16);
      *(_OWORD *)(v8 - 32) = v9;
      *(_QWORD *)(a3 - 24) = 0;
      *(_QWORD *)(a3 - 16) = 0;
      *(_QWORD *)(a3 - 32) = 0;
      *(_BYTE *)(v8 - 8) = *(_BYTE *)(a3 - 8);
      v8 -= 32;
      v7 -= 32;
      a3 -= 32;
    }
    while (a3 != a5);
    *((_QWORD *)&v15 + 1) = v8;
    v10 = v15;
  }
  v13 = 1;
  sub_20C090C00((uint64_t)v12);
  return v10;
}

uint64_t sub_20C090C00(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20BED3020(a1);
  return a1;
}

void sub_20C090C34(uint64_t a1)
{
  std::string v2;

  sub_20BDDC0E4(&v2, "Variables must be a C identifier");
  sub_20C088F14(a1, &v2);
}

void sub_20C090C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C090C84(_QWORD *a1@<X8>)
{
  char *v2;
  char *v3;

  v2 = __cxa_demangle((const char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringCharsILc34EEE" & 0x7FFFFFFFFFFFFFFFLL), 0, 0, 0);
  if (v2)
  {
    v3 = v2;
    sub_20BDDC0E4(a1, v2);
    free(v3);
  }
  else
  {
    sub_20BDDC0E4(a1, (char *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__12_GLOBAL__N_117QuotedStringCharsILc34EEE" & 0x7FFFFFFFFFFFFFFFLL));
  }
}

void sub_20C090CF8(_Unwind_Exception *a1)
{
  void *v1;

  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C090D0C(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  void *__p[2];
  unsigned __int8 v17;
  std::locale v18;
  void *v19[2];
  unsigned __int8 v20;

  sub_20C01AE64((uint64_t)&v18, a1 + 8, (__int128 *)(a1 + 48));
  if ((v20 & 0x80u) == 0)
    v2 = v19;
  else
    v2 = (void **)v19[0];
  if ((v20 & 0x80u) == 0)
    v3 = v20;
  else
    v3 = (uint64_t)v19[1];
  v4 = (_QWORD *)MEMORY[0x24BEDB310];
  v5 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v5, (uint64_t)__p, 1);
  v6 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v6, (uint64_t)__p, 1);
  v7 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v7, (uint64_t)__p, 1);
  v8 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v9 = sub_20BDDC1C8(v8, (uint64_t)__p, 1);
  v10 = sub_20BDDC1C8(v9, (uint64_t)"  start  ", 9);
  sub_20C0910DC(__p);
  if ((v17 & 0x80u) == 0)
    v11 = __p;
  else
    v11 = (void **)__p[0];
  if ((v17 & 0x80u) == 0)
    v12 = v17;
  else
    v12 = (uint64_t)__p[1];
  v13 = sub_20BDDC1C8(v10, (uint64_t)v11, v12);
  sub_20BDDC1C8(v13, (uint64_t)"; current ", 10);
  if ((char)v17 < 0)
    operator delete(__p[0]);
  if ((char)v20 < 0)
    operator delete(v19[0]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(_QWORD *)(*v4 - 24)));
  v14 = std::locale::use_facet(&v18, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_20C090EAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::locale a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C090EF4(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  void *__p[2];
  unsigned __int8 v17;
  std::locale v18;
  void *v19[2];
  unsigned __int8 v20;

  sub_20C01AE64((uint64_t)&v18, a1 + 8, (__int128 *)(a1 + 48));
  if ((v20 & 0x80u) == 0)
    v2 = v19;
  else
    v2 = (void **)v19[0];
  if ((v20 & 0x80u) == 0)
    v3 = v20;
  else
    v3 = (uint64_t)v19[1];
  v4 = (_QWORD *)MEMORY[0x24BEDB310];
  v5 = sub_20BDDC1C8(MEMORY[0x24BEDB310], (uint64_t)v2, v3);
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v5, (uint64_t)__p, 1);
  v6 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 58;
  sub_20BDDC1C8(v6, (uint64_t)__p, 1);
  v7 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 40;
  sub_20BDDC1C8(v7, (uint64_t)__p, 1);
  v8 = (_QWORD *)std::ostream::operator<<();
  LOBYTE(__p[0]) = 41;
  v9 = sub_20BDDC1C8(v8, (uint64_t)__p, 1);
  v10 = sub_20BDDC1C8(v9, (uint64_t)" success ", 9);
  sub_20C0910DC(__p);
  if ((v17 & 0x80u) == 0)
    v11 = __p;
  else
    v11 = (void **)__p[0];
  if ((v17 & 0x80u) == 0)
    v12 = v17;
  else
    v12 = (uint64_t)__p[1];
  v13 = sub_20BDDC1C8(v10, (uint64_t)v11, v12);
  sub_20BDDC1C8(v13, (uint64_t)"; next ", 7);
  if ((char)v17 < 0)
    operator delete(__p[0]);
  if ((char)v20 < 0)
    operator delete(v19[0]);
  sub_20C088CD8(a1);
  std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(_QWORD *)(*v4 - 24)));
  v14 = std::locale::use_facet(&v18, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
  std::locale::~locale(&v18);
  std::ostream::put();
  return std::ostream::flush();
}

