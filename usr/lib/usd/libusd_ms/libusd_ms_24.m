uint64_t *sub_20C7FB554(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *result;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;

  v6 = 0;
  v19 = *a1;
  *a1 = 0;
  do
    v7 = sub_20BF1E6D8(a3, &a1[++v6], &v19);
  while ((v7 & 1) != 0);
  v8 = &a1[v6];
  if (v6 == 1)
  {
    do
    {
      if (v8 >= a2)
        break;
      --a2;
    }
    while ((sub_20BF1E6D8(a3, a2, &v19) & 1) == 0);
  }
  else
  {
    do
      --a2;
    while (!sub_20BF1E6D8(a3, a2, &v19));
  }
  if (v8 >= a2)
  {
    result = v8 - 1;
  }
  else
  {
    v9 = &a1[v6];
    v10 = a2;
    do
    {
      v11 = *v9;
      *v9 = *v10;
      *v10 = v11;
      do
        ++v9;
      while ((sub_20BF1E6D8(a3, v9, &v19) & 1) != 0);
      do
        --v10;
      while (!sub_20BF1E6D8(a3, v10, &v19));
    }
    while (v9 < v10);
    result = v9 - 1;
  }
  if (result != a1)
  {
    if ((*a1 & 7) != 0)
    {
      v13 = (unsigned int *)(*a1 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
    *a1 = *result;
    *result = 0;
  }
  if (&v19 == result)
  {
    if ((v19 & 7) != 0)
    {
      v17 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  else
  {
    if ((*result & 7) != 0)
    {
      v15 = (unsigned int *)(*result & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stlxr(v16 - 2, v15));
    }
    *result = v19;
  }
  return result;
}

void sub_20C7FB6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int *v10;
  unsigned int v11;

  if ((a10 & 7) != 0)
  {
    v10 = (unsigned int *)(a10 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  _Unwind_Resume(a1);
}

BOOL sub_20C7FB730(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  _BOOL8 result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  uint64_t *v14;
  unsigned int *v15;
  unsigned int v16;
  char v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;

  v6 = a2 - a1;
  result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v8 = a2 - 1;
      if (sub_20BF1E6D8(a3, a2 - 1, a1))
      {
        v9 = *a1;
        *a1 = *v8;
        *v8 = v9;
      }
      return 1;
    case 3:
      sub_20C03596C(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      sub_20C035FCC(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      sub_20C03607C(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      v10 = a1 + 2;
      sub_20C03596C(a1, a1 + 1, a1 + 2, a3);
      v11 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v12 = 0;
      break;
  }
  while (1)
  {
    if (sub_20BF1E6D8(a3, v11, v10))
    {
      v23 = *v11;
      *v11 = 0;
      v13 = v11;
      while (1)
      {
        v14 = v10;
        if (v10 != v13)
        {
          if ((*v13 & 7) != 0)
          {
            v15 = (unsigned int *)(*v13 & 0xFFFFFFFFFFFFFFF8);
            do
              v16 = __ldxr(v15);
            while (__stlxr(v16 - 2, v15));
          }
          *v13 = *v10;
          *v10 = 0;
        }
        if (v10 == a1)
          break;
        --v10;
        v17 = sub_20BF1E6D8(a3, &v23, v14 - 1);
        v13 = v14;
        if ((v17 & 1) == 0)
          goto LABEL_17;
      }
      v14 = a1;
LABEL_17:
      if (&v23 == v14)
      {
        v20 = v23;
      }
      else
      {
        if ((*v14 & 7) != 0)
        {
          v18 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
          do
            v19 = __ldxr(v18);
          while (__stlxr(v19 - 2, v18));
        }
        v20 = 0;
        *v14 = v23;
        v23 = 0;
      }
      if ((v20 & 7) != 0)
      {
        v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v22 = __ldxr(v21);
        while (__stlxr(v22 - 2, v21));
      }
      if (++v12 == 8)
        return v11 + 1 == a2;
    }
    v10 = v11++;
    if (v11 == a2)
      return 1;
  }
}

uint64_t *sub_20C7FB988(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;

  if (a1 != a2)
  {
    v6 = a2;
    v8 = (char *)a2 - (char *)a1;
    v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[v10];
      do
      {
        sub_20C7FBB34((uint64_t)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    v13 = v6;
    if (v6 != a3)
    {
      v14 = v6;
      do
      {
        if (sub_20BF1E6D8(a4, v14, a1))
        {
          v15 = *v14;
          *v14 = *a1;
          *a1 = v15;
          sub_20C7FBB34((uint64_t)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      v13 = a3;
    }
    if (v8 >= 9)
    {
      v16 = (unint64_t)v8 >> 3;
      do
      {
        v17 = *a1;
        *a1 = 0;
        v18 = sub_20C0364B0(a1, a4, v16);
        --v6;
        v19 = *v18;
        v20 = *v18 & 7;
        if (v18 == v6)
        {
          if (v20)
          {
            v23 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stlxr(v24 - 2, v23));
          }
          *v18 = v17;
        }
        else
        {
          if (v20)
          {
            v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
            do
              v22 = __ldxr(v21);
            while (__stlxr(v22 - 2, v21));
          }
          *v18 = *v6;
          *v6 = v17;
          sub_20C7FBD0C((uint64_t)a1, (uint64_t)(v18 + 1), a4, v18 + 1 - a1);
        }
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_20C7FBB34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;

  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v6 = result;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      v10 = ((uint64_t)a4 - result) >> 2;
      v11 = v10 + 1;
      v12 = (uint64_t *)(result + 8 * (v10 + 1));
      v13 = v10 + 2;
      if (v10 + 2 < a3 && sub_20BF1E6D8(a2, (uint64_t *)(result + 8 * (v10 + 1)), v12 + 1))
      {
        ++v12;
        v11 = v13;
      }
      result = sub_20BF1E6D8(a2, v12, v5);
      if ((result & 1) == 0)
      {
        v22 = *v5;
        *v5 = 0;
        do
        {
          v14 = v12;
          if (v12 != v5)
          {
            if ((*v5 & 7) != 0)
            {
              v15 = (unsigned int *)(*v5 & 0xFFFFFFFFFFFFFFF8);
              do
                v16 = __ldxr(v15);
              while (__stlxr(v16 - 2, v15));
            }
            *v5 = *v12;
            *v12 = 0;
          }
          if (v7 < v11)
            break;
          v17 = (2 * v11) | 1;
          v12 = (uint64_t *)(v6 + 8 * v17);
          v11 = 2 * v11 + 2;
          if (v11 >= a3)
          {
            v11 = v17;
          }
          else if (sub_20BF1E6D8(a2, (uint64_t *)(v6 + 8 * v17), v12 + 1))
          {
            ++v12;
          }
          else
          {
            v11 = v17;
          }
          result = sub_20BF1E6D8(a2, v12, &v22);
          v5 = v14;
        }
        while (!(_DWORD)result);
        if (&v22 == v14)
        {
          if ((v22 & 7) != 0)
          {
            v20 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
            do
              v21 = __ldxr(v20);
            while (__stlxr(v21 - 2, v20));
          }
        }
        else
        {
          if ((*v14 & 7) != 0)
          {
            v18 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
            do
              v19 = __ldxr(v18);
            while (__stlxr(v19 - 2, v18));
          }
          *v14 = v22;
        }
      }
    }
  }
  return result;
}

uint64_t sub_20C7FBD0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;

  v4 = a4 - 2;
  if (a4 >= 2)
  {
    v6 = result;
    v7 = v4 >> 1;
    v8 = (uint64_t *)(result + 8 * (v4 >> 1));
    v9 = (uint64_t *)(a2 - 8);
    result = sub_20BF1E6D8(a3, v8, (uint64_t *)(a2 - 8));
    if ((_DWORD)result)
    {
      v17 = *v9;
      *v9 = 0;
      do
      {
        v10 = v8;
        if (v8 != v9)
        {
          if ((*v9 & 7) != 0)
          {
            v11 = (unsigned int *)(*v9 & 0xFFFFFFFFFFFFFFF8);
            do
              v12 = __ldxr(v11);
            while (__stlxr(v12 - 2, v11));
          }
          *v9 = *v8;
          *v8 = 0;
        }
        if (!v7)
          break;
        v7 = (v7 - 1) >> 1;
        v8 = (uint64_t *)(v6 + 8 * v7);
        result = sub_20BF1E6D8(a3, v8, &v17);
        v9 = v10;
      }
      while ((result & 1) != 0);
      if (&v17 == v10)
      {
        if ((v17 & 7) != 0)
        {
          v15 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
          do
            v16 = __ldxr(v15);
          while (__stlxr(v16 - 2, v15));
        }
      }
      else
      {
        if ((*v10 & 7) != 0)
        {
          v13 = (unsigned int *)(*v10 & 0xFFFFFFFFFFFFFFF8);
          do
            v14 = __ldxr(v13);
          while (__stlxr(v14 - 2, v13));
        }
        *v10 = v17;
      }
    }
  }
  return result;
}

unint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceHash(uint64_t a1, float a2, float a3)
{
  _DWORD v4[2];
  uint64_t v5[2];
  uint64_t v6;
  char v7;

  *(float *)v4 = a2;
  *(float *)&v4[1] = a3;
  v5[0] = a1;
  v5[1] = (uint64_t)v4;
  v6 = 0;
  v7 = 0;
  sub_20C7FBEA8((pxrInternal__aapl__pxrReserved__::Tf_HashState *)&v6, v5);
  return bswap64(0x9E3779B97F4A7C55 * v6);
}

void sub_20C7FBEA8(pxrInternal__aapl__pxrReserved__::Tf_HashState *a1, uint64_t *a2)
{
  uint64_t v3;
  float *v4;
  float v5;
  char *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  _DWORD *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _DWORD *v14;
  int v15;
  float *v16;
  char *v17;
  float v18;
  float v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *p_shared_owners;
  unint64_t v23;
  uint64_t v24;
  uint64_t i;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  std::__shared_weak_count *v45;
  void ***p_p_p;
  std::__shared_weak_count *v47;
  void *__p;
  char *v49;
  unint64_t v50;
  void **p_p;
  std::__shared_weak_count *v52;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v4 = (float *)a2[1];
  sub_20C7FAA3C(*a2, &p_p_p);
  if (p_p_p)
  {
    v5 = *v4;
    if (*v4 == v4[1])
    {
      ((void (*)(void **__return_ptr, float))(*p_p_p)[2])(&__p, v5);
      sub_20BF4CF7C((uint64_t)a1, (pxrInternal__aapl__pxrReserved__::VtValue *)&__p);
      sub_20BF4C2D8((uint64_t)&__p);
    }
    else
    {
      __p = 0;
      v49 = 0;
      v50 = 0;
      ((void (*)(float))(*p_p_p)[3])(v5);
      v6 = (char *)__p;
      if (__p == v49)
      {
        if ((unint64_t)__p >= v50)
        {
          v8 = (uint64_t)(v50 - (_QWORD)__p) >> 1;
          if (v8 <= 1)
            v8 = 1;
          if (v50 - (unint64_t)__p >= 0x7FFFFFFFFFFFFFFCLL)
            v9 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v9 = v8;
          v10 = sub_20BDE1330((uint64_t)&v50, v9);
          v11 = (char *)__p;
          v12 = v49;
          v14 = &v10[v13];
          *v10 = *(_DWORD *)v4;
          v7 = (uint64_t *)(v10 + 1);
          while (v12 != v11)
          {
            v15 = *((_DWORD *)v12 - 1);
            v12 -= 4;
            *--v10 = v15;
          }
          __p = v10;
          v49 = (char *)v7;
          v50 = (unint64_t)v14;
          if (v11)
            operator delete(v11);
        }
        else
        {
          *(float *)__p = *v4;
          v7 = (uint64_t *)(v6 + 4);
        }
        v49 = (char *)v7;
      }
      pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"TSB", (char *)3);
      v16 = (float *)__p;
      v17 = v49;
      if (__p != v49)
      {
        do
        {
          v18 = *v16;
          pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"Time", (char *)4);
          if (v18 == 0.0)
            v19 = 0.0;
          else
            v19 = v18;
          v20 = LODWORD(v19);
          if (*((_BYTE *)a1 + 8))
            v20 = ((*(_QWORD *)a1
                  + LODWORD(v19)
                  + (*(_QWORD *)a1 + LODWORD(v19)) * (*(_QWORD *)a1 + (unint64_t)LODWORD(v19))) >> 1)
                + LODWORD(v19);
          else
            *((_BYTE *)a1 + 8) = 1;
          *(_QWORD *)a1 = v20;
          pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"Value", (char *)5);
          ((void (*)(void ***__return_ptr, float))(*p_p_p)[2])(&p_p, v18);
          sub_20BF4CF7C((uint64_t)a1, (pxrInternal__aapl__pxrReserved__::VtValue *)&p_p);
          sub_20BF4C2D8((uint64_t)&p_p);
          ++v16;
        }
        while (v16 != (float *)v17);
      }
      pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"TSE", (char *)3);
      if (__p)
      {
        v49 = (char *)__p;
        operator delete(__p);
      }
    }
  }
  v21 = v47;
  if (v47)
  {
    p_shared_owners = (unint64_t *)&v47->__shared_owners_;
    do
      v23 = __ldaxr(p_shared_owners);
    while (__stlxr(v23 - 1, p_shared_owners));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  sub_20C7FA9D0(v3, &p_p_p);
  if (p_p_p)
  {
    v24 = ((uint64_t (*)(void ***))(*p_p_p)[2])(p_p_p);
    pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"VB", (char *)2);
    if (v24)
    {
      for (i = 0; i != v24; ++i)
      {
        pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"Element", (char *)7);
        ((void (*)(void **__return_ptr, void ***, uint64_t))(*p_p_p)[3])(&__p, p_p_p, i);
        if (__p)
        {
          p_p = &__p;
          v52 = (std::__shared_weak_count *)v4;
          sub_20C7FBEA8(a1, &p_p);
        }
        v26 = (std::__shared_weak_count *)v49;
        if (v49)
        {
          v27 = (unint64_t *)(v49 + 8);
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 - 1, v27));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
      }
    }
    pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"VE", (char *)2);
  }
  v29 = v47;
  if (v47)
  {
    v30 = (unint64_t *)&v47->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  sub_20C7E0B14(v3, &v44);
  if (v44)
  {
    (*(void (**)(void **__return_ptr))(*(_QWORD *)v44 + 16))(&__p);
    v32 = 126 - 2 * __clz((v49 - (_BYTE *)__p) >> 3);
    if (v49 == __p)
      v33 = 0;
    else
      v33 = v32;
    sub_20C0353A4((uint64_t)__p, (uint64_t *)v49, (uint64_t)&p_p_p, v33, 1);
    v34 = sub_20C3A217C(__p, v49);
    sub_20C117D14((uint64_t)&__p, v34, v49);
    pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"CB", (char *)2);
    v35 = (char *)__p;
    v36 = v49;
    if (__p != v49)
    {
      do
      {
        (*(void (**)(void ***__return_ptr, uint64_t, char *))(*(_QWORD *)v44 + 24))(&p_p, v44, v35);
        if (p_p)
        {
          pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"Key", (char *)3);
          v37 = *(_QWORD *)v35 & 0xFFFFFFFFFFFFFFF8;
          if (*((_BYTE *)a1 + 8))
            v37 += (*(_QWORD *)a1 + v37 + (*(_QWORD *)a1 + v37) * (*(_QWORD *)a1 + v37)) >> 1;
          else
            *((_BYTE *)a1 + 8) = 1;
          *(_QWORD *)a1 = v37;
          pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"Value", (char *)5);
          p_p_p = &p_p;
          v47 = (std::__shared_weak_count *)v4;
          sub_20C7FBEA8(a1, &p_p_p);
        }
        v38 = v52;
        if (v52)
        {
          v39 = (unint64_t *)&v52->__shared_owners_;
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v35 += 8;
      }
      while (v35 != v36);
    }
    pxrInternal__aapl__pxrReserved__::Tf_HashState::_AppendBytes(a1, (pxrInternal__aapl__pxrReserved__ *)"CE", (char *)2);
    p_p = &__p;
    sub_20BEEB2B8(&p_p);
  }
  v41 = v45;
  if (v45)
  {
    v42 = (unint64_t *)&v45->__shared_owners_;
    do
      v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
}

void sub_20C7FC414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (__p)
  {
    a14 = (uint64_t)__p;
    operator delete(__p);
  }
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType::~HdLegacyPrimTypeTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType::HdLegacyPrimTypeTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "openvdbAsset", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "field3dAsset", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType *)this;
}

void sub_20C7FC6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

BOOL pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeIsVolumeField(pxrInternal__aapl__pxrReserved__ *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  unsigned int **v3;
  unsigned int **v4;

  v3 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens);
  if (!v3)
    v3 = sub_20C809260(&pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)*v3 & 0xFFFFFFFFFFFFFFF8))
    return 1;
  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens);
  if (!v4)
    v4 = sub_20C809260(&pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens);
  return (*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v4[1] & 0xFFFFFFFFFFFFFFF8);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationCallbackDataSource::Invoke(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 368))(*(_QWORD *)(a1 + 16), a1 + 8, a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::HdDataSourceLegacyPrim(uint64_t a1, _DWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  _QWORD v12[4];
  char v13;

  *(_QWORD *)a1 = off_24C54C5D8;
  sub_20BFD6E54((_DWORD *)(a1 + 8), a2);
  sub_20BFD6EA4((_DWORD *)(a1 + 12), a2 + 1);
  v8 = *a3;
  *(_QWORD *)(a1 + 16) = *a3;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(a1 + 16) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 24) = a4;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 33) &= ~1u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  if (!a4)
  {
    v12[0] = "hd/dataSourceLegacyPrim.cpp";
    v12[1] = "HdDataSourceLegacyPrim";
    v12[2] = 2496;
    v12[3] = "pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::HdDataSourceLegacyPrim(SdfPath, TfToken, HdSceneDelegate *)";
    v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v12, "_sceneDelegate", 0);
  }
  return a1;
}

void sub_20C7FC934(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v3;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v4;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v5;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v5);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v4);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v3);
  v7 = *((_QWORD *)v1 + 2);
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  sub_20BFD1A18(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::PrimDirtied(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  _BOOL8 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(this);
  v5 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersects(a2, DefaultLocator);
  if (v5)
  {
    atomic_store(0, (unsigned __int8 *)this + 32);
    *((_BYTE *)this + 33) &= ~1u;
    v13 = 0;
    v14 = 0;
    sub_20C7FCAAC((uint64_t *)this + 5, &v13);
    sub_20BDEBF08((_QWORD *)this + 7);
    v6 = v14;
    if (v14)
    {
      p_shared_owners = (unint64_t *)&v14->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  v9 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *)v5);
  if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersects(a2, v9))
  {
    v13 = 0;
    v14 = 0;
    sub_20C7FCAAC((uint64_t *)this + 9, &v13);
    v10 = v14;
    if (v14)
    {
      v11 = (unint64_t *)&v14->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
  }
}

void sub_20C7FCA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C7FCAAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  v2 = a2[1];
  v8 = *a2;
  v9 = (std::__shared_weak_count *)v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  sub_20C8068DC(a1, &v8);
  v5 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_20C7FCB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::GetCachedLocators(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *v3;
  void *DefaultLocator;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *v5;
  void *v6;
  uint64_t i;
  _QWORD v8[2];
  _DWORD v9[14];
  _DWORD v10[14];
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v1 = atomic_load((unsigned __int8 *)&qword_25498DCD0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)__cxa_guard_acquire(&qword_25498DCD0);
    if ((_DWORD)v3)
    {
      DefaultLocator = pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(v3);
      v5 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *)sub_20C7F1078(v9, (uint64_t)DefaultLocator);
      v6 = pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator(v5);
      sub_20C7F1078(v10, (uint64_t)v6);
      v8[0] = v9;
      v8[1] = 2;
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::HdDataSourceLocatorSet(&unk_25498DB08, v8);
      for (i = 14; i != -14; i -= 14)
        sub_20C7E0EB0((uint64_t)&v9[i]);
      __cxa_atexit((void (*)(void *))sub_20C7FCC8C, &unk_25498DB08, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DCD0);
    }
  }
  return &unk_25498DB08;
}

void sub_20C7FCC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t i;

  for (i = 56; i != -56; i -= 56)
    sub_20C7E0EB0((uint64_t)(&a12 + i));
  __cxa_guard_abort(&qword_25498DCD0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_IsLight(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v6;
  char v8;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x24BDAC8D0];
  if (pxrInternal__aapl__pxrReserved__::HdPrimTypeIsLight((pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)((char *)this + 16), a2))
  {
    return 1;
  }
  v4 = *((_QWORD *)this + 3);
  v5 = (char *)this + 8;
  v6 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v6)
    v6 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, char *, uint64_t))(*(_QWORD *)v4 + 288))(v9, v4, v5, (uint64_t)v6 + 664);
  v8 = 0;
  v3 = sub_20C04B3B0((pxrInternal__aapl__pxrReserved__::VtValue *)v9, (pxrInternal__aapl__pxrReserved__::VtValue *)&v8);
  sub_20BF4C2D8((uint64_t)v9);
  return v3;
}

void sub_20C7FCD58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_IsInstanceable(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  _QWORD *v3;
  const pxrInternal__aapl__pxrReserved__::TfToken *v4;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v6;

  v3 = (_QWORD *)((char *)this + 16);
  if (pxrInternal__aapl__pxrReserved__::HdPrimTypeIsGprim((pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)((char *)this + 16), a2)|| (pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_IsLight(this, v4) & 1) != 0)
  {
    return 1;
  }
  v6 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v6)
    v6 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  return (*v3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 18) & 0xFFFFFFFFFFFFFFF8);
}

char *pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::GetNames@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  char *v11;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  char *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  char *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  char *v31;
  uint64_t *SchemaToken;
  uint64_t *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  char *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  char *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  char *v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int *v53;
  unsigned int v54;
  char *v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  unsigned int *v59;
  unsigned int v60;
  char *v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  unsigned int *v65;
  unsigned int v66;
  char *v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70;
  unsigned int *v71;
  unsigned int v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  unsigned int *v76;
  unsigned int v77;
  char *v78;
  uint64_t *v79;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  unsigned int *v84;
  unsigned int v85;
  char *v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  char *v92;
  uint64_t *v93;
  uint64_t v94;
  unsigned int *v95;
  unsigned int v96;
  char *v97;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v98;
  uint64_t *v99;
  uint64_t v100;
  unsigned int *v101;
  unsigned int v102;
  char *v103;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  unsigned int *v108;
  unsigned int v109;
  char *v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  unsigned int *v114;
  unsigned int v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  unsigned int *v119;
  unsigned int v120;
  char *v121;
  uint64_t *v122;
  uint64_t *v123;
  uint64_t v124;
  unsigned int *v125;
  unsigned int v126;
  char *v127;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v128;
  uint64_t *v129;
  uint64_t *v130;
  uint64_t v131;
  unsigned int *v132;
  unsigned int v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  unsigned int *v137;
  unsigned int v138;
  char *v139;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v140;
  uint64_t *v141;
  uint64_t v142;
  unsigned int *v143;
  unsigned int v144;
  char *v145;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v146;
  uint64_t *v147;
  uint64_t v148;
  unsigned int *v149;
  unsigned int v150;
  char *v151;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v152;
  uint64_t *v153;
  uint64_t v154;
  unsigned int *v155;
  unsigned int v156;
  char *v157;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v158;
  uint64_t *v159;
  uint64_t v160;
  unsigned int *v161;
  unsigned int v162;
  char *v163;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v164;
  uint64_t *v165;
  uint64_t v166;
  unsigned int *v167;
  unsigned int v168;
  char *v169;
  uint64_t *v170;
  uint64_t *v171;
  uint64_t v172;
  unsigned int *v173;
  unsigned int v174;
  char *v175;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v176;
  uint64_t *v177;
  uint64_t *v178;
  uint64_t v179;
  unsigned int *v180;
  unsigned int v181;
  char *v182;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v183;
  uint64_t *v184;
  uint64_t *v185;
  uint64_t v186;
  unsigned int *v187;
  unsigned int v188;
  char *v189;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v190;
  uint64_t *v191;
  uint64_t *v192;
  uint64_t v193;
  unsigned int *v194;
  unsigned int v195;
  char *v196;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v197;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v198;
  uint64_t *v199;
  uint64_t *v200;
  uint64_t v201;
  unsigned int *v202;
  unsigned int v203;
  char *v204;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v205;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v206;
  uint64_t *v207;
  uint64_t *v208;
  uint64_t v209;
  unsigned int *v210;
  unsigned int v211;
  char *v212;
  uint64_t *v213;
  uint64_t *v214;
  uint64_t v215;
  unsigned int *v216;
  unsigned int v217;
  char *result;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v4 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v4)
    v4 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  v5 = (_QWORD *)((char *)this + 16);
  if ((*((_QWORD *)this + 2) & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v4 + 6) & 0xFFFFFFFFFFFFFFF8))
  {
    v6 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
    if (!v6)
      v6 = (uint64_t *)sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
    v7 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v7 >= *(_QWORD *)(a2 + 16))
    {
      v11 = sub_20BFCA068((char **)a2, v6);
    }
    else
    {
      v8 = *v6;
      *v7 = *v6;
      if ((v8 & 7) != 0)
      {
        v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 2, v9));
        if ((v10 & 1) == 0)
          *v7 &= 0xFFFFFFFFFFFFFFF8;
      }
      v11 = (char *)(v7 + 1);
    }
    *(_QWORD *)(a2 + 8) = v11;
  }
  v12 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v12)
    v12 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v12 + 8) & 0xFFFFFFFFFFFFFFF8))
  {
    v13 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
    if (!v13)
      v13 = (uint64_t *)sub_20C7E0F30(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
    v14 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v14 >= *(_QWORD *)(a2 + 16))
    {
      v18 = sub_20BFCA068((char **)a2, v13);
    }
    else
    {
      v15 = *v13;
      *v14 = *v13;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 2, v16));
        if ((v17 & 1) == 0)
          *v14 &= 0xFFFFFFFFFFFFFFF8;
      }
      v18 = (char *)(v14 + 1);
    }
    *(_QWORD *)(a2 + 8) = v18;
  }
  v19 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens);
  if (!v19)
    v19 = (uint64_t *)sub_20C80A088(&pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens);
  v20 = *(uint64_t **)(a2 + 8);
  if ((unint64_t)v20 >= *(_QWORD *)(a2 + 16))
  {
    v24 = sub_20BFCA068((char **)a2, v19);
  }
  else
  {
    v21 = *v19;
    *v20 = *v19;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 2, v22));
      if ((v23 & 1) == 0)
        *v20 &= 0xFFFFFFFFFFFFFFF8;
    }
    v24 = (char *)(v20 + 1);
  }
  *(_QWORD *)(a2 + 8) = v24;
  if (pxrInternal__aapl__pxrReserved__::HdPrimTypeIsGprim((pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)((char *)this + 16), (const pxrInternal__aapl__pxrReserved__::TfToken *)v19))
  {
    v26 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
    if (!v26)
      v26 = (uint64_t *)sub_20C80A110(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
    v27 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v27 >= *(_QWORD *)(a2 + 16))
    {
      v31 = sub_20BFCA068((char **)a2, v26);
    }
    else
    {
      v28 = *v26;
      *v27 = *v26;
      if ((v28 & 7) != 0)
      {
        v29 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 2, v29));
        if ((v30 & 1) == 0)
          *v27 &= 0xFFFFFFFFFFFFFFF8;
      }
      v31 = (char *)(v27 + 1);
    }
    *(_QWORD *)(a2 + 8) = v31;
    SchemaToken = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::GetSchemaToken((pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema *)v31);
    v33 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v33 >= *(_QWORD *)(a2 + 16))
    {
      v37 = sub_20BFCA068((char **)a2, SchemaToken);
    }
    else
    {
      v34 = *SchemaToken;
      *v33 = *SchemaToken;
      if ((v34 & 7) != 0)
      {
        v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 2, v35));
        if ((v36 & 1) == 0)
          *v33 &= 0xFFFFFFFFFFFFFFF8;
      }
      v37 = (char *)(v33 + 1);
    }
    *(_QWORD *)(a2 + 8) = v37;
    v38 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v38)
      v38 = (uint64_t *)sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    v39 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v39 >= *(_QWORD *)(a2 + 16))
    {
      v43 = sub_20BFCA068((char **)a2, v38);
    }
    else
    {
      v40 = *v38;
      *v39 = *v38;
      if ((v40 & 7) != 0)
      {
        v41 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
        do
          v42 = __ldxr(v41);
        while (__stxr(v42 + 2, v41));
        if ((v42 & 1) == 0)
          *v39 &= 0xFFFFFFFFFFFFFFF8;
      }
      v43 = (char *)(v39 + 1);
    }
    *(_QWORD *)(a2 + 8) = v43;
    v44 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchemaTokens);
    if (!v44)
      v44 = (uint64_t *)sub_20C7F83E8(&pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchemaTokens);
    v45 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v45 >= *(_QWORD *)(a2 + 16))
    {
      v49 = sub_20BFCA068((char **)a2, v44);
    }
    else
    {
      v46 = *v44;
      *v45 = *v44;
      if ((v46 & 7) != 0)
      {
        v47 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 2, v47));
        if ((v48 & 1) == 0)
          *v45 &= 0xFFFFFFFFFFFFFFF8;
      }
      v49 = (char *)(v45 + 1);
    }
    *(_QWORD *)(a2 + 8) = v49;
    v50 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens);
    if (!v50)
      v50 = (uint64_t *)sub_20C80A198(&pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens);
    v51 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v51 >= *(_QWORD *)(a2 + 16))
    {
      v55 = sub_20BFCA068((char **)a2, v50);
    }
    else
    {
      v52 = *v50;
      *v51 = *v50;
      if ((v52 & 7) != 0)
      {
        v53 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
        do
          v54 = __ldxr(v53);
        while (__stxr(v54 + 2, v53));
        if ((v54 & 1) == 0)
          *v51 &= 0xFFFFFFFFFFFFFFF8;
      }
      v55 = (char *)(v51 + 1);
    }
    *(_QWORD *)(a2 + 8) = v55;
    v56 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
    if (!v56)
      v56 = (uint64_t *)sub_20C809654(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
    v57 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v57 >= *(_QWORD *)(a2 + 16))
    {
      v61 = sub_20BFCA068((char **)a2, v56);
    }
    else
    {
      v58 = *v56;
      *v57 = *v56;
      if ((v58 & 7) != 0)
      {
        v59 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
        do
          v60 = __ldxr(v59);
        while (__stxr(v60 + 2, v59));
        if ((v60 & 1) == 0)
          *v57 &= 0xFFFFFFFFFFFFFFF8;
      }
      v61 = (char *)(v57 + 1);
    }
    *(_QWORD *)(a2 + 8) = v61;
    v62 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCategoriesSchemaTokens);
    if (!v62)
      v62 = (uint64_t *)sub_20C7ED0E8(&pxrInternal__aapl__pxrReserved__::HdCategoriesSchemaTokens);
    v63 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v63 >= *(_QWORD *)(a2 + 16))
    {
      v67 = sub_20BFCA068((char **)a2, v62);
    }
    else
    {
      v64 = *v62;
      *v63 = *v62;
      if ((v64 & 7) != 0)
      {
        v65 = (unsigned int *)(v64 & 0xFFFFFFFFFFFFFFF8);
        do
          v66 = __ldxr(v65);
        while (__stxr(v66 + 2, v65));
        if ((v66 & 1) == 0)
          *v63 &= 0xFFFFFFFFFFFFFFF8;
      }
      v67 = (char *)(v63 + 1);
    }
    *(_QWORD *)(a2 + 8) = v67;
    v68 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    if (!v68)
      v68 = (uint64_t *)sub_20C80A220(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    v69 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v69 >= *(_QWORD *)(a2 + 16))
    {
      v73 = sub_20BFCA068((char **)a2, v68);
    }
    else
    {
      v70 = *v68;
      *v69 = *v68;
      if ((v70 & 7) != 0)
      {
        v71 = (unsigned int *)(v70 & 0xFFFFFFFFFFFFFFF8);
        do
          v72 = __ldxr(v71);
        while (__stxr(v72 + 2, v71));
        if ((v72 & 1) == 0)
          *v69 &= 0xFFFFFFFFFFFFFFF8;
      }
      v73 = (char *)(v69 + 1);
    }
    *(_QWORD *)(a2 + 8) = v73;
    v25 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    if (!v25)
      v25 = (uint64_t *)sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    v74 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v74 >= *(_QWORD *)(a2 + 16))
    {
      v78 = sub_20BFCA068((char **)a2, v25);
    }
    else
    {
      v75 = *v25;
      *v74 = *v25;
      if ((v75 & 7) != 0)
      {
        v76 = (unsigned int *)(v75 & 0xFFFFFFFFFFFFFFF8);
        do
          v77 = __ldxr(v76);
        while (__stxr(v77 + 2, v76));
        if ((v77 & 1) == 0)
          *v74 &= 0xFFFFFFFFFFFFFFF8;
      }
      v78 = (char *)(v74 + 1);
    }
    *(_QWORD *)(a2 + 8) = v78;
  }
  if ((pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_IsLight(this, (const pxrInternal__aapl__pxrReserved__::TfToken *)v25) & 1) != 0)goto LABEL_133;
  v80 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v80)
    v80 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v80 + 30) & 0xFFFFFFFFFFFFFFF8))
  {
LABEL_133:
    v81 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
    if (!v81)
      v81 = (uint64_t *)sub_20C80A330(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
    v82 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v82 >= *(_QWORD *)(a2 + 16))
    {
      v86 = sub_20BFCA068((char **)a2, v81);
    }
    else
    {
      v83 = *v81;
      *v82 = *v81;
      if ((v83 & 7) != 0)
      {
        v84 = (unsigned int *)(v83 & 0xFFFFFFFFFFFFFFF8);
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 2, v84));
        if ((v85 & 1) == 0)
          *v82 &= 0xFFFFFFFFFFFFFFF8;
      }
      v86 = (char *)(v82 + 1);
    }
    *(_QWORD *)(a2 + 8) = v86;
    v87 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    if (!v87)
      v87 = (uint64_t *)sub_20C80A220(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    v88 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v88 >= *(_QWORD *)(a2 + 16))
    {
      v92 = sub_20BFCA068((char **)a2, v87);
    }
    else
    {
      v89 = *v87;
      *v88 = *v87;
      if ((v89 & 7) != 0)
      {
        v90 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
        do
          v91 = __ldxr(v90);
        while (__stxr(v91 + 2, v90));
        if ((v91 & 1) == 0)
          *v88 &= 0xFFFFFFFFFFFFFFF8;
      }
      v92 = (char *)(v88 + 1);
    }
    *(_QWORD *)(a2 + 8) = v92;
    v79 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens);
    if (!v79)
      v79 = (uint64_t *)sub_20C80A3B8(&pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens);
    v93 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v93 >= *(_QWORD *)(a2 + 16))
    {
      v97 = sub_20BFCA068((char **)a2, v79);
    }
    else
    {
      v94 = *v79;
      *v93 = *v79;
      if ((v94 & 7) != 0)
      {
        v95 = (unsigned int *)(v94 & 0xFFFFFFFFFFFFFFF8);
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 2, v95));
        if ((v96 & 1) == 0)
          *v93 &= 0xFFFFFFFFFFFFFFF8;
      }
      v97 = (char *)(v93 + 1);
    }
    *(_QWORD *)(a2 + 8) = v97;
  }
  v98 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v98)
    v98 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v98 + 16) & 0xFFFFFFFFFFFFFFF8))
  {
    v79 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
    if (!v79)
      v79 = (uint64_t *)sub_20C80A330(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
    v99 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v99 >= *(_QWORD *)(a2 + 16))
    {
      v103 = sub_20BFCA068((char **)a2, v79);
    }
    else
    {
      v100 = *v79;
      *v99 = *v79;
      if ((v100 & 7) != 0)
      {
        v101 = (unsigned int *)(v100 & 0xFFFFFFFFFFFFFFF8);
        do
          v102 = __ldxr(v101);
        while (__stxr(v102 + 2, v101));
        if ((v102 & 1) == 0)
          *v99 &= 0xFFFFFFFFFFFFFFF8;
      }
      v103 = (char *)(v99 + 1);
    }
    *(_QWORD *)(a2 + 8) = v103;
  }
  v104 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v104)
    v104 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v104 + 18) & 0xFFFFFFFFFFFFFFF8))
  {
    v105 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    if (!v105)
      v105 = (uint64_t *)sub_20C80A220(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    v106 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v106 >= *(_QWORD *)(a2 + 16))
    {
      v110 = sub_20BFCA068((char **)a2, v105);
    }
    else
    {
      v107 = *v105;
      *v106 = *v105;
      if ((v107 & 7) != 0)
      {
        v108 = (unsigned int *)(v107 & 0xFFFFFFFFFFFFFFF8);
        do
          v109 = __ldxr(v108);
        while (__stxr(v109 + 2, v108));
        if ((v109 & 1) == 0)
          *v106 &= 0xFFFFFFFFFFFFFFF8;
      }
      v110 = (char *)(v106 + 1);
    }
    *(_QWORD *)(a2 + 8) = v110;
    v111 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v111)
      v111 = (uint64_t *)sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    v112 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v112 >= *(_QWORD *)(a2 + 16))
    {
      v116 = sub_20BFCA068((char **)a2, v111);
    }
    else
    {
      v113 = *v111;
      *v112 = *v111;
      if ((v113 & 7) != 0)
      {
        v114 = (unsigned int *)(v113 & 0xFFFFFFFFFFFFFFF8);
        do
          v115 = __ldxr(v114);
        while (__stxr(v115 + 2, v114));
        if ((v115 & 1) == 0)
          *v112 &= 0xFFFFFFFFFFFFFFF8;
      }
      v116 = (char *)(v112 + 1);
    }
    *(_QWORD *)(a2 + 8) = v116;
    v79 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    if (!v79)
      v79 = (uint64_t *)sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    v117 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v117 >= *(_QWORD *)(a2 + 16))
    {
      v121 = sub_20BFCA068((char **)a2, v79);
    }
    else
    {
      v118 = *v79;
      *v117 = *v79;
      if ((v118 & 7) != 0)
      {
        v119 = (unsigned int *)(v118 & 0xFFFFFFFFFFFFFFF8);
        do
          v120 = __ldxr(v119);
        while (__stxr(v120 + 2, v119));
        if ((v120 & 1) == 0)
          *v117 &= 0xFFFFFFFFFFFFFFF8;
      }
      v121 = (char *)(v117 + 1);
    }
    *(_QWORD *)(a2 + 8) = v121;
  }
  if (pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_IsInstanceable(this, (const pxrInternal__aapl__pxrReserved__::TfToken *)v79))
  {
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    v123 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v123 >= *(_QWORD *)(a2 + 16))
    {
      v127 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v124 = *v122;
      *v123 = *v122;
      if ((v124 & 7) != 0)
      {
        v125 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v126 = __ldxr(v125);
        while (__stxr(v126 + 2, v125));
        if ((v126 & 1) == 0)
          *v123 &= 0xFFFFFFFFFFFFFFF8;
      }
      v127 = (char *)(v123 + 1);
    }
    *(_QWORD *)(a2 + 8) = v127;
  }
  v128 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v128)
    v128 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v128 + 14) & 0xFFFFFFFFFFFFFFF8))
  {
    v129 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
    if (!v129)
      v129 = (uint64_t *)sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
    v130 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v130 >= *(_QWORD *)(a2 + 16))
    {
      v134 = sub_20BFCA068((char **)a2, v129);
    }
    else
    {
      v131 = *v129;
      *v130 = *v129;
      if ((v131 & 7) != 0)
      {
        v132 = (unsigned int *)(v131 & 0xFFFFFFFFFFFFFFF8);
        do
          v133 = __ldxr(v132);
        while (__stxr(v133 + 2, v132));
        if ((v133 & 1) == 0)
          *v130 &= 0xFFFFFFFFFFFFFFF8;
      }
      v134 = (char *)(v130 + 1);
    }
    *(_QWORD *)(a2 + 8) = v134;
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C80A220(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    v135 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v135 >= *(_QWORD *)(a2 + 16))
    {
      v139 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v136 = *v122;
      *v135 = *v122;
      if ((v136 & 7) != 0)
      {
        v137 = (unsigned int *)(v136 & 0xFFFFFFFFFFFFFFF8);
        do
          v138 = __ldxr(v137);
        while (__stxr(v138 + 2, v137));
        if ((v138 & 1) == 0)
          *v135 &= 0xFFFFFFFFFFFFFFF8;
      }
      v139 = (char *)(v135 + 1);
    }
    *(_QWORD *)(a2 + 8) = v139;
  }
  v140 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v140)
    v140 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v140 + 36) & 0xFFFFFFFFFFFFFFF8))
  {
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
    v141 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v141 >= *(_QWORD *)(a2 + 16))
    {
      v145 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v142 = *v122;
      *v141 = *v122;
      if ((v142 & 7) != 0)
      {
        v143 = (unsigned int *)(v142 & 0xFFFFFFFFFFFFFFF8);
        do
          v144 = __ldxr(v143);
        while (__stxr(v144 + 2, v143));
        if ((v144 & 1) == 0)
          *v141 &= 0xFFFFFFFFFFFFFFF8;
      }
      v145 = (char *)(v141 + 1);
    }
    *(_QWORD *)(a2 + 8) = v145;
  }
  v146 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v146)
    v146 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v146 + 37) & 0xFFFFFFFFFFFFFFF8))
  {
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
    v147 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v147 >= *(_QWORD *)(a2 + 16))
    {
      v151 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v148 = *v122;
      *v147 = *v122;
      if ((v148 & 7) != 0)
      {
        v149 = (unsigned int *)(v148 & 0xFFFFFFFFFFFFFFF8);
        do
          v150 = __ldxr(v149);
        while (__stxr(v150 + 2, v149));
        if ((v150 & 1) == 0)
          *v147 &= 0xFFFFFFFFFFFFFFF8;
      }
      v151 = (char *)(v147 + 1);
    }
    *(_QWORD *)(a2 + 8) = v151;
  }
  v152 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v152)
    v152 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v152 + 20) & 0xFFFFFFFFFFFFFFF8))
  {
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
    v153 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v153 >= *(_QWORD *)(a2 + 16))
    {
      v157 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v154 = *v122;
      *v153 = *v122;
      if ((v154 & 7) != 0)
      {
        v155 = (unsigned int *)(v154 & 0xFFFFFFFFFFFFFFF8);
        do
          v156 = __ldxr(v155);
        while (__stxr(v156 + 2, v155));
        if ((v156 & 1) == 0)
          *v153 &= 0xFFFFFFFFFFFFFFF8;
      }
      v157 = (char *)(v153 + 1);
    }
    *(_QWORD *)(a2 + 8) = v157;
  }
  v158 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v158)
    v158 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v158 + 21) & 0xFFFFFFFFFFFFFFF8))
  {
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C80A5D8(&pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens);
    v159 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v159 >= *(_QWORD *)(a2 + 16))
    {
      v163 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v160 = *v122;
      *v159 = *v122;
      if ((v160 & 7) != 0)
      {
        v161 = (unsigned int *)(v160 & 0xFFFFFFFFFFFFFFF8);
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 2, v161));
        if ((v162 & 1) == 0)
          *v159 &= 0xFFFFFFFFFFFFFFF8;
      }
      v163 = (char *)(v159 + 1);
    }
    *(_QWORD *)(a2 + 8) = v163;
  }
  v164 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v164)
    v164 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v164 + 22) & 0xFFFFFFFFFFFFFFF8))
  {
    v122 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    if (!v122)
      v122 = (uint64_t *)sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    v165 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v165 >= *(_QWORD *)(a2 + 16))
    {
      v169 = sub_20BFCA068((char **)a2, v122);
    }
    else
    {
      v166 = *v122;
      *v165 = *v122;
      if ((v166 & 7) != 0)
      {
        v167 = (unsigned int *)(v166 & 0xFFFFFFFFFFFFFFF8);
        do
          v168 = __ldxr(v167);
        while (__stxr(v168 + 2, v167));
        if ((v168 & 1) == 0)
          *v165 &= 0xFFFFFFFFFFFFFFF8;
      }
      v169 = (char *)(v165 + 1);
    }
    *(_QWORD *)(a2 + 8) = v169;
  }
  if (pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeIsVolumeField((pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)((char *)this + 16), (const pxrInternal__aapl__pxrReserved__::TfToken *)v122))
  {
    v170 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
    if (!v170)
      v170 = (uint64_t *)sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
    v171 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v171 >= *(_QWORD *)(a2 + 16))
    {
      v175 = sub_20BFCA068((char **)a2, v170);
    }
    else
    {
      v172 = *v170;
      *v171 = *v170;
      if ((v172 & 7) != 0)
      {
        v173 = (unsigned int *)(v172 & 0xFFFFFFFFFFFFFFF8);
        do
          v174 = __ldxr(v173);
        while (__stxr(v174 + 2, v173));
        if ((v174 & 1) == 0)
          *v171 &= 0xFFFFFFFFFFFFFFF8;
      }
      v175 = (char *)(v171 + 1);
    }
    *(_QWORD *)(a2 + 8) = v175;
  }
  v176 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v176)
    v176 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v176 + 12) & 0xFFFFFFFFFFFFFFF8))
  {
    v177 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens);
    if (!v177)
      v177 = (uint64_t *)sub_20C80A6E8(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens);
    v178 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v178 >= *(_QWORD *)(a2 + 16))
    {
      v182 = sub_20BFCA068((char **)a2, v177);
    }
    else
    {
      v179 = *v177;
      *v178 = *v177;
      if ((v179 & 7) != 0)
      {
        v180 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
        do
          v181 = __ldxr(v180);
        while (__stxr(v181 + 2, v180));
        if ((v181 & 1) == 0)
          *v178 &= 0xFFFFFFFFFFFFFFF8;
      }
      v182 = (char *)(v178 + 1);
    }
    *(_QWORD *)(a2 + 8) = v182;
  }
  v183 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v183)
    v183 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v183 + 35) & 0xFFFFFFFFFFFFFFF8))
  {
    v184 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v184)
      v184 = (uint64_t *)sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    v185 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v185 >= *(_QWORD *)(a2 + 16))
    {
      v189 = sub_20BFCA068((char **)a2, v184);
    }
    else
    {
      v186 = *v184;
      *v185 = *v184;
      if ((v186 & 7) != 0)
      {
        v187 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
        do
          v188 = __ldxr(v187);
        while (__stxr(v188 + 2, v187));
        if ((v188 & 1) == 0)
          *v185 &= 0xFFFFFFFFFFFFFFF8;
      }
      v189 = (char *)(v185 + 1);
    }
    *(_QWORD *)(a2 + 8) = v189;
  }
  v190 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v190)
    v190 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v190 + 17) & 0xFFFFFFFFFFFFFFF8))
  {
    v191 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    if (!v191)
      v191 = (uint64_t *)sub_20C80A220(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
    v192 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v192 >= *(_QWORD *)(a2 + 16))
    {
      v196 = sub_20BFCA068((char **)a2, v191);
    }
    else
    {
      v193 = *v191;
      *v192 = *v191;
      if ((v193 & 7) != 0)
      {
        v194 = (unsigned int *)(v193 & 0xFFFFFFFFFFFFFFF8);
        do
          v195 = __ldxr(v194);
        while (__stxr(v195 + 2, v194));
        if ((v195 & 1) == 0)
          *v192 &= 0xFFFFFFFFFFFFFFF8;
      }
      v196 = (char *)(v192 + 1);
    }
    *(_QWORD *)(a2 + 8) = v196;
  }
  v197 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v197)
    v197 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v197 + 15) & 0xFFFFFFFFFFFFFFF8))
  {
    v198 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v198)
      v198 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    v199 = (uint64_t *)((char *)v198 + 120);
    v200 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v200 >= *(_QWORD *)(a2 + 16))
    {
      v204 = sub_20BFCA068((char **)a2, v199);
    }
    else
    {
      v201 = *v199;
      *v200 = *v199;
      if ((v201 & 7) != 0)
      {
        v202 = (unsigned int *)(v201 & 0xFFFFFFFFFFFFFFF8);
        do
          v203 = __ldxr(v202);
        while (__stxr(v203 + 2, v202));
        if ((v203 & 1) == 0)
          *v200 &= 0xFFFFFFFFFFFFFFF8;
      }
      v204 = (char *)(v200 + 1);
    }
    *(_QWORD *)(a2 + 8) = v204;
  }
  v205 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v205)
    v205 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*v5 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v205 + 23) & 0xFFFFFFFFFFFFFFF8))
  {
    v206 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v206)
      v206 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    v207 = (uint64_t *)((char *)v206 + 184);
    v208 = *(uint64_t **)(a2 + 8);
    if ((unint64_t)v208 >= *(_QWORD *)(a2 + 16))
    {
      v212 = sub_20BFCA068((char **)a2, v207);
    }
    else
    {
      v209 = *v207;
      *v208 = *v207;
      if ((v209 & 7) != 0)
      {
        v210 = (unsigned int *)(v209 & 0xFFFFFFFFFFFFFFF8);
        do
          v211 = __ldxr(v210);
        while (__stxr(v211 + 2, v210));
        if ((v211 & 1) == 0)
          *v208 &= 0xFFFFFFFFFFFFFFF8;
      }
      v212 = (char *)(v208 + 1);
    }
    *(_QWORD *)(a2 + 8) = v212;
  }
  v213 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens);
  if (!v213)
    v213 = (uint64_t *)sub_20C80A770(&pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens);
  v214 = *(uint64_t **)(a2 + 8);
  if ((unint64_t)v214 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20BFCA068((char **)a2, v213);
  }
  else
  {
    v215 = *v213;
    *v214 = *v213;
    if ((v215 & 7) != 0)
    {
      v216 = (unsigned int *)(v215 & 0xFFFFFFFFFFFFFFF8);
      do
        v217 = __ldxr(v216);
      while (__stxr(v217 + 2, v216));
      if ((v217 & 1) == 0)
        *v214 &= 0xFFFFFFFFFFFFFFF8;
    }
    result = (char *)(v214 + 1);
  }
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

void sub_20C7FE104(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetPrimvarsDataSource@<D0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *v2;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  char v35;
  unsigned int *v36;
  unsigned int v37;
  unint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t *v54;
  unsigned int *v55;
  unsigned int v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int *v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unsigned int *v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int *v74;
  unsigned int v75;
  uint64_t v76;
  unsigned int *v77;
  unsigned int v78;
  unsigned int *v79;
  unsigned int v80;
  __int128 v81;
  unint64_t *v82;
  unint64_t v83;
  double result;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  _OWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _DWORD *v94;
  unint64_t v95;
  _DWORD *v97;
  uint64_t v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  const char *v108;
  char v109;

  v2 = this;
  v4 = atomic_load((unsigned __int8 *)this + 32);
  if ((v4 & 1) != 0)
  {
    sub_20C806934((_QWORD *)this + 5, &v106);
    result = *(double *)&v106;
    *a2 = v106;
  }
  else
  {
    v5 = 0;
    v97 = (_DWORD *)((char *)this + 8);
    v94 = (_DWORD *)((char *)this + 12);
    v105 = 0uLL;
    v91 = a2;
    do
    {
      (*(void (**)(uint64_t *__return_ptr, _QWORD, _DWORD *, uint64_t))(**((_QWORD **)v2 + 3) + 376))(&v103, *((_QWORD *)v2 + 3), v97, v5);
      v92 = v5;
      sub_20C7FEA20(v5, (unsigned int **)&v102);
      v7 = v103;
      v6 = v104;
      v93 = v104;
      while (v7 != v6)
      {
        if (!(_QWORD)v105)
        {
          v25 = (char *)operator new(0x38uLL);
          v26 = *((_QWORD *)this + 3);
          *(_QWORD *)v25 = off_24C54C9F0;
          *(_OWORD *)(v25 + 8) = 0u;
          *(_OWORD *)(v25 + 24) = 0u;
          sub_20BFD6E54((_DWORD *)v25 + 10, v97);
          sub_20BFD6EA4((_DWORD *)v25 + 11, v94);
          *((_QWORD *)v25 + 6) = v26;
          if (!v26)
          {
            *(_QWORD *)&v106 = "hd/dataSourceLegacyPrim.cpp";
            *((_QWORD *)&v106 + 1) = "Hd_DataSourceLegacyPrimvarsContainer";
            v107 = 366;
            v108 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyPrimvarsContainer::Hd_Dat"
                   "aSourceLegacyPrimvarsContainer(const SdfPath &, HdSceneDelegate *)";
            v109 = 0;
            pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v106, "_sceneDelegate", 0);
          }
          v27 = operator new(0x20uLL);
          *v27 = &off_24C54CCD8;
          v27[1] = 0;
          v27[2] = 0;
          v27[3] = v25;
          v28 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
          *(_QWORD *)&v105 = v25;
          *((_QWORD *)&v105 + 1) = v27;
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v30 = __ldaxr(p_shared_owners);
            while (__stlxr(v30 - 1, p_shared_owners));
            if (!v30)
            {
              ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
              std::__shared_weak_count::__release_weak(v28);
            }
          }
        }
        v8 = (_QWORD *)v105;
        v9 = *(_BYTE *)(v7 + 24);
        v10 = v102;
        if ((v102 & 7) != 0)
        {
          v11 = (unsigned int *)(v102 & 0xFFFFFFFFFFFFFFF8);
          do
            v12 = __ldxr(v11);
          while (__stxr(v12 + 2, v11));
          if ((v12 & 1) == 0)
            v10 &= 0xFFFFFFFFFFFFFFF8;
        }
        v13 = *(_QWORD *)(v7 + 16);
        if ((v13 & 7) != 0)
        {
          v14 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
          do
            v15 = __ldxr(v14);
          while (__stxr(v15 + 2, v14));
          if ((v15 & 1) == 0)
            v13 &= 0xFFFFFFFFFFFFFFF8;
        }
        v16 = *(_QWORD *)v7;
        if ((*(_QWORD *)v7 & 7) != 0)
        {
          v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
          do
            v18 = __ldxr(v17);
          while (__stxr(v18 + 2, v17));
          if ((v18 & 1) == 0)
            v16 &= 0xFFFFFFFFFFFFFFF8;
        }
        v20 = v8 + 4;
        v19 = v8[4];
        if (v19)
        {
          v22 = v8[1];
          v21 = v8[2];
          if ((v16 & 7) != 0)
          {
            v23 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stxr(v24 + 2, v23));
            if ((v24 & 1) != 0)
              v23 = (unsigned int *)v16;
          }
          else
          {
            v23 = (unsigned int *)v16;
          }
          *(_QWORD *)&v106 = v23;
          *((_QWORD *)&v106 + 1) = (v21 - v22) >> 5;
          v34 = sub_20BF2D7C8(v19, &v106, (uint64_t *)&v106);
          if ((v106 & 7) != 0)
          {
            v36 = (unsigned int *)(v106 & 0xFFFFFFFFFFFFFFF8);
            do
              v37 = __ldxr(v36);
            while (__stlxr(v37 - 2, v36));
          }
          v38 = v16;
          if (v35)
            goto LABEL_47;
          v31 = v8[1] + 32 * v34[3];
          v101 = v16;
          v33 = v16 & 7;
        }
        else
        {
          v31 = v8[1];
          v32 = v8[2];
          if (v31 != v32)
          {
            while ((*(_QWORD *)v31 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8))
            {
              v31 += 32;
              if (v31 == v32)
                goto LABEL_46;
            }
          }
          if (v31 == v32)
          {
LABEL_46:
            v38 = v16;
LABEL_47:
            *(_QWORD *)&v106 = v38;
            v100 = v38 & 7;
            v101 = v38;
            if ((v38 & 7) != 0)
            {
              v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
              do
                v40 = __ldxr(v39);
              while (__stxr(v40 + 2, v39));
              if ((v40 & 1) == 0)
                *(_QWORD *)&v106 = v39;
            }
            *((_QWORD *)&v106 + 1) = 0;
            v107 = 0;
            LOBYTE(v108) = 0;
            v42 = v8[2];
            v41 = v8[3];
            v99 = v9;
            if (v42 < v41)
            {
              sub_20C806A14(v42, (uint64_t *)&v106);
              v43 = v42 + 32;
              v33 = v100;
LABEL_72:
              v8[2] = v43;
              if ((v107 & 7) != 0)
              {
                v55 = (unsigned int *)(v107 & 0xFFFFFFFFFFFFFFF8);
                do
                  v56 = __ldxr(v55);
                while (__stlxr(v56 - 2, v55));
              }
              v9 = v99;
              if ((BYTE8(v106) & 7) != 0)
              {
                v57 = (unsigned int *)(*((_QWORD *)&v106 + 1) & 0xFFFFFFFFFFFFFFF8);
                do
                  v58 = __ldxr(v57);
                while (__stlxr(v58 - 2, v57));
              }
              if ((v106 & 7) != 0)
              {
                v59 = (unsigned int *)(v106 & 0xFFFFFFFFFFFFFFF8);
                do
                  v60 = __ldxr(v59);
                while (__stlxr(v60 - 2, v59));
              }
              v61 = v8[2];
              if ((unint64_t)(v61 - v8[1]) >= 0x3E1 && !*v20)
              {
                v62 = operator new(0x28uLL);
                *v62 = 0u;
                v62[1] = 0u;
                *((_DWORD *)v62 + 8) = 1065353216;
                sub_20BDEC6E0((uint64_t)v62, 0x20uLL);
                sub_20BF2B064(v8 + 4, (uint64_t)v62);
                v63 = v8[1];
                v61 = v8[2];
                if (v61 != v63)
                {
                  v64 = 0;
                  do
                  {
                    v65 = *v20;
                    v66 = *(_QWORD *)(v63 + 32 * v64);
                    if ((v66 & 7) != 0)
                    {
                      v67 = (unsigned int *)(v66 & 0xFFFFFFFFFFFFFFF8);
                      do
                        v68 = __ldxr(v67);
                      while (__stxr(v68 + 2, v67));
                      if ((v68 & 1) == 0)
                        v66 &= 0xFFFFFFFFFFFFFFF8;
                    }
                    *(_QWORD *)&v106 = v66;
                    *((_QWORD *)&v106 + 1) = v64;
                    sub_20BF2D7C8(v65, &v106, (uint64_t *)&v106);
                    if ((v106 & 7) != 0)
                    {
                      v69 = (unsigned int *)(v106 & 0xFFFFFFFFFFFFFFF8);
                      do
                        v70 = __ldxr(v69);
                      while (__stlxr(v70 - 2, v69));
                    }
                    ++v64;
                    v63 = v8[1];
                    v61 = v8[2];
                  }
                  while (v64 < (v61 - v63) >> 5);
                }
              }
              v31 = v61 - 32;
              goto LABEL_95;
            }
            v44 = v8[1];
            v45 = (uint64_t)(v42 - v44) >> 5;
            if ((unint64_t)(v45 + 1) >> 59)
              sub_20BDDF694();
            v46 = v41 - v44;
            v47 = v46 >> 4;
            if (v46 >> 4 <= (unint64_t)(v45 + 1))
              v47 = v45 + 1;
            if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFE0)
              v48 = 0x7FFFFFFFFFFFFFFLL;
            else
              v48 = v47;
            v98 = v13;
            if (v48)
            {
              if (v48 >> 59)
                sub_20BDDF5B4();
              v49 = (char *)operator new(32 * v48);
            }
            else
            {
              v49 = 0;
            }
            v50 = (uint64_t)&v49[32 * v45];
            sub_20C806A14(v50, (uint64_t *)&v106);
            v51 = (uint64_t *)v8[1];
            v52 = (uint64_t *)v8[2];
            if (v52 == v51)
            {
              v43 = v50 + 32;
              v8[1] = v50;
              v8[2] = v50 + 32;
              v8[3] = &v49[32 * v48];
            }
            else
            {
              v95 = v10;
              v53 = v50;
              do
              {
                v53 -= 32;
                v52 -= 4;
                sub_20C806A14(v53, v52);
              }
              while (v52 != v51);
              v52 = (uint64_t *)v8[1];
              v54 = (uint64_t *)v8[2];
              v43 = v50 + 32;
              v8[1] = v53;
              v8[2] = v50 + 32;
              v8[3] = &v49[32 * v48];
              if (v54 != v52)
              {
                v10 = v95;
                v6 = v93;
                v13 = v98;
                v33 = v100;
                do
                {
                  v54 -= 4;
                  sub_20C806ABC(v54);
                }
                while (v54 != v52);
                if (!v52)
                  goto LABEL_72;
LABEL_71:
                operator delete(v52);
                goto LABEL_72;
              }
              v10 = v95;
            }
            v6 = v93;
            v13 = v98;
            v33 = v100;
            if (!v52)
              goto LABEL_72;
            goto LABEL_71;
          }
          v101 = v16;
          v33 = v16 & 7;
        }
LABEL_95:
        if (v33)
        {
          v71 = (unsigned int *)(v101 & 0xFFFFFFFFFFFFFFF8);
          do
            v72 = __ldxr(v71);
          while (__stlxr(v72 - 2, v71));
        }
        v73 = *(_QWORD *)(v31 + 8);
        if ((v73 & 7) != 0)
        {
          v74 = (unsigned int *)(v73 & 0xFFFFFFFFFFFFFFF8);
          do
            v75 = __ldxr(v74);
          while (__stlxr(v75 - 2, v74));
        }
        *(_QWORD *)(v31 + 8) = v10;
        v76 = *(_QWORD *)(v31 + 16);
        if ((v76 & 7) != 0)
        {
          v77 = (unsigned int *)(v76 & 0xFFFFFFFFFFFFFFF8);
          do
            v78 = __ldxr(v77);
          while (__stlxr(v78 - 2, v77));
        }
        *(_QWORD *)(v31 + 16) = v13;
        *(_BYTE *)(v31 + 24) = v9;
        v7 += 32;
      }
      if ((v102 & 7) != 0)
      {
        v79 = (unsigned int *)(v102 & 0xFFFFFFFFFFFFFFF8);
        do
          v80 = __ldxr(v79);
        while (__stlxr(v80 - 2, v79));
      }
      *(_QWORD *)&v106 = &v103;
      sub_20C80A7F8((void ***)&v106);
      v5 = v92 + 1;
      v2 = this;
    }
    while (v92 != 5);
    v81 = v105;
    v106 = v105;
    if (*((_QWORD *)&v105 + 1))
    {
      v82 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v83 = __ldxr(v82);
      while (__stxr(v83 + 1, v82));
    }
    sub_20C7FCAAC((uint64_t *)this + 5, (uint64_t *)&v106);
    atomic_store(1u, (unsigned __int8 *)this + 32);
    *v91 = v81;
    v105 = 0uLL;
    v85 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
    if (*((_QWORD *)&v106 + 1))
    {
      v86 = (unint64_t *)(*((_QWORD *)&v106 + 1) + 8);
      do
        v87 = __ldaxr(v86);
      while (__stlxr(v87 - 1, v86));
      if (!v87)
      {
        ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
        std::__shared_weak_count::__release_weak(v85);
      }
    }
    v88 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
    if (*((_QWORD *)&v105 + 1))
    {
      v89 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v90 = __ldaxr(v89);
      while (__stlxr(v90 - 1, v89));
      if (!v90)
      {
        ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
        std::__shared_weak_count::__release_weak(v88);
      }
    }
  }
  return result;
}

void sub_20C7FE880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  _QWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  va_list va;
  uint64_t v24;
  uint64_t v25;
  va_list va1;

  va_start(va1, a14);
  va_start(va, a14);
  v22 = va_arg(va1, _QWORD);
  v24 = va_arg(va1, _QWORD);
  v25 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v17);
  sub_20C96C2B8(v16, v14, v15);
  if ((a14 & 7) != 0)
  {
    v20 = (unsigned int *)(a14 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  *(_QWORD *)(v18 - 128) = va;
  sub_20C80A7F8((void ***)(v18 - 128));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *sub_20C7FEA20@<X0>(int a1@<W0>, unsigned int **a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *result;
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;

  switch(a1)
  {
    case 0:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v4 = (unsigned int *)*((_QWORD *)result + 6);
      *a2 = v4;
      if ((v4 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
        goto LABEL_43;
      }
      break;
    case 1:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v8 = (unsigned int *)*((_QWORD *)result + 7);
      *a2 = v8;
      if ((v8 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
        goto LABEL_43;
      }
      break;
    case 2:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v9 = (unsigned int *)*((_QWORD *)result + 8);
      *a2 = v9;
      if ((v9 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
        goto LABEL_43;
      }
      break;
    case 3:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v10 = (unsigned int *)*((_QWORD *)result + 9);
      *a2 = v10;
      if ((v10 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
        goto LABEL_43;
      }
      break;
    case 4:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v11 = (unsigned int *)*((_QWORD *)result + 10);
      *a2 = v11;
      if ((v11 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
        goto LABEL_43;
      }
      break;
    case 5:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v12 = (unsigned int *)*((_QWORD *)result + 11);
      *a2 = v12;
      if ((v12 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
        goto LABEL_43;
      }
      break;
    default:
      result = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      if (!result)
        result = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
      v7 = (unsigned int *)*((_QWORD *)result + 6);
      *a2 = v7;
      if ((v7 & 7) != 0)
      {
        v5 = (unsigned int *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 2, v5));
LABEL_43:
        if ((v6 & 1) == 0)
          *a2 = v5;
      }
      break;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetExtComputationPrimvarsDataSource(std::__shared_weak_count **this@<X0>, std::__shared_weak_count **a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  _QWORD *v24;
  char v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  char *v29;
  std::__shared_weak_count *v30;
  std::__shared_weak_count *v31;
  unint64_t *p_shared_owners;
  unint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int *v41;
  unsigned int v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unsigned int *v71;
  unsigned int v72;
  unsigned int *v73;
  unsigned int v74;
  unsigned int *v75;
  unsigned int v76;
  unsigned int *v77;
  unsigned int v78;
  unsigned int *v79;
  unsigned int v80;
  unsigned int *v81;
  unsigned int v82;
  unsigned int *v83;
  unsigned int v84;
  unsigned int *v85;
  unsigned int v86;
  unsigned int *v87;
  unsigned int v88;
  unint64_t *v89;
  unsigned int *v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  unsigned int *v101;
  unsigned int v102;
  unsigned int *v103;
  unsigned int v104;
  unsigned int *v105;
  unsigned int v106;
  std::__shared_weak_count *v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  std::__shared_weak_count *v111;
  unint64_t *v112;
  unint64_t v113;
  unint64_t *v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  std::__shared_weak_count *v119;
  unint64_t *v120;
  unint64_t v121;
  uint64_t v124;
  _DWORD *v125;
  _DWORD *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  std::__shared_weak_count *v131;
  std::__shared_weak_count *v132;
  unint64_t v133;
  uint64_t v134;
  int v135;
  int v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  unint64_t v142;
  __int128 v143;
  int v144;
  int v145;
  uint64_t v146;
  __int128 v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  __int128 v154;

  v2 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)this;
  if ((*((_BYTE *)this + 33) & 1) == 0)
  {
    v3 = 0;
    v125 = (_DWORD *)this + 3;
    v126 = this + 1;
    v131 = 0;
    v132 = 0;
    while (1)
    {
      (*(void (**)(uint64_t *__return_ptr, _QWORD, _DWORD *, uint64_t))(**((_QWORD **)v2 + 3) + 336))(&v129, *((_QWORD *)v2 + 3), v126, v3);
      v124 = v3;
      sub_20C7FEA20(v3, (unsigned int **)&v128);
      v5 = v129;
      v4 = v130;
      v127 = v130;
      while (v5 != v4)
      {
        if (!v131)
        {
          v29 = (char *)operator new(0x30uLL);
          *(_QWORD *)v29 = off_24C54CD50;
          *(_OWORD *)(v29 + 8) = 0u;
          *(_OWORD *)(v29 + 24) = 0u;
          sub_20BFD6E54((_DWORD *)v29 + 10, v126);
          sub_20BFD6EA4((_DWORD *)v29 + 11, v125);
          v30 = (std::__shared_weak_count *)operator new(0x20uLL);
          v30->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54CF40;
          v30->__shared_owners_ = 0;
          v30->__shared_weak_owners_ = 0;
          v30[1].__vftable = (std::__shared_weak_count_vtbl *)v29;
          v31 = v132;
          v131 = (std::__shared_weak_count *)v29;
          v132 = v30;
          if (v31)
          {
            p_shared_owners = (unint64_t *)&v31->__shared_owners_;
            do
              v33 = __ldaxr(p_shared_owners);
            while (__stlxr(v33 - 1, p_shared_owners));
            if (!v33)
            {
              ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
              std::__shared_weak_count::__release_weak(v31);
            }
          }
        }
        v6 = &v131->__vftable;
        v133 = v128;
        if ((v128 & 7) != 0)
        {
          v7 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 2, v7));
          if ((v8 & 1) == 0)
            v133 &= 0xFFFFFFFFFFFFFFF8;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v134 = v9;
        if ((v9 & 7) != 0)
        {
          v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
          do
            v11 = __ldxr(v10);
          while (__stxr(v11 + 2, v10));
          if ((v11 & 1) == 0)
            v134 &= 0xFFFFFFFFFFFFFFF8;
        }
        sub_20BFD6E54(&v135, (_DWORD *)(v5 + 28));
        sub_20BFD6EA4(&v136, (_DWORD *)(v5 + 32));
        v12 = *(_QWORD *)(v5 + 40);
        v137 = v12;
        if ((v12 & 7) != 0)
        {
          v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 2, v13));
          if ((v14 & 1) == 0)
            v137 &= 0xFFFFFFFFFFFFFFF8;
        }
        v138 = *(_OWORD *)(v5 + 48);
        v140 = 0u;
        v141 = 0u;
        v139 = 0u;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v140);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v140 + 1);
        *((_QWORD *)&v140 + 1) = 0;
        v142 = *(_QWORD *)v5;
        if ((v142 & 7) != 0)
        {
          v15 = (unsigned int *)(v142 & 0xFFFFFFFFFFFFFFF8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 2, v15));
          if ((v16 & 1) == 0)
            v142 &= 0xFFFFFFFFFFFFFFF8;
        }
        v143 = v139;
        v139 = 0uLL;
        v144 = v140;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(&v140);
        v145 = DWORD1(v140);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=((_DWORD *)&v140 + 1);
        v146 = *((_QWORD *)&v140 + 1);
        *((_QWORD *)&v140 + 1) = 0;
        v147 = v141;
        v18 = v6 + 4;
        v17 = v6[4];
        if (v17)
        {
          v20 = v6[1];
          v19 = v6[2];
          v21 = v142;
          if ((v142 & 7) != 0)
          {
            v22 = (unsigned int *)(v142 & 0xFFFFFFFFFFFFFFF8);
            do
              v23 = __ldxr(v22);
            while (__stxr(v23 + 2, v22));
            if ((v23 & 1) == 0)
              v21 &= 0xFFFFFFFFFFFFFFF8;
          }
          v148 = v21;
          v149 = 0x6DB6DB6DB6DB6DB7 * ((v19 - v20) >> 3);
          v24 = sub_20BF2D7C8(v17, &v148, (uint64_t *)&v148);
          if ((v148 & 7) != 0)
          {
            v26 = (unsigned int *)(v148 & 0xFFFFFFFFFFFFFFF8);
            do
              v27 = __ldxr(v26);
            while (__stlxr(v27 - 2, v26));
          }
          if (!v25)
          {
            v28 = v6[1] + 56 * v24[3];
            goto LABEL_114;
          }
LABEL_47:
          v148 = v142;
          if ((v142 & 7) != 0)
          {
            v35 = (unsigned int *)(v142 & 0xFFFFFFFFFFFFFFF8);
            do
              v36 = __ldxr(v35);
            while (__stxr(v36 + 2, v35));
            if ((v36 & 1) == 0)
              v148 &= 0xFFFFFFFFFFFFFFF8;
          }
          v149 = v143;
          if ((v143 & 7) != 0)
          {
            v37 = (unsigned int *)(v143 & 0xFFFFFFFFFFFFFFF8);
            do
              v38 = __ldxr(v37);
            while (__stxr(v38 + 2, v37));
            if ((v38 & 1) == 0)
              v149 &= 0xFFFFFFFFFFFFFFF8;
          }
          v150 = *((_QWORD *)&v143 + 1);
          if ((BYTE8(v143) & 7) != 0)
          {
            v39 = (unsigned int *)(*((_QWORD *)&v143 + 1) & 0xFFFFFFFFFFFFFFF8);
            do
              v40 = __ldxr(v39);
            while (__stxr(v40 + 2, v39));
            if ((v40 & 1) == 0)
              v150 &= 0xFFFFFFFFFFFFFFF8;
          }
          sub_20BFD6E54(&v151, &v144);
          sub_20BFD6EA4(&v152, &v145);
          v153 = v146;
          if ((v146 & 7) != 0)
          {
            v41 = (unsigned int *)(v146 & 0xFFFFFFFFFFFFFFF8);
            do
              v42 = __ldxr(v41);
            while (__stxr(v42 + 2, v41));
            if ((v42 & 1) == 0)
              v153 &= 0xFFFFFFFFFFFFFFF8;
          }
          v154 = v147;
          v44 = v6[2];
          v43 = v6[3];
          if (v44 < v43)
          {
            sub_20C806D1C(v6[2], (uint64_t *)&v148);
            v45 = v44 + 56;
LABEL_88:
            v6[2] = v45;
            if ((v153 & 7) != 0)
            {
              v57 = (unsigned int *)(v153 & 0xFFFFFFFFFFFFFFF8);
              do
                v58 = __ldxr(v57);
              while (__stlxr(v58 - 2, v57));
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v152);
            sub_20BFD265C(&v151);
            if ((v150 & 7) != 0)
            {
              v59 = (unsigned int *)(v150 & 0xFFFFFFFFFFFFFFF8);
              do
                v60 = __ldxr(v59);
              while (__stlxr(v60 - 2, v59));
            }
            if ((v149 & 7) != 0)
            {
              v61 = (unsigned int *)(v149 & 0xFFFFFFFFFFFFFFF8);
              do
                v62 = __ldxr(v61);
              while (__stlxr(v62 - 2, v61));
            }
            if ((v148 & 7) != 0)
            {
              v63 = (unsigned int *)(v148 & 0xFFFFFFFFFFFFFFF8);
              do
                v64 = __ldxr(v63);
              while (__stlxr(v64 - 2, v63));
            }
            v65 = v6[2];
            if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v65 - v6[1]) >> 3)) >= 0x20 && !*v18)
            {
              v66 = operator new(0x28uLL);
              *v66 = 0u;
              v66[1] = 0u;
              *((_DWORD *)v66 + 8) = 1065353216;
              sub_20BDEC6E0((uint64_t)v66, 0x20uLL);
              sub_20BF2B064(v6 + 4, (uint64_t)v66);
              v67 = v6[1];
              v65 = v6[2];
              if (v65 != v67)
              {
                v68 = 0;
                do
                {
                  v69 = *v18;
                  v70 = *(_QWORD *)(v67 + 56 * v68);
                  if ((v70 & 7) != 0)
                  {
                    v71 = (unsigned int *)(v70 & 0xFFFFFFFFFFFFFFF8);
                    do
                      v72 = __ldxr(v71);
                    while (__stxr(v72 + 2, v71));
                    if ((v72 & 1) == 0)
                      v70 &= 0xFFFFFFFFFFFFFFF8;
                  }
                  v148 = v70;
                  v149 = v68;
                  sub_20BF2D7C8(v69, &v148, (uint64_t *)&v148);
                  if ((v148 & 7) != 0)
                  {
                    v73 = (unsigned int *)(v148 & 0xFFFFFFFFFFFFFFF8);
                    do
                      v74 = __ldxr(v73);
                    while (__stlxr(v74 - 2, v73));
                  }
                  ++v68;
                  v67 = v6[1];
                  v65 = v6[2];
                }
                while (v68 < 0x6DB6DB6DB6DB6DB7 * ((v65 - v67) >> 3));
              }
            }
            v28 = v65 - 56;
            goto LABEL_114;
          }
          v46 = v6[1];
          v47 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v44 - v46) >> 3);
          v48 = v47 + 1;
          if ((unint64_t)(v47 + 1) > 0x492492492492492)
            sub_20BDDF694();
          v49 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v43 - v46) >> 3);
          if (2 * v49 > v48)
            v48 = 2 * v49;
          if (v49 >= 0x249249249249249)
            v50 = 0x492492492492492;
          else
            v50 = v48;
          if (v50)
          {
            if (v50 > 0x492492492492492)
              sub_20BDDF5B4();
            v51 = (char *)operator new(56 * v50);
          }
          else
          {
            v51 = 0;
          }
          v52 = (uint64_t)&v51[56 * v47];
          sub_20C806D1C(v52, (uint64_t *)&v148);
          v53 = (uint64_t *)v6[1];
          v54 = (uint64_t *)v6[2];
          if (v54 == v53)
          {
            v45 = v52 + 56;
            v6[1] = v52;
            v6[2] = v52 + 56;
            v6[3] = &v51[56 * v50];
LABEL_86:
            if (!v54)
              goto LABEL_88;
          }
          else
          {
            v55 = v52;
            do
            {
              v55 -= 56;
              v54 -= 7;
              sub_20C806D1C(v55, v54);
            }
            while (v54 != v53);
            v54 = (uint64_t *)v6[1];
            v56 = v6[2];
            v45 = v52 + 56;
            v6[1] = v55;
            v6[2] = v52 + 56;
            v6[3] = &v51[56 * v50];
            if ((uint64_t *)v56 != v54)
            {
              do
              {
                v56 -= 56;
                sub_20C806E2C(v56);
              }
              while ((uint64_t *)v56 != v54);
              goto LABEL_86;
            }
            if (!v54)
              goto LABEL_88;
          }
          operator delete(v54);
          goto LABEL_88;
        }
        v28 = v6[1];
        v34 = v6[2];
        if (v28 != v34)
        {
          while ((*(_QWORD *)v28 & 0xFFFFFFFFFFFFFFF8) != (v142 & 0xFFFFFFFFFFFFFFF8))
          {
            v28 += 56;
            if (v28 == v34)
              goto LABEL_47;
          }
        }
        if (v28 == v34)
          goto LABEL_47;
LABEL_114:
        if ((v146 & 7) != 0)
        {
          v75 = (unsigned int *)(v146 & 0xFFFFFFFFFFFFFFF8);
          do
            v76 = __ldxr(v75);
          while (__stlxr(v76 - 2, v75));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v145);
        sub_20BFD265C(&v144);
        if ((BYTE8(v143) & 7) != 0)
        {
          v77 = (unsigned int *)(*((_QWORD *)&v143 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v78 = __ldxr(v77);
          while (__stlxr(v78 - 2, v77));
        }
        if ((v143 & 7) != 0)
        {
          v79 = (unsigned int *)(v143 & 0xFFFFFFFFFFFFFFF8);
          do
            v80 = __ldxr(v79);
          while (__stlxr(v80 - 2, v79));
        }
        if ((v142 & 7) != 0)
        {
          v81 = (unsigned int *)(v142 & 0xFFFFFFFFFFFFFFF8);
          do
            v82 = __ldxr(v81);
          while (__stlxr(v82 - 2, v81));
        }
        if ((BYTE8(v140) & 7) != 0)
        {
          v83 = (unsigned int *)(*((_QWORD *)&v140 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v84 = __ldxr(v83);
          while (__stlxr(v84 - 2, v83));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v140 + 1);
        sub_20BFD265C(&v140);
        if ((BYTE8(v139) & 7) != 0)
        {
          v85 = (unsigned int *)(*((_QWORD *)&v139 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v86 = __ldxr(v85);
          while (__stlxr(v86 - 2, v85));
        }
        if ((v139 & 7) != 0)
        {
          v87 = (unsigned int *)(v139 & 0xFFFFFFFFFFFFFFF8);
          do
            v88 = __ldxr(v87);
          while (__stlxr(v88 - 2, v87));
        }
        v89 = (unint64_t *)(v28 + 8);
        if (&v133 != (unint64_t *)(v28 + 8))
        {
          if ((*v89 & 7) != 0)
          {
            v90 = (unsigned int *)(*v89 & 0xFFFFFFFFFFFFFFF8);
            do
              v91 = __ldxr(v90);
            while (__stlxr(v91 - 2, v90));
          }
          *(_QWORD *)(v28 + 8) = v133;
          v133 = 0;
          v92 = *(_QWORD *)(v28 + 16);
          if ((v92 & 7) != 0)
          {
            v93 = (unsigned int *)(v92 & 0xFFFFFFFFFFFFFFF8);
            do
              v94 = __ldxr(v93);
            while (__stlxr(v94 - 2, v93));
          }
          *(_QWORD *)(v28 + 16) = v134;
          v134 = 0;
        }
        sub_20BFD3EBC((int *)(v28 + 24), &v135);
        sub_20BFD3F10((int *)(v28 + 28), &v136);
        if (&v133 == v89)
        {
          v98 = v137;
          *(_OWORD *)(v28 + 40) = v138;
          if ((v98 & 7) != 0)
          {
            v99 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
            do
              v100 = __ldxr(v99);
            while (__stlxr(v100 - 2, v99));
          }
        }
        else
        {
          v95 = *(_QWORD *)(v28 + 32);
          if ((v95 & 7) != 0)
          {
            v96 = (unsigned int *)(v95 & 0xFFFFFFFFFFFFFFF8);
            do
              v97 = __ldxr(v96);
            while (__stlxr(v97 - 2, v96));
          }
          *(_QWORD *)(v28 + 32) = v137;
          v137 = 0;
          *(_OWORD *)(v28 + 40) = v138;
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v136);
        sub_20BFD265C(&v135);
        if ((v134 & 7) != 0)
        {
          v101 = (unsigned int *)(v134 & 0xFFFFFFFFFFFFFFF8);
          do
            v102 = __ldxr(v101);
          while (__stlxr(v102 - 2, v101));
        }
        if ((v133 & 7) != 0)
        {
          v103 = (unsigned int *)(v133 & 0xFFFFFFFFFFFFFFF8);
          do
            v104 = __ldxr(v103);
          while (__stlxr(v104 - 2, v103));
        }
        v5 += 64;
        v4 = v127;
      }
      v2 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)this;
      if ((v128 & 7) != 0)
      {
        v105 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v106 = __ldxr(v105);
        while (__stlxr(v106 - 2, v105));
      }
      v148 = (unint64_t)&v129;
      sub_20C80D5F0((void ***)&v148);
      v3 = v124 + 1;
      if (v124 == 5)
      {
        v108 = v131;
        v107 = v132;
        if (v132)
        {
          v109 = (unint64_t *)&v132->__shared_owners_;
          do
            v110 = __ldxr(v109);
          while (__stxr(v110 + 1, v109));
        }
        v111 = this[8];
        this[7] = v108;
        this[8] = v107;
        if (v111)
        {
          v112 = (unint64_t *)&v111->__shared_owners_;
          do
            v113 = __ldaxr(v112);
          while (__stlxr(v113 - 1, v112));
          if (!v113)
          {
            ((void (*)(std::__shared_weak_count *))v111->__on_zero_shared)(v111);
            std::__shared_weak_count::__release_weak(v111);
          }
          v108 = this[7];
          v107 = this[8];
        }
        *((_BYTE *)this + 33) |= 1u;
        *a2 = v108;
        a2[1] = v107;
        if (v107)
        {
          v114 = (unint64_t *)&v107->__shared_owners_;
          do
            v115 = __ldxr(v114);
          while (__stxr(v115 + 1, v114));
        }
        v116 = v132;
        if (v132)
        {
          v117 = (unint64_t *)&v132->__shared_owners_;
          do
            v118 = __ldaxr(v117);
          while (__stlxr(v118 - 1, v117));
          if (!v118)
          {
            ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
            std::__shared_weak_count::__release_weak(v116);
          }
        }
        return;
      }
    }
  }
  v119 = this[8];
  *a2 = this[7];
  a2[1] = v119;
  if (v119)
  {
    v120 = (unint64_t *)&v119->__shared_owners_;
    do
      v121 = __ldxr(v120);
    while (__stxr(v121 + 1, v120));
  }
}

void sub_20C7FF7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a31);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetMaterialBindingsDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3;
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 264))(&v24, *((_QWORD *)this + 3), (char *)this + 8);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v24))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25498DCE0);
    if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25498DCE0))
    {
      v15 = (pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens);
      if (!v15)
        v15 = sub_20C8093F8(&pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens);
      v16 = *((_QWORD *)v15 + 1);
      qword_25498DCD8 = v16;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 2, v17));
        if ((v18 & 1) == 0)
          qword_25498DCD8 &= 0xFFFFFFFFFFFFFFF8;
      }
      __cxa_atexit((void (*)(void *))sub_20C823D80, 0, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DCE0);
    }
    v21 = 0;
    v22 = 0;
    sub_20C7FFBBC(&v24, &v19);
    v20 = v19;
    v19 = 0uLL;
    v4 = (pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder::SetPath(&v21, (uint64_t *)&v20);
    pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder::Build(v23, v4);
    *(_OWORD *)v25 = *(_OWORD *)v23;
    *(_OWORD *)v23 = 0uLL;
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v20 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v9 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    v11 = v22;
    if (v22)
    {
      p_shared_owners = (unint64_t *)&v22->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::BuildRetained(1uLL, &qword_25498DCD8, v25, v23);
    *(_OWORD *)a2 = *(_OWORD *)v23;
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v25);
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
  return sub_20BFD265C(&v24);
}

void sub_20C7FFB48(_Unwind_Exception *a1)
{
  uint64_t v1;

  __cxa_guard_abort(&qword_25498DCE0);
  sub_20BFD1A18((_DWORD *)(v1 - 56));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C7FFBBC@<X0>(_DWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v4;

  v4 = operator new(0x10uLL);
  *(_QWORD *)v4 = &unk_24C54C778;
  sub_20BFD6E54(v4 + 2, a1);
  sub_20BFD6EA4(v4 + 3, a1 + 1);
  return sub_20C80957C(a2, (uint64_t)v4);
}

double pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetXformDataSource@<D0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  std::__shared_weak_count *v10;
  _QWORD *v11;
  pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  double result;
  char v32;
  __int128 v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  const char *v43;
  char v44;

  v38 = 0u;
  v39 = 0u;
  v4 = operator new(0xC8uLL);
  v5 = (uint64_t)v4;
  *v4 = off_24C54CFB8;
  v6 = *((_QWORD *)this + 2);
  v7 = *((_QWORD *)this + 3);
  v4[1] = v6;
  if ((v6 & 7) != 0)
  {
    v8 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v4[1] = v8;
  }
  sub_20BFD6E54((_DWORD *)v4 + 4, (_DWORD *)this + 2);
  sub_20BFD6EA4((_DWORD *)(v5 + 20), (_DWORD *)this + 3);
  sub_20C80E858(v5 + 24);
  *(_QWORD *)(v5 + 192) = v7;
  if (!v7)
  {
    *(_QWORD *)&v41 = "hd/dataSourceLegacyPrim.cpp";
    *((_QWORD *)&v41 + 1) = "Hd_DataSourceLegacyMatrixValue";
    v42 = 455;
    v43 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyMatrixValue::Hd_DataSourceLegacyMa"
          "trixValue(const TfToken &, const SdfPath &, HdSceneDelegate *)";
    v44 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v41, "_sceneDelegate", 0);
  }
  v10 = (std::__shared_weak_count *)operator new(0x20uLL);
  v10->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54D048;
  v10->__shared_owners_ = 0;
  v10->__shared_weak_owners_ = 0;
  v10[1].__vftable = (std::__shared_weak_count_vtbl *)v5;
  v36 = v5;
  v37 = v10;
  v34 = 0;
  v35 = 0;
  v11 = pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetMatrix(&v38, &v36);
  v32 = 1;
  pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v32, (uint64_t *)&v33);
  v41 = v33;
  v33 = 0uLL;
  v12 = (pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetResetXformStack((uint64_t)v11, (uint64_t *)&v41);
  pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::Build(v12, &v40);
  v13 = (std::__shared_weak_count *)*((_QWORD *)&v41 + 1);
  if (*((_QWORD *)&v41 + 1))
  {
    v14 = (unint64_t *)(*((_QWORD *)&v41 + 1) + 8);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = (std::__shared_weak_count *)*((_QWORD *)&v33 + 1);
  if (*((_QWORD *)&v33 + 1))
  {
    v17 = (unint64_t *)(*((_QWORD *)&v33 + 1) + 8);
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v19 = v37;
  if (v37)
  {
    p_shared_owners = (unint64_t *)&v37->__shared_owners_;
    do
      v21 = __ldaxr(p_shared_owners);
    while (__stlxr(v21 - 1, p_shared_owners));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = v35;
  if (v35)
  {
    v23 = (unint64_t *)&v35->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v25 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v26 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = (std::__shared_weak_count *)*((_QWORD *)&v38 + 1);
  if (*((_QWORD *)&v38 + 1))
  {
    v29 = (unint64_t *)(*((_QWORD *)&v38 + 1) + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  result = *(double *)&v40;
  *a2 = v40;
  return result;
}

void sub_20C7FFEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  *(_QWORD *)(v9 + 24) = &unk_24C54D020;
  if (*(_DWORD *)(v9 + 188) >= 2u)
    free(*(void **)(v9 + 56));
  if (*(_DWORD *)(v9 + 52) >= 2u)
    free(*(void **)(v9 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v11);
  sub_20C96C330(v10);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetMaterialDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _QWORD **v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::TfToken *v10;
  uint64_t *v11;
  uint64_t *v12;
  const std::string *EmptyString;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *v14;
  uint64_t *v15;
  pxrInternal__aapl__pxrReserved__::TfToken *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  BOOL v23;
  unint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  int64x2_t v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  _QWORD *v41;
  int64x2_t v42;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  _QWORD *v54;
  char *v55;
  __int128 v56;
  int64x2_t v57;
  _OWORD *v58;
  uint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t *v82;
  pxrInternal__aapl__pxrReserved__::SdfPath *v83;
  pxrInternal__aapl__pxrReserved__::SdfPath *v84;
  pxrInternal__aapl__pxrReserved__::TfToken *Token;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  _QWORD *v89;
  pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *v90;
  pxrInternal__aapl__pxrReserved__::TfToken *v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  std::__shared_weak_count *v104;
  unint64_t *v105;
  unint64_t v106;
  std::__shared_weak_count *v107;
  unint64_t *v108;
  unint64_t v109;
  unsigned int *v110;
  unsigned int *v111;
  unsigned int v112;
  std::__shared_weak_count *v113;
  unint64_t *v114;
  unint64_t v115;
  unsigned int *v116;
  unsigned int v117;
  unsigned int *v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122;
  unsigned int v123;
  _QWORD *v124;
  unsigned int v125;
  __n128 v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  uint64_t *v133;
  _QWORD *v134;
  uint64_t v135;
  unsigned int *v136;
  unsigned int v137;
  char *v138;
  _QWORD *v139;
  uint64_t *v140;
  uint64_t *v141;
  uint64_t v142;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *v143;
  int64x2_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  _QWORD *v153;
  _QWORD *v154;
  char *v155;
  __int128 v156;
  int64x2_t v157;
  _OWORD *v158;
  char *v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  std::__shared_weak_count *v163;
  unint64_t *v164;
  unint64_t v165;
  std::__shared_weak_count *v166;
  unint64_t *v167;
  unint64_t v168;
  std::__shared_weak_count *v169;
  unint64_t *v170;
  unint64_t v171;
  std::__shared_weak_count *v172;
  unint64_t *v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  std::__shared_weak_count *v187;
  unint64_t *v188;
  unint64_t v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  uint64_t v196;
  void *v197;
  uint64_t *v198;
  _QWORD *v199;
  pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *v200;
  __int128 v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  _QWORD *v210;
  _QWORD *v211;
  char *v212;
  __int128 v213;
  int64x2_t v214;
  _OWORD *v215;
  char *v216;
  std::__shared_weak_count *v217;
  unint64_t *v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  std::__shared_weak_count *v223;
  unint64_t *v224;
  unint64_t v225;
  std::__shared_weak_count *v226;
  unint64_t *v227;
  unint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  std::__shared_weak_count *v232;
  unint64_t *v233;
  unint64_t v234;
  std::__shared_weak_count *v235;
  unint64_t *v236;
  unint64_t v237;
  _QWORD *v238;
  _QWORD **v239;
  uint64_t *v240;
  _QWORD *v241;
  uint64_t *v242;
  _QWORD *v243;
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::Builder *v244;
  std::__shared_weak_count *v245;
  unint64_t *v246;
  unint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  std::__shared_weak_count *v251;
  unint64_t *v252;
  unint64_t v253;
  pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *v254;
  uint64_t v255;
  unsigned int *v256;
  unsigned int v257;
  __int128 v258;
  unsigned int *v259;
  unsigned int v260;
  std::__shared_weak_count *v261;
  unint64_t *v262;
  unint64_t v263;
  std::__shared_weak_count *v264;
  unint64_t *v265;
  unint64_t v266;
  std::__shared_weak_count *v267;
  unint64_t *v268;
  unint64_t v269;
  uint64_t *v271;
  __int128 v272;
  int64x2_t v273;
  __int128 v274;
  __int128 v275;
  _QWORD **v276;
  _QWORD *v277[2];
  _QWORD v278[3];
  __int128 v279;
  __int128 v280;
  int64x2_t v281;
  __n128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  int64x2_t v287;
  int64x2_t v288;
  int64x2_t v289;
  __int128 v290;
  int64x2_t v291;
  int64x2_t v292;
  int64x2_t v293;
  int64x2_t v294;
  uint64_t v295;
  int64x2_t v296;
  _QWORD v297[2];
  int64x2_t v298;
  _QWORD v299[2];
  int64x2_t v300;
  char *v301;
  char *v302;
  _QWORD *v303;
  unint64_t v304;
  int64x2_t v305;
  char *v306;
  char *v307;
  _QWORD *v308;
  unint64_t v309;
  _BYTE v310[24];
  char *v311;
  char **v312;
  uint64_t v313;
  uint64_t v314;
  _BYTE __p[32];
  __int128 v316;
  uint64_t v317;
  uint64_t v318[8];
  uint64_t v319;
  uint64_t v320;

  v320 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 272))(&v313, *((_QWORD *)this + 3), (char *)this + 8);
  if ((sub_20C801C6C((pxrInternal__aapl__pxrReserved__::VtValue *)&v313) & 1) != 0)
  {
    if ((v314 & 4) != 0)
      v3 = (*(uint64_t (**)(uint64_t *))((v314 & 0xFFFFFFFFFFFFFFF8) + 168))(&v313);
    else
      v3 = v313;
    sub_20C806EDC((uint64_t *)&v276, v3);
    memset(v278, 0, sizeof(v278));
    sub_20BFD6D38(v278, *(_DWORD **)(v3 + 24), *(_DWORD **)(v3 + 32), (uint64_t)(*(_QWORD *)(v3 + 32) - *(_QWORD *)(v3 + 24)) >> 3);
    v308 = 0;
    v307 = 0;
    v309 = 0;
    v304 = 0;
    v305 = 0uLL;
    v306 = 0;
    v302 = 0;
    v303 = 0;
    v300 = 0uLL;
    v301 = 0;
    v4 = v276;
    if (v276 == v277)
    {
      v242 = 0;
      v240 = 0;
      v241 = 0;
    }
    else
    {
      do
      {
        if (v4[8] != v4[9])
        {
          v5 = (uint64_t *)(v4 + 4);
          v6 = v308;
          if ((unint64_t)v308 >= v309)
          {
            v10 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20BFCA068(&v307, v5);
          }
          else
          {
            v7 = *v5;
            *v308 = *v5;
            if ((v7 & 7) != 0)
            {
              v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
              do
                v9 = __ldxr(v8);
              while (__stxr(v9 + 2, v8));
              if ((v9 & 1) == 0)
                *v6 &= 0xFFFFFFFFFFFFFFF8;
            }
            v10 = (pxrInternal__aapl__pxrReserved__::TfToken *)(v6 + 1);
          }
          v308 = v10;
          v11 = v4[8];
          v271 = v4[9];
          if (v11 != v271)
          {
            do
            {
              v298 = 0uLL;
              v299[0] = 0;
              v296 = 0uLL;
              v297[0] = 0;
              v294.i64[1] = 0;
              v295 = 0;
              v294.i64[0] = (uint64_t)&v294.i64[1];
              v12 = (uint64_t *)v11[2];
              if (v12 != v11 + 3)
              {
                do
                {
                  if ((v12[4] & 0xFFFFFFFFFFFFFFF8) != 0)
                    EmptyString = (const std::string *)((v12[4] & 0xFFFFFFFFFFFFFFF8) + 16);
                  else
                    EmptyString = (const std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v10);
                  v14 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens);
                  if (!v14)
                    v14 = sub_20C807F5C(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens);
                  if ((*((_QWORD *)v14 + 1) & 0xFFFFFFFFFFFFFFF8) != 0)
                    v15 = (uint64_t *)((*((_QWORD *)v14 + 1) & 0xFFFFFFFFFFFFFFF8) + 16);
                  else
                    v15 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v14);
                  pxrInternal__aapl__pxrReserved__::SdfPath::StripPrefixNamespace(EmptyString, (uint64_t)v15, (std::string *)__p);
                  if (__p[24])
                  {
                    v17 = (_QWORD *)sub_20BFB46E8((pxrInternal__aapl__pxrReserved__::VtValue *)(v12 + 5));
                    v18 = sub_20C807BD4((uint64_t **)&v294, (uint64_t)__p);
                    v10 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20BF32220(v18 + 2, v17);
                  }
                  else
                  {
                    if ((v12[4] & 0xFFFFFFFFFFFFFFF8) != 0)
                      v19 = (uint64_t *)((v12[4] & 0xFFFFFFFFFFFFFFF8) + 16);
                    else
                      v19 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v16);
                    v20 = sub_20C807BD4((uint64_t **)&v294, (uint64_t)v19);
                    v10 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20BF4A9BC(v20, v12 + 5);
                  }
                  if ((__p[23] & 0x80000000) != 0)
                    operator delete(*(void **)__p);
                  v21 = (uint64_t *)v12[1];
                  if (v21)
                  {
                    do
                    {
                      v22 = v21;
                      v21 = (uint64_t *)*v21;
                    }
                    while (v21);
                  }
                  else
                  {
                    do
                    {
                      v22 = (uint64_t *)v12[2];
                      v23 = *v22 == (_QWORD)v12;
                      v12 = v22;
                    }
                    while (!v23);
                  }
                  v12 = v22;
                }
                while (v22 != v11 + 3);
                v24 = (unint64_t *)v294.i64[0];
                if ((unint64_t *)v294.i64[0] != &v294.u64[1])
                {
                  do
                  {
                    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v282);
                    v25 = v298.i64[1];
                    if (v298.i64[1] >= v299[0])
                    {
                      v28 = (v298.i64[1] - v298.i64[0]) >> 3;
                      if ((unint64_t)(v28 + 1) >> 61)
                        sub_20BDDF694();
                      v29 = (v299[0] - v298.i64[0]) >> 2;
                      if (v29 <= v28 + 1)
                        v29 = v28 + 1;
                      if (v299[0] - v298.i64[0] >= 0x7FFFFFFFFFFFFFF8uLL)
                        v30 = 0x1FFFFFFFFFFFFFFFLL;
                      else
                        v30 = v29;
                      *(_QWORD *)&v316 = v299;
                      if (v30)
                        v31 = (char *)sub_20BDDF6A8((uint64_t)v299, v30);
                      else
                        v31 = 0;
                      v32 = &v31[8 * v28];
                      v33 = &v31[8 * v30];
                      *(_QWORD *)&__p[24] = v33;
                      *(_QWORD *)v32 = v282.n128_u64[0];
                      v27 = v32 + 8;
                      v282.n128_u64[0] = 0;
                      *(_QWORD *)&__p[16] = v32 + 8;
                      v34 = (_QWORD *)v298.i64[1];
                      v35 = (_QWORD *)v298.i64[0];
                      if (v298.i64[1] == v298.i64[0])
                      {
                        v37 = vdupq_n_s64(v298.u64[1]);
                      }
                      else
                      {
                        do
                        {
                          v36 = *--v34;
                          *((_QWORD *)v32 - 1) = v36;
                          v32 -= 8;
                          *v34 = 0;
                        }
                        while (v34 != v35);
                        v37 = v298;
                        v27 = *(_QWORD **)&__p[16];
                        v33 = *(char **)&__p[24];
                      }
                      v298.i64[0] = (uint64_t)v32;
                      v298.i64[1] = (uint64_t)v27;
                      *(int64x2_t *)&__p[8] = v37;
                      v38 = v299[0];
                      v299[0] = v33;
                      *(_QWORD *)&__p[24] = v38;
                      *(_QWORD *)__p = v37.i64[0];
                      sub_20BF1EE98((uint64_t)__p);
                      v26 = v282.n128_u64[0];
                    }
                    else
                    {
                      v26 = 0;
                      *(_QWORD *)v298.i64[1] = v282.n128_u64[0];
                      v27 = (_QWORD *)(v25 + 8);
                      v282.n128_u64[0] = 0;
                    }
                    v298.i64[1] = (uint64_t)v27;
                    if ((v26 & 7) != 0)
                    {
                      v39 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
                      do
                        v40 = __ldxr(v39);
                      while (__stlxr(v40 - 2, v39));
                    }
                    v282 = 0u;
                    v283 = 0u;
                    sub_20C807D38(v24 + 7, &v293);
                    v289 = v293;
                    v293 = 0uLL;
                    v41 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetValue(&v282, v289.i64);
                    if (v24[9])
                    {
                      sub_20C7EA9FC((uint64_t *)v24 + 9, &v291);
                      v42 = v291;
                    }
                    else
                    {
                      v42 = 0uLL;
                    }
                    v292 = v42;
                    v291 = 0uLL;
                    v43 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetColorSpace((uint64_t)v41, v292.i64);
                    pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::Build(v43, v310);
                    v44 = *(_OWORD *)v310;
                    *(_OWORD *)v318 = *(_OWORD *)v310;
                    *(_OWORD *)v310 = 0uLL;
                    v45 = v296.i64[1];
                    if (v296.i64[1] >= v297[0])
                    {
                      v46 = (v296.i64[1] - v296.i64[0]) >> 4;
                      v47 = v46 + 1;
                      if ((unint64_t)(v46 + 1) >> 60)
                        sub_20BDDF694();
                      v272 = v44;
                      v48 = v297[0] - v296.i64[0];
                      if ((v297[0] - v296.i64[0]) >> 3 > v47)
                        v47 = v48 >> 3;
                      if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF0)
                        v49 = 0xFFFFFFFFFFFFFFFLL;
                      else
                        v49 = v47;
                      *(_QWORD *)&v316 = v297;
                      v50 = (char *)sub_20BDEA2F0((uint64_t)v297, v49);
                      v52 = &v50[16 * v46];
                      *(_OWORD *)v52 = v272;
                      *(_OWORD *)v318 = 0uLL;
                      v53 = (_QWORD *)v296.i64[1];
                      v54 = (_QWORD *)v296.i64[0];
                      if (v296.i64[1] == v296.i64[0])
                      {
                        v57 = vdupq_n_s64(v296.u64[1]);
                        v55 = &v50[16 * v46];
                      }
                      else
                      {
                        v55 = &v50[16 * v46];
                        do
                        {
                          v56 = *((_OWORD *)v53 - 1);
                          v53 -= 2;
                          *((_OWORD *)v55 - 1) = v56;
                          v55 -= 16;
                          *v53 = 0;
                          v53[1] = 0;
                        }
                        while (v53 != v54);
                        v57 = v296;
                      }
                      v58 = v52 + 16;
                      v296.i64[0] = (uint64_t)v55;
                      v296.i64[1] = (uint64_t)(v52 + 16);
                      *(int64x2_t *)&__p[8] = v57;
                      v59 = v297[0];
                      v297[0] = &v50[16 * v51];
                      *(_QWORD *)&__p[24] = v59;
                      *(_QWORD *)__p = v57.i64[0];
                      sub_20BDEA324((uint64_t)__p);
                      v60 = *(std::__shared_weak_count **)&v310[8];
                      v296.i64[1] = (uint64_t)v58;
                      if (*(_QWORD *)&v310[8])
                      {
                        v61 = (unint64_t *)(*(_QWORD *)&v310[8] + 8);
                        do
                          v62 = __ldaxr(v61);
                        while (__stlxr(v62 - 1, v61));
                        if (!v62)
                        {
                          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
                          std::__shared_weak_count::__release_weak(v60);
                        }
                      }
                    }
                    else
                    {
                      *(_OWORD *)v296.i64[1] = v44;
                      *(_OWORD *)v318 = 0uLL;
                      v296.i64[1] = v45 + 16;
                    }
                    v63 = (std::__shared_weak_count *)v292.i64[1];
                    if (v292.i64[1])
                    {
                      v64 = (unint64_t *)(v292.i64[1] + 8);
                      do
                        v65 = __ldaxr(v64);
                      while (__stlxr(v65 - 1, v64));
                      if (!v65)
                      {
                        ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
                        std::__shared_weak_count::__release_weak(v63);
                      }
                    }
                    v66 = (std::__shared_weak_count *)v291.i64[1];
                    if (v291.i64[1])
                    {
                      v67 = (unint64_t *)(v291.i64[1] + 8);
                      do
                        v68 = __ldaxr(v67);
                      while (__stlxr(v68 - 1, v67));
                      if (!v68)
                      {
                        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
                        std::__shared_weak_count::__release_weak(v66);
                      }
                    }
                    v69 = (std::__shared_weak_count *)v289.i64[1];
                    if (v289.i64[1])
                    {
                      v70 = (unint64_t *)(v289.i64[1] + 8);
                      do
                        v71 = __ldaxr(v70);
                      while (__stlxr(v71 - 1, v70));
                      if (!v71)
                      {
                        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
                        std::__shared_weak_count::__release_weak(v69);
                      }
                    }
                    v72 = (std::__shared_weak_count *)v293.i64[1];
                    if (v293.i64[1])
                    {
                      v73 = (unint64_t *)(v293.i64[1] + 8);
                      do
                        v74 = __ldaxr(v73);
                      while (__stlxr(v74 - 1, v73));
                      if (!v74)
                      {
                        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
                        std::__shared_weak_count::__release_weak(v72);
                      }
                    }
                    v75 = (std::__shared_weak_count *)*((_QWORD *)&v283 + 1);
                    if (*((_QWORD *)&v283 + 1))
                    {
                      v76 = (unint64_t *)(*((_QWORD *)&v283 + 1) + 8);
                      do
                        v77 = __ldaxr(v76);
                      while (__stlxr(v77 - 1, v76));
                      if (!v77)
                      {
                        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
                        std::__shared_weak_count::__release_weak(v75);
                      }
                    }
                    v78 = (std::__shared_weak_count *)v282.n128_u64[1];
                    if (v282.n128_u64[1])
                    {
                      v79 = (unint64_t *)(v282.n128_u64[1] + 8);
                      do
                        v80 = __ldaxr(v79);
                      while (__stlxr(v80 - 1, v79));
                      if (!v80)
                      {
                        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
                        std::__shared_weak_count::__release_weak(v78);
                      }
                    }
                    v81 = (unint64_t *)v24[1];
                    if (v81)
                    {
                      do
                      {
                        v82 = v81;
                        v81 = (unint64_t *)*v81;
                      }
                      while (v81);
                    }
                    else
                    {
                      do
                      {
                        v82 = (unint64_t *)v24[2];
                        v23 = *v82 == (_QWORD)v24;
                        v24 = v82;
                      }
                      while (!v23);
                    }
                    v24 = v82;
                  }
                  while (v82 != &v294.u64[1]);
                }
              }
              v289 = 0u;
              v290 = 0u;
              v319 = 0x800000000;
              v317 = 0x800000000;
              v84 = (pxrInternal__aapl__pxrReserved__::SdfPath *)v4[5];
              v83 = (pxrInternal__aapl__pxrReserved__::SdfPath *)v4[6];
              if (v84 == v83)
              {
                v121 = 0;
                v120 = 0;
                v122 = 8;
              }
              else
              {
                do
                {
                  if (*((_QWORD *)v84 + 2) == *v11)
                  {
                    Token = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfPath::GetToken(v84);
                    v86 = *(_QWORD *)Token;
                    v281.i64[0] = v86;
                    if ((v86 & 7) != 0)
                    {
                      v87 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
                      do
                        v88 = __ldxr(v87);
                      while (__stxr(v88 + 2, v87));
                      if ((v88 & 1) == 0)
                        v281.i64[0] &= 0xFFFFFFFFFFFFFFF8;
                    }
                    if ((*((_QWORD *)v84 + 1) & 0xFFFFFFFFFFFFFFF8) == 0)
                      pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Token);
                    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v280);
                    v282 = 0u;
                    v283 = 0u;
                    sub_20C7EA9FC(v281.i64, &v291);
                    v292 = v291;
                    v291 = 0uLL;
                    v89 = pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodePath(&v282, v292.i64);
                    sub_20C7EA9FC((uint64_t *)&v280, &v287);
                    v288 = v287;
                    v287 = 0uLL;
                    v90 = (pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodeOutputName((uint64_t)v89, v288.i64);
                    pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::Build(v90, &v293);
                    *(int64x2_t *)v310 = v293;
                    v293 = 0uLL;
                    v92 = (std::__shared_weak_count *)v288.i64[1];
                    if (v288.i64[1])
                    {
                      v93 = (unint64_t *)(v288.i64[1] + 8);
                      do
                        v94 = __ldaxr(v93);
                      while (__stlxr(v94 - 1, v93));
                      if (!v94)
                      {
                        ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
                        std::__shared_weak_count::__release_weak(v92);
                      }
                    }
                    v95 = (std::__shared_weak_count *)v287.i64[1];
                    if (v287.i64[1])
                    {
                      v96 = (unint64_t *)(v287.i64[1] + 8);
                      do
                        v97 = __ldaxr(v96);
                      while (__stlxr(v97 - 1, v96));
                      if (!v97)
                      {
                        ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
                        std::__shared_weak_count::__release_weak(v95);
                      }
                    }
                    v98 = (std::__shared_weak_count *)v292.i64[1];
                    if (v292.i64[1])
                    {
                      v99 = (unint64_t *)(v292.i64[1] + 8);
                      do
                        v100 = __ldaxr(v99);
                      while (__stlxr(v100 - 1, v99));
                      if (!v100)
                      {
                        ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
                        std::__shared_weak_count::__release_weak(v98);
                      }
                    }
                    v101 = (std::__shared_weak_count *)v291.i64[1];
                    if (v291.i64[1])
                    {
                      v102 = (unint64_t *)(v291.i64[1] + 8);
                      do
                        v103 = __ldaxr(v102);
                      while (__stlxr(v103 - 1, v102));
                      if (!v103)
                      {
                        ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
                        std::__shared_weak_count::__release_weak(v101);
                      }
                    }
                    v104 = (std::__shared_weak_count *)*((_QWORD *)&v283 + 1);
                    if (*((_QWORD *)&v283 + 1))
                    {
                      v105 = (unint64_t *)(*((_QWORD *)&v283 + 1) + 8);
                      do
                        v106 = __ldaxr(v105);
                      while (__stlxr(v106 - 1, v105));
                      if (!v106)
                      {
                        ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
                        std::__shared_weak_count::__release_weak(v104);
                      }
                    }
                    v107 = (std::__shared_weak_count *)v282.n128_u64[1];
                    if (v282.n128_u64[1])
                    {
                      v108 = (unint64_t *)(v282.n128_u64[1] + 8);
                      do
                        v109 = __ldaxr(v108);
                      while (__stlxr(v109 - 1, v108));
                      if (!v109)
                      {
                        ((void (*)(std::__shared_weak_count *))v107->__on_zero_shared)(v107);
                        std::__shared_weak_count::__release_weak(v107);
                      }
                    }
                    if ((*((_QWORD *)v84 + 3) & 0xFFFFFFFFFFFFFFF8) == 0)
                      pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v91);
                    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v282);
                    v110 = (unsigned int *)sub_20C807D90(v289.i64, (uint64_t *)&v282);
                    sub_20C808D58(v110, (__int128 *)v310);
                    if ((v282.n128_u8[0] & 7) != 0)
                    {
                      v111 = (unsigned int *)(v282.n128_u64[0] & 0xFFFFFFFFFFFFFFF8);
                      do
                        v112 = __ldxr(v111);
                      while (__stlxr(v112 - 2, v111));
                    }
                    v113 = *(std::__shared_weak_count **)&v310[8];
                    if (*(_QWORD *)&v310[8])
                    {
                      v114 = (unint64_t *)(*(_QWORD *)&v310[8] + 8);
                      do
                        v115 = __ldaxr(v114);
                      while (__stlxr(v115 - 1, v114));
                      if (!v115)
                      {
                        ((void (*)(std::__shared_weak_count *))v113->__on_zero_shared)(v113);
                        std::__shared_weak_count::__release_weak(v113);
                      }
                    }
                    if ((v280 & 7) != 0)
                    {
                      v116 = (unsigned int *)(v280 & 0xFFFFFFFFFFFFFFF8);
                      do
                        v117 = __ldxr(v116);
                      while (__stlxr(v117 - 2, v116));
                    }
                    if ((v281.i8[0] & 7) != 0)
                    {
                      v118 = (unsigned int *)(v281.i64[0] & 0xFFFFFFFFFFFFFFF8);
                      do
                        v119 = __ldxr(v118);
                      while (__stlxr(v119 - 2, v118));
                    }
                  }
                  v84 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v84 + 32);
                }
                while (v84 != v83);
                v120 = v289.i64[1];
                v121 = v289.i64[0];
                v122 = HIDWORD(v319);
              }
              v123 = 954437177 * ((unint64_t)(v120 - v121) >> 4);
              if (v122 < v123)
              {
                sub_20C808E94((uint64_t)v318, v123);
                v120 = v289.i64[1];
                v121 = v289.i64[0];
                v123 = 954437177 * ((unint64_t)(v289.i64[1] - v289.i64[0]) >> 4);
              }
              if (HIDWORD(v317) < v123)
              {
                sub_20C808DDC((unsigned int *)__p, v123);
                v120 = v289.i64[1];
                v121 = v289.i64[0];
              }
              while (v121 != v120)
              {
                sub_20C808F60((uint64_t)v318, (uint64_t *)v121);
                v124 = (_QWORD *)(v121 + 8);
                v125 = *(_DWORD *)(v121 + 140);
                v292.i32[0] = *(_DWORD *)(v121 + 136);
                if (v125 >= 9)
                  v124 = (_QWORD *)*v124;
                v293.i64[0] = (uint64_t)v124;
                sub_20C807E8C((unsigned int *)&v292, &v293, v310);
                v282 = *(__n128 *)v310;
                *(_OWORD *)v310 = 0uLL;
                v126 = sub_20C808FF4((unsigned int *)__p, &v282);
                v127 = (std::__shared_weak_count *)v282.n128_u64[1];
                if (v282.n128_u64[1])
                {
                  v128 = (unint64_t *)(v282.n128_u64[1] + 8);
                  do
                    v129 = __ldaxr(v128);
                  while (__stlxr(v129 - 1, v128));
                  if (!v129)
                  {
                    ((void (*)(std::__shared_weak_count *, __n128))v127->__on_zero_shared)(v127, v126);
                    std::__shared_weak_count::__release_weak(v127);
                  }
                }
                v130 = *(std::__shared_weak_count **)&v310[8];
                if (*(_QWORD *)&v310[8])
                {
                  v131 = (unint64_t *)(*(_QWORD *)&v310[8] + 8);
                  do
                    v132 = __ldaxr(v131);
                  while (__stlxr(v132 - 1, v131));
                  if (!v132)
                  {
                    ((void (*)(std::__shared_weak_count *, __n128))v130->__on_zero_shared)(v130, v126);
                    std::__shared_weak_count::__release_weak(v130);
                  }
                }
                v121 += 144;
              }
              v133 = pxrInternal__aapl__pxrReserved__::SdfPath::GetToken((pxrInternal__aapl__pxrReserved__::SdfPath *)v11);
              v134 = v303;
              if ((unint64_t)v303 >= v304)
              {
                v138 = sub_20BFCA068(&v302, v133);
              }
              else
              {
                v135 = *v133;
                *v303 = *v133;
                if ((v135 & 7) != 0)
                {
                  v136 = (unsigned int *)(v135 & 0xFFFFFFFFFFFFFFF8);
                  do
                    v137 = __ldxr(v136);
                  while (__stxr(v137 + 2, v136));
                  if ((v137 & 1) == 0)
                    *v134 &= 0xFFFFFFFFFFFFFFF8;
                }
                v138 = (char *)(v134 + 1);
              }
              v303 = v138;
              v285 = 0u;
              v286 = 0u;
              v283 = 0u;
              v284 = 0u;
              v282 = 0u;
              pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New((v298.i64[1] - v298.i64[0]) >> 3, (uint64_t *)v298.i64[0], (uint64_t *)v296.i64[0], &v288);
              v291 = v288;
              v288 = 0uLL;
              v139 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetParameters(&v282, v291.i64);
              if (HIDWORD(v319) >= 9)
                v140 = (uint64_t *)v318[0];
              else
                v140 = v318;
              if (HIDWORD(v317) >= 9)
                v141 = *(uint64_t **)__p;
              else
                v141 = (uint64_t *)__p;
              pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v319, v140, v141, &v281);
              v287 = v281;
              v281 = 0uLL;
              v142 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetInputConnections((uint64_t)v139, v287.i64);
              sub_20C7EA9FC(v11 + 1, &v279);
              v280 = v279;
              v279 = 0uLL;
              v143 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetNodeIdentifier(v142, (uint64_t *)&v280);
              pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::Build(v143, &v292);
              v144 = v292;
              v293 = v292;
              v292 = 0uLL;
              v145 = v300.i64[1];
              if (v300.i64[1] >= (unint64_t)v301)
              {
                v273 = v144;
                v146 = (v300.i64[1] - v300.i64[0]) >> 4;
                v147 = v146 + 1;
                if ((unint64_t)(v146 + 1) >> 60)
                  sub_20BDDF694();
                v148 = (uint64_t)&v301[-v300.i64[0]];
                if ((uint64_t)&v301[-v300.i64[0]] >> 3 > v147)
                  v147 = v148 >> 3;
                if ((unint64_t)v148 >= 0x7FFFFFFFFFFFFFF0)
                  v149 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v149 = v147;
                v312 = &v301;
                v150 = (char *)sub_20BDEA2F0((uint64_t)&v301, v149);
                v152 = &v150[16 * v146];
                *(int64x2_t *)v152 = v273;
                v293 = 0uLL;
                v153 = (_QWORD *)v300.i64[1];
                v154 = (_QWORD *)v300.i64[0];
                if (v300.i64[1] == v300.i64[0])
                {
                  v157 = vdupq_n_s64(v300.u64[1]);
                  v155 = &v150[16 * v146];
                }
                else
                {
                  v155 = &v150[16 * v146];
                  do
                  {
                    v156 = *((_OWORD *)v153 - 1);
                    v153 -= 2;
                    *((_OWORD *)v155 - 1) = v156;
                    v155 -= 16;
                    *v153 = 0;
                    v153[1] = 0;
                  }
                  while (v153 != v154);
                  v157 = v300;
                }
                v158 = v152 + 16;
                v300.i64[0] = (uint64_t)v155;
                v300.i64[1] = (uint64_t)(v152 + 16);
                *(int64x2_t *)&v310[8] = v157;
                v159 = v301;
                v301 = &v150[16 * v151];
                v311 = v159;
                *(_QWORD *)v310 = v157.i64[0];
                sub_20BDEA324((uint64_t)v310);
                v160 = (std::__shared_weak_count *)v292.i64[1];
                v300.i64[1] = (uint64_t)v158;
                if (v292.i64[1])
                {
                  v161 = (unint64_t *)(v292.i64[1] + 8);
                  do
                    v162 = __ldaxr(v161);
                  while (__stlxr(v162 - 1, v161));
                  if (!v162)
                  {
                    ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
                    std::__shared_weak_count::__release_weak(v160);
                  }
                }
              }
              else
              {
                *(int64x2_t *)v300.i64[1] = v144;
                v293 = 0uLL;
                v300.i64[1] = v145 + 16;
              }
              v163 = (std::__shared_weak_count *)*((_QWORD *)&v280 + 1);
              if (*((_QWORD *)&v280 + 1))
              {
                v164 = (unint64_t *)(*((_QWORD *)&v280 + 1) + 8);
                do
                  v165 = __ldaxr(v164);
                while (__stlxr(v165 - 1, v164));
                if (!v165)
                {
                  ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
                  std::__shared_weak_count::__release_weak(v163);
                }
              }
              v166 = (std::__shared_weak_count *)*((_QWORD *)&v279 + 1);
              if (*((_QWORD *)&v279 + 1))
              {
                v167 = (unint64_t *)(*((_QWORD *)&v279 + 1) + 8);
                do
                  v168 = __ldaxr(v167);
                while (__stlxr(v168 - 1, v167));
                if (!v168)
                {
                  ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
                  std::__shared_weak_count::__release_weak(v166);
                }
              }
              v169 = (std::__shared_weak_count *)v287.i64[1];
              if (v287.i64[1])
              {
                v170 = (unint64_t *)(v287.i64[1] + 8);
                do
                  v171 = __ldaxr(v170);
                while (__stlxr(v171 - 1, v170));
                if (!v171)
                {
                  ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
                  std::__shared_weak_count::__release_weak(v169);
                }
              }
              v172 = (std::__shared_weak_count *)v281.i64[1];
              if (v281.i64[1])
              {
                v173 = (unint64_t *)(v281.i64[1] + 8);
                do
                  v174 = __ldaxr(v173);
                while (__stlxr(v174 - 1, v173));
                if (!v174)
                {
                  ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
                  std::__shared_weak_count::__release_weak(v172);
                }
              }
              v175 = (std::__shared_weak_count *)v291.i64[1];
              if (v291.i64[1])
              {
                v176 = (unint64_t *)(v291.i64[1] + 8);
                do
                  v177 = __ldaxr(v176);
                while (__stlxr(v177 - 1, v176));
                if (!v177)
                {
                  ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
                  std::__shared_weak_count::__release_weak(v175);
                }
              }
              v178 = (std::__shared_weak_count *)v288.i64[1];
              if (v288.i64[1])
              {
                v179 = (unint64_t *)(v288.i64[1] + 8);
                do
                  v180 = __ldaxr(v179);
                while (__stlxr(v180 - 1, v179));
                if (!v180)
                {
                  ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
                  std::__shared_weak_count::__release_weak(v178);
                }
              }
              v181 = (std::__shared_weak_count *)*((_QWORD *)&v286 + 1);
              if (*((_QWORD *)&v286 + 1))
              {
                v182 = (unint64_t *)(*((_QWORD *)&v286 + 1) + 8);
                do
                  v183 = __ldaxr(v182);
                while (__stlxr(v183 - 1, v182));
                if (!v183)
                {
                  ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
                  std::__shared_weak_count::__release_weak(v181);
                }
              }
              v184 = (std::__shared_weak_count *)*((_QWORD *)&v285 + 1);
              if (*((_QWORD *)&v285 + 1))
              {
                v185 = (unint64_t *)(*((_QWORD *)&v285 + 1) + 8);
                do
                  v186 = __ldaxr(v185);
                while (__stlxr(v186 - 1, v185));
                if (!v186)
                {
                  ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
                  std::__shared_weak_count::__release_weak(v184);
                }
              }
              v187 = (std::__shared_weak_count *)*((_QWORD *)&v284 + 1);
              if (*((_QWORD *)&v284 + 1))
              {
                v188 = (unint64_t *)(*((_QWORD *)&v284 + 1) + 8);
                do
                  v189 = __ldaxr(v188);
                while (__stlxr(v189 - 1, v188));
                if (!v189)
                {
                  ((void (*)(std::__shared_weak_count *))v187->__on_zero_shared)(v187);
                  std::__shared_weak_count::__release_weak(v187);
                }
              }
              v190 = (std::__shared_weak_count *)*((_QWORD *)&v283 + 1);
              if (*((_QWORD *)&v283 + 1))
              {
                v191 = (unint64_t *)(*((_QWORD *)&v283 + 1) + 8);
                do
                  v192 = __ldaxr(v191);
                while (__stlxr(v192 - 1, v191));
                if (!v192)
                {
                  ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
                  std::__shared_weak_count::__release_weak(v190);
                }
              }
              v193 = (std::__shared_weak_count *)v282.n128_u64[1];
              if (v282.n128_u64[1])
              {
                v194 = (unint64_t *)(v282.n128_u64[1] + 8);
                do
                  v195 = __ldaxr(v194);
                while (__stlxr(v195 - 1, v194));
                if (!v195)
                {
                  ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
                  std::__shared_weak_count::__release_weak(v193);
                }
              }
              sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)__p);
              sub_20C809198((uint64_t)v318);
              v196 = *((_QWORD *)&v290 + 1);
              *((_QWORD *)&v290 + 1) = 0;
              if (v196)
              {
                v197 = (void *)sub_20BF20BCC(v196);
                operator delete(v197);
              }
              *(_QWORD *)__p = &v289;
              sub_20C808230((void ***)__p);
              sub_20C809218((uint64_t)&v294, (_QWORD *)v294.i64[1]);
              *(_QWORD *)__p = &v296;
              sub_20BDE9EB0((void ***)__p);
              *(_QWORD *)__p = &v298;
              sub_20BEEB2B8((void ***)__p);
              v11 += 5;
            }
            while (v11 != v271);
            v11 = v4[9];
          }
          v282 = 0u;
          v283 = 0u;
          v198 = pxrInternal__aapl__pxrReserved__::SdfPath::GetToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(v11 - 5));
          sub_20C7EA9FC(v198, &v298);
          v289 = v298;
          v298 = 0uLL;
          v199 = pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodePath(&v282, v289.i64);
          sub_20C7EA9FC(v308 - 1, &v294);
          v296 = v294;
          v294 = 0uLL;
          v200 = (pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodeOutputName((uint64_t)v199, v296.i64);
          pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::Build(v200, v310);
          v201 = *(_OWORD *)v310;
          *(_OWORD *)v318 = *(_OWORD *)v310;
          *(_OWORD *)v310 = 0uLL;
          v202 = v305.i64[1];
          if (v305.i64[1] >= (unint64_t)v306)
          {
            v274 = v201;
            v203 = (v305.i64[1] - v305.i64[0]) >> 4;
            v204 = v203 + 1;
            if ((unint64_t)(v203 + 1) >> 60)
              sub_20BDDF694();
            v205 = (uint64_t)&v306[-v305.i64[0]];
            if ((uint64_t)&v306[-v305.i64[0]] >> 3 > v204)
              v204 = v205 >> 3;
            if ((unint64_t)v205 >= 0x7FFFFFFFFFFFFFF0)
              v206 = 0xFFFFFFFFFFFFFFFLL;
            else
              v206 = v204;
            *(_QWORD *)&v316 = &v306;
            v207 = (char *)sub_20BDEA2F0((uint64_t)&v306, v206);
            v209 = &v207[16 * v203];
            *(_OWORD *)v209 = v274;
            *(_OWORD *)v318 = 0uLL;
            v210 = (_QWORD *)v305.i64[1];
            v211 = (_QWORD *)v305.i64[0];
            if (v305.i64[1] == v305.i64[0])
            {
              v214 = vdupq_n_s64(v305.u64[1]);
              v212 = &v207[16 * v203];
            }
            else
            {
              v212 = &v207[16 * v203];
              do
              {
                v213 = *((_OWORD *)v210 - 1);
                v210 -= 2;
                *((_OWORD *)v212 - 1) = v213;
                v212 -= 16;
                *v210 = 0;
                v210[1] = 0;
              }
              while (v210 != v211);
              v214 = v305;
            }
            v215 = v209 + 16;
            v305.i64[0] = (uint64_t)v212;
            v305.i64[1] = (uint64_t)(v209 + 16);
            *(int64x2_t *)&__p[8] = v214;
            v216 = v306;
            v306 = &v207[16 * v208];
            *(_QWORD *)&__p[24] = v216;
            *(_QWORD *)__p = v214.i64[0];
            sub_20BDEA324((uint64_t)__p);
            v217 = *(std::__shared_weak_count **)&v310[8];
            v305.i64[1] = (uint64_t)v215;
            if (*(_QWORD *)&v310[8])
            {
              v218 = (unint64_t *)(*(_QWORD *)&v310[8] + 8);
              do
                v219 = __ldaxr(v218);
              while (__stlxr(v219 - 1, v218));
              if (!v219)
              {
                ((void (*)(std::__shared_weak_count *))v217->__on_zero_shared)(v217);
                std::__shared_weak_count::__release_weak(v217);
              }
            }
          }
          else
          {
            *(_OWORD *)v305.i64[1] = v201;
            *(_OWORD *)v318 = 0uLL;
            v305.i64[1] = v202 + 16;
          }
          v220 = (std::__shared_weak_count *)v296.i64[1];
          if (v296.i64[1])
          {
            v221 = (unint64_t *)(v296.i64[1] + 8);
            do
              v222 = __ldaxr(v221);
            while (__stlxr(v222 - 1, v221));
            if (!v222)
            {
              ((void (*)(std::__shared_weak_count *))v220->__on_zero_shared)(v220);
              std::__shared_weak_count::__release_weak(v220);
            }
          }
          v223 = (std::__shared_weak_count *)v294.i64[1];
          if (v294.i64[1])
          {
            v224 = (unint64_t *)(v294.i64[1] + 8);
            do
              v225 = __ldaxr(v224);
            while (__stlxr(v225 - 1, v224));
            if (!v225)
            {
              ((void (*)(std::__shared_weak_count *))v223->__on_zero_shared)(v223);
              std::__shared_weak_count::__release_weak(v223);
            }
          }
          v226 = (std::__shared_weak_count *)v289.i64[1];
          if (v289.i64[1])
          {
            v227 = (unint64_t *)(v289.i64[1] + 8);
            do
              v228 = __ldaxr(v227);
            while (__stlxr(v228 - 1, v227));
            if (!v228)
            {
              ((void (*)(std::__shared_weak_count *))v226->__on_zero_shared)(v226);
              std::__shared_weak_count::__release_weak(v226);
            }
          }
          v229 = (std::__shared_weak_count *)v298.i64[1];
          if (v298.i64[1])
          {
            v230 = (unint64_t *)(v298.i64[1] + 8);
            do
              v231 = __ldaxr(v230);
            while (__stlxr(v231 - 1, v230));
            if (!v231)
            {
              ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
              std::__shared_weak_count::__release_weak(v229);
            }
          }
          v232 = (std::__shared_weak_count *)*((_QWORD *)&v283 + 1);
          if (*((_QWORD *)&v283 + 1))
          {
            v233 = (unint64_t *)(*((_QWORD *)&v283 + 1) + 8);
            do
              v234 = __ldaxr(v233);
            while (__stlxr(v234 - 1, v233));
            if (!v234)
            {
              ((void (*)(std::__shared_weak_count *))v232->__on_zero_shared)(v232);
              std::__shared_weak_count::__release_weak(v232);
            }
          }
          v235 = (std::__shared_weak_count *)v282.n128_u64[1];
          if (v282.n128_u64[1])
          {
            v236 = (unint64_t *)(v282.n128_u64[1] + 8);
            do
              v237 = __ldaxr(v236);
            while (__stlxr(v237 - 1, v236));
            if (!v237)
            {
              ((void (*)(std::__shared_weak_count *))v235->__on_zero_shared)(v235);
              std::__shared_weak_count::__release_weak(v235);
            }
          }
        }
        v238 = v4[1];
        if (v238)
        {
          do
          {
            v239 = (_QWORD **)v238;
            v238 = (_QWORD *)*v238;
          }
          while (v238);
        }
        else
        {
          do
          {
            v239 = (_QWORD **)v4[2];
            v23 = *v239 == v4;
            v4 = v239;
          }
          while (!v23);
        }
        v4 = v239;
      }
      while (v239 != v277);
      v240 = (uint64_t *)v302;
      v241 = v303;
      v242 = (uint64_t *)v300.i64[0];
    }
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v241 - v240, v240, v242, __p);
    v282 = *(__n128 *)__p;
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(((char *)v308 - v307) >> 3, (uint64_t *)v307, (uint64_t *)v305.i64[0], __p);
    *(_OWORD *)v318 = *(_OWORD *)__p;
    v316 = 0u;
    memset(__p, 0, sizeof(__p));
    v243 = pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::Builder::SetNodes(__p, (uint64_t *)&v282);
    v244 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::Builder::SetTerminals((uint64_t)v243, v318);
    pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::Builder::Build(v244, &v289);
    *(int64x2_t *)v310 = v289;
    v289 = 0uLL;
    v245 = (std::__shared_weak_count *)*((_QWORD *)&v316 + 1);
    if (*((_QWORD *)&v316 + 1))
    {
      v246 = (unint64_t *)(*((_QWORD *)&v316 + 1) + 8);
      do
        v247 = __ldaxr(v246);
      while (__stlxr(v247 - 1, v246));
      if (!v247)
      {
        ((void (*)(std::__shared_weak_count *))v245->__on_zero_shared)(v245);
        std::__shared_weak_count::__release_weak(v245);
      }
    }
    v248 = *(std::__shared_weak_count **)&__p[24];
    if (*(_QWORD *)&__p[24])
    {
      v249 = (unint64_t *)(*(_QWORD *)&__p[24] + 8);
      do
        v250 = __ldaxr(v249);
      while (__stlxr(v250 - 1, v249));
      if (!v250)
      {
        ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
        std::__shared_weak_count::__release_weak(v248);
      }
    }
    v251 = *(std::__shared_weak_count **)&__p[8];
    if (*(_QWORD *)&__p[8])
    {
      v252 = (unint64_t *)(*(_QWORD *)&__p[8] + 8);
      do
        v253 = __ldaxr(v252);
      while (__stlxr(v253 - 1, v252));
      if (!v253)
      {
        ((void (*)(std::__shared_weak_count *))v251->__on_zero_shared)(v251);
        std::__shared_weak_count::__release_weak(v251);
      }
    }
    v254 = (pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
    if (!v254)
      v254 = sub_20C80A330(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
    v255 = *((_QWORD *)v254 + 1);
    v289.i64[0] = v255;
    if ((v255 & 7) != 0)
    {
      v256 = (unsigned int *)(v255 & 0xFFFFFFFFFFFFFFF8);
      do
        v257 = __ldxr(v256);
      while (__stxr(v257 + 2, v256));
      if ((v257 & 1) == 0)
        v289.i64[0] = (uint64_t)v256;
    }
    pxrInternal__aapl__pxrReserved__::HdMaterialSchema::BuildRetained(1uLL, v289.i64, (uint64_t *)v310, __p);
    v258 = *(_OWORD *)__p;
    *(_QWORD *)&__p[8] = 0;
    *(_QWORD *)__p = 0;
    v275 = v258;
    if ((v289.i8[0] & 7) != 0)
    {
      v259 = (unsigned int *)(v289.i64[0] & 0xFFFFFFFFFFFFFFF8);
      do
        v260 = __ldxr(v259);
      while (__stlxr(v260 - 2, v259));
    }
    v261 = *(std::__shared_weak_count **)&v310[8];
    if (*(_QWORD *)&v310[8])
    {
      v262 = (unint64_t *)(*(_QWORD *)&v310[8] + 8);
      do
        v263 = __ldaxr(v262);
      while (__stlxr(v263 - 1, v262));
      if (!v263)
      {
        ((void (*)(std::__shared_weak_count *))v261->__on_zero_shared)(v261);
        std::__shared_weak_count::__release_weak(v261);
      }
    }
    v264 = (std::__shared_weak_count *)v318[1];
    if (v318[1])
    {
      v265 = (unint64_t *)(v318[1] + 8);
      do
        v266 = __ldaxr(v265);
      while (__stlxr(v266 - 1, v265));
      if (!v266)
      {
        ((void (*)(std::__shared_weak_count *))v264->__on_zero_shared)(v264);
        std::__shared_weak_count::__release_weak(v264);
      }
    }
    v267 = (std::__shared_weak_count *)v282.n128_u64[1];
    if (v282.n128_u64[1])
    {
      v268 = (unint64_t *)(v282.n128_u64[1] + 8);
      do
        v269 = __ldaxr(v268);
      while (__stlxr(v269 - 1, v268));
      if (!v269)
      {
        ((void (*)(std::__shared_weak_count *))v267->__on_zero_shared)(v267);
        std::__shared_weak_count::__release_weak(v267);
      }
    }
    *(_QWORD *)__p = &v300;
    sub_20BDE9EB0((void ***)__p);
    *(_QWORD *)__p = &v302;
    sub_20BEEB2B8((void ***)__p);
    *(_QWORD *)__p = &v305;
    sub_20BDE9EB0((void ***)__p);
    *(_QWORD *)__p = &v307;
    sub_20BEEB2B8((void ***)__p);
    *(_OWORD *)a2 = v275;
    *(_QWORD *)__p = v278;
    sub_20BFD6F90((void ***)__p);
    sub_20C807B8C((uint64_t)&v276, v277[0]);
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  return sub_20BF4C2D8((uint64_t)&v313);
}

void sub_20C801704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;
  char a70;
  uint64_t v70;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&STACK[0x230]);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v70 - 192));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a31);
  a31 = (uint64_t)&a67;
  sub_20BDE9EB0((void ***)&a31);
  a31 = (uint64_t)&a70;
  sub_20BEEB2B8((void ***)&a31);
  a31 = (uint64_t)&STACK[0x200];
  sub_20BDE9EB0((void ***)&a31);
  a31 = (uint64_t)&STACK[0x218];
  sub_20BEEB2B8((void ***)&a31);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a17);
  sub_20C801CE4((uint64_t)&a19);
  sub_20BF4C2D8((uint64_t)&STACK[0x260]);
  _Unwind_Resume(a1);
}

uint64_t sub_20C801C6C(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CB0F021 & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C54D0B0);
}

uint64_t sub_20C801CE4(uint64_t a1)
{
  void **v3;

  v3 = (void **)(a1 + 24);
  sub_20BFD6F90(&v3);
  sub_20C807B8C(a1, *(_QWORD **)(a1 + 8));
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetIntegratorDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v5;
  int v6;
  __int128 v7;
  uint64_t *v8;
  unsigned int *v9;
  unsigned int v10;
  _QWORD **v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  char *v17;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  __int128 v31;
  int64x2_t v32;
  _OWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD **v51;
  BOOL v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::Builder *v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  int64x2_t v116;
  _QWORD v117[2];
  char *v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD **v122;
  _QWORD *v123[2];
  uint64_t v124[3];
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  v3 = *((_QWORD *)this + 3);
  v4 = (char *)this + 8;
  v5 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  if (!v5)
    v5 = sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  (*(void (**)(uint64_t **__return_ptr, uint64_t, char *, uint64_t))(*(_QWORD *)v3 + 120))(&v125, v3, v4, (uint64_t)v5 + 8);
  v6 = sub_20C80F118((pxrInternal__aapl__pxrReserved__::VtValue *)&v125);
  v7 = 0uLL;
  if (v6)
  {
    if ((v126 & 4) != 0)
      v8 = (uint64_t *)(*(uint64_t (**)(uint64_t **, __n128))((v126 & 0xFFFFFFFFFFFFFFF8) + 168))(&v125, (__n128)0);
    else
      v8 = v125;
    v121 = *v8;
    if ((v121 & 7) != 0)
    {
      v9 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 2, v9));
      if ((v10 & 1) == 0)
        v121 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C807718((uint64_t *)&v122, (uint64_t)(v8 + 1));
    sub_20C80F1E8(v124, (uint64_t)(v8 + 4));
    v118 = 0;
    v119 = 0;
    v120 = 0;
    v116 = 0uLL;
    v117[0] = 0;
    v11 = v122;
    if (v122 == v123)
    {
      v55 = 0;
      v53 = 0;
      v54 = 0;
    }
    else
    {
      do
      {
        v12 = (uint64_t *)(v11 + 4);
        v13 = v119;
        if ((unint64_t)v119 >= v120)
        {
          v17 = sub_20BFCA068(&v118, v12);
        }
        else
        {
          v14 = *v12;
          *v119 = *v12;
          if ((v14 & 7) != 0)
          {
            v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
            do
              v16 = __ldxr(v15);
            while (__stxr(v16 + 2, v15));
            if ((v16 & 1) == 0)
              *v13 &= 0xFFFFFFFFFFFFFFF8;
          }
          v17 = (char *)(v13 + 1);
        }
        v119 = v17;
        v112 = 0u;
        v113 = 0u;
        sub_20C807D38(v11 + 5, &v110);
        v111 = v110;
        v110 = 0uLL;
        v18 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetValue(&v112, (uint64_t *)&v111);
        pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::Build(v18, &v114);
        v19 = v114;
        v115 = v114;
        v114 = 0uLL;
        v20 = v116.i64[1];
        if (v116.i64[1] >= v117[0])
        {
          v102 = v19;
          v21 = (v116.i64[1] - v116.i64[0]) >> 4;
          v22 = v21 + 1;
          if ((unint64_t)(v21 + 1) >> 60)
            sub_20BDDF694();
          v23 = v117[0] - v116.i64[0];
          if ((v117[0] - v116.i64[0]) >> 3 > v22)
            v22 = v23 >> 3;
          if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF0)
            v24 = 0xFFFFFFFFFFFFFFFLL;
          else
            v24 = v22;
          *(_QWORD *)&v107 = v117;
          v25 = (char *)sub_20BDEA2F0((uint64_t)v117, v24);
          v27 = &v25[16 * v21];
          *(_OWORD *)v27 = v102;
          v115 = 0uLL;
          v28 = (_QWORD *)v116.i64[1];
          v29 = (_QWORD *)v116.i64[0];
          if (v116.i64[1] == v116.i64[0])
          {
            v32 = vdupq_n_s64(v116.u64[1]);
            v30 = &v25[16 * v21];
          }
          else
          {
            v30 = &v25[16 * v21];
            do
            {
              v31 = *((_OWORD *)v28 - 1);
              v28 -= 2;
              *((_OWORD *)v30 - 1) = v31;
              v30 -= 16;
              *v28 = 0;
              v28[1] = 0;
            }
            while (v28 != v29);
            v32 = v116;
          }
          v33 = v27 + 16;
          v116.i64[0] = (uint64_t)v30;
          v116.i64[1] = (uint64_t)(v27 + 16);
          *(int64x2_t *)((char *)v106 + 8) = v32;
          v34 = v117[0];
          v117[0] = &v25[16 * v26];
          *((_QWORD *)&v106[1] + 1) = v34;
          *(_QWORD *)&v106[0] = v32.i64[0];
          sub_20BDEA324((uint64_t)v106);
          v35 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
          v116.i64[1] = (uint64_t)v33;
          if (*((_QWORD *)&v114 + 1))
          {
            v36 = (unint64_t *)(*((_QWORD *)&v114 + 1) + 8);
            do
              v37 = __ldaxr(v36);
            while (__stlxr(v37 - 1, v36));
            if (!v37)
            {
              ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
        }
        else
        {
          *(_OWORD *)v116.i64[1] = v19;
          v115 = 0uLL;
          v116.i64[1] = v20 + 16;
        }
        v38 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
        if (*((_QWORD *)&v111 + 1))
        {
          v39 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v41 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
        if (*((_QWORD *)&v110 + 1))
        {
          v42 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
          do
            v43 = __ldaxr(v42);
          while (__stlxr(v43 - 1, v42));
          if (!v43)
          {
            ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
            std::__shared_weak_count::__release_weak(v41);
          }
        }
        v44 = (std::__shared_weak_count *)*((_QWORD *)&v113 + 1);
        if (*((_QWORD *)&v113 + 1))
        {
          v45 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        v47 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
        if (*((_QWORD *)&v112 + 1))
        {
          v48 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        v50 = v11[1];
        if (v50)
        {
          do
          {
            v51 = (_QWORD **)v50;
            v50 = (_QWORD *)*v50;
          }
          while (v50);
        }
        else
        {
          do
          {
            v51 = (_QWORD **)v11[2];
            v52 = *v51 == v11;
            v11 = v51;
          }
          while (!v52);
        }
        v11 = v51;
      }
      while (v51 != v123);
      v53 = (uint64_t *)v118;
      v54 = v119;
      v55 = (uint64_t *)v116.i64[0];
    }
    v108 = 0u;
    v109 = 0u;
    v107 = 0u;
    memset(v106, 0, sizeof(v106));
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v54 - v53, v53, v55, &v114);
    v115 = v114;
    v114 = 0uLL;
    v56 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetParameters(v106, (uint64_t *)&v115);
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(&v110);
    v111 = v110;
    v110 = 0uLL;
    v57 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetInputConnections((uint64_t)v56, (uint64_t *)&v111);
    sub_20C7EA9FC(&v121, &v104);
    v105 = v104;
    v104 = 0uLL;
    v58 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetNodeIdentifier(v57, (uint64_t *)&v105);
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::Build(v58, &v112);
    v59 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
    if (*((_QWORD *)&v105 + 1))
    {
      v60 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v61 = __ldaxr(v60);
      while (__stlxr(v61 - 1, v60));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    v62 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
    if (*((_QWORD *)&v104 + 1))
    {
      v63 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
      do
        v64 = __ldaxr(v63);
      while (__stlxr(v64 - 1, v63));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
      }
    }
    v65 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
    if (*((_QWORD *)&v111 + 1))
    {
      v66 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
      do
        v67 = __ldaxr(v66);
      while (__stlxr(v67 - 1, v66));
      if (!v67)
      {
        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
        std::__shared_weak_count::__release_weak(v65);
      }
    }
    v68 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
    if (*((_QWORD *)&v110 + 1))
    {
      v69 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
      do
        v70 = __ldaxr(v69);
      while (__stlxr(v70 - 1, v69));
      if (!v70)
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
    }
    v71 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
    if (*((_QWORD *)&v115 + 1))
    {
      v72 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
      do
        v73 = __ldaxr(v72);
      while (__stlxr(v73 - 1, v72));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
    v74 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
    if (*((_QWORD *)&v114 + 1))
    {
      v75 = (unint64_t *)(*((_QWORD *)&v114 + 1) + 8);
      do
        v76 = __ldaxr(v75);
      while (__stlxr(v76 - 1, v75));
      if (!v76)
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
    }
    v77 = (std::__shared_weak_count *)*((_QWORD *)&v109 + 1);
    if (*((_QWORD *)&v109 + 1))
    {
      v78 = (unint64_t *)(*((_QWORD *)&v109 + 1) + 8);
      do
        v79 = __ldaxr(v78);
      while (__stlxr(v79 - 1, v78));
      if (!v79)
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
    }
    v80 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
    if (*((_QWORD *)&v108 + 1))
    {
      v81 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
      do
        v82 = __ldaxr(v81);
      while (__stlxr(v82 - 1, v81));
      if (!v82)
      {
        ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
        std::__shared_weak_count::__release_weak(v80);
      }
    }
    v83 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
    if (*((_QWORD *)&v107 + 1))
    {
      v84 = (unint64_t *)(*((_QWORD *)&v107 + 1) + 8);
      do
        v85 = __ldaxr(v84);
      while (__stlxr(v85 - 1, v84));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
    v86 = (std::__shared_weak_count *)*((_QWORD *)&v106[1] + 1);
    if (*((_QWORD *)&v106[1] + 1))
    {
      v87 = (unint64_t *)(*((_QWORD *)&v106[1] + 1) + 8);
      do
        v88 = __ldaxr(v87);
      while (__stlxr(v88 - 1, v87));
      if (!v88)
      {
        ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
        std::__shared_weak_count::__release_weak(v86);
      }
    }
    v89 = (std::__shared_weak_count *)*((_QWORD *)&v106[0] + 1);
    if (*((_QWORD *)&v106[0] + 1))
    {
      v90 = (unint64_t *)(*((_QWORD *)&v106[0] + 1) + 8);
      do
        v91 = __ldaxr(v90);
      while (__stlxr(v91 - 1, v90));
      if (!v91)
      {
        ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
        std::__shared_weak_count::__release_weak(v89);
      }
    }
    v106[0] = 0uLL;
    v92 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::Builder::SetResource(v106, (uint64_t *)&v112);
    pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::Builder::Build((uint64_t *)&v103, v92);
    v93 = (std::__shared_weak_count *)*((_QWORD *)&v106[0] + 1);
    if (*((_QWORD *)&v106[0] + 1))
    {
      v94 = (unint64_t *)(*((_QWORD *)&v106[0] + 1) + 8);
      do
        v95 = __ldaxr(v94);
      while (__stlxr(v95 - 1, v94));
      if (!v95)
      {
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
      }
    }
    v96 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
    if (*((_QWORD *)&v112 + 1))
    {
      v97 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
      do
        v98 = __ldaxr(v97);
      while (__stlxr(v98 - 1, v97));
      if (!v98)
      {
        ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
        std::__shared_weak_count::__release_weak(v96);
      }
    }
    *(_QWORD *)&v106[0] = &v116;
    sub_20BDE9EB0((void ***)v106);
    *(_QWORD *)&v106[0] = &v118;
    sub_20BEEB2B8((void ***)v106);
    sub_20C80F798((uint64_t)v124, (char *)v124[1]);
    sub_20C3A3BA4((uint64_t)&v122, v123[0]);
    if ((v121 & 7) != 0)
    {
      v99 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
      do
        v100 = __ldxr(v99);
      while (__stlxr(v100 - 2, v99));
    }
    v7 = v103;
  }
  *a2 = v7;
  v103 = 0uLL;
  return sub_20BF4C2D8((uint64_t)&v125);
}

void sub_20C80255C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,void **a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  uint64_t v37;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a29);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a27);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a37);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a35);
  sub_20C807EEC((uint64_t)&a17);
  a31 = (void **)(v37 - 224);
  sub_20BDE9EB0(&a31);
  a31 = (void **)(v37 - 192);
  sub_20BEEB2B8(&a31);
  sub_20C80F190(v37 - 168);
  sub_20BF4C2D8(v37 - 112);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetSampleFilterDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *v5;
  int v6;
  __int128 v7;
  uint64_t *v8;
  unsigned int *v9;
  unsigned int v10;
  _QWORD **v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  char *v17;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  __int128 v31;
  int64x2_t v32;
  _OWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD **v51;
  BOOL v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema::Builder *v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  int64x2_t v116;
  _QWORD v117[2];
  char *v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD **v122;
  _QWORD *v123[2];
  uint64_t v124[3];
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  v3 = *((_QWORD *)this + 3);
  v4 = (char *)this + 8;
  v5 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens);
  if (!v5)
    v5 = sub_20C80A5D8(&pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens);
  (*(void (**)(uint64_t **__return_ptr, uint64_t, char *, uint64_t))(*(_QWORD *)v3 + 120))(&v125, v3, v4, (uint64_t)v5 + 8);
  v6 = sub_20C80F118((pxrInternal__aapl__pxrReserved__::VtValue *)&v125);
  v7 = 0uLL;
  if (v6)
  {
    if ((v126 & 4) != 0)
      v8 = (uint64_t *)(*(uint64_t (**)(uint64_t **, __n128))((v126 & 0xFFFFFFFFFFFFFFF8) + 168))(&v125, (__n128)0);
    else
      v8 = v125;
    v121 = *v8;
    if ((v121 & 7) != 0)
    {
      v9 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 2, v9));
      if ((v10 & 1) == 0)
        v121 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C807718((uint64_t *)&v122, (uint64_t)(v8 + 1));
    sub_20C80F1E8(v124, (uint64_t)(v8 + 4));
    v118 = 0;
    v119 = 0;
    v120 = 0;
    v116 = 0uLL;
    v117[0] = 0;
    v11 = v122;
    if (v122 == v123)
    {
      v55 = 0;
      v53 = 0;
      v54 = 0;
    }
    else
    {
      do
      {
        v12 = (uint64_t *)(v11 + 4);
        v13 = v119;
        if ((unint64_t)v119 >= v120)
        {
          v17 = sub_20BFCA068(&v118, v12);
        }
        else
        {
          v14 = *v12;
          *v119 = *v12;
          if ((v14 & 7) != 0)
          {
            v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
            do
              v16 = __ldxr(v15);
            while (__stxr(v16 + 2, v15));
            if ((v16 & 1) == 0)
              *v13 &= 0xFFFFFFFFFFFFFFF8;
          }
          v17 = (char *)(v13 + 1);
        }
        v119 = v17;
        v112 = 0u;
        v113 = 0u;
        sub_20C807D38(v11 + 5, &v110);
        v111 = v110;
        v110 = 0uLL;
        v18 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetValue(&v112, (uint64_t *)&v111);
        pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::Build(v18, &v114);
        v19 = v114;
        v115 = v114;
        v114 = 0uLL;
        v20 = v116.i64[1];
        if (v116.i64[1] >= v117[0])
        {
          v102 = v19;
          v21 = (v116.i64[1] - v116.i64[0]) >> 4;
          v22 = v21 + 1;
          if ((unint64_t)(v21 + 1) >> 60)
            sub_20BDDF694();
          v23 = v117[0] - v116.i64[0];
          if ((v117[0] - v116.i64[0]) >> 3 > v22)
            v22 = v23 >> 3;
          if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF0)
            v24 = 0xFFFFFFFFFFFFFFFLL;
          else
            v24 = v22;
          *(_QWORD *)&v107 = v117;
          v25 = (char *)sub_20BDEA2F0((uint64_t)v117, v24);
          v27 = &v25[16 * v21];
          *(_OWORD *)v27 = v102;
          v115 = 0uLL;
          v28 = (_QWORD *)v116.i64[1];
          v29 = (_QWORD *)v116.i64[0];
          if (v116.i64[1] == v116.i64[0])
          {
            v32 = vdupq_n_s64(v116.u64[1]);
            v30 = &v25[16 * v21];
          }
          else
          {
            v30 = &v25[16 * v21];
            do
            {
              v31 = *((_OWORD *)v28 - 1);
              v28 -= 2;
              *((_OWORD *)v30 - 1) = v31;
              v30 -= 16;
              *v28 = 0;
              v28[1] = 0;
            }
            while (v28 != v29);
            v32 = v116;
          }
          v33 = v27 + 16;
          v116.i64[0] = (uint64_t)v30;
          v116.i64[1] = (uint64_t)(v27 + 16);
          *(int64x2_t *)((char *)v106 + 8) = v32;
          v34 = v117[0];
          v117[0] = &v25[16 * v26];
          *((_QWORD *)&v106[1] + 1) = v34;
          *(_QWORD *)&v106[0] = v32.i64[0];
          sub_20BDEA324((uint64_t)v106);
          v35 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
          v116.i64[1] = (uint64_t)v33;
          if (*((_QWORD *)&v114 + 1))
          {
            v36 = (unint64_t *)(*((_QWORD *)&v114 + 1) + 8);
            do
              v37 = __ldaxr(v36);
            while (__stlxr(v37 - 1, v36));
            if (!v37)
            {
              ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
        }
        else
        {
          *(_OWORD *)v116.i64[1] = v19;
          v115 = 0uLL;
          v116.i64[1] = v20 + 16;
        }
        v38 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
        if (*((_QWORD *)&v111 + 1))
        {
          v39 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v41 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
        if (*((_QWORD *)&v110 + 1))
        {
          v42 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
          do
            v43 = __ldaxr(v42);
          while (__stlxr(v43 - 1, v42));
          if (!v43)
          {
            ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
            std::__shared_weak_count::__release_weak(v41);
          }
        }
        v44 = (std::__shared_weak_count *)*((_QWORD *)&v113 + 1);
        if (*((_QWORD *)&v113 + 1))
        {
          v45 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        v47 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
        if (*((_QWORD *)&v112 + 1))
        {
          v48 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        v50 = v11[1];
        if (v50)
        {
          do
          {
            v51 = (_QWORD **)v50;
            v50 = (_QWORD *)*v50;
          }
          while (v50);
        }
        else
        {
          do
          {
            v51 = (_QWORD **)v11[2];
            v52 = *v51 == v11;
            v11 = v51;
          }
          while (!v52);
        }
        v11 = v51;
      }
      while (v51 != v123);
      v53 = (uint64_t *)v118;
      v54 = v119;
      v55 = (uint64_t *)v116.i64[0];
    }
    v108 = 0u;
    v109 = 0u;
    v107 = 0u;
    memset(v106, 0, sizeof(v106));
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v54 - v53, v53, v55, &v114);
    v115 = v114;
    v114 = 0uLL;
    v56 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetParameters(v106, (uint64_t *)&v115);
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(&v110);
    v111 = v110;
    v110 = 0uLL;
    v57 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetInputConnections((uint64_t)v56, (uint64_t *)&v111);
    sub_20C7EA9FC(&v121, &v104);
    v105 = v104;
    v104 = 0uLL;
    v58 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetNodeIdentifier(v57, (uint64_t *)&v105);
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::Build(v58, &v112);
    v59 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
    if (*((_QWORD *)&v105 + 1))
    {
      v60 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v61 = __ldaxr(v60);
      while (__stlxr(v61 - 1, v60));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    v62 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
    if (*((_QWORD *)&v104 + 1))
    {
      v63 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
      do
        v64 = __ldaxr(v63);
      while (__stlxr(v64 - 1, v63));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
      }
    }
    v65 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
    if (*((_QWORD *)&v111 + 1))
    {
      v66 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
      do
        v67 = __ldaxr(v66);
      while (__stlxr(v67 - 1, v66));
      if (!v67)
      {
        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
        std::__shared_weak_count::__release_weak(v65);
      }
    }
    v68 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
    if (*((_QWORD *)&v110 + 1))
    {
      v69 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
      do
        v70 = __ldaxr(v69);
      while (__stlxr(v70 - 1, v69));
      if (!v70)
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
    }
    v71 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
    if (*((_QWORD *)&v115 + 1))
    {
      v72 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
      do
        v73 = __ldaxr(v72);
      while (__stlxr(v73 - 1, v72));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
    v74 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
    if (*((_QWORD *)&v114 + 1))
    {
      v75 = (unint64_t *)(*((_QWORD *)&v114 + 1) + 8);
      do
        v76 = __ldaxr(v75);
      while (__stlxr(v76 - 1, v75));
      if (!v76)
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
    }
    v77 = (std::__shared_weak_count *)*((_QWORD *)&v109 + 1);
    if (*((_QWORD *)&v109 + 1))
    {
      v78 = (unint64_t *)(*((_QWORD *)&v109 + 1) + 8);
      do
        v79 = __ldaxr(v78);
      while (__stlxr(v79 - 1, v78));
      if (!v79)
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
    }
    v80 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
    if (*((_QWORD *)&v108 + 1))
    {
      v81 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
      do
        v82 = __ldaxr(v81);
      while (__stlxr(v82 - 1, v81));
      if (!v82)
      {
        ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
        std::__shared_weak_count::__release_weak(v80);
      }
    }
    v83 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
    if (*((_QWORD *)&v107 + 1))
    {
      v84 = (unint64_t *)(*((_QWORD *)&v107 + 1) + 8);
      do
        v85 = __ldaxr(v84);
      while (__stlxr(v85 - 1, v84));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
    v86 = (std::__shared_weak_count *)*((_QWORD *)&v106[1] + 1);
    if (*((_QWORD *)&v106[1] + 1))
    {
      v87 = (unint64_t *)(*((_QWORD *)&v106[1] + 1) + 8);
      do
        v88 = __ldaxr(v87);
      while (__stlxr(v88 - 1, v87));
      if (!v88)
      {
        ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
        std::__shared_weak_count::__release_weak(v86);
      }
    }
    v89 = (std::__shared_weak_count *)*((_QWORD *)&v106[0] + 1);
    if (*((_QWORD *)&v106[0] + 1))
    {
      v90 = (unint64_t *)(*((_QWORD *)&v106[0] + 1) + 8);
      do
        v91 = __ldaxr(v90);
      while (__stlxr(v91 - 1, v90));
      if (!v91)
      {
        ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
        std::__shared_weak_count::__release_weak(v89);
      }
    }
    v106[0] = 0uLL;
    v92 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema::Builder::SetResource(v106, (uint64_t *)&v112);
    pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema::Builder::Build((uint64_t *)&v103, v92);
    v93 = (std::__shared_weak_count *)*((_QWORD *)&v106[0] + 1);
    if (*((_QWORD *)&v106[0] + 1))
    {
      v94 = (unint64_t *)(*((_QWORD *)&v106[0] + 1) + 8);
      do
        v95 = __ldaxr(v94);
      while (__stlxr(v95 - 1, v94));
      if (!v95)
      {
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
      }
    }
    v96 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
    if (*((_QWORD *)&v112 + 1))
    {
      v97 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
      do
        v98 = __ldaxr(v97);
      while (__stlxr(v98 - 1, v97));
      if (!v98)
      {
        ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
        std::__shared_weak_count::__release_weak(v96);
      }
    }
    *(_QWORD *)&v106[0] = &v116;
    sub_20BDE9EB0((void ***)v106);
    *(_QWORD *)&v106[0] = &v118;
    sub_20BEEB2B8((void ***)v106);
    sub_20C80F798((uint64_t)v124, (char *)v124[1]);
    sub_20C3A3BA4((uint64_t)&v122, v123[0]);
    if ((v121 & 7) != 0)
    {
      v99 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
      do
        v100 = __ldxr(v99);
      while (__stlxr(v100 - 2, v99));
    }
    v7 = v103;
  }
  *a2 = v7;
  v103 = 0uLL;
  return sub_20BF4C2D8((uint64_t)&v125);
}

void sub_20C802EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,void **a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  uint64_t v37;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a29);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a27);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a37);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a35);
  sub_20C807EEC((uint64_t)&a17);
  a31 = (void **)(v37 - 224);
  sub_20BDE9EB0(&a31);
  a31 = (void **)(v37 - 192);
  sub_20BEEB2B8(&a31);
  sub_20C80F190(v37 - 168);
  sub_20BF4C2D8(v37 - 112);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetDisplayFilterDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v5;
  int v6;
  __int128 v7;
  uint64_t *v8;
  unsigned int *v9;
  unsigned int v10;
  _QWORD **v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  char *v17;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  __int128 v31;
  int64x2_t v32;
  _OWORD *v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD **v51;
  BOOL v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t *v55;
  _QWORD *v56;
  uint64_t v57;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  std::__shared_weak_count *v86;
  unint64_t *v87;
  unint64_t v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::Builder *v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  int64x2_t v116;
  _QWORD v117[2];
  char *v118;
  _QWORD *v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD **v122;
  _QWORD *v123[2];
  uint64_t v124[3];
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  v3 = *((_QWORD *)this + 3);
  v4 = (char *)this + 8;
  v5 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  if (!v5)
    v5 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  (*(void (**)(uint64_t **__return_ptr, uint64_t, char *, uint64_t))(*(_QWORD *)v3 + 120))(&v125, v3, v4, (uint64_t)v5 + 8);
  v6 = sub_20C80F118((pxrInternal__aapl__pxrReserved__::VtValue *)&v125);
  v7 = 0uLL;
  if (v6)
  {
    if ((v126 & 4) != 0)
      v8 = (uint64_t *)(*(uint64_t (**)(uint64_t **, __n128))((v126 & 0xFFFFFFFFFFFFFFF8) + 168))(&v125, (__n128)0);
    else
      v8 = v125;
    v121 = *v8;
    if ((v121 & 7) != 0)
    {
      v9 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 2, v9));
      if ((v10 & 1) == 0)
        v121 &= 0xFFFFFFFFFFFFFFF8;
    }
    sub_20C807718((uint64_t *)&v122, (uint64_t)(v8 + 1));
    sub_20C80F1E8(v124, (uint64_t)(v8 + 4));
    v118 = 0;
    v119 = 0;
    v120 = 0;
    v116 = 0uLL;
    v117[0] = 0;
    v11 = v122;
    if (v122 == v123)
    {
      v55 = 0;
      v53 = 0;
      v54 = 0;
    }
    else
    {
      do
      {
        v12 = (uint64_t *)(v11 + 4);
        v13 = v119;
        if ((unint64_t)v119 >= v120)
        {
          v17 = sub_20BFCA068(&v118, v12);
        }
        else
        {
          v14 = *v12;
          *v119 = *v12;
          if ((v14 & 7) != 0)
          {
            v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
            do
              v16 = __ldxr(v15);
            while (__stxr(v16 + 2, v15));
            if ((v16 & 1) == 0)
              *v13 &= 0xFFFFFFFFFFFFFFF8;
          }
          v17 = (char *)(v13 + 1);
        }
        v119 = v17;
        v112 = 0u;
        v113 = 0u;
        sub_20C807D38(v11 + 5, &v110);
        v111 = v110;
        v110 = 0uLL;
        v18 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetValue(&v112, (uint64_t *)&v111);
        pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::Build(v18, &v114);
        v19 = v114;
        v115 = v114;
        v114 = 0uLL;
        v20 = v116.i64[1];
        if (v116.i64[1] >= v117[0])
        {
          v102 = v19;
          v21 = (v116.i64[1] - v116.i64[0]) >> 4;
          v22 = v21 + 1;
          if ((unint64_t)(v21 + 1) >> 60)
            sub_20BDDF694();
          v23 = v117[0] - v116.i64[0];
          if ((v117[0] - v116.i64[0]) >> 3 > v22)
            v22 = v23 >> 3;
          if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF0)
            v24 = 0xFFFFFFFFFFFFFFFLL;
          else
            v24 = v22;
          *(_QWORD *)&v107 = v117;
          v25 = (char *)sub_20BDEA2F0((uint64_t)v117, v24);
          v27 = &v25[16 * v21];
          *(_OWORD *)v27 = v102;
          v115 = 0uLL;
          v28 = (_QWORD *)v116.i64[1];
          v29 = (_QWORD *)v116.i64[0];
          if (v116.i64[1] == v116.i64[0])
          {
            v32 = vdupq_n_s64(v116.u64[1]);
            v30 = &v25[16 * v21];
          }
          else
          {
            v30 = &v25[16 * v21];
            do
            {
              v31 = *((_OWORD *)v28 - 1);
              v28 -= 2;
              *((_OWORD *)v30 - 1) = v31;
              v30 -= 16;
              *v28 = 0;
              v28[1] = 0;
            }
            while (v28 != v29);
            v32 = v116;
          }
          v33 = v27 + 16;
          v116.i64[0] = (uint64_t)v30;
          v116.i64[1] = (uint64_t)(v27 + 16);
          *(int64x2_t *)((char *)v106 + 8) = v32;
          v34 = v117[0];
          v117[0] = &v25[16 * v26];
          *((_QWORD *)&v106[1] + 1) = v34;
          *(_QWORD *)&v106[0] = v32.i64[0];
          sub_20BDEA324((uint64_t)v106);
          v35 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
          v116.i64[1] = (uint64_t)v33;
          if (*((_QWORD *)&v114 + 1))
          {
            v36 = (unint64_t *)(*((_QWORD *)&v114 + 1) + 8);
            do
              v37 = __ldaxr(v36);
            while (__stlxr(v37 - 1, v36));
            if (!v37)
            {
              ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
              std::__shared_weak_count::__release_weak(v35);
            }
          }
        }
        else
        {
          *(_OWORD *)v116.i64[1] = v19;
          v115 = 0uLL;
          v116.i64[1] = v20 + 16;
        }
        v38 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
        if (*((_QWORD *)&v111 + 1))
        {
          v39 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        v41 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
        if (*((_QWORD *)&v110 + 1))
        {
          v42 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
          do
            v43 = __ldaxr(v42);
          while (__stlxr(v43 - 1, v42));
          if (!v43)
          {
            ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
            std::__shared_weak_count::__release_weak(v41);
          }
        }
        v44 = (std::__shared_weak_count *)*((_QWORD *)&v113 + 1);
        if (*((_QWORD *)&v113 + 1))
        {
          v45 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
          do
            v46 = __ldaxr(v45);
          while (__stlxr(v46 - 1, v45));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
            std::__shared_weak_count::__release_weak(v44);
          }
        }
        v47 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
        if (*((_QWORD *)&v112 + 1))
        {
          v48 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
          do
            v49 = __ldaxr(v48);
          while (__stlxr(v49 - 1, v48));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
        }
        v50 = v11[1];
        if (v50)
        {
          do
          {
            v51 = (_QWORD **)v50;
            v50 = (_QWORD *)*v50;
          }
          while (v50);
        }
        else
        {
          do
          {
            v51 = (_QWORD **)v11[2];
            v52 = *v51 == v11;
            v11 = v51;
          }
          while (!v52);
        }
        v11 = v51;
      }
      while (v51 != v123);
      v53 = (uint64_t *)v118;
      v54 = v119;
      v55 = (uint64_t *)v116.i64[0];
    }
    v108 = 0u;
    v109 = 0u;
    v107 = 0u;
    memset(v106, 0, sizeof(v106));
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v54 - v53, v53, v55, &v114);
    v115 = v114;
    v114 = 0uLL;
    v56 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetParameters(v106, (uint64_t *)&v115);
    pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(&v110);
    v111 = v110;
    v110 = 0uLL;
    v57 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetInputConnections((uint64_t)v56, (uint64_t *)&v111);
    sub_20C7EA9FC(&v121, &v104);
    v105 = v104;
    v104 = 0uLL;
    v58 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::SetNodeIdentifier(v57, (uint64_t *)&v105);
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::Builder::Build(v58, &v112);
    v59 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
    if (*((_QWORD *)&v105 + 1))
    {
      v60 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v61 = __ldaxr(v60);
      while (__stlxr(v61 - 1, v60));
      if (!v61)
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
    }
    v62 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
    if (*((_QWORD *)&v104 + 1))
    {
      v63 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
      do
        v64 = __ldaxr(v63);
      while (__stlxr(v64 - 1, v63));
      if (!v64)
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
      }
    }
    v65 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
    if (*((_QWORD *)&v111 + 1))
    {
      v66 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
      do
        v67 = __ldaxr(v66);
      while (__stlxr(v67 - 1, v66));
      if (!v67)
      {
        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
        std::__shared_weak_count::__release_weak(v65);
      }
    }
    v68 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
    if (*((_QWORD *)&v110 + 1))
    {
      v69 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
      do
        v70 = __ldaxr(v69);
      while (__stlxr(v70 - 1, v69));
      if (!v70)
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
    }
    v71 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
    if (*((_QWORD *)&v115 + 1))
    {
      v72 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
      do
        v73 = __ldaxr(v72);
      while (__stlxr(v73 - 1, v72));
      if (!v73)
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
    }
    v74 = (std::__shared_weak_count *)*((_QWORD *)&v114 + 1);
    if (*((_QWORD *)&v114 + 1))
    {
      v75 = (unint64_t *)(*((_QWORD *)&v114 + 1) + 8);
      do
        v76 = __ldaxr(v75);
      while (__stlxr(v76 - 1, v75));
      if (!v76)
      {
        ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
        std::__shared_weak_count::__release_weak(v74);
      }
    }
    v77 = (std::__shared_weak_count *)*((_QWORD *)&v109 + 1);
    if (*((_QWORD *)&v109 + 1))
    {
      v78 = (unint64_t *)(*((_QWORD *)&v109 + 1) + 8);
      do
        v79 = __ldaxr(v78);
      while (__stlxr(v79 - 1, v78));
      if (!v79)
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
    }
    v80 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
    if (*((_QWORD *)&v108 + 1))
    {
      v81 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
      do
        v82 = __ldaxr(v81);
      while (__stlxr(v82 - 1, v81));
      if (!v82)
      {
        ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
        std::__shared_weak_count::__release_weak(v80);
      }
    }
    v83 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
    if (*((_QWORD *)&v107 + 1))
    {
      v84 = (unint64_t *)(*((_QWORD *)&v107 + 1) + 8);
      do
        v85 = __ldaxr(v84);
      while (__stlxr(v85 - 1, v84));
      if (!v85)
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
    }
    v86 = (std::__shared_weak_count *)*((_QWORD *)&v106[1] + 1);
    if (*((_QWORD *)&v106[1] + 1))
    {
      v87 = (unint64_t *)(*((_QWORD *)&v106[1] + 1) + 8);
      do
        v88 = __ldaxr(v87);
      while (__stlxr(v88 - 1, v87));
      if (!v88)
      {
        ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
        std::__shared_weak_count::__release_weak(v86);
      }
    }
    v89 = (std::__shared_weak_count *)*((_QWORD *)&v106[0] + 1);
    if (*((_QWORD *)&v106[0] + 1))
    {
      v90 = (unint64_t *)(*((_QWORD *)&v106[0] + 1) + 8);
      do
        v91 = __ldaxr(v90);
      while (__stlxr(v91 - 1, v90));
      if (!v91)
      {
        ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
        std::__shared_weak_count::__release_weak(v89);
      }
    }
    v106[0] = 0uLL;
    v92 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::Builder::SetResource(v106, (uint64_t *)&v112);
    pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::Builder::Build((uint64_t *)&v103, v92);
    v93 = (std::__shared_weak_count *)*((_QWORD *)&v106[0] + 1);
    if (*((_QWORD *)&v106[0] + 1))
    {
      v94 = (unint64_t *)(*((_QWORD *)&v106[0] + 1) + 8);
      do
        v95 = __ldaxr(v94);
      while (__stlxr(v95 - 1, v94));
      if (!v95)
      {
        ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
        std::__shared_weak_count::__release_weak(v93);
      }
    }
    v96 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
    if (*((_QWORD *)&v112 + 1))
    {
      v97 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
      do
        v98 = __ldaxr(v97);
      while (__stlxr(v98 - 1, v97));
      if (!v98)
      {
        ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
        std::__shared_weak_count::__release_weak(v96);
      }
    }
    *(_QWORD *)&v106[0] = &v116;
    sub_20BDE9EB0((void ***)v106);
    *(_QWORD *)&v106[0] = &v118;
    sub_20BEEB2B8((void ***)v106);
    sub_20C80F798((uint64_t)v124, (char *)v124[1]);
    sub_20C3A3BA4((uint64_t)&v122, v123[0]);
    if ((v121 & 7) != 0)
    {
      v99 = (unsigned int *)(v121 & 0xFFFFFFFFFFFFFFF8);
      do
        v100 = __ldxr(v99);
      while (__stlxr(v100 - 2, v99));
    }
    v7 = v103;
  }
  *a2 = v7;
  v103 = 0uLL;
  return sub_20BF4C2D8((uint64_t)&v125);
}

void sub_20C803864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,void **a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  uint64_t v37;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a29);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a27);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a37);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a35);
  sub_20C807EEC((uint64_t)&a17);
  a31 = (void **)(v37 - 224);
  sub_20BDE9EB0(&a31);
  a31 = (void **)(v37 - 192);
  sub_20BEEB2B8(&a31);
  sub_20C80F190(v37 - 168);
  sub_20BF4C2D8(v37 - 112);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetDisplayStyleDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *result;
  _QWORD v8[4];
  char v9;

  v4 = (_DWORD *)((char *)this + 8);
  v5 = operator new(0x28uLL);
  v6 = *((_QWORD *)this + 3);
  *v5 = off_24C54D0E0;
  v5[1] = v6;
  sub_20BFD6E54((_DWORD *)v5 + 4, v4);
  sub_20BFD6EA4((_DWORD *)v5 + 5, (_DWORD *)this + 3);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 7) = 256;
  *((_BYTE *)v5 + 32) = 0;
  *((_BYTE *)v5 + 36) = 0;
  if (!v5[1])
  {
    v8[0] = "hd/dataSourceLegacyPrim.cpp";
    v8[1] = "Hd_DisplayStyleDataSource";
    v8[2] = 1677;
    v8[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DisplayStyleDataSource::Hd_DisplayStyleDataSourc"
            "e(HdSceneDelegate *, const SdfPath &)";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v8, "_sceneDelegate", 0);
  }
  result = operator new(0x20uLL);
  *result = &off_24C54D2E8;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  *a2 = v5;
  a2[1] = result;
  return result;
}

void sub_20C803AA4(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  void *v5;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetInstancedByDataSource@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder *v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD v17[5];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  (*(void (**)(uint64_t *__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 232))(&v23, *((_QWORD *)this + 3), (char *)this + 8);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v23))
  {
    v20 = 0u;
    v21 = 0u;
    sub_20BFD6E54(&v24, &v23);
    sub_20BFD6EA4(&v25, (_DWORD *)&v23 + 1);
    sub_20C803DE8((uint64_t)v17, (uint64_t)&v24, 1);
    sub_20C803D70((uint64_t)v17, &v18);
    v19 = v18;
    v18 = 0uLL;
    v3 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder::SetPaths(&v20, (uint64_t *)&v19);
    pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder::Build(v3, &v22);
    *(_OWORD *)a2 = v22;
    v22 = 0uLL;
    v4 = (std::__shared_weak_count *)*((_QWORD *)&v19 + 1);
    if (*((_QWORD *)&v19 + 1))
    {
      v5 = (unint64_t *)(*((_QWORD *)&v19 + 1) + 8);
      do
        v6 = __ldaxr(v5);
      while (__stlxr(v6 - 1, v5));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    v7 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
    if (*((_QWORD *)&v18 + 1))
    {
      v8 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    sub_20C809764(v17);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
    sub_20BFD265C(&v24);
    v10 = (std::__shared_weak_count *)*((_QWORD *)&v21 + 1);
    if (*((_QWORD *)&v21 + 1))
    {
      v11 = (unint64_t *)(*((_QWORD *)&v21 + 1) + 8);
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    v13 = (std::__shared_weak_count *)*((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v14 = (unint64_t *)(*((_QWORD *)&v20 + 1) + 8);
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
  return sub_20BFD265C(&v23);
}

void sub_20C803CF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C803D70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = (char *)operator new(0x30uLL);
  *(_QWORD *)v4 = &unk_24C54C840;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 24) = v5;
  v6 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v4 + 5) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 - 16);
    if (*((_QWORD *)v4 + 4))
      v7 = (unint64_t *)*((_QWORD *)v4 + 4);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return sub_20C809D08(a2, (uint64_t)v4);
}

uint64_t sub_20C803DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20C8108F8((unint64_t *)a1, a2, a2 + 8 * a3);
  return a1;
}

void sub_20C803E1C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20C809764(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetInstancerTopologyDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  char *v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  char v18;
  char **v19;

  v4 = (uint64_t *)((char *)this + 72);
  sub_20C806934((_QWORD *)this + 9, &v12);
  v5 = v12;
  if (!v12)
  {
    v6 = (char *)operator new(0x40uLL);
    v7 = *((_QWORD *)this + 3);
    *(_QWORD *)v6 = off_24C54D360;
    sub_20BFD6E54((_DWORD *)v6 + 2, (_DWORD *)this + 2);
    sub_20BFD6EA4((_DWORD *)v6 + 3, (_DWORD *)this + 3);
    *(_OWORD *)(v6 + 24) = 0u;
    *((_QWORD *)v6 + 2) = v7;
    *(_OWORD *)(v6 + 40) = 0u;
    *((_QWORD *)v6 + 7) = 0;
    if (!v7)
    {
      v14 = "hd/dataSourceLegacyPrim.cpp";
      v15 = "Hd_InstancerTopologyDataSource";
      v16 = 1597;
      v17 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_InstancerTopologyDataSource::Hd_InstancerTopolog"
            "yDataSource(const SdfPath &, HdSceneDelegate *)";
      v18 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v14, "_sceneDelegate", 0);
      v7 = *((_QWORD *)v6 + 2);
    }
    (*(void (**)(char **__return_ptr, uint64_t, char *))(*(_QWORD *)v7 + 240))(&v14, v7, v6 + 8);
    sub_20C810BF8((unint64_t *)v6 + 3, (uint64_t)v14, (uint64_t)v15);
    v19 = &v14;
    sub_20BFD6F90((void ***)&v19);
    v8 = (std::__shared_weak_count *)operator new(0x20uLL);
    v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54D530;
    v8->__shared_owners_ = 0;
    v8->__shared_weak_owners_ = 0;
    v8[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    v9 = v13;
    v12 = (uint64_t)v6;
    v13 = v8;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    sub_20C7FCAAC(v4, &v12);
    v5 = v12;
  }
  *a2 = v5;
  a2[1] = (uint64_t)v13;
}

void sub_20C803FCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v9;
  _DWORD *v10;
  _DWORD *v11;
  _QWORD *v12;
  void *v14;

  sub_20C809764(v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v11);
  sub_20BFD265C(v10);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v9);
  operator delete(v14);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetVolumeFieldBindingDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;
  __int128 v22;
  int64x2_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int64x2_t v31;
  _QWORD v32[2];
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  uint64_t v39;
  _QWORD *v40;

  (*(void (**)(uint64_t *__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 304))(&v36, *((_QWORD *)this + 3), (char *)this + 8);
  v3 = v36;
  v4 = v37;
  if (v36 == v37)
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v31 = 0uLL;
    v32[0] = 0;
    do
    {
      v5 = v34;
      if ((unint64_t)v34 >= v35)
      {
        v9 = sub_20BFCA068(&v33, (uint64_t *)v3);
      }
      else
      {
        v6 = *(_QWORD *)v3;
        *(_QWORD *)v34 = *(_QWORD *)v3;
        if ((v6 & 7) != 0)
        {
          v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
          do
            v8 = __ldxr(v7);
          while (__stxr(v8 + 2, v7));
          if ((v8 & 1) == 0)
            *(_QWORD *)v5 &= 0xFFFFFFFFFFFFFFF8;
        }
        v9 = v5 + 8;
      }
      v34 = v9;
      sub_20C7FFBBC((_DWORD *)(v3 + 16), &v29);
      v10 = v29;
      v30 = v29;
      v29 = 0uLL;
      v11 = v31.i64[1];
      if (v31.i64[1] >= v32[0])
      {
        v28 = v10;
        v13 = (v31.i64[1] - v31.i64[0]) >> 4;
        if ((unint64_t)(v13 + 1) >> 60)
          sub_20BDDF694();
        v14 = (v32[0] - v31.i64[0]) >> 3;
        if (v14 <= v13 + 1)
          v14 = v13 + 1;
        if (v32[0] - v31.i64[0] >= 0x7FFFFFFFFFFFFFF0uLL)
          v15 = 0xFFFFFFFFFFFFFFFLL;
        else
          v15 = v14;
        v40 = v32;
        v16 = (char *)sub_20BDEA2F0((uint64_t)v32, v15);
        v18 = &v16[16 * v13];
        *(_OWORD *)v18 = v28;
        v30 = 0uLL;
        v19 = (_QWORD *)v31.i64[1];
        v20 = (_QWORD *)v31.i64[0];
        if (v31.i64[1] == v31.i64[0])
        {
          v23 = vdupq_n_s64(v31.u64[1]);
          v21 = &v16[16 * v13];
        }
        else
        {
          v21 = &v16[16 * v13];
          do
          {
            v22 = *((_OWORD *)v19 - 1);
            v19 -= 2;
            *((_OWORD *)v21 - 1) = v22;
            v21 -= 16;
            *v19 = 0;
            v19[1] = 0;
          }
          while (v19 != v20);
          v23 = v31;
        }
        v12 = v18 + 16;
        v31.i64[0] = (uint64_t)v21;
        v31.i64[1] = (uint64_t)(v18 + 16);
        *(int64x2_t *)&v38[8] = v23;
        v24 = v32[0];
        v32[0] = &v16[16 * v17];
        v39 = v24;
        *(_QWORD *)v38 = v23.i64[0];
        sub_20BDEA324((uint64_t)v38);
      }
      else
      {
        *(_OWORD *)v31.i64[1] = v10;
        v12 = (_OWORD *)(v11 + 16);
        v30 = 0uLL;
      }
      v31.i64[1] = (uint64_t)v12;
      v25 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
      if (*((_QWORD *)&v29 + 1))
      {
        v26 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      v3 += 24;
    }
    while (v3 != v4);
    pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchema::BuildRetained((v34 - v33) >> 3, (uint64_t *)v33, (uint64_t *)v31.i64[0], v38);
    *(_OWORD *)a2 = *(_OWORD *)v38;
    *(_QWORD *)v38 = &v31;
    sub_20BDE9EB0((void ***)v38);
    *(_QWORD *)v38 = &v33;
    sub_20BEEB2B8((void ***)v38);
  }
  *(_QWORD *)v38 = &v36;
  sub_20C81162C((void ***)v38);
}

void sub_20C8042B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void ****a13, uint64_t a14, void ***a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19, uint64_t a20,uint64_t a21,char a22)
{
  a13 = &a15;
  sub_20BDE9EB0((void ***)&a13);
  a15 = &a19;
  sub_20BEEB2B8((void ***)&a15);
  a19 = (void **)&a22;
  sub_20C81162C(&a19);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetCoordSysBindingDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  uint64_t *Name;
  pxrInternal__aapl__pxrReserved__::TfToken *v6;
  uint64_t *EmptyString;
  const char *v8;
  int v9;
  unint64_t v10;
  size_t v11;
  size_t v12;
  const char *v13;
  __int128 v14;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v15;
  unint64_t v16;
  const char *v17;
  pxrInternal__aapl__pxrReserved__::TfToken *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  int64x2_t v32;
  char *v33;
  unsigned int *v34;
  unsigned int v35;
  __int128 v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  char *v47;
  __int128 v48;
  int64x2_t v49;
  char *v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *p_shared_owners;
  unint64_t v56;
  _OWORD *v57;
  __int128 v58;
  __int128 v59;
  std::string __p;
  std::string __dst;
  int64x2_t v62;
  _QWORD v63[2];
  int64x2_t v64;
  _QWORD v65[2];
  pxrInternal__aapl__pxrReserved__::SdfPath **v66;
  std::__shared_weak_count *v67;
  _BYTE v68[24];
  char *v69;
  _QWORD *v70;

  (*(void (**)(pxrInternal__aapl__pxrReserved__::SdfPath ***__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 168))(&v66, *((_QWORD *)this + 3), (char *)this + 8);
  if (!v66 || (v3 = *v66, v4 = v66[1], *v66 == v4))
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    v57 = a2;
    v64 = 0uLL;
    v65[0] = 0;
    v62 = 0uLL;
    v63[0] = 0;
    do
    {
      Name = pxrInternal__aapl__pxrReserved__::SdfPath::GetName(v3);
      v6 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C804888();
      if ((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFFF8) != 0)
        EmptyString = (uint64_t *)((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v6);
      if (*((char *)EmptyString + 23) >= 0)
        v8 = (const char *)EmptyString;
      else
        v8 = (const char *)*EmptyString;
      v9 = *((char *)Name + 23);
      v10 = Name[1];
      if (v9 >= 0)
        v11 = *((unsigned __int8 *)Name + 23);
      else
        v11 = Name[1];
      v12 = strlen(v8);
      if (v11 < v12)
        goto LABEL_17;
      v13 = (const char *)*Name;
      if (v9 >= 0)
        v13 = (const char *)Name;
      if (!strcmp(&v13[v11 - v12], v8))
      {
        v15 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfPathTokens);
        if (!v15)
          v15 = sub_20C14397C(&pxrInternal__aapl__pxrReserved__::SdfPathTokens);
        v16 = *((_QWORD *)v15 + 10) & 0xFFFFFFFFFFFFFFF8;
        if (v16)
        {
          v17 = (const char *)(v16 + 16);
          if (*(char *)(v16 + 39) < 0)
            v17 = *(const char **)v17;
        }
        else
        {
          v17 = "";
        }
        pxrInternal__aapl__pxrReserved__::TfStringGetBeforeSuffix((uint64_t)Name, *v17, &__dst);
      }
      else
      {
LABEL_17:
        if (v9 < 0)
        {
          sub_20BDDBFAC(&__dst, (void *)*Name, v10);
        }
        else
        {
          v14 = *(_OWORD *)Name;
          __dst.__r_.__value_.__r.__words[2] = Name[2];
          *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v14;
        }
      }
      v18 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C804888();
      if ((*((_QWORD *)v18 + 1) & 0xFFFFFFFFFFFFFFF8) != 0)
        v19 = (uint64_t *)((*((_QWORD *)v18 + 1) & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        v19 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v18);
      pxrInternal__aapl__pxrReserved__::SdfPath::StripPrefixNamespace(&__dst, (uint64_t)v19, &__p);
      pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v59);
      v20 = v64.i64[1];
      if (v64.i64[1] >= v65[0])
      {
        v23 = (v64.i64[1] - v64.i64[0]) >> 3;
        if ((unint64_t)(v23 + 1) >> 61)
          sub_20BDDF694();
        v24 = (v65[0] - v64.i64[0]) >> 2;
        if (v24 <= v23 + 1)
          v24 = v23 + 1;
        if (v65[0] - v64.i64[0] >= 0x7FFFFFFFFFFFFFF8uLL)
          v25 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v25 = v24;
        v70 = v65;
        if (v25)
          v26 = (char *)sub_20BDDF6A8((uint64_t)v65, v25);
        else
          v26 = 0;
        v27 = &v26[8 * v23];
        v28 = &v26[8 * v25];
        v69 = v28;
        *(_QWORD *)v27 = v59;
        v22 = v27 + 8;
        *(_QWORD *)&v59 = 0;
        *(_QWORD *)&v68[16] = v27 + 8;
        v29 = (_QWORD *)v64.i64[1];
        v30 = (_QWORD *)v64.i64[0];
        if (v64.i64[1] == v64.i64[0])
        {
          v32 = vdupq_n_s64(v64.u64[1]);
        }
        else
        {
          do
          {
            v31 = *--v29;
            *((_QWORD *)v27 - 1) = v31;
            v27 -= 8;
            *v29 = 0;
          }
          while (v29 != v30);
          v32 = v64;
          v22 = *(_QWORD **)&v68[16];
          v28 = v69;
        }
        v64.i64[0] = (uint64_t)v27;
        v64.i64[1] = (uint64_t)v22;
        *(int64x2_t *)&v68[8] = v32;
        v33 = (char *)v65[0];
        v65[0] = v28;
        v69 = v33;
        *(_QWORD *)v68 = v32.i64[0];
        sub_20BF1EE98((uint64_t)v68);
        v21 = v59;
      }
      else
      {
        v21 = 0;
        *(_QWORD *)v64.i64[1] = v59;
        v22 = (_QWORD *)(v20 + 8);
        *(_QWORD *)&v59 = 0;
      }
      v64.i64[1] = (uint64_t)v22;
      if ((v21 & 7) != 0)
      {
        v34 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v35 = __ldxr(v34);
        while (__stlxr(v35 - 2, v34));
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      sub_20C7FFBBC(v3, &v59);
      v36 = v59;
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v59;
      v59 = 0uLL;
      v37 = v62.i64[1];
      if (v62.i64[1] >= v63[0])
      {
        v58 = v36;
        v39 = (v62.i64[1] - v62.i64[0]) >> 4;
        if ((unint64_t)(v39 + 1) >> 60)
          sub_20BDDF694();
        v40 = (v63[0] - v62.i64[0]) >> 3;
        if (v40 <= v39 + 1)
          v40 = v39 + 1;
        if (v63[0] - v62.i64[0] >= 0x7FFFFFFFFFFFFFF0uLL)
          v41 = 0xFFFFFFFFFFFFFFFLL;
        else
          v41 = v40;
        v70 = v63;
        v42 = (char *)sub_20BDEA2F0((uint64_t)v63, v41);
        v44 = &v42[16 * v39];
        *(_OWORD *)v44 = v58;
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
        v45 = (_QWORD *)v62.i64[1];
        v46 = (_QWORD *)v62.i64[0];
        if (v62.i64[1] == v62.i64[0])
        {
          v49 = vdupq_n_s64(v62.u64[1]);
          v47 = &v42[16 * v39];
        }
        else
        {
          v47 = &v42[16 * v39];
          do
          {
            v48 = *((_OWORD *)v45 - 1);
            v45 -= 2;
            *((_OWORD *)v47 - 1) = v48;
            v47 -= 16;
            *v45 = 0;
            v45[1] = 0;
          }
          while (v45 != v46);
          v49 = v62;
        }
        v38 = v44 + 16;
        v62.i64[0] = (uint64_t)v47;
        v62.i64[1] = (uint64_t)(v44 + 16);
        *(int64x2_t *)&v68[8] = v49;
        v50 = (char *)v63[0];
        v63[0] = &v42[16 * v43];
        v69 = v50;
        *(_QWORD *)v68 = v49.i64[0];
        sub_20BDEA324((uint64_t)v68);
      }
      else
      {
        *(_OWORD *)v62.i64[1] = v36;
        v38 = (_OWORD *)(v37 + 16);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
      }
      v62.i64[1] = (uint64_t)v38;
      v51 = (std::__shared_weak_count *)*((_QWORD *)&v59 + 1);
      if (*((_QWORD *)&v59 + 1))
      {
        v52 = (unint64_t *)(*((_QWORD *)&v59 + 1) + 8);
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
      v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v3 + 8);
    }
    while (v3 != v4);
    pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchema::BuildRetained((v64.i64[1] - v64.i64[0]) >> 3, (uint64_t *)v64.i64[0], (uint64_t *)v62.i64[0], v68);
    *v57 = *(_OWORD *)v68;
    *(_QWORD *)v68 = &v62;
    sub_20BDE9EB0((void ***)v68);
    *(_QWORD *)v68 = &v64;
    sub_20BEEB2B8((void ***)v68);
  }
  v54 = v67;
  if (v67)
  {
    p_shared_owners = (unint64_t *)&v67->__shared_owners_;
    do
      v56 = __ldaxr(p_shared_owners);
    while (__stlxr(v56 - 1, p_shared_owners));
    if (!v56)
    {
      ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
      std::__shared_weak_count::__release_weak(v54);
    }
  }
}

void sub_20C8047D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  __p = &a29;
  sub_20BDE9EB0((void ***)&__p);
  __p = &a33;
  sub_20BEEB2B8((void ***)&__p);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v33 - 160));
  _Unwind_Resume(a1);
}

unint64_t sub_20C804888()
{
  char *v0;
  _QWORD *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  void **v24;
  char v25;
  unsigned int *v26;
  unsigned int *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v0 = (char *)atomic_load(&qword_25498DCE8);
  if (!v0)
  {
    v0 = (char *)operator new(0x28uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0, "binding", 0);
    v2 = v0 + 8;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0 + 8, "coordSys", 0);
    v3 = *(unsigned int **)v0;
    v26 = v3;
    if ((v3 & 7) != 0)
    {
      v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 2, v4));
      if ((v5 & 1) == 0)
        v26 = v4;
    }
    v6 = (unsigned int *)*v2;
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 = v7;
    }
    *((_QWORD *)v0 + 2) = 0;
    *((_QWORD *)v0 + 3) = 0;
    *((_QWORD *)v0 + 4) = 0;
    v24 = (void **)(v0 + 16);
    v25 = 0;
    v9 = operator new(0x10uLL);
    v10 = 0;
    *((_QWORD *)v0 + 2) = v9;
    *((_QWORD *)v0 + 3) = v9;
    *((_QWORD *)v0 + 4) = v9 + 2;
    do
    {
      v11 = (&v26)[v10];
      *v9 = v11;
      if ((v11 & 7) != 0)
      {
        v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 2, v12));
        if ((v13 & 1) == 0)
          *v9 &= 0xFFFFFFFFFFFFFFF8;
      }
      ++v10;
      ++v9;
    }
    while (v10 != 2);
    v14 = (unsigned int **)&v28;
    *((_QWORD *)v0 + 3) = v9;
    do
    {
      v16 = (uint64_t)*--v14;
      v15 = v16;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stlxr(v18 - 2, v17));
      }
    }
    while (v14 != &v26);
    while (!__ldaxr(&qword_25498DCE8))
    {
      if (!__stlxr((unint64_t)v0, &qword_25498DCE8))
        return (unint64_t)v0;
    }
    __clrex();
    v24 = (void **)(v0 + 16);
    sub_20BEEB2B8(&v24);
    if ((*v2 & 7) != 0)
    {
      v20 = (unsigned int *)(*v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if ((*(_QWORD *)v0 & 7) != 0)
    {
      v22 = (unsigned int *)(*(_QWORD *)v0 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    operator delete(v0);
    return atomic_load(&qword_25498DCE8);
  }
  return (unint64_t)v0;
}

void sub_20C804A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      operator delete(v14);
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetVisibilityDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t *a2@<X8>)
{
  unsigned __int8 v3;
  uint64_t *v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v10;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  if ((*(unsigned int (**)(_QWORD, char *))(**((_QWORD **)this + 3) + 80))(*((_QWORD *)this + 3), (char *)this + 8))
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25498DD00);
    if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD00))
    {
      v15 = 0;
      v16 = 0;
      v12 = 1;
      pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v12, (uint64_t *)&v13);
      v14 = v13;
      v13 = 0uLL;
      v10 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v15, (uint64_t *)&v14);
      pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build(&qword_25498DCF0, v10);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v14);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v13);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v15);
      __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498DCF0, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DD00);
    }
    v4 = &qword_25498DCF0;
  }
  else
  {
    v5 = atomic_load((unsigned __int8 *)&qword_25498DD18);
    if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD18))
    {
      v15 = 0;
      v16 = 0;
      v12 = 0;
      pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v12, (uint64_t *)&v13);
      v14 = v13;
      v13 = 0uLL;
      v11 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v15, (uint64_t *)&v14);
      pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build(&qword_25498DD08, v11);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v14);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v13);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v15);
      __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498DD08, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DD18);
    }
    v4 = &qword_25498DD08;
  }
  v7 = *v4;
  v6 = v4[1];
  *a2 = v7;
  a2[1] = v6;
  if (v6)
  {
    v8 = (unint64_t *)(v6 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
}

void sub_20C804CE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v1 - 32));
  __cxa_guard_abort(&qword_25498DD18);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetPurposeDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder *v3;
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19[3];
  uint64_t v20;

  (*(void (**)(uint64_t *__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 144))(&v20, *((_QWORD *)this + 3), (char *)this + 8);
  v17 = 0;
  v18 = 0;
  sub_20C7EA9FC(&v20, &v15);
  v16 = v15;
  v15 = 0uLL;
  v3 = (pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder::SetPurpose(&v17, (uint64_t *)&v16);
  pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder::Build(v19, v3);
  *a2 = *(_OWORD *)v19;
  *(_OWORD *)v19 = 0uLL;
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v10 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if ((v20 & 7) != 0)
  {
    v13 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
}

void sub_20C804E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  va_list va;

  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  v7 = *(_QWORD *)(v5 - 24);
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetExtentDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  char *v3;
  std::__shared_weak_count *v4;
  _QWORD *v5;
  char *v6;
  std::__shared_weak_count *v7;
  pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  char *v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  char *v28;
  std::__shared_weak_count *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  (*(void (**)(__int128 *__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 64))(&v33, *((_QWORD *)this + 3), (char *)this + 8);
  v30 = 0u;
  v31 = 0u;
  v3 = (char *)operator new(0x20uLL);
  *(_QWORD *)v3 = &unk_24C54D5A8;
  *(_OWORD *)(v3 + 8) = v33;
  *((_QWORD *)v3 + 3) = v34;
  v4 = (std::__shared_weak_count *)operator new(0x20uLL);
  v4->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54D610;
  v4->__shared_owners_ = 0;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  v28 = v3;
  v29 = v4;
  v26 = 0;
  v27 = 0;
  v5 = pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder::SetMin(&v30, (uint64_t *)&v28);
  v6 = (char *)operator new(0x20uLL);
  *(_QWORD *)v6 = &unk_24C54D5A8;
  *(_OWORD *)(v6 + 8) = v35;
  *((_QWORD *)v6 + 3) = v36;
  v7 = (std::__shared_weak_count *)operator new(0x20uLL);
  v7->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54D610;
  v7->__shared_owners_ = 0;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  v24 = v6;
  v25 = v7;
  v8 = (pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder::SetMax((uint64_t)v5, (uint64_t *)&v24);
  pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder::Build(v8, &v32);
  *a2 = v32;
  v32 = 0uLL;
  v9 = v25;
  if (v25)
  {
    p_shared_owners = (unint64_t *)&v25->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v29;
  if (v29)
  {
    v13 = (unint64_t *)&v29->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = v27;
  if (v27)
  {
    v16 = (unint64_t *)&v27->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  v18 = (std::__shared_weak_count *)*((_QWORD *)&v31 + 1);
  if (*((_QWORD *)&v31 + 1))
  {
    v19 = (unint64_t *)(*((_QWORD *)&v31 + 1) + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
  if (*((_QWORD *)&v30 + 1))
  {
    v22 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
}

void sub_20C805144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v19;
  void *v21;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v19);
  operator delete(v21);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a15);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a13);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a19);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a17);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetCategoriesDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  pxrInternal__aapl__pxrReserved__::HdCategoriesSchema *v4[5];

  (*(void (**)(pxrInternal__aapl__pxrReserved__::HdCategoriesSchema **__return_ptr, _QWORD, char *))(**((_QWORD **)this + 3) + 152))(v4, *((_QWORD *)this + 3), (char *)this + 8);
  if (v4[0])
  {
    pxrInternal__aapl__pxrReserved__::HdCategoriesSchema::BuildRetained(v4[0], 0, (uint64_t *)v4[4], 0, &v3);
    *(_OWORD *)a2 = v3;
  }
  else
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  sub_20C00918C(v4);
}

void sub_20C805234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20C00918C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetInstanceCategoriesDataSource(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, _OWORD *a2@<X8>)
{
  std::__shared_weak_count_vtbl *v4;
  void (__cdecl *v5)(std::__shared_count *__hidden);
  std::__shared_weak_count *v6;
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::Builder *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count_vtbl *v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  __int128 v18;
  _QWORD v19[4];
  char v20;

  v16 = 0;
  v17 = 0;
  v4 = (std::__shared_weak_count_vtbl *)operator new(0x38uLL);
  v5 = (void (__cdecl *)(std::__shared_count *__hidden))*((_QWORD *)this + 3);
  v4->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C54D688;
  sub_20BFD6E54(&v4->~__shared_weak_count_0, (_DWORD *)this + 2);
  sub_20BFD6EA4((_DWORD *)&v4->~__shared_weak_count_0 + 1, (_DWORD *)this + 3);
  v4->__on_zero_shared_weak = 0;
  v4->__on_zero_shared = v5;
  LOBYTE(v4->__get_deleter) = 0;
  v4[1].~__shared_weak_count = 0;
  v4[1].~__shared_weak_count_0 = 0;
  if (!v5)
  {
    v19[0] = "hd/dataSourceLegacyPrim.cpp";
    v19[1] = "Hd_InstanceCategoriesVectorDataSource";
    v19[2] = 1533;
    v19[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_InstanceCategoriesVectorDataSource::Hd_Instance"
             "CategoriesVectorDataSource(const SdfPath &, HdSceneDelegate *)";
    v20 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v19, "_sceneDelegate", 0);
  }
  v6 = (std::__shared_weak_count *)operator new(0x20uLL);
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54D6D0;
  v6->__shared_owners_ = 0;
  v6->__shared_weak_owners_ = 0;
  v6[1].__vftable = v4;
  v14 = v4;
  v15 = v6;
  v7 = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::Builder::SetCategoriesValues(&v16, (uint64_t *)&v14);
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::Builder::Build((uint64_t *)&v18, v7);
  *a2 = v18;
  v18 = 0uLL;
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  v11 = v17;
  if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_20C805408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v5;
  _DWORD *v6;
  _DWORD *v7;
  void *v9;
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  sub_20BDE9EB0((void ***)va1);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v7);
  sub_20BFD265C(v6);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v5);
  operator delete(v9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::Get(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v6;
  unsigned int **v7;
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *v11;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v12;
  pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v15;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *v16;
  _QWORD *v17;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *v18;
  pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *v19;
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v20;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v21;
  pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *v22;
  _QWORD *v23;
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *v24;
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v25;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v26;
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *v27;
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v28;
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v29;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v30;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v31;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v32;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v33;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v34;
  _DWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  void (__cdecl **v38)(std::__shared_weak_count *__hidden);
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v6 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v6)
    v6 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v6 & 0xFFFFFFFFFFFFFFF8))
  {
    v34 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v34)
      v34 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*((_QWORD *)this + 2) & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v34 + 6) & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_94;
    v35 = operator new(0x28uLL);
    v36 = *((_QWORD *)this + 3);
    *(_QWORD *)v35 = off_24C54D748;
    sub_20BFD6E54(v35 + 2, (_DWORD *)this + 2);
    sub_20BFD6EA4(v35 + 3, (_DWORD *)this + 3);
    *((_QWORD *)v35 + 3) = 0;
    *((_QWORD *)v35 + 4) = 0;
    *((_QWORD *)v35 + 2) = v36;
    v37 = operator new(0x20uLL);
    v38 = &off_24C54DE58;
    goto LABEL_98;
  }
  v7 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  if (!v7)
    v7 = sub_20C7E0F30(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)*v7 & 0xFFFFFFFFFFFFFFF8))
  {
    v39 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v39)
      v39 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*((_QWORD *)this + 2) & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v39 + 8) & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_94:
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      return;
    }
    v35 = operator new(0x28uLL);
    v40 = *((_QWORD *)this + 3);
    *(_QWORD *)v35 = off_24C54DED0;
    sub_20BFD6E54(v35 + 2, (_DWORD *)this + 2);
    sub_20BFD6EA4(v35 + 3, (_DWORD *)this + 3);
    *((_QWORD *)v35 + 3) = 0;
    *((_QWORD *)v35 + 4) = 0;
    *((_QWORD *)v35 + 2) = v40;
    v37 = operator new(0x20uLL);
    v38 = &off_24C54E500;
LABEL_98:
    *v37 = v38;
    v37[1] = 0;
    v37[2] = 0;
    v37[3] = v35;
    *(_QWORD *)a3 = v35;
    *(_QWORD *)(a3 + 8) = v37;
    return;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens);
  if (!v8)
    v8 = sub_20C80A088(&pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens);
  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v8 & 0xFFFFFFFFFFFFFFF8))
  {
    pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetPrimvarsDataSource(this, (_OWORD *)a3);
  }
  else
  {
    v9 = (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
    if (!v9)
      v9 = sub_20C80A110(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
    if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v9 & 0xFFFFFFFFFFFFFFF8))
    {
      pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetExtComputationPrimvarsDataSource((std::__shared_weak_count **)this, (std::__shared_weak_count **)a3);
    }
    else if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::GetSchemaToken(v9) & 0xFFFFFFFFFFFFFFF8))
    {
      pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetMaterialBindingsDataSource(this, a3);
    }
    else
    {
      v10 = (pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
      if (!v10)
        v10 = sub_20C80A220(&pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens);
      if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v10 & 0xFFFFFFFFFFFFFFF8))
      {
        pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetXformDataSource(this, (_OWORD *)a3);
      }
      else
      {
        v11 = (pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
        if (!v11)
          v11 = sub_20C80A330(&pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens);
        if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v11 & 0xFFFFFFFFFFFFFFF8))
        {
          pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetMaterialDataSource(this, a3);
        }
        else
        {
          v12 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
          if (!v12)
            v12 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
          if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v12 & 0xFFFFFFFFFFFFFFF8))
          {
            pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetDisplayStyleDataSource(this, (_QWORD *)a3);
          }
          else
          {
            v13 = (pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens);
            if (!v13)
              v13 = sub_20C80A770(&pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens);
            if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v13 & 0xFFFFFFFFFFFFFFF8))
            {
              sub_20C805FE8((uint64_t *)this + 3, &v43);
              *(_OWORD *)a3 = v43;
              v43 = 0uLL;
              pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
            }
            else
            {
              v14 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
              if (!v14)
                v14 = sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
              if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v14 & 0xFFFFFFFFFFFFFFF8))
              {
                pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetInstancedByDataSource(this, a3);
              }
              else
              {
                v15 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
                if (!v15)
                  v15 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
                if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v15 & 0xFFFFFFFFFFFFFFF8))
                {
                  pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetInstancerTopologyDataSource(this, (uint64_t *)a3);
                }
                else
                {
                  v16 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens);
                  if (!v16)
                    v16 = sub_20C80A6E8(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens);
                  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v16 & 0xFFFFFFFFFFFFFFF8))
                  {
                    pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetVolumeFieldBindingDataSource(this, (_QWORD *)a3);
                  }
                  else
                  {
                    v17 = (_QWORD *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchemaTokens);
                    if (!v17)
                      v17 = (_QWORD *)sub_20C7F83E8(&pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchemaTokens);
                    if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*v17 & 0xFFFFFFFFFFFFFFF8))
                    {
                      pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetCoordSysBindingDataSource(this, (_QWORD *)a3);
                    }
                    else
                    {
                      v18 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
                      if (!v18)
                        v18 = sub_20C809654(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
                      if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v18 & 0xFFFFFFFFFFFFFFF8))
                      {
                        pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetVisibilityDataSource(this, (uint64_t *)a3);
                      }
                      else
                      {
                        v19 = (pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens);
                        if (!v19)
                          v19 = sub_20C80A198(&pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens);
                        if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v19 & 0xFFFFFFFFFFFFFFF8))
                        {
                          pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetPurposeDataSource(this, (_OWORD *)a3);
                        }
                        else
                        {
                          v20 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
                          if (!v20)
                            v20 = sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
                          if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v20 & 0xFFFFFFFFFFFFFFF8))
                          {
                            pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetExtentDataSource(this, (_OWORD *)a3);
                          }
                          else
                          {
                            v21 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
                            if (!v21)
                              v21 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
                            if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v21 & 0xFFFFFFFFFFFFFFF8))
                            {
                              sub_20C80602C((_DWORD *)this + 2, (uint64_t *)this + 3, &v43);
                              *(_OWORD *)a3 = v43;
                              v43 = 0uLL;
                              pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                            }
                            else
                            {
                              v22 = (pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens);
                              if (!v22)
                                v22 = sub_20C80A3B8(&pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens);
                              if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8))
                              {
                                sub_20C806150((_DWORD *)this + 2, (uint64_t *)this + 3, &v43);
                                *(_OWORD *)a3 = v43;
                                v43 = 0uLL;
                                pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                              }
                              else
                              {
                                v23 = (_QWORD *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCategoriesSchemaTokens);
                                if (!v23)
                                  v23 = (_QWORD *)sub_20C7ED0E8(&pxrInternal__aapl__pxrReserved__::HdCategoriesSchemaTokens);
                                if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*v23 & 0xFFFFFFFFFFFFFFF8))
                                {
                                  pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetCategoriesDataSource(this, a3);
                                }
                                else
                                {
                                  v24 = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
                                  if (!v24)
                                    v24 = sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
                                  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v24 & 0xFFFFFFFFFFFFFFF8))
                                  {
                                    pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetInstanceCategoriesDataSource(this, (_OWORD *)a3);
                                  }
                                  else
                                  {
                                    v25 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
                                    if (!v25)
                                      v25 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
                                    if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v25 & 0xFFFFFFFFFFFFFFF8))
                                    {
                                      sub_20C8061EC((uint64_t *)this + 3, (_DWORD *)this + 2, &v43);
                                      *(_OWORD *)a3 = v43;
                                      v43 = 0uLL;
                                      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                                    }
                                    else
                                    {
                                      v26 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
                                      if (!v26)
                                        v26 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
                                      if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v26 & 0xFFFFFFFFFFFFFFF8))
                                      {
                                        sub_20C806350((uint64_t *)this + 3, (_DWORD *)this + 2, &v43);
                                        *(_OWORD *)a3 = v43;
                                        v43 = 0uLL;
                                        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                                      }
                                      else
                                      {
                                        v27 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens);
                                        if (!v27)
                                          v27 = sub_20C80A5D8(&pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens);
                                        if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v27 & 0xFFFFFFFFFFFFFFF8))
                                        {
                                          pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetSampleFilterDataSource(this, (_OWORD *)a3);
                                        }
                                        else
                                        {
                                          v28 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
                                          if (!v28)
                                            v28 = sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
                                          if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v28 & 0xFFFFFFFFFFFFFFF8))
                                          {
                                            pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetIntegratorDataSource(this, (_OWORD *)a3);
                                          }
                                          else
                                          {
                                            v29 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
                                            if (!v29)
                                              v29 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
                                            if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v29 & 0xFFFFFFFFFFFFFFF8))
                                            {
                                              pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::_GetDisplayFilterDataSource(this, (_OWORD *)a3);
                                            }
                                            else
                                            {
                                              v30 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
                                              if (!v30)
                                                v30 = sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
                                              if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8))
                                              {
                                                sub_20C806474((_DWORD *)this + 2, (uint64_t *)this + 3, &v43);
                                                *(_OWORD *)a3 = v43;
                                                v43 = 0uLL;
                                                pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                                              }
                                              else
                                              {
                                                v31 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
                                                if (!v31)
                                                  v31 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
                                                if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v31 + 15) & 0xFFFFFFFFFFFFFFF8))
                                                {
                                                  sub_20C806598((uint64_t *)this + 3, (_DWORD *)this + 2, &v42);
                                                  v41 = v42;
                                                  v42 = 0uLL;
                                                  *(_OWORD *)a3 = v41;
                                                  v43 = 0uLL;
                                                  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                                                  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v42);
                                                }
                                                else
                                                {
                                                  v32 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
                                                  if (!v32)
                                                    v32 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
                                                  if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v32 & 0xFFFFFFFFFFFFFFF8))
                                                  {
                                                    v33 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
                                                    if (!v33)
                                                      v33 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
                                                    if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v33 & 0xFFFFFFFFFFFFFFF8))
                                                    {
                                                      sub_20C8066CC((_DWORD *)this + 2, (uint64_t *)this + 3, &v43);
                                                      *(_OWORD *)a3 = v43;
                                                      v43 = 0uLL;
                                                      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                                                      return;
                                                    }
                                                    goto LABEL_94;
                                                  }
                                                  sub_20C806630((_DWORD *)this + 2, (uint64_t *)this + 3, &v43);
                                                  *(_OWORD *)a3 = v43;
                                                  v43 = 0uLL;
                                                  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v43);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_20C805FC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C805FE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = operator new(0x10uLL);
  v5 = *a1;
  *v4 = &unk_24C54E578;
  v4[1] = v5;
  return sub_20C818600(a2, (uint64_t)v4);
}

_QWORD *sub_20C80602C@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  uint64_t v7;
  _QWORD *result;
  _QWORD v9[4];
  char v10;

  v6 = operator new(0x18uLL);
  v7 = *a2;
  *(_QWORD *)v6 = off_24C54E730;
  sub_20BFD6E54(v6 + 2, a1);
  sub_20BFD6EA4(v6 + 3, a1 + 1);
  *((_QWORD *)v6 + 2) = v7;
  if (!v7)
  {
    v9[0] = "hd/dataSourceLegacyPrim.cpp";
    v9[1] = "Hd_DataSourceCamera";
    v9[2] = 1240;
    v9[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceCamera::Hd_DataSourceCamera(const SdfP"
            "ath &, HdSceneDelegate *)";
    v10 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v9, "_sceneDelegate", 0);
  }
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54F010;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C80610C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  void *v5;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C806150@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  uint64_t v7;
  _QWORD *result;

  v6 = operator new(0x18uLL);
  v7 = *a2;
  *(_QWORD *)v6 = off_24C54F088;
  sub_20BFD6E54(v6 + 2, a1);
  sub_20BFD6EA4(v6 + 3, a1 + 1);
  *((_QWORD *)v6 + 2) = v7;
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54F190;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C8061D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8061EC@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  __int128 v10;
  uint64_t v11;
  const char *v12;
  char v13;

  v6 = (char *)operator new(0x30uLL);
  v7 = *a1;
  *(_QWORD *)v6 = off_24C54F208;
  *((_QWORD *)v6 + 1) = v7;
  sub_20BFD6E54((_DWORD *)v6 + 4, a2);
  sub_20BFD6EA4((_DWORD *)v6 + 5, a2 + 1);
  *(_OWORD *)(v6 + 24) = xmmword_20CB16770;
  v6[40] = 0;
  v8 = *((_QWORD *)v6 + 1);
  if (!v8)
  {
    *(_QWORD *)&v10 = "hd/dataSourceLegacyPrim.cpp";
    *((_QWORD *)&v10 + 1) = "Hd_DataSourceRenderBuffer";
    v11 = 2153;
    v12 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceRenderBuffer::Hd_DataSourceRenderBuffer("
          "HdSceneDelegate *, const SdfPath &)";
    v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v10, "_sceneDelegate", 0);
    v8 = *((_QWORD *)v6 + 1);
  }
  (*(void (**)(__int128 *__return_ptr, uint64_t, char *))(*(_QWORD *)v8 + 280))(&v10, v8, v6 + 16);
  *(_OWORD *)(v6 + 24) = v10;
  v6[40] = v11;
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54F598;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C806308(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  void *v5;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C806350@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;
  _QWORD v9[4];
  char v10;

  v6 = operator new(0x18uLL);
  v7 = *a1;
  *v6 = off_24C54F610;
  v6[1] = v7;
  sub_20BFD6E54((_DWORD *)v6 + 4, a2);
  sub_20BFD6EA4((_DWORD *)v6 + 5, a2 + 1);
  if (!v6[1])
  {
    v9[0] = "hd/dataSourceLegacyPrim.cpp";
    v9[1] = "Hd_DataSourceRenderSettings";
    v9[2] = 2299;
    v9[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceRenderSettings::Hd_DataSourceRenderSet"
            "tings(HdSceneDelegate *, const SdfPath &)";
    v10 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v9, "_sceneDelegate", 0);
  }
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54F8F0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C806430(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  void *v5;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C806474@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  uint64_t v7;
  _QWORD *result;
  _QWORD v9[4];
  char v10;

  v6 = operator new(0x18uLL);
  v7 = *a2;
  *(_QWORD *)v6 = off_24C54F968;
  sub_20BFD6E54(v6 + 2, a1);
  sub_20BFD6EA4(v6 + 3, a1 + 1);
  *((_QWORD *)v6 + 2) = v7;
  if (!v7)
  {
    v9[0] = "hd/dataSourceLegacyPrim.cpp";
    v9[1] = "Hd_DataSourceVolumeField";
    v9[2] = 1495;
    v9[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceVolumeField::Hd_DataSourceVolumeField("
            "const SdfPath &, HdSceneDelegate *)";
    v10 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v9, "_sceneDelegate", 0);
  }
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54F9B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C806554(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  void *v5;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C806598@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;

  v6 = operator new(0x18uLL);
  v7 = *a1;
  *v6 = off_24C54FA28;
  v6[1] = v7;
  sub_20BFD6E54((_DWORD *)v6 + 4, a2);
  sub_20BFD6EA4((_DWORD *)v6 + 5, a2 + 1);
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54FA70;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C806614(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C806630@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  uint64_t v7;
  _QWORD *result;

  v6 = operator new(0x18uLL);
  v7 = *a2;
  *(_QWORD *)v6 = off_24C54FAE8;
  sub_20BFD6E54(v6 + 2, a1);
  sub_20BFD6EA4(v6 + 3, a1 + 1);
  *((_QWORD *)v6 + 2) = v7;
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54FF20;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C8066B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8066CC@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  uint64_t v7;
  _QWORD *result;
  _QWORD v9[4];
  char v10;

  v6 = operator new(0x18uLL);
  v7 = *a2;
  *(_QWORD *)v6 = off_24C54FF98;
  sub_20BFD6E54(v6 + 2, a1);
  sub_20BFD6EA4(v6 + 3, a1 + 1);
  *((_QWORD *)v6 + 2) = v7;
  if (!v7)
  {
    v9[0] = "hd/dataSourceLegacyPrim.cpp";
    v9[1] = "Hd_DataSourceImageShader";
    v9[2] = 2382;
    v9[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceImageShader::Hd_DataSourceImageShader("
            "const SdfPath &, HdSceneDelegate *)";
    v10 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v9, "_sceneDelegate", 0);
  }
  *a3 = v6;
  result = operator new(0x20uLL);
  *result = &off_24C54FFE0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v6;
  a3[1] = result;
  return result;
}

void sub_20C8067AC(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  void *v5;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

void sub_20C8067F0(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54C5D8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 72));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 56));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 40));
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C806864(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54C5D8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 72));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 56));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 40));
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C8068DC(uint64_t *a1, uint64_t *a2)
{
  std::__sp_mut *sp_mut;
  uint64_t v5;
  uint64_t v6;

  sp_mut = std::__get_sp_mut(a1);
  std::__sp_mut::lock(sp_mut);
  v5 = *a1;
  *a1 = *a2;
  *a2 = v5;
  v6 = a1[1];
  a1[1] = a2[1];
  a2[1] = v6;
  std::__sp_mut::unlock(sp_mut);
}

void sub_20C806934(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__sp_mut *sp_mut;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  sp_mut = std::__get_sp_mut(a1);
  std::__sp_mut::lock(sp_mut);
  v5 = a1[1];
  *a2 = *a1;
  a2[1] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  std::__sp_mut::unlock(sp_mut);
}

pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *sub_20C80698C(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C8069D4();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType::~HdPrimvarSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *sub_20C8069D4()
{
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)operator new(0xB8uLL);
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType::HdPrimvarSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C806A00(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C806A14(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  v2 = *a2;
  *(_QWORD *)result = *a2;
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 2, v3));
    if ((v4 & 1) == 0)
      *(_QWORD *)result &= 0xFFFFFFFFFFFFFFF8;
  }
  v5 = a2[1];
  *(_QWORD *)(result + 8) = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *(_QWORD *)(result + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  v8 = a2[2];
  *(_QWORD *)(result + 16) = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(result + 16) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_BYTE *)(result + 24) = *((_BYTE *)a2 + 24);
  return result;
}

_QWORD *sub_20C806ABC(_QWORD *result)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;

  v1 = result[2];
  if ((v1 & 7) != 0)
  {
    v2 = (unsigned int *)(v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  v4 = result[1];
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  if ((*result & 7) != 0)
  {
    v7 = (unsigned int *)(*result & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  return result;
}

uint64_t sub_20C806B20(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;

  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 8);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  return a1;
}

uint64_t sub_20C806BB4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 16);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *(_QWORD *)(a1 + 8);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v11 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  return a1;
}

uint64_t sub_20C806C68(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 16);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *(_QWORD *)(a1 + 8);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v11 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  return a1;
}

__n128 sub_20C806D1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  __n128 result;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  v7 = a2[1];
  *(_QWORD *)(a1 + 8) = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = a2[2];
  *(_QWORD *)(a1 + 16) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 16) &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BFD6E54((_DWORD *)(a1 + 24), (_DWORD *)a2 + 6);
  sub_20BFD6EA4((_DWORD *)(a1 + 28), (_DWORD *)a2 + 7);
  v13 = a2[4];
  *(_QWORD *)(a1 + 32) = v13;
  if ((v13 & 7) != 0)
  {
    v14 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 2, v14));
    if ((v15 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  result = *(__n128 *)(a2 + 5);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

_DWORD *sub_20C806E2C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  _DWORD *result;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  result = sub_20BFD265C((_DWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 16);
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  v9 = *(_QWORD *)(a1 + 8);
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v12 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  return result;
}

uint64_t *sub_20C806EDC(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_20C806F30(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_20C806F18(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C807B8C(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_20C806F30(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_20C806FB4(v5, v6, v4 + 4, v4 + 4);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_20C806FB4(uint64_t **a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;
  uint64_t v12;

  v6 = sub_20C0A7D98(a1, a2, &v12, &v11, a3);
  v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    sub_20C807048((uint64_t)a1, a4, (uint64_t)v10);
    sub_20BDDE1B4(a1, v12, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_20C807AD4((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t *sub_20C807048@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *result;

  v5 = a1 + 8;
  v6 = (uint64_t *)operator new(0x70uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_20C8070B0(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_20C807098(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C807AD4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C8070B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  sub_20C8071D4(a1 + 1, a2[1], a2[2], (a2[2] - a2[1]) >> 5);
  a1[4] = 0;
  a1[5] = 0;
  a1[6] = 0;
  sub_20C807528(a1 + 4, a2[4], a2[5], 0xCCCCCCCCCCCCCCCDLL * ((a2[5] - a2[4]) >> 3));
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;
  sub_20BFE538C(a1 + 7, (uint64_t *)a2[7], (uint64_t *)a2[8], (a2[8] - a2[7]) >> 3);
  return a1;
}

void sub_20C807180(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a2);
  sub_20C807A50((void ***)va);
  sub_20C8074A4((void ***)va);
  if ((*v2 & 7) != 0)
  {
    v4 = (unsigned int *)(*v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8071D4(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BF25370(result, a4);
    result = (_QWORD *)sub_20C807258((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C807238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C8074A4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C807258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C8072E8(a1, v4, v6);
      v6 += 32;
      v4 = v12 + 32;
      v12 += 32;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C8073A0((uint64_t)v9);
  return v4;
}

_DWORD *sub_20C8072E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  _DWORD *result;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;

  sub_20BFD6E54((_DWORD *)a2, (_DWORD *)a3);
  sub_20BFD6EA4((_DWORD *)(a2 + 4), (_DWORD *)(a3 + 4));
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 8) = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *(_QWORD *)(a2 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BFD6E54((_DWORD *)(a2 + 16), (_DWORD *)(a3 + 16));
  result = sub_20BFD6EA4((_DWORD *)(a2 + 20), (_DWORD *)(a3 + 20));
  v9 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a2 + 24) = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      *(_QWORD *)(a2 + 24) &= 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_20C8073A0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C8073D4((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C8073D4(uint64_t *result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)result[1];
  v1 = (uint64_t *)result[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *result;
    do
    {
      v3 -= 32;
      result = (uint64_t *)sub_20C807424(v5, v3);
    }
    while (v3 != v4);
  }
  return result;
}

_DWORD *sub_20C807424(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  v3 = *(_QWORD *)(a2 + 24);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_20BFD265C((_DWORD *)(a2 + 16));
  v6 = *(_QWORD *)(a2 + 8);
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 4));
  return sub_20BFD265C((_DWORD *)a2);
}

void sub_20C8074A4(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_20C807424((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_QWORD *sub_20C807528(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BED4B34(result, a4);
    result = (_QWORD *)sub_20C8075AC((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C80758C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C807A50(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8075AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C807654(a1, v4, v6);
      v6 += 40;
      v4 = v12 + 40;
      v12 += 40;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C807974((uint64_t)v9);
  return v4;
}

void sub_20C807640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C807974((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C807654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  sub_20BFD6E54((_DWORD *)a2, (_DWORD *)a3);
  sub_20BFD6EA4((_DWORD *)(a2 + 4), (_DWORD *)(a3 + 4));
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 8) = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *(_QWORD *)(a2 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  return sub_20C807718((uint64_t *)(a2 + 16), a3 + 16);
}

void sub_20C8076D8(_Unwind_Exception *a1)
{
  uint64_t v1;
  _DWORD *v2;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *(_QWORD *)(v1 + 8);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C((_DWORD *)v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C807718(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_20C80776C(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_20C807754(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C3A3BA4(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_20C80776C(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_20C8077F0(v5, v6, v4 + 4, v4 + 4);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_20C8077F0(uint64_t **a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (uint64_t **)sub_20C0A7D98(a1, a2, &v10, &v9, a3);
  result = *v6;
  if (!*v6)
  {
    sub_20C807870((uint64_t)a1, a4, (uint64_t)&v8);
    sub_20BDDE1B4(a1, v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_20C807870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *result;

  v5 = a1 + 8;
  v6 = (uint64_t *)operator new(0x38uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_20C8078F0(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_20C8078D4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  sub_20C73B33C(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C8078F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BF4C6D0(a1 + 1, a2 + 1);
  return a1;
}

uint64_t sub_20C807974(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C8079A8((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C8079A8(uint64_t *result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)result[1];
  v1 = (uint64_t *)result[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *result;
    do
    {
      v3 -= 40;
      result = (uint64_t *)sub_20C8079F8(v5, v3);
    }
    while (v3 != v4);
  }
  return result;
}

_DWORD *sub_20C8079F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  sub_20C3A3BA4(a2 + 16, *(_QWORD **)(a2 + 24));
  v3 = *(_QWORD *)(a2 + 8);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 4));
  return sub_20BFD265C((_DWORD *)a2);
}

void sub_20C807A50(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 40;
        sub_20C8079F8((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C807AD4(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C807B18((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

void sub_20C807B18(uint64_t a1)
{
  void **v2;
  unsigned int *v3;
  unsigned int v4;
  void **v5;

  v2 = (void **)(a1 + 8);
  v5 = (void **)(a1 + 56);
  sub_20BEEB2B8(&v5);
  v5 = (void **)(a1 + 32);
  sub_20C807A50(&v5);
  v5 = v2;
  sub_20C8074A4(&v5);
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v3 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
}

void sub_20C807B8C(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_20C807B8C(a1, *a2);
    sub_20C807B8C(a1, a2[1]);
    sub_20C807B18((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t *sub_20C807BD4(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t **v5;
  uint64_t **v6;
  uint64_t **v7;
  const void **v8;
  uint64_t *v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t *v12;
  uint64_t *v13;
  _QWORD v15[2];
  char v16;

  v5 = a1 + 1;
  v4 = a1[1];
  v6 = a1 + 1;
  v7 = a1 + 1;
  if (!v4)
    goto LABEL_10;
  v6 = a1 + 1;
  while (1)
  {
    while (1)
    {
      v7 = (uint64_t **)v4;
      v8 = (const void **)(v4 + 4);
      if (!sub_20BDDDF74((uint64_t)(a1 + 2), (const void **)a2, (const void **)v4 + 4))
        break;
      v4 = *v7;
      v6 = v7;
      if (!*v7)
        goto LABEL_10;
    }
    if (!sub_20BDDDF74((uint64_t)(a1 + 2), v8, (const void **)a2))
      break;
    v6 = v7 + 1;
    v4 = v7[1];
    if (!v4)
      goto LABEL_10;
  }
  v9 = *v6;
  if (!*v6)
  {
LABEL_10:
    v10 = operator new(0x50uLL);
    v15[0] = v10;
    v15[1] = v5;
    v16 = 0;
    v11 = v10 + 4;
    if (*(char *)(a2 + 23) < 0)
    {
      sub_20BDDBFAC(v11, *(void **)a2, *(_QWORD *)(a2 + 8));
      v12 = (uint64_t *)v15[0];
    }
    else
    {
      *(_OWORD *)v11 = *(_OWORD *)a2;
      v10[6] = *(_QWORD *)(a2 + 16);
      v12 = v10;
    }
    v10[7] = 0;
    v10[8] = 0;
    v10[9] = 0;
    v16 = 1;
    *v12 = 0;
    v12[1] = 0;
    v12[2] = (uint64_t)v7;
    *v6 = v12;
    v13 = (uint64_t *)**a1;
    if (v13)
    {
      *a1 = v13;
      v12 = *v6;
    }
    sub_20BDDE208(a1[1], v12);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    v9 = (uint64_t *)v15[0];
    v15[0] = 0;
    sub_20C807FE4((uint64_t)v15);
  }
  return v9 + 7;
}

void sub_20C807D24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C807FE4((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C807D38@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x18uLL);
  sub_20C808084(v4, a1);
  return sub_20C808158(a2, (uint64_t)v4);
}

void sub_20C807D7C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C807D90(uint64_t *a1, uint64_t *a2)
{
  _QWORD *v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v7[17];
  uint64_t v8;
  _QWORD v9[18];

  v9[17] = *MEMORY[0x24BDAC8D0];
  v7[16] = 0x800000000;
  sub_20C808C0C(&v8, a2, v7);
  v3 = sub_20C8082D8(a1, &v8);
  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v9);
  if ((v8 & 7) != 0)
  {
    v4 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v7);
  return v3 + 1;
}

void sub_20C807E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  unsigned int *v28;
  unsigned int v29;

  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v26 + 8));
  if ((a26 & 7) != 0)
  {
    v28 = (unsigned int *)(a26 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stlxr(v29 - 2, v28));
  }
  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C807E8C@<X0>(unsigned int *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;

  v6 = operator new(0x210uLL);
  pxrInternal__aapl__pxrReserved__::HdRetainedSmallVectorDataSource::HdRetainedSmallVectorDataSource(v6, *a1, *a2);
  return sub_20C809060(a3, (uint64_t)v6);
}

void sub_20C807ED8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C807EEC(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 64));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 48));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 32));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1);
}

void sub_20C807F2C(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 32));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *sub_20C807F5C(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C807FA4();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType::~HdMaterialNodeParameterSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *sub_20C807FA4()
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchemaTokens_StaticTokenType::HdMaterialNodeParameterSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C807FD0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C807FE4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C808028((uint64_t)v2 + 32);
    operator delete(v2);
  }
  return a1;
}

void sub_20C808028(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v2 = a1 + 24;
  v3 = *(_QWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  sub_20BF4C2D8(v2);
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

_QWORD *sub_20C808084(_QWORD *a1, _QWORD *a2)
{
  *a1 = &unk_24C54C620;
  sub_20BF4C6D0(a1 + 1, a2);
  return a1;
}

void sub_20C8080B8(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

void sub_20C8080CC(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54C620;
  sub_20BF4C2D8((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C808100(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54C620;
  sub_20BF4C2D8((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C808138@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20BF4C6D0(a2, (_QWORD *)(a1 + 8));
}

uint64_t sub_20C808144()
{
  return 0;
}

_QWORD *sub_20C80814C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20BF4C6D0(a2, (_QWORD *)(a1 + 8));
}

_QWORD *sub_20C808158(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54C688;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C8081A0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C8081C4(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8081D8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8081F0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54C6D8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C808230(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_20C808270((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *sub_20C808270(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *result, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  v3 = result;
  for (i = *((_QWORD *)result + 1); i != a2; i -= 144)
  {
    result = sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(i - 136));
    v6 = *(_QWORD *)(i - 144);
    v5 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
  }
  *((_QWORD *)v3 + 1) = a2;
  return result;
}

_QWORD *sub_20C8082D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  _QWORD *v9;
  char v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD *result;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[18];

  v21[17] = *MEMORY[0x24BDAC8D0];
  v4 = a1[3];
  if (v4)
  {
    v5 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 4);
    v6 = *a2;
    if ((*a2 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v6 &= 0xFFFFFFFFFFFFFFF8;
    }
    v20 = v6;
    v21[0] = v5;
    v9 = sub_20BF2D7C8(v4, &v20, &v20);
    if ((v20 & 7) != 0)
    {
      v11 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stlxr(v12 - 2, v11));
    }
    if (!v10)
      return (_QWORD *)(*a1 + 144 * v9[3]);
    goto LABEL_17;
  }
  result = (_QWORD *)*a1;
  v14 = (_QWORD *)a1[1];
  if ((_QWORD *)*a1 != v14)
  {
    while ((*result & 0xFFFFFFFFFFFFFFF8) != (*a2 & 0xFFFFFFFFFFFFFFF8))
    {
      result += 18;
      if (result == v14)
        goto LABEL_17;
    }
  }
  if (result == v14)
  {
LABEL_17:
    sub_20C808A38((uint64_t)&v20, a2, (uint64_t)(a2 + 1));
    v15 = a1[1];
    if (v15 >= a1[2])
    {
      v16 = sub_20C808534(a1, &v20);
    }
    else
    {
      sub_20C808650(a1[1], &v20);
      v16 = v15 + 144;
      a1[1] = v15 + 144;
    }
    a1[1] = v16;
    sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v21);
    if ((v20 & 7) != 0)
    {
      v17 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    v19 = a1[1];
    if (0x8E38E38E38E38E39 * ((v19 - *a1) >> 4) >= 0x80)
    {
      sub_20C808ABC(a1);
      v19 = a1[1];
    }
    return (_QWORD *)(v19 - 144);
  }
  return result;
}

void sub_20C8084BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C808534(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 4);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1C71C71C71C71C7)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x8E38E38E38E38E39 * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xE38E38E38E38E3)
    v9 = 0x1C71C71C71C71C7;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C808804(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[144 * v4];
  v16 = &v10[144 * v9];
  sub_20C808650((uint64_t)v14, a2);
  v15 = v14 + 144;
  sub_20C808790(a1, &v13);
  v11 = a1[1];
  sub_20C808994((uint64_t *)&v13);
  return v11;
}

void sub_20C80863C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C808994((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C808650(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C8086D4((_DWORD *)(a1 + 8), (uint64_t)(a2 + 1));
  return a1;
}

_DWORD *sub_20C8086D4(_DWORD *a1, uint64_t a2)
{
  _DWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = a1;
  a1[33] = 8;
  v4 = *(unsigned int *)(a2 + 128);
  if (v4 <= 8)
  {
    a1[32] = v4;
    v5 = *(_QWORD **)a2;
    v6 = *(unsigned int *)(a2 + 128);
    if (*(_DWORD *)(a2 + 132) < 9u)
      v5 = (_QWORD *)a2;
    v7 = &v5[2 * v6];
    if (!(_DWORD)v6)
      return v3;
    do
    {
LABEL_9:
      v9 = v5[1];
      *(_QWORD *)a1 = *v5;
      *((_QWORD *)a1 + 1) = v9;
      if (v9)
      {
        v10 = (unint64_t *)(v9 + 8);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
      }
      v5 += 2;
      a1 += 4;
    }
    while (v5 != v7);
    return v3;
  }
  a1 = malloc(16 * v4);
  *(_QWORD *)v3 = a1;
  v3[32] = v4;
  v3[33] = v4;
  v5 = *(_QWORD **)a2;
  v8 = *(unsigned int *)(a2 + 128);
  if (*(_DWORD *)(a2 + 132) < 9u)
    v5 = (_QWORD *)a2;
  v7 = &v5[2 * v8];
  if ((_DWORD)v8)
    goto LABEL_9;
  return v3;
}

uint64_t sub_20C808790(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C80884C((uint64_t)(a1 + 2), a1[1], (uint64_t *)a1[1], *a1, (uint64_t *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_20C808804(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1C71C71C71C71C8)
    sub_20BDDF5B4();
  return operator new(144 * a2);
}

uint64_t sub_20C80884C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 18;
      sub_20C808650(v7 - 144, v9);
      v7 = *((_QWORD *)&v15 + 1) - 144;
      *((_QWORD *)&v15 + 1) -= 144;
    }
    while (v9 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_20C808904((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v12);
  return v10;
}

void sub_20C8088F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C808904((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *sub_20C808904(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *a1)
{
  if (!*((_BYTE *)a1 + 24))
    sub_20C808938(a1);
  return a1;
}

pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *sub_20C808938(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *result)
{
  _QWORD *v1;
  _QWORD *v2;
  unsigned int *v3;
  unsigned int v4;

  v1 = *(_QWORD **)(*((_QWORD *)result + 2) + 8);
  v2 = *(_QWORD **)(*((_QWORD *)result + 1) + 8);
  while (v1 != v2)
  {
    result = sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v1 + 1));
    if ((*v1 & 7) != 0)
    {
      v3 = (unsigned int *)(*v1 & 0xFFFFFFFFFFFFFFF8);
      do
        v4 = __ldxr(v3);
      while (__stlxr(v4 - 2, v3));
    }
    v1 += 18;
  }
  return result;
}

uint64_t *sub_20C808994(uint64_t *a1)
{
  sub_20C8089C8((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1, a1[1]);
  if (*a1)
    operator delete((void *)*a1);
  return a1;
}

pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *sub_20C8089C8(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *result, uint64_t a2)
{
  uint64_t v2;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  v2 = *((_QWORD *)result + 2);
  if (v2 != a2)
  {
    v4 = result;
    do
    {
      *((_QWORD *)v4 + 2) = v2 - 144;
      result = sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v2 - 136));
      v5 = *(_QWORD *)(v2 - 144);
      if ((v5 & 7) != 0)
      {
        v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
        do
          v7 = __ldxr(v6);
        while (__stlxr(v7 - 2, v6));
      }
      v2 = *((_QWORD *)v4 + 2);
    }
    while (v2 != a2);
  }
  return result;
}

uint64_t sub_20C808A38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C8086D4((_DWORD *)(a1 + 8), a3);
  return a1;
}

void sub_20C808ABC(uint64_t *a1)
{
  uint64_t *v1;
  _OWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12[2];

  v1 = a1 + 3;
  if (!a1[3])
  {
    v3 = operator new(0x28uLL);
    *v3 = 0u;
    v3[1] = 0u;
    *((_DWORD *)v3 + 8) = 1065353216;
    sub_20BDEC6E0((uint64_t)v3, 0x80uLL);
    sub_20BF2B064(v1, (uint64_t)v3);
    v4 = *a1;
    if (a1[1] != *a1)
    {
      v5 = 0;
      do
      {
        v6 = *v1;
        v7 = *(_QWORD *)(v4 + 144 * v5);
        if ((v7 & 7) != 0)
        {
          v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
          do
            v9 = __ldxr(v8);
          while (__stxr(v9 + 2, v8));
          if ((v9 & 1) == 0)
            v7 &= 0xFFFFFFFFFFFFFFF8;
        }
        v12[0] = v7;
        v12[1] = v5;
        sub_20BF2D7C8(v6, v12, v12);
        if ((v12[0] & 7) != 0)
        {
          v10 = (unsigned int *)(v12[0] & 0xFFFFFFFFFFFFFFF8);
          do
            v11 = __ldxr(v10);
          while (__stlxr(v11 - 2, v10));
        }
        ++v5;
        v4 = *a1;
      }
      while (v5 < 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 4));
    }
  }
}

void sub_20C808BCC(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = (void *)sub_20BF20BCC(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C808C0C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C808C90((uint64_t)(a1 + 1), a3);
  return a1;
}

uint64_t sub_20C808C90(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  *(_QWORD *)(a1 + 128) = 0x800000000;
  v4 = *((unsigned int *)a2 + 32);
  if (v4 < 9)
  {
    if (*((_DWORD *)a2 + 33) >= 9u)
      v5 = (uint64_t *)*a2;
    else
      v5 = a2;
    if ((_DWORD)v4)
    {
      v6 = 16 * v4;
      v7 = (_OWORD *)a1;
      do
      {
        *v7++ = *(_OWORD *)v5;
        *v5 = 0;
        v5[1] = 0;
        v5 += 2;
        v6 -= 16;
      }
      while (v6);
      v8 = *((unsigned int *)a2 + 32);
      v9 = *((_DWORD *)a2 + 33) >= 9u
         ? (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)*a2
         : (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a2;
      if ((_DWORD)v8)
      {
        v10 = 16 * v8;
        do
        {
          pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v9);
          v9 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v11 + 16);
          v10 -= 16;
        }
        while (v10);
      }
    }
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_DWORD *)(a1 + 132) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = 8;
  }
  v12 = *(_DWORD *)(a1 + 128);
  *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v12;
  return a1;
}

void sub_20C808D58(unsigned int *a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  uint64_t v7;
  __int128 v8;
  unint64_t *v9;
  unint64_t v10;

  v5 = a1[32];
  v4 = a1[33];
  if (v5 == v4)
  {
    sub_20C808DDC(a1, v5 + (v5 >> 1) + 1);
    v4 = a1[33];
  }
  v6 = a1;
  if (v4 >= 9)
    v6 = *(unsigned int **)a1;
  v7 = a1[32];
  v8 = *a2;
  *(_OWORD *)&v6[4 * v7] = *a2;
  if (*((_QWORD *)&v8 + 1))
  {
    v9 = (unint64_t *)(*((_QWORD *)&v8 + 1) + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    LODWORD(v7) = a1[32];
  }
  a1[32] = v7 + 1;
}

void sub_20C808DDC(unsigned int *a1, unsigned int a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = malloc(16 * a2);
  v5 = v4;
  v6 = a1[33];
  v7 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1;
  if (v6 >= 9)
    v7 = *(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **)a1;
  v8 = a1[32];
  if ((_DWORD)v8)
  {
    v9 = 16 * v8;
    v10 = v4;
    do
    {
      *v10++ = *(_OWORD *)v7;
      *(_QWORD *)v7 = 0;
      *((_QWORD *)v7 + 1) = 0;
      v7 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)((char *)v7 + 16);
      v9 -= 16;
    }
    while (v9);
    v6 = a1[33];
  }
  v11 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1;
  if (v6 >= 9)
    v11 = *(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **)a1;
  v12 = a1[32];
  if ((_DWORD)v12)
  {
    v13 = 16 * v12;
    do
    {
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v11);
      v11 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v14 + 16);
      v13 -= 16;
    }
    while (v13);
    v6 = a1[33];
  }
  if (v6 >= 9)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  a1[33] = a2;
}

void sub_20C808E94(uint64_t a1, unsigned int a2)
{
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unsigned int *v13;
  unsigned int v14;

  v4 = malloc(8 * a2);
  v5 = v4;
  v6 = *(_DWORD *)(a1 + 68);
  v7 = (_QWORD *)a1;
  if (v6 >= 9)
    v7 = *(_QWORD **)a1;
  v8 = *(unsigned int *)(a1 + 64);
  if ((_DWORD)v8)
  {
    v9 = 8 * v8;
    v10 = v4;
    do
    {
      *v10++ = *v7;
      *v7++ = 0;
      v9 -= 8;
    }
    while (v9);
  }
  v11 = (_QWORD *)a1;
  if (v6 >= 9)
    v11 = *(_QWORD **)a1;
  if ((_DWORD)v8)
  {
    v12 = &v11[v8];
    do
    {
      if ((*v11 & 7) != 0)
      {
        v13 = (unsigned int *)(*v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v14 = __ldxr(v13);
        while (__stlxr(v14 - 2, v13));
      }
      ++v11;
    }
    while (v11 != v12);
    v6 = *(_DWORD *)(a1 + 68);
  }
  if (v6 >= 9)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 68) = a2;
}

void sub_20C808F60(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  v4 = *(_DWORD *)(a1 + 64);
  v5 = *(_DWORD *)(a1 + 68);
  if (v4 == v5)
  {
    sub_20C808E94(a1, v4 + (v4 >> 1) + 1);
    v5 = *(_DWORD *)(a1 + 68);
  }
  v6 = a1;
  if (v5 >= 9)
    v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 64);
  v8 = *a2;
  *(_QWORD *)(v6 + 8 * v7) = *a2;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(v6 + 8 * v7) &= 0xFFFFFFFFFFFFFFF8;
  }
  ++*(_DWORD *)(a1 + 64);
}

__n128 sub_20C808FF4(unsigned int *a1, __n128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  __n128 result;

  v5 = a1[32];
  v4 = a1[33];
  if (v5 == v4)
  {
    sub_20C808DDC(a1, v5 + (v5 >> 1) + 1);
    v4 = a1[33];
  }
  v6 = a1;
  if (v4 >= 9)
    v6 = *(unsigned int **)a1;
  result = *a2;
  *(__n128 *)&v6[4 * a1[32]] = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  ++a1[32];
  return result;
}

_QWORD *sub_20C809060(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54C700;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C8090A8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C8090CC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8090E0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8090F8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54C750))
    return a1 + 24;
  else
    return 0;
}

pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *sub_20C809138(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1;
  v2 = *((_DWORD *)a1 + 33);
  if (v2 >= 9)
    a1 = *(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **)a1;
  v3 = *((unsigned int *)v1 + 32);
  if ((_DWORD)v3)
  {
    v4 = 16 * v3;
    do
    {
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(a1);
      a1 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v5 + 16);
      v4 -= 16;
    }
    while (v4);
    v2 = *((_DWORD *)v1 + 33);
  }
  if (v2 >= 9)
    free(*(void **)v1);
  return v1;
}

uint64_t sub_20C809198(uint64_t a1)
{
  unsigned int v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unsigned int *v6;
  unsigned int v7;

  v2 = *(_DWORD *)(a1 + 68);
  v3 = (_QWORD *)a1;
  if (v2 >= 9)
    v3 = *(_QWORD **)a1;
  v4 = *(unsigned int *)(a1 + 64);
  if ((_DWORD)v4)
  {
    v5 = &v3[v4];
    do
    {
      if ((*v3 & 7) != 0)
      {
        v6 = (unsigned int *)(*v3 & 0xFFFFFFFFFFFFFFF8);
        do
          v7 = __ldxr(v6);
        while (__stlxr(v7 - 2, v6));
      }
      ++v3;
    }
    while (v3 != v5);
    v2 = *(_DWORD *)(a1 + 68);
  }
  if (v2 >= 9)
    free(*(void **)a1);
  return a1;
}

void sub_20C809218(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_20C809218(a1, *a2);
    sub_20C809218(a1, a2[1]);
    sub_20C808028((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

unsigned int **sub_20C809260(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C8092A8();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType::~HdLegacyPrimTypeTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C8092A8()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeTokens_StaticTokenType::HdLegacyPrimTypeTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C8092D4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *sub_20C8092E8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809330();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType::~HdPrimTypeTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *sub_20C809330()
{
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)operator new(0x148uLL);
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType::HdPrimTypeTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80935C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *sub_20C809370(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C8093B8();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType::~HdMeshSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *sub_20C8093B8()
{
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)operator new(0x48uLL);
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType::HdMeshSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C8093E4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *sub_20C8093F8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809440();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType::~HdMaterialBindingsSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *sub_20C809440()
{
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType::HdMaterialBindingsSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80946C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C809480(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54C778;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C8094C0(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54C778;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_DWORD *sub_20C809504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v3;

  *(_QWORD *)(a2 + 8) = (char *)&off_24C524B10 + 1;
  v3 = sub_20BFD6E54((_DWORD *)a2, (_DWORD *)(a1 + 8));
  return sub_20BFD6EA4(v3 + 1, (_DWORD *)(a1 + 12));
}

uint64_t sub_20C809544()
{
  return 0;
}

_DWORD *sub_20C80954C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  _DWORD *v3;

  v3 = sub_20BFD6E54(a2, (_DWORD *)(a1 + 8));
  return sub_20BFD6EA4(v3 + 1, (_DWORD *)(a1 + 12));
}

_QWORD *sub_20C80957C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54C7C8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C8095C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C8095E8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8095FC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C809614(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54C818))
    return a1 + 24;
  else
    return 0;
}

pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *sub_20C809654(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80969C();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType::~HdVisibilitySchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *sub_20C80969C()
{
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens_StaticTokenType::HdVisibilitySchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C8096C8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *sub_20C8096DC(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809724();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType::~HdVolumeFieldSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *sub_20C809724()
{
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)operator new(0x48uLL);
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType::HdVolumeFieldSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C809750(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C809764(_QWORD *a1)
{
  uint64_t v1;
  unint64_t *v3;
  _QWORD *v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v12)(void);

  v1 = a1[4];
  if (v1)
  {
    v4 = a1 + 3;
    v3 = (unint64_t *)a1[3];
    if (v3)
    {
      do
      {
        v10 = __ldxr(v3);
        v11 = v10 - 1;
      }
      while (__stlxr(v11, v3));
      if (!v11)
      {
        __dmb(9u);
        v12 = *(void (**)(void))(*v4 + 8);
        if (v12)
          v12();
      }
    }
    else
    {
      v5 = (unint64_t *)(v1 - 16);
      do
      {
        v6 = __ldxr(v5);
        v7 = v6 - 1;
      }
      while (__stlxr(v7, v5));
      if (!v7)
      {
        __dmb(9u);
        v8 = (_DWORD *)a1[4];
        if (*a1)
        {
          v9 = 8 * *a1;
          do
          {
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v8 + 1);
            sub_20BFD265C(v8);
            v8 += 2;
            v9 -= 8;
          }
          while (v9);
          v8 = (_DWORD *)a1[4];
        }
        operator delete(v8 - 4);
      }
    }
    *v4 = 0;
    v4[1] = 0;
  }
}

pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *sub_20C809824(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80986C();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType::~HdInstancerTopologySchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *sub_20C80986C()
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)operator new(0x40uLL);
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType::HdInstancerTopologySchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C809898(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C8098AC(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54C840;
  sub_20C809764((_QWORD *)a1 + 1);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C8098E4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54C840;
  sub_20C809764((_QWORD *)a1 + 1);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C809920@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = &off_24C54C898;
  return sub_20BF56B40(a2, a1 + 8);
}

uint64_t sub_20C809938()
{
  return 0;
}

uint64_t sub_20C809940@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(_OWORD *)(result + 24);
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_QWORD *)(result + 40);
  *(_QWORD *)(a2 + 32) = v3;
  if (v3)
  {
    v4 = *(unint64_t **)(a2 + 24);
    v5 = (unint64_t *)(v3 - 16);
    if (!v4)
      v4 = v5;
    do
      v6 = __ldxr(v4);
    while (__stxr(v6 + 1, v4));
  }
  return result;
}

uint64_t *sub_20C80997C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 40);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

unsigned int **sub_20C8099A4(unsigned int **a1, unsigned int **a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C809B04(a1);
}

uint64_t sub_20C8099B4()
{
  return 1;
}

unint64_t sub_20C8099BC(unint64_t **a1)
{
  char v2;

  return sub_20C809B5C((uint64_t)&v2, *a1);
}

BOOL sub_20C8099E0(_QWORD **a1, uint64_t *a2)
{
  return sub_20C809BAC(*a1, *a2);
}

BOOL sub_20C8099EC(_QWORD **a1, uint64_t a2)
{
  return sub_20C809BAC(*a1, a2);
}

uint64_t sub_20C8099F8()
{
  return 0;
}

_QWORD *sub_20C809A04(uint64_t **a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v5;

  v3 = *a1;
  v5 = (*a1)[4];
  pxrInternal__aapl__pxrReserved__::VtStreamOutArray(a2, v3, (uint64_t)&v5, (void (*)(uint64_t, _QWORD *))sub_20C809CF0);
  return a2;
}

void *sub_20C809A4C()
{
  return &unk_24C54C950;
}

uint64_t sub_20C809A58()
{
  return 1;
}

void *sub_20C809A60()
{
  return &unk_24C524BC8;
}

uint64_t sub_20C809A6C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_20C809A74(uint64_t a1)
{
  return **(_QWORD **)a1;
}

BOOL sub_20C809A80(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB0DE32 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C809AB8(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C54C950, a2, a3);
}

void *sub_20C809AD8()
{
  return &unk_24C54C950;
}

uint64_t sub_20C809AE4(uint64_t a1)
{
  return *(_QWORD *)a1;
}

char *sub_20C809AEC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  a2[1] = &off_24C54C898;
  return sub_20BF56B40(a2, v2);
}

unsigned int **sub_20C809B04(unsigned int **a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *a1;
  if (*a1)
  {
    v3 = v2 + 10;
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
    {
      __dmb(9u);
      sub_20C809764(v2);
      operator delete(v2);
    }
  }
  return a1;
}

unint64_t sub_20C809B5C(uint64_t a1, unint64_t *a2)
{
  unint64_t v2;
  unsigned int *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *a2;
  if (*a2)
  {
    v3 = (unsigned int *)a2[4];
    v4 = *a2;
    do
    {
      v5 = *v3;
      v6 = v3[1];
      v3 += 2;
      v7 = v2 + v5 + (v2 + v5) * (v2 + v5);
      v2 = v6 + ((v6 + v5 + (v7 >> 1) + (v6 + v5 + (v7 >> 1)) * (v6 + v5 + (v7 >> 1))) >> 1);
      --v4;
    }
    while (v4);
    v2 *= 0x9E3779B97F4A7C55;
  }
  return bswap64(v2);
}

BOOL sub_20C809BAC(_QWORD *a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  if (a1[4] == *(_QWORD *)(a2 + 32) && sub_20BF569A8((uint64_t)a1, a2) && a1[3] == *(_QWORD *)(a2 + 24))
    return 1;
  result = sub_20BF569A8((uint64_t)a1, a2);
  if (!result)
    return result;
  if (!*a1)
    return 1;
  v5 = (uint64_t *)a1[4];
  v6 = *(uint64_t **)(a2 + 32);
  v7 = 8 * *a1 - 8;
  do
  {
    v9 = *v5++;
    v8 = v9;
    v10 = *v6++;
    result = v8 == v10;
    v11 = v8 != v10 || v7 == 0;
    v7 -= 8;
  }
  while (!v11);
  return result;
}

uint64_t sub_20C809C48(_OWORD **a1)
{
  unsigned int v2;
  char *v3;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  unint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v13;

  v2 = atomic_load((unsigned int *)*a1 + 10);
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x30uLL);
    v4 = *a1;
    v5 = (*a1)[1];
    *(_OWORD *)v3 = **a1;
    *((_OWORD *)v3 + 1) = v5;
    v6 = *((_QWORD *)v4 + 4);
    *((_QWORD *)v3 + 4) = v6;
    if (v6)
    {
      v7 = (unint64_t *)*((_QWORD *)v3 + 3);
      v8 = (unint64_t *)(v6 - 16);
      if (!v7)
        v7 = v8;
      do
        v9 = __ldxr(v7);
      while (__stxr(v9 + 1, v7));
      v4 = *a1;
    }
    v10 = (unsigned int *)(v3 + 40);
    atomic_store(0, (unsigned int *)v3 + 10);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
    v13 = (unsigned int *)v4;
    *a1 = v3;
    sub_20C809B04(&v13);
  }
  return (uint64_t)*a1;
}

_QWORD *sub_20C809CF0(pxrInternal__aapl__pxrReserved__::SdfPath **a1, _QWORD *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;

  v3 = *a1;
  *a1 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)*a1 + 8);
  return pxrInternal__aapl__pxrReserved__::operator<<(a2, v3);
}

_QWORD *sub_20C809D08(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54C978;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C809D50(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C809D74(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C809D88(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C809DA0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54C9C8))
    return a1 + 24;
  else
    return 0;
}

pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *sub_20C809DE0(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809E28();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType::~HdLegacyDisplayStyleSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *sub_20C809E28()
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)operator new(0x68uLL);
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType::HdLegacyDisplayStyleSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C809E54(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *sub_20C809E68(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809EB0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType::~HdExtComputationSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *sub_20C809EB0()
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)operator new(0x58uLL);
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType::HdExtComputationSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C809EDC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *sub_20C809EF0(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809F38();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType::~HdRenderBufferSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *sub_20C809F38()
{
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)operator new(0x38uLL);
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType::HdRenderBufferSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C809F64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *sub_20C809F78(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C809FC0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType::~HdRenderSettingsSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *sub_20C809FC0()
{
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)operator new(0x58uLL);
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType::HdRenderSettingsSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C809FEC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *sub_20C80A000(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A048();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType::~HdImageShaderSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *sub_20C80A048()
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)operator new(0x40uLL);
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType::HdImageShaderSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A074(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *sub_20C80A088(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A0D0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType::~HdPrimvarsSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *sub_20C80A0D0()
{
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType *)operator new(0x38uLL);
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchemaTokens_StaticTokenType::HdPrimvarsSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A0FC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *sub_20C80A110(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A158();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType::~HdExtComputationPrimvarsSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *sub_20C80A158()
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType::HdExtComputationPrimvarsSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A184(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *sub_20C80A198(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A1E0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType::~HdPurposeSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *sub_20C80A1E0()
{
  pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdPurposeSchemaTokens_StaticTokenType::HdPurposeSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A20C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *sub_20C80A220(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A268();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType::~HdXformSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *sub_20C80A268()
{
  pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType *)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdXformSchemaTokens_StaticTokenType::HdXformSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A294(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *sub_20C80A2A8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A2F0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType::~HdExtentSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *sub_20C80A2F0()
{
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType::HdExtentSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A31C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *sub_20C80A330(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A378();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType::~HdMaterialSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *sub_20C80A378()
{
  pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdMaterialSchemaTokens_StaticTokenType::HdMaterialSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A3A4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *sub_20C80A3B8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A400();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType::~HdLightSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *sub_20C80A400()
{
  pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdLightSchemaTokens_StaticTokenType::HdLightSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A42C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *sub_20C80A440(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A488();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType::~HdInstanceCategoriesSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *sub_20C80A488()
{
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType::HdInstanceCategoriesSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A4B4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *sub_20C80A4C8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A510();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType::~HdInstancedBySchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *sub_20C80A510()
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType::HdInstancedBySchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A53C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *sub_20C80A550(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A598();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType::~HdIntegratorSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *sub_20C80A598()
{
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType::HdIntegratorSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A5C4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *sub_20C80A5D8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A620();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType::~HdSampleFilterSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *sub_20C80A620()
{
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchemaTokens_StaticTokenType::HdSampleFilterSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A64C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *sub_20C80A660(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A6A8();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType::~HdDisplayFilterSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *sub_20C80A6A8()
{
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType::HdDisplayFilterSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A6D4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *sub_20C80A6E8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A730();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType::~HdVolumeFieldBindingSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *sub_20C80A730()
{
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchemaTokens_StaticTokenType::HdVolumeFieldBindingSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A75C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *sub_20C80A770(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C80A7B8();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType::~HdSceneIndexEmulationTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *sub_20C80A7B8()
{
  pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexEmulationTokens_StaticTokenType::HdSceneIndexEmulationTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C80A7E4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C80A7F8(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_20C80A838((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

uint64_t sub_20C80A838(uint64_t result, uint64_t a2)
{
  uint64_t i;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  for (i = *(_QWORD *)(result + 8); i != a2; i -= 32)
  {
    v3 = *(_QWORD *)(i - 16);
    if ((v3 & 7) != 0)
    {
      v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v5 = __ldxr(v4);
      while (__stlxr(v5 - 2, v4));
    }
    v7 = *(_QWORD *)(i - 32);
    v6 = v7;
    if ((v7 & 7) != 0)
    {
      v8 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
  }
  *(_QWORD *)(result + 8) = a2;
  return result;
}

void sub_20C80A890(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  *(_QWORD *)a1 = off_24C54C9F0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  sub_20BF2B064((uint64_t *)(a1 + 32), 0);
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD **)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
      {
        v3 -= 4;
        sub_20C806ABC(v3);
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C80A918(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54C9F0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  sub_20BF2B064((uint64_t *)(a1 + 32), 0);
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD **)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
      {
        v3 -= 4;
        sub_20C806ABC(v3);
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

_QWORD *sub_20C80A9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  result = (_QWORD *)sub_20BFC9A6C((char **)a2, (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 5);
  v5 = *(uint64_t **)(a1 + 8);
  v6 = *(uint64_t **)(a1 + 16);
  if (v5 != v6)
  {
    result = *(_QWORD **)(a2 + 8);
    do
    {
      if ((unint64_t)result >= *(_QWORD *)(a2 + 16))
      {
        result = sub_20BFCA068((char **)a2, v5);
      }
      else
      {
        v7 = *v5;
        *result = *v5;
        if ((v7 & 7) != 0)
        {
          v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
          do
            v9 = __ldxr(v8);
          while (__stxr(v9 + 2, v8));
          if ((v9 & 1) == 0)
            *result &= 0xFFFFFFFFFFFFFFF8;
        }
        ++result;
      }
      *(_QWORD *)(a2 + 8) = result;
      v5 += 4;
    }
    while (v5 != v6);
  }
  return result;
}

void sub_20C80AA64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C80AA80(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  uint64_t v26;
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder *v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  void *v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder *v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t *v90;
  uint64_t v91;
  std::__shared_weak_count *v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  uint64_t v95;
  std::__shared_weak_count *v96;
  uint64_t v97;
  std::__shared_weak_count *v98;
  uint64_t v99;
  std::__shared_weak_count *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  const char *v109;
  char v110;

  v6 = *(_QWORD **)(a1 + 32);
  if (v6)
  {
    v7 = sub_20BF2B388(v6, a2);
    if (!v7)
    {
LABEL_77:
      *a3 = 0;
      a3[1] = 0;
      return;
    }
    v8 = *(_QWORD *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 8) + 32 * v7[3];
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 8);
    v8 = *(_QWORD *)(a1 + 16);
    if (v9 == v8)
      goto LABEL_77;
    while ((*(_QWORD *)v9 & 0xFFFFFFFFFFFFFFF8) != (*a2 & 0xFFFFFFFFFFFFFFF8))
    {
      v9 += 32;
      if (v9 == v8)
        goto LABEL_77;
    }
  }
  if (v9 == v8)
    goto LABEL_77;
  if (*(_BYTE *)(v9 + 24))
  {
    v104 = 0u;
    v105 = 0u;
    v102 = 0u;
    v103 = 0u;
    v101 = 0u;
    v10 = operator new(0x88uLL);
    v11 = (uint64_t)v10;
    v12 = *(_QWORD *)(a1 + 48);
    *v10 = off_24C54CA38;
    v13 = *a2;
    v10[1] = *a2;
    if ((v13 & 7) != 0)
    {
      v14 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 2, v14));
      if ((v15 & 1) == 0)
        v10[1] = v14;
    }
    sub_20BFD6E54((_DWORD *)v10 + 4, (_DWORD *)(a1 + 40));
    sub_20BFD6EA4((_DWORD *)(v11 + 20), (_DWORD *)(a1 + 44));
    sub_20C80B710(v11 + 24);
    *(_QWORD *)(v11 + 128) = v12;
    if (!v12)
    {
      *(_QWORD *)&v107 = "hd/dataSourceLegacyPrim.cpp";
      *((_QWORD *)&v107 + 1) = "Hd_DataSourceLegacyIndexedPrimvarValue";
      v108 = 236;
      v109 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyIndexedPrimvarValue::Hd_DataSou"
             "rceLegacyIndexedPrimvarValue(const TfToken &, const SdfPath &, HdSceneDelegate *)";
      v110 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v107, "_sceneDelegate", 0);
    }
    v16 = (std::__shared_weak_count *)operator new(0x20uLL);
    v16->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54CAD8;
    v16->__shared_owners_ = 0;
    v16->__shared_weak_owners_ = 0;
    v16[1].__vftable = (std::__shared_weak_count_vtbl *)v11;
    v99 = v11;
    v100 = v16;
    v97 = 0;
    v98 = 0;
    v17 = pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetIndexedPrimvarValue((uint64_t)&v101, &v99);
    v18 = operator new(0x88uLL);
    v19 = (uint64_t)v18;
    v20 = *(_QWORD *)(a1 + 48);
    *v18 = off_24C54CB50;
    v21 = *a2;
    v18[1] = *a2;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stxr(v23 + 2, v22));
      if ((v23 & 1) == 0)
        v18[1] = v22;
    }
    sub_20BFD6E54((_DWORD *)v18 + 4, (_DWORD *)(a1 + 40));
    sub_20BFD6EA4((_DWORD *)(v19 + 20), (_DWORD *)(a1 + 44));
    sub_20C80B710(v19 + 24);
    *(_QWORD *)(v19 + 128) = v20;
    if (!v20)
    {
      *(_QWORD *)&v107 = "hd/dataSourceLegacyPrim.cpp";
      *((_QWORD *)&v107 + 1) = "Hd_DataSourceLegacyPrimvarIndices";
      v108 = 300;
      v109 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyPrimvarIndices::Hd_DataSourceLe"
             "gacyPrimvarIndices(const TfToken &, const SdfPath &, HdSceneDelegate *)";
      v110 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v107, "_sceneDelegate", 0);
    }
    v24 = (std::__shared_weak_count *)operator new(0x20uLL);
    v24->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54CBA0;
    v24->__shared_owners_ = 0;
    v24->__shared_weak_owners_ = 0;
    v24[1].__vftable = (std::__shared_weak_count_vtbl *)v19;
    v95 = v19;
    v96 = v24;
    v93 = 0;
    v94 = 0;
    v25 = pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetIndices(v17, &v95);
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::BuildInterpolationDataSource((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)(v9 + 8), &v107);
    v26 = pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetInterpolation(v25, (uint64_t *)&v107);
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::BuildRoleDataSource((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)(v9 + 16), &v91);
    v27 = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetRole(v26, &v91);
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::Build(v27, &v106);
    *(_OWORD *)a3 = v106;
    v106 = 0uLL;
    v28 = v92;
    if (v92)
    {
      p_shared_owners = (unint64_t *)&v92->__shared_owners_;
      do
        v30 = __ldaxr(p_shared_owners);
      while (__stlxr(v30 - 1, p_shared_owners));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    v31 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
    if (*((_QWORD *)&v107 + 1))
    {
      v32 = (unint64_t *)(*((_QWORD *)&v107 + 1) + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    v34 = v96;
    if (v96)
    {
      v35 = (unint64_t *)&v96->__shared_owners_;
      do
        v36 = __ldaxr(v35);
      while (__stlxr(v36 - 1, v35));
      if (!v36)
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
      }
    }
    v37 = v94;
    if (v94)
    {
      v38 = (unint64_t *)&v94->__shared_owners_;
      do
        v39 = __ldaxr(v38);
      while (__stlxr(v39 - 1, v38));
      if (!v39)
      {
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
      }
    }
    v40 = v100;
    if (v100)
    {
      v41 = (unint64_t *)&v100->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    v43 = v98;
    if (v98)
    {
      v44 = (unint64_t *)&v98->__shared_owners_;
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 - 1, v44));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
      }
    }
    v46 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
    if (*((_QWORD *)&v105 + 1))
    {
      v47 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v48 = __ldaxr(v47);
      while (__stlxr(v48 - 1, v47));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
    v49 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
    if (*((_QWORD *)&v104 + 1))
    {
      v50 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
      do
        v51 = __ldaxr(v50);
      while (__stlxr(v51 - 1, v50));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }
    v52 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
    if (*((_QWORD *)&v103 + 1))
    {
      v53 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
      do
        v54 = __ldaxr(v53);
      while (__stlxr(v54 - 1, v53));
      if (!v54)
      {
        ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
        std::__shared_weak_count::__release_weak(v52);
      }
    }
    v55 = (std::__shared_weak_count *)*((_QWORD *)&v102 + 1);
    if (*((_QWORD *)&v102 + 1))
    {
      v56 = (unint64_t *)(*((_QWORD *)&v102 + 1) + 8);
      do
        v57 = __ldaxr(v56);
      while (__stlxr(v57 - 1, v56));
      if (!v57)
      {
        ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
        std::__shared_weak_count::__release_weak(v55);
      }
    }
    v58 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
    if (*((_QWORD *)&v101 + 1))
    {
      v59 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
      do
        v60 = __ldaxr(v59);
      while (__stlxr(v60 - 1, v59));
LABEL_122:
      if (!v60)
      {
        ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
        std::__shared_weak_count::__release_weak(v58);
      }
    }
  }
  else
  {
    v104 = 0u;
    v105 = 0u;
    v102 = 0u;
    v103 = 0u;
    v101 = 0u;
    v61 = operator new(0x58uLL);
    sub_20C80CE64((uint64_t)v61, a2, (_DWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    v62 = operator new(0x20uLL);
    *v62 = &off_24C54CC60;
    v62[1] = 0;
    v62[2] = 0;
    v62[3] = v61;
    *(_QWORD *)&v106 = v61;
    *((_QWORD *)&v106 + 1) = v62;
    v99 = 0;
    v100 = 0;
    v63 = pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetPrimvarValue(&v101, (uint64_t *)&v106);
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::BuildInterpolationDataSource((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)(v9 + 8), &v97);
    v64 = pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetInterpolation((uint64_t)v63, &v97);
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::BuildRoleDataSource((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)(v9 + 16), &v95);
    v65 = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::SetRole(v64, &v95);
    pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::Builder::Build(v65, &v107);
    *(_OWORD *)a3 = v107;
    v107 = 0uLL;
    v66 = v96;
    if (v96)
    {
      v67 = (unint64_t *)&v96->__shared_owners_;
      do
        v68 = __ldaxr(v67);
      while (__stlxr(v68 - 1, v67));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
    }
    v69 = v98;
    if (v98)
    {
      v70 = (unint64_t *)&v98->__shared_owners_;
      do
        v71 = __ldaxr(v70);
      while (__stlxr(v71 - 1, v70));
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
    }
    v72 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
    if (*((_QWORD *)&v106 + 1))
    {
      v73 = (unint64_t *)(*((_QWORD *)&v106 + 1) + 8);
      do
        v74 = __ldaxr(v73);
      while (__stlxr(v74 - 1, v73));
      if (!v74)
      {
        ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
        std::__shared_weak_count::__release_weak(v72);
      }
    }
    v75 = v100;
    if (v100)
    {
      v76 = (unint64_t *)&v100->__shared_owners_;
      do
        v77 = __ldaxr(v76);
      while (__stlxr(v77 - 1, v76));
      if (!v77)
      {
        ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
        std::__shared_weak_count::__release_weak(v75);
      }
    }
    v78 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
    if (*((_QWORD *)&v105 + 1))
    {
      v79 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
      do
        v80 = __ldaxr(v79);
      while (__stlxr(v80 - 1, v79));
      if (!v80)
      {
        ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
        std::__shared_weak_count::__release_weak(v78);
      }
    }
    v81 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
    if (*((_QWORD *)&v104 + 1))
    {
      v82 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
      do
        v83 = __ldaxr(v82);
      while (__stlxr(v83 - 1, v82));
      if (!v83)
      {
        ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
        std::__shared_weak_count::__release_weak(v81);
      }
    }
    v84 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
    if (*((_QWORD *)&v103 + 1))
    {
      v85 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
      do
        v86 = __ldaxr(v85);
      while (__stlxr(v86 - 1, v85));
      if (!v86)
      {
        ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
        std::__shared_weak_count::__release_weak(v84);
      }
    }
    v87 = (std::__shared_weak_count *)*((_QWORD *)&v102 + 1);
    if (*((_QWORD *)&v102 + 1))
    {
      v88 = (unint64_t *)(*((_QWORD *)&v102 + 1) + 8);
      do
        v89 = __ldaxr(v88);
      while (__stlxr(v89 - 1, v88));
      if (!v89)
      {
        ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
        std::__shared_weak_count::__release_weak(v87);
      }
    }
    v58 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
    if (*((_QWORD *)&v101 + 1))
    {
      v90 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
      do
        v60 = __ldaxr(v90);
      while (__stlxr(v60 - 1, v90));
      goto LABEL_122;
    }
  }
}

void sub_20C80B258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  va_list va1;
  uint64_t v18;
  va_list va2;

  va_start(va2, a9);
  va_start(va1, a9);
  va_start(va, a9);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v16 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  *(_QWORD *)(v10 + 24) = &unk_24C54CA80;
  sub_20C80C14C(v10 + 80);
  *(_QWORD *)(v10 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(v10 + 56);
  if (*(_DWORD *)(v10 + 52) >= 2u)
    free(*(void **)(v10 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v11);
  sub_20C96C330(v9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C807EEC((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_20C80B430(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54CA38;
  *(_QWORD *)(a1 + 24) = &unk_24C54CA80;
  sub_20C80C14C(a1 + 80);
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C80B4D4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54CA38;
  *(_QWORD *)(a1 + 24) = &unk_24C54CA80;
  sub_20C80C14C(a1 + 80);
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C80B57C(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  _QWORD v6[2];
  _QWORD v7[6];

  v7[5] = *MEMORY[0x24BDAC8D0];
  if (a3 == 0.0)
  {
    sub_20BF64CC4((uint64_t)v6, 0);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD *))(**(_QWORD **)(a1 + 128) + 128))(*(_QWORD *)(a1 + 128), a1 + 16, a1 + 8, v6);
    sub_20BF5618C((uint64_t)v6);
  }
  else
  {
    if (!*(_QWORD *)(a1 + 32))
      sub_20C80C1FC(*(_QWORD *)(a1 + 128), a1 + 16, a1 + 8, a1 + 24);
    sub_20C80C188(a1 + 24, (uint64_t)v6, a3);
    sub_20BF4C6D0(a2, v6);
    sub_20BF5618C((uint64_t)v7);
    sub_20BF4C2D8((uint64_t)v6);
  }
}

void sub_20C80B668(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C80B6AC(uint64_t a1, uint64_t a2, float a3, float a4)
{
  if (!*(_QWORD *)(a1 + 32))
    sub_20C80C1FC(*(_QWORD *)(a1 + 128), a1 + 16, a1 + 8, a1 + 24);
  sub_20C80C6AC(a1 + 24, a2, a3, a4);
  return 1;
}

uint64_t sub_20C80B710(uint64_t a1)
{
  _QWORD *v2;
  _OWORD v4[2];
  uint64_t v5;

  v2 = (_QWORD *)sub_20C80B7B4(a1);
  *v2 = &unk_24C54CA80;
  v2[12] = 0x100000000;
  v5 = 0;
  memset(v4, 0, sizeof(v4));
  sub_20C80B8A4((uint64_t)(v2 + 7), 1u, (uint64_t)v4);
  sub_20BF5618C((uint64_t)v4);
  return a1;
}

void sub_20C80B78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  sub_20BF5618C((uint64_t)&a9);
  sub_20C80C14C(v10);
  sub_20C80B9A4(v9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C80B7B4(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[3];

  v4[2] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a1 = &unk_24C54CAC0;
  *(_QWORD *)(a1 + 24) = 0x100000000;
  v2 = a1 + 32;
  *(_QWORD *)(a1 + 48) = 0x100000000;
  LODWORD(v4[0]) = 0;
  sub_20C80BA58((int *)(a1 + 16), 1u, (int *)v4);
  v4[1] = 0;
  sub_20C80BAF0(v2, 1u, v4);
  sub_20BF4C2D8((uint64_t)v4);
  *(_QWORD *)(a1 + 8) = 0;
  return a1;
}

void sub_20C80B86C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  void **v3;
  uint64_t v4;
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  sub_20C80BEB0(v4);
  if (*(_DWORD *)(v2 + 28) >= 2u)
    free(*v3);
  _Unwind_Resume(a1);
}

void sub_20C80B8A4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v5;
  uint64_t v6;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;

  v5 = *(_DWORD *)(a1 + 40);
  if (v5 <= a2)
  {
    if (v5 < a2)
    {
      v8 = *(_DWORD *)(a1 + 44);
      if (v8 < a2)
      {
        sub_20C80C048(a1, a2);
        v8 = *(_DWORD *)(a1 + 44);
      }
      v9 = a1;
      if (v8 >= 2)
        v9 = *(_QWORD *)a1;
      v10 = *(_DWORD *)(a1 + 40);
      if (v10 != a2)
      {
        v11 = v9 + 40 * a2;
        v12 = v9 + 40 * v10;
        do
        {
          v13 = *(_OWORD *)(a3 + 16);
          *(_OWORD *)v12 = *(_OWORD *)a3;
          *(_OWORD *)(v12 + 16) = v13;
          v14 = *(_QWORD *)(a3 + 32);
          *(_QWORD *)(v12 + 32) = v14;
          if (v14)
          {
            v15 = (unint64_t *)(v14 - 16);
            if (*(_QWORD *)(v12 + 24))
              v15 = *(unint64_t **)(v12 + 24);
            do
              v16 = __ldxr(v15);
            while (__stxr(v16 + 1, v15));
          }
          v12 += 40;
        }
        while (v12 != v11);
      }
      *(_DWORD *)(a1 + 40) = a2;
    }
  }
  else
  {
    v6 = a1;
    if (*(_DWORD *)(a1 + 44) >= 2u)
      v6 = *(_QWORD *)a1;
    sub_20C80BF10((uint64_t *)a1, v6 + 40 * a2, v6 + 40 * v5);
  }
}

uint64_t sub_20C80B9A4(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 32);
  if (*(_DWORD *)(a1 + 28) >= 2u)
    free(*(void **)(a1 + 16));
  return a1;
}

void sub_20C80B9EC(uint64_t a1, unsigned int a2)
{
  _OWORD v4[2];
  uint64_t v5;

  sub_20C80BC0C(a1, a2);
  v5 = 0;
  memset(v4, 0, sizeof(v4));
  sub_20C80B8A4(a1 + 56, a2, (uint64_t)v4);
  sub_20BF5618C((uint64_t)v4);
}

void sub_20C80BA40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C80BA58(int *a1, unsigned int a2, int *a3)
{
  unsigned int v5;
  unsigned int v7;
  int *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;

  v5 = a1[2];
  if (v5 <= a2)
  {
    if (v5 >= a2)
      return;
    v7 = a1[3];
    if (v7 < a2)
    {
      sub_20C80BCB0(a1, a2);
      v7 = a1[3];
    }
    v8 = a1;
    if (v7 >= 2)
      v8 = *(int **)a1;
    v9 = a1[2];
    if ((_DWORD)v9 != a2)
    {
      v10 = &v8[v9];
      v11 = 4 * a2 - 4 * v9;
      do
      {
        *v10++ = *a3;
        v11 -= 4;
      }
      while (v11);
    }
  }
  a1[2] = a2;
}

void sub_20C80BAF0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(unsigned int *)(a1 + 16);
  if (v5 <= a2)
  {
    if (v5 < a2)
    {
      v8 = *(_DWORD *)(a1 + 20);
      if (v8 < a2)
      {
        sub_20C80BDEC(a1, a2);
        v8 = *(_DWORD *)(a1 + 20);
      }
      v9 = a1;
      if (v8 >= 2)
        v9 = *(_QWORD *)a1;
      v10 = *(unsigned int *)(a1 + 16);
      if ((_DWORD)v10 != a2)
      {
        v11 = 0;
        v12 = v9 + 16 * v10;
        v13 = 16 * a2 - 16 * v10;
        do
        {
          sub_20BF4C6D0((_QWORD *)(v12 + v11), a3);
          v11 += 16;
        }
        while (v13 != v11);
      }
      *(_DWORD *)(a1 + 16) = a2;
    }
  }
  else
  {
    v6 = a1;
    if (*(_DWORD *)(a1 + 20) >= 2u)
      v6 = *(_QWORD *)a1;
    sub_20C80BD30((uint64_t *)a1, (char *)(v6 + 16 * a2), (char *)(v6 + 16 * v5));
  }
}

void sub_20C80BBD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  __cxa_begin_catch(a1);
  for (; v2; v2 -= 16)
  {
    sub_20BF4C2D8(v1);
    v1 += 16;
  }
  __cxa_rethrow();
}

void sub_20C80BBF8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C80BC0C(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  _QWORD v5[3];

  v5[2] = *MEMORY[0x24BDAC8D0];
  LODWORD(v5[0]) = 0;
  sub_20C80BA58((int *)(a1 + 16), a2, (int *)v5);
  v5[1] = 0;
  sub_20C80BAF0(a1 + 32, a2, v5);
  result = sub_20BF4C2D8((uint64_t)v5);
  *(_QWORD *)(a1 + 8) = a2;
  return result;
}

void sub_20C80BC94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C80BCB0(int *a1, unsigned int a2)
{
  _DWORD *v4;
  _DWORD *v5;
  unsigned int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  int v11;

  v4 = malloc(4 * a2);
  v5 = v4;
  v6 = a1[3];
  v7 = a1;
  if (v6 >= 2)
    v7 = *(int **)a1;
  v8 = a1[2];
  if ((_DWORD)v8)
  {
    v9 = 4 * v8;
    v10 = v4;
    do
    {
      v11 = *v7++;
      *v10++ = v11;
      v9 -= 4;
    }
    while (v9);
  }
  if (v6 >= 2)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  a1[3] = a2;
}

char *sub_20C80BD30(uint64_t *a1, char *a2, char *a3)
{
  char *v4;
  unint64_t v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a2 != a3)
  {
    v4 = a3;
    v6 = a3 - a2;
    v7 = a1;
    if (*((_DWORD *)a1 + 5) >= 2u)
      v7 = (uint64_t *)*a1;
    v8 = (char *)&v7[2 * *((unsigned int *)a1 + 4)];
    if (v8 != a3)
    {
      v9 = a2;
      do
      {
        sub_20BF4B5D8(v9, v4);
        v4 += 16;
        v9 += 16;
      }
      while (v4 != v8);
    }
    if ((v6 >> 4))
    {
      v10 = -16 * (v6 >> 4);
      do
      {
        sub_20BF4C2D8((uint64_t)&v8[v10]);
        v10 += 16;
      }
      while (v10);
    }
    *((_DWORD *)a1 + 4) -= v6 >> 4;
  }
  return a2;
}

void sub_20C80BDEC(uint64_t a1, unsigned int a2)
{
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = malloc(16 * a2);
  v5 = v4;
  v6 = *(_DWORD *)(a1 + 20);
  v7 = (_QWORD *)a1;
  if (v6 >= 2)
    v7 = *(_QWORD **)a1;
  v8 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v8)
  {
    v9 = 16 * v8;
    do
    {
      v10 = sub_20BF4C200(v4, v7);
      v7 += 2;
      v4 = v10 + 2;
      v9 -= 16;
    }
    while (v9);
    v6 = *(_DWORD *)(a1 + 20);
  }
  v11 = a1;
  if (v6 >= 2)
    v11 = *(_QWORD *)a1;
  v12 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v12)
  {
    v13 = 16 * v12;
    do
    {
      v11 = sub_20BF4C2D8(v11) + 16;
      v13 -= 16;
    }
    while (v13);
    v6 = *(_DWORD *)(a1 + 20);
  }
  if (v6 >= 2)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 20) = a2;
}

uint64_t sub_20C80BEB0(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  v2 = *(_DWORD *)(a1 + 20);
  if (v2 >= 2)
    a1 = *(_QWORD *)a1;
  v3 = *(unsigned int *)(v1 + 16);
  if ((_DWORD)v3)
  {
    v4 = 16 * v3;
    do
    {
      a1 = sub_20BF4C2D8(a1) + 16;
      v4 -= 16;
    }
    while (v4);
    v2 = *(_DWORD *)(v1 + 20);
  }
  if (v2 >= 2)
    free(*(void **)v1);
  return v1;
}

uint64_t sub_20C80BF10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  if (a2 != a3)
  {
    v5 = 0xCCCCCCCCCCCCCCCDLL * ((a3 - a2) >> 3);
    v6 = a1;
    if (*((_DWORD *)a1 + 11) >= 2u)
      v6 = (uint64_t *)*a1;
    v7 = (uint64_t)&v6[5 * *((unsigned int *)a1 + 10)];
    sub_20C80BFCC((uint64_t)&v10, a3, v7, a2);
    if ((_DWORD)v5)
    {
      v8 = -40 * v5;
      do
      {
        sub_20BF5618C(v7 + v8);
        v8 += 40;
      }
      while (v8);
    }
    *((_DWORD *)a1 + 10) -= v5;
  }
  return a2;
}

uint64_t sub_20C80BFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int128 v7;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4)
      {
        sub_20BF5618C(a4);
        v7 = *(_OWORD *)(v5 + 16);
        *(_OWORD *)a4 = *(_OWORD *)v5;
        *(_OWORD *)(a4 + 16) = v7;
        *(_OWORD *)v5 = 0u;
        *(_OWORD *)(v5 + 16) = 0u;
        *(_QWORD *)(a4 + 32) = *(_QWORD *)(v5 + 32);
        *(_QWORD *)(v5 + 32) = 0;
      }
      v5 += 40;
      a4 += 40;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void sub_20C80C048(uint64_t a1, unsigned int a2)
{
  void *v4;
  void *v5;
  char *v6;
  unsigned int v7;
  char *v8;
  _OWORD *v9;
  __int128 v10;

  v4 = malloc(40 * a2);
  v5 = v4;
  v6 = (char *)a1;
  if (*(_DWORD *)(a1 + 44) >= 2u)
    v6 = *(char **)a1;
  v7 = *(_DWORD *)(a1 + 40);
  if (v7)
  {
    v8 = &v6[40 * v7];
    v9 = v4;
    do
    {
      v10 = *((_OWORD *)v6 + 1);
      *v9 = *(_OWORD *)v6;
      v9[1] = v10;
      *(_OWORD *)v6 = 0uLL;
      *((_OWORD *)v6 + 1) = 0uLL;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v6 + 4);
      *((_QWORD *)v6 + 4) = 0;
      v6 += 40;
      v9 = (_OWORD *)((char *)v9 + 40);
    }
    while (v6 != v8);
  }
  sub_20C80C0F8(a1);
  if (*(_DWORD *)(a1 + 44) >= 2u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 44) = a2;
}

void sub_20C80C0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  if (*(_DWORD *)(a1 + 44) >= 2u)
    v1 = *(_QWORD *)a1;
  v2 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v2)
  {
    v3 = 40 * v2;
    do
    {
      sub_20BF5618C(v1);
      v1 += 40;
      v3 -= 40;
    }
    while (v3);
  }
}

uint64_t sub_20C80C14C(uint64_t a1)
{
  sub_20C80C0F8(a1);
  if (*(_DWORD *)(a1 + 44) >= 2u)
    free(*(void **)a1);
  return a1;
}

_QWORD *sub_20C80C188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = (_QWORD *)(a1 + 16);
  if (*(_DWORD *)(a1 + 28) >= 2u)
    v3 = (_QWORD *)*v3;
  v4 = (_QWORD *)(a1 + 32);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    v4 = (_QWORD *)*v4;
  v5 = (_QWORD *)(a1 + 56);
  if (*(_DWORD *)(a1 + 100) >= 2u)
    v5 = (_QWORD *)*v5;
  return sub_20C80C36C(*(_QWORD *)(a1 + 8), (uint64_t)v3, v4, (uint64_t)v5, a2, a3);
}

uint64_t sub_20C80C1D0(uint64_t a1)
{
  sub_20BF5618C(a1 + 16);
  return sub_20BF4C2D8(a1);
}

unint64_t sub_20C80C1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t result;
  unint64_t v15;
  _QWORD v16[4];
  char v17;

  v8 = (_QWORD *)(a4 + 16);
  v9 = (_QWORD *)(a4 + 16);
  if (*(_DWORD *)(a4 + 28) >= 2u)
    v9 = (_QWORD *)*v8;
  v10 = (_QWORD *)(a4 + 32);
  v11 = (_QWORD *)(a4 + 32);
  if (*(_DWORD *)(a4 + 52) >= 2u)
    v11 = (_QWORD *)*v10;
  v12 = (_QWORD *)(a4 + 56);
  v13 = (_QWORD *)(a4 + 56);
  if (*(_DWORD *)(a4 + 100) >= 2u)
    v13 = (_QWORD *)*v12;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 208))(a1, a2, a3, 1, v9, v11, v13);
  v15 = result;
  if (result >= 2)
  {
    (**(void (***)(uint64_t, unint64_t))a4)(a4, result);
    if (*(_DWORD *)(a4 + 28) >= 2u)
      v8 = (_QWORD *)*v8;
    if (*(_DWORD *)(a4 + 52) >= 2u)
      v10 = (_QWORD *)*v10;
    if (*(_DWORD *)(a4 + 100) >= 2u)
      v12 = (_QWORD *)*v12;
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD *, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 208))(a1, a2, a3, v15, v8, v10, v12);
    if (v15 != result)
    {
      v16[0] = "hd/sceneDelegate.h";
      v16[1] = "SampleIndexedPrimvar";
      v16[2] = 972;
      v16[3] = "void pxrInternal__aapl__pxrReserved__::HdSceneDelegate::SampleIndexedPrimvar(const SdfPath &, const TfTok"
               "en &, HdIndexedTimeSampleArray<VtValue, CAPACITY> *) [CAPACITY = 1U]";
      v17 = 0;
      result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v16, "authoredSamples == authoredSamplesSecondAttempt", 0);
    }
  }
  *(_QWORD *)(a4 + 8) = v15;
  return result;
}

_QWORD *sub_20C80C36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  float v12;
  uint64_t v13;
  _QWORD *result;
  __int128 v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  __int128 v19;
  __int128 *v20;
  __int128 v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  float v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    v9 = 0;
    v10 = (_QWORD *)(a4 + 32);
    v11 = a3;
    while (1)
    {
      v12 = *(float *)(a2 + 4 * v9);
      if (v12 == a6)
      {
        result = sub_20BF4C6D0((_QWORD *)a5, v11);
        v21 = *((_OWORD *)v10 - 1);
        *(_OWORD *)(a5 + 16) = *((_OWORD *)v10 - 2);
        *(_OWORD *)(a5 + 32) = v21;
        v22 = *v10;
        *(_QWORD *)(a5 + 48) = *v10;
        if (v22)
        {
          v23 = (unint64_t *)(v22 - 16);
          if (*(_QWORD *)(a5 + 40))
            v23 = *(unint64_t **)(a5 + 40);
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
        }
        return result;
      }
      if (v12 > a6)
        break;
      ++v9;
      v10 += 5;
      v11 += 2;
      if (a1 == v9)
      {
        v9 = a1;
        break;
      }
    }
    if (!v9)
    {
      result = sub_20BF4C6D0((_QWORD *)a5, a3);
      v25 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)(a5 + 16) = *(_OWORD *)a4;
      *(_OWORD *)(a5 + 32) = v25;
      v26 = *(_QWORD *)(a4 + 32);
      *(_QWORD *)(a5 + 48) = v26;
      if (v26)
      {
        v27 = (unint64_t *)(v26 - 16);
        if (*(_QWORD *)(a5 + 40))
          v27 = *(unint64_t **)(a5 + 40);
        do
          v28 = __ldxr(v27);
        while (__stxr(v28 + 1, v27));
      }
      return result;
    }
    if (v9 == a1)
    {
      v13 = a4 + 40 * (a1 - 1);
      result = sub_20BF4C6D0((_QWORD *)a5, &a3[2 * a1 - 2]);
      v15 = *(_OWORD *)(v13 + 16);
      *(_OWORD *)(a5 + 16) = *(_OWORD *)v13;
      *(_OWORD *)(a5 + 32) = v15;
      v16 = *(_QWORD *)(v13 + 32);
      *(_QWORD *)(a5 + 48) = v16;
      if (v16)
      {
        v17 = (unint64_t *)(v16 - 16);
        if (*(_QWORD *)(a5 + 40))
          v17 = *(unint64_t **)(a5 + 40);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }
      return result;
    }
    v29 = *(float *)(a2 + 4 * v9);
    v30 = v9 - 1;
    v31 = *(float *)(a2 + 4 * (v9 - 1));
    if (v29 == v31)
    {
      *(_QWORD *)&v43 = "hd/timeSampleArray.h";
      *((_QWORD *)&v43 + 1) = "HdResampleRawTimeSamples";
      *(_QWORD *)&v44 = 154;
      *((_QWORD *)&v44 + 1) = "std::pair<T, VtIntArray> pxrInternal__aapl__pxrReserved__::HdResampleRawTimeSamples(float,"
                              " size_t, const float *, const T *, const VtIntArray *) [T = pxrInternal__aapl__pxrReserved__::VtValue]";
      LOBYTE(v45) = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v43, (pxrInternal__aapl__pxrReserved__ *)"HdResampleRawTimeSamples: overlapping samples at %f; using first sample",
        (char *)a3,
        v29);
      result = sub_20BF4C6D0((_QWORD *)a5, &a3[2 * v30]);
      v32 = a4 + 40 * v30;
      v33 = *(_OWORD *)(v32 + 16);
      *(_OWORD *)(a5 + 16) = *(_OWORD *)v32;
      *(_OWORD *)(a5 + 32) = v33;
      v34 = *(_QWORD *)(v32 + 32);
      *(_QWORD *)(a5 + 48) = v34;
      if (v34)
      {
        v35 = (unint64_t *)(v34 - 16);
        if (*(_QWORD *)(a5 + 40))
          v35 = *(unint64_t **)(a5 + 40);
        do
          v36 = __ldxr(v35);
        while (__stxr(v36 + 1, v35));
      }
      return result;
    }
    pxrInternal__aapl__pxrReserved__::HdResampleNeighbors((pxrInternal__aapl__pxrReserved__ *)&a3[2 * v30], (float)(v29 - a6) / (float)(v29 - v31), (std::type_info *)&a3[2 * v9], (const pxrInternal__aapl__pxrReserved__::VtValue *)a3, &v43);
    v37 = a4 + 40 * v30;
    sub_20BF4C200((_QWORD *)a5, &v43);
    v38 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)(a5 + 16) = *(_OWORD *)v37;
    *(_OWORD *)(a5 + 32) = v38;
    v39 = *(_QWORD *)(v37 + 32);
    *(_QWORD *)(a5 + 48) = v39;
    if (v39)
    {
      v40 = (unint64_t *)(v39 - 16);
      if (*(_QWORD *)(a5 + 40))
        v40 = *(unint64_t **)(a5 + 40);
      do
        v41 = __ldxr(v40);
      while (__stxr(v41 + 1, v40));
    }
    v20 = &v43;
  }
  else
  {
    *(_QWORD *)&v43 = "hd/timeSampleArray.h";
    *((_QWORD *)&v43 + 1) = "HdResampleRawTimeSamples";
    *(_QWORD *)&v44 = 130;
    *((_QWORD *)&v44 + 1) = "std::pair<T, VtIntArray> pxrInternal__aapl__pxrReserved__::HdResampleRawTimeSamples(float, s"
                            "ize_t, const float *, const T *, const VtIntArray *) [T = pxrInternal__aapl__pxrReserved__::VtValue]";
    LOBYTE(v45) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v43, 1, (pxrInternal__aapl__pxrReserved__ *)"HdResampleRawTimeSamples: Zero samples provided");
    v42[1] = 0;
    sub_20BF64CC4((uint64_t)&v43, 0);
    sub_20BF4C200((_QWORD *)a5, v42);
    v19 = v44;
    *(_OWORD *)(a5 + 16) = v43;
    *(_OWORD *)(a5 + 32) = v19;
    v43 = 0u;
    v44 = 0u;
    *(_QWORD *)(a5 + 48) = v45;
    v45 = 0;
    sub_20BF5618C((uint64_t)&v43);
    v20 = (__int128 *)v42;
  }
  return (_QWORD *)sub_20BF4C2D8((uint64_t)v20);
}

void sub_20C80C680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20C80C6AC(uint64_t a1, uint64_t a2, float a3, float a4)
{
  unint64_t v8;
  float *v9;
  _QWORD *v10;
  uint64_t v11;
  float v12;
  float *v13;
  float *v14;
  uint64_t v15;
  float *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  float v22;
  uint64_t v23;
  float *v24;
  int v25;
  float *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  float *v32;
  float *v33;
  _DWORD *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  int v43;
  unint64_t v44;
  _DWORD *v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _DWORD *v52;
  float *v53;
  float *v54;
  uint64_t v55;
  _DWORD *v56;
  int v57;

  if (!a2 || !*(_QWORD *)(a1 + 8))
    return;
  v8 = 0;
  v9 = (float *)(a1 + 16);
  v10 = (_QWORD *)(a2 + 16);
  do
  {
    if (*(_DWORD *)(a1 + 28) > 1u)
    {
      v15 = *(_QWORD *)v9;
      v11 = v8;
      v12 = *(float *)(*(_QWORD *)v9 + 4 * v8);
      v14 = *(float **)a2;
      v13 = *(float **)(a2 + 8);
      if (*(float **)a2 != v13)
        goto LABEL_8;
      if (v8 && v12 > a3)
        goto LABEL_23;
    }
    else
    {
      v11 = v8;
      v12 = v9[v8];
      v14 = *(float **)a2;
      v13 = *(float **)(a2 + 8);
      if (*(float **)a2 != v13)
      {
        v15 = a1 + 16;
LABEL_8:
        if ((unint64_t)v13 >= *v10)
        {
          v17 = v13 - v14;
          v18 = v17 + 1;
          if ((unint64_t)(v17 + 1) >> 62)
            goto LABEL_89;
          v19 = *v10 - (_QWORD)v14;
          if (v19 >> 1 > v18)
            v18 = v19 >> 1;
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFFCLL)
            v20 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v20 = v18;
          if (v20)
          {
            v21 = (char *)sub_20BDE1330((uint64_t)v10, v20);
            v14 = *(float **)a2;
            v13 = *(float **)(a2 + 8);
            v22 = *(float *)(v15 + 4 * v11);
          }
          else
          {
            v21 = 0;
            v22 = v12;
          }
          v24 = (float *)&v21[4 * v17];
          *v24 = v22;
          v16 = v24 + 1;
          while (v13 != v14)
          {
            v25 = *((_DWORD *)v13-- - 1);
            *((_DWORD *)v24-- - 1) = v25;
          }
          *(_QWORD *)a2 = v24;
          *(_QWORD *)(a2 + 8) = v16;
          *(_QWORD *)(a2 + 16) = &v21[4 * v20];
          if (!v14)
            goto LABEL_62;
          v26 = v14;
          goto LABEL_61;
        }
        *v13 = v12;
        v16 = v13 + 1;
        goto LABEL_62;
      }
      if (v8)
      {
        v15 = a1 + 16;
        if (v12 > a3)
        {
LABEL_23:
          v23 = (v8 - 1);
          if ((unint64_t)v14 >= *v10)
          {
            v27 = *v10 - (_QWORD)v14;
            v28 = v27 >> 1;
            if ((unint64_t)(v27 >> 1) <= 1)
              v28 = 1;
            if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
              v29 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v29 = v28;
            v31 = sub_20BDE1330((uint64_t)v10, v29);
            v32 = *(float **)a2;
            v33 = *(float **)(a2 + 8);
            *v31 = *(_DWORD *)(v15 + 4 * v23);
            v14 = (float *)(v31 + 1);
            v34 = v31;
            while (v33 != v32)
            {
              v35 = *((_DWORD *)v33-- - 1);
              *--v34 = v35;
            }
            *(_QWORD *)a2 = v34;
            *(_QWORD *)(a2 + 8) = v14;
            *(_QWORD *)(a2 + 16) = &v31[v30];
            if (v32)
              operator delete(v32);
          }
          else
          {
            *v14++ = *(float *)(v15 + 4 * v23);
          }
          *(_QWORD *)(a2 + 8) = v14;
        }
      }
    }
    if (v12 < a3)
      goto LABEL_63;
    if (*(_DWORD *)(a1 + 28) >= 2u)
      v36 = *(_QWORD *)(a1 + 16);
    else
      v36 = a1 + 16;
    if ((unint64_t)v14 >= *v10)
    {
      v26 = *(float **)a2;
      v37 = ((uint64_t)v14 - *(_QWORD *)a2) >> 2;
      v38 = v37 + 1;
      if ((unint64_t)(v37 + 1) >> 62)
LABEL_89:
        sub_20BDDF694();
      v39 = *v10 - (_QWORD)v26;
      if (v39 >> 1 > v38)
        v38 = v39 >> 1;
      if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFFCLL)
        v40 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v40 = v38;
      if (v40)
      {
        v41 = (char *)sub_20BDE1330((uint64_t)v10, v40);
        v26 = *(float **)a2;
        v14 = *(float **)(a2 + 8);
      }
      else
      {
        v41 = 0;
      }
      v42 = &v41[4 * v37];
      *(_DWORD *)v42 = *(_DWORD *)(v36 + 4 * v11);
      v16 = (float *)(v42 + 4);
      while (v14 != v26)
      {
        v43 = *((_DWORD *)v14-- - 1);
        *((_DWORD *)v42 - 1) = v43;
        v42 -= 4;
      }
      *(_QWORD *)a2 = v42;
      *(_QWORD *)(a2 + 8) = v16;
      *(_QWORD *)(a2 + 16) = &v41[4 * v40];
      if (!v26)
        goto LABEL_62;
LABEL_61:
      operator delete(v26);
      goto LABEL_62;
    }
    *v14 = *(float *)(v36 + 4 * v11);
    v16 = v14 + 1;
LABEL_62:
    *(_QWORD *)(a2 + 8) = v16;
    v14 = v16;
LABEL_63:
    v44 = *(_QWORD *)(a1 + 8);
    ++v8;
  }
  while (v12 < a4 && v8 < v44);
  if (*(float **)a2 == v14 && v44 != 0)
  {
    if (*(_DWORD *)(a1 + 28) >= 2u)
      v47 = *(_DWORD **)(a1 + 16);
    else
      v47 = (_DWORD *)(a1 + 16);
    if ((unint64_t)v14 >= *v10)
    {
      v49 = *v10 - (_QWORD)v14;
      v50 = v49 >> 1;
      if ((unint64_t)(v49 >> 1) <= 1)
        v50 = 1;
      if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL)
        v51 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v51 = v50;
      v52 = sub_20BDE1330((uint64_t)v10, v51);
      v53 = *(float **)a2;
      v54 = *(float **)(a2 + 8);
      v56 = &v52[v55];
      *v52 = *v47;
      v48 = v52 + 1;
      while (v54 != v53)
      {
        v57 = *((_DWORD *)v54-- - 1);
        *--v52 = v57;
      }
      *(_QWORD *)a2 = v52;
      *(_QWORD *)(a2 + 8) = v48;
      *(_QWORD *)(a2 + 16) = v56;
      if (v53)
        operator delete(v53);
    }
    else
    {
      *v14 = *(float *)v47;
      v48 = v14 + 1;
    }
    *(_QWORD *)(a2 + 8) = v48;
  }
}

void sub_20C80CA28(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80CA3C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80CA54(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54CB28))
    return a1 + 24;
  else
    return 0;
}

void sub_20C80CA94(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54CB50;
  *(_QWORD *)(a1 + 24) = &unk_24C54CA80;
  sub_20C80C14C(a1 + 80);
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C80CB38(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54CB50;
  *(_QWORD *)(a1 + 24) = &unk_24C54CA80;
  sub_20C80C14C(a1 + 80);
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C80CBE0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD v3[5];

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 32))(v3);
  a2[1] = &off_24C51F5B0;
  sub_20BF56B40(a2, (uint64_t)v3);
  sub_20BF5618C((uint64_t)v3);
}

void sub_20C80CC38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C80CC50(uint64_t a1, uint64_t a2, float a3, float a4)
{
  if (!*(_QWORD *)(a1 + 32))
    sub_20C80C1FC(*(_QWORD *)(a1 + 128), a1 + 16, a1 + 8, a1 + 24);
  sub_20C80C6AC(a1 + 24, a2, a3, a4);
  return 1;
}

uint64_t sub_20C80CCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  __int128 v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  _QWORD v11[2];
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  if (a3 == 0.0)
  {
    sub_20BF64CC4(a2, 0);
    (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(a1 + 128) + 128))(v11, *(_QWORD *)(a1 + 128), a1 + 16, a1 + 8, a2);
  }
  else
  {
    if (!*(_QWORD *)(a1 + 32))
      sub_20C80C1FC(*(_QWORD *)(a1 + 128), a1 + 16, a1 + 8, a1 + 24);
    sub_20C80C188(a1 + 24, (uint64_t)v11, a3);
    v6 = v12[1];
    *(_OWORD *)a2 = v12[0];
    *(_OWORD *)(a2 + 16) = v6;
    v7 = v13;
    *(_QWORD *)(a2 + 32) = v13;
    if (v7)
    {
      v8 = (unint64_t *)(v7 - 16);
      if (*(_QWORD *)(a2 + 24))
        v8 = *(unint64_t **)(a2 + 24);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    sub_20BF5618C((uint64_t)v12);
  }
  return sub_20BF4C2D8((uint64_t)v11);
}

void sub_20C80CDC0(_Unwind_Exception *exception_object, int a2)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20BDC12F4(exception_object);
}

void sub_20C80CDF8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80CE0C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80CE24(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54CBF0))
    return a1 + 24;
  else
    return 0;
}

uint64_t sub_20C80CE64(uint64_t a1, uint64_t *a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  _QWORD v11[4];
  char v12;

  *(_QWORD *)a1 = off_24C54CC18;
  v7 = *a2;
  *(_QWORD *)(a1 + 8) = *a2;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BFD6E54((_DWORD *)(a1 + 16), a3);
  sub_20BFD6EA4((_DWORD *)(a1 + 20), a3 + 1);
  sub_20C80B7B4(a1 + 24);
  *(_QWORD *)(a1 + 80) = a4;
  if (!a4)
  {
    v11[0] = "hd/dataSourceLegacyPrim.cpp";
    v11[1] = "Hd_DataSourceLegacyPrimvarValue";
    v11[2] = 166;
    v11[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyPrimvarValue::Hd_DataSourceLega"
             "cyPrimvarValue(const TfToken &, const SdfPath &, HdSceneDelegate *)";
    v12 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v11, "_sceneDelegate", 0);
  }
  return a1;
}

void sub_20C80CF58(_Unwind_Exception *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _DWORD *v3;
  _DWORD *v4;

  *(_QWORD *)(v1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(v1 + 56);
  if (*(_DWORD *)(v1 + 52) >= 2u)
    free(*(void **)(v1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v4);
  sub_20C96C364(v3, v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)v1);
  _Unwind_Resume(a1);
}

void sub_20C80CFB8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54CC18;
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C80D044(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54CC18;
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C80D0D4(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  int v6;

  if (a3 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 80) + 120))(a2, *(_QWORD *)(a1 + 80), a1 + 16, a1 + 8);
    if (!a2[1])
    {
      v6 = 0;
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, int *, _QWORD *))(**(_QWORD **)(a1 + 80) + 200))(*(_QWORD *)(a1 + 80), a1 + 16, a1 + 8, 1, &v6, a2);
    }
  }
  else
  {
    if (!*(_QWORD *)(a1 + 32))
      sub_20C80D258(*(_QWORD *)(a1 + 80), a1 + 16, a1 + 8, a1 + 24);
    sub_20C80D224(a1 + 24, a2, a3);
  }
}

void sub_20C80D1AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF4C2D8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C80D1C0(uint64_t a1, uint64_t a2, float a3, float a4)
{
  if (!*(_QWORD *)(a1 + 32))
    sub_20C80D258(*(_QWORD *)(a1 + 80), a1 + 16, a1 + 8, a1 + 24);
  sub_20C80C6AC(a1 + 24, a2, a3, a4);
  return 1;
}

void sub_20C80D224(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = (_QWORD *)(a1 + 16);
  if (*(_DWORD *)(a1 + 28) >= 2u)
    v5 = (_QWORD *)*v5;
  v6 = (char *)(a1 + 32);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    v6 = *(char **)v6;
  sub_20C80D39C(v4, (uint64_t)v5, v6, a2, a3);
}

unint64_t sub_20C80D258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t result;
  unint64_t v13;
  _QWORD v14[4];
  char v15;

  v8 = (_QWORD *)(a4 + 16);
  v9 = (_QWORD *)(a4 + 16);
  if (*(_DWORD *)(a4 + 28) >= 2u)
    v9 = (_QWORD *)*v8;
  v10 = (_QWORD *)(a4 + 32);
  v11 = (_QWORD *)(a4 + 32);
  if (*(_DWORD *)(a4 + 52) >= 2u)
    v11 = (_QWORD *)*v10;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 200))(a1, a2, a3, 1, v9, v11);
  v13 = result;
  if (result >= 2)
  {
    (**(void (***)(uint64_t, unint64_t))a4)(a4, result);
    if (*(_DWORD *)(a4 + 28) >= 2u)
      v8 = (_QWORD *)*v8;
    if (*(_DWORD *)(a4 + 52) >= 2u)
      v10 = (_QWORD *)*v10;
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 200))(a1, a2, a3, v13, v8, v10);
    if (v13 != result)
    {
      v14[0] = "hd/sceneDelegate.h";
      v14[1] = "SamplePrimvar";
      v14[2] = 942;
      v14[3] = "void pxrInternal__aapl__pxrReserved__::HdSceneDelegate::SamplePrimvar(const SdfPath &, const TfToken &, H"
               "dTimeSampleArray<VtValue, CAPACITY> *) [CAPACITY = 1U]";
      v15 = 0;
      result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v14, "authoredSamples == authoredSamplesSecondAttempt", 0);
    }
  }
  *(_QWORD *)(a4 + 8) = v13;
  return result;
}

void sub_20C80D39C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>, float a5@<S0>)
{
  uint64_t v7;
  char *v8;
  float v9;
  float v10;
  uint64_t v11;
  float v12;
  char *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  char v17;

  if (a1)
  {
    v7 = 0;
    v8 = a3;
    while (1)
    {
      v9 = *(float *)(a2 + 4 * v7);
      if (v9 == a5)
      {
        sub_20BF4C6D0(a4, v8);
        return;
      }
      if (v9 > a5)
        break;
      ++v7;
      v8 += 16;
      if (a1 == v7)
      {
        v7 = a1;
        break;
      }
    }
    if (v7)
    {
      if (v7 == a1)
      {
        sub_20BF4C6D0(a4, &a3[16 * a1 - 16]);
      }
      else
      {
        v10 = *(float *)(a2 + 4 * v7);
        v11 = v7 - 1;
        v12 = *(float *)(a2 + 4 * (v7 - 1));
        if (v10 == v12)
        {
          v13 = "hd/timeSampleArray.h";
          v14 = "HdResampleRawTimeSamples";
          v15 = 108;
          v16 = "T pxrInternal__aapl__pxrReserved__::HdResampleRawTimeSamples(float, size_t, const float *, const T *) [T"
                " = pxrInternal__aapl__pxrReserved__::VtValue]";
          v17 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v13, (pxrInternal__aapl__pxrReserved__ *)"HdResampleRawTimeSamples: overlapping samples at %f; using first sample",
            a3,
            v10);
          sub_20BF4C6D0(a4, &a3[16 * v11]);
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::HdResampleNeighbors((pxrInternal__aapl__pxrReserved__ *)&a3[16 * v11], (float)(a5 - v12) / (float)(v10 - v12), (std::type_info *)&a3[16 * v7], (const pxrInternal__aapl__pxrReserved__::VtValue *)a3, a4);
        }
      }
    }
    else
    {
      sub_20BF4C6D0(a4, a3);
    }
  }
  else
  {
    v13 = "hd/timeSampleArray.h";
    v14 = "HdResampleRawTimeSamples";
    v15 = 84;
    v16 = "T pxrInternal__aapl__pxrReserved__::HdResampleRawTimeSamples(float, size_t, const float *, const T *) [T = pxr"
          "Internal__aapl__pxrReserved__::VtValue]";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"HdResampleRawTimeSamples: Zero samples provided");
    a4[1] = 0;
  }
}

void sub_20C80D514(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80D528(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80D540(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54CCB0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C80D584(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80D598(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80D5B0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54CD28))
    return a1 + 24;
  else
    return 0;
}

void sub_20C80D5F0(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 64;
        sub_20C80D674((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_DWORD *sub_20C80D674(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  _DWORD *result;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;

  v3 = *(_QWORD *)(a2 + 40);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 32));
  result = sub_20BFD265C((_DWORD *)(a2 + 28));
  v7 = *(_QWORD *)(a2 + 16);
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  if ((*(_QWORD *)a2 & 7) != 0)
  {
    v10 = (unsigned int *)(*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  return result;
}

void sub_20C80D704(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  *(_QWORD *)a1 = off_24C54CD50;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  sub_20BF2B064((uint64_t *)(a1 + 32), 0);
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
      {
        v3 -= 56;
        sub_20C806E2C(v3);
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C80D78C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54CD50;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  sub_20BF2B064((uint64_t *)(a1 + 32), 0);
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
      {
        v3 -= 56;
        sub_20C806E2C(v3);
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 8);
    }
    *(_QWORD *)(a1 + 16) = v2;
    operator delete(v4);
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

_QWORD *sub_20C80D818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  result = (_QWORD *)sub_20BFC9A6C((char **)a2, 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8)) >> 3));
  v5 = *(uint64_t **)(a1 + 8);
  v6 = *(uint64_t **)(a1 + 16);
  if (v5 != v6)
  {
    result = *(_QWORD **)(a2 + 8);
    do
    {
      if ((unint64_t)result >= *(_QWORD *)(a2 + 16))
      {
        result = sub_20BFCA068((char **)a2, v5);
      }
      else
      {
        v7 = *v5;
        *result = *v5;
        if ((v7 & 7) != 0)
        {
          v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
          do
            v9 = __ldxr(v8);
          while (__stxr(v9 + 2, v8));
          if ((v9 & 1) == 0)
            *result &= 0xFFFFFFFFFFFFFFF8;
        }
        ++result;
      }
      *(_QWORD *)(a2 + 8) = result;
      v5 += 7;
    }
    while (v5 != v6);
  }
  return result;
}

void sub_20C80D8EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C80D908(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  std::__shared_weak_count *v20;
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder *v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  unsigned int *v40;
  unsigned int v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  char *v62;
  std::__shared_weak_count *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  std::__shared_weak_count *v70;
  uint64_t v71;
  uint64_t v72;
  std::__shared_weak_count *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;

  v5 = (_QWORD *)a1[4];
  if (v5)
  {
    v6 = sub_20BF2B388(v5, a2);
    if (!v6)
    {
LABEL_84:
      *a3 = 0;
      a3[1] = 0;
      return;
    }
    v7 = a1[2];
    v8 = a1[1] + 56 * v6[3];
  }
  else
  {
    v8 = a1[1];
    v7 = a1[2];
    if (v8 == v7)
      goto LABEL_84;
    while ((*(_QWORD *)v8 & 0xFFFFFFFFFFFFFFF8) != (*a2 & 0xFFFFFFFFFFFFFFF8))
    {
      v8 += 56;
      if (v8 == v7)
        goto LABEL_84;
    }
  }
  if (v8 == v7)
    goto LABEL_84;
  v77 = 0u;
  v78 = 0u;
  v75 = 0u;
  v76 = 0u;
  v74 = 0u;
  v9 = *(_QWORD *)(v8 + 8);
  v71 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v71 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::BuildInterpolationDataSource((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)&v71, &v72);
  v12 = pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetInterpolation(&v74, &v72);
  v13 = *(_QWORD *)(v8 + 16);
  v68 = v13;
  if ((v13 & 7) != 0)
  {
    v14 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 2, v14));
    if ((v15 & 1) == 0)
      v68 &= 0xFFFFFFFFFFFFFFF8;
  }
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::BuildRoleDataSource((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)&v68, &v69);
  v16 = pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetRole((uint64_t)v12, &v69);
  sub_20C7FFBBC((_DWORD *)(v8 + 24), &v66);
  v67 = v66;
  v66 = 0uLL;
  v17 = pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetSourceComputation(v16, (uint64_t *)&v67);
  sub_20C7EA9FC((uint64_t *)(v8 + 32), &v64);
  v65 = v64;
  v64 = 0uLL;
  v18 = pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetSourceComputationOutputName(v17, (uint64_t *)&v65);
  v19 = (char *)operator new(0x18uLL);
  *(_QWORD *)v19 = &unk_24C54CD98;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v8 + 40);
  v20 = (std::__shared_weak_count *)operator new(0x20uLL);
  v20->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54CEC8;
  v20->__shared_owners_ = 0;
  v20->__shared_weak_owners_ = 0;
  v20[1].__vftable = (std::__shared_weak_count_vtbl *)v19;
  v62 = v19;
  v63 = v20;
  v21 = (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetValueType(v18, (uint64_t *)&v62);
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::Build(v21, &v79);
  *(_OWORD *)a3 = v79;
  v79 = 0uLL;
  v22 = v63;
  if (v63)
  {
    p_shared_owners = (unint64_t *)&v63->__shared_owners_;
    do
      v24 = __ldaxr(p_shared_owners);
    while (__stlxr(v24 - 1, p_shared_owners));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v25 = (std::__shared_weak_count *)*((_QWORD *)&v65 + 1);
  if (*((_QWORD *)&v65 + 1))
  {
    v26 = (unint64_t *)(*((_QWORD *)&v65 + 1) + 8);
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = (std::__shared_weak_count *)*((_QWORD *)&v64 + 1);
  if (*((_QWORD *)&v64 + 1))
  {
    v29 = (unint64_t *)(*((_QWORD *)&v64 + 1) + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = (std::__shared_weak_count *)*((_QWORD *)&v67 + 1);
  if (*((_QWORD *)&v67 + 1))
  {
    v32 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = (std::__shared_weak_count *)*((_QWORD *)&v66 + 1);
  if (*((_QWORD *)&v66 + 1))
  {
    v35 = (unint64_t *)(*((_QWORD *)&v66 + 1) + 8);
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = v70;
  if (v70)
  {
    v38 = (unint64_t *)&v70->__shared_owners_;
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  if ((v68 & 7) != 0)
  {
    v40 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v41 = __ldxr(v40);
    while (__stlxr(v41 - 2, v40));
  }
  v42 = v73;
  if (v73)
  {
    v43 = (unint64_t *)&v73->__shared_owners_;
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
  if ((v71 & 7) != 0)
  {
    v45 = (unsigned int *)(v71 & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stlxr(v46 - 2, v45));
  }
  v47 = (std::__shared_weak_count *)*((_QWORD *)&v78 + 1);
  if (*((_QWORD *)&v78 + 1))
  {
    v48 = (unint64_t *)(*((_QWORD *)&v78 + 1) + 8);
    do
      v49 = __ldaxr(v48);
    while (__stlxr(v49 - 1, v48));
    if (!v49)
    {
      ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
      std::__shared_weak_count::__release_weak(v47);
    }
  }
  v50 = (std::__shared_weak_count *)*((_QWORD *)&v77 + 1);
  if (*((_QWORD *)&v77 + 1))
  {
    v51 = (unint64_t *)(*((_QWORD *)&v77 + 1) + 8);
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  v53 = (std::__shared_weak_count *)*((_QWORD *)&v76 + 1);
  if (*((_QWORD *)&v76 + 1))
  {
    v54 = (unint64_t *)(*((_QWORD *)&v76 + 1) + 8);
    do
      v55 = __ldaxr(v54);
    while (__stlxr(v55 - 1, v54));
    if (!v55)
    {
      ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
      std::__shared_weak_count::__release_weak(v53);
    }
  }
  v56 = (std::__shared_weak_count *)*((_QWORD *)&v75 + 1);
  if (*((_QWORD *)&v75 + 1))
  {
    v57 = (unint64_t *)(*((_QWORD *)&v75 + 1) + 8);
    do
      v58 = __ldaxr(v57);
    while (__stlxr(v58 - 1, v57));
    if (!v58)
    {
      ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
      std::__shared_weak_count::__release_weak(v56);
    }
  }
  v59 = (std::__shared_weak_count *)*((_QWORD *)&v74 + 1);
  if (*((_QWORD *)&v74 + 1))
  {
    v60 = (unint64_t *)(*((_QWORD *)&v74 + 1) + 8);
    do
      v61 = __ldaxr(v60);
    while (__stlxr(v61 - 1, v60));
    if (!v61)
    {
      ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
      std::__shared_weak_count::__release_weak(v59);
    }
  }
}

void sub_20C80DE20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v27;
  void *v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v27);
  operator delete(v29);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a15);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a13);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a19);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a17);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a22);
  if ((a21 & 7) != 0)
  {
    v30 = (unsigned int *)(a21 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stlxr(v31 - 2, v30));
  }
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a25);
  if ((a24 & 7) != 0)
  {
    v32 = (unsigned int *)(a24 & 0xFFFFFFFFFFFFFFF8);
    do
      v33 = __ldxr(v32);
    while (__stlxr(v33 - 2, v32));
  }
  sub_20C807EEC((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_20C80DF08(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

unsigned int *sub_20C80DF1C@<X0>(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *result;
  unsigned int *v5;
  unsigned int v6;

  a2[1] = (unsigned int *)((char *)&off_24C54CDF0 + 2);
  result = (unsigned int *)operator new(0x18uLL);
  *(_OWORD *)result = *(_OWORD *)(a1 + 8);
  v5 = result + 4;
  atomic_store(0, result + 4);
  *a2 = result;
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
  return result;
}

uint64_t sub_20C80DF78()
{
  return 0;
}

uint64_t sub_20C80DF80(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t *sub_20C80DF8C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void sub_20C80DFB0(void **a1)
{
  unsigned int *v1;
  unsigned int *v2;
  unsigned int v3;
  unsigned int v4;

  v1 = (unsigned int *)*a1;
  if (v1)
  {
    v2 = v1 + 4;
    do
    {
      v3 = __ldxr(v2);
      v4 = v3 - 1;
    }
    while (__stlxr(v4, v2));
    if (!v4)
    {
      __dmb(9u);
      operator delete(v1);
    }
  }
}

_QWORD *sub_20C80DFDC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  *result = 0;
  return result;
}

uint64_t sub_20C80DFEC()
{
  return 1;
}

unint64_t sub_20C80DFF4(int **a1)
{
  return bswap64(0x9E3779B97F4A7C55* (*((_QWORD *)*a1 + 1)+ ((unint64_t)(*((_QWORD *)*a1 + 1)+ **a1+ (*((_QWORD *)*a1 + 1) + **a1) * (*((_QWORD *)*a1 + 1) + **a1)) >> 1)));
}

BOOL sub_20C80E028(uint64_t a1, uint64_t a2)
{
  return **(_DWORD **)a1 == **(_DWORD **)a2 && *(_QWORD *)(*(_QWORD *)a1 + 8) == *(_QWORD *)(*(_QWORD *)a2 + 8);
}

BOOL sub_20C80E050(uint64_t a1, uint64_t a2)
{
  return **(_DWORD **)a1 == *(_DWORD *)a2 && *(_QWORD *)(*(_QWORD *)a1 + 8) == *(_QWORD *)(a2 + 8);
}

uint64_t sub_20C80E078()
{
  return 0;
}

_QWORD *sub_20C80E084(uint64_t *a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&unk_24C54CEA8, *a1, a2);
}

void *sub_20C80E098()
{
  return &unk_24C54CEA8;
}

uint64_t sub_20C80E0A4()
{
  return 0;
}

uint64_t sub_20C80E0AC()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C80E0B8()
{
  return 0;
}

uint64_t sub_20C80E0C0()
{
  return 0;
}

BOOL sub_20C80E0C8(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB0E974 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C80E100(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C54CEA8, a2, a3);
}

void *sub_20C80E120()
{
  return &unk_24C54CEA8;
}

uint64_t sub_20C80E12C(uint64_t a1)
{
  return *(_QWORD *)a1;
}

unsigned int *sub_20C80E134@<X0>(_OWORD **a1@<X0>, unsigned int **a2@<X8>)
{
  _OWORD *v3;
  unsigned int *result;
  unsigned int *v5;
  unsigned int v6;

  v3 = *a1;
  a2[1] = (unsigned int *)((char *)&off_24C54CDF0 + 2);
  result = (unsigned int *)operator new(0x18uLL);
  *(_OWORD *)result = *v3;
  v5 = result + 4;
  atomic_store(0, result + 4);
  *a2 = result;
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
  return result;
}

void sub_20C80E194(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80E1A8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80E1C0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54CF18))
    return a1 + 24;
  else
    return 0;
}

void sub_20C80E204(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80E218(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80E230(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54CF90))
    return a1 + 24;
  else
    return 0;
}

void sub_20C80E270(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54CFB8;
  *(_QWORD *)(a1 + 24) = &unk_24C54D020;
  if (*(_DWORD *)(a1 + 188) >= 2u)
    free(*(void **)(a1 + 56));
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C80E308(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54CFB8;
  *(_QWORD *)(a1 + 24) = &unk_24C54D020;
  if (*(_DWORD *)(a1 + 188) >= 2u)
    free(*(void **)(a1 + 56));
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

char *sub_20C80E3A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  unsigned int *v8;
  unsigned int v9;
  _OWORD v10[8];

  (*(void (**)(_OWORD *__return_ptr))(*(_QWORD *)a1 + 32))(v10);
  a2[1] = (char *)&off_24C51E470 + 2;
  result = (char *)operator new(0x88uLL);
  v4 = v10[5];
  *((_OWORD *)result + 4) = v10[4];
  *((_OWORD *)result + 5) = v4;
  v5 = v10[7];
  *((_OWORD *)result + 6) = v10[6];
  *((_OWORD *)result + 7) = v5;
  v6 = v10[1];
  *(_OWORD *)result = v10[0];
  *((_OWORD *)result + 1) = v6;
  v7 = v10[3];
  *((_OWORD *)result + 2) = v10[2];
  *((_OWORD *)result + 3) = v7;
  v8 = (unsigned int *)(result + 128);
  atomic_store(0, (unsigned int *)result + 32);
  *a2 = result;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  return result;
}

uint64_t sub_20C80E42C(unint64_t a1, uint64_t a2, float a3, float a4)
{
  unint64_t v8;
  float *v9;
  _QWORD *v10;
  uint64_t v11;
  float v12;
  float *v13;
  float *v14;
  unint64_t v15;
  float *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  float v22;
  uint64_t v23;
  float *v24;
  int v25;
  float *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  float *v32;
  float *v33;
  _DWORD *v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  int v43;
  unint64_t v44;
  _DWORD *v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _DWORD *v52;
  float *v53;
  float *v54;
  uint64_t v55;
  _DWORD *v56;
  int v57;

  sub_20C80EADC(a1);
  if (!a2 || !*(_QWORD *)(a1 + 32))
    return 1;
  v8 = 0;
  v9 = (float *)(a1 + 40);
  v10 = (_QWORD *)(a2 + 16);
  do
  {
    if (*(_DWORD *)(a1 + 52) > 1u)
    {
      v15 = *(_QWORD *)v9;
      v11 = v8;
      v12 = *(float *)(*(_QWORD *)v9 + 4 * v8);
      v14 = *(float **)a2;
      v13 = *(float **)(a2 + 8);
      if (*(float **)a2 != v13)
        goto LABEL_8;
      if (v8 && v12 > a3)
        goto LABEL_23;
    }
    else
    {
      v11 = v8;
      v12 = v9[v8];
      v14 = *(float **)a2;
      v13 = *(float **)(a2 + 8);
      if (*(float **)a2 != v13)
      {
        v15 = a1 + 40;
LABEL_8:
        if ((unint64_t)v13 >= *v10)
        {
          v17 = v13 - v14;
          v18 = v17 + 1;
          if ((unint64_t)(v17 + 1) >> 62)
            goto LABEL_89;
          v19 = *v10 - (_QWORD)v14;
          if (v19 >> 1 > v18)
            v18 = v19 >> 1;
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFFCLL)
            v20 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v20 = v18;
          if (v20)
          {
            v21 = (char *)sub_20BDE1330(a2 + 16, v20);
            v14 = *(float **)a2;
            v13 = *(float **)(a2 + 8);
            v22 = *(float *)(v15 + 4 * v11);
          }
          else
          {
            v21 = 0;
            v22 = v12;
          }
          v24 = (float *)&v21[4 * v17];
          *v24 = v22;
          v16 = v24 + 1;
          while (v13 != v14)
          {
            v25 = *((_DWORD *)v13-- - 1);
            *((_DWORD *)v24-- - 1) = v25;
          }
          *(_QWORD *)a2 = v24;
          *(_QWORD *)(a2 + 8) = v16;
          *(_QWORD *)(a2 + 16) = &v21[4 * v20];
          if (!v14)
            goto LABEL_62;
          v26 = v14;
          goto LABEL_61;
        }
        *v13 = v12;
        v16 = v13 + 1;
        goto LABEL_62;
      }
      if (v8)
      {
        v15 = a1 + 40;
        if (v12 > a3)
        {
LABEL_23:
          v23 = (v8 - 1);
          if ((unint64_t)v14 >= *v10)
          {
            v27 = *v10 - (_QWORD)v14;
            v28 = v27 >> 1;
            if ((unint64_t)(v27 >> 1) <= 1)
              v28 = 1;
            if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
              v29 = 0x3FFFFFFFFFFFFFFFLL;
            else
              v29 = v28;
            v31 = sub_20BDE1330(a2 + 16, v29);
            v32 = *(float **)a2;
            v33 = *(float **)(a2 + 8);
            *v31 = *(_DWORD *)(v15 + 4 * v23);
            v14 = (float *)(v31 + 1);
            v34 = v31;
            while (v33 != v32)
            {
              v35 = *((_DWORD *)v33-- - 1);
              *--v34 = v35;
            }
            *(_QWORD *)a2 = v34;
            *(_QWORD *)(a2 + 8) = v14;
            *(_QWORD *)(a2 + 16) = &v31[v30];
            if (v32)
              operator delete(v32);
          }
          else
          {
            *v14++ = *(float *)(v15 + 4 * v23);
          }
          *(_QWORD *)(a2 + 8) = v14;
        }
      }
    }
    if (v12 < a3)
      goto LABEL_63;
    if (*(_DWORD *)(a1 + 52) >= 2u)
      v36 = *(_QWORD *)(a1 + 40);
    else
      v36 = a1 + 40;
    if ((unint64_t)v14 >= *v10)
    {
      v26 = *(float **)a2;
      v37 = ((uint64_t)v14 - *(_QWORD *)a2) >> 2;
      v38 = v37 + 1;
      if ((unint64_t)(v37 + 1) >> 62)
LABEL_89:
        sub_20BDDF694();
      v39 = *v10 - (_QWORD)v26;
      if (v39 >> 1 > v38)
        v38 = v39 >> 1;
      if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFFCLL)
        v40 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v40 = v38;
      if (v40)
      {
        v41 = (char *)sub_20BDE1330(a2 + 16, v40);
        v26 = *(float **)a2;
        v14 = *(float **)(a2 + 8);
      }
      else
      {
        v41 = 0;
      }
      v42 = &v41[4 * v37];
      *(_DWORD *)v42 = *(_DWORD *)(v36 + 4 * v11);
      v16 = (float *)(v42 + 4);
      while (v14 != v26)
      {
        v43 = *((_DWORD *)v14-- - 1);
        *((_DWORD *)v42 - 1) = v43;
        v42 -= 4;
      }
      *(_QWORD *)a2 = v42;
      *(_QWORD *)(a2 + 8) = v16;
      *(_QWORD *)(a2 + 16) = &v41[4 * v40];
      if (!v26)
        goto LABEL_62;
LABEL_61:
      operator delete(v26);
      goto LABEL_62;
    }
    *v14 = *(float *)(v36 + 4 * v11);
    v16 = v14 + 1;
LABEL_62:
    *(_QWORD *)(a2 + 8) = v16;
    v14 = v16;
LABEL_63:
    v44 = *(_QWORD *)(a1 + 32);
    ++v8;
  }
  while (v12 < a4 && v8 < v44);
  if (*(float **)a2 == v14 && v44 != 0)
  {
    if (*(_DWORD *)(a1 + 52) >= 2u)
      v47 = *(_DWORD **)(a1 + 40);
    else
      v47 = (_DWORD *)(a1 + 40);
    if ((unint64_t)v14 >= *v10)
    {
      v49 = *v10 - (_QWORD)v14;
      v50 = v49 >> 1;
      if ((unint64_t)(v49 >> 1) <= 1)
        v50 = 1;
      if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL)
        v51 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v51 = v50;
      v52 = sub_20BDE1330(a2 + 16, v51);
      v53 = *(float **)a2;
      v54 = *(float **)(a2 + 8);
      v56 = &v52[v55];
      *v52 = *v47;
      v48 = v52 + 1;
      while (v54 != v53)
      {
        v57 = *((_DWORD *)v54-- - 1);
        *--v52 = v57;
      }
      *(_QWORD *)a2 = v52;
      *(_QWORD *)(a2 + 8) = v48;
      *(_QWORD *)(a2 + 16) = v56;
      if (v53)
        operator delete(v53);
    }
    else
    {
      *v14 = *(float *)v47;
      v48 = v14 + 1;
    }
    *(_QWORD *)(a2 + 8) = v48;
  }
  return 1;
}

void sub_20C80E7AC(unint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v5;
  uint64_t v6;
  void (*v7)(void);

  if (a3 == 0.0)
  {
    v5 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v5)
      v5 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    v6 = **(_QWORD **)(a1 + 192);
    if ((*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v5 + 18) & 0xFFFFFFFFFFFFFFF8))
      v7 = *(void (**)(void))(v6 + 224);
    else
      v7 = *(void (**)(void))(v6 + 72);
    v7();
  }
  else
  {
    sub_20C80EADC(a1);
    sub_20C80EDC0(a1 + 24, a2, a3);
  }
}

uint64_t sub_20C80E858(uint64_t a1)
{
  uint64_t v2;
  __int128 v4[8];

  *(_QWORD *)a1 = &unk_24C54D020;
  *(_QWORD *)(a1 + 24) = 0x100000000;
  v2 = a1 + 32;
  *(_QWORD *)(a1 + 160) = 0x100000000;
  LODWORD(v4[0]) = 0;
  sub_20C80BA58((int *)(a1 + 16), 1u, (int *)v4);
  memset(v4, 0, sizeof(v4));
  sub_20C80E924(v2, 1u, v4);
  *(_QWORD *)(a1 + 8) = 0;
  return a1;
}

void sub_20C80E8EC(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(_DWORD *)(v1 + 164) >= 2u)
    free(*v3);
  if (*(_DWORD *)(v1 + 28) >= 2u)
    free(*v2);
  _Unwind_Resume(exception_object);
}

void sub_20C80E924(uint64_t a1, unsigned int a2, __int128 *a3)
{
  unsigned int v5;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v5 = *(_DWORD *)(a1 + 128);
  if (v5 <= a2)
  {
    if (v5 >= a2)
      return;
    v7 = *(_DWORD *)(a1 + 132);
    if (v7 < a2)
    {
      sub_20C80EA3C(a1, a2);
      v7 = *(_DWORD *)(a1 + 132);
    }
    v8 = a1;
    if (v7 >= 2)
      v8 = *(_QWORD *)a1;
    v9 = *(unsigned int *)(a1 + 128);
    if ((_DWORD)v9 != a2)
    {
      v10 = (_OWORD *)(v8 + (v9 << 7));
      v11 = ((unint64_t)a2 << 7) - (v9 << 7);
      do
      {
        v12 = *a3;
        v13 = a3[1];
        v14 = a3[3];
        v10[2] = a3[2];
        v10[3] = v14;
        *v10 = v12;
        v10[1] = v13;
        v15 = a3[4];
        v16 = a3[5];
        v17 = a3[7];
        v10[6] = a3[6];
        v10[7] = v17;
        v10[4] = v15;
        v10[5] = v16;
        v10 += 8;
        v11 -= 128;
      }
      while (v11);
    }
  }
  *(_DWORD *)(a1 + 128) = a2;
}

void sub_20C80E9D8(uint64_t a1, unsigned int a2)
{
  __int128 v4[8];

  LODWORD(v4[0]) = 0;
  sub_20C80BA58((int *)(a1 + 16), a2, (int *)v4);
  memset(v4, 0, sizeof(v4));
  sub_20C80E924(a1 + 32, a2, v4);
  *(_QWORD *)(a1 + 8) = a2;
}

void sub_20C80EA3C(uint64_t a1, unsigned int a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = malloc((unint64_t)a2 << 7);
  v5 = v4;
  v6 = *(_DWORD *)(a1 + 132);
  v7 = (__int128 *)a1;
  if (v6 >= 2)
    v7 = *(__int128 **)a1;
  v8 = *(unsigned int *)(a1 + 128);
  if ((_DWORD)v8)
  {
    v9 = v8 << 7;
    v10 = v4;
    do
    {
      v11 = *v7;
      v12 = v7[1];
      v13 = v7[3];
      v10[2] = v7[2];
      v10[3] = v13;
      *v10 = v11;
      v10[1] = v12;
      v14 = v7[4];
      v15 = v7[5];
      v16 = v7[7];
      v10[6] = v7[6];
      v10[7] = v16;
      v10[4] = v14;
      v10[5] = v15;
      v7 += 8;
      v10 += 8;
      v9 -= 128;
    }
    while (v9);
  }
  if (v6 >= 2)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 132) = a2;
}

unint64_t sub_20C80EADC(unint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (!*(_QWORD *)(result + 32))
  {
    v1 = result;
    v2 = result + 24;
    v3 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v3)
      v3 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    v4 = *((_QWORD *)v3 + 18) & 0xFFFFFFFFFFFFFFF8;
    v5 = *(_QWORD *)(v1 + 192);
    v6 = v1 + 16;
    if ((*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF8) == v4)
      return sub_20C80EB60(v5, v6, v2);
    else
      return sub_20C80EC90(v5, v6, v2);
  }
  return result;
}

unint64_t sub_20C80EB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t result;
  unint64_t v11;
  _QWORD v12[4];
  char v13;

  v6 = (_QWORD *)(a3 + 16);
  v7 = (_QWORD *)(a3 + 16);
  if (*(_DWORD *)(a3 + 28) >= 2u)
    v7 = (_QWORD *)*v6;
  v8 = (_QWORD *)(a3 + 32);
  v9 = (_QWORD *)(a3 + 32);
  if (*(_DWORD *)(a3 + 164) >= 2u)
    v9 = (_QWORD *)*v8;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 192))(a1, a2, 1, v7, v9);
  v11 = result;
  if (result >= 2)
  {
    (**(void (***)(uint64_t, unint64_t))a3)(a3, result);
    if (*(_DWORD *)(a3 + 28) >= 2u)
      v6 = (_QWORD *)*v6;
    if (*(_DWORD *)(a3 + 164) >= 2u)
      v8 = (_QWORD *)*v8;
    result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 192))(a1, a2, v11, v6, v8);
    if (v11 != result)
    {
      v12[0] = "hd/sceneDelegate.h";
      v12[1] = "SampleInstancerTransform";
      v12[2] = 618;
      v12[3] = "void pxrInternal__aapl__pxrReserved__::HdSceneDelegate::SampleInstancerTransform(const SdfPath &, HdTimeS"
               "ampleArray<GfMatrix4d, CAPACITY> *) [CAPACITY = 1U]";
      v13 = 0;
      result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v12, "authoredSamples == authoredSamplesSecondAttempt", 0);
    }
  }
  *(_QWORD *)(a3 + 8) = v11;
  return result;
}

unint64_t sub_20C80EC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t result;
  unint64_t v11;
  _QWORD v12[4];
  char v13;

  v6 = (_QWORD *)(a3 + 16);
  v7 = (_QWORD *)(a3 + 16);
  if (*(_DWORD *)(a3 + 28) >= 2u)
    v7 = (_QWORD *)*v6;
  v8 = (_QWORD *)(a3 + 32);
  v9 = (_QWORD *)(a3 + 32);
  if (*(_DWORD *)(a3 + 164) >= 2u)
    v9 = (_QWORD *)*v8;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 184))(a1, a2, 1, v7, v9);
  v11 = result;
  if (result >= 2)
  {
    (**(void (***)(uint64_t, unint64_t))a3)(a3, result);
    if (*(_DWORD *)(a3 + 28) >= 2u)
      v6 = (_QWORD *)*v6;
    if (*(_DWORD *)(a3 + 164) >= 2u)
      v8 = (_QWORD *)*v8;
    result = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 184))(a1, a2, v11, v6, v8);
    if (v11 != result)
    {
      v12[0] = "hd/sceneDelegate.h";
      v12[1] = "SampleTransform";
      v12[2] = 575;
      v12[3] = "void pxrInternal__aapl__pxrReserved__::HdSceneDelegate::SampleTransform(const SdfPath &, HdTimeSampleArra"
               "y<GfMatrix4d, CAPACITY> *) [CAPACITY = 1U]";
      v13 = 0;
      result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v12, "authoredSamples == authoredSamplesSecondAttempt", 0);
    }
  }
  *(_QWORD *)(a3 + 8) = v11;
  return result;
}

void sub_20C80EDC0(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v4;
  _QWORD *v5;
  _OWORD *v6;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = (_QWORD *)(a1 + 16);
  if (*(_DWORD *)(a1 + 28) >= 2u)
    v5 = (_QWORD *)*v5;
  v6 = (_OWORD *)(a1 + 32);
  if (*(_DWORD *)(a1 + 164) >= 2u)
    v6 = *(_OWORD **)v6;
  sub_20C80EDF4(v4, (uint64_t)v5, v6, a2, a3);
}

void sub_20C80EDF4(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v7;
  _OWORD *v8;
  float v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  float v22;
  uint64_t v23;
  float v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  float64x2_t *v29;
  float64x2_t v30;
  float64x2_t *v31;
  double v32;
  float64x2_t v33;
  float64x2_t v34;
  float64x2_t v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  __int128 *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[8];
  float64x2_t v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  float64x2_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v73 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    v7 = 0;
    v8 = a3;
    do
    {
      v9 = *(float *)(a2 + 4 * v7);
      if (v9 == a5)
      {
        v16 = v8[5];
        *(_OWORD *)(a4 + 64) = v8[4];
        *(_OWORD *)(a4 + 80) = v16;
        v17 = v8[7];
        *(_OWORD *)(a4 + 96) = v8[6];
        *(_OWORD *)(a4 + 112) = v17;
        v18 = v8[1];
        *(_OWORD *)a4 = *v8;
        *(_OWORD *)(a4 + 16) = v18;
        v14 = v8[2];
        v15 = v8[3];
        goto LABEL_15;
      }
      if (v9 > a5)
        goto LABEL_7;
      ++v7;
      v8 += 8;
    }
    while (a1 != v7);
    v7 = a1;
LABEL_7:
    if (!v7)
    {
      v19 = a3[5];
      *(_OWORD *)(a4 + 64) = a3[4];
      *(_OWORD *)(a4 + 80) = v19;
      v20 = a3[7];
      *(_OWORD *)(a4 + 96) = a3[6];
      *(_OWORD *)(a4 + 112) = v20;
      v21 = a3[1];
      *(_OWORD *)a4 = *a3;
      *(_OWORD *)(a4 + 16) = v21;
      v14 = a3[2];
      v15 = a3[3];
      goto LABEL_15;
    }
    if (v7 == a1)
    {
      v10 = &a3[8 * a1];
      v11 = *(v10 - 3);
      *(_OWORD *)(a4 + 64) = *(v10 - 4);
      *(_OWORD *)(a4 + 80) = v11;
      v12 = *(v10 - 1);
      *(_OWORD *)(a4 + 96) = *(v10 - 2);
      *(_OWORD *)(a4 + 112) = v12;
      v13 = *(v10 - 7);
      *(_OWORD *)a4 = *(v10 - 8);
      *(_OWORD *)(a4 + 16) = v13;
      v14 = *(v10 - 6);
      v15 = *(v10 - 5);
LABEL_15:
      *(_OWORD *)(a4 + 32) = v14;
      *(_OWORD *)(a4 + 48) = v15;
      return;
    }
    v22 = *(float *)(a2 + 4 * v7);
    v23 = v7 - 1;
    v24 = *(float *)(a2 + 4 * (v7 - 1));
    if (v22 == v24)
    {
      *(_QWORD *)&v57.f64[0] = "hd/timeSampleArray.h";
      *(_QWORD *)&v57.f64[1] = "HdResampleRawTimeSamples";
      *(_QWORD *)&v58.f64[0] = 108;
      *(_QWORD *)&v58.f64[1] = "T pxrInternal__aapl__pxrReserved__::HdResampleRawTimeSamples(float, size_t, const float *"
                               ", const T *) [T = pxrInternal__aapl__pxrReserved__::GfMatrix4d]";
      LOBYTE(v59.f64[0]) = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v57, (pxrInternal__aapl__pxrReserved__ *)"HdResampleRawTimeSamples: overlapping samples at %f; using first sample",
        (char *)a3,
        v22);
      v25 = &a3[8 * v23];
      v26 = v25[5];
      *(_OWORD *)(a4 + 64) = v25[4];
      *(_OWORD *)(a4 + 80) = v26;
      v27 = v25[7];
      *(_OWORD *)(a4 + 96) = v25[6];
      *(_OWORD *)(a4 + 112) = v27;
      v28 = v25[1];
      *(_OWORD *)a4 = *v25;
      *(_OWORD *)(a4 + 16) = v28;
      v14 = v25[2];
      v15 = v25[3];
      goto LABEL_15;
    }
    v29 = (float64x2_t *)&a3[8 * v23];
    v30 = v29[5];
    v31 = (float64x2_t *)&a3[8 * v7];
    v32 = (float)((float)(a5 - v24) / (float)(v22 - v24));
    v61 = v29[4];
    v62 = v30;
    v33 = v29[7];
    v63 = v29[6];
    v64 = v33;
    v34 = v29[1];
    v57 = *v29;
    v58 = v34;
    v35 = v29[3];
    v59 = v29[2];
    v60 = v35;
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=(&v57, 1.0 - v32);
    v37 = v36[5];
    v69 = v36[4];
    v70 = v37;
    v38 = v36[7];
    v71 = v36[6];
    v72 = v38;
    v39 = v36[1];
    v65 = *v36;
    v66 = v39;
    v40 = v36[3];
    v67 = v36[2];
    v68 = v40;
    v41 = v31[5];
    v61 = v31[4];
    v62 = v41;
    v42 = v31[7];
    v63 = v31[6];
    v64 = v42;
    v43 = v31[1];
    v57 = *v31;
    v58 = v43;
    v44 = v31[3];
    v59 = v31[2];
    v60 = v44;
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=(&v57, v32);
    v46 = v45[3];
    v48 = *v45;
    v47 = v45[1];
    v56[2] = v45[2];
    v56[3] = v46;
    v56[0] = v48;
    v56[1] = v47;
    v49 = v45[7];
    v51 = v45[4];
    v50 = v45[5];
    v56[6] = v45[6];
    v56[7] = v49;
    v56[4] = v51;
    v56[5] = v50;
    v52 = v70;
    *(_OWORD *)(a4 + 64) = v69;
    *(_OWORD *)(a4 + 80) = v52;
    v53 = v72;
    *(_OWORD *)(a4 + 96) = v71;
    *(_OWORD *)(a4 + 112) = v53;
    v54 = v66;
    *(_OWORD *)a4 = v65;
    *(_OWORD *)(a4 + 16) = v54;
    v55 = v68;
    *(_OWORD *)(a4 + 32) = v67;
    *(_OWORD *)(a4 + 48) = v55;
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator+=((double *)a4, (double *)v56);
  }
  else
  {
    *(_QWORD *)&v57.f64[0] = "hd/timeSampleArray.h";
    *(_QWORD *)&v57.f64[1] = "HdResampleRawTimeSamples";
    *(_QWORD *)&v58.f64[0] = 84;
    *(_QWORD *)&v58.f64[1] = "T pxrInternal__aapl__pxrReserved__::HdResampleRawTimeSamples(float, size_t, const float *, "
                             "const T *) [T = pxrInternal__aapl__pxrReserved__::GfMatrix4d]";
    LOBYTE(v59.f64[0]) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v57, 1, (pxrInternal__aapl__pxrReserved__ *)"HdResampleRawTimeSamples: Zero samples provided");
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
}

void sub_20C80F0AC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C80F0C0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C80F0D8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D098))
    return a1 + 24;
  else
    return 0;
}

uint64_t sub_20C80F118(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CB0F05CLL & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, (const std::type_info *)&unk_24C54D0C0);
}

uint64_t sub_20C80F190(uint64_t a1)
{
  unsigned int *v2;
  unsigned int v3;

  sub_20C80F798(a1 + 32, *(char **)(a1 + 40));
  sub_20C3A3BA4(a1 + 8, *(_QWORD **)(a1 + 16));
  if ((*(_QWORD *)a1 & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  return a1;
}

uint64_t *sub_20C80F1E8(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_20C80F23C(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_20C80F224(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C80F798(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_20C80F23C(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_20C80F2C0(v5, v6, v4 + 4, v4 + 4);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_20C80F2C0(uint64_t **a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (uint64_t **)sub_20C0A7D98(a1, a2, &v10, &v9, a3);
  result = *v6;
  if (!*v6)
  {
    sub_20C80F340((uint64_t)a1, a4, (uint64_t)&v8);
    sub_20BDDE1B4(a1, v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_20C80F340@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t *result;

  v5 = a1 + 8;
  v6 = (uint64_t *)operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = sub_20C80F3C0(v6 + 4, a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_20C80F3A4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = 0;
  sub_20C80F72C(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C80F3C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  sub_20C80F458(a1 + 1, a2[1], a2[2], (a2[2] - a2[1]) >> 4);
  return a1;
}

_QWORD *sub_20C80F458(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BE90F0C(result, a4);
    result = (_QWORD *)sub_20C80F4DC((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C80F4BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20C80F6A8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C80F4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C80F56C(a1, v4, v6);
      v6 += 16;
      v4 = v12 + 16;
      v12 += 16;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C80F5D8((uint64_t)v9);
  return v4;
}

_DWORD *sub_20C80F56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *result;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  sub_20BFD6E54((_DWORD *)a2, (_DWORD *)a3);
  result = sub_20BFD6EA4((_DWORD *)(a2 + 4), (_DWORD *)(a3 + 4));
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 8) = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      *(_QWORD *)(a2 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_20C80F5D8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C80F60C((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C80F60C(uint64_t *result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)result[1];
  v1 = (uint64_t *)result[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *result;
    do
    {
      v3 -= 16;
      result = (uint64_t *)sub_20C80F65C(v5, v3);
    }
    while (v3 != v4);
  }
  return result;
}

_DWORD *sub_20C80F65C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *(_QWORD *)(a2 + 8);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 4));
  return sub_20BFD265C((_DWORD *)a2);
}

void sub_20C80F6A8(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 16;
        sub_20C80F65C((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C80F72C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  void **v6;

  if (*(_BYTE *)(a1 + 8))
  {
    v6 = (void **)(a2 + 40);
    sub_20C80F6A8(&v6);
    v3 = *(_QWORD *)(a2 + 32);
    if ((v3 & 7) != 0)
    {
      v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v5 = __ldxr(v4);
      while (__stlxr(v5 - 2, v4));
    }
  }
  else if (!a2)
  {
    return;
  }
  operator delete((void *)a2);
}

void sub_20C80F798(uint64_t a1, char *a2)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  if (a2)
  {
    sub_20C80F798(a1, *(_QWORD *)a2);
    sub_20C80F798(a1, *((_QWORD *)a2 + 1));
    v7 = (void **)(a2 + 40);
    sub_20C80F6A8(&v7);
    v4 = *((_QWORD *)a2 + 4);
    if ((v4 & 7) != 0)
    {
      v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stlxr(v6 - 2, v5));
    }
    operator delete(a2);
  }
}

void sub_20C80F810(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54D0E0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C80F84C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D0E0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C80F88C@<X0>(uint64_t a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  char *v15;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  char *v22;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  char *v29;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  char *v36;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  char *v43;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  char *v50;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  unsigned int *v55;
  unsigned int v56;
  char *v57;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t v61;
  unsigned int *v62;
  unsigned int v63;
  char *result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v2)
    v2 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v3 = (uint64_t *)((char *)v2 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a1 + 16))
  {
    v8 = sub_20BFCA068((char **)a1, v3);
  }
  else
  {
    v5 = *v3;
    *v4 = *v3;
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 2, v6));
      if ((v7 & 1) == 0)
        *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 = (char *)(v4 + 1);
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v9)
    v9 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v10 = (uint64_t *)((char *)v9 + 16);
  v11 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v11 >= *(_QWORD *)(a1 + 16))
  {
    v15 = sub_20BFCA068((char **)a1, v10);
  }
  else
  {
    v12 = *v10;
    *v11 = *v10;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        *v11 &= 0xFFFFFFFFFFFFFFF8;
    }
    v15 = (char *)(v11 + 1);
  }
  *(_QWORD *)(a1 + 8) = v15;
  v16 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v16)
    v16 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v17 = (uint64_t *)((char *)v16 + 24);
  v18 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v18 >= *(_QWORD *)(a1 + 16))
  {
    v22 = sub_20BFCA068((char **)a1, v17);
  }
  else
  {
    v19 = *v17;
    *v18 = *v17;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        *v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    v22 = (char *)(v18 + 1);
  }
  *(_QWORD *)(a1 + 8) = v22;
  v23 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v23)
    v23 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v24 = (uint64_t *)((char *)v23 + 32);
  v25 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v25 >= *(_QWORD *)(a1 + 16))
  {
    v29 = sub_20BFCA068((char **)a1, v24);
  }
  else
  {
    v26 = *v24;
    *v25 = *v24;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        *v25 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (char *)(v25 + 1);
  }
  *(_QWORD *)(a1 + 8) = v29;
  v30 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v30)
    v30 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v31 = (uint64_t *)((char *)v30 + 40);
  v32 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v32 >= *(_QWORD *)(a1 + 16))
  {
    v36 = sub_20BFCA068((char **)a1, v31);
  }
  else
  {
    v33 = *v31;
    *v32 = *v31;
    if ((v33 & 7) != 0)
    {
      v34 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 2, v34));
      if ((v35 & 1) == 0)
        *v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    v36 = (char *)(v32 + 1);
  }
  *(_QWORD *)(a1 + 8) = v36;
  v37 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v37)
    v37 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v38 = (uint64_t *)((char *)v37 + 48);
  v39 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v39 >= *(_QWORD *)(a1 + 16))
  {
    v43 = sub_20BFCA068((char **)a1, v38);
  }
  else
  {
    v40 = *v38;
    *v39 = *v38;
    if ((v40 & 7) != 0)
    {
      v41 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
      do
        v42 = __ldxr(v41);
      while (__stxr(v42 + 2, v41));
      if ((v42 & 1) == 0)
        *v39 &= 0xFFFFFFFFFFFFFFF8;
    }
    v43 = (char *)(v39 + 1);
  }
  *(_QWORD *)(a1 + 8) = v43;
  v44 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v44)
    v44 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v45 = (uint64_t *)((char *)v44 + 56);
  v46 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v46 >= *(_QWORD *)(a1 + 16))
  {
    v50 = sub_20BFCA068((char **)a1, v45);
  }
  else
  {
    v47 = *v45;
    *v46 = *v45;
    if ((v47 & 7) != 0)
    {
      v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
      do
        v49 = __ldxr(v48);
      while (__stxr(v49 + 2, v48));
      if ((v49 & 1) == 0)
        *v46 &= 0xFFFFFFFFFFFFFFF8;
    }
    v50 = (char *)(v46 + 1);
  }
  *(_QWORD *)(a1 + 8) = v50;
  v51 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v51)
    v51 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v52 = (uint64_t *)((char *)v51 + 64);
  v53 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v53 >= *(_QWORD *)(a1 + 16))
  {
    v57 = sub_20BFCA068((char **)a1, v52);
  }
  else
  {
    v54 = *v52;
    *v53 = *v52;
    if ((v54 & 7) != 0)
    {
      v55 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
      do
        v56 = __ldxr(v55);
      while (__stxr(v56 + 2, v55));
      if ((v56 & 1) == 0)
        *v53 &= 0xFFFFFFFFFFFFFFF8;
    }
    v57 = (char *)(v53 + 1);
  }
  *(_QWORD *)(a1 + 8) = v57;
  v58 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v58)
    v58 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v59 = (uint64_t *)((char *)v58 + 72);
  v60 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v60 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_20BFCA068((char **)a1, v59);
  }
  else
  {
    v61 = *v59;
    *v60 = *v59;
    if ((v61 & 7) != 0)
    {
      v62 = (unsigned int *)(v61 & 0xFFFFFFFFFFFFFFF8);
      do
        v63 = __ldxr(v62);
      while (__stxr(v63 + 2, v62));
      if ((v63 & 1) == 0)
        *v60 &= 0xFFFFFFFFFFFFFFF8;
    }
    result = (char *)(v60 + 1);
  }
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_20C80FCB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C80FCC8(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v11;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v12;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v14;
  int v15;
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v16;
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v17;
  int v18;
  _DWORD *v19;
  _QWORD *v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  unsigned int *v38;
  unsigned int v39;
  unsigned int *v40;
  unsigned int v41;
  unsigned int *v42;
  unsigned int v43;
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v44;
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v45;
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v46;
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v47;
  unsigned int *v48;
  unsigned int v49;
  __int128 v50;
  __int128 v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[4];
  uint64_t v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v6)
    v6 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    if (*(_BYTE *)(a1 + 36))
    {
      v18 = *(_DWORD *)(a1 + 24);
      if (v18)
      {
LABEL_35:
        v19 = operator new(0x10uLL);
        *(_QWORD *)v19 = &unk_24C54D128;
        v19[2] = v18;
        v20 = operator new(0x20uLL);
        *v20 = &unk_24C54D190;
        v20[1] = 0;
        v20[2] = 0;
        v20[3] = v19;
LABEL_44:
        *a3 = v19;
        a3[1] = v20;
        return;
      }
    }
    else
    {
      v23 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), a1 + 16);
      v18 = v23;
      *(_QWORD *)(a1 + 24) = v23;
      *(_BYTE *)(a1 + 32) = v24;
      *(_BYTE *)(a1 + 36) = 1;
      if ((_DWORD)v23)
        goto LABEL_35;
    }
    v19 = 0;
    v20 = 0;
    goto LABEL_44;
  }
  v7 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v7)
    v7 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 2) & 0xFFFFFFFFFFFFFFF8))
  {
    if (!*(_BYTE *)(a1 + 36))
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), a1 + 16);
      *(_BYTE *)(a1 + 32) = v21;
      *(_BYTE *)(a1 + 36) = 1;
    }
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(a1 + 28), v55);
    goto LABEL_54;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v8)
    v8 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 3) & 0xFFFFFFFFFFFFFFF8))
  {
    if (!*(_BYTE *)(a1 + 36))
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), a1 + 16);
      *(_BYTE *)(a1 + 32) = v22;
      *(_BYTE *)(a1 + 36) = 1;
    }
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(a1 + 29), v55);
    goto LABEL_54;
  }
  v9 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v9)
    v9 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 4) & 0xFFFFFFFFFFFFFFF8))
  {
    if (!*(_BYTE *)(a1 + 36))
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), a1 + 16);
      *(_BYTE *)(a1 + 32) = v25;
      *(_BYTE *)(a1 + 36) = 1;
    }
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(a1 + 30), v55);
    goto LABEL_54;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v10)
    v10 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 5) & 0xFFFFFFFFFFFFFFF8))
  {
    if (!*(_BYTE *)(a1 + 36))
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), a1 + 16);
      *(_BYTE *)(a1 + 32) = v26;
      *(_BYTE *)(a1 + 36) = 1;
    }
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(a1 + 31), v55);
    goto LABEL_54;
  }
  v11 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v11)
    v11 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 6) & 0xFFFFFFFFFFFFFFF8))
  {
    if (!*(_BYTE *)(a1 + 36))
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8), a1 + 16);
      *(_BYTE *)(a1 + 32) = v27;
      *(_BYTE *)(a1 + 36) = 1;
    }
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(a1 + 32), v55);
LABEL_54:
    *(_OWORD *)a3 = *(_OWORD *)v55;
    return;
  }
  v12 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v12)
    v12 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v12 + 7) & 0xFFFFFFFFFFFFFFF8))
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 104))(v55, *(_QWORD *)(a1 + 8), a1 + 16);
    *(_QWORD *)&v51 = 0;
    sub_20C227544((pxrInternal__aapl__pxrReserved__::VtValue *)v55, (unsigned int **)&v51, (unsigned int **)&v52);
    if ((v51 & 7) != 0)
    {
      v28 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    sub_20BF4C2D8((uint64_t)v55);
    if (!v52)
      goto LABEL_64;
    sub_20C7EA9FC((uint64_t *)&v52, v55);
    *(_OWORD *)a3 = *(_OWORD *)v55;
    *(_OWORD *)v55 = 0uLL;
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v55);
    if ((v52 & 7) != 0)
    {
      v30 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v31 = __ldxr(v30);
      while (__stlxr(v31 - 2, v30));
    }
  }
  else
  {
    v13 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v13)
      v13 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v13 + 8) & 0xFFFFFFFFFFFFFFF8))
    {
      v14 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
      if (!v14)
        v14 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
      if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v14 + 9) & 0xFFFFFFFFFFFFFFF8))
      {
        v15 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 96))(*(_QWORD *)(a1 + 8), a1 + 16);
        if (v15)
        {
          v52 = 0;
          switch(v15)
          {
            case 1:
              v16 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              if (!v16)
                v16 = sub_20C810800(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              v17 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)((char *)v16 + 8);
              break;
            case 2:
              v47 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              if (!v47)
                v47 = sub_20C810800(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              v17 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)((char *)v47 + 16);
              break;
            case 3:
              v45 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              if (!v45)
                v45 = sub_20C810800(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              v17 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)((char *)v45 + 24);
              break;
            case 4:
              v46 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              if (!v46)
                v46 = sub_20C810800(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              v17 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)((char *)v46 + 32);
              break;
            case 5:
              v44 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              if (!v44)
                v44 = sub_20C810800(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              v17 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)((char *)v44 + 40);
              break;
            default:
              v17 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              if (!v17)
                v17 = sub_20C810800(&pxrInternal__aapl__pxrReserved__::HdCullStyleTokens);
              break;
          }
          sub_20BF32220(&v52, v17);
          sub_20C7EA9FC((uint64_t *)&v52, v55);
          *(_OWORD *)a3 = *(_OWORD *)v55;
          *(_OWORD *)v55 = 0uLL;
          pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v55);
          if ((v52 & 7) != 0)
          {
            v48 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
            do
              v49 = __ldxr(v48);
            while (__stlxr(v49 - 2, v48));
          }
          return;
        }
      }
LABEL_64:
      *a3 = 0;
      a3[1] = 0;
      return;
    }
    (*(void (**)(unint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 136))(&v52, *(_QWORD *)(a1 + 8), a1 + 16);
    v32 = 0;
    v51 = 0uLL;
    while (!*(_QWORD *)pxrInternal__aapl__pxrReserved__::HdReprSelector::operator[]((uint64_t)&v52, v32))
    {
      if (++v32 == 3)
        goto LABEL_72;
    }
    sub_20C008C78((uint64_t)v55, 3uLL);
    v33 = 0;
    for (i = 0; i != 3; ++i)
    {
      v35 = (_QWORD *)pxrInternal__aapl__pxrReserved__::HdReprSelector::operator[]((uint64_t)&v52, i);
      sub_20C009618((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v55, v36, v37);
      sub_20BF32220((_QWORD *)(v56 + v33), v35);
      v33 += 8;
    }
    sub_20C81052C((uint64_t)v55, &v50);
    sub_20BDE82DC((uint64_t)&v51, &v50);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v50);
    sub_20C00918C(v55);
LABEL_72:
    *(_OWORD *)a3 = v51;
    v51 = 0uLL;
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v51);
    if ((v54 & 7) != 0)
    {
      v38 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
      do
        v39 = __ldxr(v38);
      while (__stlxr(v39 - 2, v38));
    }
    if ((v53 & 7) != 0)
    {
      v40 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
      do
        v41 = __ldxr(v40);
      while (__stlxr(v41 - 2, v40));
    }
    if ((v52 & 7) != 0)
    {
      v42 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
  }
}

void sub_20C8103EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  unsigned int *v17;
  unsigned int v18;

  if ((a14 & 7) != 0)
  {
    v17 = (unsigned int *)(a14 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stlxr(v18 - 2, v17));
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C81052C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = (char *)operator new(0x30uLL);
  *(_QWORD *)v4 = &unk_24C54D208;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 24) = v5;
  v6 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v4 + 5) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 - 16);
    if (*((_QWORD *)v4 + 4))
      v7 = (unint64_t *)*((_QWORD *)v4 + 4);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return sub_20C810728(a2, (uint64_t)v4);
}

void sub_20C8105A8(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C8105BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = &unk_24C52008B;
  *(_DWORD *)a2 = *(_DWORD *)(result + 8);
  return result;
}

uint64_t sub_20C8105D8()
{
  return 0;
}

uint64_t sub_20C8105E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

void sub_20C8105EC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C810600(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C810618(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D1E0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C810658(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54D208;
  sub_20C00918C((_QWORD *)a1 + 1);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C810690(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54D208;
  sub_20C00918C((_QWORD *)a1 + 1);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C8106CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = off_24C525500;
  return sub_20BF56B40(a2, a1 + 8);
}

uint64_t sub_20C8106E4()
{
  return 0;
}

uint64_t sub_20C8106EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(_OWORD *)(result + 24);
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_QWORD *)(result + 40);
  *(_QWORD *)(a2 + 32) = v3;
  if (v3)
  {
    v4 = *(unint64_t **)(a2 + 24);
    v5 = (unint64_t *)(v3 - 16);
    if (!v4)
      v4 = v5;
    do
      v6 = __ldxr(v4);
    while (__stxr(v6 + 1, v4));
  }
  return result;
}

_QWORD *sub_20C810728(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54D270;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C810770(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C810794(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8107A8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8107C0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D2C0))
    return a1 + 24;
  else
    return 0;
}

pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *sub_20C810800(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C810848();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType::~HdCullStyleTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *sub_20C810848()
{
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType *)operator new(0x48uLL);
  pxrInternal__aapl__pxrReserved__::HdCullStyleTokens_StaticTokenType::HdCullStyleTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C810874(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C81088C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8108A0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8108B8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D338))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8108F8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  _DWORD **v6[2];
  uint64_t v7;
  uint64_t v8;

  v7 = a3;
  v8 = a2;
  sub_20C810954(a1);
  v6[0] = (_DWORD **)&v8;
  v6[1] = (_DWORD **)&v7;
  sub_20C8109D8(a1, (a3 - a2) >> 3, v6);
}

void sub_20C810954(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  _DWORD *v4;
  uint64_t v5;

  v1 = a1[4];
  if (v1)
  {
    if (a1[3] || (v3 = atomic_load((unint64_t *)(v1 - 16)), v3 != 1))
    {
      sub_20C809764(a1);
    }
    else if (*a1)
    {
      v4 = (_DWORD *)a1[4];
      v5 = 8 * *a1;
      do
      {
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v4 + 1);
        sub_20BFD265C(v4);
        v4 += 2;
        v5 -= 8;
      }
      while (v5);
    }
    *a1 = 0;
  }
}

void sub_20C8109D8(unint64_t *a1, unint64_t a2, _DWORD ***a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  _DWORD *v9;
  _QWORD *v10;
  _DWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a1;
  if (*a1 == a2)
    return;
  if (!a2)
    goto LABEL_11;
  v7 = (_QWORD *)a1[4];
  if (!v7)
  {
    if (8 * a2 / a2 == 8)
    {
      v10 = sub_20C810B5C((uint64_t)a1, a2);
      v7 = v10;
LABEL_18:
      sub_20C5E9DF8(**a3, *a3[1], v10);
      goto LABEL_21;
    }
LABEL_11:
    sub_20C810954(a1);
    return;
  }
  if (a1[3])
    goto LABEL_13;
  v8 = atomic_load(v7 - 2);
  if (v8 != 1)
  {
    v7 = (_QWORD *)a1[4];
LABEL_13:
    v11 = v7;
    if (v3 >= a2)
      v12 = a2;
    else
      v12 = *a1;
    v7 = sub_20C810B5C((uint64_t)a1, a2);
    sub_20C5E9DF8(v11, &v11[2 * v12], v7);
    if (v3 >= a2)
      goto LABEL_21;
    goto LABEL_17;
  }
  if (v3 < a2)
  {
    v9 = (_DWORD *)a1[4];
    if (*((_QWORD *)v9 - 1) < a2)
    {
      v7 = sub_20C810B5C((uint64_t)a1, a2);
      sub_20C5E9DF8(v9, &v9[2 * v3], v7);
    }
LABEL_17:
    v10 = &v7[v3];
    goto LABEL_18;
  }
  v13 = 8 * v3;
  v14 = 8 * a2;
  do
  {
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v7[(unint64_t)v14 / 8] + 1);
    sub_20BFD265C(&v7[(unint64_t)v14 / 8]);
    v14 += 8;
  }
  while (v13 != v14);
LABEL_21:
  if (v7 != (_QWORD *)a1[4])
  {
    sub_20C809764(a1);
    a1[4] = (unint64_t)v7;
  }
  *a1 = a2;
}

_QWORD *sub_20C810B5C(uint64_t a1, unint64_t a2)
{
  size_t v3;
  _QWORD *v4;
  uint64_t v7;
  int v8;

  sub_20BEB59B0((uint64_t)&v7, (uint64_t)"VtArray::_AllocateNew", (uint64_t)"value_type *pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::SdfPath>::_AllocateNew(size_t) [ELEM = pxrInternal__aapl__pxrReserved__::SdfPath]");
  if (a2 > 0x1FFFFFFFFFFFFFFDLL)
    v3 = -1;
  else
    v3 = 8 * a2 + 16;
  v4 = operator new(v3);
  *v4 = 1;
  v4[1] = a2;
  while (v8--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v7);
  return v4 + 2;
}

void sub_20C810BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BEB24F4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C810BF8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  _DWORD **v6[2];
  uint64_t v7;
  uint64_t v8;

  v7 = a3;
  v8 = a2;
  sub_20C810954(a1);
  v6[0] = (_DWORD **)&v8;
  v6[1] = (_DWORD **)&v7;
  sub_20C811074(a1, (a3 - a2) >> 3, v6);
}

void sub_20C810C54(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54D360;
  sub_20C809764((_QWORD *)(a1 + 24));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C810C9C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D360;
  sub_20C809764((_QWORD *)(a1 + 24));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

char *sub_20C810CE8@<X0>(uint64_t a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  char *result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v2)
    v2 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  v3 = (uint64_t *)((char *)v2 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a1 + 16))
  {
    v8 = sub_20BFCA068((char **)a1, v3);
  }
  else
  {
    v5 = *v3;
    *v4 = *v3;
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 2, v6));
      if ((v7 & 1) == 0)
        *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 = (char *)(v4 + 1);
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v9)
    v9 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  v10 = (uint64_t *)((char *)v9 + 16);
  v11 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v11 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_20BFCA068((char **)a1, v10);
  }
  else
  {
    v12 = *v10;
    *v11 = *v10;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        *v11 &= 0xFFFFFFFFFFFFFFF8;
    }
    result = (char *)(v11 + 1);
  }
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_20C810DFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C810E14(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  const char *v24;
  char v25;

  v6 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v6)
    v6 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    sub_20C803D70(a1 + 24, &v22);
    *(_OWORD *)a3 = v22;
  }
  else
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v7)
      v7 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 2) & 0xFFFFFFFFFFFFFFF8))
    {
      v8 = operator new(0x40uLL);
      v9 = v8;
      v10 = *(_QWORD *)(a1 + 16);
      v11 = *(_OWORD *)(a1 + 40);
      v19 = *(_OWORD *)(a1 + 24);
      v20 = v11;
      v12 = *(_QWORD *)(a1 + 56);
      v21 = v12;
      if (v12)
      {
        v13 = (unint64_t *)*((_QWORD *)&v20 + 1);
        if (!*((_QWORD *)&v20 + 1))
          v13 = (unint64_t *)(v12 - 16);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
      *(_QWORD *)v8 = off_24C54D3A8;
      sub_20BFD6E54(v8 + 2, (_DWORD *)(a1 + 8));
      sub_20BFD6EA4(v9 + 3, (_DWORD *)(a1 + 12));
      *((_QWORD *)v9 + 2) = v10;
      v15 = v20;
      *(_OWORD *)(v9 + 6) = v19;
      *(_OWORD *)(v9 + 10) = v15;
      *((_QWORD *)v9 + 7) = v12;
      if (v12)
      {
        v16 = (unint64_t *)*((_QWORD *)v9 + 6);
        if (!v16)
          v16 = (unint64_t *)(v12 - 16);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 1, v16));
        v10 = *((_QWORD *)v9 + 2);
      }
      if (!v10)
      {
        *(_QWORD *)&v22 = "hd/dataSourceLegacyPrim.cpp";
        *((_QWORD *)&v22 + 1) = "Hd_InstanceIndicesDataSource";
        v23 = 1634;
        v24 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_InstancerTopologyDataSource::Hd_InstanceIndice"
              "sDataSource::Hd_InstanceIndicesDataSource(const SdfPath &, HdSceneDelegate *, const VtArray<SdfPath>)";
        v25 = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v22, "_sceneDelegate", 0);
      }
      v18 = operator new(0x20uLL);
      *v18 = &off_24C54D4B8;
      v18[1] = 0;
      v18[2] = 0;
      v18[3] = v9;
      sub_20C809764(&v19);
      *(_QWORD *)a3 = v9;
      *(_QWORD *)(a3 + 8) = v18;
    }
    else
    {
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
    }
  }
}

void sub_20C811004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v9;
  _QWORD *v10;
  _DWORD *v11;
  _DWORD *v12;

  sub_20C809764(v10);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v12);
  sub_20BFD265C(v11);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v9);
  sub_20C809764(&a9);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_20C811074(unint64_t *a1, unint64_t a2, _DWORD ***a3)
{
  unint64_t v3;
  _QWORD *v7;
  unint64_t v8;
  _DWORD *v9;
  _QWORD *v10;
  _DWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a1;
  if (*a1 == a2)
    return;
  if (!a2)
    goto LABEL_11;
  v7 = (_QWORD *)a1[4];
  if (!v7)
  {
    if (8 * a2 / a2 == 8)
    {
      v10 = sub_20C810B5C((uint64_t)a1, a2);
      v7 = v10;
LABEL_18:
      sub_20C5E9DF8(**a3, *a3[1], v10);
      goto LABEL_21;
    }
LABEL_11:
    sub_20C810954(a1);
    return;
  }
  if (a1[3])
    goto LABEL_13;
  v8 = atomic_load(v7 - 2);
  if (v8 != 1)
  {
    v7 = (_QWORD *)a1[4];
LABEL_13:
    v11 = v7;
    if (v3 >= a2)
      v12 = a2;
    else
      v12 = *a1;
    v7 = sub_20C810B5C((uint64_t)a1, a2);
    sub_20C5E9DF8(v11, &v11[2 * v12], v7);
    if (v3 >= a2)
      goto LABEL_21;
    goto LABEL_17;
  }
  if (v3 < a2)
  {
    v9 = (_DWORD *)a1[4];
    if (*((_QWORD *)v9 - 1) < a2)
    {
      v7 = sub_20C810B5C((uint64_t)a1, a2);
      sub_20C5E9DF8(v9, &v9[2 * v3], v7);
    }
LABEL_17:
    v10 = &v7[v3];
    goto LABEL_18;
  }
  v13 = 8 * v3;
  v14 = 8 * a2;
  do
  {
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v7[(unint64_t)v14 / 8] + 1);
    sub_20BFD265C(&v7[(unint64_t)v14 / 8]);
    v14 += 8;
  }
  while (v13 != v14);
LABEL_21:
  if (v7 != (_QWORD *)a1[4])
  {
    sub_20C809764(a1);
    a1[4] = (unint64_t)v7;
  }
  *a1 = a2;
}

void sub_20C8111F8(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54D3A8;
  sub_20C809764((_QWORD *)(a1 + 24));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C811240(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D3A8;
  sub_20C809764((_QWORD *)(a1 + 24));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

uint64_t sub_20C81128C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

void sub_20C811294(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __int128 v4;
  _QWORD v5[5];

  if (*(_QWORD *)(a1 + 24) <= a2)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, unint64_t))(**(_QWORD **)(a1 + 16) + 216))(v5, *(_QWORD *)(a1 + 16), a1 + 8, *(_QWORD *)(a1 + 56) + 8 * a2);
    sub_20C81132C((uint64_t)v5, &v4);
    *(_OWORD *)a3 = v4;
    sub_20BF5618C((uint64_t)v5);
  }
}

void sub_20C811314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81132C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = (char *)operator new(0x30uLL);
  *(_QWORD *)v4 = &unk_24C54D3F0;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 24) = v5;
  v6 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v4 + 5) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 - 16);
    if (*((_QWORD *)v4 + 4))
      v7 = (unint64_t *)*((_QWORD *)v4 + 4);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return sub_20C811474(a2, (uint64_t)v4);
}

void sub_20C8113A4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54D3F0;
  sub_20BF5618C((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C8113DC(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54D3F0;
  sub_20BF5618C((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C811418@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = &off_24C51F5B0;
  return sub_20BF56B40(a2, a1 + 8);
}

uint64_t sub_20C811430()
{
  return 0;
}

uint64_t sub_20C811438@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(_OWORD *)(result + 24);
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_QWORD *)(result + 40);
  *(_QWORD *)(a2 + 32) = v3;
  if (v3)
  {
    v4 = *(unint64_t **)(a2 + 24);
    v5 = (unint64_t *)(v3 - 16);
    if (!v4)
      v4 = v5;
    do
      v6 = __ldxr(v4);
    while (__stxr(v6 + 1, v4));
  }
  return result;
}

_QWORD *sub_20C811474(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54D440;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C8114BC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C8114E0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8114F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81150C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D490))
    return a1 + 24;
  else
    return 0;
}

void sub_20C811550(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C811564(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81157C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D508))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8115C0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8115D4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8115EC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D580))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81162C(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 24;
        sub_20C8116B0((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_DWORD *sub_20C8116B0(uint64_t a1, uint64_t a2)
{
  _DWORD *result;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  result = sub_20BFD265C((_DWORD *)(a2 + 16));
  v4 = *(_QWORD *)(a2 + 8);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  if ((*(_QWORD *)a2 & 7) != 0)
  {
    v7 = (unsigned int *)(*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  return result;
}

void sub_20C811724(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

char *sub_20C811738@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *result;
  unsigned int *v5;
  unsigned int v6;

  a2[1] = (char *)&off_24C51E190 + 2;
  result = (char *)operator new(0x20uLL);
  *(_OWORD *)result = *(_OWORD *)(a1 + 8);
  *((_QWORD *)result + 2) = *(_QWORD *)(a1 + 24);
  v5 = (unsigned int *)(result + 24);
  atomic_store(0, (unsigned int *)result + 6);
  *a2 = result;
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
  return result;
}

uint64_t sub_20C81179C()
{
  return 0;
}

double sub_20C8117A4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

void sub_20C8117B4(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8117C8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8117E0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D660))
    return a1 + 24;
  else
    return 0;
}

void sub_20C811820(uint64_t a1)
{
  _DWORD *v2;
  void **v3;

  *(_QWORD *)a1 = off_24C54D688;
  v2 = (_DWORD *)(a1 + 12);
  v3 = (void **)(a1 + 32);
  sub_20BDE9EB0(&v3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C811880(uint64_t a1)
{
  _DWORD *v2;
  void *v3;
  void **v4;

  *(_QWORD *)a1 = off_24C54D688;
  v2 = (_DWORD *)(a1 + 12);
  v4 = (void **)(a1 + 32);
  sub_20BDE9EB0(&v4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v3);
}

uint64_t sub_20C8118E4(uint64_t a1)
{
  unsigned __int8 v2;

  v2 = atomic_load((unsigned __int8 *)(a1 + 24));
  if ((v2 & 1) == 0)
    sub_20C81199C(a1);
  return (uint64_t)(*(_QWORD *)(a1 + 40) - *(_QWORD *)(a1 + 32)) >> 4;
}

void sub_20C811920(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned __int8 v6;
  uint64_t v7;
  __int128 v8;
  unint64_t *v9;
  unint64_t v10;

  v6 = atomic_load((unsigned __int8 *)(a1 + 24));
  if ((v6 & 1) == 0)
    sub_20C81199C(a1);
  v7 = *(_QWORD *)(a1 + 32);
  if (a2 >= (*(_QWORD *)(a1 + 40) - v7) >> 4)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    v8 = *(_OWORD *)(v7 + 16 * a2);
    *(_OWORD *)a3 = v8;
    if (*((_QWORD *)&v8 + 1))
    {
      v9 = (unint64_t *)(*((_QWORD *)&v8 + 1) + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
}

void sub_20C81199C(uint64_t a1)
{
  unsigned __int8 v1;
  int64x2_t *v3;
  uint64_t v4;
  uint64_t i;
  __int128 v6;
  unint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  __int128 v20;
  int64x2_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  int64x2_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = atomic_load((unsigned __int8 *)(a1 + 24));
  if ((v1 & 1) == 0)
  {
    (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 160))(&v29, *(_QWORD *)(a1 + 16), a1 + 8);
    if (v29 != v30)
    {
      v3 = (int64x2_t *)(a1 + 32);
      sub_20BE0ECB0((char **)(a1 + 32), 0xCCCCCCCCCCCCCCCDLL * ((v30 - v29) >> 3));
      v4 = v29;
      for (i = v30; v4 != i; v4 += 40)
      {
        pxrInternal__aapl__pxrReserved__::HdCategoriesSchema::BuildRetained(*(pxrInternal__aapl__pxrReserved__::HdCategoriesSchema **)v4, 0, *(uint64_t **)(v4 + 32), 0, &v27);
        v6 = v27;
        v28 = v27;
        v27 = 0uLL;
        v8 = *(_OWORD **)(a1 + 40);
        v7 = *(_QWORD *)(a1 + 48);
        if ((unint64_t)v8 >= v7)
        {
          v26 = v6;
          v10 = ((uint64_t)v8 - v3->i64[0]) >> 4;
          if ((unint64_t)(v10 + 1) >> 60)
            sub_20BDDF694();
          v11 = v7 - v3->i64[0];
          v12 = v11 >> 3;
          if (v11 >> 3 <= (unint64_t)(v10 + 1))
            v12 = v10 + 1;
          if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0)
            v13 = 0xFFFFFFFFFFFFFFFLL;
          else
            v13 = v12;
          v34 = a1 + 48;
          v14 = (char *)sub_20BDEA2F0(a1 + 48, v13);
          v16 = &v14[16 * v10];
          *(_OWORD *)v16 = v26;
          v28 = 0uLL;
          v18 = *(_QWORD **)(a1 + 32);
          v17 = *(_QWORD **)(a1 + 40);
          if (v17 == v18)
          {
            v21 = vdupq_n_s64((unint64_t)v17);
            v19 = &v14[16 * v10];
          }
          else
          {
            v19 = &v14[16 * v10];
            do
            {
              v20 = *((_OWORD *)v17 - 1);
              v17 -= 2;
              *((_OWORD *)v19 - 1) = v20;
              v19 -= 16;
              *v17 = 0;
              v17[1] = 0;
            }
            while (v17 != v18);
            v21 = *v3;
          }
          v9 = v16 + 16;
          *(_QWORD *)(a1 + 32) = v19;
          *(_QWORD *)(a1 + 40) = v16 + 16;
          v32 = v21;
          v22 = *(_QWORD *)(a1 + 48);
          *(_QWORD *)(a1 + 48) = &v14[16 * v15];
          v33 = v22;
          v31 = (void **)v21.i64[0];
          sub_20BDEA324((uint64_t)&v31);
        }
        else
        {
          *v8 = v6;
          v9 = v8 + 1;
          v28 = 0uLL;
        }
        *(_QWORD *)(a1 + 40) = v9;
        v23 = (std::__shared_weak_count *)*((_QWORD *)&v27 + 1);
        if (*((_QWORD *)&v27 + 1))
        {
          v24 = (unint64_t *)(*((_QWORD *)&v27 + 1) + 8);
          do
            v25 = __ldaxr(v24);
          while (__stlxr(v25 - 1, v24));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
            std::__shared_weak_count::__release_weak(v23);
          }
        }
      }
    }
    atomic_store(1u, (unsigned __int8 *)(a1 + 24));
    v31 = (void **)&v29;
    sub_20C811BDC(&v31);
  }
}

void sub_20C811BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, char a15)
{
  a13 = (void **)&a15;
  sub_20C811BDC(&a13);
  _Unwind_Resume(a1);
}

void sub_20C811BDC(void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    sub_20C811C1C((uint64_t)v2, *v2);
    operator delete(**a1);
  }
}

void sub_20C811C1C(uint64_t a1, _QWORD *a2)
{
  _QWORD *i;

  for (i = *(_QWORD **)(a1 + 8); i != a2; sub_20C00918C(i))
    i -= 5;
  *(_QWORD *)(a1 + 8) = a2;
}

void sub_20C811C6C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C811C80(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C811C98(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D720))
    return a1 + 24;
  else
    return 0;
}

void sub_20C811CD8(_DWORD *a1)
{
  _DWORD *v2;

  *(_QWORD *)a1 = off_24C54D748;
  v2 = a1 + 3;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 6));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C811D24(_DWORD *a1)
{
  _DWORD *v2;
  void *v3;

  *(_QWORD *)a1 = off_24C54D748;
  v2 = a1 + 3;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 6));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v3);
}

_QWORD *sub_20C811D74@<X0>(_QWORD *a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  _QWORD *result;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v2 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v2)
    v2 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  v3 = *((_QWORD *)v2 + 1);
  v32 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v32 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v6)
    v6 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  v7 = *((_QWORD *)v6 + 3);
  v33 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v33 &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v10)
    v10 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  v11 = *((_QWORD *)v10 + 2);
  v34 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v34 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v14)
    v14 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  v15 = *((_QWORD *)v14 + 5);
  v35 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v35 &= 0xFFFFFFFFFFFFFFF8;
  }
  v18 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v18)
    v18 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  v19 = *((_QWORD *)v18 + 4);
  v36 = v19;
  if ((v19 & 7) != 0)
  {
    v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 2, v20));
    if ((v21 & 1) == 0)
      v36 &= 0xFFFFFFFFFFFFFFF8;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  result = operator new(0x28uLL);
  v23 = 0;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 5;
  do
  {
    v24 = *(&v32 + v23);
    *result = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 2, v25));
      if ((v26 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v23;
    ++result;
  }
  while (v23 != 5);
  v27 = &v37;
  a1[1] = result;
  do
  {
    v29 = *--v27;
    v28 = v29;
    if ((v29 & 7) != 0)
    {
      v30 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
      do
        v31 = __ldxr(v30);
      while (__stlxr(v31 - 2, v30));
    }
  }
  while (v27 != &v32);
  return result;
}

void sub_20C812014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;

  while (1)
  {
    v13 = *((_QWORD *)v11 - 1);
    v11 -= 8;
    v12 = v13;
    if ((v13 & 7) != 0)
    {
      v14 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    if (v11 == &a11)
      _Unwind_Resume(exception_object);
  }
}

void sub_20C81208C(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *v10;
  char *v11;
  __int128 v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD *v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  _QWORD *v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  unsigned int *v69;
  unsigned int v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  unsigned int *v77;
  unsigned int v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  std::__shared_weak_count *v90;
  unint64_t *v91;
  unint64_t v92;
  std::__shared_weak_count *v93;
  unint64_t *v94;
  unint64_t v95;
  std::__shared_weak_count *v96;
  unint64_t *v97;
  unint64_t v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  std::__shared_weak_count *v102;
  unint64_t *v103;
  unint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  char *v111;
  char *v112;
  __int128 v113;
  unint64_t *v114;
  unint64_t v115;
  _QWORD *v116;
  unint64_t *v117;
  __int128 v118;
  unint64_t *v119;
  unint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  uint64_t i;
  uint64_t v125;
  unsigned __int8 v126;
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder *v127;
  std::__shared_weak_count *v128;
  unint64_t *v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  std::__shared_weak_count *v134;
  unint64_t *v135;
  unint64_t v136;
  const char *Text;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  int64x2_t v150;
  uint64_t v151;
  unsigned int *v152;
  unsigned int v153;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v154;
  _QWORD *v155;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *v156;
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema *v157;
  uint64_t *SchemaToken;
  int64x2_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  _QWORD *v168;
  _QWORD *v169;
  char *v170;
  __int128 v171;
  int64x2_t v172;
  _OWORD *v173;
  uint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  std::__shared_weak_count *v178;
  unint64_t *v179;
  unint64_t v180;
  std::__shared_weak_count *v181;
  unint64_t *v182;
  unint64_t v183;
  std::__shared_weak_count *v184;
  unint64_t *v185;
  unint64_t v186;
  std::__shared_weak_count *v187;
  unint64_t *v188;
  unint64_t v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  std::__shared_weak_count *v193;
  unint64_t *v194;
  unint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  std::__shared_weak_count *v199;
  unint64_t *v200;
  unint64_t v201;
  std::__shared_weak_count *v202;
  unint64_t *v203;
  unint64_t v204;
  std::__shared_weak_count *v205;
  unint64_t *v206;
  unint64_t v207;
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *v208;
  uint64_t v209;
  unsigned int *v210;
  unsigned int v211;
  unsigned __int8 v212;
  unsigned __int8 v213;
  __int128 v214;
  uint64_t v215;
  unint64_t *v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  std::__shared_weak_count *v221;
  unint64_t *v222;
  unint64_t v223;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v224;
  _QWORD *v225;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *v226;
  uint64_t *v227;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  std::__shared_weak_count *v232;
  unint64_t *v233;
  unint64_t v234;
  std::__shared_weak_count *v235;
  unint64_t *v236;
  unint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  std::__shared_weak_count *v241;
  unint64_t *v242;
  unint64_t v243;
  std::__shared_weak_count *v244;
  unint64_t *v245;
  unint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  std::__shared_weak_count *v250;
  unint64_t *v251;
  unint64_t v252;
  std::__shared_weak_count *v253;
  unint64_t *v254;
  unint64_t v255;
  std::__shared_weak_count *v256;
  unint64_t *v257;
  unint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  unsigned int *v261;
  unsigned int v262;
  char *v263;
  int64x2_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  char *v270;
  uint64_t v271;
  char *v272;
  _QWORD *v273;
  _QWORD *v274;
  char *v275;
  __int128 v276;
  int64x2_t v277;
  _OWORD *v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  uint64_t j;
  int64x2_t v284;
  uint64_t v285;
  unint64_t *v286;
  unint64_t v287;
  std::__shared_weak_count *v288;
  unint64_t *v289;
  unint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v294;
  _QWORD *v295;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *v296;
  uint64_t *v297;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v298;
  std::__shared_weak_count *v299;
  unint64_t *v300;
  unint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  std::__shared_weak_count *v305;
  unint64_t *v306;
  unint64_t v307;
  std::__shared_weak_count *v308;
  unint64_t *v309;
  unint64_t v310;
  std::__shared_weak_count *v311;
  unint64_t *v312;
  unint64_t v313;
  std::__shared_weak_count *v314;
  unint64_t *v315;
  unint64_t v316;
  std::__shared_weak_count *v317;
  unint64_t *v318;
  unint64_t v319;
  std::__shared_weak_count *v320;
  unint64_t *v321;
  unint64_t v322;
  std::__shared_weak_count *v323;
  unint64_t *v324;
  unint64_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  _QWORD *v329;
  uint64_t v330;
  unsigned int *v331;
  unsigned int v332;
  char *v333;
  int64x2_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  unint64_t v339;
  char *v340;
  uint64_t v341;
  char *v342;
  _QWORD *v343;
  _QWORD *v344;
  char *v345;
  __int128 v346;
  int64x2_t v347;
  _OWORD *v348;
  uint64_t v349;
  std::__shared_weak_count *v350;
  unint64_t *v351;
  unint64_t v352;
  uint64_t k;
  int64x2_t v354;
  int64x2_t v355;
  int64x2_t v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  unsigned int *v361;
  unsigned int *v362;
  unsigned int *v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  _OWORD v372[2];
  _QWORD *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  int64x2_t v384;
  int64x2_t v385;
  int64x2_t v386;
  int64x2_t v387;
  _QWORD v388[2];
  int64x2_t v389;
  _QWORD v390[2];
  _OWORD v391[2];
  __int128 v392;
  int64x2_t v393;
  uint64_t v394;
  uint64_t v395;

  v395 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if (!v6)
    v6 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    sub_20C8144C4(a1, (char **)v372);
    v11 = (char *)operator new(0x18uLL);
    v12 = v372[0];
    *(_QWORD *)v11 = off_24C54D790;
    *(_OWORD *)(v11 + 8) = v12;
    if (*((_QWORD *)&v12 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v12 + 1) + 8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 1, v13));
    }
    v15 = operator new(0x20uLL);
    *v15 = &off_24C54DBE8;
    v15[1] = 0;
    v15[2] = 0;
    v15[3] = v11;
    *a3 = v11;
    a3[1] = v15;
    v16 = (std::__shared_weak_count *)*((_QWORD *)&v372[0] + 1);
    if (*((_QWORD *)&v372[0] + 1))
    {
      v17 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
LABEL_175:
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
  }
  else
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
    if (!v7)
      v7 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 3) & 0xFFFFFFFFFFFFFFF8))
    {
      (*(void (**)(_OWORD *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 56))(v372, *(_QWORD *)(a1 + 16), a1 + 8);
      v370 = 0u;
      v371 = 0u;
      v368 = 0u;
      v369 = 0u;
      v366 = 0u;
      v367 = 0u;
      v364 = 0u;
      v365 = 0u;
      v363 = (unsigned int *)*((_QWORD *)&v372[0] + 1);
      if ((BYTE8(v372[0]) & 7) != 0)
      {
        v19 = (unsigned int *)(*((_QWORD *)&v372[0] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 2, v19));
        if ((v20 & 1) == 0)
          v363 = v19;
      }
      sub_20C7EA9FC((uint64_t *)&v363, &v389);
      v391[0] = v389;
      v389 = 0uLL;
      v21 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetFaceVaryingLinearInterpolation(&v364, (uint64_t *)v391);
      v362 = *(unsigned int **)&v372[0];
      if ((v372[0] & 7) != 0)
      {
        v22 = (unsigned int *)(*(_QWORD *)&v372[0] & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 2, v22));
        if ((v23 & 1) == 0)
          v362 = v22;
      }
      sub_20C7EA9FC((uint64_t *)&v362, &v386);
      v387 = v386;
      v386 = 0uLL;
      v24 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetInterpolateBoundary((uint64_t)v21, v387.i64);
      v361 = (unsigned int *)*((_QWORD *)&v372[1] + 1);
      if ((BYTE8(v372[1]) & 7) != 0)
      {
        v25 = (unsigned int *)(*((_QWORD *)&v372[1] + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 2, v25));
        if ((v26 & 1) == 0)
          v361 = v25;
      }
      sub_20C7EA9FC((uint64_t *)&v361, &v384);
      v385 = v384;
      v384 = 0uLL;
      v27 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetTriangleSubdivisionRule(v24, v385.i64);
      sub_20C81132C((uint64_t)&v376, &v382);
      v383 = v382;
      v382 = 0uLL;
      v28 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetCornerIndices(v27, (uint64_t *)&v383);
      sub_20C814684((uint64_t)&v377, &v380);
      v381 = v380;
      v380 = 0uLL;
      v29 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetCornerSharpnesses(v28, (uint64_t *)&v381);
      sub_20C81132C((uint64_t)&v373, &v378);
      v379 = v378;
      v378 = 0uLL;
      v30 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetCreaseIndices(v29, (uint64_t *)&v379);
      sub_20C81132C((uint64_t)&v374, &v359);
      v360 = v359;
      v359 = 0uLL;
      v31 = pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetCreaseLengths(v30, (uint64_t *)&v360);
      sub_20C814684((uint64_t)&v375, &v357);
      v358 = v357;
      v357 = 0uLL;
      v32 = (pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::SetCreaseSharpnesses(v31, (uint64_t *)&v358);
      pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::Builder::Build(v32, &v392);
      *(_OWORD *)a3 = v392;
      v392 = 0uLL;
      v33 = (std::__shared_weak_count *)*((_QWORD *)&v358 + 1);
      if (*((_QWORD *)&v358 + 1))
      {
        v34 = (unint64_t *)(*((_QWORD *)&v358 + 1) + 8);
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      v36 = (std::__shared_weak_count *)*((_QWORD *)&v357 + 1);
      if (*((_QWORD *)&v357 + 1))
      {
        v37 = (unint64_t *)(*((_QWORD *)&v357 + 1) + 8);
        do
          v38 = __ldaxr(v37);
        while (__stlxr(v38 - 1, v37));
        if (!v38)
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
      }
      v39 = (std::__shared_weak_count *)*((_QWORD *)&v360 + 1);
      if (*((_QWORD *)&v360 + 1))
      {
        v40 = (unint64_t *)(*((_QWORD *)&v360 + 1) + 8);
        do
          v41 = __ldaxr(v40);
        while (__stlxr(v41 - 1, v40));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
      }
      v42 = (std::__shared_weak_count *)*((_QWORD *)&v359 + 1);
      if (*((_QWORD *)&v359 + 1))
      {
        v43 = (unint64_t *)(*((_QWORD *)&v359 + 1) + 8);
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
          std::__shared_weak_count::__release_weak(v42);
        }
      }
      v45 = (std::__shared_weak_count *)*((_QWORD *)&v379 + 1);
      if (*((_QWORD *)&v379 + 1))
      {
        v46 = (unint64_t *)(*((_QWORD *)&v379 + 1) + 8);
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      v48 = (std::__shared_weak_count *)*((_QWORD *)&v378 + 1);
      if (*((_QWORD *)&v378 + 1))
      {
        v49 = (unint64_t *)(*((_QWORD *)&v378 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      v51 = (std::__shared_weak_count *)*((_QWORD *)&v381 + 1);
      if (*((_QWORD *)&v381 + 1))
      {
        v52 = (unint64_t *)(*((_QWORD *)&v381 + 1) + 8);
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      v54 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
      if (*((_QWORD *)&v380 + 1))
      {
        v55 = (unint64_t *)(*((_QWORD *)&v380 + 1) + 8);
        do
          v56 = __ldaxr(v55);
        while (__stlxr(v56 - 1, v55));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
      v57 = (std::__shared_weak_count *)*((_QWORD *)&v383 + 1);
      if (*((_QWORD *)&v383 + 1))
      {
        v58 = (unint64_t *)(*((_QWORD *)&v383 + 1) + 8);
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
      v60 = (std::__shared_weak_count *)*((_QWORD *)&v382 + 1);
      if (*((_QWORD *)&v382 + 1))
      {
        v61 = (unint64_t *)(*((_QWORD *)&v382 + 1) + 8);
        do
          v62 = __ldaxr(v61);
        while (__stlxr(v62 - 1, v61));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
      }
      v63 = (std::__shared_weak_count *)v385.i64[1];
      if (v385.i64[1])
      {
        v64 = (unint64_t *)(v385.i64[1] + 8);
        do
          v65 = __ldaxr(v64);
        while (__stlxr(v65 - 1, v64));
        if (!v65)
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
      v66 = (std::__shared_weak_count *)v384.i64[1];
      if (v384.i64[1])
      {
        v67 = (unint64_t *)(v384.i64[1] + 8);
        do
          v68 = __ldaxr(v67);
        while (__stlxr(v68 - 1, v67));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
          std::__shared_weak_count::__release_weak(v66);
        }
      }
      if ((v361 & 7) != 0)
      {
        v69 = (unsigned int *)((unint64_t)v361 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      v71 = (std::__shared_weak_count *)v387.i64[1];
      if (v387.i64[1])
      {
        v72 = (unint64_t *)(v387.i64[1] + 8);
        do
          v73 = __ldaxr(v72);
        while (__stlxr(v73 - 1, v72));
        if (!v73)
        {
          ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
          std::__shared_weak_count::__release_weak(v71);
        }
      }
      v74 = (std::__shared_weak_count *)v386.i64[1];
      if (v386.i64[1])
      {
        v75 = (unint64_t *)(v386.i64[1] + 8);
        do
          v76 = __ldaxr(v75);
        while (__stlxr(v76 - 1, v75));
        if (!v76)
        {
          ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
          std::__shared_weak_count::__release_weak(v74);
        }
      }
      if ((v362 & 7) != 0)
      {
        v77 = (unsigned int *)((unint64_t)v362 & 0xFFFFFFFFFFFFFFF8);
        do
          v78 = __ldxr(v77);
        while (__stlxr(v78 - 2, v77));
      }
      v79 = (std::__shared_weak_count *)*((_QWORD *)&v391[0] + 1);
      if (*((_QWORD *)&v391[0] + 1))
      {
        v80 = (unint64_t *)(*((_QWORD *)&v391[0] + 1) + 8);
        do
          v81 = __ldaxr(v80);
        while (__stlxr(v81 - 1, v80));
        if (!v81)
        {
          ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
          std::__shared_weak_count::__release_weak(v79);
        }
      }
      v82 = (std::__shared_weak_count *)v389.i64[1];
      if (v389.i64[1])
      {
        v83 = (unint64_t *)(v389.i64[1] + 8);
        do
          v84 = __ldaxr(v83);
        while (__stlxr(v84 - 1, v83));
        if (!v84)
        {
          ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
          std::__shared_weak_count::__release_weak(v82);
        }
      }
      if ((v363 & 7) != 0)
      {
        v85 = (unsigned int *)((unint64_t)v363 & 0xFFFFFFFFFFFFFFF8);
        do
          v86 = __ldxr(v85);
        while (__stlxr(v86 - 2, v85));
      }
      v87 = (std::__shared_weak_count *)*((_QWORD *)&v371 + 1);
      if (*((_QWORD *)&v371 + 1))
      {
        v88 = (unint64_t *)(*((_QWORD *)&v371 + 1) + 8);
        do
          v89 = __ldaxr(v88);
        while (__stlxr(v89 - 1, v88));
        if (!v89)
        {
          ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
          std::__shared_weak_count::__release_weak(v87);
        }
      }
      v90 = (std::__shared_weak_count *)*((_QWORD *)&v370 + 1);
      if (*((_QWORD *)&v370 + 1))
      {
        v91 = (unint64_t *)(*((_QWORD *)&v370 + 1) + 8);
        do
          v92 = __ldaxr(v91);
        while (__stlxr(v92 - 1, v91));
        if (!v92)
        {
          ((void (*)(std::__shared_weak_count *))v90->__on_zero_shared)(v90);
          std::__shared_weak_count::__release_weak(v90);
        }
      }
      v93 = (std::__shared_weak_count *)*((_QWORD *)&v369 + 1);
      if (*((_QWORD *)&v369 + 1))
      {
        v94 = (unint64_t *)(*((_QWORD *)&v369 + 1) + 8);
        do
          v95 = __ldaxr(v94);
        while (__stlxr(v95 - 1, v94));
        if (!v95)
        {
          ((void (*)(std::__shared_weak_count *))v93->__on_zero_shared)(v93);
          std::__shared_weak_count::__release_weak(v93);
        }
      }
      v96 = (std::__shared_weak_count *)*((_QWORD *)&v368 + 1);
      if (*((_QWORD *)&v368 + 1))
      {
        v97 = (unint64_t *)(*((_QWORD *)&v368 + 1) + 8);
        do
          v98 = __ldaxr(v97);
        while (__stlxr(v98 - 1, v97));
        if (!v98)
        {
          ((void (*)(std::__shared_weak_count *))v96->__on_zero_shared)(v96);
          std::__shared_weak_count::__release_weak(v96);
        }
      }
      v99 = (std::__shared_weak_count *)*((_QWORD *)&v367 + 1);
      if (*((_QWORD *)&v367 + 1))
      {
        v100 = (unint64_t *)(*((_QWORD *)&v367 + 1) + 8);
        do
          v101 = __ldaxr(v100);
        while (__stlxr(v101 - 1, v100));
        if (!v101)
        {
          ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
          std::__shared_weak_count::__release_weak(v99);
        }
      }
      v102 = (std::__shared_weak_count *)*((_QWORD *)&v366 + 1);
      if (*((_QWORD *)&v366 + 1))
      {
        v103 = (unint64_t *)(*((_QWORD *)&v366 + 1) + 8);
        do
          v104 = __ldaxr(v103);
        while (__stlxr(v104 - 1, v103));
        if (!v104)
        {
          ((void (*)(std::__shared_weak_count *))v102->__on_zero_shared)(v102);
          std::__shared_weak_count::__release_weak(v102);
        }
      }
      v105 = (std::__shared_weak_count *)*((_QWORD *)&v365 + 1);
      if (*((_QWORD *)&v365 + 1))
      {
        v106 = (unint64_t *)(*((_QWORD *)&v365 + 1) + 8);
        do
          v107 = __ldaxr(v106);
        while (__stlxr(v107 - 1, v106));
        if (!v107)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
      }
      v108 = (std::__shared_weak_count *)*((_QWORD *)&v364 + 1);
      if (*((_QWORD *)&v364 + 1))
      {
        v109 = (unint64_t *)(*((_QWORD *)&v364 + 1) + 8);
        do
          v110 = __ldaxr(v109);
        while (__stlxr(v110 - 1, v109));
        if (!v110)
        {
          ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
          std::__shared_weak_count::__release_weak(v108);
        }
      }
      sub_20C7DD1B4(v372);
    }
    else
    {
      v8 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
      if (!v8)
        v8 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
      if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v8 + 2) & 0xFFFFFFFFFFFFFFF8))
      {
        v9 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
        if (!v9)
          v9 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
        if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 5) & 0xFFFFFFFFFFFFFFF8))
        {
          LOBYTE(v364) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 88))(*(_QWORD *)(a1 + 16), a1 + 8);
          pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v364, (uint64_t *)v372);
          *(_OWORD *)a3 = v372[0];
        }
        else
        {
          v10 = (pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
          if (!v10)
            v10 = sub_20C809370(&pxrInternal__aapl__pxrReserved__::HdMeshSchemaTokens);
          if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 4) & 0xFFFFFFFFFFFFFFF8))
          {
            v389 = 0uLL;
            v390[0] = 0;
            v387 = 0uLL;
            v388[0] = 0;
            sub_20C8144C4(a1, (char **)&v364);
            sub_20C814F34(v364, (uint64_t *)v372);
            v118 = v372[0];
            if (*((_QWORD *)&v372[0] + 1))
            {
              v119 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
              do
                v120 = __ldaxr(v119);
              while (__stlxr(v120 - 1, v119));
              if (!v120)
              {
                (*(void (**)(_QWORD))(**((_QWORD **)&v118 + 1) + 16))(*((_QWORD *)&v118 + 1));
                std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v118 + 1));
              }
            }
            v121 = (std::__shared_weak_count *)*((_QWORD *)&v364 + 1);
            if (*((_QWORD *)&v364 + 1))
            {
              v122 = (unint64_t *)(*((_QWORD *)&v364 + 1) + 8);
              do
                v123 = __ldaxr(v122);
              while (__stlxr(v123 - 1, v122));
              if (!v123)
              {
                ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
                std::__shared_weak_count::__release_weak(v121);
              }
            }
            v125 = *(_QWORD *)(v118 + 384);
            for (i = *(_QWORD *)(v118 + 392); v125 != i; v125 += 64)
            {
              v126 = atomic_load((unsigned __int8 *)&qword_25498DD28);
              if ((v126 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD28))
              {
                v208 = (pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens);
                if (!v208)
                  v208 = sub_20C8093F8(&pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchemaTokens);
                v209 = *((_QWORD *)v208 + 1);
                qword_25498DD20 = v209;
                if ((v209 & 7) != 0)
                {
                  v210 = (unsigned int *)(v209 & 0xFFFFFFFFFFFFFFF8);
                  do
                    v211 = __ldxr(v210);
                  while (__stxr(v211 + 2, v210));
                  if ((v211 & 1) == 0)
                    qword_25498DD20 &= 0xFFFFFFFFFFFFFFF8;
                }
                __cxa_atexit((void (*)(void *))sub_20C823DA8, 0, &dword_20BDBC000);
                __cxa_guard_release(&qword_25498DD28);
              }
              v364 = 0uLL;
              sub_20C7FFBBC((_DWORD *)(v125 + 12), &v386);
              v391[0] = v386;
              v386 = 0uLL;
              v127 = (pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder::SetPath(&v364, (uint64_t *)v391);
              pxrInternal__aapl__pxrReserved__::HdMaterialBindingSchema::Builder::Build((uint64_t *)v372, v127);
              v392 = v372[0];
              v372[0] = 0uLL;
              v128 = (std::__shared_weak_count *)*((_QWORD *)&v391[0] + 1);
              if (*((_QWORD *)&v391[0] + 1))
              {
                v129 = (unint64_t *)(*((_QWORD *)&v391[0] + 1) + 8);
                do
                  v130 = __ldaxr(v129);
                while (__stlxr(v130 - 1, v129));
                if (!v130)
                {
                  ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
                  std::__shared_weak_count::__release_weak(v128);
                }
              }
              v131 = (std::__shared_weak_count *)v386.i64[1];
              if (v386.i64[1])
              {
                v132 = (unint64_t *)(v386.i64[1] + 8);
                do
                  v133 = __ldaxr(v132);
                while (__stlxr(v133 - 1, v132));
                if (!v133)
                {
                  ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
                  std::__shared_weak_count::__release_weak(v131);
                }
              }
              v134 = (std::__shared_weak_count *)*((_QWORD *)&v364 + 1);
              if (*((_QWORD *)&v364 + 1))
              {
                v135 = (unint64_t *)(*((_QWORD *)&v364 + 1) + 8);
                do
                  v136 = __ldaxr(v135);
                while (__stlxr(v136 - 1, v135));
                if (!v136)
                {
                  ((void (*)(std::__shared_weak_count *))v134->__on_zero_shared)(v134);
                  std::__shared_weak_count::__release_weak(v134);
                }
              }
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(v125 + 4));
              pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&v364, Text);
              v138 = v389.i64[1];
              if (v389.i64[1] >= v390[0])
              {
                v141 = (v389.i64[1] - v389.i64[0]) >> 3;
                if ((unint64_t)(v141 + 1) >> 61)
                  sub_20BDDF694();
                v142 = (v390[0] - v389.i64[0]) >> 2;
                if (v142 <= v141 + 1)
                  v142 = v141 + 1;
                if (v390[0] - v389.i64[0] >= 0x7FFFFFFFFFFFFFF8uLL)
                  v143 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v143 = v142;
                v373 = v390;
                if (v143)
                  v144 = (char *)sub_20BDDF6A8((uint64_t)v390, v143);
                else
                  v144 = 0;
                v145 = &v144[8 * v141];
                v146 = &v144[8 * v143];
                *((_QWORD *)&v372[1] + 1) = v146;
                *(_QWORD *)v145 = v364;
                v140 = v145 + 8;
                *(_QWORD *)&v364 = 0;
                *(_QWORD *)&v372[1] = v145 + 8;
                v147 = (_QWORD *)v389.i64[1];
                v148 = (_QWORD *)v389.i64[0];
                if (v389.i64[1] == v389.i64[0])
                {
                  v150 = vdupq_n_s64(v389.u64[1]);
                }
                else
                {
                  do
                  {
                    v149 = *--v147;
                    *((_QWORD *)v145 - 1) = v149;
                    v145 -= 8;
                    *v147 = 0;
                  }
                  while (v147 != v148);
                  v150 = v389;
                  v146 = (char *)*((_QWORD *)&v372[1] + 1);
                  v140 = *(_QWORD **)&v372[1];
                }
                v389.i64[0] = (uint64_t)v145;
                v389.i64[1] = (uint64_t)v140;
                *(int64x2_t *)((char *)v372 + 8) = v150;
                v151 = v390[0];
                v390[0] = v146;
                *((_QWORD *)&v372[1] + 1) = v151;
                *(_QWORD *)&v372[0] = v150.i64[0];
                sub_20BF1EE98((uint64_t)v372);
                v139 = v364;
              }
              else
              {
                v139 = 0;
                *(_QWORD *)v389.i64[1] = v364;
                v140 = (_QWORD *)(v138 + 8);
                *(_QWORD *)&v364 = 0;
              }
              v389.i64[1] = (uint64_t)v140;
              if ((v139 & 7) != 0)
              {
                v152 = (unsigned int *)(v139 & 0xFFFFFFFFFFFFFFF8);
                do
                  v153 = __ldxr(v152);
                while (__stlxr(v153 - 2, v152));
              }
              v364 = 0u;
              v365 = 0u;
              v154 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
              if (!v154)
                v154 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
              pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildTypeDataSource((pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)((char *)v154 + 16), &v384);
              v155 = pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetType(&v364, v384.i64);
              sub_20C81132C(v125 + 24, &v382);
              v383 = v382;
              v382 = 0uLL;
              v156 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetIndices((uint64_t)v155, (uint64_t *)&v383);
              pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::Build(v156, &v385);
              SchemaToken = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::GetSchemaToken(v157);
              pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::BuildRetained(1uLL, &qword_25498DD20, (uint64_t *)&v392, &v379);
              v380 = v379;
              v379 = 0uLL;
              pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(SchemaToken, (uint64_t *)&v380, &v381);
              sub_20C815AC8((uint64_t)&v385, &v381, &v386);
              v159 = v386;
              v391[0] = v386;
              v386 = 0uLL;
              v160 = v387.i64[1];
              if (v387.i64[1] >= v388[0])
              {
                v354 = v159;
                v161 = (v387.i64[1] - v387.i64[0]) >> 4;
                v162 = v161 + 1;
                if ((unint64_t)(v161 + 1) >> 60)
                  sub_20BDDF694();
                v163 = v388[0] - v387.i64[0];
                if ((v388[0] - v387.i64[0]) >> 3 > v162)
                  v162 = v163 >> 3;
                if ((unint64_t)v163 >= 0x7FFFFFFFFFFFFFF0)
                  v164 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v164 = v162;
                v373 = v388;
                v165 = (char *)sub_20BDEA2F0((uint64_t)v388, v164);
                v167 = &v165[16 * v161];
                *(int64x2_t *)v167 = v354;
                v391[0] = 0uLL;
                v168 = (_QWORD *)v387.i64[1];
                v169 = (_QWORD *)v387.i64[0];
                if (v387.i64[1] == v387.i64[0])
                {
                  v172 = vdupq_n_s64(v387.u64[1]);
                  v170 = &v165[16 * v161];
                }
                else
                {
                  v170 = &v165[16 * v161];
                  do
                  {
                    v171 = *((_OWORD *)v168 - 1);
                    v168 -= 2;
                    *((_OWORD *)v170 - 1) = v171;
                    v170 -= 16;
                    *v168 = 0;
                    v168[1] = 0;
                  }
                  while (v168 != v169);
                  v172 = v387;
                }
                v173 = v167 + 16;
                v387.i64[0] = (uint64_t)v170;
                v387.i64[1] = (uint64_t)(v167 + 16);
                *(int64x2_t *)((char *)v372 + 8) = v172;
                v174 = v388[0];
                v388[0] = &v165[16 * v166];
                *((_QWORD *)&v372[1] + 1) = v174;
                *(_QWORD *)&v372[0] = v172.i64[0];
                sub_20BDEA324((uint64_t)v372);
                v175 = (std::__shared_weak_count *)v386.i64[1];
                v387.i64[1] = (uint64_t)v173;
                if (v386.i64[1])
                {
                  v176 = (unint64_t *)(v386.i64[1] + 8);
                  do
                    v177 = __ldaxr(v176);
                  while (__stlxr(v177 - 1, v176));
                  if (!v177)
                  {
                    ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
                    std::__shared_weak_count::__release_weak(v175);
                  }
                }
              }
              else
              {
                *(int64x2_t *)v387.i64[1] = v159;
                v391[0] = 0uLL;
                v387.i64[1] = v160 + 16;
              }
              v178 = (std::__shared_weak_count *)*((_QWORD *)&v381 + 1);
              if (*((_QWORD *)&v381 + 1))
              {
                v179 = (unint64_t *)(*((_QWORD *)&v381 + 1) + 8);
                do
                  v180 = __ldaxr(v179);
                while (__stlxr(v180 - 1, v179));
                if (!v180)
                {
                  ((void (*)(std::__shared_weak_count *))v178->__on_zero_shared)(v178);
                  std::__shared_weak_count::__release_weak(v178);
                }
              }
              v181 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
              if (*((_QWORD *)&v380 + 1))
              {
                v182 = (unint64_t *)(*((_QWORD *)&v380 + 1) + 8);
                do
                  v183 = __ldaxr(v182);
                while (__stlxr(v183 - 1, v182));
                if (!v183)
                {
                  ((void (*)(std::__shared_weak_count *))v181->__on_zero_shared)(v181);
                  std::__shared_weak_count::__release_weak(v181);
                }
              }
              v184 = (std::__shared_weak_count *)*((_QWORD *)&v379 + 1);
              if (*((_QWORD *)&v379 + 1))
              {
                v185 = (unint64_t *)(*((_QWORD *)&v379 + 1) + 8);
                do
                  v186 = __ldaxr(v185);
                while (__stlxr(v186 - 1, v185));
                if (!v186)
                {
                  ((void (*)(std::__shared_weak_count *))v184->__on_zero_shared)(v184);
                  std::__shared_weak_count::__release_weak(v184);
                }
              }
              v187 = (std::__shared_weak_count *)v385.i64[1];
              if (v385.i64[1])
              {
                v188 = (unint64_t *)(v385.i64[1] + 8);
                do
                  v189 = __ldaxr(v188);
                while (__stlxr(v189 - 1, v188));
                if (!v189)
                {
                  ((void (*)(std::__shared_weak_count *))v187->__on_zero_shared)(v187);
                  std::__shared_weak_count::__release_weak(v187);
                }
              }
              v190 = (std::__shared_weak_count *)*((_QWORD *)&v383 + 1);
              if (*((_QWORD *)&v383 + 1))
              {
                v191 = (unint64_t *)(*((_QWORD *)&v383 + 1) + 8);
                do
                  v192 = __ldaxr(v191);
                while (__stlxr(v192 - 1, v191));
                if (!v192)
                {
                  ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
                  std::__shared_weak_count::__release_weak(v190);
                }
              }
              v193 = (std::__shared_weak_count *)*((_QWORD *)&v382 + 1);
              if (*((_QWORD *)&v382 + 1))
              {
                v194 = (unint64_t *)(*((_QWORD *)&v382 + 1) + 8);
                do
                  v195 = __ldaxr(v194);
                while (__stlxr(v195 - 1, v194));
                if (!v195)
                {
                  ((void (*)(std::__shared_weak_count *))v193->__on_zero_shared)(v193);
                  std::__shared_weak_count::__release_weak(v193);
                }
              }
              v196 = (std::__shared_weak_count *)v384.i64[1];
              if (v384.i64[1])
              {
                v197 = (unint64_t *)(v384.i64[1] + 8);
                do
                  v198 = __ldaxr(v197);
                while (__stlxr(v198 - 1, v197));
                if (!v198)
                {
                  ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
                  std::__shared_weak_count::__release_weak(v196);
                }
              }
              v199 = (std::__shared_weak_count *)*((_QWORD *)&v365 + 1);
              if (*((_QWORD *)&v365 + 1))
              {
                v200 = (unint64_t *)(*((_QWORD *)&v365 + 1) + 8);
                do
                  v201 = __ldaxr(v200);
                while (__stlxr(v201 - 1, v200));
                if (!v201)
                {
                  ((void (*)(std::__shared_weak_count *))v199->__on_zero_shared)(v199);
                  std::__shared_weak_count::__release_weak(v199);
                }
              }
              v202 = (std::__shared_weak_count *)*((_QWORD *)&v364 + 1);
              if (*((_QWORD *)&v364 + 1))
              {
                v203 = (unint64_t *)(*((_QWORD *)&v364 + 1) + 8);
                do
                  v204 = __ldaxr(v203);
                while (__stlxr(v204 - 1, v203));
                if (!v204)
                {
                  ((void (*)(std::__shared_weak_count *))v202->__on_zero_shared)(v202);
                  std::__shared_weak_count::__release_weak(v202);
                }
              }
              v205 = (std::__shared_weak_count *)*((_QWORD *)&v392 + 1);
              if (*((_QWORD *)&v392 + 1))
              {
                v206 = (unint64_t *)(*((_QWORD *)&v392 + 1) + 8);
                do
                  v207 = __ldaxr(v206);
                while (__stlxr(v207 - 1, v206));
                if (!v207)
                {
                  ((void (*)(std::__shared_weak_count *))v205->__on_zero_shared)(v205);
                  std::__shared_weak_count::__release_weak(v205);
                }
              }
            }
            v212 = atomic_load((unsigned __int8 *)&qword_25498DD38);
            if ((v212 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD38))
            {
              pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_25498DD30, "__invisibleFaces");
              __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_25498DD30, &dword_20BDBC000);
              __cxa_guard_release(&qword_25498DD38);
            }
            v213 = atomic_load((unsigned __int8 *)&qword_25498DD48);
            if ((v213 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD48))
            {
              pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_25498DD40, "__invisiblePoints");
              __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_25498DD40, &dword_20BDBC000);
              __cxa_guard_release(&qword_25498DD48);
            }
            sub_20C8144C4(a1, (char **)&v392);
            sub_20C814F34(v392, (uint64_t *)v372);
            v214 = *(_OWORD *)(*(_QWORD *)&v372[0] + 464);
            v364 = *(_OWORD *)(*(_QWORD *)&v372[0] + 448);
            v365 = v214;
            v215 = *(_QWORD *)(*(_QWORD *)&v372[0] + 480);
            *(_QWORD *)&v366 = v215;
            if (v215)
            {
              v216 = (unint64_t *)(v215 - 16);
              if (*((_QWORD *)&v365 + 1))
                v216 = (unint64_t *)*((_QWORD *)&v365 + 1);
              do
                v217 = __ldxr(v216);
              while (__stxr(v217 + 1, v216));
            }
            v218 = (std::__shared_weak_count *)*((_QWORD *)&v372[0] + 1);
            if (*((_QWORD *)&v372[0] + 1))
            {
              v219 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
              do
                v220 = __ldaxr(v219);
              while (__stlxr(v220 - 1, v219));
              if (!v220)
              {
                ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
                std::__shared_weak_count::__release_weak(v218);
              }
            }
            v221 = (std::__shared_weak_count *)*((_QWORD *)&v392 + 1);
            if (*((_QWORD *)&v392 + 1))
            {
              v222 = (unint64_t *)(*((_QWORD *)&v392 + 1) + 8);
              do
                v223 = __ldaxr(v222);
              while (__stlxr(v223 - 1, v222));
              if (!v223)
              {
                ((void (*)(std::__shared_weak_count *))v221->__on_zero_shared)(v221);
                std::__shared_weak_count::__release_weak(v221);
              }
            }
            if ((_QWORD)v364)
            {
              memset(v372, 0, sizeof(v372));
              v224 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
              if (!v224)
                v224 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
              pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildTypeDataSource((pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)((char *)v224 + 16), v391);
              v225 = pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetType(v372, (uint64_t *)v391);
              sub_20C81132C((uint64_t)&v364, &v385);
              v386 = v385;
              v385 = 0uLL;
              v226 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetIndices((uint64_t)v225, v386.i64);
              pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::Build(v226, &v392);
              v227 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
              if (!v227)
                v227 = (uint64_t *)sub_20C809654(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
              v381 = 0uLL;
              LOBYTE(v378) = 0;
              pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v378, (uint64_t *)&v379);
              v380 = v379;
              v379 = 0uLL;
              v228 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v381, (uint64_t *)&v380);
              pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build((uint64_t *)&v382, v228);
              v383 = v382;
              v382 = 0uLL;
              pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v227, (uint64_t *)&v383, &v384);
              v393 = v384;
              v384 = 0uLL;
              v229 = (std::__shared_weak_count *)*((_QWORD *)&v383 + 1);
              if (*((_QWORD *)&v383 + 1))
              {
                v230 = (unint64_t *)(*((_QWORD *)&v383 + 1) + 8);
                do
                  v231 = __ldaxr(v230);
                while (__stlxr(v231 - 1, v230));
                if (!v231)
                {
                  ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
                  std::__shared_weak_count::__release_weak(v229);
                }
              }
              v232 = (std::__shared_weak_count *)*((_QWORD *)&v382 + 1);
              if (*((_QWORD *)&v382 + 1))
              {
                v233 = (unint64_t *)(*((_QWORD *)&v382 + 1) + 8);
                do
                  v234 = __ldaxr(v233);
                while (__stlxr(v234 - 1, v233));
                if (!v234)
                {
                  ((void (*)(std::__shared_weak_count *))v232->__on_zero_shared)(v232);
                  std::__shared_weak_count::__release_weak(v232);
                }
              }
              v235 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
              if (*((_QWORD *)&v380 + 1))
              {
                v236 = (unint64_t *)(*((_QWORD *)&v380 + 1) + 8);
                do
                  v237 = __ldaxr(v236);
                while (__stlxr(v237 - 1, v236));
                if (!v237)
                {
                  ((void (*)(std::__shared_weak_count *))v235->__on_zero_shared)(v235);
                  std::__shared_weak_count::__release_weak(v235);
                }
              }
              v238 = (std::__shared_weak_count *)*((_QWORD *)&v379 + 1);
              if (*((_QWORD *)&v379 + 1))
              {
                v239 = (unint64_t *)(*((_QWORD *)&v379 + 1) + 8);
                do
                  v240 = __ldaxr(v239);
                while (__stlxr(v240 - 1, v239));
                if (!v240)
                {
                  ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
                  std::__shared_weak_count::__release_weak(v238);
                }
              }
              v241 = (std::__shared_weak_count *)*((_QWORD *)&v381 + 1);
              if (*((_QWORD *)&v381 + 1))
              {
                v242 = (unint64_t *)(*((_QWORD *)&v381 + 1) + 8);
                do
                  v243 = __ldaxr(v242);
                while (__stlxr(v243 - 1, v242));
                if (!v243)
                {
                  ((void (*)(std::__shared_weak_count *))v241->__on_zero_shared)(v241);
                  std::__shared_weak_count::__release_weak(v241);
                }
              }
              v244 = (std::__shared_weak_count *)v386.i64[1];
              if (v386.i64[1])
              {
                v245 = (unint64_t *)(v386.i64[1] + 8);
                do
                  v246 = __ldaxr(v245);
                while (__stlxr(v246 - 1, v245));
                if (!v246)
                {
                  ((void (*)(std::__shared_weak_count *))v244->__on_zero_shared)(v244);
                  std::__shared_weak_count::__release_weak(v244);
                }
              }
              v247 = (std::__shared_weak_count *)v385.i64[1];
              if (v385.i64[1])
              {
                v248 = (unint64_t *)(v385.i64[1] + 8);
                do
                  v249 = __ldaxr(v248);
                while (__stlxr(v249 - 1, v248));
                if (!v249)
                {
                  ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
                  std::__shared_weak_count::__release_weak(v247);
                }
              }
              v250 = (std::__shared_weak_count *)*((_QWORD *)&v391[0] + 1);
              if (*((_QWORD *)&v391[0] + 1))
              {
                v251 = (unint64_t *)(*((_QWORD *)&v391[0] + 1) + 8);
                do
                  v252 = __ldaxr(v251);
                while (__stlxr(v252 - 1, v251));
                if (!v252)
                {
                  ((void (*)(std::__shared_weak_count *))v250->__on_zero_shared)(v250);
                  std::__shared_weak_count::__release_weak(v250);
                }
              }
              v253 = (std::__shared_weak_count *)*((_QWORD *)&v372[1] + 1);
              if (*((_QWORD *)&v372[1] + 1))
              {
                v254 = (unint64_t *)(*((_QWORD *)&v372[1] + 1) + 8);
                do
                  v255 = __ldaxr(v254);
                while (__stlxr(v255 - 1, v254));
                if (!v255)
                {
                  ((void (*)(std::__shared_weak_count *))v253->__on_zero_shared)(v253);
                  std::__shared_weak_count::__release_weak(v253);
                }
              }
              v256 = (std::__shared_weak_count *)*((_QWORD *)&v372[0] + 1);
              if (*((_QWORD *)&v372[0] + 1))
              {
                v257 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
                do
                  v258 = __ldaxr(v257);
                while (__stlxr(v258 - 1, v257));
                if (!v258)
                {
                  ((void (*)(std::__shared_weak_count *))v256->__on_zero_shared)(v256);
                  std::__shared_weak_count::__release_weak(v256);
                }
              }
              v259 = (_QWORD *)v389.i64[1];
              if (v389.i64[1] >= v390[0])
              {
                v263 = sub_20BFCA068((char **)&v389, &qword_25498DD30);
              }
              else
              {
                v260 = qword_25498DD30;
                *(_QWORD *)v389.i64[1] = qword_25498DD30;
                if ((v260 & 7) != 0)
                {
                  v261 = (unsigned int *)(v260 & 0xFFFFFFFFFFFFFFF8);
                  do
                    v262 = __ldxr(v261);
                  while (__stxr(v262 + 2, v261));
                  if ((v262 & 1) == 0)
                    *v259 &= 0xFFFFFFFFFFFFFFF8;
                }
                v263 = (char *)(v259 + 1);
              }
              v389.i64[1] = (uint64_t)v263;
              v385.i64[0] = 2;
              sub_20C815B90(&v385, (uint64_t)&v392, &v386);
              v264 = v386;
              v391[0] = v386;
              v386 = 0uLL;
              v265 = v387.i64[1];
              if (v387.i64[1] >= v388[0])
              {
                v355 = v264;
                v266 = (v387.i64[1] - v387.i64[0]) >> 4;
                v267 = v266 + 1;
                if ((unint64_t)(v266 + 1) >> 60)
                  sub_20BDDF694();
                v268 = v388[0] - v387.i64[0];
                if ((v388[0] - v387.i64[0]) >> 3 > v267)
                  v267 = v268 >> 3;
                if ((unint64_t)v268 >= 0x7FFFFFFFFFFFFFF0)
                  v269 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v269 = v267;
                v373 = v388;
                v270 = (char *)sub_20BDEA2F0((uint64_t)v388, v269);
                v272 = &v270[16 * v266];
                *(int64x2_t *)v272 = v355;
                v391[0] = 0uLL;
                v273 = (_QWORD *)v387.i64[1];
                v274 = (_QWORD *)v387.i64[0];
                if (v387.i64[1] == v387.i64[0])
                {
                  v277 = vdupq_n_s64(v387.u64[1]);
                  v275 = &v270[16 * v266];
                }
                else
                {
                  v275 = &v270[16 * v266];
                  do
                  {
                    v276 = *((_OWORD *)v273 - 1);
                    v273 -= 2;
                    *((_OWORD *)v275 - 1) = v276;
                    v275 -= 16;
                    *v273 = 0;
                    v273[1] = 0;
                  }
                  while (v273 != v274);
                  v277 = v387;
                }
                v278 = v272 + 16;
                v387.i64[0] = (uint64_t)v275;
                v387.i64[1] = (uint64_t)(v272 + 16);
                *(int64x2_t *)((char *)v372 + 8) = v277;
                v279 = v388[0];
                v388[0] = &v270[16 * v271];
                *((_QWORD *)&v372[1] + 1) = v279;
                *(_QWORD *)&v372[0] = v277.i64[0];
                sub_20BDEA324((uint64_t)v372);
                v280 = (std::__shared_weak_count *)v386.i64[1];
                v387.i64[1] = (uint64_t)v278;
                if (v386.i64[1])
                {
                  v281 = (unint64_t *)(v386.i64[1] + 8);
                  do
                    v282 = __ldaxr(v281);
                  while (__stlxr(v282 - 1, v281));
                  if (!v282)
                  {
                    ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
                    std::__shared_weak_count::__release_weak(v280);
                  }
                }
              }
              else
              {
                *(int64x2_t *)v387.i64[1] = v264;
                v387.i64[1] = v265 + 16;
              }
              for (j = 16; j != -16; j -= 16)
                pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)((char *)&v392 + j));
            }
            sub_20C8144C4(a1, (char **)v391);
            sub_20C814F34(*(uint64_t *)&v391[0], (uint64_t *)v372);
            v284 = *(int64x2_t *)(*(_QWORD *)&v372[0] + 424);
            v392 = *(_OWORD *)(*(_QWORD *)&v372[0] + 408);
            v393 = v284;
            v285 = *(_QWORD *)(*(_QWORD *)&v372[0] + 440);
            v394 = v285;
            if (v285)
            {
              v286 = (unint64_t *)(v285 - 16);
              if (v393.i64[1])
                v286 = (unint64_t *)v393.i64[1];
              do
                v287 = __ldxr(v286);
              while (__stxr(v287 + 1, v286));
            }
            v288 = (std::__shared_weak_count *)*((_QWORD *)&v372[0] + 1);
            if (*((_QWORD *)&v372[0] + 1))
            {
              v289 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
              do
                v290 = __ldaxr(v289);
              while (__stlxr(v290 - 1, v289));
              if (!v290)
              {
                ((void (*)(std::__shared_weak_count *))v288->__on_zero_shared)(v288);
                std::__shared_weak_count::__release_weak(v288);
              }
            }
            v291 = (std::__shared_weak_count *)*((_QWORD *)&v391[0] + 1);
            if (*((_QWORD *)&v391[0] + 1))
            {
              v292 = (unint64_t *)(*((_QWORD *)&v391[0] + 1) + 8);
              do
                v293 = __ldaxr(v292);
              while (__stlxr(v293 - 1, v292));
              if (!v293)
              {
                ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
                std::__shared_weak_count::__release_weak(v291);
              }
            }
            if ((_QWORD)v392)
            {
              memset(v372, 0, sizeof(v372));
              v294 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
              if (!v294)
                v294 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
              pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildTypeDataSource((pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)((char *)v294 + 24), &v386);
              v295 = pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetType(v372, v386.i64);
              sub_20C81132C((uint64_t)&v392, &v384);
              v385 = v384;
              v384 = 0uLL;
              v296 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetIndices((uint64_t)v295, v385.i64);
              pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::Build(v296, v391);
              v297 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
              if (!v297)
                v297 = (uint64_t *)sub_20C809654(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
              v380 = 0uLL;
              LOBYTE(v360) = 0;
              pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v360, (uint64_t *)&v378);
              v379 = v378;
              v378 = 0uLL;
              v298 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v380, (uint64_t *)&v379);
              pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build((uint64_t *)&v381, v298);
              v382 = v381;
              v381 = 0uLL;
              pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v297, (uint64_t *)&v382, &v383);
              v391[1] = v383;
              v383 = 0uLL;
              v299 = (std::__shared_weak_count *)*((_QWORD *)&v382 + 1);
              if (*((_QWORD *)&v382 + 1))
              {
                v300 = (unint64_t *)(*((_QWORD *)&v382 + 1) + 8);
                do
                  v301 = __ldaxr(v300);
                while (__stlxr(v301 - 1, v300));
                if (!v301)
                {
                  ((void (*)(std::__shared_weak_count *))v299->__on_zero_shared)(v299);
                  std::__shared_weak_count::__release_weak(v299);
                }
              }
              v302 = (std::__shared_weak_count *)*((_QWORD *)&v381 + 1);
              if (*((_QWORD *)&v381 + 1))
              {
                v303 = (unint64_t *)(*((_QWORD *)&v381 + 1) + 8);
                do
                  v304 = __ldaxr(v303);
                while (__stlxr(v304 - 1, v303));
                if (!v304)
                {
                  ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
                  std::__shared_weak_count::__release_weak(v302);
                }
              }
              v305 = (std::__shared_weak_count *)*((_QWORD *)&v379 + 1);
              if (*((_QWORD *)&v379 + 1))
              {
                v306 = (unint64_t *)(*((_QWORD *)&v379 + 1) + 8);
                do
                  v307 = __ldaxr(v306);
                while (__stlxr(v307 - 1, v306));
                if (!v307)
                {
                  ((void (*)(std::__shared_weak_count *))v305->__on_zero_shared)(v305);
                  std::__shared_weak_count::__release_weak(v305);
                }
              }
              v308 = (std::__shared_weak_count *)*((_QWORD *)&v378 + 1);
              if (*((_QWORD *)&v378 + 1))
              {
                v309 = (unint64_t *)(*((_QWORD *)&v378 + 1) + 8);
                do
                  v310 = __ldaxr(v309);
                while (__stlxr(v310 - 1, v309));
                if (!v310)
                {
                  ((void (*)(std::__shared_weak_count *))v308->__on_zero_shared)(v308);
                  std::__shared_weak_count::__release_weak(v308);
                }
              }
              v311 = (std::__shared_weak_count *)*((_QWORD *)&v380 + 1);
              if (*((_QWORD *)&v380 + 1))
              {
                v312 = (unint64_t *)(*((_QWORD *)&v380 + 1) + 8);
                do
                  v313 = __ldaxr(v312);
                while (__stlxr(v313 - 1, v312));
                if (!v313)
                {
                  ((void (*)(std::__shared_weak_count *))v311->__on_zero_shared)(v311);
                  std::__shared_weak_count::__release_weak(v311);
                }
              }
              v314 = (std::__shared_weak_count *)v385.i64[1];
              if (v385.i64[1])
              {
                v315 = (unint64_t *)(v385.i64[1] + 8);
                do
                  v316 = __ldaxr(v315);
                while (__stlxr(v316 - 1, v315));
                if (!v316)
                {
                  ((void (*)(std::__shared_weak_count *))v314->__on_zero_shared)(v314);
                  std::__shared_weak_count::__release_weak(v314);
                }
              }
              v317 = (std::__shared_weak_count *)v384.i64[1];
              if (v384.i64[1])
              {
                v318 = (unint64_t *)(v384.i64[1] + 8);
                do
                  v319 = __ldaxr(v318);
                while (__stlxr(v319 - 1, v318));
                if (!v319)
                {
                  ((void (*)(std::__shared_weak_count *))v317->__on_zero_shared)(v317);
                  std::__shared_weak_count::__release_weak(v317);
                }
              }
              v320 = (std::__shared_weak_count *)v386.i64[1];
              if (v386.i64[1])
              {
                v321 = (unint64_t *)(v386.i64[1] + 8);
                do
                  v322 = __ldaxr(v321);
                while (__stlxr(v322 - 1, v321));
                if (!v322)
                {
                  ((void (*)(std::__shared_weak_count *))v320->__on_zero_shared)(v320);
                  std::__shared_weak_count::__release_weak(v320);
                }
              }
              v323 = (std::__shared_weak_count *)*((_QWORD *)&v372[1] + 1);
              if (*((_QWORD *)&v372[1] + 1))
              {
                v324 = (unint64_t *)(*((_QWORD *)&v372[1] + 1) + 8);
                do
                  v325 = __ldaxr(v324);
                while (__stlxr(v325 - 1, v324));
                if (!v325)
                {
                  ((void (*)(std::__shared_weak_count *))v323->__on_zero_shared)(v323);
                  std::__shared_weak_count::__release_weak(v323);
                }
              }
              v326 = (std::__shared_weak_count *)*((_QWORD *)&v372[0] + 1);
              if (*((_QWORD *)&v372[0] + 1))
              {
                v327 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
                do
                  v328 = __ldaxr(v327);
                while (__stlxr(v328 - 1, v327));
                if (!v328)
                {
                  ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
                  std::__shared_weak_count::__release_weak(v326);
                }
              }
              v329 = (_QWORD *)v389.i64[1];
              if (v389.i64[1] >= v390[0])
              {
                v333 = sub_20BFCA068((char **)&v389, &qword_25498DD40);
              }
              else
              {
                v330 = qword_25498DD40;
                *(_QWORD *)v389.i64[1] = qword_25498DD40;
                if ((v330 & 7) != 0)
                {
                  v331 = (unsigned int *)(v330 & 0xFFFFFFFFFFFFFFF8);
                  do
                    v332 = __ldxr(v331);
                  while (__stxr(v332 + 2, v331));
                  if ((v332 & 1) == 0)
                    *v329 &= 0xFFFFFFFFFFFFFFF8;
                }
                v333 = (char *)(v329 + 1);
              }
              v389.i64[1] = (uint64_t)v333;
              v384.i64[0] = 2;
              sub_20C815B90(&v384, (uint64_t)v391, &v385);
              v334 = v385;
              v386 = v385;
              v385 = 0uLL;
              v335 = v387.i64[1];
              if (v387.i64[1] >= v388[0])
              {
                v356 = v334;
                v336 = (v387.i64[1] - v387.i64[0]) >> 4;
                v337 = v336 + 1;
                if ((unint64_t)(v336 + 1) >> 60)
                  sub_20BDDF694();
                v338 = v388[0] - v387.i64[0];
                if ((v388[0] - v387.i64[0]) >> 3 > v337)
                  v337 = v338 >> 3;
                if ((unint64_t)v338 >= 0x7FFFFFFFFFFFFFF0)
                  v339 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v339 = v337;
                v373 = v388;
                v340 = (char *)sub_20BDEA2F0((uint64_t)v388, v339);
                v342 = &v340[16 * v336];
                *(int64x2_t *)v342 = v356;
                v386 = 0uLL;
                v343 = (_QWORD *)v387.i64[1];
                v344 = (_QWORD *)v387.i64[0];
                if (v387.i64[1] == v387.i64[0])
                {
                  v347 = vdupq_n_s64(v387.u64[1]);
                  v345 = &v340[16 * v336];
                }
                else
                {
                  v345 = &v340[16 * v336];
                  do
                  {
                    v346 = *((_OWORD *)v343 - 1);
                    v343 -= 2;
                    *((_OWORD *)v345 - 1) = v346;
                    v345 -= 16;
                    *v343 = 0;
                    v343[1] = 0;
                  }
                  while (v343 != v344);
                  v347 = v387;
                }
                v348 = v342 + 16;
                v387.i64[0] = (uint64_t)v345;
                v387.i64[1] = (uint64_t)(v342 + 16);
                *(int64x2_t *)((char *)v372 + 8) = v347;
                v349 = v388[0];
                v388[0] = &v340[16 * v341];
                *((_QWORD *)&v372[1] + 1) = v349;
                *(_QWORD *)&v372[0] = v347.i64[0];
                sub_20BDEA324((uint64_t)v372);
                v350 = (std::__shared_weak_count *)v385.i64[1];
                v387.i64[1] = (uint64_t)v348;
                if (v385.i64[1])
                {
                  v351 = (unint64_t *)(v385.i64[1] + 8);
                  do
                    v352 = __ldaxr(v351);
                  while (__stlxr(v352 - 1, v351));
                  if (!v352)
                  {
                    ((void (*)(std::__shared_weak_count *))v350->__on_zero_shared)(v350);
                    std::__shared_weak_count::__release_weak(v350);
                  }
                }
              }
              else
              {
                *(int64x2_t *)v387.i64[1] = v334;
                v387.i64[1] = v335 + 16;
              }
              for (k = 1; k != -1; --k)
                pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v391[k]);
            }
            if (v389.i64[0] == v389.i64[1])
            {
              *a3 = 0;
              a3[1] = 0;
            }
            else
            {
              pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New((v389.i64[1] - v389.i64[0]) >> 3, (uint64_t *)v389.i64[0], (uint64_t *)v387.i64[0], v372);
              *(_OWORD *)a3 = v372[0];
            }
            sub_20BF5618C((uint64_t)&v392);
            sub_20BF5618C((uint64_t)&v364);
            *(_QWORD *)&v372[0] = &v387;
            sub_20BDE9EB0((void ***)v372);
            *(_QWORD *)&v372[0] = &v389;
            sub_20BEEB2B8((void ***)v372);
          }
          else
          {
            *a3 = 0;
            a3[1] = 0;
          }
        }
        return;
      }
      sub_20C8144C4(a1, (char **)v372);
      v111 = (char *)operator new(0x18uLL);
      v112 = v111;
      v113 = v372[0];
      *(_QWORD *)v111 = off_24C54DB38;
      *(_OWORD *)(v111 + 8) = v113;
      if (*((_QWORD *)&v113 + 1))
      {
        v114 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
        do
          v115 = __ldxr(v114);
        while (__stxr(v115 + 1, v114));
      }
      *(_QWORD *)v111 = off_24C54DD90;
      v116 = operator new(0x20uLL);
      *v116 = &off_24C54DDE0;
      v116[1] = 0;
      v116[2] = 0;
      v116[3] = v112;
      *a3 = v112;
      a3[1] = v116;
      v16 = (std::__shared_weak_count *)*((_QWORD *)&v372[0] + 1);
      if (*((_QWORD *)&v372[0] + 1))
      {
        v117 = (unint64_t *)(*((_QWORD *)&v372[0] + 1) + 8);
        do
          v18 = __ldaxr(v117);
        while (__stlxr(v18 - 1, v117));
        goto LABEL_175;
      }
    }
  }
}

void sub_20C813F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  uint64_t v23;

  __cxa_guard_abort(&qword_25498DD48);
  a23 = (void **)(v23 - 240);
  sub_20BDE9EB0(&a23);
  a23 = (void **)(v23 - 208);
  sub_20BEEB2B8(&a23);
  _Unwind_Resume(a1);
}

void sub_20C81449C()
{
  uint64_t v0;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v0 - 176));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v0 - 256));
  JUMPOUT(0x20C8144B0);
}

void sub_20C8144BC()
{
  JUMPOUT(0x20C81446CLL);
}

void sub_20C8144C4(uint64_t a1@<X0>, char **a2@<X8>)
{
  const void *v4;
  std::__sp_mut *sp_mut;
  std::__shared_weak_count *v6;
  char *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__sp_mut *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  std::__shared_weak_count *v22;

  v4 = (const void *)(a1 + 24);
  sp_mut = std::__get_sp_mut((const void *)(a1 + 24));
  std::__sp_mut::lock(sp_mut);
  v7 = *(char **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  *a2 = v7;
  a2[1] = (char *)v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  std::__sp_mut::unlock(sp_mut);
  if (!v7)
  {
    v10 = (char *)operator new(0x38uLL);
    *((_QWORD *)v10 + 1) = 0;
    *((_QWORD *)v10 + 2) = 0;
    *(_QWORD *)v10 = off_24C54DC60;
    v11 = v10 + 24;
    v12 = *(_QWORD *)(a1 + 16);
    sub_20BFD6E54((_DWORD *)v10 + 6, (_DWORD *)(a1 + 8));
    sub_20BFD6EA4((_DWORD *)v10 + 7, (_DWORD *)(a1 + 12));
    *((_QWORD *)v10 + 5) = 0;
    *((_QWORD *)v10 + 6) = 0;
    *((_QWORD *)v10 + 4) = v12;
    *a2 = v10 + 24;
    a2[1] = v10;
    if (v6)
    {
      v13 = (unint64_t *)&v6->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v11 = *a2;
      v10 = a2[1];
      v21 = v10;
      if (!v10)
        goto LABEL_16;
    }
    else
    {
      v21 = v10;
    }
    v15 = (unint64_t *)(v10 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
LABEL_16:
    v17 = std::__get_sp_mut(v4);
    std::__sp_mut::lock(v17);
    v18 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v21;
    v22 = v18;
    std::__sp_mut::unlock(v17);
    if (v22)
    {
      v19 = (unint64_t *)&v22->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
  }
}

void sub_20C814660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v9;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C814684@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = (char *)operator new(0x30uLL);
  *(_QWORD *)v4 = &unk_24C54DCB0;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 24) = v5;
  v6 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v4 + 5) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 - 16);
    if (*((_QWORD *)v4 + 4))
      v7 = (unint64_t *)*((_QWORD *)v4 + 4);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return sub_20C815884(a2, (uint64_t)v4);
}

void sub_20C8146FC(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 112));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 96));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 80));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 64));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 48));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 32));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1);
}

void sub_20C814754(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54D790;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C814784(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D790;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

_QWORD *sub_20C8147B8@<X0>(_QWORD *a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  _QWORD *result;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v2 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  if (!v2)
    v2 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  v3 = *((_QWORD *)v2 + 1);
  v28 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v28 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  if (!v6)
    v6 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  v7 = *((_QWORD *)v6 + 2);
  v29 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v29 &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  if (!v10)
    v10 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  v11 = *((_QWORD *)v10 + 3);
  v30 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v30 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  if (!v14)
    v14 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  v15 = *((_QWORD *)v14 + 4);
  v31 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v31 &= 0xFFFFFFFFFFFFFFF8;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  result = operator new(0x20uLL);
  v19 = 0;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 4;
  do
  {
    v20 = *(&v28 + v19);
    *result = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 2, v21));
      if ((v22 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v19;
    ++result;
  }
  while (v19 != 4);
  v23 = &v32;
  a1[1] = result;
  do
  {
    v25 = *--v23;
    v24 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
  }
  while (v23 != &v28);
  return result;
}

void sub_20C814A04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;

  while (1)
  {
    v14 = *((_QWORD *)v12 - 1);
    v12 -= 8;
    v13 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stlxr(v16 - 2, v15));
    }
    if (v12 == &a12)
      _Unwind_Resume(exception_object);
  }
}

_QWORD *sub_20C814A7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v8;
  _QWORD *result;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  void (__cdecl **v16)(std::__shared_weak_count *__hidden);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;

  v6 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  if (!v6)
    v6 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    v10 = operator new(0x18uLL);
    v11 = v10;
    v13 = *(_QWORD *)(a1 + 8);
    v12 = *(_QWORD *)(a1 + 16);
    *v10 = off_24C54D840;
    v10[1] = v13;
    v10[2] = v12;
    if (v12)
    {
      v14 = (unint64_t *)(v12 + 8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    *v10 = off_24C54D7D8;
    result = operator new(0x20uLL);
    v16 = &off_24C54D8C8;
  }
  else
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
    if (!v7)
      v7 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 2) & 0xFFFFFFFFFFFFFFF8))
    {
      v17 = operator new(0x18uLL);
      v11 = v17;
      v19 = *(_QWORD *)(a1 + 8);
      v18 = *(_QWORD *)(a1 + 16);
      *v17 = off_24C54D840;
      v17[1] = v19;
      v17[2] = v18;
      if (v18)
      {
        v20 = (unint64_t *)(v18 + 8);
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
      }
      *v17 = off_24C54D940;
      result = operator new(0x20uLL);
      v16 = &off_24C54D990;
    }
    else
    {
      v8 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
      if (!v8)
        v8 = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
      if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 3) & 0xFFFFFFFFFFFFFFF8))
      {
        v22 = operator new(0x18uLL);
        v11 = v22;
        v24 = *(_QWORD *)(a1 + 8);
        v23 = *(_QWORD *)(a1 + 16);
        *v22 = off_24C54D840;
        v22[1] = v24;
        v22[2] = v23;
        if (v23)
        {
          v25 = (unint64_t *)(v23 + 8);
          do
            v26 = __ldxr(v25);
          while (__stxr(v26 + 1, v25));
        }
        *v22 = off_24C54DA08;
        result = operator new(0x20uLL);
        v16 = &off_24C54DA58;
      }
      else
      {
        result = (_QWORD *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
        if (!result)
          result = sub_20C814D24(&pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens);
        if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (result[4] & 0xFFFFFFFFFFFFFFF8))
        {
          *a3 = 0;
          a3[1] = 0;
          return result;
        }
        v27 = operator new(0x18uLL);
        v11 = v27;
        v29 = *(_QWORD *)(a1 + 8);
        v28 = *(_QWORD *)(a1 + 16);
        *v27 = off_24C54DB38;
        v27[1] = v29;
        v27[2] = v28;
        if (v28)
        {
          v30 = (unint64_t *)(v28 + 8);
          do
            v31 = __ldxr(v30);
          while (__stxr(v31 + 1, v30));
        }
        *v27 = off_24C54DAD0;
        result = operator new(0x20uLL);
        v16 = &off_24C54DB70;
      }
    }
  }
  *result = v16;
  result[1] = 0;
  result[2] = 0;
  result[3] = v11;
  *a3 = v11;
  a3[1] = result;
  return result;
}

void sub_20C814CE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C815504(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *sub_20C814D24(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C814D6C();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType::~HdMeshTopologySchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *sub_20C814D6C()
{
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType *)operator new(0x50uLL);
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchemaTokens_StaticTokenType::HdMeshTopologySchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C814D98(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C814DAC(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54D840;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C814DDC(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D840;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C814E10(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD v3[5];

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 32))(v3);
  a2[1] = &off_24C51F5B0;
  sub_20BF56B40(a2, (uint64_t)v3);
  sub_20BF5618C((uint64_t)v3);
}

void sub_20C814E68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C814E80()
{
  return 0;
}

void sub_20C814E88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  sub_20C814F34(*(_QWORD *)(a1 + 8), &v11);
  v3 = v11;
  v4 = *(_OWORD *)(v11 + 40);
  *(_OWORD *)a2 = *(_OWORD *)(v11 + 24);
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(a2 + 32) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 - 16);
    if (*(_QWORD *)(a2 + 24))
      v6 = *(unint64_t **)(a2 + 24);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_20C814F34(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[62];
  __int128 v17;

  v4 = (uint64_t *)(a1 + 16);
  sub_20C806934((_QWORD *)(a1 + 16), a2);
  if (!*a2)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 40))(v16, *(_QWORD *)(a1 + 8), a1);
    sub_20C815088((const pxrInternal__aapl__pxrReserved__::HdMeshTopology *)v16, &v17);
    sub_20BDE82DC((uint64_t)a2, &v17);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    if (*((_QWORD *)&v17 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    pxrInternal__aapl__pxrReserved__::HdMeshTopology::~HdMeshTopology((pxrInternal__aapl__pxrReserved__::HdMeshTopology *)v16);
    v8 = (std::__shared_weak_count *)a2[1];
    v14 = *a2;
    v15 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
    }
    sub_20C8068DC(v4, &v14);
    v11 = v15;
    if (v15)
    {
      v12 = (unint64_t *)&v15->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
}

void sub_20C815054(_Unwind_Exception *a1, uint64_t a2, ...)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v2;
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v2);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C815088@<X0>(const pxrInternal__aapl__pxrReserved__::HdMeshTopology *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x208uLL);
  result = sub_20C8150E0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_20C8150CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8150E0(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::HdMeshTopology *a2)
{
  a1[2] = 0;
  *a1 = &unk_24C54D878;
  a1[1] = 0;
  pxrInternal__aapl__pxrReserved__::HdMeshTopology::HdMeshTopology((pxrInternal__aapl__pxrReserved__::HdMeshTopology *)(a1 + 3), a2, 0);
  return a1;
}

void sub_20C81511C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_20C815130(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54D878;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C815144(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54D878;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815168(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20C81517C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815190(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8151A8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D918))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8151E8(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54D840;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C815218(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D840;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C81524C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  sub_20C814F34(*(_QWORD *)(a1 + 8), &v11);
  v3 = v11;
  v4 = *(_OWORD *)(v11 + 80);
  *(_OWORD *)a2 = *(_OWORD *)(v11 + 64);
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_QWORD *)(v3 + 96);
  *(_QWORD *)(a2 + 32) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 - 16);
    if (*(_QWORD *)(a2 + 24))
      v6 = *(unint64_t **)(a2 + 24);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_20C8152F0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815304(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81531C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54D9E0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81535C(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54D840;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81538C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54D840;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C8153C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  sub_20C814F34(*(_QWORD *)(a1 + 8), &v11);
  v3 = v11;
  v4 = *(_OWORD *)(v11 + 120);
  *(_OWORD *)a2 = *(_OWORD *)(v11 + 104);
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_QWORD *)(v3 + 136);
  *(_QWORD *)(a2 + 32) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 - 16);
    if (*(_QWORD *)(a2 + 24))
      v6 = *(unint64_t **)(a2 + 24);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_20C815468(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81547C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C815494(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54DAA8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8154D4(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54DB38;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C815504(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54DB38;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

_QWORD *sub_20C815538@<X0>(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  _QWORD *result;
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  result = (*(_QWORD *(**)(unsigned int **__return_ptr))(*(_QWORD *)a1 + 32))(&v9);
  v4 = v9;
  *a2 = v9;
  a2[1] = (unsigned int *)((char *)&off_24C5207B8 + 1);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a2 = v5;
  }
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  return result;
}

uint64_t sub_20C8155C4()
{
  return 0;
}

void sub_20C8155CC(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  sub_20C814F34(*(_QWORD *)(a1 + 8), &v9);
  v3 = *(unsigned int **)(v9 + 16);
  *a2 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a2 = v4;
  }
  v6 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20C815670(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815684(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81569C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54DBC0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8156E0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8156F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81570C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54DC38))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81574C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C54DC60;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C81575C(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C54DC60;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

_DWORD *sub_20C81577C(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 10));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 7);
  return sub_20BFD265C(a1 + 6);
}

void sub_20C8157B4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54DCB0;
  sub_20BF5618C((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C8157EC(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54DCB0;
  sub_20BF5618C((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C815828@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = &off_24C51E808;
  return sub_20BF56B40(a2, a1 + 8);
}

uint64_t sub_20C815840()
{
  return 0;
}

uint64_t sub_20C815848@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(_OWORD *)(result + 24);
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_QWORD *)(result + 40);
  *(_QWORD *)(a2 + 32) = v3;
  if (v3)
  {
    v4 = *(unint64_t **)(a2 + 24);
    v5 = (unint64_t *)(v3 - 16);
    if (!v4)
      v4 = v5;
    do
      v6 = __ldxr(v4);
    while (__stxr(v6 + 1, v4));
  }
  return result;
}

_QWORD *sub_20C815884(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54DD18;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C8158CC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C8158F0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815904(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81591C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54DD68))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81595C(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54DB38;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81598C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54DB38;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C8159C0(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  sub_20C814F34(*(_QWORD *)(a1 + 8), &v9);
  v3 = *(unsigned int **)(v9 + 8);
  *a2 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a2 = v4;
  }
  v6 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20C815A5C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815A70(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C815A88(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54DE30))
    return a1 + 24;
  else
    return 0;
}

void sub_20C815AC8(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;

  v6 = operator new(0x90uLL);
  v10 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  pxrInternal__aapl__pxrReserved__::HdOverlayContainerDataSource::HdOverlayContainerDataSource(v6, a1, &v10);
  sub_20C7F5460(a3, (uint64_t)v6);
  v7 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
  if (*((_QWORD *)&v10 + 1))
  {
    v8 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_20C815B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C815B90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;

  v6 = operator new(0x90uLL);
  pxrInternal__aapl__pxrReserved__::HdOverlayContainerDataSource::HdOverlayContainerDataSource(v6, *a1, a2);
  return sub_20C7F5460(a3, (uint64_t)v6);
}

void sub_20C815BDC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *sub_20C815BF0(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C815C38();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType::~HdGeomSubsetSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *sub_20C815C38()
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)operator new(0x40uLL);
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType::HdGeomSubsetSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C815C64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C815C7C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C815C90(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C815CA8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54DEA8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C815CE8(_DWORD *a1)
{
  _DWORD *v2;

  *(_QWORD *)a1 = off_24C54DED0;
  v2 = a1 + 3;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 6));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C815D34(_DWORD *a1)
{
  _DWORD *v2;
  void *v3;

  *(_QWORD *)a1 = off_24C54DED0;
  v2 = a1 + 3;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 6));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v3);
}

_QWORD *sub_20C815D84@<X0>(_QWORD *a1@<X8>)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int **v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  _QWORD *result;
  uint64_t v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int **v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  if (!v2)
    v2 = sub_20C7E0F30(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  v3 = v2[1];
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  if (!v6)
    v6 = sub_20C7E0F30(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  v7 = v6[2];
  v21 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v21 = v8;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  result = operator new(0x10uLL);
  v11 = 0;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 2;
  do
  {
    v12 = (&v20)[v11];
    *result = v12;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v11;
    ++result;
  }
  while (v11 != 2);
  v15 = (unsigned int **)&v22;
  a1[1] = result;
  do
  {
    v17 = (uint64_t)*--v15;
    v16 = v17;
    if ((v17 & 7) != 0)
    {
      v18 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v19 = __ldxr(v18);
      while (__stlxr(v19 - 2, v18));
    }
  }
  while (v15 != &v20);
  return result;
}

void sub_20C815F08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  unsigned int *v12;
  unsigned int v13;

  if ((a12 & 7) != 0)
  {
    v12 = (unsigned int *)(a12 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  _Unwind_Resume(exception_object);
}

void sub_20C815F74(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int **v6;
  unsigned int **v7;
  char *v8;
  __int128 v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v28;
  _QWORD *v29;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *v30;
  uint64_t *v31;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  unsigned int *v65;
  unsigned int v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  _QWORD *v78;
  char *v79;
  __int128 v80;
  int64x2_t v81;
  _OWORD *v82;
  char *v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t i;
  __int128 v88;
  uint64_t v89;
  unint64_t *v90;
  unint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v98;
  _QWORD *v99;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *v100;
  uint64_t *v101;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  std::__shared_weak_count *v121;
  unint64_t *v122;
  unint64_t v123;
  std::__shared_weak_count *v124;
  unint64_t *v125;
  unint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  std::__shared_weak_count *v130;
  unint64_t *v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  unsigned int *v135;
  unsigned int v136;
  char *v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  _QWORD *v147;
  _QWORD *v148;
  char *v149;
  __int128 v150;
  int64x2_t v151;
  _OWORD *v152;
  char *v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  uint64_t j;
  __int128 v158;
  __int128 v159;
  char v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  int64x2_t v173;
  char *v174;
  char *v175;
  char *v176;
  unint64_t v177;
  _OWORD v178[2];
  char **v179;
  _OWORD v180[2];
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;

  v184 = *MEMORY[0x24BDAC8D0];
  v6 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  if (!v6)
    v6 = sub_20C7E0F30(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v6[1] & 0xFFFFFFFFFFFFFFF8))
  {
    sub_20C817034(a1, (char **)v178);
    v8 = (char *)operator new(0x18uLL);
    v9 = v178[0];
    *(_QWORD *)v8 = off_24C54DF18;
    *(_OWORD *)(v8 + 8) = v9;
    if (*((_QWORD *)&v9 + 1))
    {
      v10 = (unint64_t *)(*((_QWORD *)&v9 + 1) + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
    v12 = operator new(0x20uLL);
    *v12 = &off_24C54E438;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = v8;
    *a3 = v8;
    a3[1] = v12;
    v13 = (std::__shared_weak_count *)*((_QWORD *)&v178[0] + 1);
    if (*((_QWORD *)&v178[0] + 1))
    {
      v14 = (unint64_t *)(*((_QWORD *)&v178[0] + 1) + 8);
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
  }
  else
  {
    v7 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
    if (!v7)
      v7 = sub_20C7E0F30(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v7[2] & 0xFFFFFFFFFFFFFFF8))
    {
      v16 = atomic_load((unsigned __int8 *)&qword_25498DD58);
      if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD58))
      {
        pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_25498DD50, "__invisiblePoints");
        __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_25498DD50, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498DD58);
      }
      v17 = atomic_load((unsigned __int8 *)&qword_25498DD68);
      if ((v17 & 1) == 0 && __cxa_guard_acquire(&qword_25498DD68))
      {
        pxrInternal__aapl__pxrReserved__::TfToken::TfToken((pxrInternal__aapl__pxrReserved__::TfToken *)&qword_25498DD60, "__invisibleCurves");
        __cxa_atexit((void (*)(void *))sub_20C20ACA4, &qword_25498DD60, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498DD68);
      }
      v176 = 0;
      v177 = 0;
      v173 = 0uLL;
      v174 = 0;
      v175 = 0;
      sub_20C817034(a1, (char **)&v181);
      sub_20C817A34(v181, (uint64_t *)v178);
      v18 = *(_OWORD *)(*(_QWORD *)&v178[0] + 168);
      v170 = *(_OWORD *)(*(_QWORD *)&v178[0] + 152);
      v171 = v18;
      v19 = *(_QWORD *)(*(_QWORD *)&v178[0] + 184);
      v172 = v19;
      if (v19)
      {
        v20 = (unint64_t *)(v19 - 16);
        if (*((_QWORD *)&v171 + 1))
          v20 = (unint64_t *)*((_QWORD *)&v171 + 1);
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 1, v20));
      }
      v22 = (std::__shared_weak_count *)*((_QWORD *)&v178[0] + 1);
      if (*((_QWORD *)&v178[0] + 1))
      {
        v23 = (unint64_t *)(*((_QWORD *)&v178[0] + 1) + 8);
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      v25 = (std::__shared_weak_count *)*((_QWORD *)&v181 + 1);
      if (*((_QWORD *)&v181 + 1))
      {
        v26 = (unint64_t *)(*((_QWORD *)&v181 + 1) + 8);
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      if ((_QWORD)v170)
      {
        memset(v178, 0, sizeof(v178));
        v28 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
        if (!v28)
          v28 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
        pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildTypeDataSource((pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)((char *)v28 + 32), v180);
        v29 = pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetType(v178, (uint64_t *)v180);
        sub_20C81132C((uint64_t)&v170, &v168);
        v169 = v168;
        v168 = 0uLL;
        v30 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetIndices((uint64_t)v29, (uint64_t *)&v169);
        pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::Build(v30, &v181);
        v31 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
        if (!v31)
          v31 = (uint64_t *)sub_20C809654(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
        v164 = 0uLL;
        LOBYTE(v161) = 0;
        pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v161, (uint64_t *)&v162);
        v163 = v162;
        v162 = 0uLL;
        v32 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v164, (uint64_t *)&v163);
        pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build((uint64_t *)&v165, v32);
        v166 = v165;
        v165 = 0uLL;
        pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v31, (uint64_t *)&v166, &v167);
        v182 = v167;
        v167 = 0uLL;
        v33 = (std::__shared_weak_count *)*((_QWORD *)&v166 + 1);
        if (*((_QWORD *)&v166 + 1))
        {
          v34 = (unint64_t *)(*((_QWORD *)&v166 + 1) + 8);
          do
            v35 = __ldaxr(v34);
          while (__stlxr(v35 - 1, v34));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
            std::__shared_weak_count::__release_weak(v33);
          }
        }
        v36 = (std::__shared_weak_count *)*((_QWORD *)&v165 + 1);
        if (*((_QWORD *)&v165 + 1))
        {
          v37 = (unint64_t *)(*((_QWORD *)&v165 + 1) + 8);
          do
            v38 = __ldaxr(v37);
          while (__stlxr(v38 - 1, v37));
          if (!v38)
          {
            ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
            std::__shared_weak_count::__release_weak(v36);
          }
        }
        v39 = (std::__shared_weak_count *)*((_QWORD *)&v163 + 1);
        if (*((_QWORD *)&v163 + 1))
        {
          v40 = (unint64_t *)(*((_QWORD *)&v163 + 1) + 8);
          do
            v41 = __ldaxr(v40);
          while (__stlxr(v41 - 1, v40));
          if (!v41)
          {
            ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
            std::__shared_weak_count::__release_weak(v39);
          }
        }
        v42 = (std::__shared_weak_count *)*((_QWORD *)&v162 + 1);
        if (*((_QWORD *)&v162 + 1))
        {
          v43 = (unint64_t *)(*((_QWORD *)&v162 + 1) + 8);
          do
            v44 = __ldaxr(v43);
          while (__stlxr(v44 - 1, v43));
          if (!v44)
          {
            ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
            std::__shared_weak_count::__release_weak(v42);
          }
        }
        v45 = (std::__shared_weak_count *)*((_QWORD *)&v164 + 1);
        if (*((_QWORD *)&v164 + 1))
        {
          v46 = (unint64_t *)(*((_QWORD *)&v164 + 1) + 8);
          do
            v47 = __ldaxr(v46);
          while (__stlxr(v47 - 1, v46));
          if (!v47)
          {
            ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
            std::__shared_weak_count::__release_weak(v45);
          }
        }
        v48 = (std::__shared_weak_count *)*((_QWORD *)&v169 + 1);
        if (*((_QWORD *)&v169 + 1))
        {
          v49 = (unint64_t *)(*((_QWORD *)&v169 + 1) + 8);
          do
            v50 = __ldaxr(v49);
          while (__stlxr(v50 - 1, v49));
          if (!v50)
          {
            ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
            std::__shared_weak_count::__release_weak(v48);
          }
        }
        v51 = (std::__shared_weak_count *)*((_QWORD *)&v168 + 1);
        if (*((_QWORD *)&v168 + 1))
        {
          v52 = (unint64_t *)(*((_QWORD *)&v168 + 1) + 8);
          do
            v53 = __ldaxr(v52);
          while (__stlxr(v53 - 1, v52));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
            std::__shared_weak_count::__release_weak(v51);
          }
        }
        v54 = (std::__shared_weak_count *)*((_QWORD *)&v180[0] + 1);
        if (*((_QWORD *)&v180[0] + 1))
        {
          v55 = (unint64_t *)(*((_QWORD *)&v180[0] + 1) + 8);
          do
            v56 = __ldaxr(v55);
          while (__stlxr(v56 - 1, v55));
          if (!v56)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
        v57 = (std::__shared_weak_count *)*((_QWORD *)&v178[1] + 1);
        if (*((_QWORD *)&v178[1] + 1))
        {
          v58 = (unint64_t *)(*((_QWORD *)&v178[1] + 1) + 8);
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
        v60 = (std::__shared_weak_count *)*((_QWORD *)&v178[0] + 1);
        if (*((_QWORD *)&v178[0] + 1))
        {
          v61 = (unint64_t *)(*((_QWORD *)&v178[0] + 1) + 8);
          do
            v62 = __ldaxr(v61);
          while (__stlxr(v62 - 1, v61));
          if (!v62)
          {
            ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
            std::__shared_weak_count::__release_weak(v60);
          }
        }
        v63 = v176;
        if ((unint64_t)v176 >= v177)
        {
          v67 = sub_20BFCA068(&v175, &qword_25498DD60);
        }
        else
        {
          v64 = qword_25498DD60;
          *(_QWORD *)v176 = qword_25498DD60;
          if ((v64 & 7) != 0)
          {
            v65 = (unsigned int *)(v64 & 0xFFFFFFFFFFFFFFF8);
            do
              v66 = __ldxr(v65);
            while (__stxr(v66 + 2, v65));
            if ((v66 & 1) == 0)
              *(_QWORD *)v63 &= 0xFFFFFFFFFFFFFFF8;
          }
          v67 = v63 + 8;
        }
        v176 = v67;
        *(_QWORD *)&v168 = 2;
        sub_20C815B90(&v168, (uint64_t)&v181, &v169);
        v68 = v169;
        v180[0] = v169;
        v169 = 0uLL;
        v69 = v173.i64[1];
        if (v173.i64[1] >= (unint64_t)v174)
        {
          v158 = v68;
          v70 = (v173.i64[1] - v173.i64[0]) >> 4;
          v71 = v70 + 1;
          if ((unint64_t)(v70 + 1) >> 60)
            sub_20BDDF694();
          v72 = (uint64_t)&v174[-v173.i64[0]];
          if ((uint64_t)&v174[-v173.i64[0]] >> 3 > v71)
            v71 = v72 >> 3;
          if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFF0)
            v73 = 0xFFFFFFFFFFFFFFFLL;
          else
            v73 = v71;
          v179 = &v174;
          v74 = (char *)sub_20BDEA2F0((uint64_t)&v174, v73);
          v76 = &v74[16 * v70];
          *(_OWORD *)v76 = v158;
          v180[0] = 0uLL;
          v77 = (_QWORD *)v173.i64[1];
          v78 = (_QWORD *)v173.i64[0];
          if (v173.i64[1] == v173.i64[0])
          {
            v81 = vdupq_n_s64(v173.u64[1]);
            v79 = &v74[16 * v70];
          }
          else
          {
            v79 = &v74[16 * v70];
            do
            {
              v80 = *((_OWORD *)v77 - 1);
              v77 -= 2;
              *((_OWORD *)v79 - 1) = v80;
              v79 -= 16;
              *v77 = 0;
              v77[1] = 0;
            }
            while (v77 != v78);
            v81 = v173;
          }
          v82 = v76 + 16;
          v173.i64[0] = (uint64_t)v79;
          v173.i64[1] = (uint64_t)(v76 + 16);
          *(int64x2_t *)((char *)v178 + 8) = v81;
          v83 = v174;
          v174 = &v74[16 * v75];
          *((_QWORD *)&v178[1] + 1) = v83;
          *(_QWORD *)&v178[0] = v81.i64[0];
          sub_20BDEA324((uint64_t)v178);
          v84 = (std::__shared_weak_count *)*((_QWORD *)&v169 + 1);
          v173.i64[1] = (uint64_t)v82;
          if (*((_QWORD *)&v169 + 1))
          {
            v85 = (unint64_t *)(*((_QWORD *)&v169 + 1) + 8);
            do
              v86 = __ldaxr(v85);
            while (__stlxr(v86 - 1, v85));
            if (!v86)
            {
              ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
              std::__shared_weak_count::__release_weak(v84);
            }
          }
        }
        else
        {
          *(_OWORD *)v173.i64[1] = v68;
          v173.i64[1] = v69 + 16;
        }
        for (i = 16; i != -16; i -= 16)
          pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)((char *)&v181 + i));
      }
      sub_20C817034(a1, (char **)v180);
      sub_20C817A34(*(uint64_t *)&v180[0], (uint64_t *)v178);
      v88 = *(_OWORD *)(*(_QWORD *)&v178[0] + 128);
      v181 = *(_OWORD *)(*(_QWORD *)&v178[0] + 112);
      v182 = v88;
      v89 = *(_QWORD *)(*(_QWORD *)&v178[0] + 144);
      v183 = v89;
      if (v89)
      {
        v90 = (unint64_t *)(v89 - 16);
        if (*((_QWORD *)&v182 + 1))
          v90 = (unint64_t *)*((_QWORD *)&v182 + 1);
        do
          v91 = __ldxr(v90);
        while (__stxr(v91 + 1, v90));
      }
      v92 = (std::__shared_weak_count *)*((_QWORD *)&v178[0] + 1);
      if (*((_QWORD *)&v178[0] + 1))
      {
        v93 = (unint64_t *)(*((_QWORD *)&v178[0] + 1) + 8);
        do
          v94 = __ldaxr(v93);
        while (__stlxr(v94 - 1, v93));
        if (!v94)
        {
          ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
          std::__shared_weak_count::__release_weak(v92);
        }
      }
      v95 = (std::__shared_weak_count *)*((_QWORD *)&v180[0] + 1);
      if (*((_QWORD *)&v180[0] + 1))
      {
        v96 = (unint64_t *)(*((_QWORD *)&v180[0] + 1) + 8);
        do
          v97 = __ldaxr(v96);
        while (__stlxr(v97 - 1, v96));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
          std::__shared_weak_count::__release_weak(v95);
        }
      }
      if ((_QWORD)v181)
      {
        memset(v178, 0, sizeof(v178));
        v98 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
        if (!v98)
          v98 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
        pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildTypeDataSource((pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)((char *)v98 + 24), &v169);
        v99 = pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetType(v178, (uint64_t *)&v169);
        sub_20C81132C((uint64_t)&v181, &v167);
        v168 = v167;
        v167 = 0uLL;
        v100 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetIndices((uint64_t)v99, (uint64_t *)&v168);
        pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::Build(v100, v180);
        v101 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
        if (!v101)
          v101 = (uint64_t *)sub_20C809654(&pxrInternal__aapl__pxrReserved__::HdVisibilitySchemaTokens);
        v163 = 0uLL;
        v160 = 0;
        pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v160, (uint64_t *)&v161);
        v162 = v161;
        v161 = 0uLL;
        v102 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v163, (uint64_t *)&v162);
        pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build((uint64_t *)&v164, v102);
        v165 = v164;
        v164 = 0uLL;
        pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v101, (uint64_t *)&v165, &v166);
        v180[1] = v166;
        v166 = 0uLL;
        v103 = (std::__shared_weak_count *)*((_QWORD *)&v165 + 1);
        if (*((_QWORD *)&v165 + 1))
        {
          v104 = (unint64_t *)(*((_QWORD *)&v165 + 1) + 8);
          do
            v105 = __ldaxr(v104);
          while (__stlxr(v105 - 1, v104));
          if (!v105)
          {
            ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
            std::__shared_weak_count::__release_weak(v103);
          }
        }
        v106 = (std::__shared_weak_count *)*((_QWORD *)&v164 + 1);
        if (*((_QWORD *)&v164 + 1))
        {
          v107 = (unint64_t *)(*((_QWORD *)&v164 + 1) + 8);
          do
            v108 = __ldaxr(v107);
          while (__stlxr(v108 - 1, v107));
          if (!v108)
          {
            ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
            std::__shared_weak_count::__release_weak(v106);
          }
        }
        v109 = (std::__shared_weak_count *)*((_QWORD *)&v162 + 1);
        if (*((_QWORD *)&v162 + 1))
        {
          v110 = (unint64_t *)(*((_QWORD *)&v162 + 1) + 8);
          do
            v111 = __ldaxr(v110);
          while (__stlxr(v111 - 1, v110));
          if (!v111)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
        v112 = (std::__shared_weak_count *)*((_QWORD *)&v161 + 1);
        if (*((_QWORD *)&v161 + 1))
        {
          v113 = (unint64_t *)(*((_QWORD *)&v161 + 1) + 8);
          do
            v114 = __ldaxr(v113);
          while (__stlxr(v114 - 1, v113));
          if (!v114)
          {
            ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
            std::__shared_weak_count::__release_weak(v112);
          }
        }
        v115 = (std::__shared_weak_count *)*((_QWORD *)&v163 + 1);
        if (*((_QWORD *)&v163 + 1))
        {
          v116 = (unint64_t *)(*((_QWORD *)&v163 + 1) + 8);
          do
            v117 = __ldaxr(v116);
          while (__stlxr(v117 - 1, v116));
          if (!v117)
          {
            ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
            std::__shared_weak_count::__release_weak(v115);
          }
        }
        v118 = (std::__shared_weak_count *)*((_QWORD *)&v168 + 1);
        if (*((_QWORD *)&v168 + 1))
        {
          v119 = (unint64_t *)(*((_QWORD *)&v168 + 1) + 8);
          do
            v120 = __ldaxr(v119);
          while (__stlxr(v120 - 1, v119));
          if (!v120)
          {
            ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
            std::__shared_weak_count::__release_weak(v118);
          }
        }
        v121 = (std::__shared_weak_count *)*((_QWORD *)&v167 + 1);
        if (*((_QWORD *)&v167 + 1))
        {
          v122 = (unint64_t *)(*((_QWORD *)&v167 + 1) + 8);
          do
            v123 = __ldaxr(v122);
          while (__stlxr(v123 - 1, v122));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v121->__on_zero_shared)(v121);
            std::__shared_weak_count::__release_weak(v121);
          }
        }
        v124 = (std::__shared_weak_count *)*((_QWORD *)&v169 + 1);
        if (*((_QWORD *)&v169 + 1))
        {
          v125 = (unint64_t *)(*((_QWORD *)&v169 + 1) + 8);
          do
            v126 = __ldaxr(v125);
          while (__stlxr(v126 - 1, v125));
          if (!v126)
          {
            ((void (*)(std::__shared_weak_count *))v124->__on_zero_shared)(v124);
            std::__shared_weak_count::__release_weak(v124);
          }
        }
        v127 = (std::__shared_weak_count *)*((_QWORD *)&v178[1] + 1);
        if (*((_QWORD *)&v178[1] + 1))
        {
          v128 = (unint64_t *)(*((_QWORD *)&v178[1] + 1) + 8);
          do
            v129 = __ldaxr(v128);
          while (__stlxr(v129 - 1, v128));
          if (!v129)
          {
            ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
            std::__shared_weak_count::__release_weak(v127);
          }
        }
        v130 = (std::__shared_weak_count *)*((_QWORD *)&v178[0] + 1);
        if (*((_QWORD *)&v178[0] + 1))
        {
          v131 = (unint64_t *)(*((_QWORD *)&v178[0] + 1) + 8);
          do
            v132 = __ldaxr(v131);
          while (__stlxr(v132 - 1, v131));
          if (!v132)
          {
            ((void (*)(std::__shared_weak_count *))v130->__on_zero_shared)(v130);
            std::__shared_weak_count::__release_weak(v130);
          }
        }
        v133 = v176;
        if ((unint64_t)v176 >= v177)
        {
          v137 = sub_20BFCA068(&v175, &qword_25498DD50);
        }
        else
        {
          v134 = qword_25498DD50;
          *(_QWORD *)v176 = qword_25498DD50;
          if ((v134 & 7) != 0)
          {
            v135 = (unsigned int *)(v134 & 0xFFFFFFFFFFFFFFF8);
            do
              v136 = __ldxr(v135);
            while (__stxr(v136 + 2, v135));
            if ((v136 & 1) == 0)
              *(_QWORD *)v133 &= 0xFFFFFFFFFFFFFFF8;
          }
          v137 = v133 + 8;
        }
        v176 = v137;
        *(_QWORD *)&v167 = 2;
        sub_20C815B90(&v167, (uint64_t)v180, &v168);
        v138 = v168;
        v169 = v168;
        v168 = 0uLL;
        v139 = v173.i64[1];
        if (v173.i64[1] >= (unint64_t)v174)
        {
          v159 = v138;
          v140 = (v173.i64[1] - v173.i64[0]) >> 4;
          v141 = v140 + 1;
          if ((unint64_t)(v140 + 1) >> 60)
            sub_20BDDF694();
          v142 = (uint64_t)&v174[-v173.i64[0]];
          if ((uint64_t)&v174[-v173.i64[0]] >> 3 > v141)
            v141 = v142 >> 3;
          if ((unint64_t)v142 >= 0x7FFFFFFFFFFFFFF0)
            v143 = 0xFFFFFFFFFFFFFFFLL;
          else
            v143 = v141;
          v179 = &v174;
          v144 = (char *)sub_20BDEA2F0((uint64_t)&v174, v143);
          v146 = &v144[16 * v140];
          *(_OWORD *)v146 = v159;
          v169 = 0uLL;
          v147 = (_QWORD *)v173.i64[1];
          v148 = (_QWORD *)v173.i64[0];
          if (v173.i64[1] == v173.i64[0])
          {
            v151 = vdupq_n_s64(v173.u64[1]);
            v149 = &v144[16 * v140];
          }
          else
          {
            v149 = &v144[16 * v140];
            do
            {
              v150 = *((_OWORD *)v147 - 1);
              v147 -= 2;
              *((_OWORD *)v149 - 1) = v150;
              v149 -= 16;
              *v147 = 0;
              v147[1] = 0;
            }
            while (v147 != v148);
            v151 = v173;
          }
          v152 = v146 + 16;
          v173.i64[0] = (uint64_t)v149;
          v173.i64[1] = (uint64_t)(v146 + 16);
          *(int64x2_t *)((char *)v178 + 8) = v151;
          v153 = v174;
          v174 = &v144[16 * v145];
          *((_QWORD *)&v178[1] + 1) = v153;
          *(_QWORD *)&v178[0] = v151.i64[0];
          sub_20BDEA324((uint64_t)v178);
          v154 = (std::__shared_weak_count *)*((_QWORD *)&v168 + 1);
          v173.i64[1] = (uint64_t)v152;
          if (*((_QWORD *)&v168 + 1))
          {
            v155 = (unint64_t *)(*((_QWORD *)&v168 + 1) + 8);
            do
              v156 = __ldaxr(v155);
            while (__stlxr(v156 - 1, v155));
            if (!v156)
            {
              ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
              std::__shared_weak_count::__release_weak(v154);
            }
          }
        }
        else
        {
          *(_OWORD *)v173.i64[1] = v138;
          v173.i64[1] = v139 + 16;
        }
        for (j = 1; j != -1; --j)
          pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v180[j]);
      }
      if (v175 == v176)
      {
        *a3 = 0;
        a3[1] = 0;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New((v176 - v175) >> 3, (uint64_t *)v175, (uint64_t *)v173.i64[0], v178);
        *(_OWORD *)a3 = v178[0];
      }
      sub_20BF5618C((uint64_t)&v181);
      sub_20BF5618C((uint64_t)&v170);
      *(_QWORD *)&v178[0] = &v173;
      sub_20BDE9EB0((void ***)v178);
      *(_QWORD *)&v178[0] = &v175;
      sub_20BEEB2B8((void ***)v178);
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
    }
  }
}

void sub_20C816D5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498DD68);
  _Unwind_Resume(a1);
}

void sub_20C817034(uint64_t a1@<X0>, char **a2@<X8>)
{
  const void *v4;
  std::__sp_mut *sp_mut;
  std::__shared_weak_count *v6;
  char *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__sp_mut *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  std::__shared_weak_count *v22;

  v4 = (const void *)(a1 + 24);
  sp_mut = std::__get_sp_mut((const void *)(a1 + 24));
  std::__sp_mut::lock(sp_mut);
  v7 = *(char **)(a1 + 24);
  v6 = *(std::__shared_weak_count **)(a1 + 32);
  *a2 = v7;
  a2[1] = (char *)v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  std::__sp_mut::unlock(sp_mut);
  if (!v7)
  {
    v10 = (char *)operator new(0x38uLL);
    *((_QWORD *)v10 + 1) = 0;
    *((_QWORD *)v10 + 2) = 0;
    *(_QWORD *)v10 = off_24C54E4B0;
    v11 = v10 + 24;
    v12 = *(_QWORD *)(a1 + 16);
    sub_20BFD6E54((_DWORD *)v10 + 6, (_DWORD *)(a1 + 8));
    sub_20BFD6EA4((_DWORD *)v10 + 7, (_DWORD *)(a1 + 12));
    *((_QWORD *)v10 + 5) = 0;
    *((_QWORD *)v10 + 6) = 0;
    *((_QWORD *)v10 + 4) = v12;
    *a2 = v10 + 24;
    a2[1] = v10;
    if (v6)
    {
      v13 = (unint64_t *)&v6->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
      v11 = *a2;
      v10 = a2[1];
      v21 = v10;
      if (!v10)
        goto LABEL_16;
    }
    else
    {
      v21 = v10;
    }
    v15 = (unint64_t *)(v10 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
LABEL_16:
    v17 = std::__get_sp_mut(v4);
    std::__sp_mut::lock(v17);
    v18 = *(std::__shared_weak_count **)(a1 + 32);
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v21;
    v22 = v18;
    std::__sp_mut::unlock(v17);
    if (v22)
    {
      v19 = (unint64_t *)&v22->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
      }
    }
  }
}

void sub_20C8171D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v9;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v9);
  _Unwind_Resume(a1);
}

void sub_20C8171F4(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54DF18;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C817224(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54DF18;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

_QWORD *sub_20C817258@<X0>(_QWORD *a1@<X8>)
{
  unsigned int **v2;
  unint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int **v6;
  unint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int **v10;
  unint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  unint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int **v18;
  unint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  _QWORD *result;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if (!v2)
    v2 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  v3 = (unint64_t)v2[1];
  v32 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v32 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if (!v6)
    v6 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  v7 = (unint64_t)v6[2];
  v33 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v33 &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if (!v10)
    v10 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  v11 = (unint64_t)v10[3];
  v34 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v34 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if (!v14)
    v14 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  v15 = (unint64_t)v14[4];
  v35 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v35 &= 0xFFFFFFFFFFFFFFF8;
  }
  v18 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if (!v18)
    v18 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  v19 = (unint64_t)v18[5];
  v36 = v19;
  if ((v19 & 7) != 0)
  {
    v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 2, v20));
    if ((v21 & 1) == 0)
      v36 &= 0xFFFFFFFFFFFFFFF8;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  result = operator new(0x28uLL);
  v23 = 0;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 5;
  do
  {
    v24 = *(&v32 + v23);
    *result = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 2, v25));
      if ((v26 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v23;
    ++result;
  }
  while (v23 != 5);
  v27 = (unint64_t *)&v37;
  a1[1] = result;
  do
  {
    v29 = *--v27;
    v28 = v29;
    if ((v29 & 7) != 0)
    {
      v30 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
      do
        v31 = __ldxr(v30);
      while (__stlxr(v31 - 2, v30));
    }
  }
  while (v27 != &v32);
  return result;
}

void sub_20C8174F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;

  while (1)
  {
    v13 = *((_QWORD *)v11 - 1);
    v11 -= 8;
    v12 = v13;
    if ((v13 & 7) != 0)
    {
      v14 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    if (v11 == &a11)
      _Unwind_Resume(exception_object);
  }
}

_QWORD *sub_20C817570@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int **v6;
  unsigned int **v7;
  unsigned int **v8;
  unsigned int **v9;
  _QWORD *result;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  void (__cdecl **v17)(std::__shared_weak_count *__hidden);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;

  v6 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if (!v6)
    v6 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v6[1] & 0xFFFFFFFFFFFFFFF8))
  {
    v11 = operator new(0x18uLL);
    v12 = v11;
    v14 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    *v11 = off_24C54DFC8;
    v11[1] = v14;
    v11[2] = v13;
    if (v13)
    {
      v15 = (unint64_t *)(v13 + 8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
    *v11 = off_24C54DF60;
    result = operator new(0x20uLL);
    v17 = &off_24C54E050;
  }
  else
  {
    v7 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
    if (!v7)
      v7 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v7[2] & 0xFFFFFFFFFFFFFFF8))
    {
      v18 = operator new(0x18uLL);
      v12 = v18;
      v20 = *(_QWORD *)(a1 + 8);
      v19 = *(_QWORD *)(a1 + 16);
      *v18 = off_24C54DFC8;
      v18[1] = v20;
      v18[2] = v19;
      if (v19)
      {
        v21 = (unint64_t *)(v19 + 8);
        do
          v22 = __ldxr(v21);
        while (__stxr(v22 + 1, v21));
      }
      *v18 = off_24C54E0C8;
      result = operator new(0x20uLL);
      v17 = &off_24C54E118;
    }
    else
    {
      v8 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
      if (!v8)
        v8 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
      if ((*a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v8[3] & 0xFFFFFFFFFFFFFFF8))
      {
        v23 = operator new(0x18uLL);
        v12 = v23;
        v25 = *(_QWORD *)(a1 + 8);
        v24 = *(_QWORD *)(a1 + 16);
        *v23 = off_24C54E1F8;
        v23[1] = v25;
        v23[2] = v24;
        if (v24)
        {
          v26 = (unint64_t *)(v24 + 8);
          do
            v27 = __ldxr(v26);
          while (__stxr(v27 + 1, v26));
        }
        *v23 = off_24C54E190;
        result = operator new(0x20uLL);
        v17 = &off_24C54E230;
      }
      else
      {
        v9 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
        if (!v9)
          v9 = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
        if ((*a2 & 0xFFFFFFFFFFFFFFF8) == ((unint64_t)v9[4] & 0xFFFFFFFFFFFFFFF8))
        {
          v28 = operator new(0x18uLL);
          v12 = v28;
          v30 = *(_QWORD *)(a1 + 8);
          v29 = *(_QWORD *)(a1 + 16);
          *v28 = off_24C54E1F8;
          v28[1] = v30;
          v28[2] = v29;
          if (v29)
          {
            v31 = (unint64_t *)(v29 + 8);
            do
              v32 = __ldxr(v31);
            while (__stxr(v32 + 1, v31));
          }
          *v28 = off_24C54E2A8;
          result = operator new(0x20uLL);
          v17 = &off_24C54E2F8;
        }
        else
        {
          result = (_QWORD *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
          if (!result)
            result = sub_20C7E30C0(&pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchemaTokens);
          if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (result[5] & 0xFFFFFFFFFFFFFFF8))
          {
            *a3 = 0;
            a3[1] = 0;
            return result;
          }
          v33 = operator new(0x18uLL);
          v12 = v33;
          v35 = *(_QWORD *)(a1 + 8);
          v34 = *(_QWORD *)(a1 + 16);
          *v33 = off_24C54E1F8;
          v33[1] = v35;
          v33[2] = v34;
          if (v34)
          {
            v36 = (unint64_t *)(v34 + 8);
            do
              v37 = __ldxr(v36);
            while (__stxr(v37 + 1, v36));
          }
          *v33 = off_24C54E370;
          result = operator new(0x20uLL);
          v17 = &off_24C54E3C0;
        }
      }
    }
  }
  *result = v17;
  result[1] = 0;
  result[2] = 0;
  result[3] = v12;
  *a3 = v12;
  a3[1] = result;
  return result;
}

void sub_20C81785C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C818200(v1);
  _Unwind_Resume(a1);
}

void sub_20C8178B0(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54DFC8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C8178E0(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54DFC8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C817914(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD v3[5];

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 32))(v3);
  a2[1] = &off_24C51F5B0;
  sub_20BF56B40(a2, (uint64_t)v3);
  sub_20BF5618C((uint64_t)v3);
}

void sub_20C81796C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF5618C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C817984()
{
  return 0;
}

void sub_20C81798C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  sub_20C817A34(*(_QWORD *)(a1 + 8), &v11);
  v3 = v11;
  v4 = *(_OWORD *)(v11 + 48);
  *(_OWORD *)a2 = *(_OWORD *)(v11 + 32);
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(a2 + 32) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 - 16);
    if (*(_QWORD *)(a2 + 24))
      v6 = *(unint64_t **)(a2 + 24);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_20C817A34(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[25];
  __int128 v17;

  v4 = (uint64_t *)(a1 + 16);
  sub_20C806934((_QWORD *)(a1 + 16), a2);
  if (!*a2)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 48))(v16, *(_QWORD *)(a1 + 8), a1);
    sub_20C817B88((const pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology *)v16, &v17);
    sub_20BDE82DC((uint64_t)a2, &v17);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
    if (*((_QWORD *)&v17 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology::~HdBasisCurvesTopology((pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology *)v16);
    v8 = (std::__shared_weak_count *)a2[1];
    v14 = *a2;
    v15 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
    }
    sub_20C8068DC(v4, &v14);
    v11 = v15;
    if (v15)
    {
      v12 = (unint64_t *)&v15->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
}

void sub_20C817B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v11);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C817B88@<X0>(const pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0xE0uLL);
  result = sub_20C817BE0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_20C817BCC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C817BE0(_QWORD *a1, const pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology *a2)
{
  a1[2] = 0;
  *a1 = &unk_24C54E000;
  a1[1] = 0;
  pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology::HdBasisCurvesTopology((pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopology *)(a1 + 3), a2);
  return a1;
}

void sub_20C817C18(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_20C817C2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54E000;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C817C40(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54E000;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C817C64(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20C817C78(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C817C8C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C817CA4(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E0A0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C817CE4(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54DFC8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C817D14(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54DFC8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C817D48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;

  sub_20C817A34(*(_QWORD *)(a1 + 8), &v11);
  v3 = v11;
  v4 = *(_OWORD *)(v11 + 88);
  *(_OWORD *)a2 = *(_OWORD *)(v11 + 72);
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_QWORD *)(v3 + 104);
  *(_QWORD *)(a2 + 32) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 - 16);
    if (*(_QWORD *)(a2 + 24))
      v6 = *(unint64_t **)(a2 + 24);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_20C817DF0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C817E04(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C817E1C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E168))
    return a1 + 24;
  else
    return 0;
}

void sub_20C817E5C(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54E1F8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C817E8C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54E1F8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

_QWORD *sub_20C817EC0@<X0>(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  _QWORD *result;
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  result = (*(_QWORD *(**)(unsigned int **__return_ptr))(*(_QWORD *)a1 + 32))(&v9);
  v4 = v9;
  *a2 = v9;
  a2[1] = (unsigned int *)((char *)&off_24C5207B8 + 1);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a2 = v5;
  }
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  return result;
}

uint64_t sub_20C817F4C()
{
  return 0;
}

void sub_20C817F54(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  sub_20C817A34(*(_QWORD *)(a1 + 8), &v9);
  v3 = *(unsigned int **)(v9 + 16);
  *a2 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a2 = v4;
  }
  v6 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20C817FF8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81800C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C818024(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E280))
    return a1 + 24;
  else
    return 0;
}

void sub_20C818064(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54E1F8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C818094(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54E1F8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C8180C8(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  sub_20C817A34(*(_QWORD *)(a1 + 8), &v9);
  v3 = *(unsigned int **)(v9 + 8);
  *a2 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a2 = v4;
  }
  v6 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20C818164(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C818178(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C818190(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E348))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8181D0(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C54E1F8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C818200(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54E1F8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

void sub_20C818234(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  sub_20C817A34(*(_QWORD *)(a1 + 8), &v9);
  v3 = *(unsigned int **)(v9 + 24);
  *a2 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a2 = v4;
  }
  v6 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_20C8182D0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8182E4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8182FC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E410))
    return a1 + 24;
  else
    return 0;
}

void sub_20C818340(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C818354(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81836C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E488))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8183AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C54E4B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C8183BC(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C54E4B0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

_DWORD *sub_20C8183DC(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 10));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 7);
  return sub_20BFD265C(a1 + 6);
}

void sub_20C818418(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81842C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C818444(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E550))
    return a1 + 24;
  else
    return 0;
}

void sub_20C818488(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C81849C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  a2[1] = (char *)&off_24C54E5D0 + 3;
  return result;
}

uint64_t sub_20C8184B4()
{
  return 0;
}

uint64_t sub_20C8184BC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

_QWORD *sub_20C8184C4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_20C8184D4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_20C8184E0()
{
  return 1;
}

unint64_t sub_20C8184E8(_QWORD *a1)
{
  return bswap64(0x9E3779B97F4A7C55 * *a1);
}

BOOL sub_20C818508(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_20C81851C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20C818534()
{
  return 0;
}

uint64_t sub_20C818540()
{
  return std::ostream::operator<<();
}

void *sub_20C818550()
{
  return &unk_24C54E688;
}

uint64_t sub_20C81855C()
{
  return 0;
}

uint64_t sub_20C818564()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C818570()
{
  return 0;
}

uint64_t sub_20C818578()
{
  return 0;
}

BOOL sub_20C818580(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB125E1 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C8185B8(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C54E688, a2, a3);
}

void *sub_20C8185D8()
{
  return &unk_24C54E688;
}

_QWORD *sub_20C8185E8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  a2[1] = (char *)&off_24C54E5D0 + 3;
  return result;
}

_QWORD *sub_20C818600(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54E6B8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C818648(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C81866C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C818680(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C818698(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E708))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8186D8(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54E730;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C818714(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54E730;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C818754@<X0>(_QWORD *a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v38;
  uint64_t v39;
  unsigned int *v40;
  unsigned int v41;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v50;
  uint64_t v51;
  unsigned int *v52;
  unsigned int v53;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v62;
  uint64_t v63;
  unsigned int *v64;
  unsigned int v65;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v66;
  uint64_t v67;
  unsigned int *v68;
  unsigned int v69;
  _QWORD *result;
  uint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v97 = *MEMORY[0x24BDAC8D0];
  v2 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v2)
    v2 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v3 = *((_QWORD *)v2 + 1);
  v80 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v80 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v6)
    v6 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v7 = *((_QWORD *)v6 + 2);
  v81 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v81 &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v10)
    v10 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v11 = *((_QWORD *)v10 + 3);
  v82 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v82 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v14)
    v14 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v15 = *((_QWORD *)v14 + 4);
  v83 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v83 &= 0xFFFFFFFFFFFFFFF8;
  }
  v18 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v18)
    v18 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v19 = *((_QWORD *)v18 + 5);
  v84 = v19;
  if ((v19 & 7) != 0)
  {
    v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 2, v20));
    if ((v21 & 1) == 0)
      v84 &= 0xFFFFFFFFFFFFFFF8;
  }
  v22 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v22)
    v22 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v23 = *((_QWORD *)v22 + 6);
  v85 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v85 &= 0xFFFFFFFFFFFFFFF8;
  }
  v26 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v26)
    v26 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v27 = *((_QWORD *)v26 + 7);
  v86 = v27;
  if ((v27 & 7) != 0)
  {
    v28 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 2, v28));
    if ((v29 & 1) == 0)
      v86 &= 0xFFFFFFFFFFFFFFF8;
  }
  v30 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v30)
    v30 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v31 = *((_QWORD *)v30 + 8);
  v87 = v31;
  if ((v31 & 7) != 0)
  {
    v32 = (unsigned int *)(v31 & 0xFFFFFFFFFFFFFFF8);
    do
      v33 = __ldxr(v32);
    while (__stxr(v33 + 2, v32));
    if ((v33 & 1) == 0)
      v87 &= 0xFFFFFFFFFFFFFFF8;
  }
  v34 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v34)
    v34 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v35 = *((_QWORD *)v34 + 9);
  v88 = v35;
  if ((v35 & 7) != 0)
  {
    v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 2, v36));
    if ((v37 & 1) == 0)
      v88 &= 0xFFFFFFFFFFFFFFF8;
  }
  v38 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v38)
    v38 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v39 = *((_QWORD *)v38 + 10);
  v89 = v39;
  if ((v39 & 7) != 0)
  {
    v40 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
    do
      v41 = __ldxr(v40);
    while (__stxr(v41 + 2, v40));
    if ((v41 & 1) == 0)
      v89 &= 0xFFFFFFFFFFFFFFF8;
  }
  v42 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v42)
    v42 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v43 = *((_QWORD *)v42 + 11);
  v90 = v43;
  if ((v43 & 7) != 0)
  {
    v44 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
    do
      v45 = __ldxr(v44);
    while (__stxr(v45 + 2, v44));
    if ((v45 & 1) == 0)
      v90 &= 0xFFFFFFFFFFFFFFF8;
  }
  v46 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v46)
    v46 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v47 = *((_QWORD *)v46 + 12);
  v91 = v47;
  if ((v47 & 7) != 0)
  {
    v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 2, v48));
    if ((v49 & 1) == 0)
      v91 &= 0xFFFFFFFFFFFFFFF8;
  }
  v50 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v50)
    v50 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v51 = *((_QWORD *)v50 + 13);
  v92 = v51;
  if ((v51 & 7) != 0)
  {
    v52 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
    do
      v53 = __ldxr(v52);
    while (__stxr(v53 + 2, v52));
    if ((v53 & 1) == 0)
      v92 &= 0xFFFFFFFFFFFFFFF8;
  }
  v54 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v54)
    v54 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v55 = *((_QWORD *)v54 + 14);
  v93 = v55;
  if ((v55 & 7) != 0)
  {
    v56 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
    do
      v57 = __ldxr(v56);
    while (__stxr(v57 + 2, v56));
    if ((v57 & 1) == 0)
      v93 &= 0xFFFFFFFFFFFFFFF8;
  }
  v58 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v58)
    v58 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v59 = *((_QWORD *)v58 + 15);
  v94 = v59;
  if ((v59 & 7) != 0)
  {
    v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stxr(v61 + 2, v60));
    if ((v61 & 1) == 0)
      v94 &= 0xFFFFFFFFFFFFFFF8;
  }
  v62 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v62)
    v62 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v63 = *((_QWORD *)v62 + 16);
  v95 = v63;
  if ((v63 & 7) != 0)
  {
    v64 = (unsigned int *)(v63 & 0xFFFFFFFFFFFFFFF8);
    do
      v65 = __ldxr(v64);
    while (__stxr(v65 + 2, v64));
    if ((v65 & 1) == 0)
      v95 &= 0xFFFFFFFFFFFFFFF8;
  }
  v66 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v66)
    v66 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  v67 = *((_QWORD *)v66 + 17);
  v96 = v67;
  if ((v67 & 7) != 0)
  {
    v68 = (unsigned int *)(v67 & 0xFFFFFFFFFFFFFFF8);
    do
      v69 = __ldxr(v68);
    while (__stxr(v69 + 2, v68));
    if ((v69 & 1) == 0)
      v96 &= 0xFFFFFFFFFFFFFFF8;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  result = operator new(0x88uLL);
  v71 = 0;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 17;
  do
  {
    v72 = *(&v80 + v71);
    *result = v72;
    if ((v72 & 7) != 0)
    {
      v73 = (unsigned int *)(v72 & 0xFFFFFFFFFFFFFFF8);
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 2, v73));
      if ((v74 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v71;
    ++result;
  }
  while (v71 != 17);
  v75 = &v97;
  a1[1] = result;
  do
  {
    v77 = *--v75;
    v76 = v77;
    if ((v77 & 7) != 0)
    {
      v78 = (unsigned int *)(v76 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
  }
  while (v75 != &v80);
  return result;
}

void sub_20C818DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;

  while (1)
  {
    v13 = *((_QWORD *)v11 - 1);
    v11 -= 8;
    v12 = v13;
    if ((v13 & 7) != 0)
    {
      v14 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    if (v11 == &a11)
      _Unwind_Resume(exception_object);
  }
}

void sub_20C818E5C(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v11;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v12;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v15;
  _QWORD *v16;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v17;
  _QWORD *v18;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v19;
  _QWORD *v20;
  _DWORD *v21;
  uint64_t *v22;
  __int128 *v23;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v24;
  uint64_t *v25;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v26;
  unint64_t *v27;
  unint64_t v28;
  int *v29;
  int v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int v38;
  _QWORD *v39;
  void (__cdecl **v40)(std::__shared_weak_count *__hidden);
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  _OWORD *v51;
  __int128 v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  _OWORD v58[2];
  _OWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;

  v65 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v6)
    v6 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, uint64_t *))(**(_QWORD **)(a1 + 16) + 296))(&v62, *(_QWORD *)(a1 + 16), a1 + 8, a2);
    if (sub_20C7E7A0C((pxrInternal__aapl__pxrReserved__::VtValue *)&v62)
      && ((BYTE8(v62) & 4) != 0
        ? (v23 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v62 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v62))
        : (v23 = &v62),
          *(_DWORD *)v23))
    {
      v24 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      if (!v24)
        v24 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      v25 = (uint64_t *)((char *)v24 + 152);
    }
    else
    {
      v26 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      if (!v26)
        v26 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      v25 = (uint64_t *)((char *)v26 + 144);
    }
    sub_20C7EA9FC(v25, v58);
    *(_OWORD *)a3 = v58[0];
    goto LABEL_83;
  }
  v7 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v7)
    v7 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 7) & 0xFFFFFFFFFFFFFFF8))
  {
    (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, uint64_t *))(**(_QWORD **)(a1 + 16) + 296))(&v62, *(_QWORD *)(a1 + 16), a1 + 8, a2);
    if (sub_20C7E7AD0((pxrInternal__aapl__pxrReserved__::VtValue *)&v62))
    {
      if ((BYTE8(v62) & 4) != 0)
        v27 = (unint64_t *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v62 + 1) & 0xFFFFFFFFFFFFFFF8)
                                                                        + 168))(&v62);
      else
        v27 = (unint64_t *)&v62;
      v28 = *v27;
    }
    else
    {
      v28 = 0xFF7FFFFF7F7FFFFFLL;
    }
    v31 = operator new(0x10uLL);
    *v31 = &unk_24C54E778;
    v31[1] = v28;
    v32 = operator new(0x20uLL);
    v33 = (char *)&unk_24C54E7B8;
    goto LABEL_82;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v8)
    v8 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 23) & 0xFFFFFFFFFFFFFFF8))
  {
    (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, uint64_t *))(**(_QWORD **)(a1 + 16) + 296))(&v62, *(_QWORD *)(a1 + 16), a1 + 8, a2);
    if (sub_20C7E7B5C((pxrInternal__aapl__pxrReserved__::VtValue *)&v62))
    {
      if ((BYTE8(v62) & 4) != 0)
        v29 = (int *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v62 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v62);
      else
        v29 = (int *)&v62;
      v30 = *v29;
    }
    else
    {
      v30 = 4;
    }
    v31 = operator new(0x10uLL);
    *v31 = &unk_24C54E840;
    *((_DWORD *)v31 + 2) = v30;
    v32 = operator new(0x20uLL);
    v33 = (char *)&unk_24C54E950;
LABEL_82:
    *v32 = v33 + 16;
    v32[1] = 0;
    v32[2] = 0;
    v32[3] = v31;
    *(_QWORD *)a3 = v31;
    *(_QWORD *)(a3 + 8) = v32;
LABEL_83:
    v53 = (uint64_t *)&v62;
LABEL_84:
    sub_20BF4C2D8((uint64_t)v53);
    return;
  }
  v9 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v9)
    v9 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 8) & 0xFFFFFFFFFFFFFFF8))
  {
    v41 = *(_QWORD *)(a1 + 16);
    v42 = a1 + 8;
    v43 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
    if (!v43)
      v43 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v41 + 296))(&v60, v41, v42, (uint64_t)v43 + 56);
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    if (sub_20C7E7C20((pxrInternal__aapl__pxrReserved__::VtValue *)&v60))
    {
      v44 = (uint64_t *)((v61 & 4) != 0
                      ? (*(uint64_t (**)(uint64_t *))((v61 & 0xFFFFFFFFFFFFFFF8) + 168))(&v60)
                      : v60);
      v45 = (v44[1] - *v44) >> 5;
      memset(v58, 0, sizeof(v58));
      v59 = v58;
      sub_20BF5EA40((unint64_t *)&v62, v45, &v59);
      v48 = *v44;
      if (v44[1] != *v44)
      {
        v49 = 0;
        v50 = 0;
        do
        {
          sub_20BF5ECA0((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v62, v46, v47);
          v51 = (_OWORD *)(v64 + v49);
          v52 = *(_OWORD *)(v48 + v49 + 16);
          *v51 = *(_OWORD *)(v48 + v49);
          v51[1] = v52;
          ++v50;
          v48 = *v44;
          v49 += 32;
        }
        while (v50 < (v44[1] - *v44) >> 5);
      }
    }
    sub_20C819784((uint64_t)&v62, v58);
    *(_OWORD *)a3 = v58[0];
    sub_20BF5618C((uint64_t)&v62);
    v53 = &v60;
    goto LABEL_84;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v10)
    v10 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 11) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_62;
  v11 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v11)
    v11 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 12) & 0xFFFFFFFFFFFFFFF8))
  {
LABEL_62:
    v34 = operator new(0x20uLL);
    v35 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)v34 = off_24C54EAA0;
    sub_20BFD6E54(v34 + 2, (_DWORD *)(a1 + 8));
    sub_20BFD6EA4(v34 + 3, (_DWORD *)(a1 + 12));
    v36 = *a2;
    *((_QWORD *)v34 + 2) = *a2;
    if ((v36 & 7) != 0)
    {
      v37 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
      do
        v38 = __ldxr(v37);
      while (__stxr(v38 + 2, v37));
      if ((v38 & 1) == 0)
        *((_QWORD *)v34 + 2) &= 0xFFFFFFFFFFFFFFF8;
    }
    *((_QWORD *)v34 + 3) = v35;
    if (!v35)
    {
      *(_QWORD *)&v62 = "hd/dataSourceLegacyPrim.cpp";
      *((_QWORD *)&v62 + 1) = "Hd_TypedDataSourceLegacyCameraParamValue";
      *(_QWORD *)&v63 = 1142;
      *((_QWORD *)&v63 + 1) = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_TypedDataSourceLegacyCameraPar"
                              "amValue<double>::Hd_TypedDataSourceLegacyCameraParamValue(const SdfPath &, const TfToken &"
                              ", HdSceneDelegate *) [T = double]";
      LOBYTE(v64) = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v62, "_sceneDelegate", 0);
    }
    v39 = operator new(0x20uLL);
    v40 = &off_24C54EAF0;
    goto LABEL_70;
  }
  v12 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v12)
    v12 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v12 + 14) & 0xFFFFFFFFFFFFFFF8))
  {
    v34 = operator new(0x20uLL);
    v54 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)v34 = off_24C54EB68;
    sub_20BFD6E54(v34 + 2, (_DWORD *)(a1 + 8));
    sub_20BFD6EA4(v34 + 3, (_DWORD *)(a1 + 12));
    v55 = *a2;
    *((_QWORD *)v34 + 2) = *a2;
    if ((v55 & 7) != 0)
    {
      v56 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stxr(v57 + 2, v56));
      if ((v57 & 1) == 0)
        *((_QWORD *)v34 + 2) &= 0xFFFFFFFFFFFFFFF8;
    }
    *((_QWORD *)v34 + 3) = v54;
    if (!v54)
    {
      *(_QWORD *)&v62 = "hd/dataSourceLegacyPrim.cpp";
      *((_QWORD *)&v62 + 1) = "Hd_TypedDataSourceLegacyCameraParamValue";
      *(_QWORD *)&v63 = 1142;
      *((_QWORD *)&v63 + 1) = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_TypedDataSourceLegacyCameraPar"
                              "amValue<BOOL>::Hd_TypedDataSourceLegacyCameraParamValue(const SdfPath &, const TfToken &, "
                              "HdSceneDelegate *) [T = BOOL]";
      LOBYTE(v64) = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v62, "_sceneDelegate", 0);
    }
    v39 = operator new(0x20uLL);
    v40 = &off_24C54EBB8;
LABEL_70:
    *v39 = v40;
    v39[1] = 0;
    v39[2] = 0;
    v39[3] = v34;
    *(_QWORD *)a3 = v34;
    *(_QWORD *)(a3 + 8) = v39;
    return;
  }
  v13 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if (!v13)
    v13 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v13 + 16) & 0xFFFFFFFFFFFFFFF8))
  {
    sub_20C8197FC(a1, (_OWORD *)a3);
  }
  else
  {
    v14 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
    if (!v14)
      v14 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v14 + 17) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C81A204(a1, (_OWORD *)a3);
    }
    else
    {
      v15 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      if (!v15)
        v15 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      v16 = (_QWORD *)*((_QWORD *)v15 + 20);
      v17 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      if (!v17)
        v17 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      v18 = (_QWORD *)*((_QWORD *)v17 + 21);
      if (v16 != v18)
      {
        while ((*v16 & 0xFFFFFFFFFFFFFFF8) != (*a2 & 0xFFFFFFFFFFFFFFF8))
        {
          if (++v16 == v18)
          {
            v16 = (_QWORD *)*((_QWORD *)v17 + 21);
            break;
          }
        }
      }
      v19 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      if (!v19)
        v19 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
      v20 = (_QWORD *)*((_QWORD *)v19 + 21);
      v21 = (_DWORD *)(a1 + 8);
      v22 = (uint64_t *)(a1 + 16);
      if (v16 == v20)
        sub_20C81AC7C(v21, a2, v22, &v62);
      else
        sub_20C81AC0C(v21, a2, v22, &v62);
      *(_OWORD *)a3 = v62;
      v62 = 0uLL;
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v62);
    }
  }
}

void sub_20C819670(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void *v8;

  v5 = *((_QWORD *)v1 + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v8);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C819784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  __int128 v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = (char *)operator new(0x30uLL);
  *(_QWORD *)v4 = &unk_24C54E9D8;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 24) = v5;
  v6 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)v4 + 5) = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 - 16);
    if (*((_QWORD *)v4 + 4))
      v7 = (unint64_t *)*((_QWORD *)v4 + 4);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return sub_20C81B1F8(a2, (uint64_t)v4);
}

void sub_20C8197FC(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v4;
  std::__shared_weak_count_vtbl *v5;
  _DWORD *v6;
  const void *(__cdecl *v7)(const std::__shared_weak_count *__hidden, const std::type_info *);
  void (__cdecl *v8)(std::__shared_count *__hidden);
  unsigned int *v9;
  unsigned int v10;
  std::__shared_weak_count *v11;
  _QWORD *v12;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v13;
  uint64_t *v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v16;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v20;
  uint64_t v21;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v22;
  uint64_t v23;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v24;
  uint64_t v25;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v26;
  pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder *v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *p_shared_owners;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  std::__shared_weak_count_vtbl *v115;
  std::__shared_weak_count *v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  const char *v128;
  char v129;

  v123 = 0u;
  v124 = 0u;
  v121 = 0u;
  v122 = 0u;
  v119 = 0u;
  v120 = 0u;
  v117 = 0u;
  v118 = 0u;
  v4 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v4)
    v4 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  v5 = (std::__shared_weak_count_vtbl *)operator new(0x20uLL);
  v6 = (_DWORD *)(a1 + 8);
  v7 = *(const void *(__cdecl **)(const std::__shared_weak_count *__hidden, const std::type_info *))(a1 + 16);
  v5->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C54EC30;
  sub_20BFD6E54(&v5->~__shared_weak_count_0, (_DWORD *)(a1 + 8));
  sub_20BFD6EA4((_DWORD *)&v5->~__shared_weak_count_0 + 1, (_DWORD *)(a1 + 12));
  v8 = (void (__cdecl *)(std::__shared_count *__hidden))*((_QWORD *)v4 + 12);
  v5->__on_zero_shared = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v5->__on_zero_shared = (void (__cdecl *)(std::__shared_count *__hidden))((unint64_t)v5->__on_zero_shared & 0xFFFFFFFFFFFFFFF8);
  }
  v5->__get_deleter = v7;
  if (!v7)
  {
    *(_QWORD *)&v126 = "hd/dataSourceLegacyPrim.cpp";
    *((_QWORD *)&v126 + 1) = "Hd_TypedDataSourceLegacyCameraParamValue";
    v127 = 1142;
    v128 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_TypedDataSourceLegacyCameraParamValue<int>::Hd_Ty"
           "pedDataSourceLegacyCameraParamValue(const SdfPath &, const TfToken &, HdSceneDelegate *) [T = int]";
    v129 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v126, "_sceneDelegate", 0);
  }
  v11 = (std::__shared_weak_count *)operator new(0x20uLL);
  v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54EC80;
  v11->__shared_owners_ = 0;
  v11->__shared_weak_owners_ = 0;
  v11[1].__vftable = v5;
  v115 = v5;
  v116 = v11;
  v113 = 0;
  v114 = 0;
  v12 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetCount(&v117, (uint64_t *)&v115);
  v13 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v13)
    v13 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  v14 = (uint64_t *)(a1 + 16);
  sub_20C81BB34(v6, (uint64_t *)v13 + 13, v14, &v112);
  v126 = v112;
  v112 = 0uLL;
  v15 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetAngle((uint64_t)v12, (uint64_t *)&v126);
  v16 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v16)
    v16 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v16 + 14, v14, &v110);
  v111 = v110;
  v110 = 0uLL;
  v17 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetOffset1(v15, (uint64_t *)&v111);
  v18 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v18)
    v18 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v18 + 15, v14, &v108);
  v109 = v108;
  v108 = 0uLL;
  v19 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetWidth1(v17, (uint64_t *)&v109);
  v20 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v20)
    v20 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v20 + 16, v14, &v106);
  v107 = v106;
  v106 = 0uLL;
  v21 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetFocusDistance1(v19, (uint64_t *)&v107);
  v22 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v22)
    v22 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v22 + 17, v14, &v104);
  v105 = v104;
  v104 = 0uLL;
  v23 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetOffset2(v21, (uint64_t *)&v105);
  v24 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v24)
    v24 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v24 + 18, v14, &v102);
  v103 = v102;
  v102 = 0uLL;
  v25 = pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetWidth2(v23, (uint64_t *)&v103);
  v26 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v26)
    v26 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v26 + 19, v14, &v100);
  v101 = v100;
  v100 = 0uLL;
  v27 = (pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::SetFocusDistance2(v25, (uint64_t *)&v101);
  pxrInternal__aapl__pxrReserved__::HdSplitDiopterSchema::Builder::Build(v27, &v125);
  *a2 = v125;
  v125 = 0uLL;
  v28 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
  if (*((_QWORD *)&v101 + 1))
  {
    v29 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = (std::__shared_weak_count *)*((_QWORD *)&v100 + 1);
  if (*((_QWORD *)&v100 + 1))
  {
    v32 = (unint64_t *)(*((_QWORD *)&v100 + 1) + 8);
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
  if (*((_QWORD *)&v103 + 1))
  {
    v35 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = (std::__shared_weak_count *)*((_QWORD *)&v102 + 1);
  if (*((_QWORD *)&v102 + 1))
  {
    v38 = (unint64_t *)(*((_QWORD *)&v102 + 1) + 8);
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  v40 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
  if (*((_QWORD *)&v105 + 1))
  {
    v41 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  v43 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
  if (*((_QWORD *)&v104 + 1))
  {
    v44 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  v46 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
  if (*((_QWORD *)&v107 + 1))
  {
    v47 = (unint64_t *)(*((_QWORD *)&v107 + 1) + 8);
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  v49 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
  if (*((_QWORD *)&v106 + 1))
  {
    v50 = (unint64_t *)(*((_QWORD *)&v106 + 1) + 8);
    do
      v51 = __ldaxr(v50);
    while (__stlxr(v51 - 1, v50));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  v52 = (std::__shared_weak_count *)*((_QWORD *)&v109 + 1);
  if (*((_QWORD *)&v109 + 1))
  {
    v53 = (unint64_t *)(*((_QWORD *)&v109 + 1) + 8);
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  v55 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
  if (*((_QWORD *)&v108 + 1))
  {
    v56 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }
  v58 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
  if (*((_QWORD *)&v111 + 1))
  {
    v59 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  v61 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
  if (*((_QWORD *)&v110 + 1))
  {
    v62 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  v64 = (std::__shared_weak_count *)*((_QWORD *)&v126 + 1);
  if (*((_QWORD *)&v126 + 1))
  {
    v65 = (unint64_t *)(*((_QWORD *)&v126 + 1) + 8);
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
  v67 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
  if (*((_QWORD *)&v112 + 1))
  {
    v68 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
    do
      v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
  v70 = v116;
  if (v116)
  {
    p_shared_owners = (unint64_t *)&v116->__shared_owners_;
    do
      v72 = __ldaxr(p_shared_owners);
    while (__stlxr(v72 - 1, p_shared_owners));
    if (!v72)
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  v73 = v114;
  if (v114)
  {
    v74 = (unint64_t *)&v114->__shared_owners_;
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
    }
  }
  v76 = (std::__shared_weak_count *)*((_QWORD *)&v124 + 1);
  if (*((_QWORD *)&v124 + 1))
  {
    v77 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
    do
      v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
      std::__shared_weak_count::__release_weak(v76);
    }
  }
  v79 = (std::__shared_weak_count *)*((_QWORD *)&v123 + 1);
  if (*((_QWORD *)&v123 + 1))
  {
    v80 = (unint64_t *)(*((_QWORD *)&v123 + 1) + 8);
    do
      v81 = __ldaxr(v80);
    while (__stlxr(v81 - 1, v80));
    if (!v81)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      std::__shared_weak_count::__release_weak(v79);
    }
  }
  v82 = (std::__shared_weak_count *)*((_QWORD *)&v122 + 1);
  if (*((_QWORD *)&v122 + 1))
  {
    v83 = (unint64_t *)(*((_QWORD *)&v122 + 1) + 8);
    do
      v84 = __ldaxr(v83);
    while (__stlxr(v84 - 1, v83));
    if (!v84)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  v85 = (std::__shared_weak_count *)*((_QWORD *)&v121 + 1);
  if (*((_QWORD *)&v121 + 1))
  {
    v86 = (unint64_t *)(*((_QWORD *)&v121 + 1) + 8);
    do
      v87 = __ldaxr(v86);
    while (__stlxr(v87 - 1, v86));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
      std::__shared_weak_count::__release_weak(v85);
    }
  }
  v88 = (std::__shared_weak_count *)*((_QWORD *)&v120 + 1);
  if (*((_QWORD *)&v120 + 1))
  {
    v89 = (unint64_t *)(*((_QWORD *)&v120 + 1) + 8);
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
  v91 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
  if (*((_QWORD *)&v119 + 1))
  {
    v92 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
    do
      v93 = __ldaxr(v92);
    while (__stlxr(v93 - 1, v92));
    if (!v93)
    {
      ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
      std::__shared_weak_count::__release_weak(v91);
    }
  }
  v94 = (std::__shared_weak_count *)*((_QWORD *)&v118 + 1);
  if (*((_QWORD *)&v118 + 1))
  {
    v95 = (unint64_t *)(*((_QWORD *)&v118 + 1) + 8);
    do
      v96 = __ldaxr(v95);
    while (__stlxr(v96 - 1, v95));
    if (!v96)
    {
      ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
      std::__shared_weak_count::__release_weak(v94);
    }
  }
  v97 = (std::__shared_weak_count *)*((_QWORD *)&v117 + 1);
  if (*((_QWORD *)&v117 + 1))
  {
    v98 = (unint64_t *)(*((_QWORD *)&v117 + 1) + 8);
    do
      v99 = __ldaxr(v98);
    while (__stlxr(v99 - 1, v98));
    if (!v99)
    {
      ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
      std::__shared_weak_count::__release_weak(v97);
    }
  }
}

void sub_20C81A0B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v39;
  _DWORD *v40;
  _DWORD *v41;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  void *v46;

  v43 = *((_QWORD *)v39 + 2);
  if ((v43 & 7) != 0)
  {
    v44 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
    do
      v45 = __ldxr(v44);
    while (__stlxr(v45 - 2, v44));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v41);
  sub_20BFD265C(v40);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v39);
  operator delete(v46);
  sub_20C8146FC((uint64_t)&a39);
  _Unwind_Resume(a1);
}

void sub_20C81A204(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v4;
  std::__shared_weak_count_vtbl *v5;
  _DWORD *v6;
  const void *(__cdecl *v7)(const std::__shared_weak_count *__hidden, const std::type_info *);
  void (__cdecl *v8)(std::__shared_count *__hidden);
  unsigned int *v9;
  unsigned int v10;
  std::__shared_weak_count *v11;
  _QWORD *v12;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v13;
  uint64_t *v14;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v16;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v20;
  uint64_t v21;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v22;
  uint64_t v23;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v24;
  uint64_t v25;
  pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *v26;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder *v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  std::__shared_weak_count *v70;
  unint64_t *p_shared_owners;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  std::__shared_weak_count *v79;
  unint64_t *v80;
  unint64_t v81;
  std::__shared_weak_count *v82;
  unint64_t *v83;
  unint64_t v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  std::__shared_weak_count *v114;
  std::__shared_weak_count_vtbl *v115;
  std::__shared_weak_count *v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  const char *v128;
  char v129;

  v123 = 0u;
  v124 = 0u;
  v121 = 0u;
  v122 = 0u;
  v119 = 0u;
  v120 = 0u;
  v117 = 0u;
  v118 = 0u;
  v4 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v4)
    v4 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  v5 = (std::__shared_weak_count_vtbl *)operator new(0x20uLL);
  v6 = (_DWORD *)(a1 + 8);
  v7 = *(const void *(__cdecl **)(const std::__shared_weak_count *__hidden, const std::type_info *))(a1 + 16);
  v5->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))off_24C54EDC0;
  sub_20BFD6E54(&v5->~__shared_weak_count_0, (_DWORD *)(a1 + 8));
  sub_20BFD6EA4((_DWORD *)&v5->~__shared_weak_count_0 + 1, (_DWORD *)(a1 + 12));
  v8 = (void (__cdecl *)(std::__shared_count *__hidden))*((_QWORD *)v4 + 26);
  v5->__on_zero_shared = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v5->__on_zero_shared = (void (__cdecl *)(std::__shared_count *__hidden))((unint64_t)v5->__on_zero_shared & 0xFFFFFFFFFFFFFFF8);
  }
  v5->__get_deleter = v7;
  if (!v7)
  {
    *(_QWORD *)&v126 = "hd/dataSourceLegacyPrim.cpp";
    *((_QWORD *)&v126 + 1) = "Hd_TypedDataSourceLegacyCameraParamValue";
    v127 = 1142;
    v128 = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_TypedDataSourceLegacyCameraParamValue<pxrInternal"
           "__aapl__pxrReserved__::TfToken>::Hd_TypedDataSourceLegacyCameraParamValue(const SdfPath &, const TfToken &, H"
           "dSceneDelegate *) [T = pxrInternal__aapl__pxrReserved__::TfToken]";
    v129 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v126, "_sceneDelegate", 0);
  }
  v11 = (std::__shared_weak_count *)operator new(0x20uLL);
  v11->__vftable = (std::__shared_weak_count_vtbl *)&off_24C54EE10;
  v11->__shared_owners_ = 0;
  v11->__shared_weak_owners_ = 0;
  v11[1].__vftable = v5;
  v115 = v5;
  v116 = v11;
  v113 = 0;
  v114 = 0;
  v12 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetType(&v117, (uint64_t *)&v115);
  v13 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v13)
    v13 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  v14 = (uint64_t *)(a1 + 16);
  sub_20C81BB34(v6, (uint64_t *)v13 + 27, v14, &v112);
  v126 = v112;
  v112 = 0uLL;
  v15 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetK1((uint64_t)v12, (uint64_t *)&v126);
  v16 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v16)
    v16 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v16 + 28, v14, &v110);
  v111 = v110;
  v110 = 0uLL;
  v17 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetK2(v15, (uint64_t *)&v111);
  v18 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v18)
    v18 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81C4F4(v6, (uint64_t *)v18 + 29, v14, &v108);
  v109 = v108;
  v108 = 0uLL;
  v19 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetCenter(v17, (uint64_t *)&v109);
  v20 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v20)
    v20 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v20 + 30, v14, &v106);
  v107 = v106;
  v106 = 0uLL;
  v21 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetAnaSq(v19, (uint64_t *)&v107);
  v22 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v22)
    v22 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81C4F4(v6, (uint64_t *)v22 + 31, v14, &v104);
  v105 = v104;
  v104 = 0uLL;
  v23 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetAsym(v21, (uint64_t *)&v105);
  v24 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v24)
    v24 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v24 + 32, v14, &v102);
  v103 = v102;
  v102 = 0uLL;
  v25 = pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetScale(v23, (uint64_t *)&v103);
  v26 = (pxrInternal__aapl__pxrReserved__::HdCameraTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  if (!v26)
    v26 = sub_20C7E7984(&pxrInternal__aapl__pxrReserved__::HdCameraTokens);
  sub_20C81BB34(v6, (uint64_t *)v26 + 33, v14, &v100);
  v101 = v100;
  v100 = 0uLL;
  v27 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetIor(v25, (uint64_t *)&v101);
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::Build(v27, &v125);
  *a2 = v125;
  v125 = 0uLL;
  v28 = (std::__shared_weak_count *)*((_QWORD *)&v101 + 1);
  if (*((_QWORD *)&v101 + 1))
  {
    v29 = (unint64_t *)(*((_QWORD *)&v101 + 1) + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = (std::__shared_weak_count *)*((_QWORD *)&v100 + 1);
  if (*((_QWORD *)&v100 + 1))
  {
    v32 = (unint64_t *)(*((_QWORD *)&v100 + 1) + 8);
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
  v34 = (std::__shared_weak_count *)*((_QWORD *)&v103 + 1);
  if (*((_QWORD *)&v103 + 1))
  {
    v35 = (unint64_t *)(*((_QWORD *)&v103 + 1) + 8);
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  v37 = (std::__shared_weak_count *)*((_QWORD *)&v102 + 1);
  if (*((_QWORD *)&v102 + 1))
  {
    v38 = (unint64_t *)(*((_QWORD *)&v102 + 1) + 8);
    do
      v39 = __ldaxr(v38);
    while (__stlxr(v39 - 1, v38));
    if (!v39)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
  v40 = (std::__shared_weak_count *)*((_QWORD *)&v105 + 1);
  if (*((_QWORD *)&v105 + 1))
  {
    v41 = (unint64_t *)(*((_QWORD *)&v105 + 1) + 8);
    do
      v42 = __ldaxr(v41);
    while (__stlxr(v42 - 1, v41));
    if (!v42)
    {
      ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
      std::__shared_weak_count::__release_weak(v40);
    }
  }
  v43 = (std::__shared_weak_count *)*((_QWORD *)&v104 + 1);
  if (*((_QWORD *)&v104 + 1))
  {
    v44 = (unint64_t *)(*((_QWORD *)&v104 + 1) + 8);
    do
      v45 = __ldaxr(v44);
    while (__stlxr(v45 - 1, v44));
    if (!v45)
    {
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
    }
  }
  v46 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
  if (*((_QWORD *)&v107 + 1))
  {
    v47 = (unint64_t *)(*((_QWORD *)&v107 + 1) + 8);
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  v49 = (std::__shared_weak_count *)*((_QWORD *)&v106 + 1);
  if (*((_QWORD *)&v106 + 1))
  {
    v50 = (unint64_t *)(*((_QWORD *)&v106 + 1) + 8);
    do
      v51 = __ldaxr(v50);
    while (__stlxr(v51 - 1, v50));
    if (!v51)
    {
      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
      std::__shared_weak_count::__release_weak(v49);
    }
  }
  v52 = (std::__shared_weak_count *)*((_QWORD *)&v109 + 1);
  if (*((_QWORD *)&v109 + 1))
  {
    v53 = (unint64_t *)(*((_QWORD *)&v109 + 1) + 8);
    do
      v54 = __ldaxr(v53);
    while (__stlxr(v54 - 1, v53));
    if (!v54)
    {
      ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
      std::__shared_weak_count::__release_weak(v52);
    }
  }
  v55 = (std::__shared_weak_count *)*((_QWORD *)&v108 + 1);
  if (*((_QWORD *)&v108 + 1))
  {
    v56 = (unint64_t *)(*((_QWORD *)&v108 + 1) + 8);
    do
      v57 = __ldaxr(v56);
    while (__stlxr(v57 - 1, v56));
    if (!v57)
    {
      ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
      std::__shared_weak_count::__release_weak(v55);
    }
  }
  v58 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
  if (*((_QWORD *)&v111 + 1))
  {
    v59 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
    do
      v60 = __ldaxr(v59);
    while (__stlxr(v60 - 1, v59));
    if (!v60)
    {
      ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
      std::__shared_weak_count::__release_weak(v58);
    }
  }
  v61 = (std::__shared_weak_count *)*((_QWORD *)&v110 + 1);
  if (*((_QWORD *)&v110 + 1))
  {
    v62 = (unint64_t *)(*((_QWORD *)&v110 + 1) + 8);
    do
      v63 = __ldaxr(v62);
    while (__stlxr(v63 - 1, v62));
    if (!v63)
    {
      ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
      std::__shared_weak_count::__release_weak(v61);
    }
  }
  v64 = (std::__shared_weak_count *)*((_QWORD *)&v126 + 1);
  if (*((_QWORD *)&v126 + 1))
  {
    v65 = (unint64_t *)(*((_QWORD *)&v126 + 1) + 8);
    do
      v66 = __ldaxr(v65);
    while (__stlxr(v66 - 1, v65));
    if (!v66)
    {
      ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
      std::__shared_weak_count::__release_weak(v64);
    }
  }
  v67 = (std::__shared_weak_count *)*((_QWORD *)&v112 + 1);
  if (*((_QWORD *)&v112 + 1))
  {
    v68 = (unint64_t *)(*((_QWORD *)&v112 + 1) + 8);
    do
      v69 = __ldaxr(v68);
    while (__stlxr(v69 - 1, v68));
    if (!v69)
    {
      ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
      std::__shared_weak_count::__release_weak(v67);
    }
  }
  v70 = v116;
  if (v116)
  {
    p_shared_owners = (unint64_t *)&v116->__shared_owners_;
    do
      v72 = __ldaxr(p_shared_owners);
    while (__stlxr(v72 - 1, p_shared_owners));
    if (!v72)
    {
      ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
      std::__shared_weak_count::__release_weak(v70);
    }
  }
  v73 = v114;
  if (v114)
  {
    v74 = (unint64_t *)&v114->__shared_owners_;
    do
      v75 = __ldaxr(v74);
    while (__stlxr(v75 - 1, v74));
    if (!v75)
    {
      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
      std::__shared_weak_count::__release_weak(v73);
    }
  }
  v76 = (std::__shared_weak_count *)*((_QWORD *)&v124 + 1);
  if (*((_QWORD *)&v124 + 1))
  {
    v77 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
    do
      v78 = __ldaxr(v77);
    while (__stlxr(v78 - 1, v77));
    if (!v78)
    {
      ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
      std::__shared_weak_count::__release_weak(v76);
    }
  }
  v79 = (std::__shared_weak_count *)*((_QWORD *)&v123 + 1);
  if (*((_QWORD *)&v123 + 1))
  {
    v80 = (unint64_t *)(*((_QWORD *)&v123 + 1) + 8);
    do
      v81 = __ldaxr(v80);
    while (__stlxr(v81 - 1, v80));
    if (!v81)
    {
      ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
      std::__shared_weak_count::__release_weak(v79);
    }
  }
  v82 = (std::__shared_weak_count *)*((_QWORD *)&v122 + 1);
  if (*((_QWORD *)&v122 + 1))
  {
    v83 = (unint64_t *)(*((_QWORD *)&v122 + 1) + 8);
    do
      v84 = __ldaxr(v83);
    while (__stlxr(v84 - 1, v83));
    if (!v84)
    {
      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
      std::__shared_weak_count::__release_weak(v82);
    }
  }
  v85 = (std::__shared_weak_count *)*((_QWORD *)&v121 + 1);
  if (*((_QWORD *)&v121 + 1))
  {
    v86 = (unint64_t *)(*((_QWORD *)&v121 + 1) + 8);
    do
      v87 = __ldaxr(v86);
    while (__stlxr(v87 - 1, v86));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
      std::__shared_weak_count::__release_weak(v85);
    }
  }
  v88 = (std::__shared_weak_count *)*((_QWORD *)&v120 + 1);
  if (*((_QWORD *)&v120 + 1))
  {
    v89 = (unint64_t *)(*((_QWORD *)&v120 + 1) + 8);
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
  v91 = (std::__shared_weak_count *)*((_QWORD *)&v119 + 1);
  if (*((_QWORD *)&v119 + 1))
  {
    v92 = (unint64_t *)(*((_QWORD *)&v119 + 1) + 8);
    do
      v93 = __ldaxr(v92);
    while (__stlxr(v93 - 1, v92));
    if (!v93)
    {
      ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
      std::__shared_weak_count::__release_weak(v91);
    }
  }
  v94 = (std::__shared_weak_count *)*((_QWORD *)&v118 + 1);
  if (*((_QWORD *)&v118 + 1))
  {
    v95 = (unint64_t *)(*((_QWORD *)&v118 + 1) + 8);
    do
      v96 = __ldaxr(v95);
    while (__stlxr(v96 - 1, v95));
    if (!v96)
    {
      ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
      std::__shared_weak_count::__release_weak(v94);
    }
  }
  v97 = (std::__shared_weak_count *)*((_QWORD *)&v117 + 1);
  if (*((_QWORD *)&v117 + 1))
  {
    v98 = (unint64_t *)(*((_QWORD *)&v117 + 1) + 8);
    do
      v99 = __ldaxr(v98);
    while (__stlxr(v99 - 1, v98));
    if (!v99)
    {
      ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
      std::__shared_weak_count::__release_weak(v97);
    }
  }
}

void sub_20C81AABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v39;
  _DWORD *v40;
  _DWORD *v41;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  void *v46;

  v43 = *((_QWORD *)v39 + 2);
  if ((v43 & 7) != 0)
  {
    v44 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
    do
      v45 = __ldxr(v44);
    while (__stlxr(v45 - 2, v44));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v41);
  sub_20BFD265C(v40);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v39);
  operator delete(v46);
  sub_20C8146FC((uint64_t)&a39);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81AC0C@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  void *v8;

  v8 = operator new(0x20uLL);
  sub_20C81BF84((uint64_t)v8, a1, a2, *a3);
  return sub_20C81C0B4(a4, (uint64_t)v8);
}

void sub_20C81AC68(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81AC7C@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD *result;
  _QWORD v14[4];
  char v15;

  v8 = operator new(0x20uLL);
  v9 = *a3;
  *(_QWORD *)v8 = off_24C54EF50;
  sub_20BFD6E54(v8 + 2, a1);
  sub_20BFD6EA4(v8 + 3, a1 + 1);
  v10 = *a2;
  *((_QWORD *)v8 + 2) = *a2;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *((_QWORD *)v8 + 2) &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)v8 + 3) = v9;
  if (!v9)
  {
    v14[0] = "hd/dataSourceLegacyPrim.cpp";
    v14[1] = "Hd_DataSourceLegacyCameraParamValue";
    v14[2] = 1201;
    v14[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyCameraParamValue::Hd_DataSource"
             "LegacyCameraParamValue(const SdfPath &, const TfToken &, HdSceneDelegate *)";
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v14, "_sceneDelegate", 0);
  }
  *a4 = v8;
  result = operator new(0x20uLL);
  *result = &off_24C54EF98;
  result[1] = 0;
  result[2] = 0;
  result[3] = v8;
  a4[1] = result;
  return result;
}

void sub_20C81AD9C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void *v8;

  v5 = *((_QWORD *)v1 + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v8);
  _Unwind_Resume(a1);
}

void sub_20C81AE04(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C81AE18@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  a2[1] = (char *)&off_24C51DEB0 + 3;
  return result;
}

uint64_t sub_20C81AE30()
{
  return 0;
}

float sub_20C81AE38(uint64_t a1)
{
  return *(float *)(a1 + 8);
}

void sub_20C81AE44(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81AE58(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81AE70(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E818))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81AEB4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C81AEC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = (char *)&off_24C54E898 + 3;
  *(_DWORD *)a2 = *(_DWORD *)(result + 8);
  return result;
}

uint64_t sub_20C81AEE4()
{
  return 0;
}

uint64_t sub_20C81AEEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

_DWORD *sub_20C81AEF4(_DWORD *result, _DWORD *a2)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_20C81AF04(_DWORD *result, _DWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_20C81AF10()
{
  return 1;
}

unint64_t sub_20C81AF18(unsigned int *a1)
{
  return bswap64(0x9E3779B97F4A7C55 * *a1);
}

BOOL sub_20C81AF38(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_20C81AF4C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20C81AF64()
{
  return 0;
}

void *sub_20C81AF74()
{
  return &unk_24C54BAD8;
}

uint64_t sub_20C81AF80()
{
  return 0;
}

uint64_t sub_20C81AF88()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C81AF94()
{
  return 0;
}

uint64_t sub_20C81AF9C()
{
  return 0;
}

BOOL sub_20C81AFA4(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB12A5ELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C81AFDC(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C54BAD8, a2, a3);
}

void *sub_20C81AFFC()
{
  return &unk_24C54BAD8;
}

_DWORD *sub_20C81B00C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = (char *)&off_24C54E898 + 3;
  *(_DWORD *)a2 = *result;
  return result;
}

_QWORD *sub_20C81B028(unsigned int *a1, _QWORD *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *v5;
  void *__p[2];
  unsigned __int8 v8;

  pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C54BAD8, *a1, (uint64_t)__p);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  v5 = sub_20BDDC1C8(a2, (uint64_t)v3, v4);
  if ((char)v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_20C81B09C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C81B0BC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81B0D0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81B0E8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54E9B0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81B128(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54E9D8;
  sub_20BF5618C((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C81B160(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54E9D8;
  sub_20BF5618C((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C81B19C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = off_24C51EFF0;
  return sub_20BF56B40(a2, a1 + 8);
}

uint64_t sub_20C81B1B4()
{
  return 0;
}

uint64_t sub_20C81B1BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t *v5;
  unint64_t v6;

  v2 = *(_OWORD *)(result + 24);
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_OWORD *)(a2 + 16) = v2;
  v3 = *(_QWORD *)(result + 40);
  *(_QWORD *)(a2 + 32) = v3;
  if (v3)
  {
    v4 = *(unint64_t **)(a2 + 24);
    v5 = (unint64_t *)(v3 - 16);
    if (!v4)
      v4 = v5;
    do
      v6 = __ldxr(v4);
    while (__stxr(v6 + 1, v4));
  }
  return result;
}

_QWORD *sub_20C81B1F8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54EA28;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C81B240(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C81B264(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81B278(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81B290(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54EA78))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81B2D0(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54EAA0;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81B330(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54EAA0;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C81B394(_QWORD **a1@<X0>, double *a2@<X8>, float a3@<S0>)
{
  double v4;

  if (a3 == 0.0)
  {
    (*(void (**)(double *__return_ptr, _QWORD *, _QWORD **, _QWORD **))(*a1[3] + 296))(a2, a1[3], a1 + 1, a1 + 2);
  }
  else
  {
    v4 = ((double (*)(_QWORD **))(*a1)[4])(a1);
    *((_QWORD *)a2 + 1) = &unk_24C52064B;
    *a2 = v4;
  }
}

uint64_t sub_20C81B400(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81B4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

double sub_20C81B4BC(uint64_t a1, float a2)
{
  _DWORD *v2;
  double v3;
  double *v4;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v14 = 0;
  v2 = (_DWORD *)(a1 + 8);
  if (a2 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(v12, *(_QWORD *)(a1 + 24), v2, a1 + 16);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v2, (uint64_t *)(a1 + 24), &v10);
    (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v10 + 16))(v12, a2);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
    v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  v3 = 0.0;
  if (sub_20BF78EEC((pxrInternal__aapl__pxrReserved__::VtValue *)&v13))
  {
    if ((v14 & 4) != 0)
      v4 = (double *)(*(uint64_t (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(&v13);
    else
      v4 = (double *)&v13;
    v3 = *v4;
  }
  sub_20BF4C2D8((uint64_t)&v13);
  return v3;
}

void sub_20C81B610(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20BF4C2D8((uint64_t)va1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81B63C@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  void *v8;
  _QWORD *result;

  v8 = operator new(0x58uLL);
  sub_20C80CE64((uint64_t)v8, a1, a2, *a3);
  *a4 = v8;
  result = operator new(0x20uLL);
  *result = &off_24C54CC60;
  result[1] = 0;
  result[2] = 0;
  result[3] = v8;
  a4[1] = result;
  return result;
}

void sub_20C81B6B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20C81B6E0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81B6F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81B70C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54EB40))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81B74C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54EB68;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81B7AC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54EB68;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

_QWORD *sub_20C81B810@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  _QWORD *result;

  if (a3 == 0.0)
    return (*(_QWORD *(**)(_QWORD *__return_ptr, _QWORD *, _QWORD **, _QWORD **))(*a1[3] + 296))(a2, a1[3], a1 + 1, a1 + 2);
  result = (_QWORD *)((uint64_t (*)(_QWORD **))(*a1)[4])(a1);
  a2[1] = &unk_24C51FCF3;
  *(_BYTE *)a2 = (_BYTE)result;
  return result;
}

uint64_t sub_20C81B87C(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81B924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_20C81B938(uint64_t a1, float a2)
{
  _DWORD *v2;
  uint64_t *v3;
  _BOOL8 v4;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v14 = 0;
  v2 = (_DWORD *)(a1 + 8);
  if (a2 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(v12, *(_QWORD *)(a1 + 24), v2, a1 + 16);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v2, (uint64_t *)(a1 + 24), &v10);
    (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v10 + 16))(v12, a2);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
    v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  if (sub_20BFB1AC0((pxrInternal__aapl__pxrReserved__::VtValue *)&v13))
  {
    if ((v14 & 4) != 0)
      v3 = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(&v13);
    else
      v3 = &v13;
    v4 = *(_BYTE *)v3 != 0;
  }
  else
  {
    v4 = 0;
  }
  sub_20BF4C2D8((uint64_t)&v13);
  return v4;
}

void sub_20C81BA98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20BF4C2D8((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20C81BAC8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81BADC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81BAF4(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54EC08))
    return a1 + 24;
  else
    return 0;
}

_QWORD *sub_20C81BB34@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  void *v8;

  v8 = operator new(0x20uLL);
  sub_20C81BF84((uint64_t)v8, a1, a2, *a3);
  return sub_20C81C0B4(a4, (uint64_t)v8);
}

void sub_20C81BB90(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C81BBA4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54EC30;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81BC04(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54EC30;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

_QWORD *sub_20C81BC68@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  _QWORD *result;

  if (a3 == 0.0)
    return (*(_QWORD *(**)(_QWORD *__return_ptr, _QWORD *, _QWORD **, _QWORD **))(*a1[3] + 296))(a2, a1[3], a1 + 1, a1 + 2);
  result = (_QWORD *)((uint64_t (*)(_QWORD **))(*a1)[4])(a1);
  a2[1] = &unk_24C52008B;
  *(_DWORD *)a2 = (_DWORD)result;
  return result;
}

uint64_t sub_20C81BCD4(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81BD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C81BD90(uint64_t a1, float a2)
{
  _DWORD *v2;
  unsigned int *v3;
  uint64_t v4;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v14 = 0;
  v2 = (_DWORD *)(a1 + 8);
  if (a2 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(v12, *(_QWORD *)(a1 + 24), v2, a1 + 16);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v2, (uint64_t *)(a1 + 24), &v10);
    (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v10 + 16))(v12, a2);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
    v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  if (sub_20BFB2CEC((pxrInternal__aapl__pxrReserved__::VtValue *)&v13))
  {
    if ((v14 & 4) != 0)
      v3 = (unsigned int *)(*(uint64_t (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(&v13);
    else
      v3 = (unsigned int *)&v13;
    v4 = *v3;
  }
  else
  {
    v4 = 0;
  }
  sub_20BF4C2D8((uint64_t)&v13);
  return v4;
}

void sub_20C81BEE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20BF4C2D8((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20C81BF18(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81BF2C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81BF44(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54ECD0))
    return a1 + 24;
  else
    return 0;
}

uint64_t sub_20C81BF84(uint64_t a1, _DWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  _QWORD v12[4];
  char v13;

  *(_QWORD *)a1 = off_24C54ECF8;
  sub_20BFD6E54((_DWORD *)(a1 + 8), a2);
  sub_20BFD6EA4((_DWORD *)(a1 + 12), a2 + 1);
  v8 = *a3;
  *(_QWORD *)(a1 + 16) = *a3;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(a1 + 16) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)(a1 + 24) = a4;
  if (!a4)
  {
    v12[0] = "hd/dataSourceLegacyPrim.cpp";
    v12[1] = "Hd_TypedDataSourceLegacyCameraParamValue";
    v12[2] = 1142;
    v12[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_TypedDataSourceLegacyCameraParamValue<float>::H"
             "d_TypedDataSourceLegacyCameraParamValue(const SdfPath &, const TfToken &, HdSceneDelegate *) [T = float]";
    v13 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v12, "_sceneDelegate", 0);
  }
  return a1;
}

void sub_20C81C06C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  v5 = *((_QWORD *)v1 + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81C0B4(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &off_24C54ED48;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C81C0F8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C81C118(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54ECF8;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81C178(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54ECF8;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C81C1DC(_QWORD **a1@<X0>, float *a2@<X8>, float a3@<S0>)
{
  float v4;

  if (a3 == 0.0)
  {
    (*(void (**)(float *__return_ptr, _QWORD *, _QWORD **, _QWORD **))(*a1[3] + 296))(a2, a1[3], a1 + 1, a1 + 2);
  }
  else
  {
    v4 = ((float (*)(_QWORD **))(*a1)[4])(a1);
    *((_QWORD *)a2 + 1) = &unk_24C520593;
    *a2 = v4;
  }
}

uint64_t sub_20C81C248(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81C2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

float sub_20C81C304(uint64_t a1, float a2)
{
  _DWORD *v2;
  float v3;
  float *v4;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v14 = 0;
  v2 = (_DWORD *)(a1 + 8);
  if (a2 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(v12, *(_QWORD *)(a1 + 24), v2, a1 + 16);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v2, (uint64_t *)(a1 + 24), &v10);
    (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v10 + 16))(v12, a2);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
    v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  v3 = 0.0;
  if (sub_20BF7B9F8((pxrInternal__aapl__pxrReserved__::VtValue *)&v13))
  {
    if ((v14 & 4) != 0)
      v4 = (float *)(*(uint64_t (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(&v13);
    else
      v4 = (float *)&v13;
    v3 = *v4;
  }
  sub_20BF4C2D8((uint64_t)&v13);
  return v3;
}

void sub_20C81C458(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20BF4C2D8((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20C81C488(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81C49C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81C4B4(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54ED98))
    return a1 + 24;
  else
    return 0;
}

_QWORD *sub_20C81C4F4@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD *result;
  _QWORD v14[4];
  char v15;

  v8 = operator new(0x20uLL);
  v9 = *a3;
  *(_QWORD *)v8 = off_24C54EE88;
  sub_20BFD6E54(v8 + 2, a1);
  sub_20BFD6EA4(v8 + 3, a1 + 1);
  v10 = *a2;
  *((_QWORD *)v8 + 2) = *a2;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *((_QWORD *)v8 + 2) &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)v8 + 3) = v9;
  if (!v9)
  {
    v14[0] = "hd/dataSourceLegacyPrim.cpp";
    v14[1] = "Hd_TypedDataSourceLegacyCameraParamValue";
    v14[2] = 1142;
    v14[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_TypedDataSourceLegacyCameraParamValue<pxrIntern"
             "al__aapl__pxrReserved__::GfVec2f>::Hd_TypedDataSourceLegacyCameraParamValue(const SdfPath &, const TfToken "
             "&, HdSceneDelegate *) [T = pxrInternal__aapl__pxrReserved__::GfVec2f]";
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v14, "_sceneDelegate", 0);
  }
  *a4 = v8;
  result = operator new(0x20uLL);
  *result = &off_24C54EED8;
  result[1] = 0;
  result[2] = 0;
  result[3] = v8;
  a4[1] = result;
  return result;
}

void sub_20C81C614(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  _DWORD *v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  void *v8;

  v5 = *((_QWORD *)v1 + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20BFD265C(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v8);
  _Unwind_Resume(a1);
}

void sub_20C81C678(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54EDC0;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81C6D8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54EDC0;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

_QWORD *sub_20C81C73C@<X0>(_QWORD **a1@<X0>, unsigned int **a2@<X8>, float a3@<S0>)
{
  _QWORD *result;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  if (a3 == 0.0)
    return (*(_QWORD *(**)(unsigned int **__return_ptr, _QWORD *, _QWORD **, _QWORD **))(*a1[3] + 296))(a2, a1[3], a1 + 1, a1 + 2);
  result = ((_QWORD *(*)(unsigned int **__return_ptr))(*a1)[4])(&v10);
  v5 = v10;
  *a2 = v10;
  a2[1] = (unsigned int *)((char *)&off_24C5207B8 + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *a2 = v6;
  }
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  return result;
}

uint64_t sub_20C81C7FC(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81C8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C81C8B8@<X0>(uint64_t a1@<X0>, unsigned int **a2@<X8>, float a3@<S0>)
{
  _DWORD *v4;
  unsigned int **v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v18 = 0;
  v4 = (_DWORD *)(a1 + 8);
  if (a3 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(v16, *(_QWORD *)(a1 + 24), v4, a1 + 16);
    sub_20BF4B5D8(&v17, v16);
    sub_20BF4C2D8((uint64_t)v16);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v4, (uint64_t *)(a1 + 24), &v14);
    (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v14 + 16))(v16, a3);
    sub_20BF4B5D8(&v17, v16);
    sub_20BF4C2D8((uint64_t)v16);
    v11 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!sub_20BFB5E50((pxrInternal__aapl__pxrReserved__::VtValue *)&v17))
  {
    v7 = 0;
LABEL_12:
    *a2 = v7;
    return sub_20BF4C2D8((uint64_t)&v17);
  }
  if ((v18 & 4) != 0)
    v5 = (unsigned int **)(*(uint64_t (**)(uint64_t *))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(&v17);
  else
    v5 = (unsigned int **)&v17;
  v6 = *v5;
  *a2 = *v5;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      goto LABEL_12;
  }
  return sub_20BF4C2D8((uint64_t)&v17);
}

void sub_20C81CA38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20BF4C2D8((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20C81CA68(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81CA7C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81CA94(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54EE60))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81CAD4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54EE88;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81CB34(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54EE88;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C81CB98(_QWORD **a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  float v4;
  int v5;

  if (a3 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD *, _QWORD **, _QWORD **))(*a1[3] + 296))(a2, a1[3], a1 + 1, a1 + 2);
  }
  else
  {
    v4 = ((float (*)(_QWORD **))(*a1)[4])(a1);
    a2[1] = (char *)&off_24C51DEB0 + 3;
    *(float *)a2 = v4;
    *((_DWORD *)a2 + 1) = v5;
  }
}

uint64_t sub_20C81CC04(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81CCAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

float sub_20C81CCC0(uint64_t a1, float a2)
{
  _DWORD *v2;
  float v3;
  float *v4;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v14 = 0;
  v2 = (_DWORD *)(a1 + 8);
  if (a2 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(v12, *(_QWORD *)(a1 + 24), v2, a1 + 16);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v2, (uint64_t *)(a1 + 24), &v10);
    (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v10 + 16))(v12, a2);
    sub_20BF4B5D8(&v13, v12);
    sub_20BF4C2D8((uint64_t)v12);
    v7 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  v3 = 0.0;
  if (sub_20BF9F188((pxrInternal__aapl__pxrReserved__::VtValue *)&v13))
  {
    if ((v14 & 4) != 0)
      v4 = (float *)(*(uint64_t (**)(uint64_t *))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(&v13);
    else
      v4 = (float *)&v13;
    v3 = *v4;
  }
  sub_20BF4C2D8((uint64_t)&v13);
  return v3;
}

void sub_20C81CE1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20BF4C2D8((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20C81CE4C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81CE60(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81CE78(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54EF28))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81CEB8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54EF50;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81CF18(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54EF50;
  v2 = *(_QWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C81CF7C(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  _DWORD *v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  v3 = (_DWORD *)(a1 + 8);
  if (a3 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, _DWORD *, uint64_t))(**(_QWORD **)(a1 + 24) + 296))(a2, *(_QWORD *)(a1 + 24), v3, a1 + 16);
  }
  else
  {
    sub_20C81B63C((uint64_t *)(a1 + 16), v3, (uint64_t *)(a1 + 24), &v8);
    (*(void (**)(uint64_t, float))(*(_QWORD *)v8 + 16))(v8, a3);
    v5 = v9;
    if (v9)
    {
      p_shared_owners = (unint64_t *)&v9->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_20C81D058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C81D06C(uint64_t a1, uint64_t a2, float a3, float a4)
{
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;

  sub_20C81B63C((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), (uint64_t *)(a1 + 24), &v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, float, float))(*(_QWORD *)v12 + 24))(v12, a2, a3, a4);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return v7;
}

void sub_20C81D114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C81D12C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81D140(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81D158(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54EFE8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81D19C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81D1B0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81D1C8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F060))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81D208(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54F088;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C81D244(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54F088;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C81D284@<X0>(_QWORD *a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  _QWORD *result;
  uint64_t v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v2 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v2)
    v2 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v3 = *((_QWORD *)v2 + 33);
  v40 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v40 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v6)
    v6 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v7 = *((_QWORD *)v6 + 44);
  v41 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v41 &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v10)
    v10 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v11 = *((_QWORD *)v10 + 71);
  v42 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v42 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v14)
    v14 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v15 = *((_QWORD *)v14 + 45);
  v43 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v43 &= 0xFFFFFFFFFFFFFFF8;
  }
  v18 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v18)
    v18 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v19 = *((_QWORD *)v18 + 83);
  v44 = v19;
  if ((v19 & 7) != 0)
  {
    v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 2, v20));
    if ((v21 & 1) == 0)
      v44 &= 0xFFFFFFFFFFFFFFF8;
  }
  v22 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v22)
    v22 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v23 = *((_QWORD *)v22 + 49);
  v45 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v45 &= 0xFFFFFFFFFFFFFFF8;
  }
  v26 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v26)
    v26 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v27 = *((_QWORD *)v26 + 59);
  v46 = v27;
  if ((v27 & 7) != 0)
  {
    v28 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 2, v28));
    if ((v29 & 1) == 0)
      v46 &= 0xFFFFFFFFFFFFFFF8;
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  result = operator new(0x38uLL);
  v31 = 0;
  *a1 = result;
  a1[1] = result;
  a1[2] = result + 7;
  do
  {
    v32 = *(&v40 + v31);
    *result = v32;
    if ((v32 & 7) != 0)
    {
      v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 2, v33));
      if ((v34 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v31;
    ++result;
  }
  while (v31 != 7);
  v35 = &v47;
  a1[1] = result;
  do
  {
    v37 = *--v35;
    v36 = v37;
    if ((v37 & 7) != 0)
    {
      v38 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
      do
        v39 = __ldxr(v38);
      while (__stlxr(v39 - 2, v38));
    }
  }
  while (v35 != &v40);
  return result;
}

void sub_20C81D5CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;

  while (1)
  {
    v13 = *((_QWORD *)v11 - 1);
    v11 -= 8;
    v12 = v13;
    if ((v13 & 7) != 0)
    {
      v14 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    if (v11 == &a11)
      _Unwind_Resume(exception_object);
  }
}

uint64_t sub_20C81D644@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v11;
  __int128 v13;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x24BDAC8D0];
  v14[1] = 0;
  v6 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if (!v6)
    v6 = sub_20C81D960(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 30) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_11;
  v7 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if (!v7)
    v7 = sub_20C81D960(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 32) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_11;
  v8 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if (!v8)
    v8 = sub_20C81D960(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 31) & 0xFFFFFFFFFFFFFFF8))
LABEL_11:
    (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, _QWORD *))(**(_QWORD **)(a1 + 16) + 120))(&v13, *(_QWORD *)(a1 + 16), a1 + 8, a2);
  else
    (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t, _QWORD *))(**(_QWORD **)(a1 + 16) + 288))(&v13, *(_QWORD *)(a1 + 16), a1 + 8, a2);
  sub_20BF4B5D8(v14, &v13);
  sub_20BF4C2D8((uint64_t)&v13);
  v9 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if (!v9)
    v9 = sub_20C81D960(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 30) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_22;
  v10 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if (!v10)
    v10 = sub_20C81D960(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 32) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_22;
  v11 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if (!v11)
    v11 = sub_20C81D960(&pxrInternal__aapl__pxrReserved__::HdLightTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 31) & 0xFFFFFFFFFFFFFFF8))
LABEL_22:
    sub_20C81D898(v14, &v13);
  else
    pxrInternal__aapl__pxrReserved__::HdCreateTypedRetainedDataSource((pxrInternal__aapl__pxrReserved__ *)v14, &v13);
  *a3 = v13;
  return sub_20BF4C2D8((uint64_t)v14);
}

void sub_20C81D86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C81D898@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x24BDAC8D0];
  v4 = operator new(0x18uLL);
  sub_20BF4C6D0(v6, a1);
  sub_20C81D9E8(v4, v6);
  sub_20C81DAB0(a2, (uint64_t)v4);
  return sub_20BF4C2D8((uint64_t)v6);
}

void sub_20C81D92C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *sub_20C81D960(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C81D9A8();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType::~HdLightTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *sub_20C81D9A8()
{
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *)operator new(0x120uLL);
  pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType::HdLightTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C81D9D4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81D9E8(_QWORD *a1, _QWORD *a2)
{
  *a1 = &unk_24C54F0D0;
  sub_20BF4C6D0(a1 + 1, a2);
  return a1;
}

void sub_20C81DA1C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

void sub_20C81DA30(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54F0D0;
  sub_20BF4C2D8((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C81DA64(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54F0D0;
  sub_20BF4C2D8((uint64_t)a1 + 8);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C81DA9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20BF4C6D0(a2, (_QWORD *)(a1 + 8));
}

uint64_t sub_20C81DAA8()
{
  return 0;
}

_QWORD *sub_20C81DAB0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54F118;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C81DAF8(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C81DB1C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81DB30(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81DB48(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F168))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81DB8C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81DBA0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81DBB8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F1E0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81DBF8(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54F208;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C81DC34(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54F208;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C81DC74@<X0>(uint64_t a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  char *v15;
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  char *result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if (!v2)
    v2 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  v3 = (uint64_t *)((char *)v2 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a1 + 16))
  {
    v8 = sub_20BFCA068((char **)a1, v3);
  }
  else
  {
    v5 = *v3;
    *v4 = *v3;
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 2, v6));
      if ((v7 & 1) == 0)
        *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 = (char *)(v4 + 1);
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if (!v9)
    v9 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  v10 = (uint64_t *)((char *)v9 + 16);
  v11 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v11 >= *(_QWORD *)(a1 + 16))
  {
    v15 = sub_20BFCA068((char **)a1, v10);
  }
  else
  {
    v12 = *v10;
    *v11 = *v10;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        *v11 &= 0xFFFFFFFFFFFFFFF8;
    }
    v15 = (char *)(v11 + 1);
  }
  *(_QWORD *)(a1 + 8) = v15;
  v16 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if (!v16)
    v16 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  v17 = (uint64_t *)((char *)v16 + 24);
  v18 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v18 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_20BFCA068((char **)a1, v17);
  }
  else
  {
    v19 = *v17;
    *v18 = *v17;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        *v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    result = (char *)(v18 + 1);
  }
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_20C81DDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

double sub_20C81DE10@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  double result;
  char *v13;
  __int128 v14;

  v6 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if (!v6)
    v6 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    v9 = operator new(0x18uLL);
    v10 = *(_QWORD *)(a1 + 24);
    *v9 = &unk_24C54F250;
    v9[1] = v10;
    *((_DWORD *)v9 + 4) = *(_DWORD *)(a1 + 32);
    v11 = operator new(0x20uLL);
    v13 = (char *)&unk_24C54F2A8;
LABEL_13:
    *v11 = v13 + 16;
    v11[1] = 0;
    v11[2] = 0;
    v11[3] = v9;
    *a3 = v9;
    a3[1] = v11;
    return result;
  }
  v7 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if (!v7)
    v7 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 2) & 0xFFFFFFFFFFFFFFF8))
  {
    v9 = operator new(0x10uLL);
    *v9 = &unk_24C54F330;
    *((_DWORD *)v9 + 2) = *(_DWORD *)(a1 + 36);
    v11 = operator new(0x20uLL);
    v13 = (char *)&unk_24C54F450;
    goto LABEL_13;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if (!v8)
    v8 = sub_20C809EF0(&pxrInternal__aapl__pxrReserved__::HdRenderBufferSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 3) & 0xFFFFFFFFFFFFFFF8))
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(a1 + 40), (uint64_t *)&v14);
  else
    sub_20C81DFA8((uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16), a2, &v14);
  result = *(double *)&v14;
  *(_OWORD *)a3 = v14;
  return result;
}

void sub_20C81DF8C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  void *v3;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C81DFA8@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD *result;

  v8 = operator new(0x20uLL);
  v9 = *a1;
  *v8 = off_24C54F4D8;
  v8[1] = v9;
  sub_20BFD6E54((_DWORD *)v8 + 4, a2);
  sub_20BFD6EA4((_DWORD *)v8 + 5, a2 + 1);
  v10 = *a3;
  v8[3] = *a3;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      v8[3] &= 0xFFFFFFFFFFFFFFF8;
  }
  *a4 = v8;
  result = operator new(0x20uLL);
  *result = &off_24C54F520;
  result[1] = 0;
  result[2] = 0;
  result[3] = v8;
  a4[1] = result;
  return result;
}

void sub_20C81E064(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_20C81E084(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

_DWORD *sub_20C81E098@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _DWORD *result;
  unsigned int *v5;
  unsigned int v6;

  a2[1] = (char *)&off_24C525AD8 + 2;
  result = operator new(0x10uLL);
  *(_QWORD *)result = *(_QWORD *)(a1 + 8);
  result[2] = *(_DWORD *)(a1 + 16);
  v5 = result + 3;
  atomic_store(0, result + 3);
  *a2 = result;
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
  return result;
}

uint64_t sub_20C81E0FC()
{
  return 0;
}

uint64_t sub_20C81E104(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

void sub_20C81E118(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81E12C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81E144(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F308))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81E188(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C81E19C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = (char *)&off_24C54F388 + 3;
  *(_DWORD *)a2 = *(_DWORD *)(result + 8);
  return result;
}

uint64_t sub_20C81E1B8()
{
  return 0;
}

uint64_t sub_20C81E1C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

_DWORD *sub_20C81E1C8(_DWORD *result, _DWORD *a2)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_20C81E1D8(_DWORD *result, _DWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_20C81E1E4()
{
  return 1;
}

unint64_t sub_20C81E1EC(int *a1)
{
  return bswap64(0x9E3779B97F4A7C55 * *a1);
}

BOOL sub_20C81E20C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_20C81E220(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20C81E238()
{
  return 0;
}

void *sub_20C81E248()
{
  return &unk_24C54F440;
}

uint64_t sub_20C81E254()
{
  return 0;
}

uint64_t sub_20C81E25C()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C81E268()
{
  return 0;
}

uint64_t sub_20C81E270()
{
  return 0;
}

BOOL sub_20C81E278(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB2DE4CLL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C81E2B0(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C54F440, a2, a3);
}

void *sub_20C81E2D0()
{
  return &unk_24C54F440;
}

_DWORD *sub_20C81E2E0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = (char *)&off_24C54F388 + 3;
  *(_DWORD *)a2 = *result;
  return result;
}

_QWORD *sub_20C81E2FC(unsigned int *a1, _QWORD *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *v5;
  void *__p[2];
  unsigned __int8 v8;

  pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C54F440, *a1, (uint64_t)__p);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  v5 = sub_20BDDC1C8(a2, (uint64_t)v3, v4);
  if ((char)v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_20C81E370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C81E390(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81E3A4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81E3BC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F4B0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81E3FC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54F4D8;
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C81E45C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54F4D8;
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

uint64_t sub_20C81E4C0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 8) + 120))(*(_QWORD *)(a1 + 8), a1 + 16, a1 + 24);
}

uint64_t sub_20C81E4DC()
{
  return 0;
}

void sub_20C81E4E8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81E4FC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81E514(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F570))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81E558(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C81E56C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C81E584(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F5E8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C81E5C4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54F610;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C81E600(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54F610;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C81E640@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 v2;
  _QWORD *v4;
  int v5;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_25498DD88);
  if ((v2 & 1) == 0)
  {
    v4 = a1;
    v5 = __cxa_guard_acquire(&qword_25498DD88);
    a1 = v4;
    if (v5)
    {
      v6 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      if (!v6)
        v6 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      v7 = *((_QWORD *)v6 + 1);
      v31 = v7;
      if ((v7 & 7) != 0)
      {
        v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 2, v8));
        if ((v9 & 1) == 0)
          v31 &= 0xFFFFFFFFFFFFFFF8;
      }
      v10 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      if (!v10)
        v10 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      v11 = *((_QWORD *)v10 + 3);
      v32 = v11;
      if ((v11 & 7) != 0)
      {
        v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 2, v12));
        if ((v13 & 1) == 0)
          v32 &= 0xFFFFFFFFFFFFFFF8;
      }
      v14 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      if (!v14)
        v14 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      v15 = *((_QWORD *)v14 + 4);
      v33 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 2, v16));
        if ((v17 & 1) == 0)
          v33 &= 0xFFFFFFFFFFFFFFF8;
      }
      v18 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      if (!v18)
        v18 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      v19 = *((_QWORD *)v18 + 5);
      v34 = v19;
      if ((v19 & 7) != 0)
      {
        v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 2, v20));
        if ((v21 & 1) == 0)
          v34 &= 0xFFFFFFFFFFFFFFF8;
      }
      v22 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      if (!v22)
        v22 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
      v23 = *((_QWORD *)v22 + 6);
      v35 = v23;
      if ((v23 & 7) != 0)
      {
        v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 2, v24));
        if ((v25 & 1) == 0)
          v35 &= 0xFFFFFFFFFFFFFFF8;
      }
      sub_20C374970(qword_25498DD70, &v31, 5uLL);
      v26 = &v36;
      do
      {
        v28 = *--v26;
        v27 = v28;
        if ((v28 & 7) != 0)
        {
          v29 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
          do
            v30 = __ldxr(v29);
          while (__stlxr(v30 - 2, v29));
        }
      }
      while (v26 != &v31);
      __cxa_atexit((void (*)(void *))sub_20C1984B4, qword_25498DD70, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DD88);
      a1 = v4;
    }
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return sub_20BFE538C(a1, (uint64_t *)qword_25498DD70[0], unk_25498DD78, (unk_25498DD78 - qword_25498DD70[0]) >> 3);
}

void sub_20C81E900(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498DD88);
  _Unwind_Resume(a1);
}

double sub_20C81E988@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::VtDictionary *v9;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  _QWORD *v33;
  char *v34;
  __int128 v35;
  int64x2_t v36;
  _OWORD *v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  std::__shared_weak_count *v71;
  unint64_t *v72;
  unint64_t v73;
  std::__shared_weak_count *v74;
  unint64_t *v75;
  unint64_t v76;
  std::__shared_weak_count *v77;
  unint64_t *v78;
  unint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  std::__shared_weak_count_vtbl *v94;
  std::__shared_weak_count *v95;
  uint64_t v96;
  uint64_t v97;
  std::__shared_weak_count_vtbl *v98;
  std::__shared_weak_count *v99;
  uint64_t v100;
  char *v101;
  std::__shared_weak_count *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  _QWORD *v117;
  char *v118;
  __int128 v119;
  int64x2_t v120;
  _OWORD *v121;
  uint64_t v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  std::__shared_weak_count *v129;
  unint64_t *v130;
  unint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  std::__shared_weak_count *v135;
  unint64_t *v136;
  unint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  std::__shared_weak_count *v141;
  unint64_t *p_shared_owners;
  unint64_t v143;
  std::__shared_weak_count *v144;
  unint64_t *v145;
  unint64_t v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  unint64_t v149;
  std::__shared_weak_count *v150;
  unint64_t *v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  std::__shared_weak_count *v156;
  unint64_t *v157;
  unint64_t v158;
  std::__shared_weak_count *v159;
  unint64_t *v160;
  unint64_t v161;
  std::__shared_weak_count *v162;
  unint64_t *v163;
  unint64_t v164;
  std::__shared_weak_count *v165;
  unint64_t *v166;
  unint64_t v167;
  std::__shared_weak_count *v168;
  unint64_t *v169;
  unint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  std::__shared_weak_count *v174;
  unint64_t *v175;
  unint64_t v176;
  std::__shared_weak_count *v177;
  unint64_t *v178;
  unint64_t v179;
  std::__shared_weak_count *v180;
  unint64_t *v181;
  unint64_t v182;
  std::__shared_weak_count *v183;
  unint64_t *v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  std::__shared_weak_count *v189;
  unint64_t *v190;
  unint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  std::__shared_weak_count *v195;
  unint64_t *v196;
  unint64_t v197;
  std::__shared_weak_count *v198;
  unint64_t *v199;
  unint64_t v200;
  std::__shared_weak_count *v201;
  unint64_t *v202;
  unint64_t v203;
  std::__shared_weak_count *v204;
  unint64_t *v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  std::__shared_weak_count *v213;
  unint64_t *v214;
  unint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  std::__shared_weak_count *v219;
  unint64_t *v220;
  unint64_t v221;
  std::__shared_weak_count *v222;
  unint64_t *v223;
  unint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  std::__shared_weak_count *v228;
  unint64_t *v229;
  unint64_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  std::__shared_weak_count *v234;
  unint64_t *v235;
  unint64_t v236;
  std::__shared_weak_count *v237;
  unint64_t *v238;
  unint64_t v239;
  __int128 *v240;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v241;
  uint64_t v242;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *v243;
  uint64_t v244;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v245;
  uint64_t v246;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *v247;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *v248;
  uint64_t v249;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *v250;
  uint64_t *v251;
  double result;
  _OWORD *v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  std::__shared_weak_count *v264;
  char *v265;
  std::__shared_weak_count *v266;
  uint64_t v267;
  std::__shared_weak_count *v268;
  std::__shared_weak_count_vtbl *v269;
  std::__shared_weak_count *v270;
  __int128 v271;
  __int128 v272;
  uint64_t v273;
  std::__shared_weak_count *v274;
  std::__shared_weak_count_vtbl *v275;
  std::__shared_weak_count *v276;
  __int128 v277;
  __int128 v278;
  uint64_t v279;
  uint64_t v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  int64x2_t v293;
  _QWORD v294[2];
  int64x2_t v295;
  _QWORD v296[2];
  _BYTE v297[24];
  uint64_t v298;
  _QWORD *v299;
  uint64_t *v300;
  uint64_t v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  uint64_t v315;

  v315 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if (!v6)
    v6 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    v7 = *(_QWORD *)(a1 + 8);
    v8 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    if (!v8)
      v8 = sub_20C820810(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 120))(&v302, v7, a1 + 16, (uint64_t)v8 + 8);
    if ((sub_20BF4A73C((pxrInternal__aapl__pxrReserved__::VtValue *)&v302) & 1) != 0)
    {
      if ((BYTE8(v302) & 4) != 0)
        v9 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v302 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v302);
      else
        v9 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)v302;
      sub_20C8203B0(v9, v297);
      goto LABEL_353;
    }
    sub_20BF4C2D8((uint64_t)&v302);
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if (!v10)
    v10 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 3) & 0xFFFFFFFFFFFFFFF8))
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    if (!v12)
      v12 = sub_20C820810(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    (*(void (**)(uint64_t **__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v11 + 120))(&v300, v11, a1 + 16, (uint64_t)v12 + 16);
    if ((sub_20C820798((pxrInternal__aapl__pxrReserved__::VtValue *)&v300) & 1) != 0)
    {
      if ((v301 & 4) != 0)
        v13 = (uint64_t *)(*(uint64_t (**)(uint64_t **))((v301 & 0xFFFFFFFFFFFFFFF8) + 168))(&v300);
      else
        v13 = v300;
      v253 = a3;
      v296[0] = 0;
      v295 = 0uLL;
      sub_20BE0ECB0((char **)&v295, 0xEEEEEEEEEEEEEEEFLL * ((v13[1] - *v13) >> 3));
      v14 = *v13;
      v15 = v13[1];
      if (*v13 != v15)
      {
        do
        {
          v293 = 0uLL;
          v294[0] = 0;
          v16 = *(_QWORD *)(v14 + 32);
          v17 = *(_QWORD *)(v14 + 40);
          while (v16 != v17)
          {
            v305 = 0uLL;
            v306 = 0uLL;
            v303 = 0uLL;
            v304 = 0uLL;
            v302 = 0uLL;
            sub_20C7FFBBC((_DWORD *)v16, &v289);
            v290 = v289;
            v289 = 0uLL;
            v18 = pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder::SetPath(&v302, (uint64_t *)&v290);
            sub_20C7EA9FC((uint64_t *)(v16 + 8), &v287);
            v288 = v287;
            v287 = 0uLL;
            v19 = pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder::SetDataType((uint64_t)v18, (uint64_t *)&v288);
            pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v281);
            sub_20C7EA9FC((uint64_t *)&v281, &v285);
            v286 = v285;
            v285 = 0uLL;
            v20 = pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder::SetSourceName(v19, (uint64_t *)&v286);
            sub_20C7EA9FC((uint64_t *)(v16 + 40), &v283);
            v284 = v283;
            v283 = 0uLL;
            v21 = pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder::SetSourceType(v20, (uint64_t *)&v284);
            sub_20C8203B0((pxrInternal__aapl__pxrReserved__::VtDictionary *)(v16 + 48), &v282);
            v22 = (pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder::SetNamespacedSettings(v21, (uint64_t *)&v282);
            pxrInternal__aapl__pxrReserved__::HdRenderVarSchema::Builder::Build(v22, &v291);
            v23 = v291;
            v292 = v291;
            v291 = 0uLL;
            v24 = v293.i64[1];
            if (v293.i64[1] >= v294[0])
            {
              v254 = v23;
              v25 = (v293.i64[1] - v293.i64[0]) >> 4;
              v26 = v25 + 1;
              if ((unint64_t)(v25 + 1) >> 60)
                sub_20BDDF694();
              v27 = v294[0] - v293.i64[0];
              if ((v294[0] - v293.i64[0]) >> 3 > v26)
                v26 = v27 >> 3;
              if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF0)
                v28 = 0xFFFFFFFFFFFFFFFLL;
              else
                v28 = v26;
              v299 = v294;
              v29 = (char *)sub_20BDEA2F0((uint64_t)v294, v28);
              v31 = &v29[16 * v25];
              *(_OWORD *)v31 = v254;
              v292 = 0uLL;
              v32 = (_QWORD *)v293.i64[1];
              v33 = (_QWORD *)v293.i64[0];
              if (v293.i64[1] == v293.i64[0])
              {
                v36 = vdupq_n_s64(v293.u64[1]);
                v34 = &v29[16 * v25];
              }
              else
              {
                v34 = &v29[16 * v25];
                do
                {
                  v35 = *((_OWORD *)v32 - 1);
                  v32 -= 2;
                  *((_OWORD *)v34 - 1) = v35;
                  v34 -= 16;
                  *v32 = 0;
                  v32[1] = 0;
                }
                while (v32 != v33);
                v36 = v293;
              }
              v37 = v31 + 16;
              v293.i64[0] = (uint64_t)v34;
              v293.i64[1] = (uint64_t)(v31 + 16);
              *(int64x2_t *)&v297[8] = v36;
              v38 = v294[0];
              v294[0] = &v29[16 * v30];
              v298 = v38;
              *(_QWORD *)v297 = v36.i64[0];
              sub_20BDEA324((uint64_t)v297);
              v39 = (std::__shared_weak_count *)*((_QWORD *)&v291 + 1);
              v293.i64[1] = (uint64_t)v37;
              if (*((_QWORD *)&v291 + 1))
              {
                v40 = (unint64_t *)(*((_QWORD *)&v291 + 1) + 8);
                do
                  v41 = __ldaxr(v40);
                while (__stlxr(v41 - 1, v40));
                if (!v41)
                {
                  ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                  std::__shared_weak_count::__release_weak(v39);
                }
              }
            }
            else
            {
              *(_OWORD *)v293.i64[1] = v23;
              v292 = 0uLL;
              v293.i64[1] = v24 + 16;
            }
            v42 = (std::__shared_weak_count *)*((_QWORD *)&v282 + 1);
            if (*((_QWORD *)&v282 + 1))
            {
              v43 = (unint64_t *)(*((_QWORD *)&v282 + 1) + 8);
              do
                v44 = __ldaxr(v43);
              while (__stlxr(v44 - 1, v43));
              if (!v44)
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
            }
            v45 = (std::__shared_weak_count *)*((_QWORD *)&v284 + 1);
            if (*((_QWORD *)&v284 + 1))
            {
              v46 = (unint64_t *)(*((_QWORD *)&v284 + 1) + 8);
              do
                v47 = __ldaxr(v46);
              while (__stlxr(v47 - 1, v46));
              if (!v47)
              {
                ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
                std::__shared_weak_count::__release_weak(v45);
              }
            }
            v48 = (std::__shared_weak_count *)*((_QWORD *)&v283 + 1);
            if (*((_QWORD *)&v283 + 1))
            {
              v49 = (unint64_t *)(*((_QWORD *)&v283 + 1) + 8);
              do
                v50 = __ldaxr(v49);
              while (__stlxr(v50 - 1, v49));
              if (!v50)
              {
                ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                std::__shared_weak_count::__release_weak(v48);
              }
            }
            v51 = (std::__shared_weak_count *)*((_QWORD *)&v286 + 1);
            if (*((_QWORD *)&v286 + 1))
            {
              v52 = (unint64_t *)(*((_QWORD *)&v286 + 1) + 8);
              do
                v53 = __ldaxr(v52);
              while (__stlxr(v53 - 1, v52));
              if (!v53)
              {
                ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
                std::__shared_weak_count::__release_weak(v51);
              }
            }
            v54 = (std::__shared_weak_count *)*((_QWORD *)&v285 + 1);
            if (*((_QWORD *)&v285 + 1))
            {
              v55 = (unint64_t *)(*((_QWORD *)&v285 + 1) + 8);
              do
                v56 = __ldaxr(v55);
              while (__stlxr(v56 - 1, v55));
              if (!v56)
              {
                ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
                std::__shared_weak_count::__release_weak(v54);
              }
            }
            if ((v281 & 7) != 0)
            {
              v57 = (unsigned int *)(v281 & 0xFFFFFFFFFFFFFFF8);
              do
                v58 = __ldxr(v57);
              while (__stlxr(v58 - 2, v57));
            }
            v59 = (std::__shared_weak_count *)*((_QWORD *)&v288 + 1);
            if (*((_QWORD *)&v288 + 1))
            {
              v60 = (unint64_t *)(*((_QWORD *)&v288 + 1) + 8);
              do
                v61 = __ldaxr(v60);
              while (__stlxr(v61 - 1, v60));
              if (!v61)
              {
                ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                std::__shared_weak_count::__release_weak(v59);
              }
            }
            v62 = (std::__shared_weak_count *)*((_QWORD *)&v287 + 1);
            if (*((_QWORD *)&v287 + 1))
            {
              v63 = (unint64_t *)(*((_QWORD *)&v287 + 1) + 8);
              do
                v64 = __ldaxr(v63);
              while (__stlxr(v64 - 1, v63));
              if (!v64)
              {
                ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                std::__shared_weak_count::__release_weak(v62);
              }
            }
            v65 = (std::__shared_weak_count *)*((_QWORD *)&v290 + 1);
            if (*((_QWORD *)&v290 + 1))
            {
              v66 = (unint64_t *)(*((_QWORD *)&v290 + 1) + 8);
              do
                v67 = __ldaxr(v66);
              while (__stlxr(v67 - 1, v66));
              if (!v67)
              {
                ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                std::__shared_weak_count::__release_weak(v65);
              }
            }
            v68 = (std::__shared_weak_count *)*((_QWORD *)&v289 + 1);
            if (*((_QWORD *)&v289 + 1))
            {
              v69 = (unint64_t *)(*((_QWORD *)&v289 + 1) + 8);
              do
                v70 = __ldaxr(v69);
              while (__stlxr(v70 - 1, v69));
              if (!v70)
              {
                ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
                std::__shared_weak_count::__release_weak(v68);
              }
            }
            v71 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
            if (*((_QWORD *)&v306 + 1))
            {
              v72 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
              do
                v73 = __ldaxr(v72);
              while (__stlxr(v73 - 1, v72));
              if (!v73)
              {
                ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
                std::__shared_weak_count::__release_weak(v71);
              }
            }
            v74 = (std::__shared_weak_count *)*((_QWORD *)&v305 + 1);
            if (*((_QWORD *)&v305 + 1))
            {
              v75 = (unint64_t *)(*((_QWORD *)&v305 + 1) + 8);
              do
                v76 = __ldaxr(v75);
              while (__stlxr(v76 - 1, v75));
              if (!v76)
              {
                ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
                std::__shared_weak_count::__release_weak(v74);
              }
            }
            v77 = (std::__shared_weak_count *)*((_QWORD *)&v304 + 1);
            if (*((_QWORD *)&v304 + 1))
            {
              v78 = (unint64_t *)(*((_QWORD *)&v304 + 1) + 8);
              do
                v79 = __ldaxr(v78);
              while (__stlxr(v79 - 1, v78));
              if (!v79)
              {
                ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
                std::__shared_weak_count::__release_weak(v77);
              }
            }
            v80 = (std::__shared_weak_count *)*((_QWORD *)&v303 + 1);
            if (*((_QWORD *)&v303 + 1))
            {
              v81 = (unint64_t *)(*((_QWORD *)&v303 + 1) + 8);
              do
                v82 = __ldaxr(v81);
              while (__stlxr(v82 - 1, v81));
              if (!v82)
              {
                ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
                std::__shared_weak_count::__release_weak(v80);
              }
            }
            v83 = (std::__shared_weak_count *)*((_QWORD *)&v302 + 1);
            if (*((_QWORD *)&v302 + 1))
            {
              v84 = (unint64_t *)(*((_QWORD *)&v302 + 1) + 8);
              do
                v85 = __ldaxr(v84);
              while (__stlxr(v85 - 1, v84));
              if (!v85)
              {
                ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
                std::__shared_weak_count::__release_weak(v83);
              }
            }
            v16 += 56;
          }
          v313 = 0uLL;
          v314 = 0uLL;
          v311 = 0uLL;
          v312 = 0uLL;
          v309 = 0uLL;
          v310 = 0uLL;
          v307 = 0uLL;
          v308 = 0uLL;
          v305 = 0uLL;
          v306 = 0uLL;
          v303 = 0uLL;
          v304 = 0uLL;
          v302 = 0uLL;
          sub_20C7FFBBC((_DWORD *)v14, &v289);
          v290 = v289;
          v289 = 0uLL;
          v86 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetPath(&v302, (uint64_t *)&v290);
          sub_20C7EA9FC((uint64_t *)(v14 + 8), &v287);
          v288 = v287;
          v287 = 0uLL;
          v87 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetType((uint64_t)v86, (uint64_t *)&v288);
          sub_20C7EA9FC((uint64_t *)(v14 + 16), &v285);
          v286 = v285;
          v285 = 0uLL;
          v88 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetName(v87, (uint64_t *)&v286);
          v89 = operator new(0x10uLL);
          *v89 = &unk_24C54F668;
          v89[1] = *(_QWORD *)(v14 + 24);
          v90 = operator new(0x20uLL);
          *v90 = &unk_24C54F6D0;
          v90[1] = 0;
          v90[2] = 0;
          v90[3] = v89;
          *(_QWORD *)&v284 = v89;
          *((_QWORD *)&v284 + 1) = v90;
          v283 = 0uLL;
          v91 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetResolution(v88, (uint64_t *)&v284);
          v279 = v293.i64[0];
          v280 = (v293.i64[1] - v293.i64[0]) >> 4;
          sub_20C820960(&v280, &v279, &v281);
          v282 = v281;
          v281 = 0uLL;
          v92 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetRenderVars(v91, (uint64_t *)&v282);
          sub_20C7FFBBC((_DWORD *)(v14 + 56), &v277);
          v278 = v277;
          v277 = 0uLL;
          v93 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetCameraPrim(v92, (uint64_t *)&v278);
          v94 = (std::__shared_weak_count_vtbl *)operator new(0x10uLL);
          v94->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))&unk_24C54F748;
          LODWORD(v94->~__shared_weak_count_0) = *(_DWORD *)(v14 + 64);
          v95 = (std::__shared_weak_count *)operator new(0x20uLL);
          v95->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54F798;
          v95->__shared_owners_ = 0;
          v95->__shared_weak_owners_ = 0;
          v95[1].__vftable = v94;
          v275 = v94;
          v276 = v95;
          v273 = 0;
          v274 = 0;
          v96 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetPixelAspectRatio(v93, (uint64_t *)&v275);
          sub_20C7EA9FC((uint64_t *)(v14 + 72), &v271);
          v272 = v271;
          v271 = 0uLL;
          v97 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetAspectRatioConformPolicy(v96, (uint64_t *)&v272);
          v98 = (std::__shared_weak_count_vtbl *)operator new(0x10uLL);
          v98->~__shared_weak_count = (void (__cdecl *)(std::__shared_weak_count *__hidden))&unk_24C54E778;
          v98->~__shared_weak_count_0 = *(void (__cdecl **)(std::__shared_weak_count *__hidden))(v14 + 80);
          v99 = (std::__shared_weak_count *)operator new(0x20uLL);
          v99->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54E7C8;
          v99->__shared_owners_ = 0;
          v99->__shared_weak_owners_ = 0;
          v99[1].__vftable = v98;
          v269 = v98;
          v270 = v99;
          v267 = 0;
          v268 = 0;
          v100 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetApertureSize(v97, (uint64_t *)&v269);
          v255 = *(_OWORD *)(v14 + 88);
          v101 = (char *)operator new(0x18uLL);
          *(_QWORD *)v101 = &unk_24C54F810;
          *(_OWORD *)(v101 + 8) = v255;
          v102 = (std::__shared_weak_count *)operator new(0x20uLL);
          v102->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C54F878;
          v102->__shared_owners_ = 0;
          v102->__shared_weak_owners_ = 0;
          v102[1].__vftable = (std::__shared_weak_count_vtbl *)v101;
          v265 = v101;
          v266 = v102;
          v263 = 0;
          v264 = 0;
          v103 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetDataWindowNDC(v100, (uint64_t *)&v265);
          pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(v14 + 104), (uint64_t *)&v261);
          v262 = v261;
          v261 = 0uLL;
          v104 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetDisableMotionBlur(v103, (uint64_t *)&v262);
          pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New((_BYTE *)(v14 + 105), (uint64_t *)&v259);
          v260 = v259;
          v259 = 0uLL;
          v105 = pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetDisableDepthOfField(v104, (uint64_t *)&v260);
          sub_20C8203B0((pxrInternal__aapl__pxrReserved__::VtDictionary *)(v14 + 112), &v258);
          v106 = (pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::SetNamespacedSettings(v105, (uint64_t *)&v258);
          pxrInternal__aapl__pxrReserved__::HdRenderProductSchema::Builder::Build(v106, &v291);
          v107 = v291;
          v292 = v291;
          v291 = 0uLL;
          v108 = v295.i64[1];
          if (v295.i64[1] >= v296[0])
          {
            v256 = v107;
            v109 = (v295.i64[1] - v295.i64[0]) >> 4;
            v110 = v109 + 1;
            if ((unint64_t)(v109 + 1) >> 60)
              sub_20BDDF694();
            v111 = v296[0] - v295.i64[0];
            if ((v296[0] - v295.i64[0]) >> 3 > v110)
              v110 = v111 >> 3;
            if ((unint64_t)v111 >= 0x7FFFFFFFFFFFFFF0)
              v112 = 0xFFFFFFFFFFFFFFFLL;
            else
              v112 = v110;
            v299 = v296;
            v113 = (char *)sub_20BDEA2F0((uint64_t)v296, v112);
            v115 = &v113[16 * v109];
            *(_OWORD *)v115 = v256;
            v292 = 0uLL;
            v116 = (_QWORD *)v295.i64[1];
            v117 = (_QWORD *)v295.i64[0];
            if (v295.i64[1] == v295.i64[0])
            {
              v120 = vdupq_n_s64(v295.u64[1]);
              v118 = &v113[16 * v109];
            }
            else
            {
              v118 = &v113[16 * v109];
              do
              {
                v119 = *((_OWORD *)v116 - 1);
                v116 -= 2;
                *((_OWORD *)v118 - 1) = v119;
                v118 -= 16;
                *v116 = 0;
                v116[1] = 0;
              }
              while (v116 != v117);
              v120 = v295;
            }
            v121 = v115 + 16;
            v295.i64[0] = (uint64_t)v118;
            v295.i64[1] = (uint64_t)(v115 + 16);
            *(int64x2_t *)&v297[8] = v120;
            v122 = v296[0];
            v296[0] = &v113[16 * v114];
            v298 = v122;
            *(_QWORD *)v297 = v120.i64[0];
            sub_20BDEA324((uint64_t)v297);
            v123 = (std::__shared_weak_count *)*((_QWORD *)&v291 + 1);
            v295.i64[1] = (uint64_t)v121;
            if (*((_QWORD *)&v291 + 1))
            {
              v124 = (unint64_t *)(*((_QWORD *)&v291 + 1) + 8);
              do
                v125 = __ldaxr(v124);
              while (__stlxr(v125 - 1, v124));
              if (!v125)
              {
                ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
                std::__shared_weak_count::__release_weak(v123);
              }
            }
          }
          else
          {
            *(_OWORD *)v295.i64[1] = v107;
            v292 = 0uLL;
            v295.i64[1] = v108 + 16;
          }
          v126 = (std::__shared_weak_count *)*((_QWORD *)&v258 + 1);
          if (*((_QWORD *)&v258 + 1))
          {
            v127 = (unint64_t *)(*((_QWORD *)&v258 + 1) + 8);
            do
              v128 = __ldaxr(v127);
            while (__stlxr(v128 - 1, v127));
            if (!v128)
            {
              ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
              std::__shared_weak_count::__release_weak(v126);
            }
          }
          v129 = (std::__shared_weak_count *)*((_QWORD *)&v260 + 1);
          if (*((_QWORD *)&v260 + 1))
          {
            v130 = (unint64_t *)(*((_QWORD *)&v260 + 1) + 8);
            do
              v131 = __ldaxr(v130);
            while (__stlxr(v131 - 1, v130));
            if (!v131)
            {
              ((void (*)(std::__shared_weak_count *))v129->__on_zero_shared)(v129);
              std::__shared_weak_count::__release_weak(v129);
            }
          }
          v132 = (std::__shared_weak_count *)*((_QWORD *)&v259 + 1);
          if (*((_QWORD *)&v259 + 1))
          {
            v133 = (unint64_t *)(*((_QWORD *)&v259 + 1) + 8);
            do
              v134 = __ldaxr(v133);
            while (__stlxr(v134 - 1, v133));
            if (!v134)
            {
              ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
              std::__shared_weak_count::__release_weak(v132);
            }
          }
          v135 = (std::__shared_weak_count *)*((_QWORD *)&v262 + 1);
          if (*((_QWORD *)&v262 + 1))
          {
            v136 = (unint64_t *)(*((_QWORD *)&v262 + 1) + 8);
            do
              v137 = __ldaxr(v136);
            while (__stlxr(v137 - 1, v136));
            if (!v137)
            {
              ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
              std::__shared_weak_count::__release_weak(v135);
            }
          }
          v138 = (std::__shared_weak_count *)*((_QWORD *)&v261 + 1);
          if (*((_QWORD *)&v261 + 1))
          {
            v139 = (unint64_t *)(*((_QWORD *)&v261 + 1) + 8);
            do
              v140 = __ldaxr(v139);
            while (__stlxr(v140 - 1, v139));
            if (!v140)
            {
              ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
              std::__shared_weak_count::__release_weak(v138);
            }
          }
          v141 = v266;
          if (v266)
          {
            p_shared_owners = (unint64_t *)&v266->__shared_owners_;
            do
              v143 = __ldaxr(p_shared_owners);
            while (__stlxr(v143 - 1, p_shared_owners));
            if (!v143)
            {
              ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
              std::__shared_weak_count::__release_weak(v141);
            }
          }
          v144 = v264;
          if (v264)
          {
            v145 = (unint64_t *)&v264->__shared_owners_;
            do
              v146 = __ldaxr(v145);
            while (__stlxr(v146 - 1, v145));
            if (!v146)
            {
              ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
              std::__shared_weak_count::__release_weak(v144);
            }
          }
          v147 = v270;
          if (v270)
          {
            v148 = (unint64_t *)&v270->__shared_owners_;
            do
              v149 = __ldaxr(v148);
            while (__stlxr(v149 - 1, v148));
            if (!v149)
            {
              ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
              std::__shared_weak_count::__release_weak(v147);
            }
          }
          v150 = v268;
          if (v268)
          {
            v151 = (unint64_t *)&v268->__shared_owners_;
            do
              v152 = __ldaxr(v151);
            while (__stlxr(v152 - 1, v151));
            if (!v152)
            {
              ((void (*)(std::__shared_weak_count *))v150->__on_zero_shared)(v150);
              std::__shared_weak_count::__release_weak(v150);
            }
          }
          v153 = (std::__shared_weak_count *)*((_QWORD *)&v272 + 1);
          if (*((_QWORD *)&v272 + 1))
          {
            v154 = (unint64_t *)(*((_QWORD *)&v272 + 1) + 8);
            do
              v155 = __ldaxr(v154);
            while (__stlxr(v155 - 1, v154));
            if (!v155)
            {
              ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
              std::__shared_weak_count::__release_weak(v153);
            }
          }
          v156 = (std::__shared_weak_count *)*((_QWORD *)&v271 + 1);
          if (*((_QWORD *)&v271 + 1))
          {
            v157 = (unint64_t *)(*((_QWORD *)&v271 + 1) + 8);
            do
              v158 = __ldaxr(v157);
            while (__stlxr(v158 - 1, v157));
            if (!v158)
            {
              ((void (*)(std::__shared_weak_count *))v156->__on_zero_shared)(v156);
              std::__shared_weak_count::__release_weak(v156);
            }
          }
          v159 = v276;
          if (v276)
          {
            v160 = (unint64_t *)&v276->__shared_owners_;
            do
              v161 = __ldaxr(v160);
            while (__stlxr(v161 - 1, v160));
            if (!v161)
            {
              ((void (*)(std::__shared_weak_count *))v159->__on_zero_shared)(v159);
              std::__shared_weak_count::__release_weak(v159);
            }
          }
          v162 = v274;
          if (v274)
          {
            v163 = (unint64_t *)&v274->__shared_owners_;
            do
              v164 = __ldaxr(v163);
            while (__stlxr(v164 - 1, v163));
            if (!v164)
            {
              ((void (*)(std::__shared_weak_count *))v162->__on_zero_shared)(v162);
              std::__shared_weak_count::__release_weak(v162);
            }
          }
          v165 = (std::__shared_weak_count *)*((_QWORD *)&v278 + 1);
          if (*((_QWORD *)&v278 + 1))
          {
            v166 = (unint64_t *)(*((_QWORD *)&v278 + 1) + 8);
            do
              v167 = __ldaxr(v166);
            while (__stlxr(v167 - 1, v166));
            if (!v167)
            {
              ((void (*)(std::__shared_weak_count *))v165->__on_zero_shared)(v165);
              std::__shared_weak_count::__release_weak(v165);
            }
          }
          v168 = (std::__shared_weak_count *)*((_QWORD *)&v277 + 1);
          if (*((_QWORD *)&v277 + 1))
          {
            v169 = (unint64_t *)(*((_QWORD *)&v277 + 1) + 8);
            do
              v170 = __ldaxr(v169);
            while (__stlxr(v170 - 1, v169));
            if (!v170)
            {
              ((void (*)(std::__shared_weak_count *))v168->__on_zero_shared)(v168);
              std::__shared_weak_count::__release_weak(v168);
            }
          }
          v171 = (std::__shared_weak_count *)*((_QWORD *)&v282 + 1);
          if (*((_QWORD *)&v282 + 1))
          {
            v172 = (unint64_t *)(*((_QWORD *)&v282 + 1) + 8);
            do
              v173 = __ldaxr(v172);
            while (__stlxr(v173 - 1, v172));
            if (!v173)
            {
              ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
              std::__shared_weak_count::__release_weak(v171);
            }
          }
          v174 = (std::__shared_weak_count *)*((_QWORD *)&v281 + 1);
          if (*((_QWORD *)&v281 + 1))
          {
            v175 = (unint64_t *)(*((_QWORD *)&v281 + 1) + 8);
            do
              v176 = __ldaxr(v175);
            while (__stlxr(v176 - 1, v175));
            if (!v176)
            {
              ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
              std::__shared_weak_count::__release_weak(v174);
            }
          }
          v177 = (std::__shared_weak_count *)*((_QWORD *)&v284 + 1);
          if (*((_QWORD *)&v284 + 1))
          {
            v178 = (unint64_t *)(*((_QWORD *)&v284 + 1) + 8);
            do
              v179 = __ldaxr(v178);
            while (__stlxr(v179 - 1, v178));
            if (!v179)
            {
              ((void (*)(std::__shared_weak_count *))v177->__on_zero_shared)(v177);
              std::__shared_weak_count::__release_weak(v177);
            }
          }
          v180 = (std::__shared_weak_count *)*((_QWORD *)&v283 + 1);
          if (*((_QWORD *)&v283 + 1))
          {
            v181 = (unint64_t *)(*((_QWORD *)&v283 + 1) + 8);
            do
              v182 = __ldaxr(v181);
            while (__stlxr(v182 - 1, v181));
            if (!v182)
            {
              ((void (*)(std::__shared_weak_count *))v180->__on_zero_shared)(v180);
              std::__shared_weak_count::__release_weak(v180);
            }
          }
          v183 = (std::__shared_weak_count *)*((_QWORD *)&v286 + 1);
          if (*((_QWORD *)&v286 + 1))
          {
            v184 = (unint64_t *)(*((_QWORD *)&v286 + 1) + 8);
            do
              v185 = __ldaxr(v184);
            while (__stlxr(v185 - 1, v184));
            if (!v185)
            {
              ((void (*)(std::__shared_weak_count *))v183->__on_zero_shared)(v183);
              std::__shared_weak_count::__release_weak(v183);
            }
          }
          v186 = (std::__shared_weak_count *)*((_QWORD *)&v285 + 1);
          if (*((_QWORD *)&v285 + 1))
          {
            v187 = (unint64_t *)(*((_QWORD *)&v285 + 1) + 8);
            do
              v188 = __ldaxr(v187);
            while (__stlxr(v188 - 1, v187));
            if (!v188)
            {
              ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
              std::__shared_weak_count::__release_weak(v186);
            }
          }
          v189 = (std::__shared_weak_count *)*((_QWORD *)&v288 + 1);
          if (*((_QWORD *)&v288 + 1))
          {
            v190 = (unint64_t *)(*((_QWORD *)&v288 + 1) + 8);
            do
              v191 = __ldaxr(v190);
            while (__stlxr(v191 - 1, v190));
            if (!v191)
            {
              ((void (*)(std::__shared_weak_count *))v189->__on_zero_shared)(v189);
              std::__shared_weak_count::__release_weak(v189);
            }
          }
          v192 = (std::__shared_weak_count *)*((_QWORD *)&v287 + 1);
          if (*((_QWORD *)&v287 + 1))
          {
            v193 = (unint64_t *)(*((_QWORD *)&v287 + 1) + 8);
            do
              v194 = __ldaxr(v193);
            while (__stlxr(v194 - 1, v193));
            if (!v194)
            {
              ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
              std::__shared_weak_count::__release_weak(v192);
            }
          }
          v195 = (std::__shared_weak_count *)*((_QWORD *)&v290 + 1);
          if (*((_QWORD *)&v290 + 1))
          {
            v196 = (unint64_t *)(*((_QWORD *)&v290 + 1) + 8);
            do
              v197 = __ldaxr(v196);
            while (__stlxr(v197 - 1, v196));
            if (!v197)
            {
              ((void (*)(std::__shared_weak_count *))v195->__on_zero_shared)(v195);
              std::__shared_weak_count::__release_weak(v195);
            }
          }
          v198 = (std::__shared_weak_count *)*((_QWORD *)&v289 + 1);
          if (*((_QWORD *)&v289 + 1))
          {
            v199 = (unint64_t *)(*((_QWORD *)&v289 + 1) + 8);
            do
              v200 = __ldaxr(v199);
            while (__stlxr(v200 - 1, v199));
            if (!v200)
            {
              ((void (*)(std::__shared_weak_count *))v198->__on_zero_shared)(v198);
              std::__shared_weak_count::__release_weak(v198);
            }
          }
          v201 = (std::__shared_weak_count *)*((_QWORD *)&v314 + 1);
          if (*((_QWORD *)&v314 + 1))
          {
            v202 = (unint64_t *)(*((_QWORD *)&v314 + 1) + 8);
            do
              v203 = __ldaxr(v202);
            while (__stlxr(v203 - 1, v202));
            if (!v203)
            {
              ((void (*)(std::__shared_weak_count *))v201->__on_zero_shared)(v201);
              std::__shared_weak_count::__release_weak(v201);
            }
          }
          v204 = (std::__shared_weak_count *)*((_QWORD *)&v313 + 1);
          if (*((_QWORD *)&v313 + 1))
          {
            v205 = (unint64_t *)(*((_QWORD *)&v313 + 1) + 8);
            do
              v206 = __ldaxr(v205);
            while (__stlxr(v206 - 1, v205));
            if (!v206)
            {
              ((void (*)(std::__shared_weak_count *))v204->__on_zero_shared)(v204);
              std::__shared_weak_count::__release_weak(v204);
            }
          }
          v207 = (std::__shared_weak_count *)*((_QWORD *)&v312 + 1);
          if (*((_QWORD *)&v312 + 1))
          {
            v208 = (unint64_t *)(*((_QWORD *)&v312 + 1) + 8);
            do
              v209 = __ldaxr(v208);
            while (__stlxr(v209 - 1, v208));
            if (!v209)
            {
              ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
              std::__shared_weak_count::__release_weak(v207);
            }
          }
          v210 = (std::__shared_weak_count *)*((_QWORD *)&v311 + 1);
          if (*((_QWORD *)&v311 + 1))
          {
            v211 = (unint64_t *)(*((_QWORD *)&v311 + 1) + 8);
            do
              v212 = __ldaxr(v211);
            while (__stlxr(v212 - 1, v211));
            if (!v212)
            {
              ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
              std::__shared_weak_count::__release_weak(v210);
            }
          }
          v213 = (std::__shared_weak_count *)*((_QWORD *)&v310 + 1);
          if (*((_QWORD *)&v310 + 1))
          {
            v214 = (unint64_t *)(*((_QWORD *)&v310 + 1) + 8);
            do
              v215 = __ldaxr(v214);
            while (__stlxr(v215 - 1, v214));
            if (!v215)
            {
              ((void (*)(std::__shared_weak_count *))v213->__on_zero_shared)(v213);
              std::__shared_weak_count::__release_weak(v213);
            }
          }
          v216 = (std::__shared_weak_count *)*((_QWORD *)&v309 + 1);
          if (*((_QWORD *)&v309 + 1))
          {
            v217 = (unint64_t *)(*((_QWORD *)&v309 + 1) + 8);
            do
              v218 = __ldaxr(v217);
            while (__stlxr(v218 - 1, v217));
            if (!v218)
            {
              ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
              std::__shared_weak_count::__release_weak(v216);
            }
          }
          v219 = (std::__shared_weak_count *)*((_QWORD *)&v308 + 1);
          if (*((_QWORD *)&v308 + 1))
          {
            v220 = (unint64_t *)(*((_QWORD *)&v308 + 1) + 8);
            do
              v221 = __ldaxr(v220);
            while (__stlxr(v221 - 1, v220));
            if (!v221)
            {
              ((void (*)(std::__shared_weak_count *))v219->__on_zero_shared)(v219);
              std::__shared_weak_count::__release_weak(v219);
            }
          }
          v222 = (std::__shared_weak_count *)*((_QWORD *)&v307 + 1);
          if (*((_QWORD *)&v307 + 1))
          {
            v223 = (unint64_t *)(*((_QWORD *)&v307 + 1) + 8);
            do
              v224 = __ldaxr(v223);
            while (__stlxr(v224 - 1, v223));
            if (!v224)
            {
              ((void (*)(std::__shared_weak_count *))v222->__on_zero_shared)(v222);
              std::__shared_weak_count::__release_weak(v222);
            }
          }
          v225 = (std::__shared_weak_count *)*((_QWORD *)&v306 + 1);
          if (*((_QWORD *)&v306 + 1))
          {
            v226 = (unint64_t *)(*((_QWORD *)&v306 + 1) + 8);
            do
              v227 = __ldaxr(v226);
            while (__stlxr(v227 - 1, v226));
            if (!v227)
            {
              ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
              std::__shared_weak_count::__release_weak(v225);
            }
          }
          v228 = (std::__shared_weak_count *)*((_QWORD *)&v305 + 1);
          if (*((_QWORD *)&v305 + 1))
          {
            v229 = (unint64_t *)(*((_QWORD *)&v305 + 1) + 8);
            do
              v230 = __ldaxr(v229);
            while (__stlxr(v230 - 1, v229));
            if (!v230)
            {
              ((void (*)(std::__shared_weak_count *))v228->__on_zero_shared)(v228);
              std::__shared_weak_count::__release_weak(v228);
            }
          }
          v231 = (std::__shared_weak_count *)*((_QWORD *)&v304 + 1);
          if (*((_QWORD *)&v304 + 1))
          {
            v232 = (unint64_t *)(*((_QWORD *)&v304 + 1) + 8);
            do
              v233 = __ldaxr(v232);
            while (__stlxr(v233 - 1, v232));
            if (!v233)
            {
              ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
              std::__shared_weak_count::__release_weak(v231);
            }
          }
          v234 = (std::__shared_weak_count *)*((_QWORD *)&v303 + 1);
          if (*((_QWORD *)&v303 + 1))
          {
            v235 = (unint64_t *)(*((_QWORD *)&v303 + 1) + 8);
            do
              v236 = __ldaxr(v235);
            while (__stlxr(v236 - 1, v235));
            if (!v236)
            {
              ((void (*)(std::__shared_weak_count *))v234->__on_zero_shared)(v234);
              std::__shared_weak_count::__release_weak(v234);
            }
          }
          v237 = (std::__shared_weak_count *)*((_QWORD *)&v302 + 1);
          if (*((_QWORD *)&v302 + 1))
          {
            v238 = (unint64_t *)(*((_QWORD *)&v302 + 1) + 8);
            do
              v239 = __ldaxr(v238);
            while (__stlxr(v239 - 1, v238));
            if (!v239)
            {
              ((void (*)(std::__shared_weak_count *))v237->__on_zero_shared)(v237);
              std::__shared_weak_count::__release_weak(v237);
            }
          }
          *(_QWORD *)&v302 = &v293;
          sub_20BDE9EB0((void ***)&v302);
          v14 += 120;
        }
        while (v14 != v15);
      }
      *(_QWORD *)v297 = (v295.i64[1] - v295.i64[0]) >> 4;
      v293.i64[0] = v295.i64[0];
      sub_20C820960(v297, &v293, &v302);
      v257 = v302;
      *(_QWORD *)&v302 = &v295;
      sub_20BDE9EB0((void ***)&v302);
      *v253 = v257;
      v240 = (__int128 *)&v300;
      goto LABEL_354;
    }
    sub_20BF4C2D8((uint64_t)&v300);
  }
  v241 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if (!v241)
    v241 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v241 + 4) & 0xFFFFFFFFFFFFFFF8))
  {
    v242 = *(_QWORD *)(a1 + 8);
    v243 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    if (!v243)
      v243 = sub_20C820810(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v242 + 120))(&v302, v242, a1 + 16, (uint64_t)v243 + 24);
    if ((sub_20BFED450((pxrInternal__aapl__pxrReserved__::VtValue *)&v302) & 1) != 0)
    {
      if ((BYTE8(v302) & 4) == 0)
      {
        v244 = v302;
LABEL_333:
        sub_20C81052C(v244, v297);
LABEL_353:
        *a3 = *(_OWORD *)v297;
        v240 = &v302;
LABEL_354:
        sub_20BF4C2D8((uint64_t)v240);
        return result;
      }
      goto LABEL_359;
    }
    sub_20BF4C2D8((uint64_t)&v302);
  }
  v245 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if (!v245)
    v245 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v245 + 5) & 0xFFFFFFFFFFFFFFF8))
  {
    v246 = *(_QWORD *)(a1 + 8);
    v247 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    if (!v247)
      v247 = sub_20C820810(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v246 + 120))(&v302, v246, a1 + 16, (uint64_t)v247 + 32);
    if ((sub_20BFED450((pxrInternal__aapl__pxrReserved__::VtValue *)&v302) & 1) != 0)
    {
      if ((BYTE8(v302) & 4) == 0)
      {
        v244 = v302;
        goto LABEL_333;
      }
LABEL_359:
      v244 = (*(uint64_t (**)(__int128 *))((*((_QWORD *)&v302 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v302);
      goto LABEL_333;
    }
    sub_20BF4C2D8((uint64_t)&v302);
  }
  v248 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if (!v248)
    v248 = sub_20C809F78(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v248 + 6) & 0xFFFFFFFFFFFFFFF8))
  {
    v249 = *(_QWORD *)(a1 + 8);
    v250 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    if (!v250)
      v250 = sub_20C820810(&pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v249 + 120))(&v302, v249, a1 + 16, (uint64_t)v250 + 40);
    if ((sub_20BFB5E50((pxrInternal__aapl__pxrReserved__::VtValue *)&v302) & 1) != 0)
    {
      if ((BYTE8(v302) & 4) != 0)
        v251 = (uint64_t *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v302 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v302);
      else
        v251 = (uint64_t *)&v302;
      sub_20C7EA9FC(v251, v297);
      goto LABEL_353;
    }
    sub_20BF4C2D8((uint64_t)&v302);
  }
  sub_20C81DFA8((uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16), a2, &v302);
  result = *(double *)&v302;
  *a3 = v302;
  return result;
}

void sub_20C82008C(_Unwind_Exception *a1)
{
  sub_20BF4C2D8((uint64_t)&STACK[0x290]);
  _Unwind_Resume(a1);
}

void sub_20C8203B0(pxrInternal__aapl__pxrReserved__::VtDictionary *a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  _BOOL4 v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int64x2_t v25;
  char *v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  char *v42;
  __int128 v43;
  int64x2_t v44;
  char *v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  int64x2_t v55;
  _QWORD v56[2];
  int64x2_t v57;
  _QWORD v58[2];
  _BYTE v59[24];
  char *v60;
  _QWORD *v61;

  v57 = 0uLL;
  v58[0] = 0;
  v55 = 0uLL;
  v56[0] = 0;
  v4 = pxrInternal__aapl__pxrReserved__::VtDictionary::size(a1);
  sub_20BFC9A6C((char **)&v57, v4);
  sub_20BE0ECB0((char **)&v55, v4);
  v49 = a2;
  v53 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(a1);
  v54 = v5;
  v6 = pxrInternal__aapl__pxrReserved__::VtDictionary::end(a1);
  v8 = v7;
  while (1)
  {
    v9 = v53;
    v10 = !v8 || v53 == v6;
    v11 = v10;
    if (v54 == v8 && v11)
      break;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&v52);
    v13 = v57.i64[1];
    if (v57.i64[1] >= v58[0])
    {
      v16 = (v57.i64[1] - v57.i64[0]) >> 3;
      if ((unint64_t)(v16 + 1) >> 61)
        sub_20BDDF694();
      v17 = (v58[0] - v57.i64[0]) >> 2;
      if (v17 <= v16 + 1)
        v17 = v16 + 1;
      if (v58[0] - v57.i64[0] >= 0x7FFFFFFFFFFFFFF8uLL)
        v18 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v18 = v17;
      v61 = v58;
      if (v18)
        v19 = (char *)sub_20BDDF6A8((uint64_t)v58, v18);
      else
        v19 = 0;
      v20 = &v19[8 * v16];
      v21 = &v19[8 * v18];
      v60 = v21;
      *(_QWORD *)v20 = v52;
      v15 = v20 + 8;
      *(_QWORD *)&v52 = 0;
      *(_QWORD *)&v59[16] = v20 + 8;
      v22 = (_QWORD *)v57.i64[1];
      v23 = (_QWORD *)v57.i64[0];
      if (v57.i64[1] == v57.i64[0])
      {
        v25 = vdupq_n_s64(v57.u64[1]);
      }
      else
      {
        do
        {
          v24 = *--v22;
          *((_QWORD *)v20 - 1) = v24;
          v20 -= 8;
          *v22 = 0;
        }
        while (v22 != v23);
        v25 = v57;
        v15 = *(_QWORD **)&v59[16];
        v21 = v60;
      }
      v57.i64[0] = (uint64_t)v20;
      v57.i64[1] = (uint64_t)v15;
      *(int64x2_t *)&v59[8] = v25;
      v26 = (char *)v58[0];
      v58[0] = v21;
      v60 = v26;
      *(_QWORD *)v59 = v25.i64[0];
      sub_20BF1EE98((uint64_t)v59);
      v14 = v52;
    }
    else
    {
      v14 = 0;
      *(_QWORD *)v57.i64[1] = v52;
      v15 = (_QWORD *)(v13 + 8);
      *(_QWORD *)&v52 = 0;
    }
    v57.i64[1] = (uint64_t)v15;
    if ((v14 & 7) != 0)
    {
      v27 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
    sub_20C820898((_QWORD *)(v9 + 56), &v51);
    v31 = v51;
    v52 = v51;
    v51 = 0uLL;
    v32 = v55.i64[1];
    if (v55.i64[1] >= v56[0])
    {
      v50 = v31;
      v34 = (v55.i64[1] - v55.i64[0]) >> 4;
      if ((unint64_t)(v34 + 1) >> 60)
        sub_20BDDF694();
      v35 = (v56[0] - v55.i64[0]) >> 3;
      if (v35 <= v34 + 1)
        v35 = v34 + 1;
      if (v56[0] - v55.i64[0] >= 0x7FFFFFFFFFFFFFF0uLL)
        v36 = 0xFFFFFFFFFFFFFFFLL;
      else
        v36 = v35;
      v61 = v56;
      v37 = (char *)sub_20BDEA2F0((uint64_t)v56, v36);
      v39 = &v37[16 * v34];
      *(_OWORD *)v39 = v50;
      v52 = 0uLL;
      v40 = (_QWORD *)v55.i64[1];
      v41 = (_QWORD *)v55.i64[0];
      if (v55.i64[1] == v55.i64[0])
      {
        v44 = vdupq_n_s64(v55.u64[1]);
        v42 = &v37[16 * v34];
      }
      else
      {
        v42 = &v37[16 * v34];
        do
        {
          v43 = *((_OWORD *)v40 - 1);
          v40 -= 2;
          *((_OWORD *)v42 - 1) = v43;
          v42 -= 16;
          *v40 = 0;
          v40[1] = 0;
        }
        while (v40 != v41);
        v44 = v55;
      }
      v33 = v39 + 16;
      v55.i64[0] = (uint64_t)v42;
      v55.i64[1] = (uint64_t)(v39 + 16);
      *(int64x2_t *)&v59[8] = v44;
      v45 = (char *)v56[0];
      v56[0] = &v37[16 * v38];
      v60 = v45;
      *(_QWORD *)v59 = v44.i64[0];
      sub_20BDEA324((uint64_t)v59);
    }
    else
    {
      *(_OWORD *)v55.i64[1] = v31;
      v33 = (_OWORD *)(v32 + 16);
      v52 = 0uLL;
    }
    v55.i64[1] = (uint64_t)v33;
    v46 = (std::__shared_weak_count *)*((_QWORD *)&v51 + 1);
    if (*((_QWORD *)&v51 + 1))
    {
      v47 = (unint64_t *)(*((_QWORD *)&v51 + 1) + 8);
      do
        v48 = __ldaxr(v47);
      while (__stlxr(v48 - 1, v47));
      if (!v48)
      {
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
      }
    }
    sub_20BF4D2AC(&v53, v29, v30);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New((v57.i64[1] - v57.i64[0]) >> 3, (uint64_t *)v57.i64[0], (uint64_t *)v55.i64[0], v59);
  *v49 = *(_OWORD *)v59;
  *(_QWORD *)v59 = &v55;
  sub_20BDE9EB0((void ***)v59);
  *(_QWORD *)v59 = &v57;
  sub_20BEEB2B8((void ***)v59);
}

void sub_20C82070C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void ***a17, uint64_t a18, void **a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  a17 = &a19;
  sub_20BDE9EB0((void ***)&a17);
  a19 = (void **)&a23;
  sub_20BEEB2B8(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_20C820798(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x800000020CB14E00 & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, &stru_24C54F648);
}

pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *sub_20C820810(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C820858();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType::~HdRenderSettingsPrimTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *sub_20C820858()
{
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType *)operator new(0x50uLL);
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsPrimTokens_StaticTokenType::HdRenderSettingsPrimTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C820884(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C820898@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x24BDAC8D0];
  v4 = operator new(0x18uLL);
  sub_20BF4C6D0(v6, a1);
  sub_20C81D9E8(v4, v6);
  sub_20C81DAB0(a2, (uint64_t)v4);
  return sub_20BF4C2D8((uint64_t)v6);
}

void sub_20C82092C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C820960@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;

  v6 = operator new(0x210uLL);
  pxrInternal__aapl__pxrReserved__::HdRetainedSmallVectorDataSource::HdRetainedSmallVectorDataSource(v6, *a1, *a2);
  return sub_20C809060(a3, (uint64_t)v6);
}

void sub_20C8209AC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C8209C0(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 192));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 176));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 160));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 144));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 128));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 112));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 96));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 80));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 64));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 48));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 32));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)a1);
}

void sub_20C820A44(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C820A58@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  a2[1] = (char *)&off_24C525968 + 3;
  return result;
}

uint64_t sub_20C820A70()
{
  return 0;
}

uint64_t sub_20C820A78(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

void sub_20C820A84(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C820A98(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C820AB0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F720))
    return a1 + 24;
  else
    return 0;
}

void sub_20C820AF4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

float sub_20C820B08@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  float result;

  *(_QWORD *)(a2 + 8) = &unk_24C520593;
  result = *(float *)(a1 + 8);
  *(float *)a2 = result;
  return result;
}

uint64_t sub_20C820B24()
{
  return 0;
}

float sub_20C820B2C(uint64_t a1)
{
  return *(float *)(a1 + 8);
}

void sub_20C820B38(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C820B4C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C820B64(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F7E8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C820BA8(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

unsigned int *sub_20C820BBC@<X0>(uint64_t a1@<X0>, unsigned int **a2@<X8>)
{
  unsigned int *result;
  unsigned int *v5;
  unsigned int v6;

  a2[1] = (unsigned int *)((char *)&off_24C51E300 + 2);
  result = (unsigned int *)operator new(0x14uLL);
  *(_OWORD *)result = *(_OWORD *)(a1 + 8);
  v5 = result + 4;
  atomic_store(0, result + 4);
  *a2 = result;
  do
    v6 = __ldxr(v5);
  while (__stxr(v6 + 1, v5));
  return result;
}

uint64_t sub_20C820C18()
{
  return 0;
}

float sub_20C820C20(uint64_t a1)
{
  return *(float *)(a1 + 8);
}

void sub_20C820C30(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C820C44(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C820C5C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F8C8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C820CA0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C820CB4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C820CCC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54F940))
    return a1 + 24;
  else
    return 0;
}

void sub_20C820D0C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54F968;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C820D48(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54F968;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C820D88@<X0>(uint64_t a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  char *v15;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  char *v22;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  char *v29;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  char *result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  if (!v2)
    v2 = sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  v3 = (uint64_t *)((char *)v2 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a1 + 16))
  {
    v8 = sub_20BFCA068((char **)a1, v3);
  }
  else
  {
    v5 = *v3;
    *v4 = *v3;
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 2, v6));
      if ((v7 & 1) == 0)
        *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 = (char *)(v4 + 1);
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  if (!v9)
    v9 = sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  v10 = (uint64_t *)((char *)v9 + 16);
  v11 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v11 >= *(_QWORD *)(a1 + 16))
  {
    v15 = sub_20BFCA068((char **)a1, v10);
  }
  else
  {
    v12 = *v10;
    *v11 = *v10;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        *v11 &= 0xFFFFFFFFFFFFFFF8;
    }
    v15 = (char *)(v11 + 1);
  }
  *(_QWORD *)(a1 + 8) = v15;
  v16 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  if (!v16)
    v16 = sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  v17 = (uint64_t *)((char *)v16 + 24);
  v18 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v18 >= *(_QWORD *)(a1 + 16))
  {
    v22 = sub_20BFCA068((char **)a1, v17);
  }
  else
  {
    v19 = *v17;
    *v18 = *v17;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        *v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    v22 = (char *)(v18 + 1);
  }
  *(_QWORD *)(a1 + 8) = v22;
  v23 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  if (!v23)
    v23 = sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  v24 = (uint64_t *)((char *)v23 + 32);
  v25 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v25 >= *(_QWORD *)(a1 + 16))
  {
    v29 = sub_20BFCA068((char **)a1, v24);
  }
  else
  {
    v26 = *v24;
    *v25 = *v24;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        *v25 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (char *)(v25 + 1);
  }
  *(_QWORD *)(a1 + 8) = v29;
  v30 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  if (!v30)
    v30 = sub_20C8096DC(&pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchemaTokens);
  v31 = (uint64_t *)((char *)v30 + 40);
  v32 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v32 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_20BFCA068((char **)a1, v31);
  }
  else
  {
    v33 = *v31;
    *v32 = *v31;
    if ((v33 & 7) != 0)
    {
      v34 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 2, v34));
      if ((v35 & 1) == 0)
        *v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    result = (char *)(v32 + 1);
  }
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_20C820FEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C821004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v5;
  _QWORD v6[3];

  v6[2] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 120))(v6, *(_QWORD *)(a1 + 16), a1 + 8, a2);
  pxrInternal__aapl__pxrReserved__::HdCreateTypedRetainedDataSource((pxrInternal__aapl__pxrReserved__ *)v6, &v5);
  *a3 = v5;
  return sub_20BF4C2D8((uint64_t)v6);
}

void sub_20C821090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C8210B0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8210C4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8210DC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FA00))
    return a1 + 24;
  else
    return 0;
}

void sub_20C82111C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54FA28;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C821158(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54FA28;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 5);
  sub_20BFD265C((_DWORD *)a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C821198@<X0>(_QWORD *a1@<X8>)
{
  uint64_t **v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  void **v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int *v29;
  unsigned int v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  void ***v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int *v50;
  unsigned int v51;
  unsigned int *v52;
  unsigned int v53;
  unsigned int *v54;
  unsigned int v55;
  void **v56;
  unsigned int *v57;
  unsigned int *v58;
  unsigned int *v59;
  unsigned int *v60;
  unsigned int *v61;
  unsigned int *v62;
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)atomic_load(&qword_25498DD90);
  if (!v2)
  {
    v2 = (uint64_t **)operator new(0x50uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "camera", 0);
    v4 = v2 + 1;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2 + 1, "collection", 0);
    v5 = v2 + 2;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2 + 2, "drawTargetSet", 0);
    v6 = v2 + 3;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2 + 3, "enable", 0);
    v7 = v2 + 4;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2 + 4, "resolution", 0);
    v8 = v2 + 5;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2 + 5, "aovBindings", 0);
    v9 = v2 + 6;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2 + 6, "depthPriority", 0);
    v10 = (void **)*v2;
    v56 = v10;
    if ((v10 & 7) != 0)
    {
      v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 2, v11));
      if ((v12 & 1) == 0)
        v56 = (void **)v11;
    }
    v13 = (unsigned int *)*v4;
    v57 = v13;
    if ((v13 & 7) != 0)
    {
      v14 = (unsigned int *)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 2, v14));
      if ((v15 & 1) == 0)
        v57 = v14;
    }
    v16 = (unsigned int *)*v5;
    v58 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 2, v17));
      if ((v18 & 1) == 0)
        v58 = v17;
    }
    v19 = (unsigned int *)*v6;
    v59 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)((unint64_t)v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        v59 = v20;
    }
    v22 = (unsigned int *)*v7;
    v60 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)((unint64_t)v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 2, v23));
      if ((v24 & 1) == 0)
        v60 = v23;
    }
    v25 = (unsigned int *)*v8;
    v61 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)((unint64_t)v25 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stxr(v27 + 2, v26));
      if ((v27 & 1) == 0)
        v61 = v26;
    }
    v28 = (unsigned int *)*v9;
    v62 = v28;
    if ((v28 & 7) != 0)
    {
      v29 = (unsigned int *)((unint64_t)v28 & 0xFFFFFFFFFFFFFFF8);
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 2, v29));
      if ((v30 & 1) == 0)
        v62 = v29;
    }
    v2[7] = 0;
    v2[8] = 0;
    v2[9] = 0;
    v31 = (uint64_t *)operator new(0x38uLL);
    v32 = 0;
    v2[7] = v31;
    v2[8] = v31;
    v2[9] = v31 + 7;
    do
    {
      v33 = (unint64_t)(&v56)[v32];
      *v31 = v33;
      if ((v33 & 7) != 0)
      {
        v34 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 2, v34));
        if ((v35 & 1) == 0)
          *v31 &= 0xFFFFFFFFFFFFFFF8;
      }
      ++v32;
      ++v31;
    }
    while (v32 != 7);
    v36 = (void ***)&v63;
    v2[8] = v31;
    do
    {
      v38 = (uint64_t)*--v36;
      v37 = v38;
      if ((v38 & 7) != 0)
      {
        v39 = (unsigned int *)(v37 & 0xFFFFFFFFFFFFFFF8);
        do
          v40 = __ldxr(v39);
        while (__stlxr(v40 - 2, v39));
      }
    }
    while (v36 != &v56);
    while (!__ldaxr(&qword_25498DD90))
    {
      if (!__stlxr((unint64_t)v2, &qword_25498DD90))
        goto LABEL_2;
    }
    __clrex();
    v56 = (void **)(v2 + 7);
    sub_20BEEB2B8(&v56);
    if ((*v9 & 7) != 0)
    {
      v42 = (unsigned int *)(*v9 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    if ((*v8 & 7) != 0)
    {
      v44 = (unsigned int *)(*v8 & 0xFFFFFFFFFFFFFFF8);
      do
        v45 = __ldxr(v44);
      while (__stlxr(v45 - 2, v44));
    }
    if ((*v7 & 7) != 0)
    {
      v46 = (unsigned int *)(*v7 & 0xFFFFFFFFFFFFFFF8);
      do
        v47 = __ldxr(v46);
      while (__stlxr(v47 - 2, v46));
    }
    if ((*v6 & 7) != 0)
    {
      v48 = (unsigned int *)(*v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v49 = __ldxr(v48);
      while (__stlxr(v49 - 2, v48));
    }
    if ((*v5 & 7) != 0)
    {
      v50 = (unsigned int *)(*v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v51 = __ldxr(v50);
      while (__stlxr(v51 - 2, v50));
    }
    if ((*v4 & 7) != 0)
    {
      v52 = (unsigned int *)(*v4 & 0xFFFFFFFFFFFFFFF8);
      do
        v53 = __ldxr(v52);
      while (__stlxr(v53 - 2, v52));
    }
    if (((unint64_t)*v2 & 7) != 0)
    {
      v54 = (unsigned int *)((unint64_t)*v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v55 = __ldxr(v54);
      while (__stlxr(v55 - 2, v54));
    }
    operator delete(v2);
    v2 = (uint64_t **)atomic_load(&qword_25498DD90);
  }
LABEL_2:
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return sub_20BFE538C(a1, v2[7], v2[8], v2[8] - v2[7]);
}

void sub_20C8215D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int v44;

  sub_20BEEB2B8(&a9);
  v26 = &a18;
  while (1)
  {
    v28 = *--v26;
    v27 = v28;
    if ((v28 & 7) != 0)
    {
      v29 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v30 = __ldxr(v29);
      while (__stlxr(v30 - 2, v29));
    }
    if (v26 == (uint64_t *)&a11)
    {
      if ((*v24 & 7) != 0)
      {
        v31 = (unsigned int *)(*v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      if ((*v23 & 7) != 0)
      {
        v33 = (unsigned int *)(*v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if ((*v22 & 7) != 0)
      {
        v35 = (unsigned int *)(*v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v36 = __ldxr(v35);
        while (__stlxr(v36 - 2, v35));
      }
      if ((*v21 & 7) != 0)
      {
        v37 = (unsigned int *)(*v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v38 = __ldxr(v37);
        while (__stlxr(v38 - 2, v37));
      }
      if ((*v20 & 7) != 0)
      {
        v39 = (unsigned int *)(*v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v40 = __ldxr(v39);
        while (__stlxr(v40 - 2, v39));
      }
      if ((*v19 & 7) != 0)
      {
        v41 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v42 = __ldxr(v41);
        while (__stlxr(v42 - 2, v41));
      }
      if ((*v18 & 7) != 0)
      {
        v43 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v44 = __ldxr(v43);
        while (__stlxr(v44 - 2, v43));
      }
      operator delete(v18);
      _Unwind_Resume(a1);
    }
  }
}

double sub_20C82173C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  double result;
  __int128 v5;

  sub_20C81DFA8((uint64_t *)(a1 + 8), (_DWORD *)(a1 + 16), a2, &v5);
  result = *(double *)&v5;
  *a3 = v5;
  return result;
}

void sub_20C821784(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C821798(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8217B0(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FAC0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8217F0(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54FAE8;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C82182C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54FAE8;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

char *sub_20C82186C@<X0>(uint64_t a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  char *v8;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  char *v15;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  char *v22;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  char *v29;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  char *result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v2 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v2)
    v2 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v3 = (uint64_t *)((char *)v2 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a1 + 16))
  {
    v8 = sub_20BFCA068((char **)a1, v3);
  }
  else
  {
    v5 = *v3;
    *v4 = *v3;
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 2, v6));
      if ((v7 & 1) == 0)
        *v4 &= 0xFFFFFFFFFFFFFFF8;
    }
    v8 = (char *)(v4 + 1);
  }
  *(_QWORD *)(a1 + 8) = v8;
  v9 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v9)
    v9 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v10 = (uint64_t *)((char *)v9 + 16);
  v11 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v11 >= *(_QWORD *)(a1 + 16))
  {
    v15 = sub_20BFCA068((char **)a1, v10);
  }
  else
  {
    v12 = *v10;
    *v11 = *v10;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stxr(v14 + 2, v13));
      if ((v14 & 1) == 0)
        *v11 &= 0xFFFFFFFFFFFFFFF8;
    }
    v15 = (char *)(v11 + 1);
  }
  *(_QWORD *)(a1 + 8) = v15;
  v16 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v16)
    v16 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v17 = (uint64_t *)((char *)v16 + 24);
  v18 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v18 >= *(_QWORD *)(a1 + 16))
  {
    v22 = sub_20BFCA068((char **)a1, v17);
  }
  else
  {
    v19 = *v17;
    *v18 = *v17;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        *v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    v22 = (char *)(v18 + 1);
  }
  *(_QWORD *)(a1 + 8) = v22;
  v23 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v23)
    v23 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v24 = (uint64_t *)((char *)v23 + 32);
  v25 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v25 >= *(_QWORD *)(a1 + 16))
  {
    v29 = sub_20BFCA068((char **)a1, v24);
  }
  else
  {
    v26 = *v24;
    *v25 = *v24;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stxr(v28 + 2, v27));
      if ((v28 & 1) == 0)
        *v25 &= 0xFFFFFFFFFFFFFFF8;
    }
    v29 = (char *)(v25 + 1);
  }
  *(_QWORD *)(a1 + 8) = v29;
  v30 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v30)
    v30 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v31 = (uint64_t *)((char *)v30 + 40);
  v32 = *(uint64_t **)(a1 + 8);
  if ((unint64_t)v32 >= *(_QWORD *)(a1 + 16))
  {
    result = sub_20BFCA068((char **)a1, v31);
  }
  else
  {
    v33 = *v31;
    *v32 = *v31;
    if ((v33 & 7) != 0)
    {
      v34 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v35 = __ldxr(v34);
      while (__stxr(v35 + 2, v34));
      if ((v35 & 1) == 0)
        *v32 &= 0xFFFFFFFFFFFFFFF8;
    }
    result = (char *)(v32 + 1);
  }
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_20C821AD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C821AE8(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v11;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v12;
  _DWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t i;
  _QWORD *v18;
  uint64_t v19;
  pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  __int128 v33;
  int64x2_t v34;
  _OWORD *v35;
  char *v36;
  std::__shared_weak_count *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t j;
  _QWORD *v69;
  char *v70;
  _QWORD *v71;
  pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder *v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  _QWORD *v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  _OWORD *v87;
  char *v88;
  std::__shared_weak_count *v89;
  unint64_t *v90;
  unint64_t v91;
  std::__shared_weak_count *v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t *v95;
  unint64_t v96;
  std::__shared_weak_count *v97;
  unint64_t *v98;
  unint64_t v99;
  std::__shared_weak_count *v100;
  unint64_t *v101;
  unint64_t v102;
  std::__shared_weak_count *v103;
  unint64_t *v104;
  unint64_t v105;
  std::__shared_weak_count *v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v111;
  __int128 *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v116;
  __int128 *v117;
  _QWORD *v118;
  _QWORD *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _OWORD v134[2];
  char **v135;
  __int128 v136[2];
  __int128 v137;
  uint64_t v138;

  v138 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v6)
    v6 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    v13 = operator new(0x18uLL);
    v14 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)v13 = off_24C54FB30;
    sub_20BFD6E54(v13 + 2, (_DWORD *)(a1 + 8));
    sub_20BFD6EA4(v13 + 3, (_DWORD *)(a1 + 12));
    *((_QWORD *)v13 + 2) = v14;
    v15 = operator new(0x20uLL);
    *v15 = &off_24C54FC38;
    v15[1] = 0;
    v15[2] = 0;
    v15[3] = v13;
    *a3 = v13;
    a3[1] = v15;
  }
  else
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v7)
      v7 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 2) & 0xFFFFFFFFFFFFFFF8))
    {
      (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 320))(&v132, *(_QWORD *)(a1 + 16), a1 + 8);
      v130 = 0uLL;
      v131 = 0;
      sub_20BE0ECB0((char **)&v130, 0xAAAAAAAAAAAAAAABLL * ((v133 - v132) >> 3));
      v16 = v132;
      for (i = v133; v16 != i; v16 += 24)
      {
        v137 = 0u;
        memset(v136, 0, sizeof(v136));
        sub_20C7EA9FC((uint64_t *)v16, &v126);
        v127 = v126;
        v126 = 0uLL;
        v18 = pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::SetName(v136, (uint64_t *)&v127);
        sub_20C7FFBBC((_DWORD *)(v16 + 8), &v124);
        v125 = v124;
        v124 = 0uLL;
        v19 = pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::SetSourceComputation((uint64_t)v18, (uint64_t *)&v125);
        sub_20C7EA9FC((uint64_t *)(v16 + 16), &v122);
        v123 = v122;
        v122 = 0uLL;
        v20 = (pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::SetSourceComputationOutputName(v19, (uint64_t *)&v123);
        pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::Build(v20, &v128);
        v21 = v128;
        v129 = v128;
        v128 = 0uLL;
        v22 = *((_QWORD *)&v130 + 1);
        if (*((_QWORD *)&v130 + 1) >= (unint64_t)v131)
        {
          v120 = v21;
          v23 = (uint64_t)(*((_QWORD *)&v130 + 1) - v130) >> 4;
          v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 60)
            sub_20BDDF694();
          v25 = (uint64_t)&v131[-v130];
          if ((uint64_t)&v131[-v130] >> 3 > v24)
            v24 = v25 >> 3;
          if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF0)
            v26 = 0xFFFFFFFFFFFFFFFLL;
          else
            v26 = v24;
          v135 = &v131;
          v27 = (char *)sub_20BDEA2F0((uint64_t)&v131, v26);
          v29 = &v27[16 * v23];
          *(_OWORD *)v29 = v120;
          v129 = 0uLL;
          v30 = (_QWORD *)*((_QWORD *)&v130 + 1);
          v31 = (_QWORD *)v130;
          if (*((_QWORD *)&v130 + 1) == (_QWORD)v130)
          {
            v34 = vdupq_n_s64(*((unint64_t *)&v130 + 1));
            v32 = &v27[16 * v23];
          }
          else
          {
            v32 = &v27[16 * v23];
            do
            {
              v33 = *((_OWORD *)v30 - 1);
              v30 -= 2;
              *((_OWORD *)v32 - 1) = v33;
              v32 -= 16;
              *v30 = 0;
              v30[1] = 0;
            }
            while (v30 != v31);
            v34 = (int64x2_t)v130;
          }
          v35 = v29 + 16;
          *(_QWORD *)&v130 = v32;
          *((_QWORD *)&v130 + 1) = v29 + 16;
          *(int64x2_t *)((char *)v134 + 8) = v34;
          v36 = v131;
          v131 = &v27[16 * v28];
          *((_QWORD *)&v134[1] + 1) = v36;
          *(_QWORD *)&v134[0] = v34.i64[0];
          sub_20BDEA324((uint64_t)v134);
          v37 = (std::__shared_weak_count *)*((_QWORD *)&v128 + 1);
          *((_QWORD *)&v130 + 1) = v35;
          if (*((_QWORD *)&v128 + 1))
          {
            v38 = (unint64_t *)(*((_QWORD *)&v128 + 1) + 8);
            do
              v39 = __ldaxr(v38);
            while (__stlxr(v39 - 1, v38));
            if (!v39)
            {
              ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
              std::__shared_weak_count::__release_weak(v37);
            }
          }
        }
        else
        {
          **((_OWORD **)&v130 + 1) = v21;
          v129 = 0uLL;
          *((_QWORD *)&v130 + 1) = v22 + 16;
        }
        v40 = (std::__shared_weak_count *)*((_QWORD *)&v123 + 1);
        if (*((_QWORD *)&v123 + 1))
        {
          v41 = (unint64_t *)(*((_QWORD *)&v123 + 1) + 8);
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v40);
          }
        }
        v43 = (std::__shared_weak_count *)*((_QWORD *)&v122 + 1);
        if (*((_QWORD *)&v122 + 1))
        {
          v44 = (unint64_t *)(*((_QWORD *)&v122 + 1) + 8);
          do
            v45 = __ldaxr(v44);
          while (__stlxr(v45 - 1, v44));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
        v46 = (std::__shared_weak_count *)*((_QWORD *)&v125 + 1);
        if (*((_QWORD *)&v125 + 1))
        {
          v47 = (unint64_t *)(*((_QWORD *)&v125 + 1) + 8);
          do
            v48 = __ldaxr(v47);
          while (__stlxr(v48 - 1, v47));
          if (!v48)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
        }
        v49 = (std::__shared_weak_count *)*((_QWORD *)&v124 + 1);
        if (*((_QWORD *)&v124 + 1))
        {
          v50 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
          do
            v51 = __ldaxr(v50);
          while (__stlxr(v51 - 1, v50));
          if (!v51)
          {
            ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
            std::__shared_weak_count::__release_weak(v49);
          }
        }
        v52 = (std::__shared_weak_count *)*((_QWORD *)&v127 + 1);
        if (*((_QWORD *)&v127 + 1))
        {
          v53 = (unint64_t *)(*((_QWORD *)&v127 + 1) + 8);
          do
            v54 = __ldaxr(v53);
          while (__stlxr(v54 - 1, v53));
          if (!v54)
          {
            ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
            std::__shared_weak_count::__release_weak(v52);
          }
        }
        v55 = (std::__shared_weak_count *)*((_QWORD *)&v126 + 1);
        if (*((_QWORD *)&v126 + 1))
        {
          v56 = (unint64_t *)(*((_QWORD *)&v126 + 1) + 8);
          do
            v57 = __ldaxr(v56);
          while (__stlxr(v57 - 1, v56));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
            std::__shared_weak_count::__release_weak(v55);
          }
        }
        v58 = (std::__shared_weak_count *)*((_QWORD *)&v137 + 1);
        if (*((_QWORD *)&v137 + 1))
        {
          v59 = (unint64_t *)(*((_QWORD *)&v137 + 1) + 8);
          do
            v60 = __ldaxr(v59);
          while (__stlxr(v60 - 1, v59));
          if (!v60)
          {
            ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
            std::__shared_weak_count::__release_weak(v58);
          }
        }
        v61 = (std::__shared_weak_count *)*((_QWORD *)&v136[1] + 1);
        if (*((_QWORD *)&v136[1] + 1))
        {
          v62 = (unint64_t *)(*((_QWORD *)&v136[1] + 1) + 8);
          do
            v63 = __ldaxr(v62);
          while (__stlxr(v63 - 1, v62));
          if (!v63)
          {
            ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
            std::__shared_weak_count::__release_weak(v61);
          }
        }
        v64 = (std::__shared_weak_count *)*((_QWORD *)&v136[0] + 1);
        if (*((_QWORD *)&v136[0] + 1))
        {
          v65 = (unint64_t *)(*((_QWORD *)&v136[0] + 1) + 8);
          do
            v66 = __ldaxr(v65);
          while (__stlxr(v66 - 1, v65));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
            std::__shared_weak_count::__release_weak(v64);
          }
        }
      }
      *(_QWORD *)&v134[0] = (uint64_t)(*((_QWORD *)&v130 + 1) - v130) >> 4;
      *(_QWORD *)&v129 = v130;
      sub_20C820960(v134, &v129, v136);
      *(_OWORD *)a3 = v136[0];
      *(_QWORD *)&v136[0] = &v130;
      sub_20BDE9EB0((void ***)v136);
      *(_QWORD *)&v136[0] = &v132;
      sub_20C823034((void ***)v136);
    }
    else
    {
      v8 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v8)
        v8 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 3) & 0xFFFFFFFFFFFFFFF8))
      {
        (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 328))(&v132, *(_QWORD *)(a1 + 16), a1 + 8);
        v130 = 0uLL;
        v131 = 0;
        sub_20BE0ECB0((char **)&v130, 0xAAAAAAAAAAAAAAABLL * ((v133 - v132) >> 3));
        v67 = v132;
        for (j = v133; v67 != j; v67 += 24)
        {
          memset(v134, 0, sizeof(v134));
          sub_20C7EA9FC((uint64_t *)v67, &v126);
          v127 = v126;
          v126 = 0uLL;
          v69 = pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder::SetName(v134, (uint64_t *)&v127);
          v70 = (char *)operator new(0x18uLL);
          *(_QWORD *)v70 = &unk_24C54CD98;
          *(_OWORD *)(v70 + 8) = *(_OWORD *)(v67 + 8);
          v71 = operator new(0x20uLL);
          *v71 = &unk_24C54CEC8;
          v71[1] = 0;
          v71[2] = 0;
          v71[3] = v70;
          *(_QWORD *)&v125 = v70;
          *((_QWORD *)&v125 + 1) = v71;
          v124 = 0uLL;
          v72 = (pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder::SetValueType((uint64_t)v69, (uint64_t *)&v125);
          pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder::Build(v72, &v128);
          v73 = v128;
          v129 = v128;
          v128 = 0uLL;
          v74 = *((_QWORD *)&v130 + 1);
          if (*((_QWORD *)&v130 + 1) >= (unint64_t)v131)
          {
            v121 = v73;
            v75 = (uint64_t)(*((_QWORD *)&v130 + 1) - v130) >> 4;
            v76 = v75 + 1;
            if ((unint64_t)(v75 + 1) >> 60)
              sub_20BDDF694();
            v77 = (uint64_t)&v131[-v130];
            if ((uint64_t)&v131[-v130] >> 3 > v76)
              v76 = v77 >> 3;
            if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFF0)
              v78 = 0xFFFFFFFFFFFFFFFLL;
            else
              v78 = v76;
            *(_QWORD *)&v137 = &v131;
            v79 = (char *)sub_20BDEA2F0((uint64_t)&v131, v78);
            v81 = &v79[16 * v75];
            *(_OWORD *)v81 = v121;
            v129 = 0uLL;
            v82 = (_QWORD *)*((_QWORD *)&v130 + 1);
            v83 = (_QWORD *)v130;
            if (*((_QWORD *)&v130 + 1) == (_QWORD)v130)
            {
              v86 = (__int128)vdupq_n_s64(*((unint64_t *)&v130 + 1));
              v84 = &v79[16 * v75];
            }
            else
            {
              v84 = &v79[16 * v75];
              do
              {
                v85 = *((_OWORD *)v82 - 1);
                v82 -= 2;
                *((_OWORD *)v84 - 1) = v85;
                v84 -= 16;
                *v82 = 0;
                v82[1] = 0;
              }
              while (v82 != v83);
              v86 = v130;
            }
            v87 = v81 + 16;
            *(_QWORD *)&v130 = v84;
            *((_QWORD *)&v130 + 1) = v81 + 16;
            *(__int128 *)((char *)v136 + 8) = v86;
            v88 = v131;
            v131 = &v79[16 * v80];
            *((_QWORD *)&v136[1] + 1) = v88;
            *(_QWORD *)&v136[0] = v86;
            sub_20BDEA324((uint64_t)v136);
            v89 = (std::__shared_weak_count *)*((_QWORD *)&v128 + 1);
            *((_QWORD *)&v130 + 1) = v87;
            if (*((_QWORD *)&v128 + 1))
            {
              v90 = (unint64_t *)(*((_QWORD *)&v128 + 1) + 8);
              do
                v91 = __ldaxr(v90);
              while (__stlxr(v91 - 1, v90));
              if (!v91)
              {
                ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
                std::__shared_weak_count::__release_weak(v89);
              }
            }
          }
          else
          {
            **((_OWORD **)&v130 + 1) = v73;
            v129 = 0uLL;
            *((_QWORD *)&v130 + 1) = v74 + 16;
          }
          v92 = (std::__shared_weak_count *)*((_QWORD *)&v125 + 1);
          if (*((_QWORD *)&v125 + 1))
          {
            v93 = (unint64_t *)(*((_QWORD *)&v125 + 1) + 8);
            do
              v94 = __ldaxr(v93);
            while (__stlxr(v94 - 1, v93));
            if (!v94)
            {
              ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
              std::__shared_weak_count::__release_weak(v92);
            }
          }
          if (*((_QWORD *)&v124 + 1))
          {
            v95 = (unint64_t *)(*((_QWORD *)&v124 + 1) + 8);
            do
              v96 = __ldaxr(v95);
            while (__stlxr(v96 - 1, v95));
            if (!v96)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v124 + 1) + 16))(*((_QWORD *)&v124 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v124 + 1));
            }
          }
          v97 = (std::__shared_weak_count *)*((_QWORD *)&v127 + 1);
          if (*((_QWORD *)&v127 + 1))
          {
            v98 = (unint64_t *)(*((_QWORD *)&v127 + 1) + 8);
            do
              v99 = __ldaxr(v98);
            while (__stlxr(v99 - 1, v98));
            if (!v99)
            {
              ((void (*)(std::__shared_weak_count *))v97->__on_zero_shared)(v97);
              std::__shared_weak_count::__release_weak(v97);
            }
          }
          v100 = (std::__shared_weak_count *)*((_QWORD *)&v126 + 1);
          if (*((_QWORD *)&v126 + 1))
          {
            v101 = (unint64_t *)(*((_QWORD *)&v126 + 1) + 8);
            do
              v102 = __ldaxr(v101);
            while (__stlxr(v102 - 1, v101));
            if (!v102)
            {
              ((void (*)(std::__shared_weak_count *))v100->__on_zero_shared)(v100);
              std::__shared_weak_count::__release_weak(v100);
            }
          }
          v103 = (std::__shared_weak_count *)*((_QWORD *)&v134[1] + 1);
          if (*((_QWORD *)&v134[1] + 1))
          {
            v104 = (unint64_t *)(*((_QWORD *)&v134[1] + 1) + 8);
            do
              v105 = __ldaxr(v104);
            while (__stlxr(v105 - 1, v104));
            if (!v105)
            {
              ((void (*)(std::__shared_weak_count *))v103->__on_zero_shared)(v103);
              std::__shared_weak_count::__release_weak(v103);
            }
          }
          v106 = (std::__shared_weak_count *)*((_QWORD *)&v134[0] + 1);
          if (*((_QWORD *)&v134[0] + 1))
          {
            v107 = (unint64_t *)(*((_QWORD *)&v134[0] + 1) + 8);
            do
              v108 = __ldaxr(v107);
            while (__stlxr(v108 - 1, v107));
            if (!v108)
            {
              ((void (*)(std::__shared_weak_count *))v106->__on_zero_shared)(v106);
              std::__shared_weak_count::__release_weak(v106);
            }
          }
        }
        *(_QWORD *)&v134[0] = (uint64_t)(*((_QWORD *)&v130 + 1) - v130) >> 4;
        *(_QWORD *)&v129 = v130;
        sub_20C820960(v134, &v129, v136);
        *(_OWORD *)a3 = v136[0];
        *(_QWORD *)&v136[0] = &v130;
        sub_20BDE9EB0((void ***)v136);
        *(_QWORD *)&v136[0] = &v132;
        sub_20C7E4DAC((void ***)v136);
      }
      else
      {
        v9 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
        if (!v9)
          v9 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
        if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 4) & 0xFFFFFFFFFFFFFFF8))
        {
          (*(void (**)(__int128 *__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 360))(v136, *(_QWORD *)(a1 + 16), a1 + 8);
          sub_20C8228AC(v136, v134);
          *(_OWORD *)a3 = v134[0];
          if (SBYTE7(v136[1]) < 0)
            operator delete(*(void **)&v136[0]);
        }
        else
        {
          v10 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
          if (!v10)
            v10 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
          if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 5) & 0xFFFFFFFFFFFFFFF8))
          {
            sub_20C822904((_DWORD *)(a1 + 8), (uint64_t *)(a1 + 16), v136);
            *(_OWORD *)a3 = v136[0];
          }
          else
          {
            v11 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
            if (!v11)
              v11 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
            if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 6) & 0xFFFFFFFFFFFFFFF8))
            {
              v109 = *(_QWORD *)(a1 + 16);
              v110 = a1 + 8;
              v111 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
              if (!v111)
                v111 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
              (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v109 + 344))(v136, v109, v110, (uint64_t)v111 + 136);
              if (sub_20C822970((pxrInternal__aapl__pxrReserved__::VtValue *)v136))
              {
                if ((BYTE8(v136[0]) & 4) != 0)
                  v112 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v136[0] + 1) & 0xFFFFFFFFFFFFFFF8)
                                                                           + 168))(v136);
                else
                  v112 = v136;
                v113 = *(_QWORD *)v112;
              }
              else
              {
                v113 = 0;
              }
            }
            else
            {
              v12 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
              if (!v12)
                v12 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
              if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v12 + 7) & 0xFFFFFFFFFFFFFFF8))
              {
                *a3 = 0;
                a3[1] = 0;
                return;
              }
              v114 = *(_QWORD *)(a1 + 16);
              v115 = a1 + 8;
              v116 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
              if (!v116)
                v116 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
              (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v114 + 344))(v136, v114, v115, (uint64_t)v116 + 232);
              if (sub_20C822970((pxrInternal__aapl__pxrReserved__::VtValue *)v136))
              {
                if ((BYTE8(v136[0]) & 4) != 0)
                  v117 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v136[0] + 1) & 0xFFFFFFFFFFFFFFF8)
                                                                           + 168))(v136);
                else
                  v117 = v136;
                v113 = *(_QWORD *)v117;
              }
              else
              {
                v113 = 0;
              }
            }
            v118 = operator new(0x10uLL);
            *v118 = &unk_24C54FE40;
            v118[1] = v113;
            v119 = operator new(0x20uLL);
            *v119 = &unk_24C54FEA8;
            v119[1] = 0;
            v119[2] = 0;
            v119[3] = v118;
            *a3 = v118;
            a3[1] = v119;
            sub_20BF4C2D8((uint64_t)v136);
          }
        }
      }
    }
  }
}

void sub_20C8226E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v35;
  uint64_t v36;
  void *v38;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v35);
  operator delete(v38);
  sub_20BF4C2D8(v36 - 160);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8228AC@<X0>(__int128 *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;

  v4 = operator new(0x20uLL);
  sub_20C823128(v4, a1);
  return sub_20C823264(a2, (uint64_t)v4);
}

void sub_20C8228F0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C822904@<X0>(_DWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  uint64_t v7;

  v6 = operator new(0x18uLL);
  v7 = *a2;
  *(_QWORD *)v6 = &unk_24C54FD90;
  sub_20BFD6E54(v6 + 2, a1);
  sub_20BFD6EA4(v6 + 3, a1 + 1);
  *((_QWORD *)v6 + 2) = v7;
  return sub_20C8233C0(a3, (uint64_t)v6);
}

uint64_t sub_20C822970(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (!v1)
    return 0;
  if (!strcmp((const char *)(*(_QWORD *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(MEMORY[0x24BEDB7B0] + 8) & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  if ((v1 & 4) == 0)
    return 0;
  return pxrInternal__aapl__pxrReserved__::VtValue::_TypeIsImpl(a1, MEMORY[0x24BEDB7B0]);
}

void sub_20C8229E4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54FB30;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C822A20(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54FB30;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

uint64_t sub_20C822A60(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 312))(*(_QWORD *)(a1 + 16), a1 + 8);
}

_QWORD *sub_20C822A78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _DWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD *result;
  _QWORD v14[4];
  char v15;

  v6 = (_DWORD *)(a1 + 8);
  v7 = operator new(0x58uLL);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 16);
  *v7 = off_24C54FB78;
  v10 = *a2;
  v7[1] = *a2;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      v7[1] = v11;
  }
  sub_20BFD6E54((_DWORD *)v7 + 4, v6);
  sub_20BFD6EA4((_DWORD *)v8 + 5, (_DWORD *)(a1 + 12));
  sub_20C80B7B4((uint64_t)(v8 + 3));
  v8[10] = v9;
  if (!v9)
  {
    v14[0] = "hd/dataSourceLegacyPrim.cpp";
    v14[1] = "Hd_DataSourceLegacyExtComputationInput";
    v14[2] = 1975;
    v14[3] = "pxrInternal__aapl__pxrReserved__::(anonymous namespace)::Hd_DataSourceLegacyExtComputationInput::Hd_DataSou"
             "rceLegacyExtComputationInput(const TfToken &, const SdfPath &, HdSceneDelegate *)";
    v15 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v14, "_sceneDelegate", 0);
  }
  result = operator new(0x20uLL);
  *result = &off_24C54FBC0;
  result[1] = 0;
  result[2] = 0;
  result[3] = v8;
  *a3 = v8;
  a3[1] = result;
  return result;
}

void sub_20C822B98(_Unwind_Exception *a1)
{
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;

  *(_QWORD *)(v1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(v1 + 56);
  if (*(_DWORD *)(v1 + 52) >= 2u)
    free(*(void **)(v1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  sub_20C96C330(v2);
  _Unwind_Resume(a1);
}

void sub_20C822C0C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C54FB78;
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C822C98(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  void *v5;

  *(_QWORD *)a1 = off_24C54FB78;
  *(_QWORD *)(a1 + 24) = &unk_24C54CAC0;
  sub_20C80BEB0(a1 + 56);
  if (*(_DWORD *)(a1 + 52) >= 2u)
    free(*(void **)(a1 + 40));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v5);
}

void sub_20C822D28(uint64_t a1@<X0>, _QWORD *a2@<X8>, float a3@<S0>)
{
  if (a3 == 0.0)
  {
    (*(void (**)(_QWORD *__return_ptr, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 80) + 344))(a2, *(_QWORD *)(a1 + 80), a1 + 16, a1 + 8);
  }
  else
  {
    if (!*(_QWORD *)(a1 + 32))
      sub_20C822E10(*(_QWORD *)(a1 + 80), a1 + 16, a1 + 8, a1 + 24);
    sub_20C80D224(a1 + 24, a2, a3);
  }
}

uint64_t sub_20C822DAC(uint64_t a1, uint64_t a2, float a3, float a4)
{
  if (!*(_QWORD *)(a1 + 32))
    sub_20C822E10(*(_QWORD *)(a1 + 80), a1 + 16, a1 + 8, a1 + 24);
  sub_20C80C6AC(a1 + 24, a2, a3, a4);
  return 1;
}

unint64_t sub_20C822E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t result;
  unint64_t v13;
  _QWORD v14[4];
  char v15;

  v8 = (_QWORD *)(a4 + 16);
  v9 = (_QWORD *)(a4 + 16);
  if (*(_DWORD *)(a4 + 28) >= 2u)
    v9 = (_QWORD *)*v8;
  v10 = (_QWORD *)(a4 + 32);
  v11 = (_QWORD *)(a4 + 32);
  if (*(_DWORD *)(a4 + 52) >= 2u)
    v11 = (_QWORD *)*v10;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 352))(a1, a2, a3, 1, v9, v11);
  v13 = result;
  if (result >= 2)
  {
    (**(void (***)(uint64_t, unint64_t))a4)(a4, result);
    if (*(_DWORD *)(a4 + 28) >= 2u)
      v8 = (_QWORD *)*v8;
    if (*(_DWORD *)(a4 + 52) >= 2u)
      v10 = (_QWORD *)*v10;
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, _QWORD *, _QWORD *))(*(_QWORD *)a1 + 352))(a1, a2, a3, v13, v8, v10);
    if (v13 != result)
    {
      v14[0] = "hd/sceneDelegate.h";
      v14[1] = "SampleExtComputationInput";
      v14[2] = 870;
      v14[3] = "void pxrInternal__aapl__pxrReserved__::HdSceneDelegate::SampleExtComputationInput(const SdfPath &, const "
               "TfToken &, HdTimeSampleArray<VtValue, CAPACITY> *) [CAPACITY = 1U]";
      v15 = 0;
      result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v14, "authoredSamples == authoredSamplesSecondAttempt", 0);
    }
  }
  *(_QWORD *)(a4 + 8) = v13;
  return result;
}

void sub_20C822F58(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C822F6C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C822F84(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FC10))
    return a1 + 24;
  else
    return 0;
}

void sub_20C822FC8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C822FDC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C822FF4(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FC88))
    return a1 + 24;
  else
    return 0;
}

void sub_20C823034(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 24;
        sub_20C8230B8((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_DWORD *sub_20C8230B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  _DWORD *result;
  unsigned int *v7;
  unsigned int v8;

  v3 = *(_QWORD *)(a2 + 16);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 12));
  result = sub_20BFD265C((_DWORD *)(a2 + 8));
  if ((*(_QWORD *)a2 & 7) != 0)
  {
    v7 = (unsigned int *)(*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  return result;
}

_QWORD *sub_20C823128(_QWORD *a1, __int128 *a2)
{
  _QWORD *v3;
  __int128 v4;

  *a1 = &unk_24C54FCB0;
  v3 = a1 + 1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_20BDDBFAC(v3, *(void **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    v3[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)v3 = v4;
  }
  return a1;
}

void sub_20C823180(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

void sub_20C823194(void **this)
{
  *this = &unk_24C54FCB0;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)this);
}

void sub_20C8231D4(void **this)
{
  void *v2;

  *this = &unk_24C54FCB0;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)this);
  operator delete(v2);
}

unsigned int *sub_20C823218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 8) = &off_24C520700;
  return sub_20BF77444((unsigned int **)a2, a1 + 8);
}

uint64_t sub_20C823230()
{
  return 0;
}

char *sub_20C823238@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[31] < 0)
    return (char *)sub_20BDDBFAC((_BYTE *)a2, *((void **)result + 1), *((_QWORD *)result + 2));
  *(_OWORD *)a2 = *(_OWORD *)(result + 8);
  *(_QWORD *)(a2 + 16) = *((_QWORD *)result + 3);
  return result;
}

_QWORD *sub_20C823264(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54FD18;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C8232AC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C8232D0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8232E4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8232FC(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FD68))
    return a1 + 24;
  else
    return 0;
}

void sub_20C82333C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = &unk_24C54FD90;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C82337C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C54FD90;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C8233C0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C54FDC8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C823408(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C82342C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C823440(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C823458(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FE18))
    return a1 + 24;
  else
    return 0;
}

void sub_20C82349C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

uint64_t sub_20C8234B0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 8);
  a2[1] = &unk_24C5202B3;
  return result;
}

uint64_t sub_20C8234C8()
{
  return 0;
}

uint64_t sub_20C8234D0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

void sub_20C8234DC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8234F0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C823508(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FEF8))
    return a1 + 24;
  else
    return 0;
}

void sub_20C82354C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C823560(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C823578(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C54FF70))
    return a1 + 24;
  else
    return 0;
}

void sub_20C8235B8(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  *(_QWORD *)a1 = off_24C54FF98;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
}

void sub_20C8235F4(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C54FF98;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 3);
  sub_20BFD265C((_DWORD *)a1 + 2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v2);
}

_QWORD *sub_20C823634@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 v2;
  _QWORD *v4;
  int v5;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v2 = atomic_load((unsigned __int8 *)&qword_25498DDB0);
  if ((v2 & 1) == 0)
  {
    v4 = a1;
    v5 = __cxa_guard_acquire(&qword_25498DDB0);
    a1 = v4;
    if (v5)
    {
      v6 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v6)
        v6 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      v7 = *((_QWORD *)v6 + 1);
      v27 = v7;
      if ((v7 & 7) != 0)
      {
        v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 2, v8));
        if ((v9 & 1) == 0)
          v27 &= 0xFFFFFFFFFFFFFFF8;
      }
      v10 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v10)
        v10 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      v11 = *((_QWORD *)v10 + 2);
      v28 = v11;
      if ((v11 & 7) != 0)
      {
        v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 2, v12));
        if ((v13 & 1) == 0)
          v28 &= 0xFFFFFFFFFFFFFFF8;
      }
      v14 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v14)
        v14 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      v15 = *((_QWORD *)v14 + 3);
      v29 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 2, v16));
        if ((v17 & 1) == 0)
          v29 &= 0xFFFFFFFFFFFFFFF8;
      }
      v18 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v18)
        v18 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      v19 = *((_QWORD *)v18 + 4);
      v30 = v19;
      if ((v19 & 7) != 0)
      {
        v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 2, v20));
        if ((v21 & 1) == 0)
          v30 &= 0xFFFFFFFFFFFFFFF8;
      }
      sub_20C374970(qword_25498DD98, &v27, 4uLL);
      v22 = &v31;
      do
      {
        v24 = *--v22;
        v23 = v24;
        if ((v24 & 7) != 0)
        {
          v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
          do
            v26 = __ldxr(v25);
          while (__stlxr(v26 - 2, v25));
        }
      }
      while (v22 != &v27);
      __cxa_atexit((void (*)(void *))sub_20C1984B4, qword_25498DD98, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DDB0);
      a1 = v4;
    }
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return sub_20BFE538C(a1, (uint64_t *)qword_25498DD98[0], unk_25498DDA0, (unk_25498DDA0 - qword_25498DD98[0]) >> 3);
}

void sub_20C8238A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498DDB0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C823928@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v17;
  __int128 *v18;
  _DWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v27;
  pxrInternal__aapl__pxrReserved__::VtDictionary *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v6)
    v6 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 1) & 0xFFFFFFFFFFFFFFF8))
  {
    v11 = *(_QWORD *)(a1 + 16);
    v12 = a1 + 8;
    v13 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v13)
      v13 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v11 + 120))(&v30, v11, v12, (uint64_t)v13 + 8);
    if (sub_20BFB1AC0((pxrInternal__aapl__pxrReserved__::VtValue *)&v30))
    {
      if ((BYTE8(v30) & 4) != 0)
        v14 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v30 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v30);
      else
        v14 = &v30;
      pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(v14, (uint64_t *)&v29);
      goto LABEL_38;
    }
    goto LABEL_39;
  }
  v7 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v7)
    v7 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 2) & 0xFFFFFFFFFFFFFFF8))
  {
    v15 = *(_QWORD *)(a1 + 16);
    v16 = a1 + 8;
    v17 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v17)
      v17 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v15 + 120))(&v30, v15, v16, (uint64_t)v17 + 16);
    if (sub_20BFB2CEC((pxrInternal__aapl__pxrReserved__::VtValue *)&v30))
    {
      if ((BYTE8(v30) & 4) != 0)
        v18 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v30 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v30);
      else
        v18 = &v30;
      v19 = operator new(0x10uLL);
      *(_QWORD *)v19 = &unk_24C54D128;
      v19[2] = *(_DWORD *)v18;
      v20 = operator new(0x20uLL);
      *v20 = &unk_24C54D190;
      v20[1] = 0;
      v20[2] = 0;
      v20[3] = v19;
      *a3 = v19;
      a3[1] = v20;
      return (_QWORD *)sub_20BF4C2D8((uint64_t)&v30);
    }
    goto LABEL_39;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v8)
    v8 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 3) & 0xFFFFFFFFFFFFFFF8))
  {
    v21 = *(_QWORD *)(a1 + 16);
    v22 = a1 + 8;
    v23 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v23)
      v23 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v21 + 120))(&v30, v21, v22, (uint64_t)v23 + 24);
    if (sub_20BFB4608((pxrInternal__aapl__pxrReserved__::VtValue *)&v30))
    {
      if ((BYTE8(v30) & 4) != 0)
        v24 = (__int128 *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v30 + 1) & 0xFFFFFFFFFFFFFFF8) + 168))(&v30);
      else
        v24 = (__int128 *)v30;
      sub_20C8228AC(v24, &v29);
      goto LABEL_38;
    }
LABEL_39:
    *a3 = 0;
    a3[1] = 0;
    return (_QWORD *)sub_20BF4C2D8((uint64_t)&v30);
  }
  v9 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v9)
    v9 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v9 + 4) & 0xFFFFFFFFFFFFFFF8))
  {
    result = sub_20C81DFA8((uint64_t *)(a1 + 16), (_DWORD *)(a1 + 8), a2, &v30);
    *(_OWORD *)a3 = v30;
    return result;
  }
  v25 = *(_QWORD *)(a1 + 16);
  v26 = a1 + 8;
  v27 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v27)
    v27 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v25 + 120))(&v30, v25, v26, (uint64_t)v27 + 32);
  if (!sub_20BF4A73C((pxrInternal__aapl__pxrReserved__::VtValue *)&v30))
    goto LABEL_39;
  if ((BYTE8(v30) & 4) != 0)
    v28 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(__int128 *))((*((_QWORD *)&v30 + 1) & 0xFFFFFFFFFFFFFFF8)
                                                                                                  + 168))(&v30);
  else
    v28 = (pxrInternal__aapl__pxrReserved__::VtDictionary *)v30;
  sub_20C8203B0(v28, &v29);
LABEL_38:
  *(_OWORD *)a3 = v29;
  return (_QWORD *)sub_20BF4C2D8((uint64_t)&v30);
}

void sub_20C823C94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C823CE4(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C823CF8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C823D10(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C550030))
    return a1 + 24;
  else
    return 0;
}

void sub_20C823D50(unsigned int *a1@<X8>)
{
  unsigned int v1;

  v1 = __ldxr(a1);
  __stlxr(v1 - 2, a1);
}

_DWORD *sub_20C823D60(_DWORD *a1)
{
  return sub_20BFD265C(a1);
}

void sub_20C823D6C()
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v0;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v0);
}

void sub_20C823D80()
{
  unsigned int *v0;
  unsigned int v1;

  if ((qword_25498DCD8 & 7) != 0)
  {
    v0 = (unsigned int *)(qword_25498DCD8 & 0xFFFFFFFFFFFFFFF8);
    do
      v1 = __ldxr(v0);
    while (__stlxr(v1 - 2, v0));
  }
}

void sub_20C823DA8()
{
  unsigned int *v0;
  unsigned int v1;

  if ((qword_25498DD20 & 7) != 0)
  {
    v0 = (unsigned int *)(qword_25498DD20 & 0xFFFFFFFFFFFFFFF8);
    do
      v1 = __ldxr(v0);
    while (__stlxr(v1 - 2, v0));
  }
}

void *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)&qword_25498DDF0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498DDF0))
  {
    qword_25498DDE8 = 0x600000000;
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498DDB8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498DDF0);
  }
  return &unk_25498DDB8;
}

double pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this)
{
  double result;

  *(_QWORD *)&result = 0x600000000;
  *((_QWORD *)this + 6) = 0x600000000;
  return result;
}

{
  double result;

  *(_QWORD *)&result = 0x600000000;
  *((_QWORD *)this + 6) = 0x600000000;
  return result;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  *((_QWORD *)this + 6) = 0x600000000;
  if (*(_QWORD *)a2)
    sub_20C826F2C((uint64_t)this, (uint64_t *)a2);
  return this;
}

void sub_20C823E9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(_QWORD *this, unsigned int **a2, unsigned int **a3)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = *a2;
  v19 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v19 = v4;
  }
  v6 = *a3;
  v20 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v20 = v7;
  }
  v9 = 0;
  this[6] = 0x600000002;
  v10 = this;
  do
  {
    v11 = (&v19)[v9];
    *v10 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *v10 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v9;
    ++v10;
  }
  while (v9 != 2);
  v14 = (unsigned int **)&v21;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v19);
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(_QWORD *this, unsigned int **a2, unsigned int **a3, unsigned int **a4)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD *v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int **v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  v23 = v4;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v23 = v5;
  }
  v7 = *a3;
  v24 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v24 = v8;
  }
  v10 = *a4;
  v25 = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      v25 = v11;
  }
  v13 = 0;
  this[6] = 0x600000003;
  v14 = this;
  do
  {
    v15 = (&v23)[v13];
    *v14 = v15;
    if ((v15 & 7) != 0)
    {
      v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stxr(v17 + 2, v16));
      if ((v17 & 1) == 0)
        *v14 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    ++v14;
  }
  while (v13 != 3);
  v18 = (unsigned int **)&v26;
  do
  {
    v20 = (uint64_t)*--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
  }
  while (v18 != &v23);
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(_QWORD *this, unsigned int **a2, unsigned int **a3, unsigned int **a4, unsigned int **a5)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int **v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int *v29;
  unsigned int *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v5 = *a2;
  v27 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v27 = v6;
  }
  v8 = *a3;
  v28 = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v28 = v9;
  }
  v11 = *a4;
  v29 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v29 = v12;
  }
  v14 = *a5;
  v30 = v14;
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 2, v15));
    if ((v16 & 1) == 0)
      v30 = v15;
  }
  v17 = 0;
  this[6] = 0x600000004;
  v18 = this;
  do
  {
    v19 = (&v27)[v17];
    *v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)((unint64_t)v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 2, v20));
      if ((v21 & 1) == 0)
        *v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v17;
    ++v18;
  }
  while (v17 != 4);
  v22 = (unsigned int **)&v31;
  do
  {
    v24 = (uint64_t)*--v22;
    v23 = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
  }
  while (v22 != &v27);
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(_QWORD *this, unsigned int **a2, unsigned int **a3, unsigned int **a4, unsigned int **a5, unsigned int **a6)
{
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  _QWORD *v22;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int **v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int *v32;
  unsigned int *v33;
  unsigned int *v34;
  unsigned int *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v6 = *a2;
  v31 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v31 = v7;
  }
  v9 = *a3;
  v32 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v32 = v10;
  }
  v12 = *a4;
  v33 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v33 = v13;
  }
  v15 = *a5;
  v34 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v34 = v16;
  }
  v18 = *a6;
  v35 = v18;
  if ((v18 & 7) != 0)
  {
    v19 = (unsigned int *)((unint64_t)v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 2, v19));
    if ((v20 & 1) == 0)
      v35 = v19;
  }
  v21 = 0;
  this[6] = 0x600000005;
  v22 = this;
  do
  {
    v23 = (&v31)[v21];
    *v22 = v23;
    if ((v23 & 7) != 0)
    {
      v24 = (unsigned int *)((unint64_t)v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stxr(v25 + 2, v24));
      if ((v25 & 1) == 0)
        *v22 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v21;
    ++v22;
  }
  while (v21 != 5);
  v26 = (unsigned int **)&v36;
  do
  {
    v28 = (uint64_t)*--v26;
    v27 = v28;
    if ((v28 & 7) != 0)
    {
      v29 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v30 = __ldxr(v29);
      while (__stlxr(v30 - 2, v29));
    }
  }
  while (v26 != &v31);
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(_QWORD *this, unsigned int **a2, unsigned int **a3, unsigned int **a4, unsigned int **a5, unsigned int **a6, unsigned int **a7)
{
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int **v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int *v36;
  unsigned int *v37;
  unsigned int *v38;
  unsigned int *v39;
  unsigned int *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  v35 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v35 = v8;
  }
  v10 = *a3;
  v36 = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      v36 = v11;
  }
  v13 = *a4;
  v37 = v13;
  if ((v13 & 7) != 0)
  {
    v14 = (unsigned int *)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 2, v14));
    if ((v15 & 1) == 0)
      v37 = v14;
  }
  v16 = *a5;
  v38 = v16;
  if ((v16 & 7) != 0)
  {
    v17 = (unsigned int *)((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 2, v17));
    if ((v18 & 1) == 0)
      v38 = v17;
  }
  v19 = *a6;
  v39 = v19;
  if ((v19 & 7) != 0)
  {
    v20 = (unsigned int *)((unint64_t)v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 2, v20));
    if ((v21 & 1) == 0)
      v39 = v20;
  }
  v22 = *a7;
  v40 = v22;
  if ((v22 & 7) != 0)
  {
    v23 = (unsigned int *)((unint64_t)v22 & 0xFFFFFFFFFFFFFFF8);
    do
      v24 = __ldxr(v23);
    while (__stxr(v24 + 2, v23));
    if ((v24 & 1) == 0)
      v40 = v23;
  }
  v25 = 0;
  this[6] = 0x600000006;
  v26 = this;
  do
  {
    v27 = (&v35)[v25];
    *v26 = v27;
    if ((v27 & 7) != 0)
    {
      v28 = (unsigned int *)((unint64_t)v27 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 2, v28));
      if ((v29 & 1) == 0)
        *v26 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v25;
    ++v26;
  }
  while (v25 != 6);
  v30 = (unsigned int **)&v41;
  do
  {
    v32 = (uint64_t)*--v30;
    v31 = v32;
    if ((v32 & 7) != 0)
    {
      v33 = (unsigned int *)(v31 & 0xFFFFFFFFFFFFFFF8);
      do
        v34 = __ldxr(v33);
      while (__stlxr(v34 - 2, v33));
    }
  }
  while (v30 != &v35);
  return this;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, uint64_t a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  uint64_t v4;

  v4 = a2;
  *((_QWORD *)this + 6) = 0x600000000;
  if (a2 < 7)
  {
    if (!a2)
      return this;
  }
  else
  {
    sub_20C7F645C((uint64_t)this, a2);
  }
  do
  {
    sub_20C826F2C((uint64_t)this, (uint64_t *)a3);
    a3 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)a3 + 8);
    --v4;
  }
  while (v4);
  return this;
}

void sub_20C8246B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElementCount(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, unsigned int a2)
{
  if (*((_DWORD *)this + 13) >= 7u)
    this = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
  return (uint64_t)this + 8 * a2;
}

char *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetLastElement(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this)
{
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *((unsigned int *)this + 12);
  if ((_DWORD)v1)
  {
    if (*((_DWORD *)this + 13) >= 7u)
      this = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
    return (char *)this + 8 * v1 - 8;
  }
  else
  {
    v3 = atomic_load((unsigned __int8 *)&qword_25498DE00);
    if ((v3 & 1) != 0 || !__cxa_guard_acquire(&qword_25498DE00))
    {
      return (char *)&unk_25498DDF8;
    }
    else
    {
      __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_25498DDF8, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DE00);
      return (char *)&unk_25498DDF8;
    }
  }
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetFirstElement(_DWORD *this)
{
  unsigned __int8 v1;

  if (this[12])
  {
    if (this[13] >= 7u)
      return *(_DWORD **)this;
  }
  else
  {
    v1 = atomic_load((unsigned __int8 *)&qword_25498DE10);
    if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25498DE10))
    {
      return &unk_25498DE08;
    }
    else
    {
      __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_25498DE08, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498DE10);
      return &unk_25498DE08;
    }
  }
  return this;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::ReplaceLastElement@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _DWORD *a3@<X8>)
{
  int v4;
  _QWORD *result;
  _QWORD *v6;

  v4 = *((_DWORD *)this + 12);
  result = sub_20C7F1078(a3, (uint64_t)this);
  if (v4)
  {
    v6 = (_QWORD *)*result;
    if (*((_DWORD *)result + 13) < 7u)
      v6 = result;
    return sub_20BF32220(&v6[*((unsigned int *)result + 12) - 1], a2);
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::RemoveLastElement@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2@<X8>)
{
  unsigned int v2;
  const pxrInternal__aapl__pxrReserved__::TfToken *v3;

  v2 = *((_DWORD *)this + 12);
  if (v2 > 1)
  {
    v3 = this;
    if (*((_DWORD *)this + 13) >= 7u)
      v3 = *(const pxrInternal__aapl__pxrReserved__::TfToken **)this;
    return pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(a2, v2 - 1, v3);
  }
  else
  {
    *((_QWORD *)a2 + 6) = 0x600000000;
  }
  return this;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::RemoveFirstElement@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2@<X8>)
{
  unsigned int v2;

  v2 = *((_DWORD *)this + 12);
  if (v2 > 1)
  {
    if (*((_DWORD *)this + 13) >= 7u)
      this = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
    return pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(a2, v2 - 1, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)this + 8));
  }
  else
  {
    *((_QWORD *)a2 + 6) = 0x600000000;
  }
  return this;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _DWORD *a3@<X8>)
{
  sub_20C7F1078(a3, (uint64_t)this);
  sub_20C826F2C((uint64_t)a3, (uint64_t *)a2);
}

void sub_20C824918(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, unsigned int ***a2@<X1>, _DWORD *a3@<X8>)
{
  _DWORD *v5;
  unsigned int **v6;

  sub_20C7F1078(a3, (uint64_t)this);
  v5 = *(_DWORD **)a3;
  if (a3[13] < 7u)
    v5 = a3;
  if (*((_DWORD *)a2 + 13) >= 7u)
    v6 = *a2;
  else
    v6 = (unsigned int **)a2;
  sub_20C82499C((uint64_t)a3, (char *)&v5[2 * a3[12]], v6, &v6[*((unsigned int *)a2 + 12)]);
}

void sub_20C824988(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

void sub_20C82499C(uint64_t a1, char *a2, unsigned int **a3, unsigned int **a4)
{
  unsigned int **v5;
  char *v6;
  unsigned int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  char *v16;
  int64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  unsigned int **v22;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  char *v31;
  unsigned int *v32;
  unsigned int v33;
  char *v34;
  char *v35;
  unsigned int *v36;
  unsigned int *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  char *v50;
  unsigned int *v51;
  unsigned int *v52;
  unsigned int v53;

  v5 = a3;
  v6 = a2;
  v8 = *(_DWORD *)(a1 + 52);
  v9 = (char *)a1;
  if (v8 >= 7)
    v9 = *(char **)a1;
  v10 = *(unsigned int *)(a1 + 48);
  v11 = &v9[8 * v10];
  v12 = a4 - a3;
  v13 = v10 + v12;
  v14 = v8 + (v8 >> 1);
  if (v14 + 1 > (int)v10 + (int)v12)
    v15 = v14 + 1;
  else
    v15 = v10 + v12;
  if (v11 == a2)
  {
    if (v13 > v8)
    {
      sub_20C7F645C(a1, v15);
      v8 = *(_DWORD *)(a1 + 52);
    }
    v34 = (char *)a1;
    if (v8 >= 7)
      v34 = *(char **)a1;
    if (v5 != a4)
    {
      v35 = &v34[8 * *(unsigned int *)(a1 + 48)];
      do
      {
        v36 = *v5;
        *(_QWORD *)v35 = *v5;
        if ((v36 & 7) != 0)
        {
          v37 = (unsigned int *)((unint64_t)v36 & 0xFFFFFFFFFFFFFFF8);
          do
            v38 = __ldxr(v37);
          while (__stxr(v38 + 2, v37));
          if ((v38 & 1) == 0)
            *(_QWORD *)v35 &= 0xFFFFFFFFFFFFFFF8;
        }
        ++v5;
        v35 += 8;
      }
      while (v5 != a4);
    }
  }
  else if (v13 <= v8)
  {
    if (v8 > 6)
    {
      v42 = *(_QWORD **)a1;
      v43 = (*(_QWORD *)a1 + 8 * v10 - (uint64_t)a2) >> 3;
      if (v43 >= v12)
        v40 = a4 - a3;
      else
        v40 = (*(_QWORD *)a1 + 8 * v10 - (uint64_t)a2) >> 3;
      v41 = v43 - v40;
    }
    else
    {
      v39 = (a1 + 8 * v10 - (uint64_t)a2) >> 3;
      if (v39 >= v12)
        v40 = a4 - a3;
      else
        v40 = (a1 + 8 * v10 - (uint64_t)a2) >> 3;
      v41 = v39 - v40;
      v42 = (_QWORD *)a1;
    }
    v44 = (char *)&v42[v10];
    v45 = &a2[8 * v41];
    if (v45 != v44)
    {
      v46 = &v44[8 * (v12 - v40)];
      do
      {
        *(_QWORD *)v46 = *(_QWORD *)v45;
        v46 += 8;
        *(_QWORD *)v45 = 0;
        v45 += 8;
      }
      while (v45 != v44);
    }
    if (v41)
    {
      v47 = 8 * v41;
      v48 = (_QWORD *)((char *)v42 + 8 * v12 + 8 * v10 - 8 * v40 - 8);
      do
      {
        sub_20BF32220(v48--, &v6[v47 - 8]);
        v47 -= 8;
      }
      while (v47);
    }
    if (v40 >= 1)
    {
      do
      {
        sub_20BF32220(v6, v5++);
        v6 += 8;
        --v40;
      }
      while (v40);
    }
    v49 = (char *)a1;
    if (*(_DWORD *)(a1 + 52) >= 7u)
      v49 = *(char **)a1;
    if (v5 != a4)
    {
      v50 = &v49[8 * *(unsigned int *)(a1 + 48)];
      do
      {
        v51 = *v5;
        *(_QWORD *)v50 = *v5;
        if ((v51 & 7) != 0)
        {
          v52 = (unsigned int *)((unint64_t)v51 & 0xFFFFFFFFFFFFFFF8);
          do
            v53 = __ldxr(v52);
          while (__stxr(v53 + 2, v52));
          if ((v53 & 1) == 0)
            *(_QWORD *)v50 &= 0xFFFFFFFFFFFFFFF8;
        }
        ++v5;
        v50 += 8;
      }
      while (v5 != a4);
    }
  }
  else
  {
    v16 = (char *)a1;
    if (v8 >= 7)
      v16 = *(char **)a1;
    v17 = a2 - v16;
    v18 = malloc(8 * v15);
    v19 = v18;
    v20 = (char *)a1;
    if (v8 >= 7)
      v20 = *(char **)a1;
    if (v20 != v6)
    {
      v21 = v18;
      do
      {
        *v21++ = *(_QWORD *)v20;
        *(_QWORD *)v20 = 0;
        v20 += 8;
      }
      while (v20 != v6);
    }
    if (v5 != a4)
    {
      v22 = (unsigned int **)((char *)v18 + (v17 & 0x7FFFFFFF8));
      do
      {
        v23 = *v5;
        *v22 = *v5;
        if ((v23 & 7) != 0)
        {
          v24 = (unsigned int *)((unint64_t)v23 & 0xFFFFFFFFFFFFFFF8);
          do
            v25 = __ldxr(v24);
          while (__stxr(v25 + 2, v24));
          if ((v25 & 1) == 0)
            *v22 = v24;
        }
        ++v5;
        ++v22;
      }
      while (v5 != a4);
      v8 = *(_DWORD *)(a1 + 52);
    }
    v26 = (char *)a1;
    if (v8 >= 7)
      v26 = *(char **)a1;
    v27 = *(unsigned int *)(a1 + 48);
    v28 = &v26[8 * v27];
    if (v28 != v6)
    {
      v29 = (_QWORD *)((char *)&v18[v12] + (v17 & 0x7FFFFFFF8));
      do
      {
        *v29++ = *(_QWORD *)v6;
        *(_QWORD *)v6 = 0;
        v6 += 8;
      }
      while (v6 != v28);
    }
    v30 = (char *)a1;
    if (v8 >= 7)
      v30 = *(char **)a1;
    if ((_DWORD)v27)
    {
      v31 = &v30[8 * v27];
      do
      {
        if ((*(_QWORD *)v30 & 7) != 0)
        {
          v32 = (unsigned int *)(*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8);
          do
            v33 = __ldxr(v32);
          while (__stlxr(v33 - 2, v32));
        }
        v30 += 8;
      }
      while (v30 != v31);
      v8 = *(_DWORD *)(a1 + 52);
    }
    if (v8 >= 7)
      free(*(void **)a1);
    *(_QWORD *)a1 = v19;
    *(_DWORD *)(a1 + 52) = v15;
  }
  *(_DWORD *)(a1 + 48) += v12;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Prepend(unsigned int **this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  unsigned int **v6;

  *(_QWORD *)(a3 + 48) = 0x600000000;
  sub_20C826F2C(a3, (uint64_t *)a2);
  v5 = *(_QWORD *)a3;
  if (*(_DWORD *)(a3 + 52) < 7u)
    v5 = a3;
  v6 = this;
  if (*((_DWORD *)this + 13) >= 7u)
    v6 = (unsigned int **)*this;
  sub_20C82499C(a3, (char *)(v5 + 8 * *(unsigned int *)(a3 + 48)), v6, &v6[*((unsigned int *)this + 12)]);
}

void sub_20C824D98(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Prepend(unsigned int **this@<X0>, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2@<X1>, _DWORD *a3@<X8>)
{
  _DWORD *v5;
  unsigned int **v6;

  sub_20C7F1078(a3, (uint64_t)a2);
  v5 = *(_DWORD **)a3;
  if (a3[13] < 7u)
    v5 = a3;
  v6 = this;
  if (*((_DWORD *)this + 13) >= 7u)
    v6 = (unsigned int **)*this;
  sub_20C82499C((uint64_t)a3, (char *)&v5[2 * a3[12]], v6, &v6[*((unsigned int *)this + 12)]);
}

void sub_20C824E0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **a2)
{
  unint64_t v2;
  BOOL v3;
  uint64_t v4;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v5;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;

  v2 = *((unsigned int *)a2 + 12);
  if ((_DWORD)v2)
  {
    if (v2 <= *((_DWORD *)this + 12))
    {
      v3 = 0;
      v4 = 0;
      if (*((_DWORD *)a2 + 13) >= 7u)
        v5 = *a2;
      else
        v5 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)a2;
      do
      {
        v6 = this;
        if (*((_DWORD *)this + 13) >= 7u)
          v6 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
        if ((*((_QWORD *)v6 + v4) & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v5 + v4) & 0xFFFFFFFFFFFFFFF8))
          break;
        v3 = ++v4 >= v2;
      }
      while (v2 != v4);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    return 1;
  }
  return v3;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetCommonPrefix@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2@<X1>, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a3@<X8>)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v8;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v10;

  LODWORD(v5) = *((_DWORD *)a2 + 12);
  v7 = *((_DWORD *)this + 12);
  v6 = *((_DWORD *)this + 13);
  if (v5 >= v7)
    v5 = v7;
  else
    v5 = v5;
  if ((_DWORD)v5)
  {
    v8 = a2;
    v9 = 0;
    if (*((_DWORD *)v8 + 13) >= 7u)
      v8 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v8;
    while (1)
    {
      v10 = this;
      if (v6 >= 7)
        v10 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
      if ((*((_QWORD *)v10 + v9) & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v8 + v9) & 0xFFFFFFFFFFFFFFF8))
        break;
      if (v5 == ++v9)
      {
        v9 = v5;
        break;
      }
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 >= 7)
    this = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
  return pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator(a3, v9, this);
}

BOOL pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  unint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v7;

  LODWORD(v2) = *((_DWORD *)a2 + 12);
  v3 = *((_DWORD *)this + 12);
  if (v3 >= v2)
    v2 = v2;
  else
    v2 = v3;
  if ((_DWORD)v2)
  {
    v4 = 0;
    v5 = 0;
    if (*((_DWORD *)a2 + 13) >= 7u)
      v6 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a2;
    else
      v6 = a2;
    do
    {
      v7 = this;
      if (*((_DWORD *)this + 13) >= 7u)
        v7 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
      if ((*((_QWORD *)v6 + v5) & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v7 + v5) & 0xFFFFFFFFFFFFFFF8))
        break;
      v4 = ++v5 >= v2;
    }
    while (v2 != v5);
  }
  else
  {
    return 1;
  }
  return v4;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::ReplacePrefix(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this@<X0>, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **a2@<X1>, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a3@<X2>, _DWORD *a4@<X8>)
{
  _DWORD *v8;
  char *v9;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v10;

  if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(this, a2))
  {
    sub_20C7F1078(a4, (uint64_t)a3);
    v8 = *(_DWORD **)a4;
    if (a4[13] < 7u)
      v8 = a4;
    v9 = (char *)&v8[2 * a4[12]];
    v10 = this;
    if (*((_DWORD *)this + 13) >= 7u)
      v10 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
    sub_20C82499C((uint64_t)a4, v9, (unsigned int **)v10 + *((unsigned int *)a2 + 12), (unsigned int **)v10 + *((unsigned int *)this + 12));
  }
  else
  {
    sub_20C7F1078(a4, (uint64_t)this);
  }
}

void sub_20C82504C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetString@<X0>(uint64_t this@<X0>, const char *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const char *v9;
  size_t v10;
  _QWORD *v11;
  size_t v12;
  uint64_t v13;
  unint64_t v14;
  const char *v15;
  size_t v16;
  _QWORD v17[11];
  char v18;
  uint64_t v19;

  if (*(_DWORD *)(this + 48))
  {
    v4 = this;
    sub_20BDDE5E0((uint64_t)v17);
    if (*(_DWORD *)(v4 + 48) != 1)
    {
      v5 = 0;
      v6 = 8 * (*(_DWORD *)(v4 + 48) - 1);
      do
      {
        v7 = v4;
        if (*(_DWORD *)(v4 + 52) >= 7u)
          v7 = *(_QWORD *)v4;
        v8 = *(_QWORD *)(v7 + v5) & 0xFFFFFFFFFFFFFFF8;
        if (v8)
        {
          v9 = (const char *)(v8 + 16);
          if (*(char *)(v8 + 39) < 0)
            v9 = *(const char **)v9;
        }
        else
        {
          v9 = "";
        }
        v10 = strlen(v9);
        v11 = sub_20BDDC1C8(v17, (uint64_t)v9, v10);
        v12 = strlen(a2);
        sub_20BDDC1C8(v11, (uint64_t)a2, v12);
        v5 += 8;
      }
      while (v6 != v5);
    }
    v13 = v4;
    if (*(_DWORD *)(v4 + 52) >= 7u)
      v13 = *(_QWORD *)v4;
    v14 = *(_QWORD *)(v13 + 8 * *(unsigned int *)(v4 + 48) - 8) & 0xFFFFFFFFFFFFFFF8;
    if (v14)
    {
      v15 = (const char *)(v14 + 16);
      if (*(char *)(v14 + 39) < 0)
        v15 = *(const char **)v15;
    }
    else
    {
      v15 = "";
    }
    v16 = strlen(v15);
    sub_20BDDC1C8(v17, (uint64_t)v15, v16);
    std::stringbuf::str();
    v17[0] = *MEMORY[0x24BEDB800];
    *(_QWORD *)((char *)v17 + *(_QWORD *)(v17[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
    v17[1] = MEMORY[0x24BEDB848] + 16;
    if (v18 < 0)
      operator delete((void *)v17[9]);
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    return MEMORY[0x212B92EB0](&v19);
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return this;
}

void sub_20C825220(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v6;
  unsigned int v7;
  uint64_t *v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  const void *v20;
  const void *v21;
  int v22;
  unint64_t v23;
  const void *v24;
  const void *v25;
  int v26;
  size_t v27;
  const void *v28;
  size_t v29;
  const void *v30;
  size_t v31;
  int v32;
  BOOL v33;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  const void *v39;
  const void *v40;
  int v41;
  unint64_t v42;
  const void *v43;
  const void *v44;
  int v45;
  size_t v46;
  const void *v47;
  size_t v48;
  const void *v49;
  size_t v50;
  int v51;
  unsigned int v53;

  LODWORD(v2) = *((_DWORD *)a1 + 12);
  v3 = *((_DWORD *)a2 + 12);
  if (v3 >= v2)
    v4 = v2;
  else
    v4 = v3;
  if (!(_DWORD)v4)
  {
    LOBYTE(v2) = v2 < v3;
    return v2 & 1;
  }
  v53 = *((_DWORD *)a1 + 12);
  v6 = 0;
  v7 = *((_DWORD *)a1 + 13);
  if (*((_DWORD *)a2 + 13) >= 7u)
    v8 = (uint64_t *)*a2;
  else
    v8 = a2;
  v9 = 1;
  while (1)
  {
    v10 = a1;
    if (v7 >= 7)
      v10 = (uint64_t *)*a1;
    v11 = v10[v6];
    v12 = v8[v6];
    if (!v11 || v12 == 0)
    {
      if (v11)
        v14 = 1;
      else
        v14 = v12 == 0;
      if (!v14)
        goto LABEL_73;
    }
    else if (v11 != v12)
    {
      v15 = v11 & 0xFFFFFFFFFFFFFFF8;
      v16 = v12 & 0xFFFFFFFFFFFFFFF8;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v17 < v18)
        goto LABEL_73;
      if (v17 == v18)
      {
        v21 = *(const void **)(v16 + 16);
        v19 = v16 + 16;
        v20 = v21;
        v22 = *(char *)(v19 + 23);
        v25 = *(const void **)(v15 + 16);
        v23 = v15 + 16;
        v24 = v25;
        v26 = *(char *)(v23 + 23);
        if (v26 >= 0)
          v27 = *(unsigned __int8 *)(v23 + 23);
        else
          v27 = *(_QWORD *)(v23 + 8);
        if (v26 >= 0)
          v28 = (const void *)v23;
        else
          v28 = v24;
        if (v22 >= 0)
          v29 = *(unsigned __int8 *)(v19 + 23);
        else
          v29 = *(_QWORD *)(v19 + 8);
        if (v22 >= 0)
          v30 = (const void *)v19;
        else
          v30 = v20;
        if (v29 >= v27)
          v31 = v27;
        else
          v31 = v29;
        v32 = memcmp(v28, v30, v31);
        v33 = v27 < v29;
        if (v32)
          v33 = v32 < 0;
        if (v33)
        {
LABEL_73:
          LOBYTE(v2) = 1;
          goto LABEL_75;
        }
      }
    }
    v34 = a1;
    if (v7 >= 7)
      v34 = (uint64_t *)*a1;
    v2 = v34[v6];
    if (v12)
    {
      if (v2)
        break;
    }
    if (!v12 && v2)
      goto LABEL_74;
LABEL_70:
    v9 = ++v6 < v4;
    if (v4 == v6)
      goto LABEL_75;
  }
  if (v12 == v2)
    goto LABEL_70;
  v35 = v12 & 0xFFFFFFFFFFFFFFF8;
  v2 &= 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8);
  v37 = *(_QWORD *)(v2 + 8);
  if (v36 >= v37)
  {
    if (v36 != v37)
      goto LABEL_70;
    v40 = *(const void **)(v2 + 16);
    v38 = v2 + 16;
    v39 = v40;
    v41 = *(char *)(v38 + 23);
    v44 = *(const void **)(v35 + 16);
    v42 = v35 + 16;
    v43 = v44;
    v45 = *(char *)(v42 + 23);
    if (v45 >= 0)
      v46 = *(unsigned __int8 *)(v42 + 23);
    else
      v46 = *(_QWORD *)(v42 + 8);
    if (v45 >= 0)
      v47 = (const void *)v42;
    else
      v47 = v43;
    if (v41 >= 0)
      v48 = *(unsigned __int8 *)(v38 + 23);
    else
      v48 = *(_QWORD *)(v38 + 8);
    if (v41 >= 0)
      v49 = (const void *)v38;
    else
      v49 = v39;
    if (v48 >= v46)
      v50 = v46;
    else
      v50 = v48;
    v51 = memcmp(v47, v49, v50);
    LOBYTE(v2) = v46 < v48;
    if (v51)
      LOBYTE(v2) = v51 < 0;
    if ((v2 & 1) == 0)
      goto LABEL_70;
  }
LABEL_74:
  LOBYTE(v2) = 0;
LABEL_75:
  if (!v9)
    LOBYTE(v2) = v53 < v3;
  return v2 & 1;
}

_QWORD *pxrInternal__aapl__pxrReserved__::operator<<(_QWORD *a1, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this)
{
  void **v3;
  uint64_t v4;
  _QWORD *v5;
  void *__p[2];
  unsigned __int8 v8;

  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetString((uint64_t)this, "/", __p);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  v5 = sub_20BDDC1C8(a1, (uint64_t)v3, v4);
  if ((char)v8 < 0)
    operator delete(__p[0]);
  return v5;
}

void sub_20C8254CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_Normalize(uint64_t this)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;

  v1 = *(unsigned int *)(this + 448);
  if (v1 >= 2)
  {
    v2 = this;
    if (*(_DWORD *)(this + 452) >= 9u)
      this = *(_QWORD *)this;
    this = (uint64_t)sub_20C826FC0((uint64_t *)this, this + 56 * v1, (uint64_t)&v6, 126 - 2 * __clz(v1), 1);
    v3 = *(unsigned int *)(v2 + 448);
    if (v3 >= 2)
    {
      v4 = 1;
      do
      {
        if (*(_DWORD *)(v2 + 452) > 8u)
        {
          v5 = *(_QWORD *)v2;
          this = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(*(_QWORD *)v2 + 56 * v4), (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(*(_QWORD *)v2+ 56 * (v4 - 1)));
          if ((_DWORD)this)
          {
LABEL_10:
            this = sub_20C82588C((uint64_t *)v2, v5 + 56 * v4, v5 + 56 * v4 + 56);
            v3 = *(unsigned int *)(v2 + 448);
            continue;
          }
        }
        else
        {
          this = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v2 + 56 * v4), (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v2 + 56 * (v4 - 1)));
          v5 = v2;
          if ((this & 1) != 0)
            goto LABEL_10;
        }
        ++v4;
      }
      while (v4 < v3);
    }
  }
  return this;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v3;
  uint64_t v4[2];
  _DWORD v5[14];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = atomic_load((unsigned __int8 *)&qword_25498DE20);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)__cxa_guard_acquire(&qword_25498DE20);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(v3);
      sub_20C7F1078(v5, (uint64_t)&unk_25498DDB8);
      v4[0] = (uint64_t)v5;
      v4[1] = 1;
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::HdDataSourceLocatorSet(dword_25498DE28, v4);
      __cxa_atexit((void (*)(void *))sub_20C7FCC8C, dword_25498DE28, &dword_20BDBC000);
      sub_20C7E0EB0((uint64_t)v5);
      qword_25498DE18 = (uint64_t)dword_25498DE28;
      __cxa_guard_release(&qword_25498DE20);
    }
  }
  return qword_25498DE18;
}

void sub_20C8256B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C7E0EB0((uint64_t)va);
  __cxa_guard_abort(&qword_25498DE20);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::HdDataSourceLocatorSet(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  _DWORD v4[14];
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  sub_20C7F1078(v4, (uint64_t)a2);
  *((_QWORD *)this + 56) = 0x800000001;
  sub_20C7F0FE4((uint64_t)v4, (uint64_t)&v5, (uint64_t)this);
  sub_20C7E0EB0((uint64_t)v4);
  return this;
}

void sub_20C825764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C7E0EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::HdDataSourceLocatorSet(_DWORD *a1, uint64_t *a2)
{
  _DWORD *v3;

  v3 = sub_20C828378(a1, *a2, *a2 + 56 * a2[1]);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_Normalize((uint64_t)v3);
  return a1;
}

void sub_20C8257BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7F1148(v1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_InsertAndDeleteSuffixes(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **a2, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a3)
{
  uint64_t result;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *i;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v12;

  result = sub_20C828404((uint64_t)this, (char *)*a2, (uint64_t)a3);
  v6 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)result;
  v7 = 0;
  *a2 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)result;
  v8 = result + 56;
  v9 = *((_DWORD *)this + 113);
  v10 = *((_DWORD *)this + 112);
  for (i = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(result + 56);
        ;
        i = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)i + 56))
  {
    v12 = this;
    if (v9 >= 9)
      v12 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
    if (i == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v12 + 56 * v10))
      break;
    result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(i, v6);
    if (!(_DWORD)result)
      break;
    --v7;
  }
  if (v7)
  {
    result = sub_20C82588C((uint64_t *)this, v8, (uint64_t)i);
    *a2 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(result - 56);
  }
  return result;
}

uint64_t sub_20C82588C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  if (a2 != a3)
  {
    v5 = 0x6DB6DB6DB6DB6DB7 * ((a3 - a2) >> 3);
    v6 = a1;
    if (*((_DWORD *)a1 + 113) >= 9u)
      v6 = (uint64_t *)*a1;
    v7 = (uint64_t)&v6[7 * *((unsigned int *)a1 + 112)];
    sub_20C828610((uint64_t)&v10, a3, v7, a2);
    if ((_DWORD)v5)
    {
      v8 = -56 * v5;
      do
      {
        sub_20C7E0EB0(v7 + v8);
        v8 += 56;
      }
      while (v8);
    }
    *((_DWORD *)a1 + 112) -= v5;
  }
  return a2;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  unsigned int v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  unint64_t v7;
  uint64_t *v8;
  int v9;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v10;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v12;

  v4 = *((_DWORD *)this + 112);
  if (!v4)
    return (uint64_t)sub_20C828684((uint64_t)this, (uint64_t)a2);
  v5 = *((_DWORD *)this + 113);
  v6 = this;
  if (v5 >= 9)
    v6 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
  v7 = *((unsigned int *)this + 112);
  do
  {
    v8 = (uint64_t *)((char *)v6 + 56 * (v7 >> 1));
    v9 = sub_20C825A58(v8, (uint64_t *)a2);
    if (v9)
      v7 += ~(v7 >> 1);
    else
      v7 >>= 1;
    if (v9)
      v6 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v8 + 7);
  }
  while (v7);
  v12 = v6;
  v10 = this;
  if (v5 >= 9)
    v10 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
  if (v6 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v10 + 56 * v4))
    return pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_InsertAndDeleteSuffixes(this, &v12, a2);
  result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v6);
  if ((result & 1) == 0)
    return pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_InsertAndDeleteSuffixes(this, &v12, a2);
  return result;
}

unint64_t sub_20C825A58(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  const void *v17;
  const void *v18;
  int v19;
  unint64_t v20;
  const void *v21;
  const void *v22;
  int v23;
  size_t v24;
  const void *v25;
  size_t v26;
  const void *v27;
  size_t v28;
  int v29;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  unint64_t v43;
  const void *v44;
  unint64_t v45;
  const void *v46;
  size_t v47;
  int v48;

  LODWORD(v2) = *((_DWORD *)a1 + 12);
  if (!(_DWORD)v2)
    return v2 & 1;
  v3 = *((_DWORD *)a2 + 12);
  if (v3 >= v2)
    v4 = v2;
  else
    v4 = v3;
  if (!(_DWORD)v4)
  {
    LOBYTE(v2) = 0;
    return v2 & 1;
  }
  v5 = 0;
  if (*((_DWORD *)a1 + 13) >= 7u)
    v6 = (uint64_t *)*a1;
  else
    v6 = a1;
  LODWORD(v2) = *((_DWORD *)a2 + 13);
  if (v2 >= 7)
    v7 = (uint64_t *)*a2;
  else
    v7 = a2;
  v8 = 1;
  while (1)
  {
    v9 = v6[v5];
    v10 = v7[v5];
    if (!v9 || v10 == 0)
    {
      if (v9)
        v12 = 1;
      else
        v12 = v10 == 0;
      if (!v12)
        goto LABEL_79;
    }
    else if (v9 != v10)
    {
      v13 = v9 & 0xFFFFFFFFFFFFFFF8;
      v2 = v10 & 0xFFFFFFFFFFFFFFF8;
      v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);
      v15 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v14 < v15)
        goto LABEL_79;
      if (v14 == v15)
      {
        v18 = *(const void **)(v2 + 16);
        v16 = v2 + 16;
        v17 = v18;
        v19 = *(char *)(v16 + 23);
        v22 = *(const void **)(v13 + 16);
        v20 = v13 + 16;
        v21 = v22;
        v23 = *(char *)(v20 + 23);
        if (v23 >= 0)
          v24 = *(unsigned __int8 *)(v20 + 23);
        else
          v24 = *(_QWORD *)(v20 + 8);
        if (v23 >= 0)
          v25 = (const void *)v20;
        else
          v25 = v21;
        if (v19 >= 0)
          v26 = *(unsigned __int8 *)(v16 + 23);
        else
          v26 = *(_QWORD *)(v16 + 8);
        if (v19 >= 0)
          v27 = (const void *)v16;
        else
          v27 = v17;
        if (v26 >= v24)
          v28 = v24;
        else
          v28 = v26;
        v29 = memcmp(v25, v27, v28);
        LOBYTE(v2) = v24 < v26;
        if (v29)
          LOBYTE(v2) = v29 < 0;
        if ((v2 & 1) != 0)
        {
LABEL_79:
          LOBYTE(v2) = 1;
          goto LABEL_81;
        }
      }
    }
    if (!v10 || v9 == 0)
      break;
    if (v10 != v9)
    {
      v32 = v10 & 0xFFFFFFFFFFFFFFF8;
      v2 = v9 & 0xFFFFFFFFFFFFFFF8;
      v33 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
      v34 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v33 < v34)
        goto LABEL_80;
      if (v33 == v34)
      {
        v37 = *(_QWORD *)(v2 + 16);
        v35 = v2 + 16;
        v36 = v37;
        v38 = *(char *)(v35 + 23);
        v41 = *(_QWORD *)(v32 + 16);
        v39 = v32 + 16;
        v40 = v41;
        v42 = *(char *)(v39 + 23);
        v43 = v42 >= 0 ? *(unsigned __int8 *)(v39 + 23) : *(_QWORD *)(v39 + 8);
        v44 = (const void *)(v42 >= 0 ? v39 : v40);
        v45 = v38 >= 0 ? *(unsigned __int8 *)(v35 + 23) : *(_QWORD *)(v35 + 8);
        v46 = (const void *)(v38 >= 0 ? v35 : v36);
        v47 = v45 >= v43 ? v43 : v45;
        v48 = memcmp(v44, v46, v47);
        LOBYTE(v2) = v43 < v45;
        if (v48)
          LOBYTE(v2) = v48 < 0;
        if ((v2 & 1) != 0)
          goto LABEL_80;
      }
    }
LABEL_76:
    v8 = ++v5 < v4;
    if (v4 == v5)
      goto LABEL_81;
  }
  if (v9)
    v31 = v10 == 0;
  else
    v31 = 0;
  if (!v31)
    goto LABEL_76;
LABEL_80:
  LOBYTE(v2) = 0;
LABEL_81:
  LOBYTE(v2) = v8 & v2;
  return v2 & 1;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v2;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v4;
  unsigned int v5;
  BOOL v6;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v7;
  uint64_t *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t *i;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v12;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v13;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v14;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v17;

  v16 = *((unsigned int *)a2 + 112);
  if ((_DWORD)v16)
  {
    v2 = a2;
    if (*((_DWORD *)this + 112))
    {
      v4 = this;
      if (*((_DWORD *)this + 113) >= 9u)
        v4 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
      v17 = v4;
      v5 = *((_DWORD *)a2 + 113);
      v6 = v5 < 9;
      v7 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)a2;
      if (v5 >= 9)
        v8 = *(uint64_t **)a2;
      else
        v8 = (uint64_t *)a2;
      while (1)
      {
        v9 = *((_DWORD *)this + 113);
        v10 = *((_DWORD *)this + 112);
        for (i = (uint64_t *)v17; ; i += 7)
        {
          v12 = this;
          if (v9 >= 9)
            v12 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
          if (i == (uint64_t *)((char *)v12 + 56 * v10) || !sub_20C825A58(i, v8))
            break;
        }
        v17 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)i;
        v13 = this;
        if (v9 >= 9)
          v13 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
        if (i == (uint64_t *)((char *)v13 + 56 * v10))
          break;
        if (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v8, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)i))
        {
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_InsertAndDeleteSuffixes(this, &v17, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v8);
          v5 = *((_DWORD *)v2 + 113);
          v7 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v2;
          v16 = *((unsigned int *)v2 + 112);
        }
        v8 += 7;
        v6 = v5 < 9;
        if (v5 >= 9)
          v14 = v7;
        else
          v14 = v2;
        if (v8 == (uint64_t *)((char *)v14 + 56 * v16))
          return;
      }
      if (v6)
        v15 = v2;
      else
        v15 = v7;
      sub_20C825DF0((uint64_t)this, (char *)i, (uint64_t)v8, (uint64_t)v15 + 56 * v16);
    }
    else if (this != a2)
    {
      if (*((_DWORD *)a2 + 113) >= 9u)
        a2 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)a2;
      sub_20C82877C((uint64_t)this, (uint64_t)a2, (uint64_t)a2 + 56 * v16);
    }
  }
}

void sub_20C825DF0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  unsigned int v8;
  char *v9;
  int v10;
  char *v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  char *v16;
  unsigned int v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v32;

  v5 = a3;
  v6 = a2;
  v8 = *(_DWORD *)(a1 + 452);
  v9 = (char *)a1;
  if (v8 >= 9)
    v9 = *(char **)a1;
  v10 = *(_DWORD *)(a1 + 448);
  v11 = &v9[56 * v10];
  v12 = 0x6DB6DB6DB6DB6DB7 * ((a4 - a3) >> 3);
  v13 = v10 - 1227133513 * ((a4 - a3) >> 3);
  v14 = v8 + (v8 >> 1);
  if (v14 + 1 > v13)
    v15 = v14 + 1;
  else
    v15 = v10 - 1227133513 * ((a4 - a3) >> 3);
  if (v11 == a2)
  {
    if (v13 > v8)
    {
      sub_20C8286F8(a1, v15);
      v8 = *(_DWORD *)(a1 + 452);
    }
    v22 = (char *)a1;
    if (v8 < 9)
      goto LABEL_21;
LABEL_20:
    v22 = *(char **)a1;
LABEL_21:
    sub_20C7F0FE4(v5, a4, (uint64_t)&v22[56 * *(unsigned int *)(a1 + 448)]);
    goto LABEL_22;
  }
  if (v13 <= v8)
  {
    v23 = (char *)a1;
    if (v8 >= 9)
      v23 = *(char **)a1;
    v24 = 0x6DB6DB6DB6DB6DB7 * ((&v23[56 * v10] - a2) >> 3);
    if (v24 >= v12)
      v25 = 0x6DB6DB6DB6DB6DB7 * ((a4 - a3) >> 3);
    else
      v25 = v24;
    v26 = &a2[56 * (v24 - v25)];
    v27 = (char *)a1;
    if (v8 >= 9)
      v27 = *(char **)a1;
    v28 = (uint64_t)&v27[56 * v10];
    v29 = (char *)(v28 + 56 * (v12 - v25));
    sub_20C7F52F4((uint64_t)v26, v28, (uint64_t)v29);
    sub_20C828800((uint64_t)&v32, v6, v26, v29);
    if (v25 >= 1)
    {
      do
      {
        if ((char *)v5 != v6)
        {
          if (*(_DWORD *)(v5 + 52) >= 7u)
            v30 = *(char **)v5;
          else
            v30 = (char *)v5;
          sub_20C7F6360((uint64_t)v6, v30, &v30[8 * *(unsigned int *)(v5 + 48)]);
        }
        v5 += 56;
        v6 += 56;
        --v25;
      }
      while (v25);
    }
    v22 = (char *)a1;
    if (*(_DWORD *)(a1 + 452) < 9u)
      goto LABEL_21;
    goto LABEL_20;
  }
  v16 = (char *)a1;
  if (v8 >= 9)
    v16 = *(char **)a1;
  v17 = -1227133513 * ((unint64_t)(a2 - v16) >> 3);
  v18 = malloc(56 * v15);
  v19 = (uint64_t)v18 + 56 * v17;
  v20 = a1;
  if (v8 >= 9)
    v20 = *(_QWORD *)a1;
  sub_20C7F52F4(v20, (uint64_t)v6, (uint64_t)v18);
  sub_20C7F0FE4(v5, a4, v19);
  v21 = a1;
  if (*(_DWORD *)(a1 + 452) >= 9u)
    v21 = *(_QWORD *)a1;
  sub_20C7F52F4((uint64_t)v6, v21 + 56 * *(unsigned int *)(a1 + 448), v19 + 56 * v12);
  sub_20C7F1184(a1);
  if (*(_DWORD *)(a1 + 452) >= 9u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v18;
  *(_DWORD *)(a1 + 452) = v15;
LABEL_22:
  *(_DWORD *)(a1 + 448) += v12;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  uint64_t v4;

  v4 = *((unsigned int *)this + 112);
  if ((_DWORD)v4)
  {
    if (v4 + 5 < (unint64_t)*((unsigned int *)a2 + 112))
      sub_20C8260F4((uint64_t)this, (uint64_t)a2);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert(this, a2);
  }
  else if (this != a2)
  {
    sub_20C8260F4((uint64_t)this, (uint64_t)a2);
  }
}

uint64_t sub_20C8260F4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v2 = result;
  v3 = *(_DWORD *)(a2 + 452);
  if (*(_DWORD *)(result + 452) > 8u)
  {
    if (v3 >= 9)
    {
      v24 = *(_QWORD *)result;
      *(_QWORD *)result = *(_QWORD *)a2;
      *(_QWORD *)a2 = v24;
      LODWORD(v24) = *(_DWORD *)(result + 448);
      *(_DWORD *)(result + 448) = *(_DWORD *)(a2 + 448);
      *(_DWORD *)(a2 + 448) = v24;
      LODWORD(v24) = *(_DWORD *)(result + 452);
      *(_DWORD *)(result + 452) = *(_DWORD *)(a2 + 452);
      *(_DWORD *)(a2 + 452) = v24;
      return result;
    }
    v15 = a2;
  }
  else
  {
    if (v3 <= 8)
    {
      v4 = *(_DWORD *)(result + 448);
      v5 = *(_DWORD *)(a2 + 448);
      if (v4 >= v5)
        v6 = a2;
      else
        v6 = result;
      if (v4 < v5)
        v2 = a2;
      v7 = v6;
      if (*(_DWORD *)(v6 + 452) >= 9u)
        v7 = *(_QWORD *)v6;
      v8 = v2;
      if (*(_DWORD *)(v2 + 452) >= 9u)
        v8 = *(_QWORD *)v2;
      result = sub_20C828880(v7, v7 + 56 * *(unsigned int *)(v6 + 448), v8);
      v9 = *(unsigned int *)(v6 + 448);
      LODWORD(v10) = *(_DWORD *)(v2 + 448);
      if (v9 < v10)
      {
        v11 = 56 * v9;
        do
        {
          v12 = v6;
          if (*(_DWORD *)(v6 + 452) >= 9u)
            v12 = *(_QWORD *)v6;
          v13 = v2;
          if (*(_DWORD *)(v2 + 452) >= 9u)
            v13 = *(_QWORD *)v2;
          sub_20C7F1078((_DWORD *)(v12 + v11), v13 + v11);
          v14 = v2;
          if (*(_DWORD *)(v2 + 452) >= 9u)
            v14 = *(_QWORD *)v2;
          result = sub_20C7E0EB0(v14 + v11);
          ++v9;
          v10 = *(unsigned int *)(v2 + 448);
          v11 += 56;
        }
        while (v9 < v10);
        LODWORD(v9) = *(_DWORD *)(v6 + 448);
      }
      *(_DWORD *)(v6 + 448) = v10;
      *(_DWORD *)(v2 + 448) = v9;
      return result;
    }
    v15 = result;
    v2 = a2;
  }
  v16 = *(_QWORD *)v2;
  LODWORD(v17) = *(_DWORD *)(v15 + 448);
  if ((_DWORD)v17)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = v15;
      if (*(_DWORD *)(v15 + 452) >= 9u)
        v20 = *(_QWORD *)v15;
      sub_20C7F1078((_DWORD *)(v2 + v18), v20 + v18);
      v21 = v15;
      if (*(_DWORD *)(v15 + 452) >= 9u)
        v21 = *(_QWORD *)v15;
      result = sub_20C7E0EB0(v21 + v18);
      ++v19;
      v17 = *(unsigned int *)(v15 + 448);
      v18 += 56;
    }
    while (v19 < v17);
  }
  *(_QWORD *)v15 = v16;
  v22 = *(_DWORD *)(v2 + 448);
  *(_DWORD *)(v2 + 448) = v17;
  *(_DWORD *)(v15 + 448) = v22;
  v23 = *(_DWORD *)(v2 + 452);
  *(_DWORD *)(v2 + 452) = *(_DWORD *)(v15 + 452);
  *(_DWORD *)(v15 + 452) = v23;
  return result;
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v5;

  v4 = *((_DWORD *)this + 112);
  if (!v4)
    return sub_20C828684((uint64_t)this, (uint64_t)a2);
  v5 = this;
  if (*((_DWORD *)this + 113) >= 9u)
    v5 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
  if (!sub_20C825A58((uint64_t *)v5 + 7 * v4 - 7, (uint64_t *)a2))
    return (_DWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert(this, a2);
  else
    return sub_20C828684((uint64_t)this, (uint64_t)a2);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(_DWORD *this)
{
  if (this[113] >= 9u)
    return *(_DWORD **)this;
  return this;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v1;

  v1 = this;
  if (*((_DWORD *)this + 113) >= 9u)
    v1 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
  return (uint64_t)v1 + 56 * *((unsigned int *)this + 112);
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_FirstIntersection(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v3;
  unsigned int v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v7;
  unint64_t v8;
  uint64_t *v9;
  int v10;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v11;

  v3 = this;
  v4 = *((_DWORD *)this + 112);
  v5 = *((_DWORD *)this + 113);
  v6 = this;
  if (v4 <= 4)
  {
    if (v5 >= 9)
      v6 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
    v7 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)this + 56 * v4);
    while (1)
    {
      if (v5 > 8)
      {
        if (v6 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(*(_QWORD *)v3 + 56 * v4))
        {
          v3 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v3;
          return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v3 + 56 * v4);
        }
      }
      else if (v6 == v7)
      {
        return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v3 + 56 * v4);
      }
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(v6, a2))
        return v6;
      v6 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v6 + 56);
    }
  }
  if (v5 >= 9)
    v6 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
  v8 = *((unsigned int *)this + 112);
  do
  {
    v9 = (uint64_t *)((char *)v6 + 56 * (v8 >> 1));
    v10 = sub_20C825A58(v9, (uint64_t *)a2);
    if (v10)
      v8 += ~(v8 >> 1);
    else
      v8 >>= 1;
    if (v10)
      v6 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v9 + 7);
  }
  while (v8);
  v11 = v3;
  if (v5 >= 9)
    v11 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v3;
  if (v6 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v11 + 56 * v4)
    || !pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v6)&& !pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v6, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a2))
  {
    if (v5 >= 9)
      v3 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v3;
    return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v3 + 56 * v4);
  }
  return v6;
}

BOOL pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersects(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *Intersection;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v4;

  Intersection = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_FirstIntersection(this, a2);
  v4 = this;
  if (*((_DWORD *)this + 113) >= 9u)
    v4 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
  return Intersection != (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v4
                                                                                    + 56 * *((unsigned int *)this + 112));
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersects(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **a2)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v7;
  uint64_t v8;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v9;
  uint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v14;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v15;
  int v16;
  int v17;

  v2 = this;
  v3 = *((_DWORD *)this + 112);
  v4 = *((unsigned int *)a2 + 112);
  v5 = *((_DWORD *)this + 113);
  if (v4 * v3 <= 8)
  {
    if (v5 >= 9)
      v2 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
    if (v3)
    {
      v6 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v2 + 56 * v3);
      if (*((_DWORD *)a2 + 113) >= 9u)
        v7 = *a2;
      else
        v7 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)a2;
      while (1)
      {
        v8 = 56 * v4;
        v9 = v7;
        if ((_DWORD)v4)
          break;
LABEL_11:
        result = 0;
        v2 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v2 + 56);
        if (v2 == v6)
          return result;
      }
      while (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(v2, v9))
      {
        v9 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v9 + 56);
        v8 -= 56;
        if (!v8)
          goto LABEL_11;
      }
      return 1;
    }
    return 0;
  }
  v11 = (uint64_t *)this;
  if (v5 >= 9)
    v11 = *(uint64_t **)this;
  if (*((_DWORD *)a2 + 113) >= 9u)
    v12 = (uint64_t *)*a2;
  else
    v12 = (uint64_t *)a2;
  if (!(_DWORD)v4)
    return 0;
  v13 = &v12[7 * v4];
  while (1)
  {
    while (1)
    {
      v14 = v2;
      if (v5 >= 9)
        v14 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v2;
      if (v11 == (uint64_t *)((char *)v14 + 56 * v3) || !sub_20C825A58(v11, v12))
        break;
      v11 += 7;
    }
    v15 = v2;
    if (v5 >= 9)
      v15 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v2;
    if (v11 == (uint64_t *)((char *)v15 + 56 * v3))
      break;
    if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v12, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v11)|| pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v11, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v12))
    {
      v17 = 1;
      v16 = 1;
      return v17 & v16;
    }
    v12 += 7;
    if (v12 == v13)
    {
      v17 = 0;
      return v17 & v16;
    }
  }
  v16 = 0;
  v17 = 1;
  return v17 & v16;
}

BOOL pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Contains(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  _BOOL8 result;
  uint64_t v8;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **v9;
  unint64_t v10;
  uint64_t *v11;
  int v12;

  v3 = this;
  v4 = *((_DWORD *)this + 112);
  v5 = *((_DWORD *)this + 113);
  if (v4 > 4)
  {
    v9 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)this;
    if (v5 >= 9)
      v9 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator ***)this;
    v10 = *((unsigned int *)this + 112);
    do
    {
      v11 = (uint64_t *)&v9[7 * (v10 >> 1)];
      v12 = sub_20C825A58(v11, (uint64_t *)a2);
      if (v12)
        v10 += ~(v10 >> 1);
      else
        v10 >>= 1;
      if (v12)
        v9 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)(v11 + 7);
    }
    while (v10);
    if (v5 >= 9)
      v3 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v3;
    if (v9 != (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)((char *)v3 + 56 * v4))
      return pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(a2, v9);
    return 0;
  }
  if (v5 >= 9)
    v3 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)this;
  if (!v4)
    return 0;
  v6 = 56 * v4 - 56;
  do
  {
    result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v3);
    if ((result & 1) != 0)
      break;
    v3 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v3 + 56);
    v8 = v6;
    v6 -= 56;
  }
  while (v8);
  return result;
}

BOOL pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IsEmpty(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this)
{
  return *((_DWORD *)this + 112) == 0;
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::ReplacePrefix@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2@<X1>, char **a3@<X2>, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v4;
  unsigned int v8;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v13;
  unint64_t v14;
  uint64_t *v15;
  int v16;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v17;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v18;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v19;
  char *v20;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v22;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v23;
  uint64_t v24;
  unint64_t v25;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v26;
  _BOOL4 HasPrefix;
  char *v28;
  unsigned int v29;
  _QWORD v30[6];
  int v31;
  unsigned int v32;
  uint64_t v33;

  v4 = this;
  v33 = *MEMORY[0x24BDAC8D0];
  if (!*((_DWORD *)this + 112) || (sub_20C826E38((uint64_t *)a2, (uint64_t)a3) & 1) != 0)
    return sub_20C7F0F64(a4, (uint64_t)v4);
  v8 = *((_DWORD *)v4 + 112);
  if (v8 > 4)
  {
    v13 = v4;
    v29 = *((_DWORD *)v4 + 113);
    if (v29 >= 9)
      v13 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v4;
    v14 = *((unsigned int *)v4 + 112);
    do
    {
      v15 = (uint64_t *)((char *)v13 + 56 * (v14 >> 1));
      v16 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v15, (uint64_t *)a2);
      if (v16)
        v14 += ~(v14 >> 1);
      else
        v14 >>= 1;
      if (v16)
        v13 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v15 + 7);
    }
    while (v14);
    v17 = v4;
    if (v29 >= 9)
      v17 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v4;
    if (v13 != (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)((char *)v17 + 56 * v8)
      && pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v13, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a2))
    {
      sub_20C7F0F64(a4, (uint64_t)v4);
      if (*((_DWORD *)a4 + 113) >= 9u)
        v18 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a4;
      else
        v18 = a4;
      if (*((_DWORD *)v4 + 113) >= 9u)
        v4 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v4;
      v19 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v18 + v13 - v4);
      if (sub_20C826E38((uint64_t *)v19, (uint64_t)a2))
      {
        if (v19 != (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)a3)
        {
          if (*((_DWORD *)a3 + 13) >= 7u)
            v20 = *a3;
          else
            v20 = (char *)a3;
          sub_20C7F6360((uint64_t)v19, v20, &v20[8 * *((unsigned int *)a3 + 12)]);
        }
      }
      else
      {
        v22 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v19 + 56);
        if (*((_DWORD *)a4 + 113) >= 9u)
          v23 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a4;
        else
          v23 = a4;
        v24 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v23 + 56 * *((unsigned int *)a4 + 112))
            - v22;
        if (!v24)
          goto LABEL_62;
        v25 = 0x6DB6DB6DB6DB6DB7 * (v24 >> 3);
        do
        {
          v26 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v22 + 56 * (v25 >> 1));
          HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v26, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a2);
          if (HasPrefix)
            v25 += ~(v25 >> 1);
          else
            v25 >>= 1;
          if (HasPrefix)
            v22 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v26 + 56);
        }
        while (v25);
        if (v19 < v22)
        {
LABEL_62:
          do
          {
            pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::ReplacePrefix(v19, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)a3, v30);
            if (v19 != (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v30)
            {
              if (v32 >= 7)
                v28 = (char *)v30[0];
              else
                v28 = (char *)v30;
              sub_20C7F6360((uint64_t)v19, v28, &v28[8 * v31]);
            }
            sub_20C7E0EB0((uint64_t)v30);
            v19 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v19 + 56);
          }
          while (v19 < v22);
        }
      }
      return (_DWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_Normalize((uint64_t)a4);
    }
    return sub_20C7F0F64(a4, (uint64_t)v4);
  }
  sub_20C7F0F64(a4, (uint64_t)v4);
  if (*((_DWORD *)a4 + 113) >= 9u)
    v9 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a4;
  else
    v9 = a4;
  v10 = *((unsigned int *)a4 + 112);
  if ((_DWORD)v10)
  {
    v11 = 56 * v10;
    do
    {
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::ReplacePrefix(v9, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)a3, v30);
      if (v9 != (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v30)
      {
        if (v32 >= 7)
          v12 = (char *)v30[0];
        else
          v12 = (char *)v30;
        sub_20C7F6360((uint64_t)v9, v12, &v12[8 * v31]);
      }
      sub_20C7E0EB0((uint64_t)v30);
      v9 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v9 + 56);
      v11 -= 56;
    }
    while (v11);
  }
  return (_DWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_Normalize((uint64_t)a4);
}

void sub_20C826B1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_20C7F1148(a10);
  _Unwind_Resume(a1);
}

const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IntersectionIterator::operator*(uint64_t a1)
{
  uint64_t v1;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **v2;

  if (!*(_BYTE *)a1)
    return *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator ***)(a1 + 8);
  v1 = a1 + 24;
  v2 = *(const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator ***)(a1 + 8);
  if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(a1 + 24), v2))
  {
    return (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v1;
  }
  return v2;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IntersectionIterator::operator++(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v2;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v3;

  *(_BYTE *)a1 = 0;
  v2 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)(a1 + 16);
  v3 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(*(_QWORD *)(a1 + 8) + 56);
  *(_QWORD *)(a1 + 8) = v3;
  if (v3 != v2
    && !pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v3, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)(a1 + 24)))
  {
    *(_QWORD *)(a1 + 8) = v2;
  }
  return a1;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IntersectionIterator::operator++@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v3;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *result;

  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  sub_20C7F1078((_DWORD *)(a2 + 24), a1 + 24);
  *(_BYTE *)a1 = 0;
  v3 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)(a1 + 16);
  result = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(*(_QWORD *)(a1 + 8) + 56);
  *(_QWORD *)(a1 + 8) = result;
  if (result != v3)
  {
    result = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(result, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)(a1 + 24));
    if ((result & 1) == 0)
      *(_QWORD *)(a1 + 8) = v3;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersection@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this@<X0>, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v4;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *Intersection;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v7;
  char *v8;
  unsigned int v9;
  __int128 v11;
  uint64_t v12;
  _DWORD v13[14];
  __int128 v14;
  char *v15;
  _DWORD v16[14];
  uint64_t v17;

  v4 = this;
  v17 = *MEMORY[0x24BDAC8D0];
  Intersection = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::_FirstIntersection(this, a2);
  v7 = v4;
  if (*((_DWORD *)v4 + 113) >= 9u)
    v7 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v4;
  v8 = (char *)v7 + 56 * *((unsigned int *)v4 + 112);
  LOBYTE(v14) = 1;
  *((_QWORD *)&v14 + 1) = Intersection;
  v15 = v8;
  sub_20C7F1078(v16, (uint64_t)a2);
  v9 = *((_DWORD *)v4 + 112);
  if (*((_DWORD *)v4 + 113) > 8u)
    v4 = *(pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)v4;
  LOBYTE(v11) = 0;
  *((_QWORD *)&v11 + 1) = (char *)v4 + 56 * v9;
  v12 = *((_QWORD *)&v11 + 1);
  sub_20C7F1078(v13, (uint64_t)a2);
  sub_20C826EB0(a3, &v14, &v11);
  sub_20C7E0EB0((uint64_t)v13);
  return sub_20C7E0EB0((uint64_t)v16);
}

void sub_20C826D60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_20C7E0EB0(v2);
  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C826E38(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  BOOL v9;

  v2 = *((unsigned int *)a1 + 12);
  if ((_DWORD)v2 != *(_DWORD *)(a2 + 48))
    return 0;
  if (*((_DWORD *)a1 + 13) >= 7u)
    a1 = (uint64_t *)*a1;
  if (!(_DWORD)v2)
    return 1;
  if (*(_DWORD *)(a2 + 52) >= 7u)
    v3 = *(uint64_t **)a2;
  else
    v3 = (uint64_t *)a2;
  v4 = 8 * v2 - 8;
  do
  {
    v5 = *a1++;
    v6 = v5 & 0xFFFFFFFFFFFFFFF8;
    v7 = *v3++;
    v9 = v6 == (v7 & 0xFFFFFFFFFFFFFFF8);
    v8 = v9;
    v9 = !v9 || v4 == 0;
    v4 -= 8;
  }
  while (!v9);
  return v8;
}

uint64_t sub_20C826EB0(uint64_t a1, __int128 *a2, __int128 *a3)
{
  __int128 v5;
  __int128 v6;

  v5 = *a2;
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_OWORD *)a1 = v5;
  sub_20C7F1078((_DWORD *)(a1 + 24), (uint64_t)a2 + 24);
  v6 = *a3;
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a3 + 2);
  *(_OWORD *)(a1 + 80) = v6;
  sub_20C7F1078((_DWORD *)(a1 + 104), (uint64_t)a3 + 24);
  return a1;
}

void sub_20C826F18(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C7E0EB0(v1);
  _Unwind_Resume(a1);
}

void sub_20C826F2C(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  v4 = *(_DWORD *)(a1 + 48);
  v5 = *(_DWORD *)(a1 + 52);
  if (v4 == v5)
  {
    sub_20C7F645C(a1, v4 + (v4 >> 1) + 1);
    v5 = *(_DWORD *)(a1 + 52);
  }
  v6 = a1;
  if (v5 >= 7)
    v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *a2;
  *(_QWORD *)(v6 + 8 * v7) = *a2;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(v6 + 8 * v7) &= 0xFFFFFFFFFFFFFFF8;
  }
  ++*(_DWORD *)(a1 + 48);
}

uint64_t *sub_20C826FC0(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t *v19;
  char v20;
  int v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;

  v7 = (uint64_t *)a2;
  v8 = result;
  v23 = (uint64_t *)a2;
  v24 = result;
  while (2)
  {
    v9 = 1 - a4;
LABEL_3:
    v10 = (char *)v7 - (char *)v8;
    v11 = 0x6DB6DB6DB6DB6DB7 * (v7 - v8);
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        v23 = v7 - 7;
        result = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v7 - 7, v8);
        if ((_DWORD)result)
          return (uint64_t *)sub_20C7F5828((uint64_t *)&v24, (uint64_t *)&v23);
        return result;
      case 3uLL:
        v23 = v7 - 7;
        return (uint64_t *)sub_20C827518(v8, v8 + 7, v7 - 7);
      case 4uLL:
        v23 = v7 - 7;
        return (uint64_t *)sub_20C827B84(v8, v8 + 7, v8 + 14, v7 - 7);
      case 5uLL:
        v23 = v7 - 7;
        return (uint64_t *)sub_20C827C20(v8, v8 + 7, v8 + 14, v8 + 21, v7 - 7);
      default:
        if (v10 <= 1343)
        {
          if ((a5 & 1) != 0)
            return (uint64_t *)sub_20C8272AC((uint64_t)v8, (uint64_t)v7);
          else
            return (uint64_t *)sub_20C8273F4((uint64_t)v8, (uint64_t)v7);
        }
        if (v9 == 1)
        {
          if (v8 != v7)
            return (uint64_t *)sub_20C827CE8(v8, v7, v7, a3);
          return result;
        }
        v12 = v11 >> 1;
        v13 = v7 - 7;
        if ((unint64_t)v10 < 0x1C01)
        {
          sub_20C827518(&v8[7 * (v11 >> 1)], v8, v13);
        }
        else
        {
          sub_20C827518(v8, &v8[7 * (v11 >> 1)], v13);
          v14 = 7 * v12;
          v15 = 56 * v12 - 56;
          v16 = (uint64_t)v23;
          sub_20C827518(v24 + 7, (uint64_t *)((char *)v24 + v15), v23 - 14);
          sub_20C827518(v24 + 14, &v24[v14 + 7], (uint64_t *)(v16 - 168));
          sub_20C827518((uint64_t *)((char *)v24 + v15), &v24[v14], &v24[v14 + 7]);
          v22 = &v24[v14];
          sub_20C7F5C68((uint64_t *)&v24, (uint64_t *)&v22);
        }
        v17 = v24;
        if ((a5 & 1) == 0)
        {
          v18 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v24 - 7, v24);
          v7 = v23;
          if ((v18 & 1) != 0)
            goto LABEL_12;
          result = (uint64_t *)sub_20C8275DC((uint64_t)v17, (uint64_t)v23);
          v8 = result;
LABEL_21:
          a5 = 0;
          v24 = v8;
          a4 = -v9;
          continue;
        }
        v7 = v23;
LABEL_12:
        v19 = sub_20C827790((uint64_t)v17, (uint64_t)v7);
        if ((v20 & 1) == 0)
        {
LABEL_19:
          result = (uint64_t *)sub_20C826FC0(v24, v19, a3, -v9, a5 & 1);
          v8 = v19 + 7;
          goto LABEL_21;
        }
        v21 = sub_20C827948(v24, (uint64_t)v19);
        v8 = v19 + 7;
        result = (uint64_t *)sub_20C827948(v19 + 7, (uint64_t)v7);
        if (!(_DWORD)result)
        {
          if (v21)
          {
            v24 = v19 + 7;
            goto LABEL_18;
          }
          goto LABEL_19;
        }
        if ((v21 & 1) == 0)
        {
          v23 = v19;
          v8 = v24;
          v7 = v19;
LABEL_18:
          ++v9;
          goto LABEL_3;
        }
        return result;
    }
  }
}

uint64_t sub_20C8272AC(uint64_t result, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12[6];
  int v13;
  unsigned int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  if (result != a2)
  {
    v3 = (uint64_t *)result;
    v4 = (uint64_t *)(result + 56);
    if (result + 56 != a2)
    {
      v5 = 0;
      v6 = result;
      do
      {
        v7 = (uint64_t *)v6;
        v6 = (uint64_t)v4;
        result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v4, v7);
        if ((_DWORD)result)
        {
          sub_20C7F1078(v12, v6);
          v8 = v5;
          while (1)
          {
            v9 = *(_DWORD *)((char *)v3 + v8 + 52) >= 7u ? *(char **)((char *)v3 + v8) : (char *)v3 + v8;
            sub_20C7F6360((uint64_t)v3 + v8 + 56, v9, &v9[8 * *(unsigned int *)((char *)v3 + v8 + 48)]);
            if (!v8)
              break;
            v8 -= 56;
            if ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v12, (uint64_t *)((char *)v3 + v8)) & 1) == 0)
            {
              v10 = (uint64_t *)((char *)v3 + v8 + 56);
              goto LABEL_13;
            }
          }
          v10 = v3;
LABEL_13:
          if (v10 != v12)
          {
            if (v14 >= 7)
              v11 = (char *)v12[0];
            else
              v11 = (char *)v12;
            sub_20C7F6360((uint64_t)v10, v11, &v11[8 * v13]);
          }
          result = sub_20C7E0EB0((uint64_t)v12);
        }
        v4 = (uint64_t *)(v6 + 56);
        v5 += 56;
      }
      while (v6 + 56 != a2);
    }
  }
  return result;
}

void sub_20C8273D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C7E0EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8273F4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t *v5;
  uint64_t *v6;
  char *v7;
  char v8;
  char *v9;
  uint64_t v10[6];
  int v11;
  unsigned int v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  if (result != a2)
  {
    v3 = result;
    for (i = (uint64_t *)(result + 56); v3 + 56 != a2; i = (uint64_t *)(v3 + 56))
    {
      v5 = (uint64_t *)v3;
      v3 = (uint64_t)i;
      result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(i, v5);
      if ((_DWORD)result)
      {
        sub_20C7F1078(v10, v3);
        v6 = (uint64_t *)v3;
        do
        {
          if (*((_DWORD *)v6 - 1) >= 7u)
            v7 = (char *)*(v6 - 7);
          else
            v7 = (char *)(v6 - 7);
          sub_20C7F6360((uint64_t)v6, v7, &v7[8 * *((unsigned int *)v6 - 2)]);
          v8 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v10, v6 - 14);
          v6 -= 7;
        }
        while ((v8 & 1) != 0);
        if (v6 != v10)
        {
          if (v12 >= 7)
            v9 = (char *)v10[0];
          else
            v9 = (char *)v10;
          sub_20C7F6360((uint64_t)v6, v9, &v9[8 * v11]);
        }
        result = sub_20C7E0EB0((uint64_t)v10);
      }
    }
  }
  return result;
}

void sub_20C8274F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C7E0EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C827518(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  char v5;
  uint64_t result;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;

  v10 = a2;
  v11 = a1;
  v9 = a3;
  v5 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(a2, a1);
  result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(a3, a2);
  if ((v5 & 1) == 0)
  {
    if (!(_DWORD)result)
      return result;
    sub_20C7F5828((uint64_t *)&v10, (uint64_t *)&v9);
    if (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v10, v11))
      return 1;
    v7 = &v11;
    v8 = &v10;
    goto LABEL_9;
  }
  if (!(_DWORD)result)
  {
    sub_20C7F5828((uint64_t *)&v11, (uint64_t *)&v10);
    if (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v9, v10))
      return 1;
    v7 = &v10;
    v8 = &v9;
LABEL_9:
    sub_20C7F5828((uint64_t *)v7, (uint64_t *)v8);
    return 2;
  }
  sub_20C7F5828((uint64_t *)&v11, (uint64_t *)&v9);
  return 1;
}

uint64_t sub_20C8275DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t *v5;
  int v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13[6];
  int v14;
  unsigned int v15;
  uint64_t v16;

  v2 = (uint64_t *)a2;
  v16 = *MEMORY[0x24BDAC8D0];
  v11 = (uint64_t *)a2;
  sub_20C7F1078(v13, a1);
  if ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v2 - 7) & 1) != 0)
  {
    v4 = (uint64_t *)a1;
    do
    {
      v4 += 7;
      v12 = v4;
    }
    while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v4) & 1) == 0);
  }
  else
  {
    v5 = (uint64_t *)(a1 + 56);
    do
    {
      v4 = v5;
      v12 = v5;
      if (v5 >= v2)
        break;
      v6 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v5);
      v5 = v4 + 7;
    }
    while (!v6);
  }
  if (v4 < v2)
  {
    do
    {
      v2 -= 7;
      v11 = v2;
    }
    while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v2) & 1) != 0);
  }
  while (v4 < v2)
  {
    sub_20C7F5828((uint64_t *)&v12, (uint64_t *)&v11);
    v4 = v12;
    do
    {
      v4 += 7;
      v12 = v4;
    }
    while (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v4));
    v2 = v11;
    do
    {
      v2 -= 7;
      v11 = v2;
    }
    while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v2) & 1) != 0);
  }
  if (v4 - 7 != (uint64_t *)a1)
  {
    if (*((_DWORD *)v4 - 1) >= 7u)
      v7 = (char *)*(v4 - 7);
    else
      v7 = (char *)(v4 - 7);
    sub_20C7F6360(a1, v7, &v7[8 * *((unsigned int *)v4 - 2)]);
  }
  if (v4 - 7 != v13)
  {
    if (v15 >= 7)
      v8 = (char *)v13[0];
    else
      v8 = (char *)v13;
    sub_20C7F6360((uint64_t)(v4 - 7), v8, &v8[8 * v14]);
  }
  v9 = (uint64_t)v12;
  sub_20C7E0EB0((uint64_t)v13);
  return v9;
}

void sub_20C827770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C827790(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13[6];
  int v14;
  unsigned int v15;
  uint64_t v16;

  v2 = (uint64_t *)a2;
  v16 = *MEMORY[0x24BDAC8D0];
  v11 = (uint64_t *)a2;
  sub_20C7F1078(v13, a1);
  v4 = 0;
  do
  {
    v4 += 56;
    v12 = (uint64_t *)(v4 + a1);
  }
  while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)(v4 + a1), v13) & 1) != 0);
  v5 = a1 + v4;
  if (v4 == 56)
  {
    do
    {
      if (v5 >= (unint64_t)v2)
        break;
      v2 -= 7;
      v11 = v2;
    }
    while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v2, v13) & 1) == 0);
  }
  else
  {
    do
    {
      v2 -= 7;
      v11 = v2;
    }
    while (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v2, v13));
  }
  v6 = (uint64_t *)(a1 + v4);
  if (v5 < (unint64_t)v2)
  {
    do
    {
      sub_20C7F5828((uint64_t *)&v12, (uint64_t *)&v11);
      v6 = v12;
      do
      {
        v6 += 7;
        v12 = v6;
      }
      while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v6, v13) & 1) != 0);
      v7 = v11;
      do
      {
        v7 -= 7;
        v11 = v7;
      }
      while (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v7, v13));
    }
    while (v6 < v7);
  }
  if (v6 - 7 != (uint64_t *)a1)
  {
    if (*((_DWORD *)v6 - 1) >= 7u)
      v8 = (char *)*(v6 - 7);
    else
      v8 = (char *)(v6 - 7);
    sub_20C7F6360(a1, v8, &v8[8 * *((unsigned int *)v6 - 2)]);
  }
  if (v6 - 7 != v13)
  {
    if (v15 >= 7)
      v9 = (char *)v13[0];
    else
      v9 = (char *)v13;
    sub_20C7F6360((uint64_t)(v6 - 7), v9, &v9[8 * v14]);
  }
  sub_20C7E0EB0((uint64_t)v13);
  return v6 - 7;
}

void sub_20C827928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C827948(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 v4;
  uint64_t *v5;
  uint64_t *v6;
  int v7;
  uint64_t *v8;
  char *v9;
  char *v10;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14[6];
  int v15;
  unsigned int v16;
  uint64_t v17;

  v2 = a2;
  v17 = *MEMORY[0x24BDAC8D0];
  v12 = (uint64_t *)a2;
  v13 = a1;
  v4 = 1;
  switch(0x6DB6DB6DB6DB6DB7 * ((a2 - (uint64_t)a1) >> 3))
  {
    case 0:
    case 1:
      return v4;
    case 2:
      v12 = (uint64_t *)(a2 - 56);
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)(a2 - 56), a1))
        sub_20C7F5828((uint64_t *)&v13, (uint64_t *)&v12);
      return v4;
    case 3:
      sub_20C827518(a1, a1 + 7, (uint64_t *)(a2 - 56));
      return v4;
    case 4:
      sub_20C827B84(a1, a1 + 7, a1 + 14, (uint64_t *)(a2 - 56));
      return v4;
    case 5:
      sub_20C827C20(a1, a1 + 7, a1 + 14, a1 + 21, (uint64_t *)(a2 - 56));
      return v4;
    default:
      v5 = a1 + 14;
      sub_20C827518(a1, a1 + 7, a1 + 14);
      v6 = a1 + 21;
      if (a1 + 21 == (uint64_t *)v2)
        return 1;
      v7 = 0;
      break;
  }
  while (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v6, v5))
  {
LABEL_20:
    v5 = v6;
    v6 += 7;
    if (v6 == (uint64_t *)v2)
      return 1;
  }
  sub_20C7F1078(v14, (uint64_t)v6);
  do
  {
    v8 = v5;
    if (*((_DWORD *)v5 + 13) >= 7u)
      v9 = (char *)*v5;
    else
      v9 = (char *)v5;
    sub_20C7F6360((uint64_t)(v5 + 7), v9, &v9[8 * *((unsigned int *)v5 + 12)]);
    if (v5 == v13)
      break;
    v5 -= 7;
  }
  while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v14, v8 - 7) & 1) != 0);
  if (v8 != v14)
  {
    if (v16 >= 7)
      v10 = (char *)v14[0];
    else
      v10 = (char *)v14;
    sub_20C7F6360((uint64_t)v8, v10, &v10[8 * v15]);
  }
  if (++v7 != 8)
  {
    sub_20C7E0EB0((uint64_t)v14);
    v2 = (uint64_t)v12;
    goto LABEL_20;
  }
  v4 = v6 + 7 == v12;
  sub_20C7E0EB0((uint64_t)v14);
  return v4;
}

void sub_20C827B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C7E0EB0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C827B84(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;

  v11 = a2;
  v12 = a1;
  v9 = a4;
  v10 = a3;
  sub_20C827518(a1, a2, a3);
  result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(a4, a3);
  if ((_DWORD)result)
  {
    sub_20C7F5828((uint64_t *)&v10, (uint64_t *)&v9);
    result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v10, a2);
    if ((_DWORD)result)
    {
      sub_20C7F5828((uint64_t *)&v11, (uint64_t *)&v10);
      result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v11, a1);
      if ((_DWORD)result)
        return sub_20C7F5828((uint64_t *)&v12, (uint64_t *)&v11);
    }
  }
  return result;
}

uint64_t sub_20C827C20(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;

  v14 = a2;
  v15 = a1;
  v12 = a4;
  v13 = a3;
  v11 = a5;
  sub_20C827B84(a1, a2, a3, a4);
  result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(a5, a4);
  if ((_DWORD)result)
  {
    sub_20C7F5828((uint64_t *)&v12, (uint64_t *)&v11);
    result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v12, a3);
    if ((_DWORD)result)
    {
      sub_20C7F5828((uint64_t *)&v13, (uint64_t *)&v12);
      result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, a2);
      if ((_DWORD)result)
      {
        sub_20C7F5828((uint64_t *)&v14, (uint64_t *)&v13);
        result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v14, a1);
        if ((_DWORD)result)
          return sub_20C7F5828((uint64_t *)&v15, (uint64_t *)&v14);
      }
    }
  }
  return result;
}

uint64_t sub_20C827CE8(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t *v17;
  uint64_t *v18;

  v18 = a1;
  if (a1 != a2)
  {
    v6 = (uint64_t)a2;
    v7 = a1;
    v8 = (char *)a2 - (char *)a1;
    v9 = ((char *)a2 - (char *)a1) / 56;
    if ((char *)a2 - (char *)a1 >= 57)
    {
      v10 = (unint64_t)(v9 - 2) >> 1;
      v11 = v10 + 1;
      v12 = &a1[7 * v10];
      do
      {
        sub_20C827E4C((uint64_t)v7, a4, v9, v12);
        v12 -= 7;
        --v11;
      }
      while (v11);
    }
    v17 = (uint64_t *)v6;
    if ((uint64_t *)v6 == a3)
    {
      a3 = (uint64_t *)v6;
    }
    else
    {
      v13 = (uint64_t *)v6;
      do
      {
        if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<(v13, v18))
        {
          sub_20C7F5828((uint64_t *)&v17, (uint64_t *)&v18);
          sub_20C827E4C((uint64_t)v18, a4, v9, v18);
          v13 = v17;
        }
        v13 += 7;
        v17 = v13;
      }
      while (v13 != a3);
      v7 = v18;
      v8 = v6 - (_QWORD)v18;
    }
    if (v8 >= 57)
    {
      v14 = v8 / 0x38uLL;
      do
      {
        sub_20C828020((uint64_t)v7, v6, a4, v14);
        v6 -= 56;
      }
      while (v14-- > 2);
      return (uint64_t)v17;
    }
  }
  return (uint64_t)a3;
}

uint64_t sub_20C827E4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  int64_t v7;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17[6];
  int v18;
  unsigned int v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v4 = a3 - 2;
  if (a3 >= 2)
  {
    v5 = a4;
    v6 = result;
    v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= 0x6DB6DB6DB6DB6DB7 * (((uint64_t)a4 - result) >> 3))
    {
      v9 = (0xDB6DB6DB6DB6DB6ELL * (((uint64_t)a4 - result) >> 3)) | 1;
      v10 = result + 56 * v9;
      v11 = 0xDB6DB6DB6DB6DB6ELL * (((uint64_t)a4 - result) >> 3) + 2;
      if (v11 < a3
        && pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)(result + 56 * v9), (uint64_t *)(v10 + 56)))
      {
        v10 += 56;
        v9 = v11;
      }
      result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)v10, v5);
      if ((result & 1) == 0)
      {
        sub_20C7F1078(v17, (uint64_t)v5);
        do
        {
          v12 = (uint64_t *)v10;
          if (v5 != (uint64_t *)v10)
          {
            if (*(_DWORD *)(v10 + 52) >= 7u)
              v13 = *(char **)v10;
            else
              v13 = (char *)v10;
            sub_20C7F6360((uint64_t)v5, v13, &v13[8 * *(unsigned int *)(v10 + 48)]);
          }
          if (v7 < v9)
            break;
          v14 = (2 * v9) | 1;
          v10 = v6 + 56 * v14;
          v15 = 2 * v9 + 2;
          if (v15 < a3
            && pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)(v6 + 56 * v14), (uint64_t *)(v10 + 56)))
          {
            v10 += 56;
            v14 = v15;
          }
          v5 = v12;
          v9 = v14;
        }
        while (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)v10, v17));
        if (v12 != v17)
        {
          if (v19 >= 7)
            v16 = (char *)v17[0];
          else
            v16 = (char *)v17;
          sub_20C7F6360((uint64_t)v12, v16, &v16[8 * v18]);
        }
        return sub_20C7E0EB0((uint64_t)v17);
      }
    }
  }
  return result;
}

void sub_20C828000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C7E0EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C828020(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  char *v10;
  char *v11;
  char *v12;
  _QWORD v13[6];
  int v14;
  unsigned int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  if (a4 >= 2)
  {
    v7 = result;
    sub_20C7F1078(v13, result);
    v8 = (_QWORD *)sub_20C828180(v7, a3, a4);
    v9 = v8;
    if (v8 == (_QWORD *)(a2 - 56))
    {
      if (v8 != v13)
      {
        if (v15 >= 7)
          v12 = (char *)v13[0];
        else
          v12 = (char *)v13;
        sub_20C7F6360((uint64_t)v8, v12, &v12[8 * v14]);
      }
    }
    else
    {
      if (*(_DWORD *)(a2 - 4) >= 7u)
        v10 = *(char **)(a2 - 56);
      else
        v10 = (char *)(a2 - 56);
      sub_20C7F6360((uint64_t)v8, v10, &v10[8 * *(unsigned int *)(a2 - 8)]);
      if ((_QWORD *)(a2 - 56) != v13)
      {
        if (v15 >= 7)
          v11 = (char *)v13[0];
        else
          v11 = (char *)v13;
        sub_20C7F6360(a2 - 56, v11, &v11[8 * v14]);
      }
      sub_20C828244(v7, (uint64_t)(v9 + 7), a3, 0x6DB6DB6DB6DB6DB7 * (((uint64_t)v9 - v7 + 56) >> 3));
    }
    return sub_20C7E0EB0((uint64_t)v13);
  }
  return result;
}

void sub_20C828164(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C828180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;

  v5 = 0;
  v6 = a3 - 2;
  if (a3 < 2)
    v6 = a3 - 1;
  v7 = v6 >> 1;
  do
  {
    v8 = a1 + 56 * v5 + 56;
    v9 = 2 * v5;
    v5 = (2 * v5) | 1;
    v10 = v9 + 2;
    if (v9 + 2 < a3
      && pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)v8, (uint64_t *)(v8 + 56)))
    {
      v8 += 56;
      v5 = v10;
    }
    if (a1 != v8)
    {
      if (*(_DWORD *)(v8 + 52) >= 7u)
        v11 = *(char **)v8;
      else
        v11 = (char *)v8;
      sub_20C7F6360(a1, v11, &v11[8 * *(unsigned int *)(v8 + 48)]);
    }
    a1 = v8;
  }
  while (v5 <= v7);
  return v8;
}

uint64_t sub_20C828244(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  char *v10;
  uint64_t v11[6];
  int v12;
  unsigned int v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  if (a4 >= 2)
  {
    v4 = result;
    v5 = (unint64_t)(a4 - 2) >> 1;
    v6 = result + 56 * v5;
    v7 = a2 - 56;
    result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)v6, (uint64_t *)(a2 - 56));
    if ((_DWORD)result)
    {
      sub_20C7F1078(v11, v7);
      do
      {
        v8 = (uint64_t *)v6;
        if (v7 != v6)
        {
          if (*(_DWORD *)(v6 + 52) >= 7u)
            v9 = *(char **)v6;
          else
            v9 = (char *)v6;
          sub_20C7F6360(v7, v9, &v9[8 * *(unsigned int *)(v6 + 48)]);
        }
        if (!v5)
          break;
        v5 = (v5 - 1) >> 1;
        v6 = v4 + 56 * v5;
        v7 = (uint64_t)v8;
      }
      while ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)v6, v11) & 1) != 0);
      if (v8 != v11)
      {
        if (v13 >= 7)
          v10 = (char *)v11[0];
        else
          v10 = (char *)v11;
        sub_20C7F6360((uint64_t)v8, v10, &v10[8 * v12]);
      }
      return sub_20C7E0EB0((uint64_t)v11);
    }
  }
  return result;
}

void sub_20C828358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C7E0EB0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C828378(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  void *v7;

  a1[113] = 8;
  v6 = -1227133513 * ((a3 - a2) >> 3);
  v7 = a1;
  if (v6 >= 9)
  {
    v7 = malloc(56 * v6);
    *(_QWORD *)a1 = v7;
    a1[113] = v6;
  }
  a1[112] = v6;
  sub_20C7F0FE4(a2, a3, (uint64_t)v7);
  return a1;
}

uint64_t sub_20C828404(uint64_t a1, char *a2, uint64_t a3)
{
  char *v4;
  unsigned int v6;
  char *v7;
  int v8;
  unsigned int v9;
  void *v10;
  uint64_t v11;
  char *v12;
  _DWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  _DWORD *v17;
  char v19;

  v4 = a2;
  v6 = *(_DWORD *)(a1 + 452);
  v7 = (char *)a1;
  if (v6 >= 9)
    v7 = *(char **)a1;
  v8 = *(_DWORD *)(a1 + 448);
  if (&v7[56 * v8] == a2)
  {
    sub_20C828684(a1, a3);
    v14 = (char *)a1;
    if (*(_DWORD *)(a1 + 452) >= 9u)
      v14 = *(char **)a1;
    return (uint64_t)&v14[56 * *(unsigned int *)(a1 + 448) - 56];
  }
  else
  {
    if (v8 == v6)
    {
      v9 = v6 + (v6 >> 1) + 1;
      v10 = malloc(56 * v9);
      v11 = a1;
      if (v6 >= 9)
        v11 = *(_QWORD *)a1;
      v12 = (char *)sub_20C7F52F4(v11, (uint64_t)v4, (uint64_t)v10);
      v13 = sub_20C7F1078(v12, a3);
      sub_20C7F52F4((uint64_t)v4, v11 + 56 * *(unsigned int *)(a1 + 448), (uint64_t)(v13 + 14));
      sub_20C7F1184(a1);
      if (*(_DWORD *)(a1 + 452) >= 9u)
        free(*(void **)a1);
      *(_QWORD *)a1 = v10;
      *(_DWORD *)(a1 + 452) = v9;
      v4 = v12;
    }
    else
    {
      v15 = (char *)a1;
      if (v6 >= 9)
        v15 = *(char **)a1;
      v16 = &v15[56 * v8];
      sub_20C7F1078(v16, (uint64_t)(v16 - 56));
      sub_20C828590((uint64_t)&v19, v4, v16 - 56, v16);
      v17 = (_DWORD *)sub_20C7E0EB0((uint64_t)v4);
      sub_20C7F1078(v17, a3);
    }
    ++*(_DWORD *)(a1 + 448);
  }
  return (uint64_t)v4;
}

char *sub_20C828590(uint64_t a1, char *a2, char *a3, char *a4)
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  if (a3 != a2)
  {
    v6 = a3;
    do
    {
      v7 = v6 - 56;
      v8 = a4 - 56;
      if (v6 != a4)
      {
        v9 = (char *)*((_QWORD *)v6 - 7);
        v11 = v6 - 8;
        v10 = *((unsigned int *)v6 - 2);
        if (*((_DWORD *)v11 + 1) >= 7u)
          v12 = v9;
        else
          v12 = v7;
        sub_20C7F6360((uint64_t)(a4 - 56), v12, &v12[8 * v10]);
      }
      a4 = v8;
      v6 = v7;
    }
    while (v7 != a2);
  }
  return a3;
}

uint64_t sub_20C828610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v7;

  v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4)
      {
        if (*(_DWORD *)(v5 + 52) >= 7u)
          v7 = *(char **)v5;
        else
          v7 = (char *)v5;
        sub_20C7F6360(a4, v7, &v7[8 * *(unsigned int *)(v5 + 48)]);
      }
      v5 += 56;
      a4 += 56;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

_DWORD *sub_20C828684(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  _DWORD *result;

  v4 = *(_DWORD *)(a1 + 448);
  v5 = *(_DWORD *)(a1 + 452);
  if (v4 == v5)
  {
    sub_20C8286F8(a1, v4 + (v4 >> 1) + 1);
    v5 = *(_DWORD *)(a1 + 452);
  }
  v6 = a1;
  if (v5 >= 9)
    v6 = *(_QWORD *)a1;
  result = sub_20C7F1078((_DWORD *)(v6 + 56 * *(unsigned int *)(a1 + 448)), a2);
  ++*(_DWORD *)(a1 + 448);
  return result;
}

void sub_20C8286F8(uint64_t a1, unsigned int a2)
{
  void *v4;
  void *v5;

  v4 = malloc(56 * a2);
  v5 = (void *)a1;
  if (*(_DWORD *)(a1 + 452) >= 9u)
    v5 = *(void **)a1;
  sub_20C7F52F4((uint64_t)v5, (uint64_t)v5 + 56 * *(unsigned int *)(a1 + 448), (uint64_t)v4);
  sub_20C7F1184(a1);
  if (*(_DWORD *)(a1 + 452) >= 9u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 452) = a2;
}

uint64_t sub_20C82877C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t result;

  sub_20C7F1184(a1);
  *(_DWORD *)(a1 + 448) = 0;
  v6 = -1227133513 * ((unint64_t)(a3 - a2) >> 3);
  v7 = *(_DWORD *)(a1 + 452);
  if (v7 < v6)
  {
    sub_20C8286F8(a1, -1227133513 * ((unint64_t)(a3 - a2) >> 3));
    v7 = *(_DWORD *)(a1 + 452);
  }
  v8 = a1;
  if (v7 >= 9)
    v8 = *(_QWORD *)a1;
  result = sub_20C7F0FE4(a2, a3, v8);
  *(_DWORD *)(a1 + 448) = v6;
  return result;
}

char *sub_20C828800(uint64_t a1, char *a2, char *a3, char *a4)
{
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;

  if (a3 != a2)
  {
    v6 = a3;
    do
    {
      v7 = v6 - 56;
      v8 = a4 - 56;
      if (a4 != v6)
      {
        v9 = (char *)*((_QWORD *)v6 - 7);
        v11 = v6 - 8;
        v10 = *((unsigned int *)v6 - 2);
        if (*((_DWORD *)v11 + 1) >= 7u)
          v12 = v9;
        else
          v12 = v7;
        sub_20C7F6360((uint64_t)(a4 - 56), v12, &v12[8 * v10]);
      }
      v6 = v7;
      a4 = v8;
    }
    while (v7 != a2);
  }
  return a3;
}

uint64_t sub_20C828880(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a3;
  v5 = result;
  if (result != a2)
  {
    do
    {
      sub_20C7F5828(&v5, &v4);
      v4 += 56;
      v5 += 56;
    }
    while (v5 != a2);
    return a2;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetModelAssetName(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  int v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  uint64_t v25;
  std::__shared_weak_count *v26;
  uint64_t v27;
  std::__shared_weak_count *v28;

  v3 = *((_QWORD *)this + 37);
  if (!v3)
    goto LABEL_31;
  v4 = sub_20C828AE0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t))(*(_QWORD *)v3 + 24))(&v25, v3, v4);
  sub_20C7E0B14((uint64_t)&v25, &v27);
  v5 = v26;
  if (v26)
  {
    p_shared_owners = (unint64_t *)&v26->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v27;
  if (!v27)
    goto LABEL_25;
  v9 = sub_20C828AE0();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t))(*(_QWORD *)v8 + 24))(&v23, v8, v9 + 8);
  sub_20C828D8C((uint64_t)&v23, &v25);
  v10 = v24;
  if (v24)
  {
    v11 = (unint64_t *)&v24->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (!v25)
  {
    v17 = v26;
    if (v26)
    {
      v18 = (unint64_t *)&v26->__shared_owners_;
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
LABEL_25:
    v16 = 1;
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, float))(*(_QWORD *)v25 + 32))(v25, 0.0);
  v13 = v26;
  if (v26)
  {
    v14 = (unint64_t *)&v26->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  v16 = 0;
LABEL_26:
  v20 = v28;
  if (!v28)
    goto LABEL_30;
  v21 = (unint64_t *)&v28->__shared_owners_;
  do
    v22 = __ldaxr(v21);
  while (__stlxr(v22 - 1, v21));
  if (!v22)
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
    if (!v16)
      return;
  }
  else
  {
LABEL_30:
    if (!v16)
      return;
  }
LABEL_31:
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

void sub_20C828ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  _Unwind_Resume(a1);
}

unint64_t sub_20C828AE0()
{
  char *v0;
  _QWORD *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  void **v24;
  char v25;
  unsigned int *v26;
  unsigned int *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v0 = (char *)atomic_load(&qword_25498DFF0);
  if (!v0)
  {
    v0 = (char *)operator new(0x28uLL);
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0, "model", 0);
    v2 = v0 + 8;
    pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v0 + 8, "assetName", 0);
    v3 = *(unsigned int **)v0;
    v26 = v3;
    if ((v3 & 7) != 0)
    {
      v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 2, v4));
      if ((v5 & 1) == 0)
        v26 = v4;
    }
    v6 = (unsigned int *)*v2;
    v27 = v6;
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 2, v7));
      if ((v8 & 1) == 0)
        v27 = v7;
    }
    *((_QWORD *)v0 + 2) = 0;
    *((_QWORD *)v0 + 3) = 0;
    *((_QWORD *)v0 + 4) = 0;
    v24 = (void **)(v0 + 16);
    v25 = 0;
    v9 = operator new(0x10uLL);
    v10 = 0;
    *((_QWORD *)v0 + 2) = v9;
    *((_QWORD *)v0 + 3) = v9;
    *((_QWORD *)v0 + 4) = v9 + 2;
    do
    {
      v11 = (&v26)[v10];
      *v9 = v11;
      if ((v11 & 7) != 0)
      {
        v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 2, v12));
        if ((v13 & 1) == 0)
          *v9 &= 0xFFFFFFFFFFFFFFF8;
      }
      ++v10;
      ++v9;
    }
    while (v10 != 2);
    v14 = (unsigned int **)&v28;
    *((_QWORD *)v0 + 3) = v9;
    do
    {
      v16 = (uint64_t)*--v14;
      v15 = v16;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stlxr(v18 - 2, v17));
      }
    }
    while (v14 != &v26);
    while (!__ldaxr(&qword_25498DFF0))
    {
      if (!__stlxr((unint64_t)v0, &qword_25498DFF0))
        return (unint64_t)v0;
    }
    __clrex();
    v24 = (void **)(v0 + 16);
    sub_20BEEB2B8(&v24);
    if ((*v2 & 7) != 0)
    {
      v20 = (unsigned int *)(*v2 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if ((*(_QWORD *)v0 & 7) != 0)
    {
      v22 = (unsigned int *)(*(_QWORD *)v0 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    operator delete(v0);
    return atomic_load(&qword_25498DFF0);
  }
  return (unint64_t)v0;
}

void sub_20C828CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      operator delete(v14);
      _Unwind_Resume(a1);
    }
  }
}

void *sub_20C828D8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54FCD8, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_ResetIfNecessaryAndGetNode(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  __int128 v37;
  uint64_t v38;
  std::__shared_weak_count *v39;

  if (sub_20BF2B2B4((_QWORD *)this + 49, a2))
  {
    v38 = 0;
    v39 = 0;
    sub_20C7E0E2C(a3, &v38);
    v6 = v39;
    if (v39)
    {
      p_shared_owners = (unint64_t *)&v39->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  else if ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)this + 57) & 0xFFFFFFFFFFFFFFF8))
  {
    v30 = *((_QWORD *)this + 59);
    *a3 = *((_QWORD *)this + 58);
    a3[1] = v30;
    if (v30)
    {
      v31 = (unint64_t *)(v30 + 8);
      do
        v32 = __ldxr(v31);
      while (__stxr(v32 + 1, v31));
    }
  }
  else
  {
    if (!pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 440)))
    {
      pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::GetNodes((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 16), &v37);
      sub_20BDE82DC((uint64_t)this + 440, &v37);
      v9 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
      if (*((_QWORD *)&v37 + 1))
      {
        v10 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
        }
      }
    }
    sub_20BF32220((_QWORD *)this + 57, a2);
    sub_20C8290E4((uint64_t *)this + 55, a2, &v37);
    sub_20BDE82DC((uint64_t)this + 464, &v37);
    v12 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
    if (*((_QWORD *)&v37 + 1))
    {
      v13 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v35 = 0;
    v36 = 0;
    sub_20C82D07C(&v37, &v35);
    sub_20BDE82DC((uint64_t)this + 480, &v37);
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
    if (*((_QWORD *)&v37 + 1))
    {
      v16 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (!v17)
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    v18 = v36;
    if (v36)
    {
      v19 = (unint64_t *)&v36->__shared_owners_;
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 - 1, v19));
      if (!v20)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
    v33 = 0;
    v34 = 0;
    sub_20C82D07C(&v37, &v33);
    sub_20BDE82DC((uint64_t)this + 496, &v37);
    v21 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
    if (*((_QWORD *)&v37 + 1))
    {
      v22 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
      }
    }
    v24 = v34;
    if (v34)
    {
      v25 = (unint64_t *)&v34->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
    v27 = *((_QWORD *)this + 59);
    *a3 = *((_QWORD *)this + 58);
    a3[1] = v27;
    if (v27)
    {
      v28 = (unint64_t *)(v27 + 8);
      do
        v29 = __ldxr(v28);
      while (__stxr(v29 + 1, v28));
    }
  }
}

void sub_20C8290C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void sub_20C8290E4(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = (unsigned int *)*a2;
  if ((*a2 & 7) != 0)
  {
    v4 = (unsigned int *)(*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v11 = v4;
  }
  sub_20C7E0698(a1, &v12);
  sub_20C7E0E2C(a3, &v12);
  v6 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if ((v11 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
}

void sub_20C8291A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeParameters(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_ResetIfNecessaryAndGetNode(this, a2, &v15);
  if (!pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 480)))
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::GetParameters((pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema *)&v15, &v14);
    sub_20BDE82DC((uint64_t)this + 480, &v14);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
    if (*((_QWORD *)&v14 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  v8 = *((_QWORD *)this + 61);
  *a3 = *((_QWORD *)this + 60);
  a3[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_20C8292D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeConnections(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_ResetIfNecessaryAndGetNode(this, a2, &v15);
  if (!pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 496)))
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::GetInputConnections((pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema *)&v15, &v14);
    sub_20BDE82DC((uint64_t)this + 496, &v14);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v14 + 1);
    if (*((_QWORD *)&v14 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v14 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  v8 = *((_QWORD *)this + 63);
  *a3 = *((_QWORD *)this + 62);
  a3[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v11 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_20C8293D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride(uint64_t a1, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a2, uint64_t *a3)
{
  _QWORD *v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t *Element;
  _QWORD *v10;
  uint64_t *result;
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v12;
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v14;

  pxrInternal__aapl__pxrReserved__::HdContainerDataSourceEditor::Set(a1 + 32, a2, a3);
  v14 = a2;
  v6 = sub_20C82D108(a1 + 312, (uint64_t)a2, (uint64_t)&unk_20CAC184C, (uint64_t *)&v14);
  sub_20BDE881C(v6 + 9, a3);
  v7 = atomic_load((unsigned __int8 *)&qword_25498E030);
  if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_25498E030))
  {
    v12 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    if (!v12)
      v12 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498DFF8, v12);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498DFF8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E030);
  }
  v8 = atomic_load((unsigned __int8 *)&qword_25498E070);
  if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_25498E070))
  {
    v13 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    if (!v13)
      v13 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E038, (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)((char *)v13 + 8));
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E038, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E070);
  }
  if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498DFF8)&& (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElementCount(a2) >= 2)
  {
    Element = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement(a2, 1u);
    sub_20BF348DC(a1 + 352, Element, Element);
    v10 = (_QWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement(a2, 1u);
    return sub_20C82D55C((_QWORD *)(a1 + 392), v10);
  }
  else
  {
    result = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(a2, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E038);
    if ((_DWORD)result)
      *(_BYTE *)(a1 + 432) = 1;
  }
  return result;
}

void sub_20C8295D0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E070);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeNames@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, uint64_t *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdContainerSchema *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t *v10;
  _QWORD *i;
  uint64_t *v12;
  uint64_t *j;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  int v22;

  v4 = (pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 440);
  if (!pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 440)))
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::GetNodes((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 16), &v20);
    sub_20BDE82DC((uint64_t)v4, &v20);
    v5 = (std::__shared_weak_count *)*((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v6 = (unint64_t *)(*((_QWORD *)&v20 + 1) + 8);
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 - 1, v6));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  result = pxrInternal__aapl__pxrReserved__::HdContainerSchema::GetNames(v4, a2);
  if (*((_QWORD *)this + 52))
  {
    v20 = 0u;
    v21 = 0u;
    v22 = 1065353216;
    v9 = (uint64_t *)*a2;
    v10 = (uint64_t *)a2[1];
    while (v9 != v10)
    {
      sub_20BF348DC((uint64_t)&v20, v9, v9);
      ++v9;
    }
    for (i = (_QWORD *)((char *)this + 408); ; sub_20C82D55C(&v20, i + 2))
    {
      i = (_QWORD *)*i;
      if (!i)
        break;
    }
    v12 = (uint64_t *)*a2;
    for (j = (uint64_t *)a2[1]; j != v12; --j)
    {
      v15 = *(j - 1);
      v14 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stlxr(v17 - 2, v16));
      }
    }
    a2[1] = (uint64_t)v12;
    if ((_QWORD)v21)
    {
      v18 = 0;
      v19 = (_QWORD *)v21;
      do
      {
        ++v18;
        v19 = (_QWORD *)*v19;
      }
      while (v19);
    }
    else
    {
      v18 = 0;
    }
    sub_20C82D590(a2, v12, (_QWORD *)v21, 0, v18);
    return sub_20BF20BCC((uint64_t)&v20);
  }
  return result;
}

void sub_20C829758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20BF20BCC((uint64_t)&a9);
  sub_20BEEB2B8(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeType@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v7;
  _QWORD *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  _BYTE v24[56];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v6)
    v6 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v7 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v7)
    v7 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v24, v6, a2, (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)((char *)v7 + 16));
  v8 = sub_20C82D874((_QWORD *)this + 39, (uint64_t)v24);
  if (v8)
  {
    sub_20C7E31B4((uint64_t)(v8 + 9), &v22);
    if (v22)
      (*(void (**)(uint64_t, float))(*(_QWORD *)v22 + 32))(v22, 0.0);
    else
      *a3 = 0;
    v12 = v23;
    if (v23)
    {
      p_shared_owners = (unint64_t *)&v23->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
LABEL_22:
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_ResetIfNecessaryAndGetNode(this, a2, &v20);
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::GetNodeIdentifier((pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema *)&v20, &v22);
    v9 = v21;
    if (v21)
    {
      v10 = (unint64_t *)&v21->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
    if (v22)
    {
      (*(void (**)(uint64_t, float))(*(_QWORD *)v22 + 32))(v22, 0.0);
      v12 = v23;
      if (!v23)
        return sub_20C7E0EB0((uint64_t)v24);
      v13 = (unint64_t *)&v23->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      goto LABEL_22;
    }
    v16 = v23;
    if (v23)
    {
      v17 = (unint64_t *)&v23->__shared_owners_;
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 - 1, v17));
      if (!v18)
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
    }
    *a3 = 0;
  }
  return sub_20C7E0EB0((uint64_t)v24);
}

void sub_20C829988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C7E0EB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeTypeInfo(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_ResetIfNecessaryAndGetNode(this, a2, &v7);
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema::GetNodeTypeInfo((pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchema *)&v7, a3);
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20C829A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeTypeInfoKeys(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeTypeInfo(this, a2, &v7);
  if (v7)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  v4 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20C829AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeTypeInfoValue(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  std::__shared_weak_count *v20;

  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeTypeInfo(this, a2, &v19);
  if (v19)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, const pxrInternal__aapl__pxrReserved__::TfToken *))(*(_QWORD *)v19 + 24))(&v15, v19, a3);
    sub_20C7FAA3C((uint64_t)&v15, &v17);
    v6 = v16;
    if (v16)
    {
      p_shared_owners = (unint64_t *)&v16->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    if (v17)
      (*(void (**)(uint64_t, float))(*(_QWORD *)v17 + 16))(v17, 0.0);
    else
      *(_QWORD *)(a4 + 8) = 0;
    v9 = v18;
    if (v18)
    {
      v10 = (unint64_t *)&v18->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  else
  {
    *(_QWORD *)(a4 + 8) = 0;
  }
  v12 = v20;
  if (v20)
  {
    v13 = (unint64_t *)&v20->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20C829C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetAuthoredNodeParameterNames@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *result;
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v11;
  uint64_t *v12;
  uint64_t *v13;
  _QWORD *i;
  uint64_t *Element;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t *j;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  int v27;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v28;
  std::__shared_weak_count *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeParameters(this, a2, &v28);
  pxrInternal__aapl__pxrReserved__::HdContainerSchema::GetNames((pxrInternal__aapl__pxrReserved__::HdContainerSchema *)&v28, a3);
  v6 = v29;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  result = sub_20BF2B2B4((_QWORD *)this + 44, a2);
  if (result)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    if (!v10)
      v10 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    v11 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
    if (!v11)
      v11 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&v28, v10, a2, v11);
    v25 = 0u;
    v26 = 0u;
    v27 = 1065353216;
    v12 = (uint64_t *)*a3;
    v13 = (uint64_t *)a3[1];
    while (v12 != v13)
    {
      sub_20BF348DC((uint64_t)&v25, v12, v12);
      ++v12;
    }
    for (i = (_QWORD *)*((_QWORD *)this + 41); i; i = (_QWORD *)*i)
    {
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), &v28))
      {
        if (i[9])
        {
          Element = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), 3u);
          sub_20BF348DC((uint64_t)&v25, Element, Element);
        }
        else
        {
          v16 = (_QWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), 3u);
          sub_20C82D55C(&v25, v16);
        }
      }
    }
    v17 = (uint64_t *)*a3;
    for (j = (uint64_t *)a3[1]; j != v17; --j)
    {
      v20 = *(j - 1);
      v19 = v20;
      if ((v20 & 7) != 0)
      {
        v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v22 = __ldxr(v21);
        while (__stlxr(v22 - 2, v21));
      }
    }
    a3[1] = (uint64_t)v17;
    if ((_QWORD)v26)
    {
      v23 = 0;
      v24 = (_QWORD *)v26;
      do
      {
        ++v23;
        v24 = (_QWORD *)*v24;
      }
      while (v24);
    }
    else
    {
      v23 = 0;
    }
    sub_20C82D590(a3, v17, (_QWORD *)v26, 0, v23);
    sub_20BF20BCC((uint64_t)&v25);
    return (_QWORD *)sub_20C7E0EB0((uint64_t)&v28);
  }
  return result;
}

void sub_20C829E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeParameterValue@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v9;
  _QWORD *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t *v37;
  uint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  _BYTE v47[56];
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v8)
    v8 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v9)
    v9 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v47, v8, a2, v9, a3);
  v10 = sub_20C82D874((_QWORD *)this + 39, (uint64_t)v47);
  if (v10)
  {
    sub_20C7E0B14((uint64_t)(v10 + 9), &v45);
    v41 = v45;
    v42 = v46;
    if (v46)
    {
      p_shared_owners = (unint64_t *)&v46->__shared_owners_;
      do
        v12 = __ldxr(p_shared_owners);
      while (__stxr(v12 + 1, p_shared_owners));
    }
    sub_20C7E0E2C(&v43, &v41);
    v13 = v42;
    if (v42)
    {
      v14 = (unint64_t *)&v42->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)&v43))
    {
      pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::GetValue((pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema *)&v43, &v39);
      if (v39)
      {
        (*(void (**)(uint64_t, float))(*(_QWORD *)v39 + 16))(v39, 0.0);
        v16 = v40;
        if (v40)
        {
          v17 = (unint64_t *)&v40->__shared_owners_;
          do
            v18 = __ldaxr(v17);
          while (__stlxr(v18 - 1, v17));
          if (!v18)
          {
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
          }
        }
LABEL_48:
        v34 = v44;
        if (v44)
        {
          v35 = (unint64_t *)&v44->__shared_owners_;
          do
            v36 = __ldaxr(v35);
          while (__stlxr(v36 - 1, v35));
          if (!v36)
          {
            ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
            std::__shared_weak_count::__release_weak(v34);
          }
        }
        v25 = v46;
        if (v46)
        {
          v37 = (unint64_t *)&v46->__shared_owners_;
          do
            v27 = __ldaxr(v37);
          while (__stlxr(v27 - 1, v37));
LABEL_56:
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
          return sub_20C7E0EB0((uint64_t)v47);
        }
        return sub_20C7E0EB0((uint64_t)v47);
      }
      v31 = v40;
      if (v40)
      {
        v32 = (unint64_t *)&v40->__shared_owners_;
        do
          v33 = __ldaxr(v32);
        while (__stlxr(v33 - 1, v32));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
        }
      }
    }
    *(_QWORD *)(a4 + 8) = 0;
    goto LABEL_48;
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeParameters(this, a2, &v39);
  sub_20C82A2AC(&v39, a3, &v43);
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::GetValue((pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema *)&v43, &v45);
  v19 = v44;
  if (v44)
  {
    v20 = (unint64_t *)&v44->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v22 = v40;
  if (v40)
  {
    v23 = (unint64_t *)&v40->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  if (v45)
  {
    (*(void (**)(uint64_t, float))(*(_QWORD *)v45 + 16))(v45, 0.0);
    v25 = v46;
    if (!v46)
      return sub_20C7E0EB0((uint64_t)v47);
    v26 = (unint64_t *)&v46->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    goto LABEL_56;
  }
  v28 = v46;
  if (v46)
  {
    v29 = (unint64_t *)&v46->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  *(_QWORD *)(a4 + 8) = 0;
  return sub_20C7E0EB0((uint64_t)v47);
}

void sub_20C82A234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a13);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a15);
  sub_20C7E0EB0((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_20C82A2AC(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = (unsigned int *)*a2;
  if ((*a2 & 7) != 0)
  {
    v4 = (unsigned int *)(*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v11 = v4;
  }
  sub_20C7E0698(a1, &v12);
  sub_20C7E0E2C(a3, &v12);
  v6 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if ((v11 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeParameterData@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, _QWORD *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v9;
  _QWORD *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD *v16;
  unsigned int *v17;
  unsigned int v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  _QWORD *v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t *v47;
  uint64_t v49;
  uint64_t v50;
  std::__shared_weak_count *v51;
  uint64_t v52;
  std::__shared_weak_count *v53;
  uint64_t v54;
  std::__shared_weak_count *v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  _BYTE v60[56];
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v8)
    v8 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v9)
    v9 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v60, v8, a2, v9, a3);
  a4[1] = 0;
  a4[2] = 0;
  v10 = sub_20C82D874((_QWORD *)this + 39, (uint64_t)v60);
  if (v10)
  {
    sub_20C7E0B14((uint64_t)(v10 + 9), &v54);
    v50 = v54;
    v51 = v55;
    if (v55)
    {
      p_shared_owners = (unint64_t *)&v55->__shared_owners_;
      do
        v12 = __ldxr(p_shared_owners);
      while (__stxr(v12 + 1, p_shared_owners));
    }
    sub_20C7E0E2C(&v52, &v50);
    v13 = v51;
    if (v51)
    {
      v14 = (unint64_t *)&v51->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)&v52))
    {
      pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::GetValue((pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema *)&v52, &v58);
      if (v58)
      {
        (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v58 + 16))(&v56, 0.0);
        sub_20BF4B5D8(a4, &v56);
        sub_20BF4C2D8((uint64_t)&v56);
      }
      pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::GetColorSpace((pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema *)&v52, &v56);
      if (v56)
      {
        (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v56 + 32))(&v49, 0.0);
        v16 = a4 + 2;
        if (&v49 == a4 + 2)
        {
          if ((v49 & 7) != 0)
          {
            v28 = (unsigned int *)(v49 & 0xFFFFFFFFFFFFFFF8);
            do
              v29 = __ldxr(v28);
            while (__stlxr(v29 - 2, v28));
          }
        }
        else
        {
          if ((*v16 & 7) != 0)
          {
            v17 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
            do
              v18 = __ldxr(v17);
            while (__stlxr(v18 - 2, v17));
          }
          *v16 = v49;
        }
      }
      v30 = v57;
      if (v57)
      {
        v31 = (unint64_t *)&v57->__shared_owners_;
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      v33 = v59;
      if (v59)
      {
        v34 = (unint64_t *)&v59->__shared_owners_;
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
    }
    v36 = v53;
    if (v53)
    {
      v37 = (unint64_t *)&v53->__shared_owners_;
      do
        v38 = __ldaxr(v37);
      while (__stlxr(v38 - 1, v37));
      if (!v38)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
    v39 = v55;
    if (v55)
    {
      v40 = (unint64_t *)&v55->__shared_owners_;
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      goto LABEL_75;
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeParameters(this, a2, &v52);
    sub_20C82A2AC(&v52, a3, &v54);
    v19 = v53;
    if (v53)
    {
      v20 = (unint64_t *)&v53->__shared_owners_;
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)&v54))
    {
      pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::GetValue((pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema *)&v54, &v52);
      if (v52)
      {
        (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v52 + 16))(&v58, 0.0);
        sub_20BF4B5D8(a4, &v58);
        sub_20BF4C2D8((uint64_t)&v58);
      }
      v22 = v53;
      if (v53)
      {
        v23 = (unint64_t *)&v53->__shared_owners_;
        do
          v24 = __ldaxr(v23);
        while (__stlxr(v24 - 1, v23));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::GetColorSpace((pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema *)&v54, &v52);
      if (v52)
      {
        (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v52 + 32))(&v58, 0.0);
        v25 = a4 + 2;
        if (&v58 == a4 + 2)
        {
          if ((v58 & 7) != 0)
          {
            v42 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
            do
              v43 = __ldxr(v42);
            while (__stlxr(v43 - 2, v42));
          }
        }
        else
        {
          if ((*v25 & 7) != 0)
          {
            v26 = (unsigned int *)(*v25 & 0xFFFFFFFFFFFFFFF8);
            do
              v27 = __ldxr(v26);
            while (__stlxr(v27 - 2, v26));
          }
          *v25 = v58;
        }
      }
      v44 = v53;
      if (v53)
      {
        v45 = (unint64_t *)&v53->__shared_owners_;
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
    }
    v39 = v55;
    if (v55)
    {
      v47 = (unint64_t *)&v55->__shared_owners_;
      do
        v41 = __ldaxr(v47);
      while (__stlxr(v41 - 1, v47));
LABEL_75:
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
      }
    }
  }
  return sub_20C7E0EB0((uint64_t)v60);
}

void sub_20C82A844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  va_list va1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va2;

  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v13 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  v7 = *(_QWORD *)(v5 + 16);
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  sub_20BF4C2D8(v5);
  sub_20C7E0EB0((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_20C82A900()
{
  JUMPOUT(0x20C82A8F8);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeInputConnectionNames@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  _QWORD *result;
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v11;
  uint64_t *v12;
  uint64_t *v13;
  _QWORD *i;
  uint64_t *Element;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t *j;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  int v27;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v28;
  std::__shared_weak_count *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeConnections(this, a2, &v28);
  pxrInternal__aapl__pxrReserved__::HdContainerSchema::GetNames((pxrInternal__aapl__pxrReserved__::HdContainerSchema *)&v28, a3);
  v6 = v29;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  result = sub_20BF2B2B4((_QWORD *)this + 44, a2);
  if (result)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    if (!v10)
      v10 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
    v11 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
    if (!v11)
      v11 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&v28, v10, a2, (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)((char *)v11 + 8));
    v25 = 0u;
    v26 = 0u;
    v27 = 1065353216;
    v12 = (uint64_t *)*a3;
    v13 = (uint64_t *)a3[1];
    while (v12 != v13)
    {
      sub_20BF348DC((uint64_t)&v25, v12, v12);
      ++v12;
    }
    for (i = (_QWORD *)*((_QWORD *)this + 41); i; i = (_QWORD *)*i)
    {
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), &v28))
      {
        if (i[9])
        {
          Element = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), 3u);
          sub_20BF348DC((uint64_t)&v25, Element, Element);
        }
        else
        {
          v16 = (_QWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), 3u);
          sub_20C82D55C(&v25, v16);
        }
      }
    }
    v17 = (uint64_t *)*a3;
    for (j = (uint64_t *)a3[1]; j != v17; --j)
    {
      v20 = *(j - 1);
      v19 = v20;
      if ((v20 & 7) != 0)
      {
        v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v22 = __ldxr(v21);
        while (__stlxr(v22 - 2, v21));
      }
    }
    a3[1] = (uint64_t)v17;
    if ((_QWORD)v26)
    {
      v23 = 0;
      v24 = (_QWORD *)v26;
      do
      {
        ++v23;
        v24 = (_QWORD *)*v24;
      }
      while (v24);
    }
    else
    {
      v23 = 0;
    }
    sub_20C82D590(a3, v17, (_QWORD *)v26, 0, v23);
    sub_20BF20BCC((uint64_t)&v25);
    return (_QWORD *)sub_20C7E0EB0((uint64_t)&v28);
  }
  return result;
}

void sub_20C82AB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetNodeInputConnection@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, const pxrInternal__aapl__pxrReserved__::TfToken *a3@<X2>, uint64_t a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v9;
  _QWORD *v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t NumElements;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  _BYTE v55[56];
  uint64_t v56;

  v56 = *MEMORY[0x24BDAC8D0];
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v8)
    v8 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v9)
    v9 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v55, v8, a2, (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)((char *)v9 + 8), a3);
  v53 = 0;
  v54 = 0;
  v10 = sub_20C82D874((_QWORD *)this + 39, (uint64_t)v55);
  if (v10)
  {
    sub_20C7FA9D0((uint64_t)(v10 + 9), &v51);
    v11 = v51;
    if (v51)
      sub_20BDE881C(&v53, &v51);
    else
      *(_QWORD *)(a4 + 64) = 0x400000000;
    v12 = v52;
    if (!v52)
      goto LABEL_13;
    p_shared_owners = (unint64_t *)&v52->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
      if (!v11)
        goto LABEL_59;
    }
    else
    {
LABEL_13:
      if (!v11)
        goto LABEL_59;
    }
  }
  if (v53)
  {
    v51 = v53;
    v52 = v54;
    if (v54)
    {
      v15 = (unint64_t *)&v54->__shared_owners_;
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 1, v15));
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_GetNodeConnections(this, a2, &v49);
    sub_20C82B078(&v49, a3, &v51);
    v17 = v50;
    if (v50)
    {
      v18 = (unint64_t *)&v50->__shared_owners_;
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
  }
  NumElements = pxrInternal__aapl__pxrReserved__::HdVectorSchema::GetNumElements((pxrInternal__aapl__pxrReserved__::HdVectorSchema *)&v51);
  v21 = NumElements;
  *(_QWORD *)(a4 + 64) = 0x400000000;
  if (NumElements >= 5)
  {
    sub_20C82DAC8(a4, NumElements);
    goto LABEL_27;
  }
  if (NumElements)
  {
LABEL_27:
    v22 = 0;
    do
    {
      sub_20C82B170(&v51, &v49);
      if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)&v49))
      {
        pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::GetUpstreamNodePath((pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema *)&v49, &v47);
        pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::GetUpstreamNodeOutputName((pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema *)&v49, &v45);
        if (v47 && v45)
        {
          (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v47 + 32))(&v43, 0.0);
          (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v45 + 32))(&v44, 0.0);
          sub_20C82DB6C(a4, &v43);
          if ((v44 & 7) != 0)
          {
            v23 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
            do
              v24 = __ldxr(v23);
            while (__stlxr(v24 - 2, v23));
          }
          if ((v43 & 7) != 0)
          {
            v25 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
            do
              v26 = __ldxr(v25);
            while (__stlxr(v26 - 2, v25));
          }
        }
        v27 = v46;
        if (v46)
        {
          v28 = (unint64_t *)&v46->__shared_owners_;
          do
            v29 = __ldaxr(v28);
          while (__stlxr(v29 - 1, v28));
          if (!v29)
          {
            ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
            std::__shared_weak_count::__release_weak(v27);
          }
        }
        v30 = v48;
        if (v48)
        {
          v31 = (unint64_t *)&v48->__shared_owners_;
          do
            v32 = __ldaxr(v31);
          while (__stlxr(v32 - 1, v31));
          if (!v32)
          {
            ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
            std::__shared_weak_count::__release_weak(v30);
          }
        }
      }
      v33 = v50;
      if (v50)
      {
        v34 = (unint64_t *)&v50->__shared_owners_;
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      ++v22;
    }
    while (v22 != v21);
  }
  v36 = v52;
  if (v52)
  {
    v37 = (unint64_t *)&v52->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
LABEL_59:
  v39 = v54;
  if (v54)
  {
    v40 = (unint64_t *)&v54->__shared_owners_;
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  return sub_20C7E0EB0((uint64_t)v55);
}

void sub_20C82AF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;
  uint64_t v15;
  va_list va2;

  va_start(va2, a7);
  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v13 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  sub_20C7E0EB0((uint64_t)va2);
  _Unwind_Resume(a1);
}

void sub_20C82B078(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  v14 = (unsigned int *)*a2;
  if ((*a2 & 7) != 0)
  {
    v4 = (unsigned int *)(*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v14 = v4;
  }
  sub_20C82D994(a1, &v15);
  v6 = v16;
  *a3 = v15;
  a3[1] = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    v9 = v16;
    if (v16)
    {
      v10 = (unint64_t *)&v16->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  if ((v14 & 7) != 0)
  {
    v12 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
}

void sub_20C82B170(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;

  sub_20C7E0698(a1, &v6);
  sub_20C7E0E2C(a2, &v6);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::DeleteNode(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v9;
  std::__shared_weak_count *v10;
  _BYTE v11[56];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v4)
    v4 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v11, v4, a2);
  v9 = 0;
  v10 = 0;
  pxrInternal__aapl__pxrReserved__::HdContainerDataSourceEditor::Set((uint64_t)this + 32, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v11, &v9);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_20BF348DC((uint64_t)this + 392, a2, (uint64_t *)a2);
  return sub_20C7E0EB0((uint64_t)v11);
}

void sub_20C82B2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C7E0EB0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::SetNodeType(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v12;
  __int128 v13;
  _BYTE v14[56];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v6)
    v6 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v7 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v7)
    v7 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v14, v6, a2, (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)((char *)v7 + 16));
  sub_20C7EA9FC((uint64_t *)a3, &v12);
  v13 = v12;
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride((uint64_t)this, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v14, (uint64_t *)&v13);
  v8 = (std::__shared_weak_count *)*((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v9 = (unint64_t *)(*((_QWORD *)&v13 + 1) + 8);
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return sub_20C7E0EB0((uint64_t)v14);
}

void sub_20C82B418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4;
  va_list va;
  uint64_t v6;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v4 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C7E0EB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::SetNodeParameterValue(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::VtValue *a4)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v9;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[56];
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v8)
    v8 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v9)
    v9 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v33, v8, a2, v9, a3);
  v29 = 0u;
  v30 = 0u;
  sub_20C807D38(a4, &v27);
  v28 = v27;
  v27 = 0uLL;
  v10 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetValue(&v29, (uint64_t *)&v28);
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::Build(v10, &v31);
  v32 = v31;
  v31 = 0uLL;
  v11 = (std::__shared_weak_count *)*((_QWORD *)&v28 + 1);
  if (*((_QWORD *)&v28 + 1))
  {
    v12 = (unint64_t *)(*((_QWORD *)&v28 + 1) + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = (std::__shared_weak_count *)*((_QWORD *)&v27 + 1);
  if (*((_QWORD *)&v27 + 1))
  {
    v15 = (unint64_t *)(*((_QWORD *)&v27 + 1) + 8);
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
  if (*((_QWORD *)&v30 + 1))
  {
    v18 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
  if (*((_QWORD *)&v29 + 1))
  {
    v21 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride((uint64_t)this, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v33, (uint64_t *)&v32);
  v23 = (std::__shared_weak_count *)*((_QWORD *)&v32 + 1);
  if (*((_QWORD *)&v32 + 1))
  {
    v24 = (unint64_t *)(*((_QWORD *)&v32 + 1) + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  return sub_20C7E0EB0((uint64_t)v33);
}

void sub_20C82B67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C7E0EB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::SetNodeParameterData(uint64_t a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::TfToken *a3, _QWORD *a4)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  __int128 v13;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[56];
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v8)
    v8 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v9)
    v9 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v45, v8, a2, v9, a3);
  v41 = 0u;
  v42 = 0u;
  sub_20C807D38(a4, &v39);
  v40 = v39;
  v39 = 0uLL;
  v10 = pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetValue(&v41, (uint64_t *)&v40);
  v12 = a4[2];
  v11 = a4 + 2;
  if (v12)
  {
    sub_20C7EA9FC(v11, &v37);
    v13 = v37;
  }
  else
  {
    v13 = 0uLL;
  }
  v38 = v13;
  v37 = 0uLL;
  v14 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::SetColorSpace((uint64_t)v10, (uint64_t *)&v38);
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeParameterSchema::Builder::Build(v14, &v43);
  v44 = v43;
  v43 = 0uLL;
  v15 = (std::__shared_weak_count *)*((_QWORD *)&v38 + 1);
  if (*((_QWORD *)&v38 + 1))
  {
    v16 = (unint64_t *)(*((_QWORD *)&v38 + 1) + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  v18 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
  if (*((_QWORD *)&v37 + 1))
  {
    v19 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v22 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v25 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v27 = (std::__shared_weak_count *)*((_QWORD *)&v42 + 1);
  if (*((_QWORD *)&v42 + 1))
  {
    v28 = (unint64_t *)(*((_QWORD *)&v42 + 1) + 8);
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v30 = (std::__shared_weak_count *)*((_QWORD *)&v41 + 1);
  if (*((_QWORD *)&v41 + 1))
  {
    v31 = (unint64_t *)(*((_QWORD *)&v41 + 1) + 8);
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride(a1, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v45, (uint64_t *)&v44);
  v33 = (std::__shared_weak_count *)*((_QWORD *)&v44 + 1);
  if (*((_QWORD *)&v44 + 1))
  {
    v34 = (unint64_t *)(*((_QWORD *)&v44 + 1) + 8);
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  return sub_20C7E0EB0((uint64_t)v45);
}

void sub_20C82B9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;
  uint64_t v12;
  uint64_t v13;
  va_list va2;
  uint64_t v15;
  va_list va3;

  va_start(va3, a5);
  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v10 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v13 = va_arg(va3, _QWORD);
  v15 = va_arg(va3, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va2);
  sub_20C7E0EB0(v5 - 112);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::DeleteNodeParameter(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[56];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v6)
    v6 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v7 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v7)
    v7 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v14, v6, a2, v7, a3);
  v12 = 0;
  v13 = 0;
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride((uint64_t)this, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v14, &v12);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return sub_20C7E0EB0((uint64_t)v14);
}

void sub_20C82BB38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  sub_20C7E0EB0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::SetNodeInputConnection(uint64_t a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v8;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *v13;
  __int128 v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v25;
  __int128 v26;
  int64x2_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  int64x2_t v63;
  _QWORD v64[2];
  _BYTE v65[24];
  uint64_t v66;
  _QWORD *v67;
  _BYTE v68[56];
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v8)
    v8 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v9 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v9)
    v9 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v68, v8, a2, (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)((char *)v9 + 8), a3);
  v63 = 0uLL;
  v64[0] = 0;
  sub_20BE0ECB0((char **)&v63, *(unsigned int *)(a4 + 64));
  v10 = *(unsigned int *)(a4 + 64);
  if (*(_DWORD *)(a4 + 68) >= 5u)
    a4 = *(_QWORD *)a4;
  if ((_DWORD)v10)
  {
    v11 = a4 + 16 * v10;
    do
    {
      v59 = 0u;
      v60 = 0u;
      sub_20C7EA9FC((uint64_t *)a4, &v57);
      v58 = v57;
      v57 = 0uLL;
      v12 = pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodePath(&v59, (uint64_t *)&v58);
      sub_20C7EA9FC((uint64_t *)(a4 + 8), &v55);
      v56 = v55;
      v55 = 0uLL;
      v13 = (pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodeOutputName((uint64_t)v12, (uint64_t *)&v56);
      pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::Build(v13, &v61);
      v14 = v61;
      v62 = v61;
      v61 = 0uLL;
      v15 = v63.i64[1];
      if (v63.i64[1] >= v64[0])
      {
        v54 = v14;
        v17 = (v63.i64[1] - v63.i64[0]) >> 4;
        if ((unint64_t)(v17 + 1) >> 60)
          sub_20BDDF694();
        v18 = (v64[0] - v63.i64[0]) >> 3;
        if (v18 <= v17 + 1)
          v18 = v17 + 1;
        if (v64[0] - v63.i64[0] >= 0x7FFFFFFFFFFFFFF0uLL)
          v19 = 0xFFFFFFFFFFFFFFFLL;
        else
          v19 = v18;
        v67 = v64;
        v20 = (char *)sub_20BDEA2F0((uint64_t)v64, v19);
        v22 = &v20[16 * v17];
        *(_OWORD *)v22 = v54;
        v62 = 0uLL;
        v23 = (_QWORD *)v63.i64[1];
        v24 = (_QWORD *)v63.i64[0];
        if (v63.i64[1] == v63.i64[0])
        {
          v27 = vdupq_n_s64(v63.u64[1]);
          v25 = &v20[16 * v17];
        }
        else
        {
          v25 = &v20[16 * v17];
          do
          {
            v26 = *((_OWORD *)v23 - 1);
            v23 -= 2;
            *((_OWORD *)v25 - 1) = v26;
            v25 -= 16;
            *v23 = 0;
            v23[1] = 0;
          }
          while (v23 != v24);
          v27 = v63;
        }
        v16 = v22 + 16;
        v63.i64[0] = (uint64_t)v25;
        v63.i64[1] = (uint64_t)(v22 + 16);
        *(int64x2_t *)&v65[8] = v27;
        v28 = v64[0];
        v64[0] = &v20[16 * v21];
        v66 = v28;
        *(_QWORD *)v65 = v27.i64[0];
        sub_20BDEA324((uint64_t)v65);
      }
      else
      {
        *(_OWORD *)v63.i64[1] = v14;
        v16 = (_OWORD *)(v15 + 16);
        v62 = 0uLL;
      }
      v63.i64[1] = (uint64_t)v16;
      v29 = (std::__shared_weak_count *)*((_QWORD *)&v61 + 1);
      if (*((_QWORD *)&v61 + 1))
      {
        v30 = (unint64_t *)(*((_QWORD *)&v61 + 1) + 8);
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
      v32 = (std::__shared_weak_count *)*((_QWORD *)&v56 + 1);
      if (*((_QWORD *)&v56 + 1))
      {
        v33 = (unint64_t *)(*((_QWORD *)&v56 + 1) + 8);
        do
          v34 = __ldaxr(v33);
        while (__stlxr(v34 - 1, v33));
        if (!v34)
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
        }
      }
      v35 = (std::__shared_weak_count *)*((_QWORD *)&v55 + 1);
      if (*((_QWORD *)&v55 + 1))
      {
        v36 = (unint64_t *)(*((_QWORD *)&v55 + 1) + 8);
        do
          v37 = __ldaxr(v36);
        while (__stlxr(v37 - 1, v36));
        if (!v37)
        {
          ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
          std::__shared_weak_count::__release_weak(v35);
        }
      }
      v38 = (std::__shared_weak_count *)*((_QWORD *)&v58 + 1);
      if (*((_QWORD *)&v58 + 1))
      {
        v39 = (unint64_t *)(*((_QWORD *)&v58 + 1) + 8);
        do
          v40 = __ldaxr(v39);
        while (__stlxr(v40 - 1, v39));
        if (!v40)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
      }
      v41 = (std::__shared_weak_count *)*((_QWORD *)&v57 + 1);
      if (*((_QWORD *)&v57 + 1))
      {
        v42 = (unint64_t *)(*((_QWORD *)&v57 + 1) + 8);
        do
          v43 = __ldaxr(v42);
        while (__stlxr(v43 - 1, v42));
        if (!v43)
        {
          ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
          std::__shared_weak_count::__release_weak(v41);
        }
      }
      v44 = (std::__shared_weak_count *)*((_QWORD *)&v60 + 1);
      if (*((_QWORD *)&v60 + 1))
      {
        v45 = (unint64_t *)(*((_QWORD *)&v60 + 1) + 8);
        do
          v46 = __ldaxr(v45);
        while (__stlxr(v46 - 1, v45));
        if (!v46)
        {
          ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
          std::__shared_weak_count::__release_weak(v44);
        }
      }
      v47 = (std::__shared_weak_count *)*((_QWORD *)&v59 + 1);
      if (*((_QWORD *)&v59 + 1))
      {
        v48 = (unint64_t *)(*((_QWORD *)&v59 + 1) + 8);
        do
          v49 = __ldaxr(v48);
        while (__stlxr(v49 - 1, v48));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
      }
      a4 += 16;
    }
    while (a4 != v11);
  }
  *(_QWORD *)&v62 = (v63.i64[1] - v63.i64[0]) >> 4;
  *(_QWORD *)&v61 = v63.i64[0];
  sub_20C820960(&v62, &v61, &v59);
  *(_OWORD *)v65 = v59;
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride(a1, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v68, (uint64_t *)v65);
  v50 = *(std::__shared_weak_count **)&v65[8];
  if (*(_QWORD *)&v65[8])
  {
    v51 = (unint64_t *)(*(_QWORD *)&v65[8] + 8);
    do
      v52 = __ldaxr(v51);
    while (__stlxr(v52 - 1, v51));
    if (!v52)
    {
      ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
      std::__shared_weak_count::__release_weak(v50);
    }
  }
  *(_QWORD *)v65 = &v63;
  sub_20BDE9EB0((void ***)v65);
  return sub_20C7E0EB0((uint64_t)v68);
}

void sub_20C82BFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a31);
  a19 = (void **)&a27;
  sub_20BDE9EB0(&a19);
  sub_20C7E0EB0(v31 - 128);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::DeleteNodeInputConnection(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  uint64_t v12;
  std::__shared_weak_count *v13;
  _BYTE v14[56];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v6)
    v6 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  v7 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  if (!v7)
    v7 = sub_20C82D7EC(&pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v14, v6, a2, (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)((char *)v7 + 8), a3);
  v12 = 0;
  v13 = 0;
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride((uint64_t)this, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v14, &v12);
  v8 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  return sub_20C7E0EB0((uint64_t)v14);
}

void sub_20C82C180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  sub_20C7E0EB0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetTerminalNames(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, uint64_t *a2@<X8>)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  unsigned __int8 v7;
  uint64_t *v8;
  uint64_t *v9;
  _QWORD *i;
  uint64_t *Element;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *j;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v21;
  __int128 v22;
  __int128 v23;
  int v24;

  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::GetTerminals((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 16), &v22);
  pxrInternal__aapl__pxrReserved__::HdContainerSchema::GetNames((pxrInternal__aapl__pxrReserved__::HdContainerSchema *)&v22, a2);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
  if (*((_QWORD *)&v22 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (*((_BYTE *)this + 432))
  {
    v7 = atomic_load((unsigned __int8 *)&qword_25498E0B0);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_25498E0B0))
    {
      v21 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
      if (!v21)
        v21 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E078, (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)((char *)v21 + 8));
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E078, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E0B0);
    }
    v22 = 0u;
    v23 = 0u;
    v24 = 1065353216;
    v8 = (uint64_t *)*a2;
    v9 = (uint64_t *)a2[1];
    while (v8 != v9)
    {
      sub_20BF348DC((uint64_t)&v22, v8, v8);
      ++v8;
    }
    for (i = (_QWORD *)*((_QWORD *)this + 41); i; i = (_QWORD *)*i)
    {
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)&unk_25498E078))
      {
        if (i[9])
        {
          Element = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), 1u);
          sub_20BF348DC((uint64_t)&v22, Element, Element);
        }
        else
        {
          v12 = (_QWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(i + 2), 1u);
          sub_20C82D55C(&v22, v12);
        }
      }
    }
    v13 = (uint64_t *)*a2;
    for (j = (uint64_t *)a2[1]; j != v13; --j)
    {
      v16 = *(j - 1);
      v15 = v16;
      if ((v16 & 7) != 0)
      {
        v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stlxr(v18 - 2, v17));
      }
    }
    a2[1] = (uint64_t)v13;
    if ((_QWORD)v23)
    {
      v19 = 0;
      v20 = (_QWORD *)v23;
      do
      {
        ++v19;
        v20 = (_QWORD *)*v20;
      }
      while (v20);
    }
    else
    {
      v19 = 0;
    }
    sub_20C82D590(a2, v13, (_QWORD *)v23, 0, v19);
    sub_20BF20BCC((uint64_t)&v22);
  }
}

void sub_20C82C3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  __cxa_guard_abort(&qword_25498E0B0);
  sub_20BEEB2B8(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::GetTerminalConnection@<X0>(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v6;
  _QWORD *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  _QWORD *v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  std::__shared_weak_count *v32;
  unint64_t *p_shared_owners;
  unint64_t v34;
  _QWORD *v35;
  unsigned int *v36;
  unsigned int v37;
  unsigned int *v38;
  unsigned int v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v50;
  uint64_t v51;
  std::__shared_weak_count *v52;
  uint64_t v53;
  std::__shared_weak_count *v54;
  uint64_t v55;
  std::__shared_weak_count *v56;
  uint64_t v57;
  std::__shared_weak_count *v58;
  _BYTE v59[56];
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v6)
    v6 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v59, (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)((char *)v6 + 8), a2);
  v57 = 0;
  v58 = 0;
  v7 = sub_20C82D874((_QWORD *)this + 39, (uint64_t)v59);
  if (!v7)
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchema::GetTerminals((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 16), &v51);
    sub_20C82C91C(&v51, a2, &v55);
    v10 = v52;
    if (!v52)
    {
LABEL_17:
      if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)&v55))
      {
        LOBYTE(v50) = 1;
        v51 = 0;
        v52 = 0;
        sub_20C82CEBC(a3, &v50, &v51);
        if ((v52 & 7) != 0)
        {
          v14 = (unsigned int *)((unint64_t)v52 & 0xFFFFFFFFFFFFFFF8);
          do
            v15 = __ldxr(v14);
          while (__stlxr(v15 - 2, v14));
        }
        if ((v51 & 7) != 0)
        {
          v16 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
          do
            v17 = __ldxr(v16);
          while (__stlxr(v17 - 2, v16));
        }
        pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::GetUpstreamNodePath((pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema *)&v55, &v51);
        if (v51)
        {
          (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v51 + 32))(&v50, 0.0);
          v18 = (_QWORD *)(a3 + 8);
          if (&v50 == (uint64_t *)(a3 + 8))
          {
            v21 = v50;
          }
          else
          {
            if ((*v18 & 7) != 0)
            {
              v19 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
              do
                v20 = __ldxr(v19);
              while (__stlxr(v20 - 2, v19));
            }
            v21 = 0;
            *v18 = v50;
            v50 = 0;
          }
          if ((v21 & 7) != 0)
          {
            v30 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
            do
              v31 = __ldxr(v30);
            while (__stlxr(v31 - 2, v30));
          }
        }
        else
        {
          *(_BYTE *)a3 = 0;
        }
        v32 = v52;
        if (v52)
        {
          p_shared_owners = (unint64_t *)&v52->__shared_owners_;
          do
            v34 = __ldaxr(p_shared_owners);
          while (__stlxr(v34 - 1, p_shared_owners));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
        pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::GetUpstreamNodeOutputName((pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema *)&v55, &v51);
        if (v51)
        {
          (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v51 + 32))(&v50, 0.0);
          v35 = (_QWORD *)(a3 + 16);
          if (&v50 == (uint64_t *)(a3 + 16))
          {
            if ((v50 & 7) != 0)
            {
              v38 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
              do
                v39 = __ldxr(v38);
              while (__stlxr(v39 - 2, v38));
            }
          }
          else
          {
            if ((*v35 & 7) != 0)
            {
              v36 = (unsigned int *)(*v35 & 0xFFFFFFFFFFFFFFF8);
              do
                v37 = __ldxr(v36);
              while (__stlxr(v37 - 2, v36));
            }
            *v35 = v50;
          }
        }
        v40 = v52;
        if (v52)
        {
          v41 = (unint64_t *)&v52->__shared_owners_;
          do
            v42 = __ldaxr(v41);
          while (__stlxr(v42 - 1, v41));
          if (!v42)
          {
            ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
            std::__shared_weak_count::__release_weak(v40);
          }
        }
      }
      else
      {
        LOBYTE(v50) = 0;
        v51 = 0;
        v52 = 0;
        sub_20C82CEBC(a3, &v50, &v51);
        if ((v52 & 7) != 0)
        {
          v22 = (unsigned int *)((unint64_t)v52 & 0xFFFFFFFFFFFFFFF8);
          do
            v23 = __ldxr(v22);
          while (__stlxr(v23 - 2, v22));
        }
        if ((v51 & 7) != 0)
        {
          v24 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
          do
            v25 = __ldxr(v24);
          while (__stlxr(v25 - 2, v24));
        }
      }
      v43 = v56;
      if (v56)
      {
        v44 = (unint64_t *)&v56->__shared_owners_;
        do
          v45 = __ldaxr(v44);
        while (__stlxr(v45 - 1, v44));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
      goto LABEL_73;
    }
    v13 = (unint64_t *)&v52->__shared_owners_;
    do
      v12 = __ldaxr(v13);
    while (__stlxr(v12 - 1, v13));
LABEL_15:
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    goto LABEL_17;
  }
  sub_20C7E0B14((uint64_t)(v7 + 9), &v55);
  v57 = v55;
  v58 = v56;
  if (v55)
  {
    v53 = v55;
    v54 = v56;
    if (v56)
    {
      v8 = (unint64_t *)&v56->__shared_owners_;
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    sub_20C7E0E2C(&v55, &v53);
    v10 = v54;
    if (!v54)
      goto LABEL_17;
    v11 = (unint64_t *)&v54->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    goto LABEL_15;
  }
  LOBYTE(v51) = 0;
  v55 = 0;
  v56 = 0;
  sub_20C82CEBC(a3, &v51, &v55);
  if ((v56 & 7) != 0)
  {
    v26 = (unsigned int *)((unint64_t)v56 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  if ((v55 & 7) != 0)
  {
    v28 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stlxr(v29 - 2, v28));
  }
LABEL_73:
  v46 = v58;
  if (v58)
  {
    v47 = (unint64_t *)&v58->__shared_owners_;
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  return sub_20C7E0EB0((uint64_t)v59);
}

void sub_20C82C878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;
  uint64_t v18;
  uint64_t v19;
  va_list va2;
  uint64_t v21;
  va_list va3;

  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v16 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v19 = va_arg(va3, _QWORD);
  v21 = va_arg(va3, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  v5 = *(_QWORD *)(v3 + 16);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *(_QWORD *)(v3 + 8);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va2);
  sub_20C7E0EB0((uint64_t)va3);
  _Unwind_Resume(a1);
}

void sub_20C82C91C(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = (unsigned int *)*a2;
  if ((*a2 & 7) != 0)
  {
    v4 = (unsigned int *)(*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v11 = v4;
  }
  sub_20C7E0698(a1, &v12);
  sub_20C7E0E2C(a3, &v12);
  v6 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if ((v11 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::DeleteTerminal(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v9;
  std::__shared_weak_count *v10;
  _BYTE v11[56];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v4)
    v4 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v11, (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)((char *)v4 + 8), a2);
  v9 = 0;
  v10 = 0;
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride((uint64_t)this, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v11, &v9);
  v5 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  return sub_20C7E0EB0((uint64_t)v11);
}

void sub_20C82CAD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  sub_20C7E0EB0((uint64_t)&a11);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::SetTerminalConnection(uint64_t a1, pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v6;
  _QWORD *v7;
  pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[56];
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v6 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  if (!v6)
    v6 = sub_20C82D4D4(&pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens);
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43, (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)((char *)v6 + 8), a2);
  v40 = 0u;
  v41 = 0u;
  sub_20C7EA9FC(a3, &v38);
  v39 = v38;
  v38 = 0uLL;
  v7 = pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodePath(&v40, (uint64_t *)&v39);
  sub_20C7EA9FC(a3 + 1, &v36);
  v37 = v36;
  v36 = 0uLL;
  v8 = (pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::SetUpstreamNodeOutputName((uint64_t)v7, (uint64_t *)&v37);
  pxrInternal__aapl__pxrReserved__::HdMaterialConnectionSchema::Builder::Build(v8, &v42);
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
  if (*((_QWORD *)&v37 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v36 + 1);
  if (*((_QWORD *)&v36 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v36 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
  if (*((_QWORD *)&v39 + 1))
  {
    v16 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  v18 = (std::__shared_weak_count *)*((_QWORD *)&v38 + 1);
  if (*((_QWORD *)&v38 + 1))
  {
    v19 = (unint64_t *)(*((_QWORD *)&v38 + 1) + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (std::__shared_weak_count *)*((_QWORD *)&v41 + 1);
  if (*((_QWORD *)&v41 + 1))
  {
    v22 = (unint64_t *)(*((_QWORD *)&v41 + 1) + 8);
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  v24 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v25 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
      std::__shared_weak_count::__release_weak(v24);
    }
  }
  v40 = v42;
  if (*((_QWORD *)&v42 + 1))
  {
    v27 = (unint64_t *)(*((_QWORD *)&v42 + 1) + 8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 1, v27));
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::_SetOverride(a1, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43, (uint64_t *)&v40);
  v29 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v30 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  v32 = (std::__shared_weak_count *)*((_QWORD *)&v42 + 1);
  if (*((_QWORD *)&v42 + 1))
  {
    v33 = (unint64_t *)(*((_QWORD *)&v42 + 1) + 8);
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
  }
  return sub_20C7E0EB0((uint64_t)v43);
}

void sub_20C82CDE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  sub_20C7E0EB0(v9 - 96);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface::Finish(pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *this@<X0>, _OWORD *a2@<X8>)
{
  if (*((_QWORD *)this + 42))
    pxrInternal__aapl__pxrReserved__::HdContainerDataSourceEditor::Finish((pxrInternal__aapl__pxrReserved__::HdDataSourceMaterialNetworkInterface *)((char *)this + 32), a2);
  else
    pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer((_QWORD *)this + 2, a2);
}

void sub_20C82CE78(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_20C82CF30(a1);
  operator delete(v1);
}

_DWORD *sub_20C82CE8C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  _DWORD *v3;

  v3 = sub_20BFD6E54(a2, (_DWORD *)(a1 + 8));
  return sub_20BFD6EA4(v3 + 1, (_DWORD *)(a1 + 12));
}

uint64_t sub_20C82CEBC(uint64_t result, _BYTE *a2, uint64_t *a3)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  *(_BYTE *)result = *a2;
  v3 = *a3;
  *(_QWORD *)(result + 8) = *a3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *(_QWORD *)(result + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = a3[1];
  *(_QWORD *)(result + 16) = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      *(_QWORD *)(result + 16) &= 0xFFFFFFFFFFFFFFF8;
  }
  return result;
}

uint64_t sub_20C82CF30(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  *(_QWORD *)a1 = off_24C550058;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 496));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 480));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 464));
  v2 = *(_QWORD *)(a1 + 456);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 440));
  sub_20BF20BCC(a1 + 392);
  sub_20BF20BCC(a1 + 352);
  sub_20C82CFF4(a1 + 312);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 296));
  sub_20C7F47E8(a1 + 64);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 48));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 32));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 12));
  sub_20BFD265C((_DWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_20C82CFF4(uint64_t a1)
{
  void *v2;

  sub_20C82D02C(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C82D02C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v2 + 9));
      sub_20C7E0EB0((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_20C82D07C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = a2[1];
  v10 = *a2;
  v11 = (std::__shared_weak_count *)v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  sub_20C7E0E2C(a1, &v10);
  v6 = v11;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

_QWORD *sub_20C82D108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  _QWORD *v21;
  unint64_t v22;
  _QWORD *v24;
  char v25;

  v24 = 0;
  v25 = 0;
  sub_20C82D430((uint64_t)&v24, a2);
  v8 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v24);
  v9 = *(_QWORD *)(a1 + 8);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v9)
        v4 = v8 % v9;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
    v12 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      v13 = (_QWORD *)*v12;
      if (*v12)
      {
        do
        {
          v14 = v13[1];
          if (v14 == v8)
          {
            if ((sub_20C826E38(v13 + 2, a2) & 1) != 0)
              return v13;
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9)
                v14 %= v9;
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v4)
              break;
          }
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_20C82D3A8(a1, v8, a4, (uint64_t)&v24);
  v15 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      v20 = v19;
    else
      v20 = v18;
    sub_20BDEC6E0(a1, v20);
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v4 = v8 % v9;
      else
        v4 = v8;
    }
    else
    {
      v4 = (v9 - 1) & v8;
    }
  }
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v24 = *v21;
    *v21 = v24;
  }
  else
  {
    *v24 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v24;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v24)
    {
      v22 = *(_QWORD *)(*v24 + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9)
          v22 %= v9;
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v22) = v24;
    }
  }
  v13 = v24;
  ++*(_QWORD *)(a1 + 24);
  return v13;
}

void sub_20C82D384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *__p, uint64_t a11)
{
  if (__p)
    sub_20C82D488((uint64_t)&a11, __p);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20C82D3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  _DWORD *result;

  v7 = a1 + 16;
  v8 = operator new(0x58uLL);
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C7F1078((_DWORD *)v8 + 4, *a3);
  v8[9] = 0;
  v8[10] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C82D414(_Unwind_Exception *a1)
{
  _QWORD *v1;
  char *v2;
  uint64_t v3;

  *v1 = 0;
  sub_20C82D488(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t sub_20C82D430(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *(unsigned int *)(a2 + 48);
  if ((_DWORD)v2)
  {
    if (*(_DWORD *)(a2 + 52) >= 7u)
      v3 = *(uint64_t **)a2;
    else
      v3 = (uint64_t *)a2;
    v4 = *(unsigned __int8 *)(result + 8);
    v5 = *(_QWORD *)result;
    do
    {
      v6 = *v3++;
      v7 = v6 & 0xFFFFFFFFFFFFFFF8;
      if (v4)
      {
        v5 = v7 + ((v7 + v5 + (v7 + v5) * (v7 + v5)) >> 1);
      }
      else
      {
        v4 = 1;
        *(_BYTE *)(result + 8) = 1;
        v5 = v7;
      }
      *(_QWORD *)result = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_20C82D488(uint64_t a1, char *__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(__p + 72));
    sub_20C7E0EB0((uint64_t)(__p + 16));
  }
  if (__p)
    operator delete(__p);
}

pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *sub_20C82D4D4(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C82D51C();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType::~HdMaterialNetworkSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *sub_20C82D51C()
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType *)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdMaterialNetworkSchemaTokens_StaticTokenType::HdMaterialNetworkSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C82D548(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C82D55C(_QWORD *a1, _QWORD *a2)
{
  uint64_t *result;

  result = sub_20BF2B388(a1, a2);
  if (result)
  {
    sub_20C2010B0(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

_QWORD *sub_20C82D590(uint64_t *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  _QWORD *v29;
  _QWORD v31[5];

  v5 = a2;
  if (a5 >= 1)
  {
    v7 = a3;
    v11 = a1[2];
    v9 = (uint64_t)(a1 + 2);
    v10 = v11;
    v12 = *(_QWORD *)(v9 - 8);
    if (a5 <= (uint64_t)(v11 - v12) >> 3)
    {
      v19 = a5 + 1;
      v20 = a3;
      do
      {
        v20 = (_QWORD *)*v20;
        --v19;
      }
      while (v19 > 1);
      v21 = (uint64_t)(v12 - (_QWORD)a2) >> 3;
      v22 = a5;
      if (v21 < a5)
      {
        if ((uint64_t)(v12 - (_QWORD)a2) < 1)
        {
          v20 = a3;
        }
        else
        {
          v23 = v21 + 1;
          v20 = a3;
          do
          {
            v20 = (_QWORD *)*v20;
            --v23;
          }
          while (v23 > 1);
        }
        a1[1] = (uint64_t)sub_20C82D79C(v9, v20, a4, *(_QWORD **)(v9 - 8));
        v22 = (uint64_t)(v12 - (_QWORD)v5) >> 3;
      }
      if (v22 >= 1)
      {
        sub_20C0D8194((uint64_t)a1, v5, v12, (uint64_t)&v5[a5]);
        if (v20 != v7)
        {
          v29 = v5;
          do
          {
            sub_20BF32220(v29, v7 + 2);
            v7 = (_QWORD *)*v7;
            ++v29;
          }
          while (v7 != v20);
        }
      }
    }
    else
    {
      v13 = *a1;
      v14 = a5 + ((uint64_t)(v12 - *a1) >> 3);
      if (v14 >> 61)
        sub_20BDDF694();
      v15 = ((uint64_t)a2 - v13) >> 3;
      v16 = v10 - v13;
      if (v16 >> 2 > v14)
        v14 = v16 >> 2;
      if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
        v17 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v17 = v14;
      v31[4] = v9;
      if (v17)
        v18 = (char *)sub_20BDDF6A8(v9, v17);
      else
        v18 = 0;
      v24 = &v18[8 * v15];
      v31[0] = v18;
      v31[1] = v24;
      v31[3] = &v18[8 * v17];
      v25 = &v24[8 * a5];
      do
      {
        v26 = v7[2];
        *(_QWORD *)v24 = v26;
        if ((v26 & 7) != 0)
        {
          v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
          do
            v28 = __ldxr(v27);
          while (__stxr(v28 + 2, v27));
          if ((v28 & 1) == 0)
            *(_QWORD *)v24 &= 0xFFFFFFFFFFFFFFF8;
        }
        v24 += 8;
        v7 = (_QWORD *)*v7;
      }
      while (v24 != v25);
      v31[2] = v25;
      v5 = (_QWORD *)sub_20C0D81DC(a1, v31, v5);
      sub_20BF1EE98((uint64_t)v31);
    }
  }
  return v5;
}

void sub_20C82D77C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C82D79C(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD *result;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  result = a4;
  while (a2 != a3)
  {
    v5 = a2[2];
    *result = v5;
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 2, v6));
      if ((v7 & 1) == 0)
        *result &= 0xFFFFFFFFFFFFFFF8;
    }
    a2 = (_QWORD *)*a2;
    ++result;
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *sub_20C82D7EC(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C82D834();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType::~HdMaterialNodeSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *sub_20C82D834()
{
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType *)operator new(0x40uLL);
  pxrInternal__aapl__pxrReserved__::HdMaterialNodeSchemaTokens_StaticTokenType::HdMaterialNodeSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C82D860(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C82D874(_QWORD *a1, uint64_t a2)
{
  int8x8_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v13;
  char v14;

  v13 = 0;
  v14 = 0;
  sub_20C82D430((uint64_t)&v13, a2);
  v4 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v4)
    return 0;
  v5 = bswap64(0x9E3779B97F4A7C55 * v13);
  v6 = (uint8x8_t)vcnt_s8(v4);
  v6.i16[0] = vaddlv_u8(v6);
  v7 = v6.u32[0];
  if (v6.u32[0] > 1uLL)
  {
    v8 = v5;
    if (v5 >= *(_QWORD *)&v4)
      v8 = v5 % *(_QWORD *)&v4;
  }
  else
  {
    v8 = (*(_QWORD *)&v4 - 1) & v5;
  }
  v9 = *(_QWORD **)(*a1 + 8 * v8);
  if (!v9)
    return 0;
  v10 = (_QWORD *)*v9;
  if (*v9)
  {
    do
    {
      v11 = v10[1];
      if (v5 == v11)
      {
        if ((sub_20C826E38(v10 + 2, a2) & 1) != 0)
          return v10;
      }
      else
      {
        if (v7 > 1)
        {
          if (v11 >= *(_QWORD *)&v4)
            v11 %= *(_QWORD *)&v4;
        }
        else
        {
          v11 &= *(_QWORD *)&v4 - 1;
        }
        if (v11 != v8)
          return 0;
      }
      v10 = (_QWORD *)*v10;
    }
    while (v10);
  }
  return v10;
}

void sub_20C82D994(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C7FA9D0((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

uint64_t sub_20C82DA1C(uint64_t a1)
{
  sub_20C82DA58(a1);
  if (*(_DWORD *)(a1 + 68) >= 5u)
    free(*(void **)a1);
  return a1;
}

uint64_t sub_20C82DA58(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;

  v1 = (_QWORD *)result;
  if (*(_DWORD *)(result + 68) >= 5u)
    v1 = *(_QWORD **)result;
  v2 = *(unsigned int *)(result + 64);
  if ((_DWORD)v2)
  {
    v3 = &v1[2 * v2];
    do
    {
      v4 = v1[1];
      if ((v4 & 7) != 0)
      {
        v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stlxr(v6 - 2, v5));
      }
      if ((*v1 & 7) != 0)
      {
        v7 = (unsigned int *)(*v1 & 0xFFFFFFFFFFFFFFF8);
        do
          v8 = __ldxr(v7);
        while (__stlxr(v8 - 2, v7));
      }
      v1 += 2;
    }
    while (v1 != v3);
  }
  return result;
}

void sub_20C82DAC8(uint64_t a1, unsigned int a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = malloc(16 * a2);
  v5 = v4;
  v6 = (_QWORD *)a1;
  if (*(_DWORD *)(a1 + 68) >= 5u)
    v6 = *(_QWORD **)a1;
  v7 = *(unsigned int *)(a1 + 64);
  if ((_DWORD)v7)
  {
    v8 = &v6[2 * v7];
    v9 = v4;
    do
    {
      *v9 = *v6;
      *v6 = 0;
      v9[1] = v6[1];
      v6[1] = 0;
      v6 += 2;
      v9 += 2;
    }
    while (v6 != v8);
  }
  sub_20C82DA58(a1);
  if (*(_DWORD *)(a1 + 68) >= 5u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 68) = a2;
}

void sub_20C82DB6C(uint64_t a1, _QWORD *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *(_DWORD *)(a1 + 64);
  v4 = *(_DWORD *)(a1 + 68);
  if (v5 == v4)
  {
    sub_20C82DAC8(a1, v5 + (v5 >> 1) + 1);
    v4 = *(_DWORD *)(a1 + 68);
  }
  v6 = a1;
  if (v4 >= 5)
    v6 = *(_QWORD *)a1;
  v7 = *(unsigned int *)(a1 + 64);
  v8 = (_QWORD *)(v6 + 16 * v7);
  *v8 = *a2;
  *a2 = 0;
  v8[1] = a2[1];
  a2[1] = 0;
  *(_DWORD *)(a1 + 64) = v7 + 1;
}

void sub_20C82DBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *__p;
  uint64_t v36;
  uint64_t v37;
  void *v38[2];
  char v39;

  sub_20BDDC0E4(v38, "HD_BPRIM_ADDED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 0, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v0 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v0, "HD_BPRIM_ADDED", "Report when bprims are added");
  sub_20BDDC0E4(v38, "HD_BPRIM_REMOVED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 1, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v1 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v1 + 4, "HD_BPRIM_REMOVED", "Report when bprims are removed");
  sub_20BDDC0E4(v38, "HD_BUFFER_ARRAY_INFO");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 2, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v2 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v2 + 8, "HD_BUFFER_ARRAY_INFO", "Report detail info of HdBufferArrays");
  sub_20BDDC0E4(v38, "HD_BUFFER_ARRAY_RANGE_CLEANED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 3, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v3 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v3 + 12, "HD_BUFFER_ARRAY_RANGE_CLEANED", "Report when bufferArrayRange is cleaned");
  sub_20BDDC0E4(v38, "HD_CACHE_HITS");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 4, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v4 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v4 + 16, "HD_CACHE_HITS", "Report every cache hit");
  sub_20BDDC0E4(v38, "HD_CACHE_MISSES");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 5, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v5 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v5 + 20, "HD_CACHE_MISSES", "Report every cache miss");
  sub_20BDDC0E4(v38, "HD_COUNTER_CHANGED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 6, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v6 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v6 + 24, "HD_COUNTER_CHANGED", "Report values when counters change");
  sub_20BDDC0E4(v38, "HD_DIRTY_ALL_COLLECTIONS");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 7, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v7 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v7 + 28, "HD_DIRTY_ALL_COLLECTIONS", "Reports diagnostics when all collections are marked dirty");
  sub_20BDDC0E4(v38, "HD_DIRTY_LIST");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 8, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v8 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v8 + 32, "HD_DIRTY_LIST", "Reports dirty list state changes");
  sub_20BDDC0E4(v38, "HD_DISABLE_MULTITHREADED_RPRIM_SYNC");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 9, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v9 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v9 + 36, "HD_DISABLE_MULTITHREADED_RPRIM_SYNC", "Run RPrim sync on a single thread");
  sub_20BDDC0E4(v38, "HD_DRAWITEMS_CULLED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 10, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v10 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v10 + 40, "HD_DRAWITEMS_CULLED", "Report the number of draw items culled in each render pass");
  sub_20BDDC0E4(v38, "HD_ENGINE_PHASE_INFO");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 11, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v11 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v11 + 44, "HD_ENGINE_PHASE_INFO", "Report the execution phase of the Hydra engine");
  sub_20BDDC0E4(v38, "HD_EXT_COMPUTATION_ADDED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 12, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v12 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v12 + 48, "HD_EXT_COMPUTATION_ADDED", "Report when ExtComputations are added");
  sub_20BDDC0E4(v38, "HD_EXT_COMPUTATION_REMOVED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 13, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v13 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v13 + 52, "HD_EXT_COMPUTATION_REMOVED", "Report when ExtComputations are removed");
  sub_20BDDC0E4(v38, "HD_EXT_COMPUTATION_UPDATED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 14, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v14 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v14 + 56, "HD_EXT_COMPUTATION_UPDATED", "Report when ExtComputations are updated");
  sub_20BDDC0E4(v38, "HD_EXT_COMPUTATION_EXECUTION");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 15, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v15 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v15 + 60, "HD_EXT_COMPUTATION_EXECUTION", "Report when ExtComputations are executed");
  sub_20BDDC0E4(v38, "HD_FREEZE_CULL_FRUSTUM");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 16, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v16 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v16 + 64, "HD_FREEZE_CULL_FRUSTUM", "Freeze the frustum used for culling at it's current value");
  sub_20BDDC0E4(v38, "HD_INSTANCER_ADDED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 17, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v17 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v17 + 68, "HD_INSTANCER_ADDED", "Report when instancers are added");
  sub_20BDDC0E4(v38, "HD_INSTANCER_CLEANED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 18, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v18 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v18 + 72, "HD_INSTANCER_CLEANED", "Report when instancers are fully cleaned");
  sub_20BDDC0E4(v38, "HD_INSTANCER_REMOVED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 19, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v19 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v19 + 76, "HD_INSTANCER_REMOVED", "Report when instancers are removed");
  sub_20BDDC0E4(v38, "HD_INSTANCER_UPDATED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 20, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v20 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v20 + 80, "HD_INSTANCER_UPDATED", "Report when instancers are updated");
  sub_20BDDC0E4(v38, "HD_RENDER_SETTINGS");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 21, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v21 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v21 + 84, "HD_RENDER_SETTINGS", "Report render settings changes");
  sub_20BDDC0E4(v38, "HD_RPRIM_ADDED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 22, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v22 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v22 + 88, "HD_RPRIM_ADDED", "Report when rprims are added");
  sub_20BDDC0E4(v38, "HD_RPRIM_CLEANED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 23, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v23 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v23 + 92, "HD_RPRIM_CLEANED", "Report when rprims are fully cleaned");
  sub_20BDDC0E4(v38, "HD_RPRIM_REMOVED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 24, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v24 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v24 + 96, "HD_RPRIM_REMOVED", "Report when rprims are removed");
  sub_20BDDC0E4(v38, "HD_RPRIM_UPDATED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 25, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v25 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v25 + 100, "HD_RPRIM_UPDATED", "Report when rprims are updated");
  sub_20BDDC0E4(v38, "HD_SAFE_MODE");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 26, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v26 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v26 + 104, "HD_SAFE_MODE", "Enable additional security checks");
  sub_20BDDC0E4(v38, "HD_SELECTION_UPDATE");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 27, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v27 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v27 + 108, "HD_SELECTION_UPDATE", "Report when selection is updated");
  sub_20BDDC0E4(v38, "HD_SHARED_EXT_COMPUTATION_DATA");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 28, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v28 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v28 + 112, "HD_SHARED_EXT_COMPUTATION_DATA", "Report info related to deduplication of ext computation data buffers");
  sub_20BDDC0E4(v38, "HD_SPRIM_ADDED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 29, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v29 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v29 + 116, "HD_SPRIM_ADDED", "Report when sprims are added");
  sub_20BDDC0E4(v38, "HD_SPRIM_REMOVED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 30, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v30 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v30 + 120, "HD_SPRIM_REMOVED", "Report when sprims are removed");
  sub_20BDDC0E4(v38, "HD_SYNC_ALL");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 31, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v31 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v31 + 124, "HD_SYNC_ALL", "Report debugging info for the sync all algorithm.");
  sub_20BDDC0E4(v38, "HD_TASK_ADDED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 32, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v32 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v32 + 128, "HD_TASK_ADDED", "Report when tasks are added");
  sub_20BDDC0E4(v38, "HD_TASK_REMOVED");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 33, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v33 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v33 + 132, "HD_TASK_REMOVED", "Report when tasks are removed");
  sub_20BDDC0E4(v38, "HD_VARYING_STATE");
  __p = 0;
  v36 = 0;
  v37 = 0;
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550140, 34, (uint64_t)v38, (uint64_t)&__p);
  if (SHIBYTE(v37) < 0)
    operator delete(__p);
  if (v39 < 0)
    operator delete(v38[0]);
  v34 = sub_20C7F1350();
  pxrInternal__aapl__pxrReserved__::TfDebug::_RegisterDebugSymbolImpl(v34 + 136, "HD_VARYING_STATE", "Reports state tracking of varying state");
}

void sub_20C82EAC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType::~HdDependenciesSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *this)
{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType::HdDependenciesSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *this)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  _QWORD *v6;
  _QWORD *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "__dependencies", 0);
  v3 = *v2;
  if ((*v2 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v3 &= 0xFFFFFFFFFFFFFFF8;
  }
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  v6 = operator new(8uLL);
  *((_QWORD *)this + 1) = v6;
  *((_QWORD *)this + 2) = v6;
  *v6 = v3;
  v7 = v6 + 1;
  *((_QWORD *)this + 3) = v6 + 1;
  if ((v3 & 7) != 0)
  {
    v8 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *v6 &= 0xFFFFFFFFFFFFFFF8;
    *((_QWORD *)this + 2) = v7;
    do
      v10 = __ldxr(v8);
    while (__stlxr(v10 - 2, v8));
  }
  else
  {
    *((_QWORD *)this + 2) = v7;
  }
  return this;
}

void sub_20C82ED04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v13;
  unsigned int v14;

  v11 = v10;
  sub_20BEEB2B8(&a9);
  if ((v11 & 7) != 0)
  {
    v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  sub_20C96B3E4(v9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetEntries(pxrInternal__aapl__pxrReserved__::HdDependenciesSchema *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void ***v5;
  void ***i;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __n128 v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  __int128 v32;
  unint64_t v33;
  __int128 v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  void ***v37;
  void ***v38;

  *(_QWORD *)(a2 + 192) = 0x800000000;
  v4 = *(_QWORD *)this;
  if (v4)
  {
    (*(void (**)(void ****__return_ptr))(*(_QWORD *)v4 + 16))(&v37);
    v5 = v37;
    for (i = v38; v5 != i; ++v5)
    {
      (*(void (**)(unint64_t *__return_ptr, _QWORD, void ***))(**(_QWORD **)this + 24))(&v33, *(_QWORD *)this, v5);
      sub_20C7E0B14((uint64_t)&v33, &v35);
      v7 = (std::__shared_weak_count *)v34;
      if ((_QWORD)v34)
      {
        v8 = (unint64_t *)(v34 + 8);
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 - 1, v8));
        if (!v9)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      if (v35)
      {
        v30 = v35;
        v31 = v36;
        if (v36)
        {
          p_shared_owners = (unint64_t *)&v36->__shared_owners_;
          do
            v11 = __ldxr(p_shared_owners);
          while (__stxr(v11 + 1, p_shared_owners));
        }
        sub_20C7E0E2C(&v32, &v30);
        v12 = (unint64_t)*v5;
        v33 = v12;
        if ((v12 & 7) != 0)
        {
          v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 2, v13));
          if ((v14 & 1) == 0)
            v33 &= 0xFFFFFFFFFFFFFFF8;
        }
        v34 = v32;
        v32 = 0uLL;
        v15 = sub_20C82F2FC(a2, (uint64_t)&v33);
        v16 = (std::__shared_weak_count *)*((_QWORD *)&v34 + 1);
        if (*((_QWORD *)&v34 + 1))
        {
          v17 = (unint64_t *)(*((_QWORD *)&v34 + 1) + 8);
          do
            v18 = __ldaxr(v17);
          while (__stlxr(v18 - 1, v17));
          if (!v18)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v16->__on_zero_shared)(v16, v15);
            std::__shared_weak_count::__release_weak(v16);
          }
        }
        if ((v33 & 7) != 0)
        {
          v19 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
          do
            v20 = __ldxr(v19);
          while (__stlxr(v20 - 2, v19));
        }
        v21 = (std::__shared_weak_count *)*((_QWORD *)&v32 + 1);
        if (*((_QWORD *)&v32 + 1))
        {
          v22 = (unint64_t *)(*((_QWORD *)&v32 + 1) + 8);
          do
            v23 = __ldaxr(v22);
          while (__stlxr(v23 - 1, v22));
          if (!v23)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v21->__on_zero_shared)(v21, v15);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        v24 = v31;
        if (v31)
        {
          v25 = (unint64_t *)&v31->__shared_owners_;
          do
            v26 = __ldaxr(v25);
          while (__stlxr(v26 - 1, v25));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *, __n128))v24->__on_zero_shared)(v24, v15);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
      }
      v27 = v36;
      if (v36)
      {
        v28 = (unint64_t *)&v36->__shared_owners_;
        do
          v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
    }
    v33 = (unint64_t)&v37;
    sub_20BEEB2B8((void ***)&v33);
  }
}

void sub_20C82EFB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C82F250(v1);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::BuildRetained@<D0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  double result;
  __int128 v6;

  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(a1, a2, a3, &v6);
  result = *(double *)&v6;
  *a4 = v6;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *p_shared_owners;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *a1;
  if (!*a1)
  {
    v14 = 0;
    v15 = 0;
    sub_20C7E0E2C(a2, &v14);
    v8 = v15;
    if (!v15)
      return;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    goto LABEL_16;
  }
  if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens))
    sub_20C82F428(&pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v12, v3);
  sub_20C7E0B14((uint64_t)&v12, &v14);
  sub_20C7E0E2C(a2, &v14);
  v5 = v15;
  if (v15)
  {
    v6 = (unint64_t *)&v15->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
LABEL_16:
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

unint64_t pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdDependenciesSchema *this)
{
  unint64_t result;

  result = atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens);
  if (!result)
    return sub_20C82F428(&pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdDependenciesSchema *this)
{
  unsigned __int8 v1;
  const pxrInternal__aapl__pxrReserved__::TfToken *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E0F0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E0F0))
  {
    v3 = (const pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens);
    if (!v3)
      v3 = (const pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C82F428(&pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E0B8, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E0B8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E0F0);
  }
  return &unk_25498E0B8;
}

void sub_20C82F238(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E0F0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C82F250(uint64_t a1)
{
  sub_20C82F28C(a1);
  if (*(_DWORD *)(a1 + 196) >= 9u)
    free(*(void **)a1);
  return a1;
}

void sub_20C82F28C(uint64_t a1)
{
  _QWORD *v1;
  unsigned int v2;
  _QWORD *v3;
  unsigned int *v4;
  unsigned int v5;

  v1 = (_QWORD *)a1;
  if (*(_DWORD *)(a1 + 196) >= 9u)
    v1 = *(_QWORD **)a1;
  v2 = *(_DWORD *)(a1 + 192);
  if (v2)
  {
    v3 = &v1[3 * v2];
    do
    {
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v1 + 1));
      if ((*v1 & 7) != 0)
      {
        v4 = (unsigned int *)(*v1 & 0xFFFFFFFFFFFFFFF8);
        do
          v5 = __ldxr(v4);
        while (__stlxr(v5 - 2, v4));
      }
      v1 += 3;
    }
    while (v1 != v3);
  }
}

__n128 sub_20C82F2FC(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v4 = *(_DWORD *)(a1 + 192);
  v5 = *(_DWORD *)(a1 + 196);
  if (v4 == v5)
  {
    sub_20C82F37C(a1, v4 + (v4 >> 1) + 1);
    v5 = *(_DWORD *)(a1 + 196);
  }
  v6 = a1;
  if (v5 >= 9)
    v6 = *(_QWORD *)a1;
  v7 = v6 + 24 * *(unsigned int *)(a1 + 192);
  *(_QWORD *)v7 = *(_QWORD *)a2;
  *(_QWORD *)a2 = 0;
  result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v7 + 8) = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  ++*(_DWORD *)(a1 + 192);
  return result;
}

void sub_20C82F37C(uint64_t a1, unsigned int a2)
{
  char *v4;
  void *v5;
  char *v6;
  int v7;
  char *v8;
  char *v9;

  v4 = (char *)malloc(24 * a2);
  v5 = v4;
  v6 = (char *)a1;
  if (*(_DWORD *)(a1 + 196) >= 9u)
    v6 = *(char **)a1;
  v7 = *(_DWORD *)(a1 + 192);
  if (v7)
  {
    v8 = &v6[24 * v7];
    v9 = v4;
    do
    {
      *(_QWORD *)v9 = *(_QWORD *)v6;
      *(_QWORD *)v6 = 0;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v6 + 8);
      *((_QWORD *)v6 + 1) = 0;
      *((_QWORD *)v6 + 2) = 0;
      v6 += 24;
      v9 += 24;
    }
    while (v6 != v8);
  }
  sub_20C82F28C(a1);
  if (*(_DWORD *)(a1 + 196) >= 9u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v5;
  *(_DWORD *)(a1 + 196) = a2;
}

unint64_t sub_20C82F428(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *v2;
  pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *v3;
  unsigned int *v5;
  unsigned int v6;
  void **v8;

  v2 = sub_20C82F4B0();
  v3 = v2;
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)v2, a1))
      return (unint64_t)v3;
  }
  __clrex();
  if (v2)
  {
    v8 = (void **)((char *)v2 + 8);
    sub_20BEEB2B8(&v8);
    if ((*(_QWORD *)v3 & 7) != 0)
    {
      v5 = (unsigned int *)(*(_QWORD *)v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stlxr(v6 - 2, v5));
    }
    operator delete(v3);
  }
  return atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *sub_20C82F4B0()
{
  pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdDependenciesSchemaTokens_StaticTokenType::HdDependenciesSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C82F4DC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::HdDependencyForwardingSceneIndex(pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *a1, uint64_t *a2)
{
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *v3;
  __int16 v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;

  v3 = pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::HdSingleInputFilteringSceneIndexBase(a1, a2);
  *(_QWORD *)v3 = off_24C550160;
  sub_20C831FD0((uint64_t)v3 + 144, 8uLL, &v5);
  sub_20C832124((uint64_t)a1 + 704, 8uLL, &v6);
  sub_20C832278((uint64_t)a1 + 1264, 8uLL, &v7);
  sub_20C832278((uint64_t)a1 + 1824, 8uLL, &v8);
  return a1;
}

void sub_20C82F58C(_Unwind_Exception *a1, void *a2)
{
  unsigned int **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  void *v9;
  const void *v10;

  v6 = v5;
  sub_20C831790(v6, a2);
  sub_20C831898(v4, v8);
  sub_20C8319DC(v3, v9);
  sub_20C82F5D4(v2, v10);
  _Unwind_Resume(a1);
}

void sub_20C82F5D4(unsigned int **a1, const void *a2)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v3;

  *a1 = (unsigned int *)off_24C550568;
  v3 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(a1 + 14);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::~HdSceneIndexObserver(a1 + 15, a2);
  sub_20C831DE4(v3);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::GetPrim@<X0>(uint64_t *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *v5;
  BOOL v6;
  uint64_t v7;
  _QWORD v8[2];

  v3 = this + 14;
  if (this[14])
  {
    v5 = (pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *)this;
    sub_20C8323CC((uint64_t)(this + 88), (unsigned int *)a2, v8);
    if (v8[0])
      v6 = 0;
    else
      v6 = v8[1] == (_QWORD)v5 + 720;
    if (v6)
      pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_UpdateDependencies(v5, a2);
    v7 = sub_20C82FBFC(v3);
    return (uint64_t *)(*(uint64_t (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::SdfPath *))(*(_QWORD *)v7 + 16))(v7, a2);
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return this;
}

void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_UpdateDependencies(pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  char *v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  char *v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char **v27;
  char **v28;
  char *v29;
  char *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  int v39;
  int v40;
  uint64_t v41;
  std::__shared_weak_count *v42;
  __int128 v43;
  _QWORD v44[6];
  int v45;
  unsigned int v46;
  int v47[12];
  int v48;
  unsigned int v49;
  char *v50;
  std::__shared_weak_count *v51;
  int v52;
  unsigned int v53;
  uint64_t *v54;
  __int128 v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v4 = *((_QWORD *)this + 14);
  v3 = (uint64_t *)((char *)this + 112);
  if (!v4)
    return;
  v6 = sub_20C82FBFC(v3);
  (*(void (**)(uint64_t **__return_ptr, uint64_t, const pxrInternal__aapl__pxrReserved__::SdfPath *))(*(_QWORD *)v6 + 16))(&v54, v6, a2);
  v7 = v55;
  v43 = v55;
  v55 = 0uLL;
  if ((v54 & 7) == 0)
  {
    if (!v7)
      goto LABEL_61;
LABEL_8:
    pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetFromParent((uint64_t *)&v43, &v41);
    if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)&v41))
    {
      v10 = sub_20C830B60((uint64_t)this + 704, (unsigned int *)a2);
      *(_BYTE *)(v10 + 560) = 0;
      v11 = (uint64_t *)&v54;
      pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetEntries((pxrInternal__aapl__pxrReserved__::HdDependenciesSchema *)&v41, (uint64_t)&v54);
      if (v57 >= 9)
        v11 = v54;
      if (v56)
      {
        v12 = &v11[3 * v56];
        v13 = (char *)this + 144;
        do
        {
          if (pxrInternal__aapl__pxrReserved__::HdSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdSchema *)(v11 + 1)))
          {
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v39);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v40);
            pxrInternal__aapl__pxrReserved__::HdDependencySchema::GetDependedOnPrimPath((pxrInternal__aapl__pxrReserved__::HdDependencySchema *)(v11 + 1), &v50);
            if (v50)
            {
              (*(void (**)(int *__return_ptr, float))(*(_QWORD *)v50 + 32))(v47, 0.0);
              sub_20BFD3EBC(&v39, v47);
              sub_20BFD3F10(&v40, &v47[1]);
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47[1]);
              sub_20BFD265C(v47);
            }
            v14 = v51;
            if (v51)
            {
              p_shared_owners = (unint64_t *)&v51->__shared_owners_;
              do
                v16 = __ldaxr(p_shared_owners);
              while (__stlxr(v16 - 1, p_shared_owners));
              if (!v16)
              {
                ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
                std::__shared_weak_count::__release_weak(v14);
              }
            }
            pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&v50);
            pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v47);
            pxrInternal__aapl__pxrReserved__::HdDependencySchema::GetDependedOnDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDependencySchema *)(v11 + 1), &v37);
            if (v37)
            {
              (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v37 + 32))(v44, 0.0);
              if (v46 >= 7)
                v17 = (char *)v44[0];
              else
                v17 = (char *)v44;
              sub_20C7F6360((uint64_t)&v50, v17, &v17[8 * v45]);
              sub_20C7E0EB0((uint64_t)v44);
            }
            v18 = v38;
            if (v38)
            {
              v19 = (unint64_t *)&v38->__shared_owners_;
              do
                v20 = __ldaxr(v19);
              while (__stlxr(v20 - 1, v19));
              if (!v20)
              {
                ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
                std::__shared_weak_count::__release_weak(v18);
              }
            }
            pxrInternal__aapl__pxrReserved__::HdDependencySchema::GetAffectedDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDependencySchema *)(v11 + 1), &v37);
            if (v37)
            {
              (*(void (**)(_QWORD *__return_ptr, float))(*(_QWORD *)v37 + 32))(v44, 0.0);
              if (v46 >= 7)
                v21 = (char *)v44[0];
              else
                v21 = (char *)v44;
              sub_20C7F6360((uint64_t)v47, v21, &v21[8 * v45]);
              sub_20C7E0EB0((uint64_t)v44);
            }
            v22 = v38;
            if (v38)
            {
              v23 = (unint64_t *)&v38->__shared_owners_;
              do
                v24 = __ldaxr(v23);
              while (__stlxr(v24 - 1, v23));
              if (!v24)
              {
                ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
                std::__shared_weak_count::__release_weak(v22);
              }
            }
            if (!pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v39))
            {
              sub_20C01A074(&v39, a2);
              sub_20C01A0C8(&v40, (_DWORD *)a2 + 1);
            }
            sub_20C832A34(v10, (unsigned int *)&v39, 0, (uint64_t)v44);
            v25 = sub_20C830C90((uint64_t)v13, (unsigned int *)&v39);
            v26 = sub_20C830DB0(v25, (unsigned int *)a2);
            v27 = (char **)sub_20C830EE0(v26, v11);
            v28 = v27;
            if (v27 != &v50)
            {
              if (v53 >= 7)
                v29 = v50;
              else
                v29 = (char *)&v50;
              sub_20C7F6360((uint64_t)v27, v29, &v29[8 * v52]);
            }
            if (v28 + 7 != (char **)v47)
            {
              if (v49 >= 7)
                v30 = *(char **)v47;
              else
                v30 = (char *)v47;
              sub_20C7F6360((uint64_t)(v28 + 7), v30, &v30[8 * v48]);
            }
            *(_BYTE *)(v26 + 560) = 0;
            sub_20C7E0EB0((uint64_t)v47);
            sub_20C7E0EB0((uint64_t)&v50);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v40);
            sub_20BFD265C(&v39);
          }
          v11 += 3;
        }
        while (v11 != v12);
      }
      sub_20C82F250((uint64_t)&v54);
    }
    v31 = v42;
    if (v42)
    {
      v32 = (unint64_t *)&v42->__shared_owners_;
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
    goto LABEL_61;
  }
  v8 = (unsigned int *)((unint64_t)v54 & 0xFFFFFFFFFFFFFFF8);
  do
    v9 = __ldxr(v8);
  while (__stlxr(v9 - 2, v8));
  if ((_QWORD)v43)
    goto LABEL_8;
LABEL_61:
  v34 = (std::__shared_weak_count *)*((_QWORD *)&v43 + 1);
  if (*((_QWORD *)&v43 + 1))
  {
    v35 = (unint64_t *)(*((_QWORD *)&v43 + 1) + 8);
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_20C82FB20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  uint64_t v8;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C82FBFC(uint64_t *a1)
{
  uint64_t result;
  char *v2;
  _QWORD v3[4];
  char v4;

  result = *a1;
  if (!result)
  {
    v2 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", 47);
    v3[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/refPtr.h", (uint64_t)v2, 0x2Fu);
    v3[1] = "operator->";
    v3[2] = 953;
    v3[3] = "T *pxrInternal__aapl__pxrReserved__::TfRefPtr<pxrInternal__aapl__pxrReserved__::HdSceneIndexBase>::operator-"
            ">() const [U = pxrInternal__aapl__pxrReserved__::HdSceneIndexBase]";
    v4 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v3, (pxrInternal__aapl__pxrReserved__ *)(0x800000020CB168D0 & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::GetChildPrimPaths@<X0>(pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *result;
  uint64_t v4;
  uint64_t v6;

  v4 = *((_QWORD *)this + 14);
  result = (uint64_t *)((char *)this + 112);
  if (v4)
  {
    v6 = sub_20C82FBFC(result);
    return (uint64_t *)(*(uint64_t (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::SdfPath *))(*(_QWORD *)v6 + 24))(v6, a2);
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimsAdded(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsAdded(a1, a3);
}

void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimsRemoved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *v6;
  uint64_t v7;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v8;
  uint64_t v9;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  BOOL v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t v15;
  void *v16;
  _BYTE v17[24];
  _QWORD v18[2];
  __int128 v19;
  __int128 v20;
  void *v21[928];
  uint64_t v22;
  uint64_t v23;

  v3 = MEMORY[0x24BDAC7A8](a1, a2, a3);
  v5 = v4;
  v6 = (pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *)v3;
  v23 = *MEMORY[0x24BDAC8D0];
  v19 = 0u;
  v20 = 0u;
  v22 = 0x1000000000;
  v7 = *(unsigned int *)(v4 + 128);
  if (*(_DWORD *)(v4 + 132) >= 0x11u)
    v8 = *(const pxrInternal__aapl__pxrReserved__::SdfPath **)v4;
  else
    v8 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v4;
  if ((_DWORD)v7)
  {
    v9 = v3 + 160;
    v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v8 + 8 * v7);
    do
    {
      pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_ClearDependencies(v6, v8);
      sub_20C832700((uint64_t)v6 + 144, (unsigned int *)v8, v18);
      if (v18[0])
        v11 = 0;
      else
        v11 = v18[1] == v9;
      if (!v11)
      {
        sub_20C832A34((uint64_t)v6 + 1264, (unsigned int *)v8, 0, (uint64_t)v17);
        v12 = *(uint64_t **)(v18[0] + 48);
        if (v12)
        {
          while ((v12[73] & 1) == 0)
          {
            v12 = (uint64_t *)*v12;
            if (!v12)
              goto LABEL_13;
          }
LABEL_15:
          v13 = v12[1];
          *((_BYTE *)v12 + 576) = 1;
          if (v13 != *(_QWORD *)v8)
          {
            v14 = (uint64_t **)v12[6];
            if (v14)
            {
              while (((_BYTE)v14[16] & 1) == 0)
              {
                v14 = (uint64_t **)*v14;
                if (!v14)
                  goto LABEL_19;
              }
              while (1)
              {
                pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimDirtied(v6, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v12 + 1), (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v14 + 9), (uint64_t *)&v19, v21);
                do
                {
                  v14 = (uint64_t **)*v14;
                  if (!v14)
                    goto LABEL_19;
                }
                while (((_BYTE)v14[16] & 1) == 0);
              }
            }
          }
LABEL_19:
          while (1)
          {
            v12 = (uint64_t *)*v12;
            if (!v12)
              break;
            if ((v12[73] & 1) != 0)
              goto LABEL_15;
          }
        }
      }
LABEL_13:
      v8 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v8 + 8);
    }
    while (v8 != v10);
  }
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsRemoved((uint64_t *)v6, v5);
  if ((_DWORD)v22)
    pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsDirtied((uint64_t *)v6, (uint64_t)v21);
  sub_20C7F17EC(v21);
  v15 = *((_QWORD *)&v20 + 1);
  *((_QWORD *)&v20 + 1) = 0;
  if (v15)
  {
    v16 = (void *)sub_20C831E3C(v15);
    operator delete(v16);
  }
  v21[0] = &v19;
  sub_20C831F18((void ***)v21);
}

void sub_20C82FECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_20C7F17EC((void **)va1);
  sub_20C830348((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_ClearDependencies(pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v4;
  BOOL v5;
  unsigned int *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[3];

  sub_20C8323CC((uint64_t)this + 704, (unsigned int *)a2, v15);
  v4 = v15[0];
  if (v15[0])
    v5 = 0;
  else
    v5 = v15[1] == (_QWORD)this + 720;
  if (!v5)
  {
    *(_BYTE *)(v15[0] + 576) = 1;
    if (!*(_QWORD *)(v4 + 40))
      sub_20C832A34((uint64_t)this + 1824, (unsigned int *)a2, 0, (uint64_t)v15);
    v6 = *(unsigned int **)(v4 + 48);
    if (v6)
    {
      while ((v6[4] & 1) == 0)
      {
        v6 = *(unsigned int **)v6;
        if (!v6)
          return;
      }
      v7 = (char *)this + 144;
      v8 = (char *)this + 160;
      v9 = (char *)this + 1264;
LABEL_12:
      sub_20C832700((uint64_t)v7, v6 + 2, v14);
      v10 = v14[0];
      if (v14[0])
        v11 = 0;
      else
        v11 = v14[1] == (_QWORD)v8;
      if (!v11)
      {
        sub_20C83401C(v14[0] + 16, (unsigned int *)a2, v13);
        if (v13[0])
          v12 = 0;
        else
          v12 = v13[1] == v10 + 32;
        if (!v12)
        {
          *(_BYTE *)(v13[0] + 576) = 1;
          sub_20C832A34((uint64_t)v9, v6 + 2, 0, (uint64_t)v15);
        }
      }
      while (1)
      {
        v6 = *(unsigned int **)v6;
        if (!v6)
          break;
        if ((v6[4] & 1) != 0)
          goto LABEL_12;
      }
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimDirtied(pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a3, uint64_t *a4, _DWORD *a5)
{
  _QWORD *v10;
  _QWORD *v11;
  pxrInternal__aapl__pxrReserved__::HdDependenciesSchema *v12;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  uint64_t *v14;
  uint64_t *v15;
  char *v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if (!a4)
  {
    v16 = "hd/dependencyForwardingSceneIndex.cpp";
    v17 = "_PrimDirtied";
    v18 = 162;
    v19 = "void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimDirtied(const SdfPath &, const H"
          "dDataSourceLocator &, _VisitedNodeSet *, HdSceneIndexObserver::DirtiedPrimEntries *)";
    v20 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v16, "visited", 0) & 1) == 0)
      goto LABEL_33;
  }
  sub_20BFD6E54(&v16, a2);
  sub_20BFD6EA4((_DWORD *)&v16 + 1, (_DWORD *)a2 + 1);
  sub_20C7F1078(&v17, (uint64_t)a3);
  v10 = sub_20C8307E8(a4, (unsigned int *)&v16);
  v11 = (_QWORD *)a4[1];
  if (v11 == v10)
    sub_20C83086C(a4, (unsigned int *)&v16);
  sub_20C7E0EB0((uint64_t)&v17);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
  sub_20BFD265C(&v16);
  if (v11 == v10)
  {
LABEL_33:
    v12 = (pxrInternal__aapl__pxrReserved__::HdDependenciesSchema *)sub_20C830A70(a5, a2, a3);
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDependenciesSchema::GetDefaultLocator(v12);
    if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(a3, DefaultLocator))
    {
      if (a4
        || (v16 = "hd/dependencyForwardingSceneIndex.cpp",
            v17 = "_PrimDirtied",
            v18 = 178,
            v19 = "void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimDirtied(const SdfPath &,"
                  " const HdDataSourceLocator &, _VisitedNodeSet *, HdSceneIndexObserver::DirtiedPrimEntries *)",
            v20 = 0,
            (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v16, "visited", 0) & 1) != 0))
      {
        sub_20BFD6E54(&v16, a2);
        sub_20BFD6EA4((_DWORD *)&v16 + 1, (_DWORD *)a2 + 1);
        sub_20C7F1078(&v17, (uint64_t)DefaultLocator);
        if ((_QWORD *)a4[1] == sub_20C8307E8(a4, (unsigned int *)&v16))
        {
          sub_20C83086C(a4, (unsigned int *)&v16);
          pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_ClearDependencies(a1, a2);
          pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_UpdateDependencies(a1, a2);
        }
        sub_20C7E0EB0((uint64_t)&v17);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
        sub_20BFD265C(&v16);
      }
    }
    sub_20C832700((uint64_t)a1 + 144, (unsigned int *)a2, &v16);
    if (v16 || v17 != (char *)a1 + 160)
    {
      v14 = (uint64_t *)*((_QWORD *)v16 + 6);
      if (v14)
      {
        while ((v14[73] & 1) == 0)
        {
          v14 = (uint64_t *)*v14;
          if (!v14)
            return;
        }
LABEL_16:
        v15 = (uint64_t *)v14[6];
        if (!v15)
          goto LABEL_19;
        while ((v15[16] & 1) == 0)
        {
          v15 = (uint64_t *)*v15;
          if (!v15)
            goto LABEL_19;
        }
LABEL_22:
        if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(v15 + 2), a3))
        {
          pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimDirtied(a1, v14 + 1, v15 + 9, a4, a5);
        }
        while (1)
        {
          v15 = (uint64_t *)*v15;
          if (!v15)
            break;
          if ((v15[16] & 1) != 0)
            goto LABEL_22;
        }
LABEL_19:
        while (1)
        {
          v14 = (uint64_t *)*v14;
          if (!v14)
            break;
          if ((v14[73] & 1) != 0)
            goto LABEL_16;
        }
      }
    }
  }
}

void sub_20C8302F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C830348(uint64_t a1)
{
  void **v3;

  sub_20C831E10((uint64_t *)(a1 + 24), 0);
  v3 = (void **)a1;
  sub_20C831F18(&v3);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimsDirtied(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void **v5;
  pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *v6;
  _DWORD *v7;
  int v8;
  _DWORD *v9;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  void *v18[928];
  uint64_t v19;
  uint64_t v20;

  v3 = MEMORY[0x24BDAC7A8](a1, a2, a3);
  v5 = (void **)v4;
  v6 = (pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex *)v3;
  v20 = *MEMORY[0x24BDAC8D0];
  v16 = 0u;
  v17 = 0u;
  v19 = 0x1000000000;
  if (*(_DWORD *)(v4 + 7428) >= 0x11u)
    v7 = *(_DWORD **)v4;
  else
    v7 = (_DWORD *)v4;
  v8 = *(_DWORD *)(v4 + 7424);
  if (v8)
  {
    v9 = &v7[116 * v8];
    do
    {
      v10 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(v7 + 2);
      v11 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)(v7 + 2));
      while (v10 != (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v11)
      {
        pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::_PrimDirtied(v6, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v7, v10, (uint64_t *)&v16, v18);
        v10 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v10 + 56);
      }
      v7 += 116;
    }
    while (v7 != v9);
    if ((_DWORD)v19)
    {
      if (HIDWORD(v19) >= 0x11)
        v12 = (int *)v18[0];
      else
        v12 = (int *)v18;
      if (*((_DWORD *)v5 + 1857) >= 0x11u)
        v13 = (uint64_t)*v5;
      else
        v13 = (uint64_t)v5;
      sub_20C830534(v18, v12, v13, v13 + 464 * *((unsigned int *)v5 + 1856));
      v5 = v18;
    }
  }
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsDirtied((uint64_t *)v6, (uint64_t)v5);
  sub_20C7F17EC(v18);
  v14 = *((_QWORD *)&v17 + 1);
  *((_QWORD *)&v17 + 1) = 0;
  if (v14)
  {
    v15 = (void *)sub_20C831E3C(v14);
    operator delete(v15);
  }
  v18[0] = &v16;
  sub_20C831F18((void ***)v18);
}

void sub_20C83050C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_20C7F17EC(&a13);
  sub_20C830348((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C830534(_DWORD *a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int *v6;
  unsigned int v8;
  _DWORD *v9;
  int v10;
  int *v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  char *v16;
  unsigned int v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;

  v5 = a3;
  v6 = a2;
  v8 = a1[1857];
  v9 = a1;
  if (v8 >= 0x11)
    v9 = *(_DWORD **)a1;
  v10 = a1[1856];
  v11 = &v9[116 * v10];
  v12 = 0x34F72C234F72C235 * ((a4 - a3) >> 4);
  v13 = v10 + v12;
  v14 = v8 + (v8 >> 1);
  if (v14 + 1 > v10 + (int)v12)
    v15 = v14 + 1;
  else
    v15 = v10 + v12;
  if (v11 == a2)
  {
    if (v13 > v8)
    {
      sub_20C832EFC(a1, v15);
      v8 = a1[1857];
    }
    v22 = a1;
    if (v8 < 0x11)
      goto LABEL_21;
LABEL_20:
    v22 = *(_DWORD **)a1;
LABEL_21:
    sub_20C7F16D8(v5, a4, (uint64_t)&v22[116 * a1[1856]]);
    goto LABEL_22;
  }
  if (v13 <= v8)
  {
    v23 = a1;
    if (v8 >= 0x11)
      v23 = *(_DWORD **)a1;
    v24 = 0x34F72C234F72C235 * (((char *)&v23[116 * v10] - (char *)a2) >> 4);
    if (v24 >= v12)
      v25 = 0x34F72C234F72C235 * ((a4 - a3) >> 4);
    else
      v25 = v24;
    v26 = (uint64_t)&a2[116 * (v24 - v25)];
    v27 = a1;
    if (v8 >= 0x11)
      v27 = *(_DWORD **)a1;
    v28 = (uint64_t)&v27[116 * v10];
    v29 = v28 + 464 * (v12 - v25);
    sub_20C832F80(v26, v28, v29);
    sub_20C8330F0((uint64_t)&v32, (uint64_t)v6, v26, v29);
    if (v25 >= 1)
    {
      do
      {
        sub_20C01A074(v6, (_DWORD *)v5);
        sub_20C01A0C8(v6 + 1, (_DWORD *)(v5 + 4));
        if (v6 != (int *)v5)
        {
          if (*(_DWORD *)(v5 + 460) >= 9u)
            v30 = *(_QWORD *)(v5 + 8);
          else
            v30 = v5 + 8;
          sub_20C82877C((uint64_t)(v6 + 2), v30, v30 + 56 * *(unsigned int *)(v5 + 456));
        }
        v5 += 464;
        v6 += 116;
        --v25;
      }
      while (v25);
    }
    v22 = a1;
    if (a1[1857] < 0x11u)
      goto LABEL_21;
    goto LABEL_20;
  }
  v16 = (char *)a1;
  if (v8 >= 0x11)
    v16 = *(char **)a1;
  v17 = 1332920885 * ((unint64_t)((char *)a2 - v16) >> 4);
  v18 = malloc(464 * v15);
  v19 = (uint64_t)v18 + 464 * v17;
  v20 = (uint64_t)a1;
  if (v8 >= 0x11)
    v20 = *(_QWORD *)a1;
  sub_20C832F80(v20, (uint64_t)v6, (uint64_t)v18);
  sub_20C7F16D8(v5, a4, v19);
  v21 = a1;
  if (a1[1857] >= 0x11u)
    v21 = *(_DWORD **)a1;
  sub_20C832F80((uint64_t)v6, (uint64_t)&v21[116 * a1[1856]], v19 + 464 * v12);
  sub_20C7F1828(a1);
  if (a1[1857] >= 0x11u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v18;
  a1[1857] = v15;
LABEL_22:
  a1[1856] += v12;
}

_QWORD *sub_20C8307E8(_QWORD *a1, unsigned int *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = (_QWORD *)a1[3];
  if (v4)
  {
    v5 = sub_20C8331D8(v4, a2);
    if (v5)
      return (_QWORD *)(*a1 + (v5[10] << 6));
    else
      return (_QWORD *)a1[1];
  }
  else
  {
    v7 = (_QWORD *)*a1;
    v6 = (_QWORD *)a1[1];
    while (v7 != v6)
    {
      if ((sub_20C8331A0((uint64_t)a1, v7, a2) & 1) != 0)
        return v7;
      v7 += 8;
    }
  }
  return v6;
}

uint64_t sub_20C83086C(uint64_t *a1, unsigned int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  _QWORD v17[9];

  v17[8] = *MEMORY[0x24BDAC8D0];
  v4 = a1[3];
  if (v4)
  {
    v11 = (a1[1] - *a1) >> 6;
    sub_20C833804((uint64_t)&v12, a2, &v11);
    sub_20C83387C((uint64_t)&v15, (uint64_t)&v12);
    v5 = sub_20C833430(v4, &v15, (uint64_t)&v15);
    v7 = v6;
    sub_20C7E0EB0((uint64_t)v17);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    sub_20BFD265C(&v15);
    sub_20C7E0EB0((uint64_t)&v14);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_20BFD265C(&v12);
    if (!v7)
      return *a1 + (v5[10] << 6);
    v8 = (_QWORD *)a1[1];
  }
  else
  {
    v8 = sub_20C8307E8(a1, a2);
    if ((_QWORD *)a1[1] != v8)
      return (uint64_t)v8;
  }
  if ((unint64_t)v8 >= a1[2])
  {
    v9 = sub_20C8338F0(a1, a2);
  }
  else
  {
    sub_20C8339DC((uint64_t)(a1 + 2), v8, a2);
    v9 = (uint64_t)(v8 + 8);
    a1[1] = (uint64_t)(v8 + 8);
  }
  a1[1] = v9;
  sub_20C833348(a1);
  return a1[1] - 64;
}

void sub_20C8309F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v19 + 8) = v20;
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20C830A3C(_DWORD *a1)
{
  sub_20C7E0EB0((uint64_t)(a1 + 2));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

uint64_t sub_20C830A70(_DWORD *a1, _DWORD *a2, pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a3)
{
  unsigned int v6;
  unsigned int v7;
  _DWORD *v8;
  int v9;
  uint64_t result;
  _QWORD v11[58];

  v11[57] = *MEMORY[0x24BDAC8D0];
  v6 = a1[1856];
  v7 = a1[1857];
  if (v6 == v7)
  {
    sub_20C832EFC(a1, v6 + (v6 >> 1) + 1);
    v7 = a1[1857];
  }
  v8 = a1;
  if (v7 >= 0x11)
    v8 = *(_DWORD **)a1;
  v9 = a1[1856];
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::HdDataSourceLocatorSet((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)v11, a3);
  sub_20C7F0F04(&v8[116 * v9], a2, (uint64_t)v11);
  result = sub_20C7F1148((uint64_t)v11);
  ++a1[1856];
  return result;
}

void sub_20C830B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C7F1148((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C830B60(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  BOOL v5;
  void *v6;
  void *v7;
  void *v8;
  _BYTE v10[568];
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;

  sub_20C8323CC(a1, a2, &v18);
  v4 = v18;
  if ((_QWORD)v18)
    v5 = 0;
  else
    v5 = *((_QWORD *)&v18 + 1) == a1 + 16;
  if (v5)
  {
    bzero(v10, 0x238uLL);
    sub_20C832278((uint64_t)v10, 8uLL, &v19);
    v10[560] = 0;
    sub_20C8347E4((uint64_t)&v11, a2, (uint64_t)v10);
    sub_20C83484C((uint64_t)&v14, (uint64_t)&v11);
    sub_20C834384(a1, &v14, 0, (uint64_t)&v17);
    v18 = v17;
    sub_20C831790((uint64_t)&v16, v6);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    sub_20C831790((uint64_t)&v13, v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
    sub_20BFD265C(&v11);
    sub_20C831790((uint64_t)v10, v8);
    v4 = v18;
  }
  return v4 + 16;
}

void sub_20C830C5C(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  void *v4;
  void *v5;
  va_list va;

  va_start(va, a3);
  sub_20C8319A8(&STACK[0x480], a2);
  sub_20C834350(&STACK[0x240], v4);
  sub_20C831790((uint64_t)va, v5);
  _Unwind_Resume(a1);
}

uint64_t sub_20C830C90(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  BOOL v5;
  void *v6;
  void *v7;
  void *v8;
  __int16 v10[280];
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;

  sub_20C832700(a1, a2, &v18);
  v4 = v18;
  if ((_QWORD)v18)
    v5 = 0;
  else
    v5 = *((_QWORD *)&v18 + 1) == a1 + 16;
  if (v5)
  {
    sub_20C834C9C((uint64_t)v10, 8uLL, &v19);
    sub_20C834DF0(&v11, a2, v10);
    sub_20C834E50(&v14, (uint64_t)&v11);
    sub_20C8348DC(a1, &v14, 0, (uint64_t)&v17);
    v18 = v17;
    sub_20C831B20((uint64_t)&v16, v6);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    sub_20C831B20((uint64_t)&v13, v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
    sub_20BFD265C(&v11);
    sub_20C831B20((uint64_t)v10, v8);
    v4 = v18;
  }
  return v4 + 16;
}

void sub_20C830D7C(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, ...)
{
  void *v5;
  void *v6;
  va_list va;

  va_start(va, a4);
  sub_20C831AEC(&STACK[0x478], a2);
  sub_20C8348A8(&STACK[0x240], v5);
  sub_20C831B20((uint64_t)va, v6);
  _Unwind_Resume(a1);
}

uint64_t sub_20C830DB0(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  BOOL v5;
  void *v6;
  void *v7;
  void *v8;
  _BYTE v10[568];
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int16 v19;

  sub_20C83401C(a1, a2, &v18);
  v4 = v18;
  if ((_QWORD)v18)
    v5 = 0;
  else
    v5 = *((_QWORD *)&v18 + 1) == a1 + 16;
  if (v5)
  {
    bzero(v10, 0x238uLL);
    sub_20C8352A0((uint64_t)v10, 8uLL, &v19);
    v10[560] = 0;
    sub_20C8353F4((uint64_t)&v11, a2, (uint64_t)v10);
    sub_20C83545C((uint64_t)&v14, (uint64_t)&v11);
    sub_20C834ED8(a1, &v14, 0, (uint64_t)&v17);
    v18 = v17;
    sub_20C831C64((uint64_t)&v16, v6);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    sub_20C831C64((uint64_t)&v13, v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
    sub_20BFD265C(&v11);
    sub_20C831C64((uint64_t)v10, v8);
    v4 = v18;
  }
  return v4 + 16;
}

void sub_20C830EAC(_Unwind_Exception *a1, void *a2, uint64_t a3, ...)
{
  void *v4;
  void *v5;
  va_list va;

  va_start(va, a3);
  sub_20C831C30(&STACK[0x480], a2);
  sub_20C834EA4(&STACK[0x240], v4);
  sub_20C831C64((uint64_t)va, v5);
  _Unwind_Resume(a1);
}

uint64_t sub_20C830EE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  BOOL v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  __int128 v11;
  __int128 v12;
  _OWORD v13[7];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[8];

  v19[7] = *MEMORY[0x24BDAC8D0];
  sub_20C8354B8(a1, a2, &v12);
  v4 = v12;
  if ((_QWORD)v12)
    v5 = 0;
  else
    v5 = *((_QWORD *)&v12 + 1) == a1 + 16;
  if (v5)
  {
    memset(v13, 0, sizeof(v13));
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v13);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)&v13[3] + 8));
    sub_20C835B34((uint64_t)&v14, a2, (uint64_t)v13);
    sub_20C835BEC((uint64_t)&v17, &v14);
    sub_20C8357EC(a1, &v17, 0, (uint64_t)&v11);
    v12 = v11;
    sub_20C7E0EB0((uint64_t)v19);
    sub_20C7E0EB0((uint64_t)&v18);
    if ((v17 & 7) != 0)
    {
      v6 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    sub_20C7E0EB0((uint64_t)&v16);
    sub_20C7E0EB0((uint64_t)&v15);
    if ((v14 & 7) != 0)
    {
      v8 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    sub_20C7E0EB0((uint64_t)&v13[3] + 8);
    sub_20C7E0EB0((uint64_t)v13);
    v4 = v12;
  }
  return v4 + 16;
}

void sub_20C831044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;

  sub_20C831D90((_QWORD *)(v31 - 160));
  sub_20C831D90(&a30);
  sub_20C7E0EB0(v30);
  sub_20C7E0EB0((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDependencyForwardingSceneIndex::RemoveDeletedEntries(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  unsigned int *v5;
  unsigned int *v7;
  uint64_t v8;
  void **v9;
  BOOL v10;
  unsigned int *i;
  unsigned int *v12;
  char *v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unint64_t v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  _QWORD v35[2];
  void **v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int *v39;
  unint64_t v40;

  v38 = 0;
  v39 = 0;
  v40 = 0;
  v5 = *(unsigned int **)(a1 + 1296);
  if (v5)
  {
    while ((v5[4] & 1) == 0)
    {
      v5 = *(unsigned int **)v5;
      if (!v5)
        goto LABEL_4;
    }
    v8 = a1 + 144;
    v32 = a1 + 704;
    v33 = a1 + 160;
    v31 = a1 + 720;
LABEL_9:
    sub_20C832700(v8, v5 + 2, &v36);
    v9 = v36;
    if (v36)
      v10 = 0;
    else
      v10 = v37 == v33;
    if (v10)
      goto LABEL_50;
    v12 = v38;
    for (i = v39; i != v12; sub_20BFD6F64((uint64_t)&v40, i))
      i -= 2;
    v39 = v12;
    v13 = (char *)v9[6];
    if (v13)
    {
      while ((v13[584] & 1) == 0)
      {
        v13 = *(char **)v13;
        if (!v13)
          goto LABEL_41;
      }
      v29 = a2;
LABEL_21:
      if (v13[576])
      {
        v14 = v39;
        v30 = (unsigned int *)(v13 + 8);
        if ((unint64_t)v39 >= v40)
        {
          v16 = (unsigned int *)sub_20BFD7890((uint64_t *)&v38, (_DWORD *)v13 + 2);
          v15 = (unsigned int *)(v13 + 8);
        }
        else
        {
          sub_20BFD6E54(v39, v30);
          sub_20BFD6EA4(v14 + 1, (_DWORD *)v13 + 3);
          v15 = (unsigned int *)(v13 + 8);
          v16 = v14 + 2;
        }
        v17 = v8;
        v39 = v16;
        sub_20C8323CC(v32, v15, v35);
        v18 = v35[0];
        if (v35[0] || v35[1] != v31)
        {
          sub_20C835C78(v35[0] + 16, v5 + 2, v34);
          if (v34[0] || v34[1] != v18 + 32)
          {
            if (*(_QWORD *)(v18 + 40) == 1)
            {
              sub_20C831468(v32, v30);
              if (v29)
              {
                v19 = v29[1];
                if (v19 >= v29[2])
                {
                  v20 = sub_20BFD7890(v29, v30);
                }
                else
                {
                  sub_20BFD6E54((_DWORD *)v29[1], v30);
                  sub_20BFD6EA4((_DWORD *)(v19 + 4), (_DWORD *)v13 + 3);
                  v20 = v19 + 8;
                }
                v29[1] = v20;
              }
            }
            else
            {
              sub_20C8314E0(v18 + 16, v5 + 2);
            }
          }
        }
        v8 = v17;
        a2 = v29;
      }
      while (1)
      {
        v13 = *(char **)v13;
        if (!v13)
          break;
        if ((v13[584] & 1) != 0)
          goto LABEL_21;
      }
      v12 = v39;
    }
LABEL_41:
    v21 = v38;
    if (v9[5] == (void *)(((char *)v12 - (char *)v38) >> 3))
    {
      sub_20C831558(v8, v5 + 2);
      if (a3)
      {
        v22 = a3[1];
        if (v22 >= a3[2])
        {
          v23 = sub_20BFD7890(a3, v5 + 2);
        }
        else
        {
          sub_20BFD6E54((_DWORD *)a3[1], v5 + 2);
          sub_20BFD6EA4((_DWORD *)(v22 + 4), v5 + 3);
          v23 = v22 + 8;
        }
        a3[1] = v23;
      }
    }
    else if (v38 != v12)
    {
      do
      {
        sub_20C8315D0((uint64_t)(v9 + 2), v21);
        v21 += 2;
      }
      while (v21 != v12);
    }
LABEL_50:
    while (1)
    {
      v5 = *(unsigned int **)v5;
      if (!v5)
        break;
      if ((v5[4] & 1) != 0)
        goto LABEL_9;
    }
  }
LABEL_4:
  v7 = *(unsigned int **)(a1 + 1856);
  if (v7)
  {
    while ((v7[4] & 1) == 0)
    {
      v7 = *(unsigned int **)v7;
      if (!v7)
        goto LABEL_7;
    }
LABEL_53:
    sub_20C8323CC(a1 + 704, v7 + 2, &v36);
    v24 = v36;
    v25 = v37;
    if (v36)
      v26 = 0;
    else
      v26 = v37 == a1 + 720;
    if (!v26 && *((_BYTE *)v36 + 576))
    {
      if (a2)
      {
        v27 = a2[1];
        if (v27 >= a2[2])
        {
          v28 = sub_20BFD7890(a2, v7 + 2);
        }
        else
        {
          sub_20BFD6E54((_DWORD *)a2[1], v7 + 2);
          sub_20BFD6EA4((_DWORD *)(v27 + 4), v7 + 3);
          v28 = v27 + 8;
        }
        a2[1] = v28;
        v24 = v36;
        v25 = v37;
      }
      sub_20C8366D8(a1 + 704, (uint64_t)v24, v25, (uint64_t)v35);
    }
    while (1)
    {
      v7 = *(unsigned int **)v7;
      if (!v7)
        break;
      if ((v7[4] & 1) != 0)
        goto LABEL_53;
    }
  }
LABEL_7:
  sub_20C831648(a1 + 1264);
  sub_20C831648(a1 + 1824);
  v36 = (void **)&v38;
  sub_20BFD6F90(&v36);
}

void sub_20C831428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18, uint64_t a19, char a20)
{
  a18 = (void **)&a20;
  sub_20BFD6F90(&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_20C831468(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_20C835DE8(a1, a2, &v9);
  v3 = 0;
  if (v9 != v11 || v10 != v12)
  {
    v5 = v9;
    do
    {
      ++v3;
      do
        v5 = *(_QWORD *)v5;
      while (v5 && (*(_BYTE *)(v5 + 584) & 1) == 0);
    }
    while (v5 != v11 || v10 != v12);
  }
  sub_20C835D58(a1, v9, v10, v11, v12, &v8);
  return v3;
}

uint64_t sub_20C8314E0(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_20C835F7C(a1, a2, &v9);
  v3 = 0;
  if (v9 != v11 || v10 != v12)
  {
    v5 = v9;
    do
    {
      ++v3;
      do
        v5 = *(_QWORD *)v5;
      while (v5 && (*(_BYTE *)(v5 + 16) & 1) == 0);
    }
    while (v5 != v11 || v10 != v12);
  }
  sub_20C835EEC(a1, v9, v10, v11, v12, &v8);
  return v3;
}

uint64_t sub_20C831558(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_20C836220(a1, a2, &v9);
  v3 = 0;
  if (v9 != v11 || v10 != v12)
  {
    v5 = v9;
    do
    {
      ++v3;
      do
        v5 = *(_QWORD *)v5;
      while (v5 && (*(_BYTE *)(v5 + 576) & 1) == 0);
    }
    while (v5 != v11 || v10 != v12);
  }
  sub_20C836190(a1, v9, v10, v11, v12, &v8);
  return v3;
}

uint64_t sub_20C8315D0(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_20C8364C4(a1, a2, &v9);
  v3 = 0;
  if (v9 != v11 || v10 != v12)
  {
    v5 = v9;
    do
    {
      ++v3;
      do
        v5 = *(_QWORD *)v5;
      while (v5 && (*(_BYTE *)(v5 + 584) & 1) == 0);
    }
    while (v5 != v11 || v10 != v12);
  }
  sub_20C836434(a1, v9, v10, v11, v12, &v8);
  return v3;
}

void sub_20C831648(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  sub_20C8317F8(a1 + 16);
  sub_20BF776C4(a1, v2);
  v3 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v3);
}

void sub_20C831694(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1, void *a2)
{
  unsigned int **v3;
  void *v4;
  void *v5;
  void *v6;
  const void *v7;

  *a1 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)off_24C550160;
  v3 = (unsigned int **)(a1 + 15);
  sub_20C831790((uint64_t)(a1 + 228), a2);
  sub_20C831790((uint64_t)(a1 + 158), v4);
  sub_20C831898((uint64_t)(a1 + 88), v5);
  sub_20C8319DC((uint64_t)(a1 + 18), v6);
  *a1 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)off_24C550568;
  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::~HdSceneIndexObserver(v3, v7);
  sub_20C831DE4(a1 + 14);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)a1);
}

void sub_20C831710(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1, void *a2)
{
  unsigned int **v3;
  void *v4;
  void *v5;
  void *v6;
  const void *v7;
  void *v8;

  *a1 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)off_24C550160;
  v3 = (unsigned int **)(a1 + 15);
  sub_20C831790((uint64_t)(a1 + 228), a2);
  sub_20C831790((uint64_t)(a1 + 158), v4);
  sub_20C831898((uint64_t)(a1 + 88), v5);
  sub_20C8319DC((uint64_t)(a1 + 18), v6);
  *a1 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)off_24C550568;
  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::~HdSceneIndexObserver(v3, v7);
  sub_20C831DE4(a1 + 14);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)a1);
  operator delete(v8);
}

uint64_t sub_20C831790(uint64_t a1, void *a2)
{
  sub_20BF776C4(a1, a2);
  sub_20C8317C0(a1 + 16);
  return a1;
}

uint64_t sub_20C8317C0(uint64_t a1)
{
  tbb::internal *v2;

  sub_20C8317F8(a1);
  v2 = *(tbb::internal **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  sub_20C83183C(a1, v2);
  return a1;
}

uint64_t sub_20C8317F8(uint64_t result)
{
  uint64_t v1;
  tbb::internal **v2;
  tbb::internal *v3;
  tbb::internal *v4;

  v1 = result;
  v2 = *(tbb::internal ***)(result + 16);
  v3 = *v2;
  *v2 = 0;
  if (v3)
  {
    do
    {
      v4 = *(tbb::internal **)v3;
      result = sub_20C83183C(v1, v3);
      v3 = v4;
    }
    while (v4);
  }
  *(_QWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_20C83183C(uint64_t a1, tbb::internal *this)
{
  if ((*((_BYTE *)this + 16) & 1) != 0)
    sub_20C83186C(a1, (uint64_t)this);
  return tbb::internal::deallocate_via_handler_v3((uint64_t)this, this);
}

_DWORD *sub_20C83186C(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 12));
  return sub_20BFD265C((_DWORD *)(a2 + 8));
}

uint64_t sub_20C831898(uint64_t a1, void *a2)
{
  sub_20BF776C4(a1, a2);
  sub_20C8318C8(a1 + 16);
  return a1;
}

uint64_t sub_20C8318C8(uint64_t a1)
{
  tbb::internal *v2;

  sub_20C831900(a1);
  v2 = *(tbb::internal **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  sub_20C831944(a1, v2);
  return a1;
}

uint64_t sub_20C831900(uint64_t result)
{
  uint64_t v1;
  tbb::internal **v2;
  tbb::internal *v3;
  tbb::internal *v4;

  v1 = result;
  v2 = *(tbb::internal ***)(result + 16);
  v3 = *v2;
  *v2 = 0;
  if (v3)
  {
    do
    {
      v4 = *(tbb::internal **)v3;
      result = sub_20C831944(v1, v3);
      v3 = v4;
    }
    while (v4);
  }
  *(_QWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_20C831944(uint64_t a1, tbb::internal *this)
{
  if ((*((_BYTE *)this + 584) & 1) != 0)
    sub_20C831974(a1, this);
  return tbb::internal::deallocate_via_handler_v3((uint64_t)this, this);
}

_DWORD *sub_20C831974(uint64_t a1, _DWORD *a2)
{
  sub_20C831790((uint64_t)(a2 + 4), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a2 + 3);
  return sub_20BFD265C(a2 + 2);
}

_DWORD *sub_20C8319A8(_DWORD *a1, void *a2)
{
  sub_20C831790((uint64_t)(a1 + 2), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

uint64_t sub_20C8319DC(uint64_t a1, void *a2)
{
  sub_20BF776C4(a1, a2);
  sub_20C831A0C(a1 + 16);
  return a1;
}

uint64_t sub_20C831A0C(uint64_t a1)
{
  tbb::internal *v2;

  sub_20C831A44(a1);
  v2 = *(tbb::internal **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  sub_20C831A88(a1, v2);
  return a1;
}

uint64_t sub_20C831A44(uint64_t result)
{
  uint64_t v1;
  tbb::internal **v2;
  tbb::internal *v3;
  tbb::internal *v4;

  v1 = result;
  v2 = *(tbb::internal ***)(result + 16);
  v3 = *v2;
  *v2 = 0;
  if (v3)
  {
    do
    {
      v4 = *(tbb::internal **)v3;
      result = sub_20C831A88(v1, v3);
      v3 = v4;
    }
    while (v4);
  }
  *(_QWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_20C831A88(uint64_t a1, tbb::internal *this)
{
  if ((*((_BYTE *)this + 576) & 1) != 0)
    sub_20C831AB8(a1, this);
  return tbb::internal::deallocate_via_handler_v3((uint64_t)this, this);
}

_DWORD *sub_20C831AB8(uint64_t a1, _DWORD *a2)
{
  sub_20C831B20((uint64_t)(a2 + 4), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a2 + 3);
  return sub_20BFD265C(a2 + 2);
}

_DWORD *sub_20C831AEC(_DWORD *a1, void *a2)
{
  sub_20C831B20((uint64_t)(a1 + 2), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

uint64_t sub_20C831B20(uint64_t a1, void *a2)
{
  sub_20BF776C4(a1, a2);
  sub_20C831B50(a1 + 16);
  return a1;
}

uint64_t sub_20C831B50(uint64_t a1)
{
  tbb::internal *v2;

  sub_20C831B88(a1);
  v2 = *(tbb::internal **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  sub_20C831BCC(a1, v2);
  return a1;
}

uint64_t sub_20C831B88(uint64_t result)
{
  uint64_t v1;
  tbb::internal **v2;
  tbb::internal *v3;
  tbb::internal *v4;

  v1 = result;
  v2 = *(tbb::internal ***)(result + 16);
  v3 = *v2;
  *v2 = 0;
  if (v3)
  {
    do
    {
      v4 = *(tbb::internal **)v3;
      result = sub_20C831BCC(v1, v3);
      v3 = v4;
    }
    while (v4);
  }
  *(_QWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_20C831BCC(uint64_t a1, tbb::internal *this)
{
  if ((*((_BYTE *)this + 584) & 1) != 0)
    sub_20C831BFC(a1, this);
  return tbb::internal::deallocate_via_handler_v3((uint64_t)this, this);
}

_DWORD *sub_20C831BFC(uint64_t a1, _DWORD *a2)
{
  sub_20C831C64((uint64_t)(a2 + 4), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a2 + 3);
  return sub_20BFD265C(a2 + 2);
}

_DWORD *sub_20C831C30(_DWORD *a1, void *a2)
{
  sub_20C831C64((uint64_t)(a1 + 2), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

uint64_t sub_20C831C64(uint64_t a1, void *a2)
{
  sub_20BF776C4(a1, a2);
  sub_20C831C94(a1 + 16);
  return a1;
}

uint64_t sub_20C831C94(uint64_t a1)
{
  tbb::internal *v2;

  sub_20C831CCC(a1);
  v2 = *(tbb::internal **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;
  sub_20C831D10(a1, v2);
  return a1;
}

uint64_t sub_20C831CCC(uint64_t result)
{
  uint64_t v1;
  tbb::internal **v2;
  tbb::internal *v3;
  tbb::internal *v4;

  v1 = result;
  v2 = *(tbb::internal ***)(result + 16);
  v3 = *v2;
  *v2 = 0;
  if (v3)
  {
    do
    {
      v4 = *(tbb::internal **)v3;
      result = sub_20C831D10(v1, v3);
      v3 = v4;
    }
    while (v4);
  }
  *(_QWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_20C831D10(uint64_t a1, tbb::internal *this)
{
  if ((*((_BYTE *)this + 128) & 1) != 0)
    sub_20C831D40(a1, (uint64_t)this);
  return tbb::internal::deallocate_via_handler_v3((uint64_t)this, this);
}

uint64_t sub_20C831D40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  v3 = a2 + 16;
  sub_20C7E0EB0(a2 + 72);
  result = sub_20C7E0EB0(v3);
  v5 = *(_QWORD *)(a2 + 8);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  return result;
}

_QWORD *sub_20C831D90(_QWORD *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = (uint64_t)(a1 + 1);
  sub_20C7E0EB0((uint64_t)(a1 + 8));
  sub_20C7E0EB0(v2);
  if ((*a1 & 7) != 0)
  {
    v3 = (unsigned int *)(*a1 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  return a1;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C831DE4(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

void sub_20C831E10(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    v4 = (void *)sub_20C831E3C(v3);
    operator delete(v4);
  }
}

uint64_t sub_20C831E3C(uint64_t a1)
{
  void *v2;

  sub_20C831E74(a1, *(_DWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C831E74(uint64_t a1, _DWORD *a2)
{
  _DWORD *v2;
  _DWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = *(_DWORD **)v2;
      sub_20C831EB0(v2 + 4);
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_DWORD *sub_20C831EB0(_DWORD *a1)
{
  sub_20C7E0EB0((uint64_t)(a1 + 2));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

_DWORD *sub_20C831EE4(_DWORD *a1)
{
  sub_20C7E0EB0((uint64_t)(a1 + 2));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void sub_20C831F18(void ***a1)
{
  void **v1;
  _DWORD *v2;
  _DWORD *v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 16;
        sub_20C831F9C((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_DWORD *sub_20C831F9C(uint64_t a1, _DWORD *a2)
{
  sub_20C7E0EB0((uint64_t)(a2 + 2));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a2 + 1);
  return sub_20BFD265C(a2);
}

uint64_t sub_20C831FD0(uint64_t a1, unint64_t a2, _WORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v11;

  *(_WORD *)a1 = *a3;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x248);
  v5[72] = 0;
  *v5 = 0;
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 44) = 1082130432;
  if (a2 <= 1)
    v6 = 1;
  else
    v6 = a2;
  v7 = 2 * v6 - 1;
  v8 = HIDWORD(v7) != 0;
  __dmb(0xBu);
  if (HIDWORD(v7))
    v7 >>= 32;
  v9 = 32 * v8;
  if (v7 >= 0x10000)
  {
    v7 >>= 16;
    v9 = (32 * v8) | 0x10;
  }
  if (v7 >= 0x100)
  {
    v7 >>= 8;
    v9 |= 8u;
  }
  if (v7 >= 0x10)
  {
    v7 >>= 4;
    v9 |= 4u;
  }
  if (v7 >= 4)
  {
    v7 >>= 2;
    v9 += 2;
  }
  *(_QWORD *)(a1 + 8) = 1 << (((v7 & 2) != 0) + v9);
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v11 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v11);
  return a1;
}

void sub_20C832110(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C831A0C(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C832124(uint64_t a1, unint64_t a2, _WORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v11;

  *(_WORD *)a1 = *a3;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  v5[73] = 0;
  *v5 = 0;
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 44) = 1082130432;
  if (a2 <= 1)
    v6 = 1;
  else
    v6 = a2;
  v7 = 2 * v6 - 1;
  v8 = HIDWORD(v7) != 0;
  __dmb(0xBu);
  if (HIDWORD(v7))
    v7 >>= 32;
  v9 = 32 * v8;
  if (v7 >= 0x10000)
  {
    v7 >>= 16;
    v9 = (32 * v8) | 0x10;
  }
  if (v7 >= 0x100)
  {
    v7 >>= 8;
    v9 |= 8u;
  }
  if (v7 >= 0x10)
  {
    v7 >>= 4;
    v9 |= 4u;
  }
  if (v7 >= 4)
  {
    v7 >>= 2;
    v9 += 2;
  }
  *(_QWORD *)(a1 + 8) = 1 << (((v7 & 2) != 0) + v9);
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v11 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v11);
  return a1;
}

void sub_20C832264(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C8318C8(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C832278(uint64_t a1, unint64_t a2, _WORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v11;

  *(_WORD *)a1 = *a3;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x18);
  v5[2] = 0;
  *v5 = 0;
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 44) = 1082130432;
  if (a2 <= 1)
    v6 = 1;
  else
    v6 = a2;
  v7 = 2 * v6 - 1;
  v8 = HIDWORD(v7) != 0;
  __dmb(0xBu);
  if (HIDWORD(v7))
    v7 >>= 32;
  v9 = 32 * v8;
  if (v7 >= 0x10000)
  {
    v7 >>= 16;
    v9 = (32 * v8) | 0x10;
  }
  if (v7 >= 0x100)
  {
    v7 >>= 8;
    v9 |= 8u;
  }
  if (v7 >= 0x10)
  {
    v7 >>= 4;
    v9 |= 4u;
  }
  if (v7 >= 4)
  {
    v7 >>= 2;
    v9 += 2;
  }
  *(_QWORD *)(a1 + 8) = 1 << (((v7 & 2) != 0) + v9);
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v11 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v11);
  return a1;
}

void sub_20C8323B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C8317C0(v1 + 16);
  _Unwind_Resume(a1);
}

void sub_20C8323CC(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v14 = 0;
  v15 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v15;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v14 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v14;
  v10 = a1 + 16;
  sub_20C8324AC(a1, v5, &v15);
  v11 = v15;
  if (v15)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[73];
      if (v13 > v12)
        break;
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        goto LABEL_11;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v11 = 0;
LABEL_11:
    *a3 = v11;
  }
  else
  {
LABEL_9:
    *a3 = 0;
  }
  a3[1] = v10;
}

void sub_20C8324AC(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 8);
  __dmb(0xBu);
  v6 = a2 % v5;
  v7 = sub_20BEB4B94(a2 % v5);
  v8 = v6 - ((1 << v7) & 0xFFFFFFFFFFFFFFFELL);
  v9 = a1 + 8 * v7;
  v11 = *(_QWORD *)(v9 + 48);
  v10 = (uint64_t *)(v9 + 48);
  __dmb(0xBu);
  if (!v11 || (v12 = *v10, __dmb(0xBu), !*(_QWORD *)(v12 + 8 * v8)))
    sub_20C832540(a1, (unint64_t *)v6);
  v13 = *v10;
  __dmb(0xBu);
  *a3 = *(_QWORD *)(v13 + 8 * v8);
}

void sub_20C832540(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t **v7;
  uint64_t i;
  int v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;

  v4 = sub_20BF77DA0(a1, (unint64_t)a2);
  if (!sub_20BF77E2C(a1, v4))
    sub_20C832540(a1, v4);
  v5 = sub_20BEB4B94(v4);
  v6 = *(_QWORD *)(a1 + 8 * v5 + 48);
  __dmb(0xBu);
  v11 = *(unint64_t **)(v6 + 8 * (v4 - ((1 << v5) & 0x1FFFFFFFFFFFFFFELL)));
  v12 = 0;
  v13 = a2;
  v7 = &v13;
  for (i = 7; i != -1; --i)
  {
    v9 = *(unsigned __int8 *)v7;
    v7 = (unint64_t **)((char *)v7 + 1);
    *((_BYTE *)&v12 + i) = byte_20CA9F1BD[v9];
  }
  sub_20C832620(a1 + 16, &v11, v12 & 0xFFFFFFFFFFFFFFFELL, &v13);
  v10 = v13;
  sub_20BF6EE60(a1, (unint64_t)a2, &v10);
}

tbb::internal *sub_20C832620@<X0>(uint64_t a1@<X0>, unint64_t **a2@<X1>, unint64_t a3@<X2>, unint64_t **a4@<X8>)
{
  unint64_t *i;
  tbb::internal *result;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  i = (unint64_t *)**a2;
  result = (tbb::internal *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  *((_QWORD *)result + 73) = a3;
  *(_QWORD *)result = 0;
  if (i)
    goto LABEL_2;
LABEL_3:
  while (1)
  {
    v11 = *a2;
    *(_QWORD *)result = i;
    do
    {
      while (1)
      {
        v12 = __ldaxr(v11);
        if ((unint64_t *)v12 == i)
          break;
        __clrex();
        do
          v13 = __ldxr(v11);
        while (__stxr(v13, v11));
        if ((unint64_t *)v13 != i)
          goto LABEL_10;
      }
    }
    while (__stlxr((unint64_t)result, v11));
    v13 = (unint64_t)i;
LABEL_10:
    if (i == (unint64_t *)v13 || result == (tbb::internal *)v13)
      break;
    for (i = *a2; ; *a2 = i)
    {
      i = (unint64_t *)*i;
      if (!i)
        break;
LABEL_2:
      v10 = i[73];
      if (v10 > a3)
        goto LABEL_3;
      if (v10 == a3)
      {
        result = (tbb::internal *)sub_20C831944(a1, result);
        goto LABEL_21;
      }
    }
  }
  i = (unint64_t *)result;
LABEL_21:
  *a4 = i;
  return result;
}

void sub_20C832700(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v14 = 0;
  v15 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v15;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v14 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v14;
  v10 = a1 + 16;
  sub_20C8327E0(a1, v5, &v15);
  v11 = v15;
  if (v15)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[72];
      if (v13 > v12)
        break;
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        goto LABEL_11;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v11 = 0;
LABEL_11:
    *a3 = v11;
  }
  else
  {
LABEL_9:
    *a3 = 0;
  }
  a3[1] = v10;
}

void sub_20C8327E0(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 8);
  __dmb(0xBu);
  v6 = a2 % v5;
  v7 = sub_20BEB4B94(a2 % v5);
  v8 = v6 - ((1 << v7) & 0xFFFFFFFFFFFFFFFELL);
  v9 = a1 + 8 * v7;
  v11 = *(_QWORD *)(v9 + 48);
  v10 = (uint64_t *)(v9 + 48);
  __dmb(0xBu);
  if (!v11 || (v12 = *v10, __dmb(0xBu), !*(_QWORD *)(v12 + 8 * v8)))
    sub_20C832874(a1, (unint64_t *)v6);
  v13 = *v10;
  __dmb(0xBu);
  *a3 = *(_QWORD *)(v13 + 8 * v8);
}

void sub_20C832874(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t **v7;
  uint64_t i;
  int v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;

  v4 = sub_20BF77DA0(a1, (unint64_t)a2);
  if (!sub_20BF77E2C(a1, v4))
    sub_20C832874(a1, v4);
  v5 = sub_20BEB4B94(v4);
  v6 = *(_QWORD *)(a1 + 8 * v5 + 48);
  __dmb(0xBu);
  v11 = *(unint64_t **)(v6 + 8 * (v4 - ((1 << v5) & 0x1FFFFFFFFFFFFFFELL)));
  v12 = 0;
  v13 = a2;
  v7 = &v13;
  for (i = 7; i != -1; --i)
  {
    v9 = *(unsigned __int8 *)v7;
    v7 = (unint64_t **)((char *)v7 + 1);
    *((_BYTE *)&v12 + i) = byte_20CA9F1BD[v9];
  }
  sub_20C832954(a1 + 16, &v11, v12 & 0xFFFFFFFFFFFFFFFELL, &v13);
  v10 = v13;
  sub_20BF6EE60(a1, (unint64_t)a2, &v10);
}

tbb::internal *sub_20C832954@<X0>(uint64_t a1@<X0>, unint64_t **a2@<X1>, unint64_t a3@<X2>, unint64_t **a4@<X8>)
{
  unint64_t *i;
  tbb::internal *result;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  i = (unint64_t *)**a2;
  result = (tbb::internal *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x248);
  *((_QWORD *)result + 72) = a3;
  *(_QWORD *)result = 0;
  if (i)
    goto LABEL_2;
LABEL_3:
  while (1)
  {
    v11 = *a2;
    *(_QWORD *)result = i;
    do
    {
      while (1)
      {
        v12 = __ldaxr(v11);
        if ((unint64_t *)v12 == i)
          break;
        __clrex();
        do
          v13 = __ldxr(v11);
        while (__stxr(v13, v11));
        if ((unint64_t *)v13 != i)
          goto LABEL_10;
      }
    }
    while (__stlxr((unint64_t)result, v11));
    v13 = (unint64_t)i;
LABEL_10:
    if (i == (unint64_t *)v13 || result == (tbb::internal *)v13)
      break;
    for (i = *a2; ; *a2 = i)
    {
      i = (unint64_t *)*i;
      if (!i)
        break;
LABEL_2:
      v10 = i[72];
      if (v10 > a3)
        goto LABEL_3;
      if (v10 == a3)
      {
        result = (tbb::internal *)sub_20C831A88(a1, result);
        goto LABEL_21;
      }
    }
  }
  i = (unint64_t *)result;
LABEL_21:
  *a4 = i;
  return result;
}

void sub_20C832A34(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  unint64_t **v9;
  uint64_t i;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;

  v8 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v29 = 0;
  v30 = (unint64_t *)v8;
  v9 = &v30;
  for (i = 7; i != -1; --i)
  {
    v11 = *(unsigned __int8 *)v9;
    v9 = (unint64_t **)((char *)v9 + 1);
    *((_BYTE *)&v29 + i) = byte_20CA9F1BD[v11];
  }
  v12 = v29 | 1;
  sub_20C832C50(a1, v8, &v30);
  v13 = a1 + 16;
  if (a3)
  {
    a3[2] = v12;
    *a3 = 0;
  }
  v14 = a2;
  while (1)
  {
    v15 = v30;
    v16 = (unint64_t *)*v30;
    if (*v30)
    {
      v17 = v16[2];
      while (1)
      {
        v18 = v16;
        if (v17 > v12)
          break;
        if (v17 == v12 && v16[1] == *v14)
        {
          if (a3)
            sub_20C83183C(a1 + 16, (tbb::internal *)a3);
          *(_QWORD *)a4 = v16;
          *(_QWORD *)(a4 + 8) = v13;
          *(_BYTE *)(a4 + 16) = 0;
          return;
        }
        v30 = v16;
        v16 = (unint64_t *)*v16;
        if (!*v18)
        {
          v15 = v18;
          break;
        }
        v17 = v16[2];
        v15 = v18;
      }
    }
    if (!a3)
    {
      a3 = (_QWORD *)sub_20C832CE4(a1 + 16, v12, a2);
      v14 = a3 + 1;
      v15 = v30;
    }
    *a3 = v16;
    do
    {
      while (1)
      {
        v19 = __ldaxr(v15);
        if ((unint64_t *)v19 == v16)
          break;
        __clrex();
        do
          v20 = __ldxr(v15);
        while (__stxr(v20, v15));
        if ((unint64_t *)v20 != v16)
          goto LABEL_23;
      }
    }
    while (__stlxr((unint64_t)a3, v15));
    v20 = (unint64_t)v16;
LABEL_23:
    if (v16 == (unint64_t *)v20 || a3 == (_QWORD *)v20)
      break;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = v13;
    *(_BYTE *)(a4 + 16) = 0;
  }
  v22 = (unint64_t *)(a1 + 24);
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 + 1, v22));
  *(_QWORD *)a4 = a3;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = 1;
  v26 = *(_QWORD *)(a1 + 8);
  v25 = a1 + 8;
  v24 = v26;
  __dmb(0xBu);
  if ((float)((float)v23 / (float)v26) > *(float *)(v25 + 36))
  {
    do
    {
      while (1)
      {
        v27 = __ldaxr((unint64_t *)v25);
        if (v27 != v24)
          break;
        if (!__stlxr(2 * v24, (unint64_t *)v25))
          return;
      }
      __clrex();
      do
        v28 = __ldxr((unint64_t *)v25);
      while (__stxr(v28, (unint64_t *)v25));
    }
    while (v28 == v24);
  }
}

void sub_20C832C50(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 8);
  __dmb(0xBu);
  v6 = a2 % v5;
  v7 = sub_20BEB4B94(a2 % v5);
  v8 = v6 - ((1 << v7) & 0xFFFFFFFFFFFFFFFELL);
  v9 = a1 + 8 * v7;
  v11 = *(_QWORD *)(v9 + 48);
  v10 = (uint64_t *)(v9 + 48);
  __dmb(0xBu);
  if (!v11 || (v12 = *v10, __dmb(0xBu), !*(_QWORD *)(v12 + 8 * v8)))
    sub_20C832D3C(a1, (unint64_t *)v6);
  v13 = *v10;
  __dmb(0xBu);
  *a3 = *(_QWORD *)(v13 + 8 * v8);
}

uint64_t sub_20C832CE4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v5;

  v5 = tbb::internal::allocate_via_handler_v3((tbb::internal *)0x18);
  sub_20BFD6E54((_DWORD *)(v5 + 8), a3);
  sub_20BFD6EA4((_DWORD *)(v5 + 12), a3 + 1);
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)v5 = 0;
  return v5;
}

void sub_20C832D3C(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t **v7;
  uint64_t i;
  int v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;

  v4 = sub_20BF77DA0(a1, (unint64_t)a2);
  if (!sub_20BF77E2C(a1, v4))
    sub_20C832D3C(a1, v4);
  v5 = sub_20BEB4B94(v4);
  v6 = *(_QWORD *)(a1 + 8 * v5 + 48);
  __dmb(0xBu);
  v11 = *(unint64_t **)(v6 + 8 * (v4 - ((1 << v5) & 0x1FFFFFFFFFFFFFFELL)));
  v12 = 0;
  v13 = a2;
  v7 = &v13;
  for (i = 7; i != -1; --i)
  {
    v9 = *(unsigned __int8 *)v7;
    v7 = (unint64_t **)((char *)v7 + 1);
    *((_BYTE *)&v12 + i) = byte_20CA9F1BD[v9];
  }
  sub_20C832E1C(a1 + 16, &v11, v12 & 0xFFFFFFFFFFFFFFFELL, &v13);
  v10 = v13;
  sub_20BF6EE60(a1, (unint64_t)a2, &v10);
}

tbb::internal *sub_20C832E1C@<X0>(uint64_t a1@<X0>, unint64_t **a2@<X1>, unint64_t a3@<X2>, unint64_t **a4@<X8>)
{
  unint64_t *i;
  tbb::internal *result;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  i = (unint64_t *)**a2;
  result = (tbb::internal *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x18);
  *((_QWORD *)result + 2) = a3;
  *(_QWORD *)result = 0;
  if (i)
    goto LABEL_2;
LABEL_3:
  while (1)
  {
    v11 = *a2;
    *(_QWORD *)result = i;
    do
    {
      while (1)
      {
        v12 = __ldaxr(v11);
        if ((unint64_t *)v12 == i)
          break;
        __clrex();
        do
          v13 = __ldxr(v11);
        while (__stxr(v13, v11));
        if ((unint64_t *)v13 != i)
          goto LABEL_10;
      }
    }
    while (__stlxr((unint64_t)result, v11));
    v13 = (unint64_t)i;
LABEL_10:
    if (i == (unint64_t *)v13 || result == (tbb::internal *)v13)
      break;
    for (i = *a2; ; *a2 = i)
    {
      i = (unint64_t *)*i;
      if (!i)
        break;
LABEL_2:
      v10 = i[2];
      if (v10 > a3)
        goto LABEL_3;
      if (v10 == a3)
      {
        result = (tbb::internal *)sub_20C83183C(a1, result);
        goto LABEL_21;
      }
    }
  }
  i = (unint64_t *)result;
LABEL_21:
  *a4 = i;
  return result;
}

void sub_20C832EFC(_DWORD *a1, unsigned int a2)
{
  void *v4;
  uint64_t v5;

  v4 = malloc(464 * a2);
  v5 = (uint64_t)a1;
  if (a1[1857] >= 0x11u)
    v5 = *(_QWORD *)a1;
  sub_20C832F80(v5, v5 + 464 * a1[1856], (uint64_t)v4);
  sub_20C7F1828(a1);
  if (a1[1857] >= 0x11u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v4;
  a1[1857] = a2;
}

uint64_t sub_20C832F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 == a2)
    return a1;
  v5 = a2;
  v6 = 0;
  do
  {
    sub_20BFD38A4((_DWORD *)(a3 + v6), (_DWORD *)(a1 + v6));
    sub_20BFD38DC((_DWORD *)(a3 + v6 + 4), (_DWORD *)(a1 + v6 + 4));
    sub_20C833060(a3 + v6 + 8, a1 + v6 + 8);
    v6 += 464;
  }
  while (a1 + v6 != v5);
  return v5;
}

void sub_20C83301C()
{
  _DWORD *v0;
  _DWORD *v1;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v1);
  sub_20C96C398(v0);
  __cxa_rethrow();
}

void sub_20C83304C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C833060(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  int v6;

  *(_QWORD *)(a1 + 448) = 0x800000000;
  v4 = *(_DWORD *)(a2 + 448);
  if (v4 < 9)
  {
    if (*(_DWORD *)(a2 + 452) >= 9u)
      v5 = *(_QWORD *)a2;
    else
      v5 = a2;
    sub_20C7F52F4(v5, v5 + 56 * v4, a1);
    sub_20C7F1184(a2);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
    *(_DWORD *)(a2 + 452) = 8;
  }
  v6 = *(_DWORD *)(a1 + 448);
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  *(_DWORD *)(a2 + 448) = v6;
  return a1;
}

uint64_t sub_20C8330F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v7 = 0;
    do
    {
      v8 = a3 + v7;
      sub_20C01A074((int *)(a4 + v7 - 464), (_DWORD *)(a3 + v7 - 464));
      sub_20C01A0C8((int *)(a4 + v7 - 460), (_DWORD *)(a3 + v7 - 460));
      if (a4 != a3)
      {
        if (*(_DWORD *)(v8 - 4) >= 9u)
          v9 = *(_QWORD *)(v8 - 456);
        else
          v9 = v8 - 456;
        sub_20C82877C(a4 + v7 - 456, v9, v9 + 56 * *(unsigned int *)(v8 - 8));
      }
      v7 -= 464;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

uint64_t sub_20C8331A0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 == *a3)
    return sub_20C826E38(a2 + 1, (uint64_t)(a3 + 1));
  else
    return 0;
}

_QWORD *sub_20C8331D8(_QWORD *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int8x8_t v6;
  unint64_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  char v17;

  v4 = *a2;
  v5 = a2[1];
  v17 = 1;
  v16 = v5 + ((unint64_t)(v5 + v4 + (v5 + v4) * (v5 + v4)) >> 1);
  sub_20C82D430((uint64_t)&v16, (uint64_t)(a2 + 2));
  v6 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v6)
    return 0;
  v7 = bswap64(0x9E3779B97F4A7C55 * v16);
  v8 = (uint8x8_t)vcnt_s8(v6);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v7;
    if (v7 >= *(_QWORD *)&v6)
      v10 = v7 % *(_QWORD *)&v6;
  }
  else
  {
    v10 = (*(_QWORD *)&v6 - 1) & v7;
  }
  v11 = *(_QWORD **)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  v12 = (_QWORD *)*v11;
  if (*v11)
  {
    v13 = (uint64_t)(a1 + 4);
    do
    {
      v14 = v12[1];
      if (v14 == v7)
      {
        if ((sub_20C8331A0(v13, v12 + 2, a2) & 1) != 0)
          return v12;
      }
      else
      {
        if (v9 > 1)
        {
          if (v14 >= *(_QWORD *)&v6)
            v14 %= *(_QWORD *)&v6;
        }
        else
        {
          v14 &= *(_QWORD *)&v6 - 1;
        }
        if (v14 != v10)
          return 0;
      }
      v12 = (_QWORD *)*v12;
    }
    while (v12);
  }
  return v12;
}

_DWORD *sub_20C833314(_DWORD *a1)
{
  sub_20C7E0EB0((uint64_t)(a1 + 2));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void sub_20C833348(uint64_t *a1)
{
  uint64_t *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _DWORD *v8;

  if ((unint64_t)(a1[1] - *a1) >= 0x1FC1)
  {
    v2 = a1 + 3;
    if (!a1[3])
    {
      v3 = operator new(0x28uLL);
      *v3 = 0u;
      v3[1] = 0u;
      *((_DWORD *)v3 + 8) = 1065353216;
      sub_20BDEC6E0((uint64_t)v3, 0x80uLL);
      sub_20C831E10(v2, (uint64_t)v3);
      v4 = *a1;
      if (a1[1] != *a1)
      {
        v5 = 0;
        v6 = 0;
        do
        {
          v7 = a1[3];
          v8 = (_DWORD *)(v4 + v5);
          sub_20C833C80(v7, (unsigned int *)(v4 + v5), (uint64_t)&unk_20CAC184C, &v8)[10] = v6++;
          v4 = *a1;
          v5 += 64;
        }
        while (v6 < (a1[1] - *a1) >> 6);
      }
    }
  }
}

void sub_20C833418(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v3;

  v3 = (void *)sub_20C831E3C(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C833430(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v25;
  char v26;

  v7 = *a2;
  v8 = a2[1];
  v26 = 1;
  v25 = (_QWORD *)(v8 + ((unint64_t)(v8 + v7 + (v8 + v7) * (v8 + v7)) >> 1));
  sub_20C82D430((uint64_t)&v25, (uint64_t)(a2 + 2));
  v9 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v25);
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v3 = v9;
      if (v9 >= v10)
        v3 = v9 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
    v13 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v13)
    {
      v14 = (_QWORD *)*v13;
      if (*v13)
      {
        do
        {
          v15 = v14[1];
          if (v15 == v9)
          {
            if ((sub_20C8331A0(a1 + 32, v14 + 2, a2) & 1) != 0)
              return v14;
          }
          else
          {
            if (v12 > 1)
            {
              if (v15 >= v10)
                v15 %= v10;
            }
            else
            {
              v15 &= v10 - 1;
            }
            if (v15 != v3)
              break;
          }
          v14 = (_QWORD *)*v14;
        }
        while (v14);
      }
    }
  }
  sub_20C8336D8(a1, v9, a3, (uint64_t)&v25);
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_20BDEC6E0(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v22)
  {
    *v25 = *v22;
    *v22 = v25;
  }
  else
  {
    *v25 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v25;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v25)
    {
      v23 = *(_QWORD *)(*v25 + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10)
          v23 %= v10;
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v23) = v25;
    }
  }
  v14 = v25;
  v25 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C8337C0((uint64_t)&v25, 0);
  return v14;
}

void sub_20C8336C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C8337C0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8336D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x58uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C83374C((uint64_t)(v8 + 2), a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C833734(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C8337C0(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83374C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD6E54((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD6EA4(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C7F1078((_DWORD *)(a1 + 8), a2 + 8);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

void sub_20C8337A0(_Unwind_Exception *a1)
{
  _DWORD *v1;
  _DWORD *v2;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(v1);
  _Unwind_Resume(a1);
}

void sub_20C8337C0(uint64_t a1, uint64_t a2)
{
  _DWORD *v2;

  v2 = *(_DWORD **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C831EB0(v2 + 4);
    operator delete(v2);
  }
}

uint64_t sub_20C833804(uint64_t a1, _DWORD *a2, _QWORD *a3)
{
  _DWORD *v6;

  v6 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  sub_20C7F1078((_DWORD *)(a1 + 8), (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 64) = *a3;
  return a1;
}

void sub_20C83385C(_Unwind_Exception *a1)
{
  _DWORD *v1;
  _DWORD *v2;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83387C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD38A4((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD38DC(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C7F1078((_DWORD *)(a1 + 8), a2 + 8);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

void sub_20C8338D0(_Unwind_Exception *a1)
{
  _DWORD *v1;
  _DWORD *v2;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8338F0(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  void *v11;
  char *v12;
  _DWORD *v13;
  char *v14;
  uint64_t *v15;

  v3 = (a1[1] - *a1) >> 6;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 58)
    sub_20BDDF694();
  v6 = a1[2] - *a1;
  if (v6 >> 5 > v4)
    v4 = v6 >> 5;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFC0)
    v7 = 0x3FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  v15 = a1 + 2;
  if (v7)
    v8 = (char *)sub_20C00D6F0((uint64_t)(a1 + 2), v7);
  else
    v8 = 0;
  v11 = v8;
  v12 = &v8[64 * v3];
  v14 = &v8[64 * v7];
  sub_20C8339DC((uint64_t)(a1 + 2), v12, a2);
  v13 = v12 + 64;
  sub_20C833A4C(a1, &v11);
  v9 = a1[1];
  sub_20C833C0C(&v11);
  return v9;
}

void sub_20C8339C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C833C0C((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C8339DC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  sub_20BFD6E54(a2, a3);
  sub_20BFD6EA4(a2 + 1, a3 + 1);
  return sub_20C7F1078(a2 + 2, (uint64_t)(a3 + 2));
}

void sub_20C833A2C(_Unwind_Exception *a1)
{
  _DWORD *v1;
  _DWORD *v2;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C833A4C(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C833AC0((uint64_t)(a1 + 2), a1[1], (_DWORD *)a1[1], *a1, (_DWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C833AC0(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4, _DWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _DWORD *v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 16;
      sub_20C8339DC(a1, (_DWORD *)(v7 - 64), v9);
      v7 = *((_QWORD *)&v16 + 1) - 64;
      *((_QWORD *)&v16 + 1) -= 64;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C833B88((uint64_t)v13);
  return v11;
}

void sub_20C833B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C833B88((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C833B88(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C833BBC((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C833BBC(uint64_t *result)
{
  _DWORD *v1;
  _DWORD *v2;
  uint64_t v3;

  v1 = *(_DWORD **)(result[2] + 8);
  v2 = *(_DWORD **)(result[1] + 8);
  if (v1 != v2)
  {
    v3 = *result;
    do
    {
      result = (uint64_t *)sub_20C831F9C(v3, v1);
      v1 += 16;
    }
    while (v1 != v2);
  }
  return result;
}

void **sub_20C833C0C(void **a1)
{
  sub_20C833C3C(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

_DWORD *sub_20C833C3C(_DWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;

  v2 = *((_QWORD *)result + 1);
  v1 = *((_QWORD *)result + 2);
  if (v1 != v2)
  {
    v3 = result;
    do
    {
      v4 = *((_QWORD *)v3 + 4);
      *((_QWORD *)v3 + 2) = v1 - 64;
      result = sub_20C831F9C(v4, (_DWORD *)(v1 - 64));
      v1 = *((_QWORD *)v3 + 2);
    }
    while (v1 != v2);
  }
  return result;
}

_QWORD *sub_20C833C80(uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  _QWORD *v23;
  unint64_t v24;
  _QWORD *v26;
  char v27;

  v8 = *a2;
  v9 = a2[1];
  v27 = 1;
  v26 = (_QWORD *)(v9 + ((unint64_t)(v9 + v8 + (v9 + v8) * (v9 + v8)) >> 1));
  sub_20C82D430((uint64_t)&v26, (uint64_t)(a2 + 2));
  v10 = bswap64(0x9E3779B97F4A7C55 * (_QWORD)v26);
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v4 = v10;
      if (v10 >= v11)
        v4 = v10 % v11;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
    v14 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v14)
    {
      v15 = (_QWORD *)*v14;
      if (*v14)
      {
        do
        {
          v16 = v15[1];
          if (v16 == v10)
          {
            if ((sub_20C8331A0(a1 + 32, v15 + 2, a2) & 1) != 0)
              return v15;
          }
          else
          {
            if (v13 > 1)
            {
              if (v16 >= v11)
                v16 %= v11;
            }
            else
            {
              v16 &= v11 - 1;
            }
            if (v16 != v4)
              break;
          }
          v15 = (_QWORD *)*v15;
        }
        while (v15);
      }
    }
  }
  sub_20C833F40(a1, v10, a4, (uint64_t)&v26);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    sub_20BDEC6E0(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
        v4 = v10 % v11;
      else
        v4 = v10;
    }
    else
    {
      v4 = (v11 - 1) & v10;
    }
  }
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *v26 = *v23;
    *v23 = v26;
  }
  else
  {
    *v26 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v26;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v26)
    {
      v24 = *(_QWORD *)(*v26 + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11)
          v24 %= v11;
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v24) = v26;
    }
  }
  v15 = v26;
  v26 = 0;
  ++*(_QWORD *)(a1 + 24);
  sub_20C8337C0((uint64_t)&v26, 0);
  return v15;
}

void sub_20C833F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20C8337C0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C833F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v7 = a1 + 16;
  v8 = operator new(0x58uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  result = sub_20C833FAC((uint64_t)(v8 + 2), *a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C833F94(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C8337C0(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C833FAC(uint64_t a1, _DWORD *a2)
{
  _DWORD *v4;

  v4 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v4 + 1, a2 + 1);
  sub_20C7F1078((_DWORD *)(a1 + 8), (uint64_t)(a2 + 2));
  *(_QWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_20C833FFC(_Unwind_Exception *a1)
{
  _DWORD *v1;
  _DWORD *v2;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(v1);
  _Unwind_Resume(a1);
}

void sub_20C83401C(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v14 = 0;
  v15 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v15;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v14 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v14;
  v10 = a1 + 16;
  sub_20C8340FC(a1, v5, &v15);
  v11 = v15;
  if (v15)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[73];
      if (v13 > v12)
        break;
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        goto LABEL_11;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v11 = 0;
LABEL_11:
    *a3 = v11;
  }
  else
  {
LABEL_9:
    *a3 = 0;
  }
  a3[1] = v10;
}

void sub_20C8340FC(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 8);
  __dmb(0xBu);
  v6 = a2 % v5;
  v7 = sub_20BEB4B94(a2 % v5);
  v8 = v6 - ((1 << v7) & 0xFFFFFFFFFFFFFFFELL);
  v9 = a1 + 8 * v7;
  v11 = *(_QWORD *)(v9 + 48);
  v10 = (uint64_t *)(v9 + 48);
  __dmb(0xBu);
  if (!v11 || (v12 = *v10, __dmb(0xBu), !*(_QWORD *)(v12 + 8 * v8)))
    sub_20C834190(a1, (unint64_t *)v6);
  v13 = *v10;
  __dmb(0xBu);
  *a3 = *(_QWORD *)(v13 + 8 * v8);
}

void sub_20C834190(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t **v7;
  uint64_t i;
  int v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;

  v4 = sub_20BF77DA0(a1, (unint64_t)a2);
  if (!sub_20BF77E2C(a1, v4))
    sub_20C834190(a1, v4);
  v5 = sub_20BEB4B94(v4);
  v6 = *(_QWORD *)(a1 + 8 * v5 + 48);
  __dmb(0xBu);
  v11 = *(unint64_t **)(v6 + 8 * (v4 - ((1 << v5) & 0x1FFFFFFFFFFFFFFELL)));
  v12 = 0;
  v13 = a2;
  v7 = &v13;
  for (i = 7; i != -1; --i)
  {
    v9 = *(unsigned __int8 *)v7;
    v7 = (unint64_t **)((char *)v7 + 1);
    *((_BYTE *)&v12 + i) = byte_20CA9F1BD[v9];
  }
  sub_20C834270(a1 + 16, &v11, v12 & 0xFFFFFFFFFFFFFFFELL, &v13);
  v10 = v13;
  sub_20BF6EE60(a1, (unint64_t)a2, &v10);
}

tbb::internal *sub_20C834270@<X0>(uint64_t a1@<X0>, unint64_t **a2@<X1>, unint64_t a3@<X2>, unint64_t **a4@<X8>)
{
  unint64_t *i;
  tbb::internal *result;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  i = (unint64_t *)**a2;
  result = (tbb::internal *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  *((_QWORD *)result + 73) = a3;
  *(_QWORD *)result = 0;
  if (i)
    goto LABEL_2;
LABEL_3:
  while (1)
  {
    v11 = *a2;
    *(_QWORD *)result = i;
    do
    {
      while (1)
      {
        v12 = __ldaxr(v11);
        if ((unint64_t *)v12 == i)
          break;
        __clrex();
        do
          v13 = __ldxr(v11);
        while (__stxr(v13, v11));
        if ((unint64_t *)v13 != i)
          goto LABEL_10;
      }
    }
    while (__stlxr((unint64_t)result, v11));
    v13 = (unint64_t)i;
LABEL_10:
    if (i == (unint64_t *)v13 || result == (tbb::internal *)v13)
      break;
    for (i = *a2; ; *a2 = i)
    {
      i = (unint64_t *)*i;
      if (!i)
        break;
LABEL_2:
      v10 = i[73];
      if (v10 > a3)
        goto LABEL_3;
      if (v10 == a3)
      {
        result = (tbb::internal *)sub_20C831BCC(a1, result);
        goto LABEL_21;
      }
    }
  }
  i = (unint64_t *)result;
LABEL_21:
  *a4 = i;
  return result;
}

_DWORD *sub_20C834350(_DWORD *a1, void *a2)
{
  sub_20C831790((uint64_t)(a1 + 2), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void sub_20C834384(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  unint64_t **v9;
  uint64_t i;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;

  v8 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v29 = 0;
  v30 = (unint64_t *)v8;
  v9 = &v30;
  for (i = 7; i != -1; --i)
  {
    v11 = *(unsigned __int8 *)v9;
    v9 = (unint64_t **)((char *)v9 + 1);
    *((_BYTE *)&v29 + i) = byte_20CA9F1BD[v11];
  }
  v12 = v29 | 1;
  sub_20C8324AC(a1, v8, &v30);
  v13 = a1 + 16;
  if (a3)
  {
    a3[73] = v12;
    *a3 = 0;
  }
  v14 = a2;
  while (1)
  {
    v15 = v30;
    v16 = (unint64_t *)*v30;
    if (*v30)
    {
      v17 = v16[73];
      while (1)
      {
        v18 = v16;
        if (v17 > v12)
          break;
        if (v17 == v12 && v16[1] == *v14)
        {
          if (a3)
            sub_20C831944(a1 + 16, (tbb::internal *)a3);
          *(_QWORD *)a4 = v16;
          *(_QWORD *)(a4 + 8) = v13;
          *(_BYTE *)(a4 + 16) = 0;
          return;
        }
        v30 = v16;
        v16 = (unint64_t *)*v16;
        if (!*v18)
        {
          v15 = v18;
          break;
        }
        v17 = v16[73];
        v15 = v18;
      }
    }
    if (!a3)
    {
      a3 = sub_20C8345A0(a1 + 16, v12, (uint64_t)a2);
      v14 = a3 + 1;
      v15 = v30;
    }
    *a3 = v16;
    do
    {
      while (1)
      {
        v19 = __ldaxr(v15);
        if ((unint64_t *)v19 == v16)
          break;
        __clrex();
        do
          v20 = __ldxr(v15);
        while (__stxr(v20, v15));
        if ((unint64_t *)v20 != v16)
          goto LABEL_23;
      }
    }
    while (__stlxr((unint64_t)a3, v15));
    v20 = (unint64_t)v16;
LABEL_23:
    if (v16 == (unint64_t *)v20 || a3 == (_QWORD *)v20)
      break;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = v13;
    *(_BYTE *)(a4 + 16) = 0;
  }
  v22 = (unint64_t *)(a1 + 24);
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 + 1, v22));
  *(_QWORD *)a4 = a3;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = 1;
  v26 = *(_QWORD *)(a1 + 8);
  v25 = a1 + 8;
  v24 = v26;
  __dmb(0xBu);
  if ((float)((float)v23 / (float)v26) > *(float *)(v25 + 36))
  {
    do
    {
      while (1)
      {
        v27 = __ldaxr((unint64_t *)v25);
        if (v27 != v24)
          break;
        if (!__stlxr(2 * v24, (unint64_t *)v25))
          return;
      }
      __clrex();
      do
        v28 = __ldxr((unint64_t *)v25);
      while (__stxr(v28, (unint64_t *)v25));
    }
    while (v28 == v24);
  }
}

_QWORD *sub_20C8345A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  sub_20C834614((uint64_t)(v5 + 1), a3);
  v5[73] = a2;
  *v5 = 0;
  return v5;
}

void sub_20C8345EC(void *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_begin_catch(a1);
  tbb::internal::deallocate_via_handler_v3(v1, v2);
  __cxa_rethrow();
}

void sub_20C834600(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C834614(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD6E54((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD6EA4(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C834670(a1 + 8, (__int16 *)(a2 + 8));
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  return a1;
}

void sub_20C83465C(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C834670(uint64_t a1, __int16 *a2)
{
  _QWORD *v4;
  uint64_t v6;

  *(_WORD *)a1 = *a2;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x18);
  v4[2] = 0;
  *v4 = 0;
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 44) = 1082130432;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 8) = 8;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v6 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v6);
  sub_20C83474C((__int16 *)a1, a2);
  return a1;
}

void sub_20C834738(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C8317C0(v1 + 16);
  _Unwind_Resume(a1);
}

float sub_20C83474C(__int16 *a1, __int16 *a2)
{
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 *v7;
  __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float result;
  uint64_t v14;

  if (a1 != a2)
  {
    v2 = 0;
    v3 = *a1;
    *a1 = *a2;
    *a2 = v3;
    v4 = *((_QWORD *)a1 + 3);
    v5 = *((_QWORD *)a1 + 4);
    v6 = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 4) = v6;
    *((_QWORD *)a2 + 3) = v4;
    *((_QWORD *)a2 + 4) = v5;
    v7 = a2 + 24;
    v8 = a1 + 24;
    do
    {
      v9 = *(_QWORD *)&v8[v2];
      __dmb(0xBu);
      v10 = *(_QWORD *)&v7[v2];
      __dmb(0xBu);
      *(_QWORD *)&v8[v2] = v10;
      __dmb(0xBu);
      *(_QWORD *)&v7[v2] = v9;
      v2 += 4;
    }
    while (v2 != 256);
    v14 = *((_QWORD *)a1 + 1);
    v11 = *((_QWORD *)a2 + 1);
    __dmb(0xBu);
    *((_QWORD *)a1 + 1) = v11;
    v12 = v14;
    __dmb(0xBu);
    *((_QWORD *)a2 + 1) = v12;
    result = *((float *)a1 + 11);
    *((_DWORD *)a1 + 11) = *((_DWORD *)a2 + 11);
    *((float *)a2 + 11) = result;
  }
  return result;
}

uint64_t sub_20C8347E4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v6;

  v6 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  sub_20C834670(a1 + 8, (__int16 *)a3);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a3 + 560);
  return a1;
}

void sub_20C834838(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83484C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD38A4((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD38DC(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C834670(a1 + 8, (__int16 *)(a2 + 8));
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  return a1;
}

void sub_20C834894(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C8348A8(_DWORD *a1, void *a2)
{
  sub_20C831B20((uint64_t)(a1 + 2), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void sub_20C8348DC(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  unint64_t **v9;
  uint64_t i;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;

  v8 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v29 = 0;
  v30 = (unint64_t *)v8;
  v9 = &v30;
  for (i = 7; i != -1; --i)
  {
    v11 = *(unsigned __int8 *)v9;
    v9 = (unint64_t **)((char *)v9 + 1);
    *((_BYTE *)&v29 + i) = byte_20CA9F1BD[v11];
  }
  v12 = v29 | 1;
  sub_20C8327E0(a1, v8, &v30);
  v13 = a1 + 16;
  if (a3)
  {
    a3[72] = v12;
    *a3 = 0;
  }
  v14 = a2;
  while (1)
  {
    v15 = v30;
    v16 = (unint64_t *)*v30;
    if (*v30)
    {
      v17 = v16[72];
      while (1)
      {
        v18 = v16;
        if (v17 > v12)
          break;
        if (v17 == v12 && v16[1] == *v14)
        {
          if (a3)
            sub_20C831A88(a1 + 16, (tbb::internal *)a3);
          *(_QWORD *)a4 = v16;
          *(_QWORD *)(a4 + 8) = v13;
          *(_BYTE *)(a4 + 16) = 0;
          return;
        }
        v30 = v16;
        v16 = (unint64_t *)*v16;
        if (!*v18)
        {
          v15 = v18;
          break;
        }
        v17 = v16[72];
        v15 = v18;
      }
    }
    if (!a3)
    {
      a3 = (_QWORD *)sub_20C834AF8(a1 + 16, v12, (uint64_t)a2);
      v14 = a3 + 1;
      v15 = v30;
    }
    *a3 = v16;
    do
    {
      while (1)
      {
        v19 = __ldaxr(v15);
        if ((unint64_t *)v19 == v16)
          break;
        __clrex();
        do
          v20 = __ldxr(v15);
        while (__stxr(v20, v15));
        if ((unint64_t *)v20 != v16)
          goto LABEL_23;
      }
    }
    while (__stlxr((unint64_t)a3, v15));
    v20 = (unint64_t)v16;
LABEL_23:
    if (v16 == (unint64_t *)v20 || a3 == (_QWORD *)v20)
      break;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = v13;
    *(_BYTE *)(a4 + 16) = 0;
  }
  v22 = (unint64_t *)(a1 + 24);
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 + 1, v22));
  *(_QWORD *)a4 = a3;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = 1;
  v26 = *(_QWORD *)(a1 + 8);
  v25 = a1 + 8;
  v24 = v26;
  __dmb(0xBu);
  if ((float)((float)v23 / (float)v26) > *(float *)(v25 + 36))
  {
    do
    {
      while (1)
      {
        v27 = __ldaxr((unint64_t *)v25);
        if (v27 != v24)
          break;
        if (!__stlxr(2 * v24, (unint64_t *)v25))
          return;
      }
      __clrex();
      do
        v28 = __ldxr((unint64_t *)v25);
      while (__stxr(v28, (unint64_t *)v25));
    }
    while (v28 == v24);
  }
}

uint64_t sub_20C834AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = tbb::internal::allocate_via_handler_v3((tbb::internal *)0x248);
  sub_20C834B6C((_DWORD *)(v5 + 8), a3);
  *(_QWORD *)(v5 + 576) = a2;
  *(_QWORD *)v5 = 0;
  return v5;
}

void sub_20C834B44(void *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_begin_catch(a1);
  tbb::internal::deallocate_via_handler_v3(v1, v2);
  __cxa_rethrow();
}

void sub_20C834B58(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_DWORD *sub_20C834B6C(_DWORD *a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD6E54(a1, (_DWORD *)a2);
  sub_20BFD6EA4(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C834BC0((uint64_t)(a1 + 2), (__int16 *)(a2 + 8));
  return a1;
}

void sub_20C834BAC(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C834BC0(uint64_t a1, __int16 *a2)
{
  _QWORD *v4;
  uint64_t v6;

  *(_WORD *)a1 = *a2;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  v4[73] = 0;
  *v4 = 0;
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 44) = 1082130432;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 8) = 8;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v6 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v6);
  sub_20C83474C((__int16 *)a1, a2);
  return a1;
}

void sub_20C834C88(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C831B50(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C834C9C(uint64_t a1, unint64_t a2, _WORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v11;

  *(_WORD *)a1 = *a3;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  v5[73] = 0;
  *v5 = 0;
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 44) = 1082130432;
  if (a2 <= 1)
    v6 = 1;
  else
    v6 = a2;
  v7 = 2 * v6 - 1;
  v8 = HIDWORD(v7) != 0;
  __dmb(0xBu);
  if (HIDWORD(v7))
    v7 >>= 32;
  v9 = 32 * v8;
  if (v7 >= 0x10000)
  {
    v7 >>= 16;
    v9 = (32 * v8) | 0x10;
  }
  if (v7 >= 0x100)
  {
    v7 >>= 8;
    v9 |= 8u;
  }
  if (v7 >= 0x10)
  {
    v7 >>= 4;
    v9 |= 4u;
  }
  if (v7 >= 4)
  {
    v7 >>= 2;
    v9 += 2;
  }
  *(_QWORD *)(a1 + 8) = 1 << (((v7 & 2) != 0) + v9);
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v11 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v11);
  return a1;
}

void sub_20C834DDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C831B50(v1 + 16);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C834DF0(_DWORD *a1, _DWORD *a2, __int16 *a3)
{
  _DWORD *v6;

  v6 = sub_20BFD6E54(a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  sub_20C834BC0((uint64_t)(a1 + 2), a3);
  return a1;
}

void sub_20C834E3C(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C834E50(_DWORD *a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD38A4(a1, (_DWORD *)a2);
  sub_20BFD38DC(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C834BC0((uint64_t)(a1 + 2), (__int16 *)(a2 + 8));
  return a1;
}

void sub_20C834E90(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C834EA4(_DWORD *a1, void *a2)
{
  sub_20C831C64((uint64_t)(a1 + 2), a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void sub_20C834ED8(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  unint64_t **v9;
  uint64_t i;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;

  v8 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v29 = 0;
  v30 = (unint64_t *)v8;
  v9 = &v30;
  for (i = 7; i != -1; --i)
  {
    v11 = *(unsigned __int8 *)v9;
    v9 = (unint64_t **)((char *)v9 + 1);
    *((_BYTE *)&v29 + i) = byte_20CA9F1BD[v11];
  }
  v12 = v29 | 1;
  sub_20C8340FC(a1, v8, &v30);
  v13 = a1 + 16;
  if (a3)
  {
    a3[73] = v12;
    *a3 = 0;
  }
  v14 = a2;
  while (1)
  {
    v15 = v30;
    v16 = (unint64_t *)*v30;
    if (*v30)
    {
      v17 = v16[73];
      while (1)
      {
        v18 = v16;
        if (v17 > v12)
          break;
        if (v17 == v12 && v16[1] == *v14)
        {
          if (a3)
            sub_20C831BCC(a1 + 16, (tbb::internal *)a3);
          *(_QWORD *)a4 = v16;
          *(_QWORD *)(a4 + 8) = v13;
          *(_BYTE *)(a4 + 16) = 0;
          return;
        }
        v30 = v16;
        v16 = (unint64_t *)*v16;
        if (!*v18)
        {
          v15 = v18;
          break;
        }
        v17 = v16[73];
        v15 = v18;
      }
    }
    if (!a3)
    {
      a3 = sub_20C8350F4(a1 + 16, v12, (uint64_t)a2);
      v14 = a3 + 1;
      v15 = v30;
    }
    *a3 = v16;
    do
    {
      while (1)
      {
        v19 = __ldaxr(v15);
        if ((unint64_t *)v19 == v16)
          break;
        __clrex();
        do
          v20 = __ldxr(v15);
        while (__stxr(v20, v15));
        if ((unint64_t *)v20 != v16)
          goto LABEL_23;
      }
    }
    while (__stlxr((unint64_t)a3, v15));
    v20 = (unint64_t)v16;
LABEL_23:
    if (v16 == (unint64_t *)v20 || a3 == (_QWORD *)v20)
      break;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = v13;
    *(_BYTE *)(a4 + 16) = 0;
  }
  v22 = (unint64_t *)(a1 + 24);
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 + 1, v22));
  *(_QWORD *)a4 = a3;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = 1;
  v26 = *(_QWORD *)(a1 + 8);
  v25 = a1 + 8;
  v24 = v26;
  __dmb(0xBu);
  if ((float)((float)v23 / (float)v26) > *(float *)(v25 + 36))
  {
    do
    {
      while (1)
      {
        v27 = __ldaxr((unint64_t *)v25);
        if (v27 != v24)
          break;
        if (!__stlxr(2 * v24, (unint64_t *)v25))
          return;
      }
      __clrex();
      do
        v28 = __ldxr((unint64_t *)v25);
      while (__stxr(v28, (unint64_t *)v25));
    }
    while (v28 == v24);
  }
}

_QWORD *sub_20C8350F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x250);
  sub_20C835168((uint64_t)(v5 + 1), a3);
  v5[73] = a2;
  *v5 = 0;
  return v5;
}

void sub_20C835140(void *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_begin_catch(a1);
  tbb::internal::deallocate_via_handler_v3(v1, v2);
  __cxa_rethrow();
}

void sub_20C835154(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C835168(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD6E54((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD6EA4(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C8351C4(a1 + 8, (__int16 *)(a2 + 8));
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  return a1;
}

void sub_20C8351B0(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8351C4(uint64_t a1, __int16 *a2)
{
  _QWORD *v4;
  uint64_t v6;

  *(_WORD *)a1 = *a2;
  *(_QWORD *)(a1 + 24) = 0;
  v4 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x88);
  v4[16] = 0;
  *v4 = 0;
  *(_QWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 44) = 1082130432;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 8) = 8;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v6 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v6);
  sub_20C83474C((__int16 *)a1, a2);
  return a1;
}

void sub_20C83528C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C831C94(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8352A0(uint64_t a1, unint64_t a2, _WORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  uint64_t v11;

  *(_WORD *)a1 = *a3;
  *(_QWORD *)(a1 + 24) = 0;
  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x88);
  v5[16] = 0;
  *v5 = 0;
  *(_QWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 44) = 1082130432;
  if (a2 <= 1)
    v6 = 1;
  else
    v6 = a2;
  v7 = 2 * v6 - 1;
  v8 = HIDWORD(v7) != 0;
  __dmb(0xBu);
  if (HIDWORD(v7))
    v7 >>= 32;
  v9 = 32 * v8;
  if (v7 >= 0x10000)
  {
    v7 >>= 16;
    v9 = (32 * v8) | 0x10;
  }
  if (v7 >= 0x100)
  {
    v7 >>= 8;
    v9 |= 8u;
  }
  if (v7 >= 0x10)
  {
    v7 >>= 4;
    v9 |= 4u;
  }
  if (v7 >= 4)
  {
    v7 >>= 2;
    v9 += 2;
  }
  *(_QWORD *)(a1 + 8) = 1 << (((v7 & 2) != 0) + v9);
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  v11 = *(_QWORD *)(a1 + 32);
  sub_20BF6EE60(a1, 0, &v11);
  return a1;
}

void sub_20C8353E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C831C94(v1 + 16);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8353F4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v6;

  v6 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  sub_20C8351C4(a1 + 8, (__int16 *)a3);
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a3 + 560);
  return a1;
}

void sub_20C835448(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83545C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD38A4((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD38DC(v4 + 1, (_DWORD *)(a2 + 4));
  sub_20C8351C4(a1 + 8, (__int16 *)(a2 + 8));
  *(_BYTE *)(a1 + 568) = *(_BYTE *)(a2 + 568);
  return a1;
}

void sub_20C8354A4(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

void sub_20C8354B8(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5 = bswap64(0x9E3779B97F4A7C55 * (*a2 & 0xFFFFFFFFFFFFFFF8));
  v14 = 0;
  v15 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v15;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v14 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v14;
  v10 = a1 + 16;
  sub_20C835598(a1, v5, &v15);
  v11 = v15;
  if (v15)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[16];
      if (v13 > v12)
        break;
      if (v13 == v12 && (v11[1] & 0xFFFFFFFFFFFFFFF8) == (*a2 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_11;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v11 = 0;
LABEL_11:
    *a3 = v11;
  }
  else
  {
LABEL_9:
    *a3 = 0;
  }
  a3[1] = v10;
}

void sub_20C835598(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 8);
  __dmb(0xBu);
  v6 = a2 % v5;
  v7 = sub_20BEB4B94(a2 % v5);
  v8 = v6 - ((1 << v7) & 0xFFFFFFFFFFFFFFFELL);
  v9 = a1 + 8 * v7;
  v11 = *(_QWORD *)(v9 + 48);
  v10 = (uint64_t *)(v9 + 48);
  __dmb(0xBu);
  if (!v11 || (v12 = *v10, __dmb(0xBu), !*(_QWORD *)(v12 + 8 * v8)))
    sub_20C83562C(a1, (unint64_t *)v6);
  v13 = *v10;
  __dmb(0xBu);
  *a3 = *(_QWORD *)(v13 + 8 * v8);
}

void sub_20C83562C(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t **v7;
  uint64_t i;
  int v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;

  v4 = sub_20BF77DA0(a1, (unint64_t)a2);
  if (!sub_20BF77E2C(a1, v4))
    sub_20C83562C(a1, v4);
  v5 = sub_20BEB4B94(v4);
  v6 = *(_QWORD *)(a1 + 8 * v5 + 48);
  __dmb(0xBu);
  v11 = *(unint64_t **)(v6 + 8 * (v4 - ((1 << v5) & 0x1FFFFFFFFFFFFFFELL)));
  v12 = 0;
  v13 = a2;
  v7 = &v13;
  for (i = 7; i != -1; --i)
  {
    v9 = *(unsigned __int8 *)v7;
    v7 = (unint64_t **)((char *)v7 + 1);
    *((_BYTE *)&v12 + i) = byte_20CA9F1BD[v9];
  }
  sub_20C83570C(a1 + 16, &v11, v12 & 0xFFFFFFFFFFFFFFFELL, &v13);
  v10 = v13;
  sub_20BF6EE60(a1, (unint64_t)a2, &v10);
}

tbb::internal *sub_20C83570C@<X0>(uint64_t a1@<X0>, unint64_t **a2@<X1>, unint64_t a3@<X2>, unint64_t **a4@<X8>)
{
  unint64_t *i;
  tbb::internal *result;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;

  i = (unint64_t *)**a2;
  result = (tbb::internal *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x88);
  *((_QWORD *)result + 16) = a3;
  *(_QWORD *)result = 0;
  if (i)
    goto LABEL_2;
LABEL_3:
  while (1)
  {
    v11 = *a2;
    *(_QWORD *)result = i;
    do
    {
      while (1)
      {
        v12 = __ldaxr(v11);
        if ((unint64_t *)v12 == i)
          break;
        __clrex();
        do
          v13 = __ldxr(v11);
        while (__stxr(v13, v11));
        if ((unint64_t *)v13 != i)
          goto LABEL_10;
      }
    }
    while (__stlxr((unint64_t)result, v11));
    v13 = (unint64_t)i;
LABEL_10:
    if (i == (unint64_t *)v13 || result == (tbb::internal *)v13)
      break;
    for (i = *a2; ; *a2 = i)
    {
      i = (unint64_t *)*i;
      if (!i)
        break;
LABEL_2:
      v10 = i[16];
      if (v10 > a3)
        goto LABEL_3;
      if (v10 == a3)
      {
        result = (tbb::internal *)sub_20C831D10(a1, result);
        goto LABEL_21;
      }
    }
  }
  i = (unint64_t *)result;
LABEL_21:
  *a4 = i;
  return result;
}

void sub_20C8357EC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  unint64_t **v9;
  uint64_t i;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t *v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;

  v8 = bswap64(0x9E3779B97F4A7C55 * (*a2 & 0xFFFFFFFFFFFFFFF8));
  v29 = 0;
  v30 = (unint64_t *)v8;
  v9 = &v30;
  for (i = 7; i != -1; --i)
  {
    v11 = *(unsigned __int8 *)v9;
    v9 = (unint64_t **)((char *)v9 + 1);
    *((_BYTE *)&v29 + i) = byte_20CA9F1BD[v11];
  }
  v12 = v29 | 1;
  sub_20C835598(a1, v8, &v30);
  v13 = a1 + 16;
  if (a3)
  {
    a3[16] = v12;
    *a3 = 0;
  }
  v14 = a2;
  while (1)
  {
    v15 = v30;
    v16 = (unint64_t *)*v30;
    if (*v30)
    {
      v17 = v16[16];
      while (1)
      {
        v18 = v16;
        if (v17 > v12)
          break;
        if (v17 == v12 && (v16[1] & 0xFFFFFFFFFFFFFFF8) == (*v14 & 0xFFFFFFFFFFFFFFF8))
        {
          if (a3)
            sub_20C831D10(a1 + 16, (tbb::internal *)a3);
          *(_QWORD *)a4 = v16;
          *(_QWORD *)(a4 + 8) = v13;
          *(_BYTE *)(a4 + 16) = 0;
          return;
        }
        v30 = v16;
        v16 = (unint64_t *)*v16;
        if (!*v18)
        {
          v15 = v18;
          break;
        }
        v17 = v16[16];
        v15 = v18;
      }
    }
    if (!a3)
    {
      a3 = sub_20C835A08(a1 + 16, v12, a2);
      v14 = a3 + 1;
      v15 = v30;
    }
    *a3 = (uint64_t)v16;
    do
    {
      while (1)
      {
        v19 = __ldaxr(v15);
        if ((unint64_t *)v19 == v16)
          break;
        __clrex();
        do
          v20 = __ldxr(v15);
        while (__stxr(v20, v15));
        if ((unint64_t *)v20 != v16)
          goto LABEL_23;
      }
    }
    while (__stlxr((unint64_t)a3, v15));
    v20 = (unint64_t)v16;
LABEL_23:
    if (v16 == (unint64_t *)v20 || a3 == (uint64_t *)v20)
      break;
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = v13;
    *(_BYTE *)(a4 + 16) = 0;
  }
  v22 = (unint64_t *)(a1 + 24);
  do
    v23 = __ldaxr(v22);
  while (__stlxr(v23 + 1, v22));
  *(_QWORD *)a4 = a3;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = 1;
  v26 = *(_QWORD *)(a1 + 8);
  v25 = a1 + 8;
  v24 = v26;
  __dmb(0xBu);
  if ((float)((float)v23 / (float)v26) > *(float *)(v25 + 36))
  {
    do
    {
      while (1)
      {
        v27 = __ldaxr((unint64_t *)v25);
        if (v27 != v24)
          break;
        if (!__stlxr(2 * v24, (unint64_t *)v25))
          return;
      }
      __clrex();
      do
        v28 = __ldxr((unint64_t *)v25);
      while (__stxr(v28, (unint64_t *)v25));
    }
    while (v28 == v24);
  }
}

_QWORD *sub_20C835A08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v5;

  v5 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x88);
  sub_20C835A7C((uint64_t)(v5 + 1), a3);
  v5[16] = a2;
  *v5 = 0;
  return v5;
}

void sub_20C835A54(void *a1)
{
  uint64_t v1;
  void *v2;

  __cxa_begin_catch(a1);
  tbb::internal::deallocate_via_handler_v3(v1, v2);
  __cxa_rethrow();
}

void sub_20C835A68(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C835A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C7F1078((_DWORD *)(a1 + 8), (uint64_t)(a2 + 1));
  sub_20C7F1078((_DWORD *)(a1 + 64), (uint64_t)(a2 + 8));
  return a1;
}

void sub_20C835AF8(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned int *v4;
  unsigned int v5;

  sub_20C7E0EB0(v2);
  if ((*v1 & 7) != 0)
  {
    v4 = (unsigned int *)(*v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C835B34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C7F1078((_DWORD *)(a1 + 8), a3);
  sub_20C7F1078((_DWORD *)(a1 + 64), a3 + 56);
  return a1;
}

void sub_20C835BB0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned int *v4;
  unsigned int v5;

  sub_20C7E0EB0(v2);
  if ((*v1 & 7) != 0)
  {
    v4 = (unsigned int *)(*v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C835BEC(uint64_t a1, _QWORD *a2)
{
  *(_QWORD *)a1 = *a2;
  *a2 = 0;
  sub_20C7F1078((_DWORD *)(a1 + 8), (uint64_t)(a2 + 1));
  sub_20C7F1078((_DWORD *)(a1 + 64), (uint64_t)(a2 + 8));
  return a1;
}

void sub_20C835C3C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unsigned int *v4;
  unsigned int v5;

  sub_20C7E0EB0(v2);
  if ((*v1 & 7) != 0)
  {
    v4 = (unsigned int *)(*v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

void sub_20C835C78(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v14 = 0;
  v15 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v15;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v14 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v14;
  v10 = a1 + 16;
  sub_20C832C50(a1, v5, &v15);
  v11 = v15;
  if (v15)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[2];
      if (v13 > v12)
        break;
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        goto LABEL_11;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v11 = 0;
LABEL_11:
    *a3 = v11;
  }
  else
  {
LABEL_9:
    *a3 = 0;
  }
  a3[1] = v10;
}

uint64_t sub_20C835D58@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;

  v9 = a2;
  v10 = result;
  if (a2 != a4 || a3 != a5)
  {
    do
    {
      v12 = v9;
      do
        v9 = *(_QWORD *)v9;
      while (v9 && (*(_BYTE *)(v9 + 584) & 1) == 0);
      result = sub_20C8366D8(v10, v12, a3, (uint64_t)&v14);
    }
    while (v9 != a4 || a3 != a5);
    v9 = a4;
  }
  *a6 = v9;
  a6[1] = a3;
  return result;
}

void sub_20C835DE8(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v15 = 0;
  v16 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v16;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v15 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v15;
  v10 = a1 + 16;
  sub_20C8324AC(a1, v5, &v16);
  v11 = v16;
  if (v16)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[73];
      if (v13 > v12)
      {
        v11 = 0;
        v14 = 0;
        goto LABEL_11;
      }
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        break;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v14 = v11;
    do
      v14 = (_QWORD *)*v14;
    while (v14 && (v14[73] & 1) == 0);
LABEL_11:
    *a3 = v11;
    a3[1] = v10;
    a3[2] = v14;
  }
  else
  {
LABEL_9:
    *a3 = 0;
    a3[1] = v10;
    a3[2] = 0;
  }
  a3[3] = v10;
}

uint64_t sub_20C835EEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;

  v9 = a2;
  v10 = result;
  if (a2 != a4 || a3 != a5)
  {
    do
    {
      v12 = v9;
      do
        v9 = *(_QWORD *)v9;
      while (v9 && (*(_BYTE *)(v9 + 16) & 1) == 0);
      result = sub_20C836080(v10, v12, a3, (uint64_t)&v14);
    }
    while (v9 != a4 || a3 != a5);
    v9 = a4;
  }
  *a6 = v9;
  a6[1] = a3;
  return result;
}

void sub_20C835F7C(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v15 = 0;
  v16 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v16;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v15 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v15;
  v10 = a1 + 16;
  sub_20C832C50(a1, v5, &v16);
  v11 = v16;
  if (v16)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[2];
      if (v13 > v12)
      {
        v11 = 0;
        v14 = 0;
        goto LABEL_11;
      }
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        break;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v14 = v11;
    do
      v14 = (_QWORD *)*v14;
    while (v14 && (v14[2] & 1) == 0);
LABEL_11:
    *a3 = v11;
    a3[1] = v10;
    a3[2] = v14;
  }
  else
  {
LABEL_9:
    *a3 = 0;
    a3[1] = v10;
    a3[2] = 0;
  }
  a3[3] = v10;
}

uint64_t sub_20C836080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t ***v9;
  uint64_t **v10;
  uint64_t **v12;
  uint64_t ***v13;

  sub_20C832C50(a1, bswap64(0x9E3779B97F4A7C55* (*(unsigned int *)(a2 + 12)+ ((*(unsigned int *)(a2 + 12)+ (unint64_t)*(unsigned int *)(a2 + 8)+ (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))* (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))) >> 1))), &v12);
  result = a1 + 16;
  v9 = (uint64_t ***)v12;
  if (v12)
  {
    while (1)
    {
      v10 = *v9;
      if (*v9 == (uint64_t **)a2 && result == a3)
        break;
      v12 = *v9;
      v9 = (uint64_t ***)v10;
      if (!v10)
        goto LABEL_7;
    }
    v13 = v9;
    return sub_20C836130((uint64_t ***)a2, result, &v13, (uint64_t ***)a4);
  }
  else
  {
LABEL_7:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = result;
  }
  return result;
}

uint64_t sub_20C836130@<X0>(uint64_t ***this@<X2>, uint64_t a2@<X0>, uint64_t ****a3@<X1>, uint64_t ***a4@<X8>)
{
  uint64_t **v6;
  uint64_t result;

  v6 = *this;
  **a3 = *this;
  result = sub_20C83183C(a2, (tbb::internal *)this);
  --*(_QWORD *)(a2 + 8);
  for (; v6; v6 = (uint64_t **)*v6)
  {
    if (((_BYTE)v6[2] & 1) != 0)
      break;
  }
  *a4 = v6;
  a4[1] = (uint64_t **)a2;
  return result;
}

uint64_t sub_20C836190@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;

  v9 = a2;
  v10 = result;
  if (a2 != a4 || a3 != a5)
  {
    do
    {
      v12 = v9;
      do
        v9 = *(_QWORD *)v9;
      while (v9 && (*(_BYTE *)(v9 + 576) & 1) == 0);
      result = sub_20C836324(v10, v12, a3, (uint64_t)&v14);
    }
    while (v9 != a4 || a3 != a5);
    v9 = a4;
  }
  *a6 = v9;
  a6[1] = a3;
  return result;
}

void sub_20C836220(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v15 = 0;
  v16 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v16;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v15 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v15;
  v10 = a1 + 16;
  sub_20C8327E0(a1, v5, &v16);
  v11 = v16;
  if (v16)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[72];
      if (v13 > v12)
      {
        v11 = 0;
        v14 = 0;
        goto LABEL_11;
      }
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        break;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v14 = v11;
    do
      v14 = (_QWORD *)*v14;
    while (v14 && (v14[72] & 1) == 0);
LABEL_11:
    *a3 = v11;
    a3[1] = v10;
    a3[2] = v14;
  }
  else
  {
LABEL_9:
    *a3 = 0;
    a3[1] = v10;
    a3[2] = 0;
  }
  a3[3] = v10;
}

uint64_t sub_20C836324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t ***v9;
  uint64_t **v10;
  uint64_t **v12;
  uint64_t ***v13;

  sub_20C8327E0(a1, bswap64(0x9E3779B97F4A7C55* (*(unsigned int *)(a2 + 12)+ ((*(unsigned int *)(a2 + 12)+ (unint64_t)*(unsigned int *)(a2 + 8)+ (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))* (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))) >> 1))), &v12);
  result = a1 + 16;
  v9 = (uint64_t ***)v12;
  if (v12)
  {
    while (1)
    {
      v10 = *v9;
      if (*v9 == (uint64_t **)a2 && result == a3)
        break;
      v12 = *v9;
      v9 = (uint64_t ***)v10;
      if (!v10)
        goto LABEL_7;
    }
    v13 = v9;
    return sub_20C8363D4((uint64_t ***)a2, result, &v13, (uint64_t ***)a4);
  }
  else
  {
LABEL_7:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = result;
  }
  return result;
}

uint64_t sub_20C8363D4@<X0>(uint64_t ***this@<X2>, uint64_t a2@<X0>, uint64_t ****a3@<X1>, uint64_t ***a4@<X8>)
{
  uint64_t **v6;
  uint64_t result;

  v6 = *this;
  **a3 = *this;
  result = sub_20C831A88(a2, (tbb::internal *)this);
  --*(_QWORD *)(a2 + 8);
  for (; v6; v6 = (uint64_t **)*v6)
  {
    if (((_BYTE)v6[72] & 1) != 0)
      break;
  }
  *a4 = v6;
  a4[1] = (uint64_t **)a2;
  return result;
}

uint64_t sub_20C836434@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;

  v9 = a2;
  v10 = result;
  if (a2 != a4 || a3 != a5)
  {
    do
    {
      v12 = v9;
      do
        v9 = *(_QWORD *)v9;
      while (v9 && (*(_BYTE *)(v9 + 584) & 1) == 0);
      result = sub_20C8365C8(v10, v12, a3, (uint64_t)&v14);
    }
    while (v9 != a4 || a3 != a5);
    v9 = a4;
  }
  *a6 = v9;
  a6[1] = a3;
  return result;
}

void sub_20C8364C4(uint64_t a1@<X0>, unsigned int *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t i;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v15 = 0;
  v16 = (_QWORD *)v5;
  v6 = (unsigned __int8 *)&v16;
  for (i = 7; i != -1; --i)
  {
    v8 = *v6++;
    *((_BYTE *)&v15 + i) = byte_20CA9F1BD[v8];
  }
  v9 = v15;
  v10 = a1 + 16;
  sub_20C8340FC(a1, v5, &v16);
  v11 = v16;
  if (v16)
  {
    v12 = v9 | 1;
    while (1)
    {
      v13 = v11[73];
      if (v13 > v12)
      {
        v11 = 0;
        v14 = 0;
        goto LABEL_11;
      }
      if (v13 == v12 && v11[1] == *(_QWORD *)a2)
        break;
      v11 = (_QWORD *)*v11;
      if (!v11)
        goto LABEL_9;
    }
    v14 = v11;
    do
      v14 = (_QWORD *)*v14;
    while (v14 && (v14[73] & 1) == 0);
LABEL_11:
    *a3 = v11;
    a3[1] = v10;
    a3[2] = v14;
  }
  else
  {
LABEL_9:
    *a3 = 0;
    a3[1] = v10;
    a3[2] = 0;
  }
  a3[3] = v10;
}

uint64_t sub_20C8365C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t ***v9;
  uint64_t **v10;
  uint64_t **v12;
  uint64_t ***v13;

  sub_20C8340FC(a1, bswap64(0x9E3779B97F4A7C55* (*(unsigned int *)(a2 + 12)+ ((*(unsigned int *)(a2 + 12)+ (unint64_t)*(unsigned int *)(a2 + 8)+ (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))* (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))) >> 1))), &v12);
  result = a1 + 16;
  v9 = (uint64_t ***)v12;
  if (v12)
  {
    while (1)
    {
      v10 = *v9;
      if (*v9 == (uint64_t **)a2 && result == a3)
        break;
      v12 = *v9;
      v9 = (uint64_t ***)v10;
      if (!v10)
        goto LABEL_7;
    }
    v13 = v9;
    return sub_20C836678((uint64_t ***)a2, result, &v13, (uint64_t ***)a4);
  }
  else
  {
LABEL_7:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = result;
  }
  return result;
}

uint64_t sub_20C836678@<X0>(uint64_t ***this@<X2>, uint64_t a2@<X0>, uint64_t ****a3@<X1>, uint64_t ***a4@<X8>)
{
  uint64_t **v6;
  uint64_t result;

  v6 = *this;
  **a3 = *this;
  result = sub_20C831BCC(a2, (tbb::internal *)this);
  --*(_QWORD *)(a2 + 8);
  for (; v6; v6 = (uint64_t **)*v6)
  {
    if (((_BYTE)v6[73] & 1) != 0)
      break;
  }
  *a4 = v6;
  a4[1] = (uint64_t **)a2;
  return result;
}

uint64_t sub_20C8366D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  uint64_t ***v9;
  uint64_t **v10;
  uint64_t **v12;
  uint64_t ***v13;

  sub_20C8324AC(a1, bswap64(0x9E3779B97F4A7C55* (*(unsigned int *)(a2 + 12)+ ((*(unsigned int *)(a2 + 12)+ (unint64_t)*(unsigned int *)(a2 + 8)+ (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))* (*(unsigned int *)(a2 + 12) + (unint64_t)*(unsigned int *)(a2 + 8))) >> 1))), &v12);
  result = a1 + 16;
  v9 = (uint64_t ***)v12;
  if (v12)
  {
    while (1)
    {
      v10 = *v9;
      if (*v9 == (uint64_t **)a2 && result == a3)
        break;
      v12 = *v9;
      v9 = (uint64_t ***)v10;
      if (!v10)
        goto LABEL_7;
    }
    v13 = v9;
    return sub_20C836788((uint64_t ***)a2, result, &v13, (uint64_t ***)a4);
  }
  else
  {
LABEL_7:
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = result;
  }
  return result;
}

uint64_t sub_20C836788@<X0>(uint64_t ***this@<X2>, uint64_t a2@<X0>, uint64_t ****a3@<X1>, uint64_t ***a4@<X8>)
{
  uint64_t **v6;
  uint64_t result;

  v6 = *this;
  **a3 = *this;
  result = sub_20C831944(a2, (tbb::internal *)this);
  --*(_QWORD *)(a2 + 8);
  for (; v6; v6 = (uint64_t **)*v6)
  {
    if (((_BYTE)v6[73] & 1) != 0)
      break;
  }
  *a4 = v6;
  a4[1] = (uint64_t **)a2;
  return result;
}

_DWORD *sub_20C8367E8(_DWORD *a1)
{
  return sub_20BFD265C(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType::~HdDependencySchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  void **v10;

  v10 = (void **)((char *)this + 24);
  sub_20BEEB2B8(&v10);
  v2 = *((_QWORD *)this + 2);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType::HdDependencySchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int **v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "dependedOnPrimPath", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "dependedOnDataSourceLocator", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "affectedDataSourceLocator", 0);
  v3 = *this;
  v23 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v23 = v4;
  }
  v6 = *v2;
  v24 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v24 = v7;
  }
  v9 = this[2];
  v25 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v25 = v10;
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  v12 = (unsigned int *)operator new(0x18uLL);
  v13 = 0;
  this[3] = v12;
  this[4] = v12;
  this[5] = v12 + 6;
  do
  {
    v14 = (&v23)[v13];
    *(_QWORD *)v12 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        *(_QWORD *)v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    v12 += 2;
  }
  while (v13 != 3);
  v17 = (unsigned int **)&v26;
  this[4] = v12;
  do
  {
    v19 = (uint64_t)*--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  while (v17 != &v23);
  return (pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType *)this;
}

void sub_20C836A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;

  sub_20BEEB2B8(&a9);
  v18 = &a14;
  while (1)
  {
    v20 = *--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v18 == (uint64_t *)&a11)
    {
      if ((*v16 & 7) != 0)
      {
        v23 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      if ((*v15 & 7) != 0)
      {
        v25 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stlxr(v26 - 2, v25));
      }
      if ((*v14 & 7) != 0)
      {
        v27 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdDependencySchema::GetDependedOnPrimPath(pxrInternal__aapl__pxrReserved__::HdDependencySchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
  if (!v4)
    v4 = sub_20C8370A8(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
  v9 = *v4;
  if (((unint64_t)*v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v9 = v5;
  }
  sub_20C7F80A0((uint64_t *)this, a2);
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
}

void pxrInternal__aapl__pxrReserved__::HdDependencySchema::GetDependedOnDataSourceLocator(pxrInternal__aapl__pxrReserved__::HdDependencySchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
  if (!v4)
    v4 = sub_20C8370A8(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
  v5 = v4[1];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C836CB0((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C836CB0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C837130((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdDependencySchema::GetAffectedDataSourceLocator(pxrInternal__aapl__pxrReserved__::HdDependencySchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
  if (!v4)
    v4 = sub_20C8370A8(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
  v5 = v4[2];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C836CB0((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdDependencySchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v7;
  unsigned int **v9;
  unint64_t v10;
  unsigned int **v11;
  unsigned int **v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  __int128 v18;
  _OWORD v19[3];
  uint64_t v20[3];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  v7 = &v21;
  if (*a1)
  {
    v9 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
    if (!v9)
      v9 = sub_20C8370A8(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
    sub_20BF32220(v20, v9);
    sub_20BDE881C(v19, a1);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  if (*a2)
  {
    v11 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
    if (!v11)
      v11 = sub_20C8370A8(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
    sub_20BF32220(&v20[v10], v11 + 1);
    sub_20BDE881C(&v19[v10++], a2);
  }
  if (*a3)
  {
    v12 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
    if (!v12)
      v12 = sub_20C8370A8(&pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens);
    sub_20BF32220(&v20[v10], v12 + 2);
    sub_20BDE881C(&v19[v10++], a3);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v10, v20, (uint64_t *)v19, &v18);
  *a4 = v18;
  for (i = 2; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v19[i]);
  do
  {
    v15 = *--v7;
    v14 = v15;
    if ((v15 & 7) != 0)
    {
      v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
  }
  while (v7 != v20);
}

void sub_20C836FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char *v17;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;

  for (i = 32; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v21 = *((_QWORD *)v17 - 1);
    v17 -= 8;
    v20 = v21;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    if (v17 == &a17)
      _Unwind_Resume(a1);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDependencySchema::Builder::SetDependedOnPrimPath(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDependencySchema::Builder::SetDependedOnDataSourceLocator(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDependencySchema::Builder::SetAffectedDataSourceLocator(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdDependencySchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdDependencySchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDependencySchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, a2);
}

unsigned int **sub_20C8370A8(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C8370F0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType::~HdDependencySchemaTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C8370F0()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdDependencySchemaTokens_StaticTokenType::HdDependencySchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C83711C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_20C837130@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C5501C8, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::RprimDirtyBitsToLocatorSet(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a4)
{
  int v5;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v7;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v8;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  pxrInternal__aapl__pxrReserved__::HdCapsuleSchema *v10;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v11;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v12;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v13;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v14;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v15;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v16;
  pxrInternal__aapl__pxrReserved__::HdCylinderSchema *v17;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v18;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v19;
  pxrInternal__aapl__pxrReserved__::HdMeshSchema *v20;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v21;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v22;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v23;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *ReprSelectorLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *WidthsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v26;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v27;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *CullStyleLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v29;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v30;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v31;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v32;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *NormalsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *PointsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DoubleSidedLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *GeomSubsetsLocator;
  pxrInternal__aapl__pxrReserved__::HdMeshSchema *v37;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *SubdivisionSchemeLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v39;

  if (!a3)
    return this;
  v5 = (int)a2;
  if ((_DWORD)a2 == -3)
  {
    v6 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(this);
    return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v6);
  }
  v7 = this;
  v8 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (v8)
  {
    if (((unsigned __int16)a2 & 0x100) == 0)
      goto LABEL_8;
  }
  else
  {
    v8 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((v5 & 0x100) == 0)
      goto LABEL_8;
  }
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 8) & 0xFFFFFFFFFFFFFFF8))
  {
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchema::GetDefaultLocator(v8);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DefaultLocator);
  }
LABEL_8:
  v10 = (pxrInternal__aapl__pxrReserved__::HdCapsuleSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (v10)
  {
    if ((v5 & 0x40) == 0)
      goto LABEL_12;
  }
  else
  {
    v10 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((v5 & 0x40) == 0)
      goto LABEL_12;
  }
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v10 & 0xFFFFFFFFFFFFFFF8))
  {
    v11 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCapsuleSchema::GetDefaultLocator(v10);
    v10 = (pxrInternal__aapl__pxrReserved__::HdCapsuleSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v11);
  }
LABEL_12:
  if ((v5 & 0x200000) != 0)
  {
    v12 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCategoriesSchema::GetDefaultLocator(v10);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v12);
  }
  v13 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (v13)
  {
    if ((v5 & 0x40) == 0)
      goto LABEL_18;
  }
  else
  {
    v13 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((v5 & 0x40) == 0)
      goto LABEL_18;
  }
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v13 + 2) & 0xFFFFFFFFFFFFFFF8))
  {
    v14 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdConeSchema::GetDefaultLocator(v13);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v14);
  }
LABEL_18:
  v15 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (v15)
  {
    if ((v5 & 0x40) == 0)
      goto LABEL_22;
  }
  else
  {
    v15 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((v5 & 0x40) == 0)
      goto LABEL_22;
  }
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v15 + 3) & 0xFFFFFFFFFFFFFFF8))
  {
    v16 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCubeSchema::GetDefaultLocator(v15);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v16);
  }
LABEL_22:
  v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (v17)
  {
    if ((v5 & 0x40) == 0)
      goto LABEL_26;
  }
  else
  {
    v17 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((v5 & 0x40) == 0)
      goto LABEL_26;
  }
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v17 + 4) & 0xFFFFFFFFFFFFFFF8))
  {
    v18 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCylinderSchema::GetDefaultLocator(v17);
    v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v18);
  }
LABEL_26:
  if ((v5 & 0x10) != 0)
  {
    ReprSelectorLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator(v17);
  }
  else
  {
    if ((v5 & 0x2000) != 0)
    {
      CullStyleLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetCullStyleLocator(v17);
      v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, CullStyleLocator);
      if ((v5 & 0x40000) == 0)
      {
LABEL_29:
        if ((v5 & 8) == 0)
          goto LABEL_30;
        goto LABEL_66;
      }
    }
    else if ((v5 & 0x40000) == 0)
    {
      goto LABEL_29;
    }
    ReprSelectorLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetReprSelectorLocator(v17);
  }
  v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, ReprSelectorLocator);
  if ((v5 & 8) == 0)
  {
LABEL_30:
    if ((v5 & 0x40) == 0)
      goto LABEL_31;
    goto LABEL_67;
  }
LABEL_66:
  v29 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetDefaultLocator(v17);
  v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v29);
  if ((v5 & 0x40) == 0)
  {
LABEL_31:
    if ((v5 & 0x10000) == 0)
      goto LABEL_32;
    goto LABEL_68;
  }
LABEL_67:
  v30 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetDefaultLocator(v17);
  v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v30);
  if ((v5 & 0x10000) == 0)
  {
LABEL_32:
    if ((v5 & 0x20000) == 0)
      goto LABEL_33;
    goto LABEL_69;
  }
LABEL_68:
  v31 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator(v17);
  v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v31);
  if ((v5 & 0x20000) == 0)
  {
LABEL_33:
    if ((v5 & 0x80) == 0)
      goto LABEL_35;
    goto LABEL_34;
  }
LABEL_69:
  v32 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator(v17);
  v17 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v32);
  if ((v5 & 0x80) != 0)
  {
LABEL_34:
    v19 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::GetDefaultLocator(v17);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v19);
  }
LABEL_35:
  v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v20)
    v20 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v20 + 6) & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_43;
  if ((v5 & 0x1000) == 0)
  {
    if ((v5 & 0x100) == 0)
      goto LABEL_40;
LABEL_77:
    GeomSubsetsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetGeomSubsetsLocator(v20);
    v37 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, GeomSubsetsLocator);
    SubdivisionSchemeLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetSubdivisionSchemeLocator(v37);
    v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, SubdivisionSchemeLocator);
    if ((v5 & 0x4000) == 0)
    {
LABEL_41:
      if ((v5 & 0x100) == 0)
        goto LABEL_43;
      goto LABEL_42;
    }
    goto LABEL_78;
  }
  DoubleSidedLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetDoubleSidedLocator(v20);
  v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DoubleSidedLocator);
  if ((v5 & 0x100) != 0)
    goto LABEL_77;
LABEL_40:
  if ((v5 & 0x4000) == 0)
    goto LABEL_41;
LABEL_78:
  v39 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdSubdivisionTagsSchema::GetDefaultLocator(v20);
  v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v39);
  if ((v5 & 0x100) != 0)
  {
LABEL_42:
    v21 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshTopologySchema::GetDefaultLocator(v20);
    v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v21);
  }
LABEL_43:
  if ((v5 & 0x40) != 0)
  {
    WidthsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(v20);
    goto LABEL_74;
  }
  if ((v5 & 0x800) == 0)
  {
    if ((v5 & 0x20) == 0)
      goto LABEL_46;
LABEL_72:
    PointsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetPointsLocator(v20);
    v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, PointsLocator);
    if ((v5 & 0x8000) == 0)
    {
LABEL_47:
      if ((v5 & 0x80000) == 0)
        goto LABEL_49;
      goto LABEL_48;
    }
    goto LABEL_73;
  }
  NormalsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetNormalsLocator(v20);
  v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, NormalsLocator);
  if ((v5 & 0x20) != 0)
    goto LABEL_72;
LABEL_46:
  if ((v5 & 0x8000) == 0)
    goto LABEL_47;
LABEL_73:
  WidthsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetWidthsLocator(v20);
LABEL_74:
  v20 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, WidthsLocator);
  if ((v5 & 0x80000) != 0)
  {
LABEL_48:
    v22 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPurposeSchema::GetDefaultLocator(v20);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v22);
  }
LABEL_49:
  this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (this)
  {
    if ((v5 & 0x40) != 0)
      goto LABEL_51;
  }
  else
  {
    this = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((v5 & 0x40) != 0)
    {
LABEL_51:
      if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)this + 11) & 0xFFFFFFFFFFFFFFF8))
      {
        v23 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdSphereSchema::GetDefaultLocator(this);
        this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v23);
      }
    }
  }
  if ((v5 & 0x400) != 0)
  {
    v26 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetDefaultLocator(this);
    this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v26);
    if ((v5 & 0x400000) == 0)
    {
LABEL_55:
      if ((v5 & 0x200) == 0)
        return this;
LABEL_61:
      v6 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(this);
      return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v6);
    }
  }
  else if ((v5 & 0x400000) == 0)
  {
    goto LABEL_55;
  }
  v27 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchema::GetDefaultLocator(this);
  this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v27);
  if ((v5 & 0x200) != 0)
    goto LABEL_61;
  return this;
}

void pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::SprimDirtyBitsToLocatorSet(pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a4)
{
  int v5;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdCameraSchema *v8;
  unint64_t IsLight;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v11;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v12;
  pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema *v13;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  unsigned __int8 v20;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v21;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v22;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v23;
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *v24;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v25;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v26;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v27;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v28;
  unsigned __int8 v29;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *GlslKernelLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *InputComputationsLocator;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v32;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *InputValuesLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DispatchCountLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *ElementCountLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v36;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *EnabledLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *PriorityLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *FilePathLocator;
  pxrInternal__aapl__pxrReserved__::HdCoordSysSchema *v40;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v41;
  pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens_StaticTokenType *v42;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v43;
  _QWORD v44[8];

  v44[7] = *MEMORY[0x24BDAC8D0];
  if (!a3)
    return;
  v5 = (int)a2;
  v7 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v7)
    v7 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 16) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 0xC) == 0)
      return;
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMaterialSchema::GetDefaultLocator(v7);
    goto LABEL_64;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdCameraSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v8)
    v8 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 17) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 1) != 0)
    {
      v20 = atomic_load((unsigned __int8 *)&qword_25498E130);
      if ((v20 & 1) == 0)
      {
        v40 = (pxrInternal__aapl__pxrReserved__::HdCoordSysSchema *)__cxa_guard_acquire(&qword_25498E130);
        if ((_DWORD)v40)
        {
          v41 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCoordSysSchema::GetDefaultLocator(v40);
          v42 = (pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens);
          if (!v42)
            v42 = sub_20C7F76D8(&pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens);
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append(v41, (pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens_StaticTokenType *)((char *)v42 + 8), dword_25498E0F8);
          __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E0F8, &dword_20BDBC000);
          __cxa_guard_release(&qword_25498E130);
        }
      }
      v8 = (pxrInternal__aapl__pxrReserved__::HdCameraSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)dword_25498E0F8);
    }
    if ((v5 & 2) == 0)
      return;
    goto LABEL_55;
  }
  v8 = (pxrInternal__aapl__pxrReserved__::HdCameraSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v8)
    v8 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 14) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 0xE) != 0)
    {
      v22 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCameraSchema::GetDefaultLocator(v8);
      v8 = (pxrInternal__aapl__pxrReserved__::HdCameraSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v22);
    }
    if ((v5 & 1) == 0)
      return;
LABEL_55:
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(v8);
LABEL_64:
    v28 = DefaultLocator;
    goto LABEL_65;
  }
  IsLight = pxrInternal__aapl__pxrReserved__::HdPrimTypeIsLight(this, a2);
  if ((IsLight & 1) != 0)
    goto LABEL_45;
  IsLight = atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!IsLight)
    IsLight = (unint64_t)sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)(IsLight + 48) & 0xFFFFFFFFFFFFFFF8))
  {
LABEL_45:
    if ((v5 & 0xE) != 0)
    {
      v21 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLightSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdLightSchema *)IsLight);
      IsLight = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v21);
    }
    if ((v5 & 0x10) != 0)
    {
      v23 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMaterialSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdMaterialSchema *)IsLight);
      IsLight = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v23);
      if ((v5 & 2) == 0)
      {
LABEL_49:
        if ((v5 & 1) == 0)
          goto LABEL_50;
        goto LABEL_62;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_49;
    }
    v24 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v24)
      v24 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v24 + 6) & 0xFFFFFFFFFFFFFFF8))
    {
      v25 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(v24);
      v24 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v25);
    }
    v26 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetDefaultLocator(v24);
    IsLight = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v26);
    if ((v5 & 1) == 0)
    {
LABEL_50:
      if ((v5 & 0x10000) == 0)
        return;
LABEL_63:
      DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *)IsLight);
      goto LABEL_64;
    }
LABEL_62:
    v27 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdXformSchema *)IsLight);
    IsLight = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v27);
    if ((v5 & 0x10000) == 0)
      return;
    goto LABEL_63;
  }
  v10 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v10)
    v10 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v10 + 15) & 0xFFFFFFFFFFFFFFF8))
  {
    v29 = atomic_load((unsigned __int8 *)&qword_25498E170);
    if ((v29 & 1) == 0 && __cxa_guard_acquire(&qword_25498E170))
    {
      v43 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if (!v43)
        v43 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E138, (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)((char *)v43 + 120));
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E138, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E170);
    }
    if (!v5)
      return;
    v28 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E138;
LABEL_65:
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v28);
    return;
  }
  v11 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v11)
    v11 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v11 + 35) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 0x40) != 0)
    {
      DispatchCountLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDispatchCountLocator(v11);
      v11 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DispatchCountLocator);
      if ((v5 & 4) == 0)
      {
LABEL_71:
        if ((v5 & 0x20) == 0)
        {
LABEL_73:
          if ((v5 & 9) != 0)
          {
            InputComputationsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputComputationsLocator(v11);
            v32 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, InputComputationsLocator);
            InputValuesLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputValuesLocator(v32);
            v11 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, InputValuesLocator);
          }
          if ((v5 & 2) == 0)
            return;
          DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetOutputsLocator(v11);
          goto LABEL_64;
        }
LABEL_72:
        GlslKernelLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetGlslKernelLocator(v11);
        v11 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, GlslKernelLocator);
        goto LABEL_73;
      }
    }
    else if ((v5 & 4) == 0)
    {
      goto LABEL_71;
    }
    ElementCountLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetElementCountLocator(v11);
    v11 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, ElementCountLocator);
    if ((v5 & 0x20) == 0)
      goto LABEL_73;
    goto LABEL_72;
  }
  v12 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v12)
    v12 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v12 + 20) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 4) == 0)
      return;
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetDefaultLocator(v12);
    goto LABEL_64;
  }
  v13 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v13)
    v13 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v13 + 21) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 4) != 0)
    {
      v36 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema::GetDefaultLocator(v13);
LABEL_86:
      v13 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v36);
    }
LABEL_87:
    if ((v5 & 0x400) == 0)
      return;
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetDefaultLocator(v13);
    goto LABEL_64;
  }
  v13 = (pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v13)
    v13 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v13 + 22) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 4) != 0)
    {
      v36 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetDefaultLocator(v13);
      goto LABEL_86;
    }
    goto LABEL_87;
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v14)
    v14 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v14 + 23) & 0xFFFFFFFFFFFFFFF8))
  {
    if ((v5 & 1) != 0)
    {
      EnabledLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetEnabledLocator(v14);
      v14 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, EnabledLocator);
      if ((v5 & 2) == 0)
      {
LABEL_92:
        if ((v5 & 4) == 0)
          goto LABEL_93;
        goto LABEL_97;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_92;
    }
    PriorityLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetPriorityLocator(v14);
    v14 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, PriorityLocator);
    if ((v5 & 4) == 0)
    {
LABEL_93:
      if ((v5 & 8) == 0)
        return;
LABEL_98:
      DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetConstantsLocator(v14);
      goto LABEL_64;
    }
LABEL_97:
    FilePathLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetFilePathLocator(v14);
    v14 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, FilePathLocator);
    if ((v5 & 8) == 0)
      return;
    goto LABEL_98;
  }
  v15 = (_QWORD *)atomic_load(&qword_25498E178);
  if (!v15)
    v15 = sub_20C8393C0(&qword_25498E178);
  v16 = sub_20BF2B388(v15, this);
  v17 = v16;
  if (atomic_load(&qword_25498E178))
  {
    if (v16)
    {
LABEL_37:
      sub_20C837C58((uint64_t)(v17 + 3), v5, (uint64_t)a3);
      return;
    }
  }
  else
  {
    sub_20C8393C0(&qword_25498E178);
    if (v17)
      goto LABEL_37;
  }
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v44);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v44);
    sub_20C7E0EB0((uint64_t)v44);
  }
}

void sub_20C837C18(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E170);
  _Unwind_Resume(a1);
}

uint64_t sub_20C837C58(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  int v6;

  v6 = a2;
  v5 = a3;
  v3 = *(_QWORD *)(a1 + 24);
  if (!v3)
    sub_20BE9E974();
  return (*(uint64_t (**)(uint64_t, int *, uint64_t *))(*(_QWORD *)v3 + 48))(v3, &v6, &v5);
}

pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::InstancerDirtyBitsToLocatorSet(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a4)
{
  int v5;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v7;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v9;

  if (!a3)
    return this;
  v5 = (int)a2;
  if ((_DWORD)a2 == -3)
  {
    v6 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(this);
    return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v6);
  }
  if ((a2 & 0x10000) == 0)
  {
    if ((a2 & 0x20000) == 0)
      goto LABEL_6;
LABEL_10:
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator(this);
    this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DefaultLocator);
    if ((v5 & 0x40) == 0)
    {
LABEL_7:
      if ((v5 & 0x200) == 0)
        return this;
LABEL_12:
      v6 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(this);
      return (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v6);
    }
    goto LABEL_11;
  }
  v7 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator(this);
  this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v7);
  if ((v5 & 0x20000) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 0x40) == 0)
    goto LABEL_7;
LABEL_11:
  v9 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(this);
  this = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, v9);
  if ((v5 & 0x200) != 0)
    goto LABEL_12;
  return this;
}

unint64_t pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::BprimDirtyBitsToLocatorSet(unint64_t this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a4)
{
  char v5;
  pxrInternal__aapl__pxrReserved__ *v6;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *ActiveLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *NamespacedSettingsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *RenderProductsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *IncludedPurposesLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *MaterialBindingPurposesLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *RenderingColorSpaceLocator;

  if (!a3)
    return this;
  v5 = (char)a2;
  v6 = (pxrInternal__aapl__pxrReserved__ *)this;
  this = atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!this)
    this = (unint64_t)sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)(this + 288) & 0xFFFFFFFFFFFFFFF8))
  {
    this = atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!this)
      this = (unint64_t)sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*(_QWORD *)v6 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)(this + 296) & 0xFFFFFFFFFFFFFFF8))
    {
      this = pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeIsVolumeField(v6, a2);
      if ((v5 & 2) != 0 && (_DWORD)this)
      {
        DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchema *)this);
        return (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DefaultLocator);
      }
      return this;
    }
    if ((v5 & 2) != 0)
    {
      ActiveLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetActiveLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
      this = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, ActiveLocator);
      if ((v5 & 4) == 0)
      {
LABEL_15:
        if ((v5 & 8) == 0)
          goto LABEL_16;
        goto LABEL_23;
      }
    }
    else if ((v5 & 4) == 0)
    {
      goto LABEL_15;
    }
    NamespacedSettingsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetNamespacedSettingsLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
    this = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, NamespacedSettingsLocator);
    if ((v5 & 8) == 0)
    {
LABEL_16:
      if ((v5 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_24;
    }
LABEL_23:
    RenderProductsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetRenderProductsLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
    this = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, RenderProductsLocator);
    if ((v5 & 0x10) == 0)
    {
LABEL_17:
      if ((v5 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_25;
    }
LABEL_24:
    IncludedPurposesLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetIncludedPurposesLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
    this = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, IncludedPurposesLocator);
    if ((v5 & 0x20) == 0)
    {
LABEL_18:
      if ((v5 & 0x40) == 0)
        goto LABEL_19;
      goto LABEL_26;
    }
LABEL_25:
    MaterialBindingPurposesLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetMaterialBindingPurposesLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
    this = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, MaterialBindingPurposesLocator);
    if ((v5 & 0x40) == 0)
    {
LABEL_19:
      if ((v5 & 0x80) == 0)
        return this;
      goto LABEL_27;
    }
LABEL_26:
    RenderingColorSpaceLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetRenderingColorSpaceLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
    this = (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, RenderingColorSpaceLocator);
    if ((v5 & 0x80) == 0)
      return this;
LABEL_27:
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetShutterIntervalLocator((pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)this);
    return (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DefaultLocator);
  }
  if ((v5 & 1) != 0)
  {
    DefaultLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderBufferSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdRenderBufferSchema *)this);
    return (unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::append(a3, DefaultLocator);
  }
  return this;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::RprimLocatorSetToDirtyBits(pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v5;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v6;
  void *v7;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v9;
  int v10;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *GeomSubsetsLocator;
  pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchema *v12;
  int v13;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  pxrInternal__aapl__pxrReserved__::HdCapsuleSchema *v15;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v16;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v17;
  int v18;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v19;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v20;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v21;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v22;
  pxrInternal__aapl__pxrReserved__::HdCylinderSchema *v23;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v24;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v25;
  uint64_t HasPrefix;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v27;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v28;
  uint64_t *v29;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **CullStyleLocator;
  int v31;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **ReprSelectorLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v33;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v34;
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema *v35;
  int v36;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v37;
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *v38;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v39;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *v40;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v41;
  pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema *v42;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v43;
  int v44;
  pxrInternal__aapl__pxrReserved__::HdMeshSchema *v45;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DoubleSidedLocator;
  pxrInternal__aapl__pxrReserved__::HdMeshSchema *v47;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v48;
  pxrInternal__aapl__pxrReserved__::HdMeshSchema *v49;
  int v50;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *SubdivisionSchemeLocator;
  pxrInternal__aapl__pxrReserved__::HdMeshSchema *v52;
  int v53;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *SubdivisionTagsLocator;
  pxrInternal__aapl__pxrReserved__::HdMeshTopologySchema *v55;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v56;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v57;
  uint64_t v58;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v59;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v60;
  uint64_t *v61;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **NormalsLocator;
  int v63;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **PointsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **WidthsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v66;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v67;
  int v68;
  pxrInternal__aapl__pxrReserved__::HdSphereSchema *v69;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v70;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v71;
  pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchema *v72;
  unsigned int v73;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v74;
  pxrInternal__aapl__pxrReserved__::HdXformSchema *v75;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v76;
  uint64_t *v77;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v78;

  v5 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(a2);
  v78 = v5;
  v6 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  if (v5 == v6)
    return 0;
  v7 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(v6);
  if ((sub_20C826E38((uint64_t *)v5, (uint64_t)v7) & 1) != 0)
    return 4294967293;
  v77 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  v9 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v9)
    v9 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v9 + 8) & 0xFFFFFFFFFFFFFFF8))
  {
    GeomSubsetsLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdBasisCurvesSchema::GetGeomSubsetsLocator(v9);
    v12 = (pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchema *)sub_20C8384B4(GeomSubsetsLocator, &v77, (uint64_t **)&v78, 1);
    v13 = (int)v12;
    DefaultLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdBasisCurvesTopologySchema::GetDefaultLocator(v12);
    if (sub_20C8384B4(DefaultLocator, &v77, (uint64_t **)&v78, 1) | v13)
      v10 = 256;
    else
      v10 = 0;
  }
  else
  {
    v10 = 0;
  }
  v15 = (pxrInternal__aapl__pxrReserved__::HdCapsuleSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v15)
    v15 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v15 & 0xFFFFFFFFFFFFFFF8))
  {
    v16 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCapsuleSchema::GetDefaultLocator(v15);
    v15 = (pxrInternal__aapl__pxrReserved__::HdCapsuleSchema *)sub_20C8384B4(v16, &v77, (uint64_t **)&v78, 1);
    if ((_DWORD)v15)
      v10 |= 0x40u;
  }
  v17 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCategoriesSchema::GetDefaultLocator(v15);
  if (sub_20C8384B4(v17, &v77, (uint64_t **)&v78, 1))
    v18 = v10 | 0x200000;
  else
    v18 = v10;
  v19 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v19)
    v19 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v19 + 2) & 0xFFFFFFFFFFFFFFF8))
  {
    v20 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdConeSchema::GetDefaultLocator(v19);
    if (sub_20C8384B4(v20, &v77, (uint64_t **)&v78, 1))
      v18 |= 0x40u;
  }
  v21 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v21)
    v21 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v21 + 3) & 0xFFFFFFFFFFFFFFF8))
  {
    v22 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCubeSchema::GetDefaultLocator(v21);
    if (sub_20C8384B4(v22, &v77, (uint64_t **)&v78, 1))
      v18 |= 0x40u;
  }
  v23 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v23)
    v23 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v23 + 4) & 0xFFFFFFFFFFFFFFF8))
  {
    v24 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCylinderSchema::GetDefaultLocator(v23);
    v23 = (pxrInternal__aapl__pxrReserved__::HdCylinderSchema *)sub_20C8384B4(v24, &v77, (uint64_t **)&v78, 1);
    if ((_DWORD)v23)
      v18 |= 0x40u;
  }
  v25 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator(v23);
  HasPrefix = sub_20C8384B4(v25, &v77, (uint64_t **)&v78, 0);
  if ((_DWORD)HasPrefix)
  {
    v27 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *)HasPrefix);
    v28 = v78;
    HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v27, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v78);
    if ((HasPrefix & 1) != 0)
    {
      v18 |= 0x42010u;
    }
    else
    {
      v29 = v77;
      while (1)
      {
        CullStyleLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetCullStyleLocator((pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *)HasPrefix);
        HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v28, CullStyleLocator);
        if ((HasPrefix & 1) != 0)
        {
          v31 = 0x2000;
        }
        else
        {
          ReprSelectorLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetReprSelectorLocator((pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *)HasPrefix);
          HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v28, ReprSelectorLocator);
          v31 = (_DWORD)HasPrefix ? 0x40000 : 16;
        }
        v18 |= v31;
        v28 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v28 + 56);
        if (v28 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v29)
          break;
        v33 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *)HasPrefix);
        HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(v28, v33);
        if ((HasPrefix & 1) == 0)
          goto LABEL_48;
      }
      v28 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v29;
LABEL_48:
      v78 = v28;
    }
  }
  v34 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdExtentSchema *)HasPrefix);
  v35 = (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema *)sub_20C8384B4(v34, &v77, (uint64_t **)&v78, 1);
  if ((_DWORD)v35)
    v36 = v18 | 8;
  else
    v36 = v18;
  v37 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetDefaultLocator(v35);
  v38 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *)sub_20C8384B4(v37, &v77, (uint64_t **)&v78, 1);
  if ((_DWORD)v38)
    v36 |= 0x40u;
  v39 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator(v38);
  v40 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *)sub_20C8384B4(v39, &v77, (uint64_t **)&v78, 1);
  if ((_DWORD)v40)
    v36 |= 0x10000u;
  v41 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator(v40);
  v42 = (pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema *)sub_20C8384B4(v41, &v77, (uint64_t **)&v78, 1);
  if ((_DWORD)v42)
    v36 |= 0x20000u;
  v43 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMaterialBindingsSchema::GetDefaultLocator(v42);
  if (sub_20C8384B4(v43, &v77, (uint64_t **)&v78, 1))
    v44 = v36 | 0x80;
  else
    v44 = v36;
  v45 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v45)
    v45 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v45 + 6) & 0xFFFFFFFFFFFFFFF8))
  {
    DoubleSidedLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetDoubleSidedLocator(v45);
    v47 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)sub_20C8384B4(DoubleSidedLocator, &v77, (uint64_t **)&v78, 1);
    if ((_DWORD)v47)
      v44 |= 0x1000u;
    v48 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetGeomSubsetsLocator(v47);
    v49 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)sub_20C8384B4(v48, &v77, (uint64_t **)&v78, 1);
    v50 = (int)v49;
    SubdivisionSchemeLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetSubdivisionSchemeLocator(v49);
    v52 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)sub_20C8384B4(SubdivisionSchemeLocator, &v77, (uint64_t **)&v78, 1);
    if (v52 | v50)
      v53 = v44 | 0x100;
    else
      v53 = v44;
    SubdivisionTagsLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshSchema::GetSubdivisionTagsLocator(v52);
    v55 = (pxrInternal__aapl__pxrReserved__::HdMeshTopologySchema *)sub_20C8384B4(SubdivisionTagsLocator, &v77, (uint64_t **)&v78, 1);
    if ((_DWORD)v55)
      v53 |= 0x4000u;
    v56 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMeshTopologySchema::GetDefaultLocator(v55);
    v45 = (pxrInternal__aapl__pxrReserved__::HdMeshSchema *)sub_20C8384B4(v56, &v77, (uint64_t **)&v78, 1);
    if ((_DWORD)v45)
      v44 = v53 | 0x100;
    else
      v44 = v53;
  }
  v57 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(v45);
  v58 = sub_20C8384B4(v57, &v77, (uint64_t **)&v78, 0);
  if ((_DWORD)v58)
  {
    v59 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)v58);
    v60 = v78;
    v58 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v59, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v78);
    if ((v58 & 1) != 0)
    {
      v44 |= 0x8860u;
    }
    else
    {
      v61 = v77;
      while (1)
      {
        NormalsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetNormalsLocator((pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)v58);
        v58 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v60, NormalsLocator);
        if ((v58 & 1) != 0)
        {
          v63 = 2048;
        }
        else
        {
          PointsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetPointsLocator((pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)v58);
          v58 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v60, PointsLocator);
          if ((v58 & 1) != 0)
          {
            v63 = 32;
          }
          else
          {
            WidthsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetWidthsLocator((pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)v58);
            v58 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v60, WidthsLocator);
            v63 = (_DWORD)v58 ? 0x8000 : 64;
          }
        }
        v44 |= v63;
        v60 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v60 + 56);
        if (v60 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v61)
          break;
        v66 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)v58);
        v58 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(v60, v66);
        if ((v58 & 1) == 0)
          goto LABEL_89;
      }
      v60 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v61;
LABEL_89:
      v78 = v60;
    }
  }
  v67 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPurposeSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdPurposeSchema *)v58);
  if (sub_20C8384B4(v67, &v77, (uint64_t **)&v78, 1))
    v68 = v44 | 0x80000;
  else
    v68 = v44;
  v69 = (pxrInternal__aapl__pxrReserved__::HdSphereSchema *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v69)
    v69 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v69 + 11) & 0xFFFFFFFFFFFFFFF8))
  {
    v70 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdSphereSchema::GetDefaultLocator(v69);
    v69 = (pxrInternal__aapl__pxrReserved__::HdSphereSchema *)sub_20C8384B4(v70, &v77, (uint64_t **)&v78, 1);
    if ((_DWORD)v69)
      v68 |= 0x40u;
  }
  v71 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetDefaultLocator(v69);
  v72 = (pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchema *)sub_20C8384B4(v71, &v77, (uint64_t **)&v78, 1);
  if ((_DWORD)v72)
    v73 = v68 | 0x400;
  else
    v73 = v68;
  v74 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVolumeFieldBindingSchema::GetDefaultLocator(v72);
  v75 = (pxrInternal__aapl__pxrReserved__::HdXformSchema *)sub_20C8384B4(v74, &v77, (uint64_t **)&v78, 1);
  if ((_DWORD)v75)
    v73 |= 0x400000u;
  v76 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(v75);
  if (sub_20C8384B4(v76, &v77, (uint64_t **)&v78, 1))
    return v73 | 0x200;
  else
    return v73;
}

uint64_t sub_20C8384B4(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a1, uint64_t **a2, uint64_t **a3, char a4)
{
  uint64_t *v5;
  char v9;

  v5 = *a3;
  if (*a3 == *a2)
  {
    v9 = 0;
  }
  else
  {
    v9 = 0;
    do
    {
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v5, a1))
      {
        v9 = 1;
        if ((a4 & 1) == 0)
          return v9 & 1;
      }
      else if ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::operator<((uint64_t *)a1, *a3) & 1) != 0)
      {
        return v9 & 1;
      }
      v5 = *a3 + 7;
      *a3 = v5;
    }
    while (v5 != *a2);
  }
  return v9 & 1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::SprimLocatorSetToDirtyBits(pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3)
{
  const pxrInternal__aapl__pxrReserved__::TfToken *v5;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v7;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v8;
  _BOOL8 IsLight;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v10;
  pxrInternal__aapl__pxrReserved__::HdLightSchema *v11;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v12;
  pxrInternal__aapl__pxrReserved__::HdMaterialSchema *v13;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v14;
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *v15;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v16;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *v17;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v18;
  pxrInternal__aapl__pxrReserved__::HdXformSchema *v19;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v21;
  unsigned __int8 v23;
  pxrInternal__aapl__pxrReserved__::HdXformSchema *v24;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v25;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v26;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v27;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v28;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v29;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v30;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v31;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v32;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v38;
  unsigned __int8 v39;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v40;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v41;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v42;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v43;
  _BOOL8 HasPrefix;
  unsigned int v45;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v46;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v47;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *v48;
  uint64_t *v49;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **DispatchCountLocator;
  _BOOL8 v51;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **ElementCountLocator;
  _BOOL8 v53;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **GlslKernelLocator;
  _BOOL8 v55;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **InputValuesLocator;
  _BOOL8 v57;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **InputComputationsLocator;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **OutputsLocator;
  _BOOL8 v60;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v61;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v62;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v63;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v64;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *v65;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v66;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v67;
  _BOOL8 v68;
  unsigned int v69;
  uint64_t *v70;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **EnabledLocator;
  _BOOL8 v72;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **PriorityLocator;
  _BOOL8 v74;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **FilePathLocator;
  _BOOL8 v76;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **ConstantsLocator;
  _BOOL8 v78;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v79;
  int v80;
  pxrInternal__aapl__pxrReserved__::HdCoordSysSchema *v81;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens_StaticTokenType *v83;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v84;
  unsigned int v85;
  uint64_t *v86;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v87;
  _QWORD v88[8];

  v88[7] = *MEMORY[0x24BDAC8D0];
  v87 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(a2);
  if (v87 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2))
    return 0;
  v86 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  v85 = 0;
  v6 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v6)
    v6 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v6 + 16) & 0xFFFFFFFFFFFFFFF8))
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v7)
      v7 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 17) & 0xFFFFFFFFFFFFFFF8))
    {
      v23 = atomic_load((unsigned __int8 *)&qword_25498E1B8);
      if ((v23 & 1) == 0)
      {
        v81 = (pxrInternal__aapl__pxrReserved__::HdCoordSysSchema *)__cxa_guard_acquire(&qword_25498E1B8);
        if ((_DWORD)v81)
        {
          DefaultLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCoordSysSchema::GetDefaultLocator(v81);
          v83 = (pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens);
          if (!v83)
            v83 = sub_20C7F76D8(&pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens);
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append(DefaultLocator, (pxrInternal__aapl__pxrReserved__::HdCoordSysSchemaTokens_StaticTokenType *)((char *)v83 + 8), dword_25498E180);
          __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E180, &dword_20BDBC000);
          __cxa_guard_release(&qword_25498E1B8);
        }
      }
      v24 = (pxrInternal__aapl__pxrReserved__::HdXformSchema *)sub_20C8384B4((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)dword_25498E180, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v24)
        v85 |= 1u;
      v25 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(v24);
      if (!sub_20C8384B4(v25, &v86, (uint64_t **)&v87, 1))
        return v85;
      return v85 | 2;
    }
    v8 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v8)
      v8 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v8 + 14) & 0xFFFFFFFFFFFFFFF8))
    {
      v26 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdCameraSchema::GetDefaultLocator(v8);
      v19 = (pxrInternal__aapl__pxrReserved__::HdXformSchema *)sub_20C8384B4(v26, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v19)
        v85 |= 0xEu;
LABEL_33:
      v27 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(v19);
      if (sub_20C8384B4(v27, &v86, (uint64_t **)&v87, 1))
        return v85 | 1;
      return v85;
    }
    IsLight = pxrInternal__aapl__pxrReserved__::HdPrimTypeIsLight(this, v5);
    if (IsLight)
    {
      v10 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *)IsLight);
      v11 = (pxrInternal__aapl__pxrReserved__::HdLightSchema *)sub_20C8384B4(v10, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v11)
        v85 |= 0x10000u;
      v12 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdLightSchema::GetDefaultLocator(v11);
      v13 = (pxrInternal__aapl__pxrReserved__::HdMaterialSchema *)sub_20C8384B4(v12, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v13)
        v85 |= 0xEu;
      v14 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMaterialSchema::GetDefaultLocator(v13);
      v15 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)sub_20C8384B4(v14, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v15)
        v85 |= 0x10u;
      v16 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(v15);
      v17 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *)sub_20C8384B4(v16, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v17)
        v85 |= 2u;
      v18 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetDefaultLocator(v17);
      v19 = (pxrInternal__aapl__pxrReserved__::HdXformSchema *)sub_20C8384B4(v18, &v86, (uint64_t **)&v87, 1);
      if ((_DWORD)v19)
        v85 |= 2u;
      goto LABEL_33;
    }
    v28 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v28)
      v28 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v28 + 15) & 0xFFFFFFFFFFFFFFF8))
    {
      v29 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if (!v29)
        v29 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v29 + 35) & 0xFFFFFFFFFFFFFFF8))
      {
        v40 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v29);
        v41 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)sub_20C8384B4(v40, &v86, (uint64_t **)&v87, 0);
        if (!(_DWORD)v41)
          return v85;
        v42 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v41);
        v43 = v87;
        HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v42, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v87);
        v45 = v85;
        if (!HasPrefix)
        {
          v49 = v86;
          do
          {
            DispatchCountLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDispatchCountLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)HasPrefix);
            v51 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v43, DispatchCountLocator);
            if (v51)
              v45 |= 0x40u;
            ElementCountLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetElementCountLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)v51);
            v53 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v43, ElementCountLocator);
            if (v53)
              v45 |= 4u;
            GlslKernelLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetGlslKernelLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)v53);
            v55 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v43, GlslKernelLocator);
            if (v55)
              v45 |= 0x20u;
            InputValuesLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputValuesLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)v55);
            v57 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v43, InputValuesLocator);
            if (v57
              || (InputComputationsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputComputationsLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)v57),
                  v57 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v43, InputComputationsLocator)))
            {
              v45 |= 9u;
            }
            OutputsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetOutputsLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)v57);
            v60 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v43, OutputsLocator);
            if (v60)
              v45 |= 2u;
            v43 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v43 + 56);
            if (v43 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v49)
              break;
            v61 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)v60);
            HasPrefix = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(v43, v61);
          }
          while (HasPrefix);
          return v45;
        }
        return v85 | 0x6F;
      }
      v30 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if (!v30)
        v30 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v30 + 20) & 0xFFFFFFFFFFFFFFF8))
      {
        v46 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetDefaultLocator(v30);
        if (!sub_20C8384B4(v46, &v86, (uint64_t **)&v87, 1))
          return v85;
        return v85 | 4;
      }
      v31 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if (!v31)
        v31 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v31 + 21) & 0xFFFFFFFFFFFFFFF8))
      {
        v47 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdSampleFilterSchema::GetDefaultLocator(v31);
        v48 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *)sub_20C8384B4(v47, &v86, (uint64_t **)&v87, 1);
        if ((_DWORD)v48)
          v85 |= 4u;
      }
      else
      {
        v32 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
        if (!v32)
          v32 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
        if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)v32 + 22) & 0xFFFFFFFFFFFFFFF8))
        {
          v33 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
          if (!v33)
            v33 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
          if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v33 + 23) & 0xFFFFFFFFFFFFFFF8))
          {
            v64 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(v33);
            v65 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)sub_20C8384B4(v64, &v86, (uint64_t **)&v87, 0);
            if (!(_DWORD)v65)
              return v85;
            v66 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(v65);
            v67 = v87;
            v68 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v66, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)v87);
            v69 = v85;
            if (!v68)
            {
              v70 = v86;
              do
              {
                EnabledLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetEnabledLocator((pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)v68);
                v72 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v67, EnabledLocator);
                v69 |= v72;
                PriorityLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetPriorityLocator((pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)v72);
                v74 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v67, PriorityLocator);
                if (v74)
                  v69 |= 2u;
                FilePathLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetFilePathLocator((pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)v74);
                v76 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v67, FilePathLocator);
                if (v76)
                  v69 |= 4u;
                ConstantsLocator = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetConstantsLocator((pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)v76);
                v78 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HasPrefix(v67, ConstantsLocator);
                if (v78)
                  v69 |= 8u;
                v67 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v67 + 56);
                if (v67 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v70)
                  break;
                v79 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)v78);
                v68 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Intersects(v67, v79);
              }
              while (v68);
              return v69;
            }
            return v85 | 0xF;
          }
          v34 = (_QWORD *)atomic_load(&qword_25498E200);
          if (!v34)
            v34 = sub_20C8393C0(&qword_25498E200);
          v35 = sub_20BF2B388(v34, this);
          v36 = v35;
          if (atomic_load(&qword_25498E200))
          {
            if (v35)
            {
LABEL_59:
              v88[0] = &v85;
              v38 = v36[6];
              if (!v38)
                sub_20BE9E974();
              (*(void (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::TfToken *, _QWORD *))(*(_QWORD *)v38 + 48))(v38, a2, v88);
              return v85;
            }
          }
          else
          {
            sub_20C8393C0(&qword_25498E200);
            if (v36)
              goto LABEL_59;
          }
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v88);
          v80 = sub_20C8384B4((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v88, &v86, (uint64_t **)&v87, 1);
          sub_20C7E0EB0((uint64_t)v88);
          if (!v80)
            return v85;
          return v85 | 0xFFFFFFFD;
        }
        v62 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetDefaultLocator(v32);
        v48 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *)sub_20C8384B4(v62, &v86, (uint64_t **)&v87, 1);
        if ((_DWORD)v48)
          v85 |= 4u;
      }
      v63 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetDefaultLocator(v48);
      if (!sub_20C8384B4(v63, &v86, (uint64_t **)&v87, 1))
        return v85;
      return v85 | 0x400;
    }
    v39 = atomic_load((unsigned __int8 *)&qword_25498E1F8);
    if ((v39 & 1) == 0 && __cxa_guard_acquire(&qword_25498E1F8))
    {
      v84 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if (!v84)
        v84 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E1C0, (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)((char *)v84 + 120));
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E1C0, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E1F8);
    }
    if (!sub_20C8384B4((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E1C0, &v86, (uint64_t **)&v87, 1))return v85;
    return v85 | 0xFFFFFFFD;
  }
  v21 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdMaterialSchema::GetDefaultLocator(v6);
  if (sub_20C8384B4(v21, &v86, (uint64_t **)&v87, 1))
    return v85 | 0xC;
  return v85;
}

void sub_20C838D74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E1F8);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::InstancerLocatorSetToDirtyBits(pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3)
{
  uint64_t *v4;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v5;
  void *v6;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v11;
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *v12;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v13;
  pxrInternal__aapl__pxrReserved__::HdXformSchema *v14;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v15;
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *v16;
  uint64_t *v17;

  v4 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(a2);
  v17 = v4;
  v5 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  if (v4 == (uint64_t *)v5)
    return 0;
  v6 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(v5);
  if ((sub_20C826E38(v4, (uint64_t)v6) & 1) != 0)
    return 4294967293;
  v16 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  DefaultLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator(v16);
  v9 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *)sub_20C8384B4(DefaultLocator, (uint64_t **)&v16, &v17, 1);
  if ((_DWORD)v9)
    v10 = 0x10000;
  else
    v10 = 0;
  v11 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator(v9);
  v12 = (pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *)sub_20C8384B4(v11, (uint64_t **)&v16, &v17, 1);
  if ((_DWORD)v12)
    v10 |= 0x20000u;
  v13 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetDefaultLocator(v12);
  v14 = (pxrInternal__aapl__pxrReserved__::HdXformSchema *)sub_20C8384B4(v13, (uint64_t **)&v16, &v17, 1);
  if ((_DWORD)v14)
    v10 |= 0x40u;
  v15 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetDefaultLocator(v14);
  if (sub_20C8384B4(v15, (uint64_t **)&v16, &v17, 1))
    return v10 | 0x200;
  else
    return v10;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::BprimLocatorSetToDirtyBits(pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a3)
{
  const pxrInternal__aapl__pxrReserved__::TfToken *v5;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v7;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v9;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *DefaultLocator;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *ActiveLocator;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *NamespacedSettingsLocator;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *v15;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *RenderProductsLocator;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *v17;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *IncludedPurposesLocator;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *v19;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *MaterialBindingPurposesLocator;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *v21;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *RenderingColorSpaceLocator;
  pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *v23;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *ShutterIntervalLocator;
  uint64_t *v25;
  uint64_t *v26;

  v26 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(a2);
  if (v26 == (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2))
    return 0;
  v25 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  v6 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if (!v6)
    v6 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 36) & 0xFFFFFFFFFFFFFFF8))
  {
    DefaultLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderBufferSchema::GetDefaultLocator(v6);
    return sub_20C8384B4(DefaultLocator, &v25, &v26, 1);
  }
  else
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if (!v7)
      v7 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 37) & 0xFFFFFFFFFFFFFFF8))
    {
      ActiveLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetActiveLocator(v7);
      v12 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)sub_20C8384B4(ActiveLocator, &v25, &v26, 1);
      if ((_DWORD)v12)
        v13 = 2;
      else
        v13 = 0;
      NamespacedSettingsLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetNamespacedSettingsLocator(v12);
      v15 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)sub_20C8384B4(NamespacedSettingsLocator, &v25, &v26, 1);
      if ((_DWORD)v15)
        v13 |= 4u;
      RenderProductsLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetRenderProductsLocator(v15);
      v17 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)sub_20C8384B4(RenderProductsLocator, &v25, &v26, 1);
      if ((_DWORD)v17)
        v13 |= 8u;
      IncludedPurposesLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetIncludedPurposesLocator(v17);
      v19 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)sub_20C8384B4(IncludedPurposesLocator, &v25, &v26, 1);
      if ((_DWORD)v19)
        v13 |= 0x10u;
      MaterialBindingPurposesLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetMaterialBindingPurposesLocator(v19);
      v21 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)sub_20C8384B4(MaterialBindingPurposesLocator, &v25, &v26, 1);
      if ((_DWORD)v21)
        v13 |= 0x20u;
      RenderingColorSpaceLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetRenderingColorSpaceLocator(v21);
      v23 = (pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema *)sub_20C8384B4(RenderingColorSpaceLocator, &v25, &v26, 1);
      if ((_DWORD)v23)
        v13 |= 0x40u;
      ShutterIntervalLocator = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdRenderSettingsSchema::GetShutterIntervalLocator(v23);
      if (sub_20C8384B4(ShutterIntervalLocator, &v25, &v26, 1))
        return v13 | 0x80;
      else
        return v13;
    }
    else
    {
      result = pxrInternal__aapl__pxrReserved__::HdLegacyPrimTypeIsVolumeField(this, v5);
      if ((_DWORD)result)
      {
        v9 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchema::GetDefaultLocator((pxrInternal__aapl__pxrReserved__::HdVolumeFieldSchema *)result);
        if (sub_20C8384B4(v9, &v25, &v26, 1))
          return 2;
        else
          return 0;
      }
    }
  }
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDirtyBitsTranslator::RegisterTranslatorsForCustomSprimType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  _OWORD *v11;
  _QWORD *result;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v6 = (_OWORD *)atomic_load(&qword_25498E200);
  if (!v6)
    v6 = sub_20C8393C0(&qword_25498E200);
  sub_20C8392B8(&v16, a1, a2);
  sub_20C8394D4((uint64_t)v6, &v16, &v16);
  v7 = v18;
  if (v18 == v17)
  {
    v8 = 4;
    v7 = v17;
  }
  else
  {
    if (!v18)
      goto LABEL_8;
    v8 = 5;
  }
  (*(void (**)(void))(*v7 + 8 * v8))();
LABEL_8:
  if ((v16 & 7) != 0)
  {
    v9 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = (_OWORD *)atomic_load(&qword_25498E178);
  if (!v11)
    v11 = sub_20C8393C0(&qword_25498E178);
  sub_20C83933C(&v16, a1, a3);
  sub_20C839884((uint64_t)v11, &v16, &v16);
  result = v18;
  if (v18 == v17)
  {
    v13 = 4;
    result = v17;
  }
  else
  {
    if (!v18)
      goto LABEL_18;
    v13 = 5;
  }
  result = (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v13))();
LABEL_18:
  if ((v16 & 7) != 0)
  {
    v14 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  return result;
}

void sub_20C83922C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13)
{
  uint64_t v13;
  _QWORD *v15;
  uint64_t v16;

  v15 = a13;
  if (a13 == (_QWORD *)(v13 + 8))
  {
    v16 = 4;
    v15 = (_QWORD *)(v13 + 8);
  }
  else
  {
    if (!a13)
      goto LABEL_6;
    v16 = 5;
  }
  (*(void (**)(void))(*v15 + 8 * v16))();
LABEL_6:
  sub_20C96B3E4(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C8392B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BE9E6E8((uint64_t)(a1 + 1), a3);
  return a1;
}

uint64_t *sub_20C83933C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BE9E6E8((uint64_t)(a1 + 1), a3);
  return a1;
}

_OWORD *sub_20C8393C0(unint64_t *a1)
{
  _OWORD *result;
  void *v4;

  result = operator new(0x28uLL);
  *result = 0u;
  result[1] = 0u;
  *((_DWORD *)result + 8) = 1065353216;
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  v4 = (void *)sub_20C839418((uint64_t)result);
  operator delete(v4);
  return (_OWORD *)atomic_load(a1);
}

uint64_t sub_20C839418(uint64_t a1)
{
  void *v2;

  sub_20C839450(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C839450(int a1, _QWORD *__p)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  if (__p)
  {
    v2 = __p;
    while (1)
    {
      v3 = (_QWORD *)*v2;
      v4 = (_QWORD *)v2[6];
      if (v4 == v2 + 3)
        break;
      if (v4)
      {
        v5 = 5;
LABEL_7:
        (*(void (**)(void))(*v4 + 8 * v5))();
      }
      v6 = v2[2];
      if ((v6 & 7) != 0)
      {
        v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
        do
          v8 = __ldxr(v7);
        while (__stlxr(v8 - 2, v7));
      }
      operator delete(v2);
      v2 = v3;
      if (!v3)
        return;
    }
    v4 = v2 + 3;
    v5 = 4;
    goto LABEL_7;
  }
}

uint64_t *sub_20C8394D4(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;
  uint64_t *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;

  v6 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * v6);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = v7 & (v8 - 1);
    }
    v10 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v10)
    {
      for (i = *v10; i; i = (uint64_t *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if ((i[2] & 0xFFFFFFFFFFFFFFF8) == v6)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v3)
            break;
        }
      }
    }
  }
  v13 = (uint64_t *)(a1 + 16);
  i = (uint64_t *)operator new(0x38uLL);
  *i = 0;
  i[1] = v7;
  sub_20C839738(i + 2, a3);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_20BDEC6E0(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(uint64_t **)(*(_QWORD *)a1 + 8 * v3);
  if (v21)
  {
    *i = *v21;
LABEL_38:
    *v21 = (uint64_t)i;
    goto LABEL_39;
  }
  *i = *v13;
  *v13 = (uint64_t)i;
  *(_QWORD *)(v20 + 8 * v3) = v13;
  if (*i)
  {
    v22 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (uint64_t *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_20C83971C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;

  sub_20C8397FC(v11, v10);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C839738(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C839798((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

uint64_t sub_20C839798(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

void sub_20C8397FC(uint64_t a1, _QWORD *__p)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = (_QWORD *)__p[6];
    if (v3 == __p + 3)
    {
      v4 = 4;
      v3 = __p + 3;
    }
    else
    {
      if (!v3)
        goto LABEL_9;
      v4 = 5;
    }
    (*(void (**)(void))(*v3 + 8 * v4))();
LABEL_9:
    v5 = __p[2];
    if ((v5 & 7) != 0)
    {
      v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    goto LABEL_12;
  }
  if (__p)
LABEL_12:
    operator delete(__p);
}

uint64_t *sub_20C839884(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;
  uint64_t *v13;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;

  v6 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * v6);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v3 = v7;
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = v7 & (v8 - 1);
    }
    v10 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v10)
    {
      for (i = *v10; i; i = (uint64_t *)*i)
      {
        v12 = i[1];
        if (v12 == v7)
        {
          if ((i[2] & 0xFFFFFFFFFFFFFFF8) == v6)
            return i;
        }
        else
        {
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= v8)
              v12 %= v8;
          }
          else
          {
            v12 &= v8 - 1;
          }
          if (v12 != v3)
            break;
        }
      }
    }
  }
  v13 = (uint64_t *)(a1 + 16);
  i = (uint64_t *)operator new(0x38uLL);
  *i = 0;
  i[1] = v7;
  sub_20C839AE8(i + 2, a3);
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_20BDEC6E0(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(uint64_t **)(*(_QWORD *)a1 + 8 * v3);
  if (v21)
  {
    *i = *v21;
LABEL_38:
    *v21 = (uint64_t)i;
    goto LABEL_39;
  }
  *i = *v13;
  *v13 = (uint64_t)i;
  *(_QWORD *)(v20 + 8 * v3) = v13;
  if (*i)
  {
    v22 = *(_QWORD *)(*i + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (uint64_t *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_20C839ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;

  sub_20C8397FC(v11, v10);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C839AE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  v3 = *a2;
  *a1 = *a2;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C839B48((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

uint64_t sub_20C839B48(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(_QWORD *)(a1 + 24) = v4;
  }
  else
  {
    v3 = (_QWORD *)(a1 + 24);
  }
  *v3 = 0;
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDirtyList::HdDirtyList(uint64_t a1, _DWORD *a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = a2[911] - 1;
  *(_DWORD *)(a1 + 84) = a2[907] - 1;
  *(_DWORD *)(a1 + 88) = pxrInternal__aapl__pxrReserved__::HdChangeTracker::GetRenderTagVersion((pxrInternal__aapl__pxrReserved__::HdChangeTracker *)(a2 + 104))
                       - 1;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(_QWORD *)a1 + 3624) - 1;
  *(_WORD *)(a1 + 96) = 0;
  return a1;
}

void sub_20C839C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v10;
  void **v11;
  void **v12;

  v12 = v11;
  a10 = (void **)(v10 + 56);
  sub_20BFD6F90(&a10);
  a10 = (void **)(v10 + 32);
  sub_20C83AD48(&a10);
  a10 = v12;
  sub_20BEEB2B8(&a10);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDirtyList::_GetChangeTracker(pxrInternal__aapl__pxrReserved__::HdDirtyList *this)
{
  return *(_QWORD *)this + 416;
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdDirtyList::GetDirtyRprims(pxrInternal__aapl__pxrReserved__::HdDirtyList *this)
{
  int v2;
  uint64_t *v3;
  const char *v6;
  char *v7;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;

  sub_20BEB59B0((uint64_t)&v9, (uint64_t)"hd", (uint64_t)"const SdfPathVector &pxrInternal__aapl__pxrReserved__::HdDirtyList::GetDirtyRprims()");
  v2 = *(_DWORD *)(*(_QWORD *)this + 3644);
  if (*((_DWORD *)this + 20) != v2 || *((_BYTE *)this + 97) || *((_BYTE *)this + 96))
  {
    *((_DWORD *)this + 20) = v2;
    pxrInternal__aapl__pxrReserved__::HdDirtyList::_UpdateDirtyIdsIfNeeded(this);
    v3 = (uint64_t *)((char *)this + 56);
  }
  else
  {
    if (sub_20C7ED838(8))
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"DirtyList: Scene (%d) state version and filters unchanged.\n", v6, v7, *((unsigned int *)this + 20));
    v8 = atomic_load((unsigned __int8 *)&qword_25498E220);
    if ((v8 & 1) != 0)
    {
      v3 = &qword_25498E208;
    }
    else
    {
      v3 = &qword_25498E208;
      if (__cxa_guard_acquire(&qword_25498E220))
      {
        qword_25498E208 = 0;
        unk_25498E210 = 0;
        qword_25498E218 = 0;
        __cxa_atexit((void (*)(void *))sub_20C1FF790, &qword_25498E208, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498E220);
      }
    }
  }
  while (v10--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v9);
  return v3;
}

void sub_20C839D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20BEB24F4((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDirtyList::_UpdateDirtyIdsIfNeeded(pxrInternal__aapl__pxrReserved__::HdDirtyList *this)
{
  uint64_t v2;
  uint64_t RenderTagVersion;
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  _BOOL4 v7;
  int v8;
  char v9;
  pxrInternal__aapl__pxrReserved__::HdPerfLog *Instance;
  pxrInternal__aapl__pxrReserved__::HdPerfTokens_StaticTokenType *v11;
  char *v12;
  const char *v13;
  char *v14;
  int v15;
  const char *v16;
  char *v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  uint64_t *Ids;
  _DWORD *v21;
  _DWORD *i;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  const std::locale::facet *v28;
  _QWORD *v29;
  const std::locale::facet *v30;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v31;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v32;
  const char *v33;
  char *v34;
  pxrInternal__aapl__pxrReserved__::SdfPath *v35;
  pxrInternal__aapl__pxrReserved__::SdfPath *j;
  const char *Text;
  const char *v38;
  char *v39;
  const char *v40;
  char *v41;
  pxrInternal__aapl__pxrReserved__::SdfPath *v42;
  _DWORD *v43;
  uint64_t v44;
  char *v45;
  int v46;
  std::locale v47;
  uint64_t v48[4];
  char v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v2 = *(unsigned int *)(*(_QWORD *)this + 3628);
  RenderTagVersion = pxrInternal__aapl__pxrReserved__::HdChangeTracker::GetRenderTagVersion((pxrInternal__aapl__pxrReserved__::HdChangeTracker *)(*(_QWORD *)this + 416));
  v4 = RenderTagVersion;
  v5 = *((_BYTE *)this + 96) || *((_DWORD *)this + 21) != (_DWORD)v2 || *((_DWORD *)this + 22) != RenderTagVersion;
  v6 = *(unsigned int *)(*(_QWORD *)this + 3624);
  if (*((_BYTE *)this + 97))
  {
    v7 = 1;
LABEL_11:
    Instance = (pxrInternal__aapl__pxrReserved__::HdPerfLog *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::HdPerfLog>::_instance);
    if (!Instance)
      Instance = (pxrInternal__aapl__pxrReserved__::HdPerfLog *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::HdPerfLog>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::HdPerfLog>::_instance);
    v11 = (pxrInternal__aapl__pxrReserved__::HdPerfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPerfTokens);
    if (!v11)
      v11 = sub_20C7E2084(&pxrInternal__aapl__pxrReserved__::HdPerfTokens);
    pxrInternal__aapl__pxrReserved__::HdPerfLog::IncrementCounter(Instance, (pxrInternal__aapl__pxrReserved__::HdPerfTokens_StaticTokenType *)((char *)v11 + 72));
    if (v5)
    {
      if (sub_20C7ED838(8))
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"DirtyList: Filter Changed:\n  (Rprim Index Version %d -> %d)\n  (Render Tag Version %d -> %d)\n  (Tracked Render Tags or Reprs changed %d)\n", v13, v14, *((unsigned int *)this + 21), v2, *((unsigned int *)this + 22), v4, *((unsigned __int8 *)this + 96));
      v15 = 0;
      *((_DWORD *)this + 21) = v2;
      *((_DWORD *)this + 22) = v4;
      *((_DWORD *)this + 23) = v6;
      *((_WORD *)this + 48) = 256;
    }
    else if (v7)
    {
      if (sub_20C7ED838(8))
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"DirtyList: varying state version (%d -> %d)\n", v16, v17, *((unsigned int *)this + 23), v6);
      *((_DWORD *)this + 23) = v6;
      *((_BYTE *)this + 97) = 0;
      v15 = 2;
    }
    else
    {
      v48[0] = (uint64_t)"hd/dirtyList.cpp";
      v48[1] = (uint64_t)"_UpdateDirtyIdsIfNeeded";
      v48[2] = 289;
      v48[3] = (uint64_t)"void pxrInternal__aapl__pxrReserved__::HdDirtyList::_UpdateDirtyIdsIfNeeded()";
      v49 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v48, (pxrInternal__aapl__pxrReserved__ *)"Unhandled scenario in dirty list update logic.\n", v12);
      v15 = 0x7FFFFF;
    }
    v18 = atomic_load((unsigned __int8 *)&qword_25498E240);
    if ((v18 & 1) == 0)
    {
      v42 = (pxrInternal__aapl__pxrReserved__::SdfPath *)__cxa_guard_acquire(&qword_25498E240);
      if ((_DWORD)v42)
      {
        v43 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v42);
        sub_20BFD6E54(v48, v43);
        sub_20BFD6EA4((_DWORD *)v48 + 1, v43 + 1);
        sub_20C83A75C(qword_25498E228, v48, 1uLL);
        sub_20BFD1A18(v48);
        __cxa_atexit((void (*)(void *))sub_20C1FF790, qword_25498E228, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498E240);
      }
    }
    v19 = atomic_load((unsigned __int8 *)&qword_25498E260);
    if ((v19 & 1) == 0 && __cxa_guard_acquire(&qword_25498E260))
    {
      qword_25498E248 = 0;
      unk_25498E250 = 0;
      qword_25498E258 = 0;
      __cxa_atexit((void (*)(void *))sub_20C1FF790, &qword_25498E248, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E260);
    }
    Ids = (uint64_t *)pxrInternal__aapl__pxrReserved__::Hd_SortedIds::GetIds((pxrInternal__aapl__pxrReserved__::Hd_SortedIds *)(*(_QWORD *)this + 88));
    v44 = *(_QWORD *)this;
    v45 = (char *)this + 8;
    v46 = v15;
    v21 = (_DWORD *)*((_QWORD *)this + 7);
    for (i = (_DWORD *)*((_QWORD *)this + 8); i != v21; sub_20BFD6F64((uint64_t)this + 72, i))
      i -= 2;
    *((_QWORD *)this + 8) = v21;
    sub_20C83A8EC((uint64_t)v48);
    pxrInternal__aapl__pxrReserved__::HdPrimGather::PredicatedFilter(v48, Ids, qword_25498E228, &qword_25498E248, (unsigned int (*)(unint64_t, uint64_t))sub_20C83A7F4, (uint64_t)&v44, (uint64_t)this + 56);
    if (sub_20C7ED838(8))
    {
      sub_20BDDC1C8(MEMORY[0x24BEDB318], (uint64_t)"Dirty list filter predicate:\n", 29);
      sub_20BDDC1C8(MEMORY[0x24BEDB318], (uint64_t)"  Render tags [", 15);
      v23 = *(_QWORD **)v45;
      v24 = (_QWORD *)*((_QWORD *)v45 + 1);
      if (*(_QWORD **)v45 != v24)
      {
        v25 = (_QWORD *)MEMORY[0x24BEDB318];
        do
        {
          v26 = pxrInternal__aapl__pxrReserved__::operator<<(v25, v23);
          sub_20BDDC1C8(v26, (uint64_t)", ", 2);
          ++v23;
        }
        while (v23 != v24);
      }
      v27 = sub_20BDDC1C8(MEMORY[0x24BEDB318], (uint64_t)"]", 1);
      std::ios_base::getloc((const std::ios_base *)((char *)v27 + *(_QWORD *)(*v27 - 24)));
      v28 = std::locale::use_facet(&v47, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v28->__vftable[2].~facet_0)(v28, 10);
      std::locale::~locale(&v47);
      std::ostream::put();
      std::ostream::flush();
      sub_20BDDC1C8(MEMORY[0x24BEDB318], (uint64_t)"  Mask : ", 9);
      v29 = (_QWORD *)std::ostream::operator<<();
      std::ios_base::getloc((const std::ios_base *)((char *)v29 + *(_QWORD *)(*v29 - 24)));
      v30 = std::locale::use_facet(&v47, MEMORY[0x24BEDB350]);
      ((void (*)(const std::locale::facet *, uint64_t))v30->__vftable[2].~facet_0)(v30, 10);
      std::locale::~locale(&v47);
      std::ostream::put();
      std::ostream::flush();
    }
    if (v5)
    {
      v31 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)this + 7);
      v32 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)this + 8);
      while (v31 != v32)
      {
        pxrInternal__aapl__pxrReserved__::HdChangeTracker::MarkRprimDirty((pxrInternal__aapl__pxrReserved__::HdChangeTracker *)(*(_QWORD *)this + 416), v31, 1);
        v31 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v31 + 8);
      }
    }
    if (sub_20C7ED838(8))
    {
      if (sub_20C7ED838(8))
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"  dirtyRprimIds:\n", v33, v34);
      v35 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)this + 7);
      for (j = (pxrInternal__aapl__pxrReserved__::SdfPath *)*((_QWORD *)this + 8);
            v35 != j;
            v35 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v35 + 8))
      {
        if (sub_20C7ED838(8))
        {
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v35);
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"    %s\n", v38, v39, Text);
        }
      }
    }
    sub_20C83ACFC((uint64_t)v48);
    return;
  }
  v8 = *((_DWORD *)this + 23);
  v7 = v8 != v6;
  v9 = v8 != (_DWORD)v6 || v5;
  if ((v9 & 1) != 0)
    goto LABEL_11;
  if (sub_20C7ED838(8))
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"DirtyList: reusing cached dirtyIds\n", v40, v41);
}

void sub_20C83A338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::locale a17, int a18)
{
  sub_20BFD1A18(&a18);
  __cxa_guard_abort(&qword_25498E240);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDirtyList::UpdateRenderTagsAndReprSelectors(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char v10;
  uint64_t v11;
  int v12;
  int RenderTagVersion;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  BOOL v18;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26[2];
  _QWORD v27[11];
  char v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char v33[9];

  v30 = 0;
  v31 = 0;
  v32 = 0;
  sub_20C83AE30(*(uint64_t **)(a1 + 8), *(uint64_t **)(a1 + 16), *a2, a2[1], &v30, (uint64_t)v33, v26);
  v6 = *(char **)(a1 + 8);
  v5 = *(char **)(a1 + 16);
  v7 = v31;
  if (v5 - v6 != v31 - v30)
  {
LABEL_7:
    *(_QWORD *)(a1 + 8) = v30;
    *(_QWORD *)(a1 + 16) = v7;
    v30 = v6;
    v31 = v5;
    v11 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 24) = v32;
    v32 = v11;
    v10 = 1;
    goto LABEL_8;
  }
  if (v6 != v5)
  {
    v8 = v30;
    v9 = *(char **)(a1 + 8);
    while ((*(_QWORD *)v9 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v8 & 0xFFFFFFFFFFFFFFF8))
    {
      v9 += 8;
      v8 += 8;
      if (v9 == v5)
        goto LABEL_6;
    }
    goto LABEL_7;
  }
LABEL_6:
  v10 = 0;
LABEL_8:
  v26[0] = (uint64_t *)&v30;
  sub_20BEEB2B8((void ***)v26);
  v12 = *(_DWORD *)(*(_QWORD *)a1 + 3628);
  RenderTagVersion = pxrInternal__aapl__pxrReserved__::HdChangeTracker::GetRenderTagVersion((pxrInternal__aapl__pxrReserved__::HdChangeTracker *)(*(_QWORD *)a1 + 416));
  if ((v10 & 1) == 0 && *(_DWORD *)(a1 + 84) == v12 && *(_DWORD *)(a1 + 88) == RenderTagVersion)
  {
    v30 = 0;
    v31 = 0;
    v32 = 0;
    sub_20C83B398(*(uint64_t **)(a1 + 32), *(uint64_t **)(a1 + 40), *a3, a3[1], (uint64_t *)&v30, v26);
    v14 = *(char **)(a1 + 32);
    v15 = *(char **)(a1 + 40);
    v17 = v30;
    v16 = v31;
    if (v15 - v14 == v31 - v30)
    {
      if (v14 == v15)
        goto LABEL_18;
      do
      {
        v18 = pxrInternal__aapl__pxrReserved__::HdReprSelector::operator==(v14, v17);
        v14 += 24;
        v17 += 24;
      }
      while (v14 != v15 && v18);
      if (v18)
      {
LABEL_18:
        v26[0] = (uint64_t *)&v30;
        sub_20C83AD48((void ***)v26);
        return;
      }
      v14 = *(char **)(a1 + 32);
      v15 = *(char **)(a1 + 40);
      v17 = v30;
      v16 = v31;
    }
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v16;
    v30 = v14;
    v31 = v15;
    v25 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)(a1 + 48) = v32;
    v32 = v25;
    v26[0] = (uint64_t *)&v30;
    sub_20C83AD48((void ***)v26);
  }
  else
  {
    if (sub_20C7ED838(8))
    {
      sub_20BDDBD68((uint64_t)v26);
      v20 = sub_20BDDC1C8(v27, (uint64_t)"Resetting tracked reprs in dirty list from ", 43);
      v21 = sub_20C83A6D4(v20, a1 + 32);
      v22 = sub_20BDDC1C8(v21, (uint64_t)" to ", 4);
      v23 = sub_20C83A6D4(v22, (uint64_t)a3);
      sub_20BDDC1C8(v23, (uint64_t)"\n", 1);
      std::stringbuf::str();
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((uint64_t)&v30);
      if (SHIBYTE(v32) < 0)
        operator delete(v30);
      v26[0] = *(uint64_t **)MEMORY[0x24BEDB7F0];
      v24 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
      *(uint64_t **)((char *)v26 + *(v26[0] - 3)) = *(uint64_t **)(MEMORY[0x24BEDB7F0] + 64);
      v27[0] = v24;
      v27[1] = MEMORY[0x24BEDB848] + 16;
      if (v28 < 0)
        operator delete((void *)v27[9]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x212B92EB0](&v29);
    }
    if ((uint64_t **)(a1 + 32) != a3)
      sub_20C83AF80(a1 + 32, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * (a3[1] - *a3));
  }
  *(_BYTE *)(a1 + 96) = 1;
}

void sub_20C83A674(_Unwind_Exception *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 56) = v1 - 88;
  sub_20C83AD48((void ***)(v1 - 56));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C83A6D4(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  sub_20BDDC1C8(a1, (uint64_t)"[", 1);
  v4 = *(_QWORD **)a2;
  v5 = *(_QWORD **)(a2 + 8);
  if (*(_QWORD **)a2 != v5)
  {
    do
    {
      v6 = pxrInternal__aapl__pxrReserved__::operator<<(a1, v4);
      sub_20BDDC1C8(v6, (uint64_t)", ", 2);
      v4 += 3;
    }
    while (v4 != v5);
  }
  sub_20BDDC1C8(a1, (uint64_t)"]", 1);
  return a1;
}

_QWORD *sub_20C83A75C(_QWORD *a1, _DWORD *a2, unint64_t a3)
{
  uint64_t v4;

  a1[2] = 0;
  v4 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  if (a3)
  {
    sub_20BDDF654(a1, a3);
    a1[1] = sub_20BFD6DBC(v4, a2, &a2[2 * a3], (_DWORD *)a1[1]);
  }
  return a1;
}

void sub_20C83A7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20BFD6F90(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83A7F4(pxrInternal__aapl__pxrReserved__::SdfPath *a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::HdRenderIndex *v4;
  int v5;
  int RprimDirtyBits;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v16;
  unint64_t v17;

  v4 = *(pxrInternal__aapl__pxrReserved__::HdRenderIndex **)a2;
  v5 = *(_DWORD *)(a2 + 16);
  RprimDirtyBits = pxrInternal__aapl__pxrReserved__::HdChangeTracker::GetRprimDirtyBits((pxrInternal__aapl__pxrReserved__::HdChangeTracker *)(*(_QWORD *)a2 + 416), a1);
  if (v5)
    v7 = (RprimDirtyBits & v5) == 0;
  else
    v7 = 0;
  if (v7)
    return 0;
  if (**(_QWORD **)(a2 + 8) != *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8))
  {
    pxrInternal__aapl__pxrReserved__::HdRenderIndex::UpdateRenderTag(v4, a1, RprimDirtyBits, (unsigned int **)&v17);
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD **)v8;
    v10 = *(_QWORD *)(v8 + 8) - *(_QWORD *)v8;
    if (v10)
    {
      v11 = v10 >> 3;
      v12 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if (v11 <= 1)
        v11 = 1;
      while ((unsigned int *)(*v9 & 0xFFFFFFFFFFFFFFF8) != v12)
      {
        ++v9;
        if (!--v11)
          goto LABEL_11;
      }
      if ((v17 & 7) != 0)
      {
        do
          v16 = __ldxr(v12);
        while (__stlxr(v16 - 2, v12));
      }
      return 1;
    }
LABEL_11:
    if ((v17 & 7) != 0)
    {
      v13 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
    return 0;
  }
  return 1;
}

uint64_t sub_20C83A8EC(uint64_t a1)
{
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20C83A950((_QWORD *)(a1 + 48));
  return a1;
}

void sub_20C83A928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v10;
  void *v12;

  v12 = *(void **)(v10 + 24);
  if (v12)
  {
    *(_QWORD *)(v10 + 32) = v12;
    operator delete(v12);
  }
  a10 = (void **)v10;
  sub_20C83AC4C(&a10);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C83A950(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t i;

  *a1 = &unk_24C51AE78;
  __dmb(0xBu);
  a1[1] = 0;
  __dmb(0xBu);
  a1[2] = 0;
  *a1 = &unk_24C5501F0;
  v2 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *v2 = &unk_24C550250;
  a1[3] = v2;
  for (i = 9; i != 12; ++i)
    a1[i] = 0;
  a1[7] = 0;
  a1[6] = 0;
  a1[8] = a1 + 9;
  a1[5] = sub_20C83AB14;
  return a1;
}

void sub_20C83A9EC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_20C83A9F4(uint64_t a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = tbb::internal::concurrent_vector_base_v3::internal_grow_by((tbb::internal::concurrent_vector_base_v3 *)(a1 + 40), 1, (void *)0x80, (void (*)(void *, const void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>>>::initialize_array, 0);
  v3 = sub_20BEB4B94((unint64_t)v2);
  v4 = *(_QWORD *)(a1 + 64);
  __dmb(0xBu);
  v5 = *(_QWORD *)(v4 + 8 * v3) + (((_QWORD)v2 - ((1 << v3) & 0x1FFFFFFFFFFFFFELL)) << 7);
  (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 24) + 32))(*(_QWORD *)(a1 + 24), v5);
  *(_BYTE *)(v5 + 24) = 1;
  return v5;
}

uint64_t sub_20C83AA78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)(a2 + 7) >> 3, 8, 0, a4);
}

uint64_t sub_20C83AA8C(int a1, tbb::internal *this)
{
  return tbb::internal::NFS_Free(this, this);
}

void sub_20C83AA98(_QWORD *a1)
{
  _QWORD *v1;

  v1 = sub_20C83AB34(a1);
  operator delete(v1);
}

_QWORD *sub_20C83AAAC()
{
  _QWORD *result;

  result = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)8);
  *result = &unk_24C550250;
  return result;
}

uint64_t sub_20C83AAD4(uint64_t a1)
{
  void *v2;

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 16))(a1);
  return tbb::internal::deallocate_via_handler_v3(a1, v2);
}

void sub_20C83AB08(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

uint64_t sub_20C83AB14(int a1, tbb::internal *this, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)this, 128, 0, a4);
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>>>::initialize_array(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
    bzero(a1, a3 << 7);
}

_QWORD *sub_20C83AB34(_QWORD *a1)
{
  uint64_t v2;

  *a1 = &unk_24C5501F0;
  v2 = a1[3];
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  sub_20BEB4954((uint64_t)a1);
  sub_20C83AB9C(a1 + 4);
  *a1 = &unk_24C51AE78;
  return a1;
}

unint64_t *sub_20C83AB9C(unint64_t *a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  _QWORD *v3;
  unint64_t v4;
  void *v5;

  v2 = (tbb::internal::concurrent_vector_base_v3 *)(a1 + 1);
  v3 = (_QWORD *)a1[4];
  v4 = tbb::internal::concurrent_vector_base_v3::internal_clear((tbb::internal::concurrent_vector_base_v3 *)(a1 + 1), (void (*)(void *, unint64_t))tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>>>::destroy_array);
  sub_20BEB4AD0((uint64_t)a1, v3, v4, a1[2]);
  tbb::internal::concurrent_vector_base_v3::~concurrent_vector_base_v3(v2, v5);
  return a1;
}

void tbb::concurrent_vector<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>,tbb::cache_aligned_allocator<tbb::internal::padded<tbb::interface6::internal::ets_element<std::vector<pxrInternal__aapl__pxrReserved__::HdPrimGather::_Range>>,128ul>>>::destroy_array(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (a2)
  {
    v2 = a2;
    v3 = a1 + (a2 << 7) - 128;
    do
    {
      if (*(_BYTE *)(v3 + 24))
      {
        v4 = *(void **)v3;
        if (*(_QWORD *)v3)
        {
          *(_QWORD *)(v3 + 8) = v4;
          operator delete(v4);
        }
        *(_BYTE *)(v3 + 24) = 0;
      }
      v3 -= 128;
      --v2;
    }
    while (v2);
  }
}

void sub_20C83AC4C(void ***a1)
{
  void **v1;
  _DWORD *v2;
  _DWORD *v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        sub_20C83ACD0((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

_DWORD *sub_20C83ACD0(uint64_t a1, _DWORD *a2)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a2 + 1);
  return sub_20BFD265C(a2);
}

uint64_t sub_20C83ACFC(uint64_t a1)
{
  void *v2;
  void **v4;

  sub_20C83AB34((_QWORD *)(a1 + 48));
  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  v4 = (void **)a1;
  sub_20C83AC4C(&v4);
  return a1;
}

void sub_20C83AD48(void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        sub_20C83ADCC((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C83ADCC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;

  v2 = a2[2];
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = a2[1];
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*a2 & 7) != 0)
  {
    v8 = (unsigned int *)(*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

uint64_t *sub_20C83AE30@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char **a5@<X4>, uint64_t a6@<X5>, uint64_t **a7@<X8>)
{
  uint64_t *v9;
  uint64_t *result;
  uint64_t *v14;
  char **v15;

  v9 = a1;
  v15 = a5;
  if (a1 == a2)
  {
LABEL_8:
    result = sub_20C83AF20(a3, a4, a5);
    a4 = result;
  }
  else
  {
    while (a3 != a4)
    {
      if (sub_20BF1E6D8(a6, a3, v9))
      {
        sub_20C3A2104(&v15, a3++);
      }
      else
      {
        a3 += sub_20BF1E6D8(a6, v9, a3) ^ 1;
        sub_20C3A2104(&v15, v9++);
      }
      if (v9 == a2)
      {
        a5 = v15;
        v9 = a2;
        goto LABEL_8;
      }
    }
    result = sub_20C83AF20(v9, a2, v15);
    v9 = result;
  }
  *a7 = v9;
  a7[1] = a4;
  a7[2] = v14;
  return result;
}

uint64_t *sub_20C83AF20(uint64_t *a1, uint64_t *a2, char **a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char **v6;

  v3 = a1;
  v6 = a3;
  if (a1 == a2)
    return a1;
  v4 = a2;
  do
    sub_20C3A2104(&v6, v3++);
  while (v3 != v4);
  return v4;
}

void sub_20C83AF80(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  char v17;
  char v18;

  v8 = a1 + 16;
  v9 = *(_QWORD **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) < a4)
  {
    sub_20C83B100((_QWORD *)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      sub_20BDDF694();
    v10 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    sub_20BDE4FA4((_QWORD *)a1, v11);
    v12 = sub_20C83B16C(v8, a2, a3, *(uint64_t **)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3) < a4)
  {
    v13 = &a2[(uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v9) >> 3];
    sub_20C83B320((uint64_t)&v17, a2, v13, v9);
    v12 = sub_20C83B16C(v8, v13, a3, *(uint64_t **)(a1 + 8));
LABEL_11:
    *(_QWORD *)(a1 + 8) = v12;
    return;
  }
  sub_20C83B320((uint64_t)&v18, a2, a3, v9);
  v15 = v14;
  v16 = *(_QWORD **)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 3;
      sub_20C83ADCC(v8, v16);
    }
    while (v16 != v15);
  }
  *(_QWORD *)(a1 + 8) = v15;
}

void sub_20C83B0F0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20C83B0F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_20C83B100(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v3;
  _QWORD *v4;

  v1 = (_QWORD *)*a1;
  if (*a1)
  {
    v3 = (_QWORD *)a1[1];
    v4 = (_QWORD *)*a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 3;
        sub_20C83ADCC((uint64_t)(a1 + 2), v3);
      }
      while (v3 != v1);
      v4 = (_QWORD *)*a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t *sub_20C83B16C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  _QWORD v9[3];
  char v10;
  uint64_t *v11;
  uint64_t *v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C83B1FC(a1, v4, v6);
      v6 += 3;
      v4 = v12 + 3;
      v12 += 3;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C83B29C((uint64_t)v9);
  return v4;
}

void sub_20C83B1FC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;

  v3 = *a3;
  *a2 = *a3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      *a2 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = a3[1];
  a2[1] = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      a2[1] &= 0xFFFFFFFFFFFFFFF8;
  }
  v9 = a3[2];
  a2[2] = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      a2[2] &= 0xFFFFFFFFFFFFFFF8;
  }
}

uint64_t sub_20C83B29C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C83B2D0((uint64_t *)a1);
  return a1;
}

void sub_20C83B2D0(uint64_t *a1)
{
  _QWORD **v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = (_QWORD *)a1[1];
  v1 = (_QWORD **)a1[2];
  v3 = *v1;
  v4 = (_QWORD *)*v2;
  if (*v1 != (_QWORD *)*v2)
  {
    v5 = *a1;
    do
    {
      v3 -= 3;
      sub_20C83ADCC(v5, v3);
    }
    while (v3 != v4);
  }
}

_QWORD *sub_20C83B320(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD *v5;
  _QWORD *v6;

  v5 = a2;
  if (a2 == a3)
    return a2;
  v6 = a3;
  do
  {
    sub_20BF32220(a4, v5);
    sub_20BF32220(a4 + 1, v5 + 1);
    sub_20BF32220(a4 + 2, v5 + 2);
    a4 += 3;
    v5 += 3;
  }
  while (v5 != v6);
  return v6;
}

uint64_t *sub_20C83B398@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t **a6@<X8>)
{
  uint64_t *v8;
  uint64_t *result;
  uint64_t *v12;
  uint64_t *v13;

  v8 = a1;
  v13 = a5;
  if (a1 == a2)
  {
LABEL_8:
    result = sub_20C83B4E4(a3, a4, a5);
    a4 = result;
  }
  else
  {
    while (a3 != a4)
    {
      if (pxrInternal__aapl__pxrReserved__::HdReprSelector::operator<(a3, v8))
      {
        sub_20C83B480(&v13, a3);
        a3 += 3;
      }
      else
      {
        a3 += 3 * (pxrInternal__aapl__pxrReserved__::HdReprSelector::operator<(v8, a3) ^ 1);
        sub_20C83B480(&v13, v8);
        v8 += 3;
      }
      if (v8 == a2)
      {
        a5 = v13;
        v8 = a2;
        goto LABEL_8;
      }
    }
    result = sub_20C83B4E4(v8, a2, v13);
    v8 = result;
  }
  *a6 = v8;
  a6[1] = a4;
  a6[2] = v12;
  return result;
}

uint64_t **sub_20C83B480(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = (uint64_t *)(*a1)[1];
  v5 = *a1;
  v7 = v5[2];
  v6 = (uint64_t)(v5 + 2);
  if ((unint64_t)v4 >= v7)
  {
    v8 = sub_20C83B544(v3, a2);
  }
  else
  {
    sub_20C83B1FC(v6, v4, a2);
    v8 = (uint64_t)(v4 + 3);
  }
  v3[1] = v8;
  return a1;
}

uint64_t *sub_20C83B4E4(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v6;

  v3 = a1;
  v6 = a3;
  if (a1 == a2)
    return a1;
  v4 = a2;
  do
  {
    sub_20C83B480(&v6, v3);
    v3 += 3;
  }
  while (v3 != v4);
  return v4;
}

uint64_t sub_20C83B544(uint64_t *a1, uint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  void *v10;
  uint64_t *v11;
  uint64_t *v12;
  char *v13;
  uint64_t *v14;

  v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20BDDF694();
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v4)
    v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  v14 = a1 + 2;
  if (v6)
    v7 = (char *)sub_20BDE4FF4((uint64_t)(a1 + 2), v6);
  else
    v7 = 0;
  v10 = v7;
  v11 = (uint64_t *)&v7[24 * v3];
  v13 = &v7[24 * v6];
  sub_20C83B1FC((uint64_t)(a1 + 2), v11, a2);
  v12 = v11 + 3;
  sub_20C83B64C(a1, &v10);
  v8 = a1[1];
  sub_20C83B7E8(&v10);
  return v8;
}

void sub_20C83B638(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C83B7E8((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83B64C(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C83B6C0((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C83B6C0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  __int128 v13;
  __int128 v14;

  v7 = a7;
  *(_QWORD *)&v14 = a6;
  *((_QWORD *)&v14 + 1) = a7;
  v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    v9 = a6;
  }
  else
  {
    do
    {
      v8 = *(a3 - 3);
      a3 -= 3;
      *(_QWORD *)(v7 - 24) = v8;
      *a3 = 0;
      *(_QWORD *)(v7 - 16) = a3[1];
      a3[1] = 0;
      *(_QWORD *)(v7 - 8) = a3[2];
      a3[2] = 0;
      v7 = *((_QWORD *)&v14 + 1) - 24;
      *((_QWORD *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    v9 = v14;
  }
  v12 = 1;
  sub_20C83B764((uint64_t)v11);
  return v9;
}

uint64_t sub_20C83B764(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C83B798((uint64_t *)a1);
  return a1;
}

void sub_20C83B798(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD **)(a1[2] + 8);
  v2 = *(_QWORD **)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C83ADCC(v3, v1);
      v1 += 3;
    }
    while (v1 != v2);
  }
}

void **sub_20C83B7E8(void **a1)
{
  sub_20C83B818(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C83B818(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 24;
    sub_20C83ADCC(v4, (_QWORD *)(i - 24));
  }
}

void pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType::~HdDisplayFilterSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType::HdDisplayFilterSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "displayFilter", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "resource", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)this;
}

void sub_20C83BA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetResource(pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v4 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  if (!v4)
    v4 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v13 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v13 = v6;
  }
  sub_20C7E0698((uint64_t *)this, &v14);
  sub_20C7E0E2C(a2, &v14);
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if ((v13 & 7) != 0)
  {
    v11 = (unsigned int *)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
}

void sub_20C83BBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::BuildRetained(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v4;
  unint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  __int128 v8;
  uint64_t v9[2];
  uint64_t v10[2];

  v10[1] = *MEMORY[0x24BDAC8D0];
  v9[1] = 0;
  v10[0] = 0;
  v9[0] = 0;
  if (*a1)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    if (!v4)
      v4 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    sub_20BF32220(v10, (_QWORD *)v4 + 1);
    sub_20BDE881C(v9, a1);
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v5, v10, v9, &v8);
  *a2 = v8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v9);
  if ((v10[0] & 7) != 0)
  {
    v6 = (unsigned int *)(v10[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
}

void sub_20C83BCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  unsigned int *v14;
  unsigned int v15;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *p_shared_owners;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *a1;
  if (!*a1)
  {
    v14 = 0;
    v15 = 0;
    sub_20C7E0E2C(a2, &v14);
    v8 = v15;
    if (!v15)
      return;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    goto LABEL_16;
  }
  if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens))
    sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v12, v3);
  sub_20C7E0B14((uint64_t)&v12, &v14);
  sub_20C7E0E2C(a2, &v14);
  v5 = v15;
  if (v15)
  {
    v6 = (unint64_t *)&v15->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
LABEL_16:
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  if (!result)
    return sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E2A0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E2A0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    if (!v3)
      v3 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E268, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E268, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E2A0);
  }
  return &unk_25498E268;
}

void sub_20C83BF08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E2A0);
  _Unwind_Resume(a1);
}

void *pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::GetResourceLocator(pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v3;
  pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E2E0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E2E0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    if (!v3)
      v3 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    v4 = (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    if (!v4)
      v4 = sub_20C80A660(&pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E2A8, v3, (pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchemaTokens_StaticTokenType *)((char *)v4 + 8));
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E2A8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E2E0);
  }
  return &unk_25498E2A8;
}

void sub_20C83BFDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E2E0);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdDisplayFilterSchema::Builder::SetResource(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdDrawItem::HdDrawItem(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  int v6;

  *(_QWORD *)a1 = off_24C5502E8;
  *(_DWORD *)(a1 + 8) = -65534;
  *(_DWORD *)(a1 + 12) = 67305728;
  *(_WORD *)(a1 + 16) = 1541;
  *(_BYTE *)(a1 + 18) = 7;
  *(_QWORD *)(a1 + 24) = a2;
  *(_QWORD *)(a1 + 32) = 0;
  sub_20BEB59B0((uint64_t)&v5, (uint64_t)"hd", (uint64_t)"pxrInternal__aapl__pxrReserved__::HdDrawItem::HdDrawItem(const HdRprimSharedData *)");
  while (v6--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v5);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdDrawItem::~HdDrawItem(pxrInternal__aapl__pxrReserved__::HdDrawItem *this)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  *(_QWORD *)this = off_24C5502E8;
  v1 = *((_QWORD *)this + 4);
  if ((v1 & 7) != 0)
  {
    v2 = (unsigned int *)(v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  *(_QWORD *)this = off_24C5502E8;
  v1 = *((_QWORD *)this + 4);
  if ((v1 & 7) != 0)
  {
    v2 = (unsigned int *)(v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

void pxrInternal__aapl__pxrReserved__::HdDrawItem::~HdDrawItem(void *this)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  *(_QWORD *)this = off_24C5502E8;
  v1 = *((_QWORD *)this + 4);
  if ((v1 & 7) != 0)
  {
    v2 = (unsigned int *)(v1 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  free(this);
}

double pxrInternal__aapl__pxrReserved__::HdEngine::HdEngine(pxrInternal__aapl__pxrReserved__::HdEngine *this)
{
  double result;

  *(_QWORD *)this = off_24C550318;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  return result;
}

{
  double result;

  *(_QWORD *)this = off_24C550318;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1065353216;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdEngine::~HdEngine(pxrInternal__aapl__pxrReserved__::HdEngine *this)
{
  *(_QWORD *)this = off_24C550318;
  sub_20C83C58C((uint64_t)this + 8);
}

{
  *(_QWORD *)this = off_24C550318;
  sub_20C83C58C((uint64_t)this + 8);
}

{
  *(_QWORD *)this = off_24C550318;
  sub_20C83C58C((uint64_t)this + 8);
  operator delete(this);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdEngine::SetTaskContextData(pxrInternal__aapl__pxrReserved__::HdEngine *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  _QWORD *result;
  char v5;

  result = sub_20C83C620((uint64_t)this + 8, a2, (uint64_t *)a2, a3);
  if (!v5)
    return sub_20BF4A9BC(result + 3, a3);
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdEngine::GetTaskContextData(pxrInternal__aapl__pxrReserved__::HdEngine *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  uint64_t result;
  char v7;
  _QWORD v8[4];
  char v9;

  if (a3
    || (v8[0] = "hd/engine.cpp",
        v8[1] = "GetTaskContextData",
        v8[2] = 68,
        v8[3] = "BOOL pxrInternal__aapl__pxrReserved__::HdEngine::GetTaskContextData(const TfToken &, VtValue *) const",
        v9 = 0,
        v7 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v8, "data", 0),
        result = 0,
        (v7 & 1) != 0))
  {
    result = (uint64_t)sub_20BF2B2B4((_QWORD *)this + 1, a2);
    if (result)
    {
      sub_20BF4A9BC(a3, (_QWORD *)(result + 24));
      return 1;
    }
  }
  return result;
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdEngine::RemoveTaskContextData(pxrInternal__aapl__pxrReserved__::HdEngine *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  return sub_20C83C9F4((_QWORD *)this + 1, a2);
}

void pxrInternal__aapl__pxrReserved__::HdEngine::ClearTaskContextData(pxrInternal__aapl__pxrReserved__::HdEngine *this)
{
  sub_20C83CA70((uint64_t)this + 8);
}

void pxrInternal__aapl__pxrReserved__::HdEngine::Execute(uint64_t a1, pxrInternal__aapl__pxrReserved__::HdRenderIndex *this, uint64_t *a3)
{
  uint64_t Drivers;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v7;
  uint64_t v8;
  _QWORD *v9;
  const char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  char *v20;
  uint64_t RenderDelegate;
  const char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  if (this && a3)
  {
    Drivers = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetDrivers(this);
    v28 = (const char *)&off_24C550338;
    sub_20C83D064(&v27, Drivers);
    v7 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
    if (!v7)
      v7 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
    v8 = a1 + 8;
    v26 = (uint64_t *)((char *)v7 + 216);
    v9 = sub_20C83CAC4(v8, (_QWORD *)v7 + 27, (uint64_t)&unk_20CAC184C, &v26);
    sub_20BF4B5D8(v9 + 3, &v27);
    sub_20BF4C2D8((uint64_t)&v27);
    if (sub_20C7ED838(11))
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\n==============================================================\n      HdEngine [Data Discovery Phase](RenderIndex::SyncAll)   \n--------------------------------------------------------------\n", v10, v11);
    pxrInternal__aapl__pxrReserved__::HdRenderIndex::SyncAll(this, a3, v8);
    v13 = *a3;
    v12 = a3[1];
    if (sub_20C7ED838(11))
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\n==============================================================\n             HdEngine [Prepare Phase](Task::Prepare)          \n--------------------------------------------------------------\n", v14, v15);
    v16 = (v12 - v13) >> 4;
    if (v12 != v13)
    {
      v17 = 0;
      if (v16 <= 1)
        v18 = 1;
      else
        v18 = (v12 - v13) >> 4;
      do
      {
        (*(void (**)(_QWORD, uint64_t, pxrInternal__aapl__pxrReserved__::HdRenderIndex *))(**(_QWORD **)(*a3 + v17) + 24))(*(_QWORD *)(*a3 + v17), v8, this);
        v17 += 16;
        --v18;
      }
      while (v18);
    }
    if (sub_20C7ED838(11))
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\n==============================================================\n HdEngine [Data Commit Phase](RenderDelegate::CommitResources)\n--------------------------------------------------------------\n", v19, v20);
    RenderDelegate = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetRenderDelegate(this);
    (*(void (**)(uint64_t, char *))(*(_QWORD *)RenderDelegate + 272))(RenderDelegate, (char *)this + 416);
    if (sub_20C7ED838(11))
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\n==============================================================\n             HdEngine [Execute Phase](Task::Execute)          \n--------------------------------------------------------------\n", v22, v23);
    if (v12 != v13)
    {
      v24 = 0;
      if (v16 <= 1)
        v25 = 1;
      else
        v25 = (v12 - v13) >> 4;
      do
      {
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(*a3 + v24) + 32))(*(_QWORD *)(*a3 + v24), v8);
        v24 += 16;
        --v25;
      }
      while (v25);
    }
  }
  else
  {
    v27 = "hd/engine.cpp";
    v28 = "Execute";
    v29 = 99;
    v30 = "void pxrInternal__aapl__pxrReserved__::HdEngine::Execute(HdRenderIndex *, HdTaskSharedPtrVector *)";
    v31 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v27, 1, (pxrInternal__aapl__pxrReserved__ *)"Passed nullptr to HdEngine::Execute()");
  }
}

void sub_20C83C570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83C58C(uint64_t a1)
{
  void *v2;

  sub_20C83C5C4(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C83C5C4(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20BF4C2D8((uint64_t)(v2 + 3));
      v4 = v2[2];
      if ((v4 & 7) != 0)
      {
        v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stlxr(v6 - 2, v5));
      }
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

_QWORD *sub_20C83C620(uint64_t a1, _QWORD *a2, uint64_t *a3, _QWORD *a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD *v10;
  _QWORD *result;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;

  v6 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * v6);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = v7;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = v7 & (v8 - 1);
    }
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      result = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = result[1];
          if (v12 == v7)
          {
            if ((result[2] & 0xFFFFFFFFFFFFFFF8) == v6)
              return result;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          result = (_QWORD *)*result;
        }
        while (result);
      }
    }
  }
  sub_20C83C874(a1, v7, a3, a4, (uint64_t)&v21);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v19)
  {
    *v21 = *v19;
    *v19 = v21;
  }
  else
  {
    *v21 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v21)
    {
      v20 = *(_QWORD *)(*v21 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v21;
    }
  }
  result = v21;
  ++*(_QWORD *)(a1 + 24);
  return result;
}

void sub_20C83C850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10, uint64_t a11)
{
  if (a10)
    sub_20C83C990((uint64_t)&a11, a10);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C83C874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t *result;

  v9 = a1 + 16;
  v10 = operator new(0x28uLL);
  *(_QWORD *)a5 = v10;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = 0;
  *v10 = 0;
  v10[1] = a2;
  result = sub_20C83C90C(v10 + 2, a3, a4);
  *(_BYTE *)(a5 + 16) = 1;
  return result;
}

void sub_20C83C8F0(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  sub_20C83C990(v3, v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C83C90C(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v4 = *a2;
  *a1 = *a2;
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      *a1 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20BF4C6D0(a1 + 1, a3);
  return a1;
}

void sub_20C83C990(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  if (*(_BYTE *)(a1 + 8))
  {
    sub_20BF4C2D8((uint64_t)(a2 + 3));
    v3 = a2[2];
    if ((v3 & 7) != 0)
    {
      v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v5 = __ldxr(v4);
      while (__stlxr(v5 - 2, v4));
    }
  }
  else if (!a2)
  {
    return;
  }
  operator delete(a2);
}

uint64_t *sub_20C83C9F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t *result;

  result = sub_20BF2B388(a1, a2);
  if (result)
  {
    sub_20C83CA28(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t sub_20C83CA28(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a2;
  sub_20BEB587C(a1, a2, (uint64_t)&v5);
  v3 = v5;
  v5 = 0;
  if (v3)
    sub_20C83C990((uint64_t)&v6, v3);
  return v2;
}

void sub_20C83CA70(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20C83C5C4(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

_QWORD *sub_20C83CAC4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD *v10;
  _QWORD *result;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;

  v6 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = bswap64(0x9E3779B97F4A7C55 * v6);
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = v7;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = v7 & (v8 - 1);
    }
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      result = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = result[1];
          if (v12 == v7)
          {
            if ((result[2] & 0xFFFFFFFFFFFFFFF8) == v6)
              return result;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          result = (_QWORD *)*result;
        }
        while (result);
      }
    }
  }
  sub_20C83CD18(a1, v7, a4, (uint64_t)&v21);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v19)
  {
    *v21 = *v19;
    *v19 = v21;
  }
  else
  {
    *v21 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v4) = a1 + 16;
    if (*v21)
    {
      v20 = *(_QWORD *)(*v21 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v21;
    }
  }
  result = v21;
  ++*(_QWORD *)(a1 + 24);
  return result;
}

void sub_20C83CCF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *a10, uint64_t a11)
{
  if (a10)
    sub_20C83C990((uint64_t)&a11, a10);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C83CD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;

  v7 = a1 + 16;
  result = operator new(0x28uLL);
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v7;
  *result = 0;
  result[1] = a2;
  v9 = **a3;
  result[2] = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      result[2] &= 0xFFFFFFFFFFFFFFF8;
  }
  result[4] = 0;
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

uint64_t *sub_20C83CD9C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 24);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void **sub_20C83CDC4(void **a1, void **a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20C020410(a1);
}

uint64_t sub_20C83CDD4()
{
  return 1;
}

unint64_t sub_20C83CDDC(uint64_t *a1)
{
  char v2;

  return sub_20C83CEEC((uint64_t)&v2, *a1);
}

BOOL sub_20C83CE00(uint64_t *a1, uint64_t *a2)
{
  return sub_20C10A94C(*a1, *a2);
}

BOOL sub_20C83CE0C(uint64_t *a1, uint64_t a2)
{
  return sub_20C10A94C(*a1, a2);
}

uint64_t sub_20C83CE18()
{
  return 0;
}

_QWORD *sub_20C83CE24(uint64_t *a1, _QWORD *a2)
{
  return pxrInternal__aapl__pxrReserved__::Vt_StreamOutGeneric((uint64_t)&unk_24C5503F0, *a1, a2);
}

void *sub_20C83CE38()
{
  return &unk_24C5503F0;
}

uint64_t sub_20C83CE44()
{
  return 0;
}

uint64_t sub_20C83CE4C()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C83CE58()
{
  return 0;
}

uint64_t sub_20C83CE60()
{
  return 0;
}

BOOL sub_20C83CE68(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB16C6FLL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C83CEA0(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C5503F0, a2, a3);
}

void *sub_20C83CEC0()
{
  return &unk_24C5503F0;
}

uint64_t sub_20C83CECC(uint64_t a1)
{
  return *(_QWORD *)a1;
}

_QWORD *sub_20C83CED4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  a2[1] = &off_24C550338;
  return sub_20C83D064(a2, v2);
}

unint64_t sub_20C83CEEC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(uint64_t **)a2;
  v3 = 0;
  v4 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
  if (v4)
  {
    v5 = 0;
    v6 = v4 >> 3;
    do
    {
      v8 = *v2++;
      v7 = v8;
      if (v5)
      {
        v3 = v7 + ((unint64_t)(v3 + v7 + (v3 + v7) * (v3 + v7)) >> 1);
      }
      else
      {
        v5 = 1;
        v3 = v7;
      }
      --v6;
    }
    while (v6);
  }
  return bswap64(0x9E3779B97F4A7C55 * v3);
}

uint64_t sub_20C83CF48(uint64_t *a1)
{
  unsigned int v2;
  char *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  void *v8;

  v2 = atomic_load((unsigned int *)(*a1 + 24));
  if (v2 != 1)
  {
    v3 = (char *)operator new(0x20uLL);
    v4 = *a1;
    *((_QWORD *)v3 + 1) = 0;
    *((_QWORD *)v3 + 2) = 0;
    *(_QWORD *)v3 = 0;
    sub_20C83CFEC(v3, *(const void **)v4, *(_QWORD *)(v4 + 8), (uint64_t)(*(_QWORD *)(v4 + 8) - *(_QWORD *)v4) >> 3);
    v5 = (unsigned int *)(v3 + 24);
    atomic_store(0, (unsigned int *)v3 + 6);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v8 = (void *)*a1;
    *a1 = (uint64_t)v3;
    sub_20C020410(&v8);
  }
  return *a1;
}

void sub_20C83CFD8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C83CFEC(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C83D048(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C83D064(_QWORD *a1, uint64_t a2)
{
  char *v4;
  _QWORD *result;
  unsigned int *v6;
  unsigned int v7;

  v4 = (char *)operator new(0x20uLL);
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  result = sub_20C83CFEC(v4, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v6 = (unsigned int *)(v4 + 24);
  atomic_store(0, (unsigned int *)v4 + 6);
  *a1 = v4;
  do
    v7 = __ldxr(v6);
  while (__stxr(v7 + 1, v6));
  return result;
}

void sub_20C83D0CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_20C83D0E0()
{
  void *__p[2];
  char v1;
  void *v2[2];
  char v3;

  sub_20BDDC0E4(v2, "HdInterpolationConstant");
  sub_20BDDC0E4(__p, "constant");
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550400, 0, (uint64_t)v2, (uint64_t)__p);
  if (v1 < 0)
    operator delete(__p[0]);
  if (v3 < 0)
    operator delete(v2[0]);
  sub_20BDDC0E4(v2, "HdInterpolationUniform");
  sub_20BDDC0E4(__p, "uniform");
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550400, 1, (uint64_t)v2, (uint64_t)__p);
  if (v1 < 0)
    operator delete(__p[0]);
  if (v3 < 0)
    operator delete(v2[0]);
  sub_20BDDC0E4(v2, "HdInterpolationVarying");
  sub_20BDDC0E4(__p, "varying");
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550400, 2, (uint64_t)v2, (uint64_t)__p);
  if (v1 < 0)
    operator delete(__p[0]);
  if (v3 < 0)
    operator delete(v2[0]);
  sub_20BDDC0E4(v2, "HdInterpolationVertex");
  sub_20BDDC0E4(__p, "vertex");
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550400, 3, (uint64_t)v2, (uint64_t)__p);
  if (v1 < 0)
    operator delete(__p[0]);
  if (v3 < 0)
    operator delete(v2[0]);
  sub_20BDDC0E4(v2, "HdInterpolationFaceVarying");
  sub_20BDDC0E4(__p, "faceVarying");
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550400, 4, (uint64_t)v2, (uint64_t)__p);
  if (v1 < 0)
    operator delete(__p[0]);
  if (v3 < 0)
    operator delete(v2[0]);
  sub_20BDDC0E4(v2, "HdInterpolationInstance");
  sub_20BDDC0E4(__p, "instance");
  pxrInternal__aapl__pxrReserved__::TfEnum::_AddName((std::string::size_type)&unk_24C550400, 5, (uint64_t)v2, (uint64_t)__p);
  if (v1 < 0)
    operator delete(__p[0]);
  if (v3 < 0)
    operator delete(v2[0]);
}

void sub_20C83D310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInvertCullStyle(uint64_t result)
{
  if (result <= 5)
    return dword_20CB16CFC[(int)result];
  return result;
}

void sub_20C83D384()
{
  if (!atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::HD_ENABLE_SHARED_EXT_COMPUTATION_DATA))
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<int>((uint64_t)&pxrInternal__aapl__pxrReserved__::HD_ENABLE_SHARED_EXT_COMPUTATION_DATA);
    atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::HD_ENABLE_SHARED_EXT_COMPUTATION_DATA);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputation::_IsEnabledSharedExtComputationData(pxrInternal__aapl__pxrReserved__::HdExtComputation *this)
{
  unsigned __int8 v1;
  _DWORD *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E2F0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E2F0))
  {
    v3 = (_DWORD *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::HD_ENABLE_SHARED_EXT_COMPUTATION_DATA);
    if (!v3)
    {
      pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<int>((uint64_t)&pxrInternal__aapl__pxrReserved__::HD_ENABLE_SHARED_EXT_COMPUTATION_DATA);
      v3 = (_DWORD *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::HD_ENABLE_SHARED_EXT_COMPUTATION_DATA);
    }
    byte_25498E2E8 = *v3 == 1;
    __cxa_guard_release(&qword_25498E2F0);
  }
  return byte_25498E2E8;
}

void sub_20C83D450(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E2F0);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::HdExtComputation::HdExtComputation(pxrInternal__aapl__pxrReserved__::HdExtComputation *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  pxrInternal__aapl__pxrReserved__::HdSprim *v2;
  double result;

  v2 = pxrInternal__aapl__pxrReserved__::HdSprim::HdSprim(this, a2);
  *(_QWORD *)v2 = off_24C550420;
  result = 0.0;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  return result;
}

{
  pxrInternal__aapl__pxrReserved__::HdSprim *v2;
  double result;

  v2 = pxrInternal__aapl__pxrReserved__::HdSprim::HdSprim(this, a2);
  *(_QWORD *)v2 = off_24C550420;
  result = 0.0;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputation::~HdExtComputation(void **this)
{
  void **v2;

  *this = off_24C550420;
  if (*((char *)this + 127) < 0)
    operator delete(this[13]);
  v2 = this + 10;
  sub_20C7E4DAC(&v2);
  v2 = this + 7;
  sub_20C823034(&v2);
  v2 = this + 4;
  sub_20BEEB2B8(&v2);
  pxrInternal__aapl__pxrReserved__::HdSprim::~HdSprim((pxrInternal__aapl__pxrReserved__::HdSprim *)this);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdExtComputation::~HdExtComputation(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::HdExtComputation::_Sync(void **this, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *a2, pxrInternal__aapl__pxrReserved__::HdRenderParam *a3, unsigned int *a4)
{
  const char *Text;
  const char *v8;
  char *v9;
  int v10;
  const char *v11;
  char *v12;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v13;
  void *v14;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v15;
  void *v16;
  void **v17;
  const char *v18;
  char *v19;
  uint64_t v21;
  int v22;
  void **v23;
  __int128 v24;
  uint64_t v25;
  const char *v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  sub_20BEB59B0((uint64_t)&v21, (uint64_t)"hd", (uint64_t)"void pxrInternal__aapl__pxrReserved__::HdExtComputation::_Sync(HdSceneDelegate *, HdRenderParam *, HdDirtyBits *)");
  if (a2
    || (*(_QWORD *)&v24 = "hd/extComputation.cpp",
        *((_QWORD *)&v24 + 1) = "_Sync",
        v25 = 72,
        v26 = "void pxrInternal__aapl__pxrReserved__::HdExtComputation::_Sync(HdSceneDelegate *, HdRenderParam *, HdDirtyBits *)",
        v27 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v24, "sceneDelegate != nullptr", 0) & 1) != 0))
  {
    if (sub_20C7ED838(14))
    {
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(this + 1));
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"HdExtComputation::Sync for %s (dirty bits = 0x%x)\n", v8, v9, Text, *a4);
    }
    v10 = *a4;
    if ((*a4 & 1) != 0)
    {
      if (sub_20C7ED838(14))
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"    dirty inputs\n", v11, v12);
      (*(void (**)(__int128 *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *))(*(_QWORD *)a2 + 312))(&v24, a2, (char *)this + 8);
      sub_20C0B4038(this + 4);
      *((_OWORD *)this + 2) = v24;
      this[6] = (void *)v25;
      v25 = 0;
      v23 = (void **)&v24;
      v24 = 0uLL;
      sub_20BEEB2B8(&v23);
      (*(void (**)(__int128 *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *))(*(_QWORD *)a2 + 320))(&v24, a2, (char *)this + 8);
      sub_20C83DA88(this + 7);
      *(_OWORD *)(this + 7) = v24;
      this[9] = (void *)v25;
      v25 = 0;
      v23 = (void **)&v24;
      v24 = 0uLL;
      sub_20C823034(&v23);
    }
    if ((v10 & 2) != 0)
    {
      (*(void (**)(__int128 *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *))(*(_QWORD *)a2 + 328))(&v24, a2, (char *)this + 8);
      sub_20C83DAF4(this + 10);
      *((_OWORD *)this + 5) = v24;
      this[12] = (void *)v25;
      v25 = 0;
      v23 = (void **)&v24;
      v24 = 0uLL;
      sub_20C7E4DAC(&v23);
    }
    if ((v10 & 0x40) != 0)
    {
      v13 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
      if (!v13)
        v13 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
      (*(void (**)(__int128 *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *, uint64_t))(*(_QWORD *)a2 + 344))(&v24, a2, (char *)this + 8, (uint64_t)v13 + 136);
      v14 = (void *)*((_QWORD *)&v24 + 1);
      if (*((_QWORD *)&v24 + 1))
        v14 = *(void **)sub_20C83D908((pxrInternal__aapl__pxrReserved__::VtValue *)&v24);
      this[2] = v14;
      sub_20BF4C2D8((uint64_t)&v24);
    }
    if ((v10 & 4) != 0)
    {
      v15 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
      if (!v15)
        v15 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
      (*(void (**)(__int128 *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *, uint64_t))(*(_QWORD *)a2 + 344))(&v24, a2, (char *)this + 8, (uint64_t)v15 + 232);
      v16 = (void *)*((_QWORD *)&v24 + 1);
      if (*((_QWORD *)&v24 + 1))
        v16 = *(void **)sub_20C83D908((pxrInternal__aapl__pxrReserved__::VtValue *)&v24);
      this[3] = v16;
      sub_20BF4C2D8((uint64_t)&v24);
    }
    if ((v10 & 0x20) != 0)
    {
      (*(void (**)(__int128 *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *))(*(_QWORD *)a2 + 360))(&v24, a2, (char *)this + 8);
      v17 = this + 13;
      if (*((char *)this + 127) < 0)
        operator delete(*v17);
      *(_OWORD *)v17 = v24;
      this[15] = (void *)v25;
      if (sub_20C7ED838(14))
      {
        if (*((char *)this + 127) < 0)
          v17 = (void **)*v17;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"    GpuKernelSource = '%s'\n", v18, v19, v17);
      }
    }
    *a4 &= 0xFFFFFF88;
  }
  while (v22--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v21);
}

void sub_20C83D898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BEB24F4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C83D908(pxrInternal__aapl__pxrReserved__::VtValue *a1)
{
  uint64_t v2;
  uint64_t result;

  if ((sub_20C822970(a1) & 1) == 0)
    return pxrInternal__aapl__pxrReserved__::VtValue::_FailGet((uint64_t)a1, (void (*)(void **__return_ptr))sub_20C83DB64, MEMORY[0x24BEDB7B0]);
  v2 = *((_QWORD *)a1 + 1);
  result = (uint64_t)a1;
  if ((v2 & 4) != 0)
    return (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v2 & 0xFFFFFFFFFFFFFFF8) + 168))(a1);
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputation::GetInitialDirtyBitsMask(pxrInternal__aapl__pxrReserved__::HdExtComputation *this)
{
  return 127;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputation::GetDispatchCount(pxrInternal__aapl__pxrReserved__::HdExtComputation *this)
{
  uint64_t result;

  result = *((_QWORD *)this + 2);
  if (!result)
    return *((_QWORD *)this + 3);
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdExtComputation::GetOutputNames@<X0>(pxrInternal__aapl__pxrReserved__::HdExtComputation *this@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  result = (_QWORD *)sub_20BFC9A6C((char **)a2, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)this + 11) - *((_QWORD *)this + 10)) >> 3));
  v5 = (uint64_t *)*((_QWORD *)this + 10);
  v6 = (uint64_t *)*((_QWORD *)this + 11);
  if (v5 != v6)
  {
    result = *(_QWORD **)(a2 + 8);
    do
    {
      if ((unint64_t)result >= *(_QWORD *)(a2 + 16))
      {
        result = sub_20BFCA068((char **)a2, v5);
      }
      else
      {
        v7 = *v5;
        *result = *v5;
        if ((v7 & 7) != 0)
        {
          v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
          do
            v9 = __ldxr(v8);
          while (__stxr(v9 + 2, v8));
          if ((v9 & 1) == 0)
            *result &= 0xFFFFFFFFFFFFFFF8;
        }
        ++result;
      }
      *(_QWORD *)(a2 + 8) = result;
      v5 += 3;
    }
    while (v5 != v6);
  }
  return result;
}

void sub_20C83DA5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::HdExtComputation::IsInputAggregation(pxrInternal__aapl__pxrReserved__::HdExtComputation *this)
{
  return *((_QWORD *)this + 10) == *((_QWORD *)this + 11);
}

void sub_20C83DA88(void **a1)
{
  void *v1;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 24;
        sub_20C8230B8((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_20C83DAF4(void **a1)
{
  char *v1;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v6 = *((_QWORD *)v3 - 3);
        v3 -= 24;
        v5 = v6;
        if ((v6 & 7) != 0)
        {
          v7 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
          do
            v8 = __ldxr(v7);
          while (__stlxr(v8 - 2, v7));
        }
      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

_QWORD *sub_20C83DB64@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = operator new(8uLL);
  *result = 0;
  *a1 = result;
  a1[1] = sub_20C83DBA4;
  a1[2] = MEMORY[0x24BEDB7B0];
  return result;
}

void sub_20C83DBA4(void *__p)
{
  if (__p)
    operator delete(__p);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::HdExtComputationContextInternal(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = off_24C5504C0;
  *(_QWORD *)(this + 8) = this + 16;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = this + 40;
  *(_BYTE *)(this + 56) = 0;
  return this;
}

{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = off_24C5504C0;
  *(_QWORD *)(this + 8) = this + 16;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = this + 40;
  *(_BYTE *)(this + 56) = 0;
  return this;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::~HdExtComputationContextInternal(pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *this)
{
  sub_20C3A3BA4((uint64_t)this + 32, *((_QWORD **)this + 5));
  sub_20C3A3BA4((uint64_t)this + 8, *((_QWORD **)this + 2));
  pxrInternal__aapl__pxrReserved__::HdExtComputationContext::~HdExtComputationContext(this);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::~HdExtComputationContextInternal(this);
  operator delete(v1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::SetInputValue(uint64_t **this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  return sub_20C83DEAC(this + 1, (uint64_t *)a2, (uint64_t *)a2, a3);
}

BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetOutputValue(pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  char *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  const char *v10;
  _QWORD v12[4];
  char v13;
  int v14;

  v6 = (char *)sub_20C0D8030((uint64_t)this + 32, (uint64_t *)a2);
  v7 = v6;
  v8 = (char *)this + 40;
  if (v8 == v6)
  {
    v12[0] = "hd/extComputationContextInternal.cpp";
    v12[1] = "GetOutputValue";
    v12[2] = 55;
    v12[3] = "BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetOutputValue(const TfToken &, VtValue *) const";
    v13 = 0;
    v14 = 6;
    v9 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v9)
    {
      v10 = (const char *)(v9 + 16);
      if (*(char *)(v9 + 39) < 0)
        v10 = *(const char **)v10;
    }
    else
    {
      v10 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueWarning((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)v12, (pxrInternal__aapl__pxrReserved__ *)"output not specified: %s", v10);
  }
  else
  {
    sub_20BF4A9BC(a3, (_QWORD *)v6 + 5);
  }
  return v8 != v7;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::HasComputationError(pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *this)
{
  return *((unsigned __int8 *)this + 56);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::RaiseComputationError(uint64_t this)
{
  *(_BYTE *)(this + 56) = 1;
  return this;
}

char *pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetInputValue(pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *v4;
  unint64_t v6;
  const char *v7;
  unsigned __int8 v8;
  _QWORD v9[4];
  char v10;
  int v11;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)sub_20C0D8030((uint64_t)this + 8, (uint64_t *)a2);
  if ((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)((char *)this + 16) != v4)
    return (char *)v4 + 40;
  v9[0] = "hd/extComputationContextInternal.cpp";
  v9[1] = "GetInputValue";
  v9[2] = 84;
  v9[3] = "virtual const VtValue &pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetInputValue(const "
          "TfToken &) const";
  v10 = 0;
  v11 = 1;
  v6 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
  if (v6)
  {
    v7 = (const char *)(v6 + 16);
    if (*(char *)(v6 + 39) < 0)
      v7 = *(const char **)v7;
  }
  else
  {
    v7 = "";
  }
  pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)v9, (pxrInternal__aapl__pxrReserved__ *)"Asking for invalid input %s", v7);
  v8 = atomic_load((unsigned __int8 *)&qword_25498E308);
  if ((v8 & 1) != 0)
    return (char *)&unk_25498E2F8;
  if (__cxa_guard_acquire(&qword_25498E308))
  {
    qword_25498E300 = 0;
    __cxa_atexit((void (*)(void *))sub_20C1A87F4, &unk_25498E2F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E308);
  }
  return (char *)&unk_25498E2F8;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetOptionalInputValuePtr(pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *v3;

  v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)sub_20C0D8030((uint64_t)this + 8, (uint64_t *)a2);
  if ((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)((char *)this + 16) == v3)
    return 0;
  else
    return (uint64_t)v3 + 40;
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::SetOutputValue(uint64_t **this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  return sub_20C83DEAC(this + 4, (uint64_t *)a2, (uint64_t *)a2, a3);
}

uint64_t *sub_20C83DEAC(uint64_t **a1, uint64_t *a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t **v7;
  uint64_t *result;
  uint64_t *v9;
  uint64_t v10;

  v7 = (uint64_t **)sub_20BF1E63C((uint64_t)a1, &v10, a2);
  result = *v7;
  if (!*v7)
  {
    sub_20C83DF30((uint64_t)a1, a3, a4, (uint64_t)&v9);
    sub_20BDDE1B4(a1, v10, v7, v9);
    return v9;
  }
  return result;
}

uint64_t *sub_20C83DF30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t *result;

  v7 = a1 + 8;
  v8 = (uint64_t *)operator new(0x38uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  result = sub_20C83C90C(v8 + 4, a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C83DF9C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  sub_20C73B33C(v3, v2);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType::~HdExtComputationInputComputationSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  void **v10;

  v10 = (void **)((char *)this + 24);
  sub_20BEEB2B8(&v10);
  v2 = *((_QWORD *)this + 2);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType::HdExtComputationInputComputationSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int **v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "name", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "sourceComputation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "sourceComputationOutputName", 0);
  v3 = *this;
  v23 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v23 = v4;
  }
  v6 = *v2;
  v24 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v24 = v7;
  }
  v9 = this[2];
  v25 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v25 = v10;
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  v12 = (unsigned int *)operator new(0x18uLL);
  v13 = 0;
  this[3] = v12;
  this[4] = v12;
  this[5] = v12 + 6;
  do
  {
    v14 = (&v23)[v13];
    *(_QWORD *)v12 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        *(_QWORD *)v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    v12 += 2;
  }
  while (v13 != 3);
  v17 = (unsigned int **)&v26;
  this[4] = v12;
  do
  {
    v19 = (uint64_t)*--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  while (v17 != &v23);
  return (pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType *)this;
}

void sub_20C83E21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;

  sub_20BEEB2B8(&a9);
  v18 = &a14;
  while (1)
  {
    v20 = *--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v18 == (uint64_t *)&a11)
    {
      if ((*v16 & 7) != 0)
      {
        v23 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      if ((*v15 & 7) != 0)
      {
        v25 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stlxr(v26 - 2, v25));
      }
      if ((*v14 & 7) != 0)
      {
        v27 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::GetName(pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C83E7D4(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
  v9 = *v4;
  if (((unint64_t)*v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v9 = v5;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::GetSourceComputation(pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C83E7D4(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
  v5 = v4[1];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7F80A0((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::GetSourceComputationOutputName(pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C83E7D4(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
  v5 = v4[2];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v7;
  unsigned int **v9;
  unint64_t v10;
  unsigned int **v11;
  unsigned int **v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  __int128 v18;
  _OWORD v19[3];
  uint64_t v20[3];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  v7 = &v21;
  if (*a1)
  {
    v9 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
    if (!v9)
      v9 = sub_20C83E7D4(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
    sub_20BF32220(v20, v9);
    sub_20BDE881C(v19, a1);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  if (*a2)
  {
    v11 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
    if (!v11)
      v11 = sub_20C83E7D4(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
    sub_20BF32220(&v20[v10], v11 + 1);
    sub_20BDE881C(&v19[v10++], a2);
  }
  if (*a3)
  {
    v12 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
    if (!v12)
      v12 = sub_20C83E7D4(&pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens);
    sub_20BF32220(&v20[v10], v12 + 2);
    sub_20BDE881C(&v19[v10++], a3);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v10, v20, (uint64_t *)v19, &v18);
  *a4 = v18;
  for (i = 2; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v19[i]);
  do
  {
    v15 = *--v7;
    v14 = v15;
    if ((v15 & 7) != 0)
    {
      v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
  }
  while (v7 != v20);
}

void sub_20C83E6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char *v17;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;

  for (i = 32; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v21 = *((_QWORD *)v17 - 1);
    v17 -= 8;
    v20 = v21;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    if (v17 == &a17)
      _Unwind_Resume(a1);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::SetName(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::SetSourceComputation(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::SetSourceComputationOutputName(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, a2);
}

unsigned int **sub_20C83E7D4(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C83E81C();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType::~HdExtComputationInputComputationSchemaTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C83E81C()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdExtComputationInputComputationSchemaTokens_StaticTokenType::HdExtComputationInputComputationSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C83E848(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType::~HdExtComputationOutputSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType::HdExtComputationOutputSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "name", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "valueType", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType *)this;
}

void sub_20C83EA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::GetName(pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
  if (!v4)
    v4 = sub_20C83EF24(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
  v9 = *v4;
  if (((unint64_t)*v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v9 = v5;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::GetValueType(pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
  if (!v4)
    v4 = sub_20C83EF24(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
  v5 = v4[1];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C83EC7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C83EC7C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C83EFAC((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  unsigned int **v7;
  unint64_t v8;
  unsigned int **v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17[2];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v17[0] = 0;
  v17[1] = 0;
  memset(v16, 0, sizeof(v16));
  v5 = &v18;
  if (*a1)
  {
    v7 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
    if (!v7)
      v7 = sub_20C83EF24(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
    sub_20BF32220(v17, v7);
    sub_20BDE881C(v16, a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  if (*a2)
  {
    v9 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
    if (!v9)
      v9 = sub_20C83EF24(&pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens);
    sub_20BF32220(&v17[v8], v9 + 1);
    sub_20BDE881C(&v16[v8++], a2);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v8, v17, (uint64_t *)v16, &v15);
  *a3 = v15;
  for (i = 1; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v16[i]);
  do
  {
    v12 = *--v5;
    v11 = v12;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
  }
  while (v5 != v17);
}

void sub_20C83EE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  char *v16;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;

  for (i = 16; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v20 = *((_QWORD *)v16 - 1);
    v16 -= 8;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v16 == &a16)
      _Unwind_Resume(a1);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder::SetName(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder::SetValueType(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, a2);
}

unsigned int **sub_20C83EF24(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C83EF6C();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType::~HdExtComputationOutputSchemaTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C83EF6C()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x28uLL);
  pxrInternal__aapl__pxrReserved__::HdExtComputationOutputSchemaTokens_StaticTokenType::HdExtComputationOutputSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C83EF98(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_20C83EFAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54CDC0, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType::~HdExtComputationPrimvarSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  void **v16;

  v16 = (void **)((char *)this + 40);
  sub_20BEEB2B8(&v16);
  v2 = *((_QWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 3);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 2);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v14 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
}

pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType::HdExtComputationPrimvarSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int **v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v29;
  unsigned int *v30;
  unsigned int *v31;
  unsigned int *v32;
  unsigned int *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "interpolation", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "role", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "sourceComputation", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "sourceComputationOutputName", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 4, "valueType", 0);
  v3 = *this;
  v29 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v29 = v4;
  }
  v6 = *v2;
  v30 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v30 = v7;
  }
  v9 = this[2];
  v31 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v31 = v10;
  }
  v12 = this[3];
  v32 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v32 = v13;
  }
  v15 = this[4];
  v33 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v33 = v16;
  }
  this[5] = 0;
  this[6] = 0;
  this[7] = 0;
  v18 = (unsigned int *)operator new(0x28uLL);
  v19 = 0;
  this[5] = v18;
  this[6] = v18;
  this[7] = v18 + 10;
  do
  {
    v20 = (&v29)[v19];
    *(_QWORD *)v18 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 2, v21));
      if ((v22 & 1) == 0)
        *(_QWORD *)v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v19;
    v18 += 2;
  }
  while (v19 != 5);
  v23 = (unsigned int **)&v34;
  this[6] = v18;
  do
  {
    v25 = (uint64_t)*--v23;
    v24 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
  }
  while (v23 != &v29);
  return (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType *)this;
}

void sub_20C83F34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int v36;

  sub_20BEEB2B8(&a9);
  v22 = &a16;
  while (1)
  {
    v24 = *--v22;
    v23 = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    if (v22 == (uint64_t *)&a11)
    {
      if ((*v20 & 7) != 0)
      {
        v27 = (unsigned int *)(*v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      if ((*v19 & 7) != 0)
      {
        v29 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v30 = __ldxr(v29);
        while (__stlxr(v30 - 2, v29));
      }
      if ((*v18 & 7) != 0)
      {
        v31 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      if ((*v17 & 7) != 0)
      {
        v33 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if ((*v16 & 7) != 0)
      {
        v35 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v36 = __ldxr(v35);
        while (__stlxr(v36 - 2, v35));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::GetInterpolation(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  if (!v4)
    v4 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  v9 = *v4;
  if (((unint64_t)*v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v9 = v5;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::GetRole(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  if (!v4)
    v4 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  v5 = v4[1];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::GetSourceComputation(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  if (!v4)
    v4 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  v5 = v4[2];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7F80A0((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::GetSourceComputationOutputName(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  if (!v4)
    v4 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  v5 = v4[3];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::GetValueType(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  if (!v4)
    v4 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
  v5 = v4[4];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C83EC7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t *v11;
  unsigned int **v13;
  unint64_t v14;
  unsigned int **v15;
  unsigned int **v16;
  unsigned int **v17;
  unsigned int **v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  __int128 v24;
  _OWORD v25[5];
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v27 = 0;
  memset(v26, 0, sizeof(v26));
  memset(v25, 0, sizeof(v25));
  v11 = &v28;
  if (*a1)
  {
    v13 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    if (!v13)
      v13 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    sub_20BF32220(v26, v13);
    sub_20BDE881C(v25, a1);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  if (*a2)
  {
    v15 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    if (!v15)
      v15 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    sub_20BF32220((_QWORD *)((unint64_t)v26 | (8 * v14)), v15 + 1);
    sub_20BDE881C(&v25[v14++], a2);
  }
  if (*a3)
  {
    v16 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    if (!v16)
      v16 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    sub_20BF32220((_QWORD *)v26 + v14, v16 + 2);
    sub_20BDE881C(&v25[v14++], a3);
  }
  if (*a4)
  {
    v17 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    if (!v17)
      v17 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    sub_20BF32220((_QWORD *)v26 + v14, v17 + 3);
    sub_20BDE881C(&v25[v14++], a4);
  }
  if (*a5)
  {
    v18 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    if (!v18)
      v18 = sub_20C83FBE0(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens);
    sub_20BF32220((_QWORD *)v26 + v14, v18 + 4);
    sub_20BDE881C(&v25[v14++], a5);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v14, (uint64_t *)v26, (uint64_t *)v25, &v24);
  *a6 = v24;
  for (i = 4; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v25[i]);
  do
  {
    v21 = *--v11;
    v20 = v21;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
  }
  while (v11 != (uint64_t *)v26);
}

void sub_20C83FAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  char *v21;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;

  for (i = 64; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v25 = *((_QWORD *)v21 - 1);
    v21 -= 8;
    v24 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
    if (v21 == &a21)
      _Unwind_Resume(a1);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetInterpolation(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetRole(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetSourceComputation(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetSourceComputationOutputName(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 48), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::SetValueType(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 64), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, (uint64_t *)this + 6, (uint64_t *)this + 8, a2);
}

unsigned int **sub_20C83FBE0(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C83FC28();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType::~HdExtComputationPrimvarSchemaTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C83FC28()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x40uLL);
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarSchemaTokens_StaticTokenType::HdExtComputationPrimvarSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C83FC54(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType::~HdExtComputationPrimvarsSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *this)
{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType::HdExtComputationPrimvarsSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *this)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  _QWORD *v6;
  _QWORD *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "extComputationPrimvars", 0);
  v3 = *v2;
  if ((*v2 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v3 &= 0xFFFFFFFFFFFFFFF8;
  }
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  v6 = operator new(8uLL);
  *((_QWORD *)this + 1) = v6;
  *((_QWORD *)this + 2) = v6;
  *v6 = v3;
  v7 = v6 + 1;
  *((_QWORD *)this + 3) = v6 + 1;
  if ((v3 & 7) != 0)
  {
    v8 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *v6 &= 0xFFFFFFFFFFFFFFF8;
    *((_QWORD *)this + 2) = v7;
    do
      v10 = __ldxr(v8);
    while (__stlxr(v10 - 2, v8));
  }
  else
  {
    *((_QWORD *)this + 2) = v7;
  }
  return this;
}

void sub_20C83FDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v13;
  unsigned int v14;

  v11 = v10;
  sub_20BEEB2B8(&a9);
  if ((v11 & 7) != 0)
  {
    v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  sub_20C96B3E4(v9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetExtComputationPrimvarNames@<X0>(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = *(_QWORD *)this;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetPrimvar(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema *this@<X0>, unsigned int **a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = *a2;
  if (((unint64_t)*a2 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v11 = v4;
  }
  sub_20C7E0698((uint64_t *)this, &v12);
  sub_20C7E0E2C(a3, &v12);
  v6 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if ((v11 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
}

void sub_20C83FF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *p_shared_owners;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *a1;
  if (!*a1)
  {
    v14 = 0;
    v15 = 0;
    sub_20C7E0E2C(a2, &v14);
    v8 = v15;
    if (!v15)
      return;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    goto LABEL_16;
  }
  if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens))
    sub_20C80A110(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v12, v3);
  sub_20C7E0B14((uint64_t)&v12, &v14);
  sub_20C7E0E2C(a2, &v14);
  v5 = v15;
  if (v15)
  {
    v6 = (unint64_t *)&v15->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
LABEL_16:
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
  if (!result)
    return sub_20C80A110(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E348);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E348))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
    if (!v3)
      v3 = sub_20C80A110(&pxrInternal__aapl__pxrReserved__::HdExtComputationPrimvarsSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E310, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E310, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E348);
  }
  return &unk_25498E310;
}

void sub_20C84012C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E348);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType::~HdExtComputationSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  void **v25;

  v25 = (void **)((char *)this + 64);
  sub_20BEEB2B8(&v25);
  v2 = *((_QWORD *)this + 7);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 6);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 5);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 4);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  v14 = *((_QWORD *)this + 3);
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  v17 = *((_QWORD *)this + 2);
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  v20 = *((_QWORD *)this + 1);
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stlxr(v22 - 2, v21));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v23 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v24 = __ldxr(v23);
    while (__stlxr(v24 - 2, v23));
  }
}

pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType::HdExtComputationSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *this)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "extComputation", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "inputValues", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "inputComputations", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "outputs", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "glslKernel", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "cpuCallback", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "dispatchCount", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "elementCount", 0);
  v3 = *(_QWORD *)this;
  v38 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v38 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = *v2;
  v39 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v39 &= 0xFFFFFFFFFFFFFFF8;
  }
  v9 = *((_QWORD *)this + 2);
  v40 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v40 &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *((_QWORD *)this + 3);
  v41 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v41 &= 0xFFFFFFFFFFFFFFF8;
  }
  v15 = *((_QWORD *)this + 4);
  v42 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v42 &= 0xFFFFFFFFFFFFFFF8;
  }
  v18 = *((_QWORD *)this + 5);
  v43 = v18;
  if ((v18 & 7) != 0)
  {
    v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 2, v19));
    if ((v20 & 1) == 0)
      v43 &= 0xFFFFFFFFFFFFFFF8;
  }
  v21 = *((_QWORD *)this + 6);
  v44 = v21;
  if ((v21 & 7) != 0)
  {
    v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 2, v22));
    if ((v23 & 1) == 0)
      v44 &= 0xFFFFFFFFFFFFFFF8;
  }
  v24 = *((_QWORD *)this + 7);
  v45 = v24;
  if ((v24 & 7) != 0)
  {
    v25 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 2, v25));
    if ((v26 & 1) == 0)
      v45 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  v27 = operator new(0x40uLL);
  v28 = 0;
  *((_QWORD *)this + 8) = v27;
  *((_QWORD *)this + 9) = v27;
  *((_QWORD *)this + 10) = v27 + 8;
  do
  {
    v29 = *(&v38 + v28);
    *v27 = v29;
    if ((v29 & 7) != 0)
    {
      v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
      do
        v31 = __ldxr(v30);
      while (__stxr(v31 + 2, v30));
      if ((v31 & 1) == 0)
        *v27 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v28;
    ++v27;
  }
  while (v28 != 8);
  v32 = &v46;
  *((_QWORD *)this + 9) = v27;
  do
  {
    v34 = *--v32;
    v33 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stlxr(v36 - 2, v35));
    }
  }
  while (v32 != &v38);
  return this;
}

void sub_20C8405F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  unsigned int *v34;
  unsigned int v35;
  unsigned int *v36;
  unsigned int v37;
  unsigned int *v38;
  unsigned int v39;
  unsigned int *v40;
  unsigned int v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;

  sub_20BEEB2B8(&a10);
  v29 = &a20;
  while (1)
  {
    v31 = *--v29;
    v30 = v31;
    if ((v31 & 7) != 0)
    {
      v32 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v33 = __ldxr(v32);
      while (__stlxr(v33 - 2, v32));
    }
    if (v29 == (uint64_t *)&a12)
    {
      if ((*v27 & 7) != 0)
      {
        v34 = (unsigned int *)(*v27 & 0xFFFFFFFFFFFFFFF8);
        do
          v35 = __ldxr(v34);
        while (__stlxr(v35 - 2, v34));
      }
      if ((*v26 & 7) != 0)
      {
        v36 = (unsigned int *)(*v26 & 0xFFFFFFFFFFFFFFF8);
        do
          v37 = __ldxr(v36);
        while (__stlxr(v37 - 2, v36));
      }
      if ((*v25 & 7) != 0)
      {
        v38 = (unsigned int *)(*v25 & 0xFFFFFFFFFFFFFFF8);
        do
          v39 = __ldxr(v38);
        while (__stlxr(v39 - 2, v38));
      }
      if ((*v24 & 7) != 0)
      {
        v40 = (unsigned int *)(*v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v41 = __ldxr(v40);
        while (__stlxr(v41 - 2, v40));
      }
      if ((*v23 & 7) != 0)
      {
        v42 = (unsigned int *)(*v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v43 = __ldxr(v42);
        while (__stlxr(v43 - 2, v42));
      }
      if ((*v22 & 7) != 0)
      {
        v44 = (unsigned int *)(*v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      if ((*v21 & 7) != 0)
      {
        v46 = (unsigned int *)(*v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v47 = __ldxr(v46);
        while (__stlxr(v47 - 2, v46));
      }
      if ((*v20 & 7) != 0)
      {
        v48 = (unsigned int *)(*v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v49 = __ldxr(v48);
        while (__stlxr(v49 - 2, v48));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputValues(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E0698((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputComputations(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C82D994((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetOutputs(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 3);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C82D994((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetGlslKernel(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 4);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C840A94((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C840A94(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C828D8C((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetCpuCallback(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 5);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C840BE4((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C840BE4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v10);
    if (v10)
    {
      v4 = v11;
      *a2 = v10;
      a2[1] = v4;
      if (v4)
      {
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v6 = __ldxr(p_shared_owners);
        while (__stxr(v6 + 1, p_shared_owners));
      }
    }
    else
    {
      *a2 = 0;
      a2[1] = 0;
    }
    v7 = v11;
    if (v11)
    {
      v8 = (unint64_t *)&v11->__shared_owners_;
      do
        v9 = __ldaxr(v8);
      while (__stlxr(v9 - 1, v8));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDispatchCount(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 6);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C840D58((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C840D58(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C841AA4((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetElementCount(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!v4)
    v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 7);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C840D58((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, _OWORD *a8@<X8>)
{
  _OWORD *v14;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v16;
  unint64_t v17;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v18;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v19;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v20;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v21;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v22;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v23;
  uint64_t i;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  __int128 v30;
  _OWORD v31[7];
  _OWORD v32[3];
  uint64_t v33;
  _QWORD v34[3];

  v34[1] = *MEMORY[0x24BDAC8D0];
  v33 = 0;
  memset(v32, 0, sizeof(v32));
  memset(v31, 0, sizeof(v31));
  v14 = v34;
  if (*a1)
  {
    v16 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v16)
      v16 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220(v32, (_QWORD *)v16 + 1);
    sub_20BDE881C(v31, a1);
    v17 = 1;
  }
  else
  {
    v17 = 0;
  }
  if (*a2)
  {
    v18 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v18)
      v18 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220((_QWORD *)((unint64_t)v32 | (8 * v17)), (_QWORD *)v18 + 2);
    sub_20BDE881C(&v31[v17++], a2);
  }
  if (*a3)
  {
    v19 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v19)
      v19 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220((_QWORD *)v32 + v17, (_QWORD *)v19 + 3);
    sub_20BDE881C(&v31[v17++], a3);
  }
  if (*a4)
  {
    v20 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v20)
      v20 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220((_QWORD *)v32 + v17, (_QWORD *)v20 + 4);
    sub_20BDE881C(&v31[v17++], a4);
  }
  if (*a5)
  {
    v21 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v21)
      v21 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220((_QWORD *)v32 + v17, (_QWORD *)v21 + 5);
    sub_20BDE881C(&v31[v17++], a5);
  }
  if (*a6)
  {
    v22 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v22)
      v22 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220((_QWORD *)v32 + v17, (_QWORD *)v22 + 6);
    sub_20BDE881C(&v31[v17++], a6);
  }
  if (*a7)
  {
    v23 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v23)
      v23 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    sub_20BF32220((_QWORD *)v32 + v17, (_QWORD *)v23 + 7);
    sub_20BDE881C(&v31[v17++], a7);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v17, (uint64_t *)v32, (uint64_t *)v31, &v30);
  *a8 = v30;
  for (i = 6; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v31[i]);
  do
  {
    v26 = *((_QWORD *)v14 - 1);
    v14 = (_OWORD *)((char *)v14 - 8);
    v25 = v26;
    if ((v26 & 7) != 0)
    {
      v27 = (unsigned int *)(v25 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
  }
  while (v14 != v32);
}

void sub_20C8411BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  char *v27;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;

  for (i = 96; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a13 + i));
  while (1)
  {
    v31 = *((_QWORD *)v27 - 1);
    v27 -= 8;
    v30 = v31;
    if ((v31 & 7) != 0)
    {
      v32 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
      do
        v33 = __ldxr(v32);
      while (__stlxr(v33 - 2, v32));
    }
    if (v27 == &a27)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens))
      sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C841340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  if (!result)
    return sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E388);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E388))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    if (!v3)
      v3 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E350, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E388);
  }
  return &unk_25498E350;
}

void sub_20C84141C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E388);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputValuesLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E3C8);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E3C8);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 8), dword_25498E390);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E390, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E3C8);
    }
  }
  return dword_25498E390;
}

void sub_20C8414DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E3C8);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetInputComputationsLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E408);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E408);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 16), dword_25498E3D0);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E3D0, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E408);
    }
  }
  return dword_25498E3D0;
}

void sub_20C84159C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E408);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetOutputsLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E448);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E448);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 24), dword_25498E410);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E410, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E448);
    }
  }
  return dword_25498E410;
}

void sub_20C84165C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E448);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetGlslKernelLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E488);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E488);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 32), dword_25498E450);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E450, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E488);
    }
  }
  return dword_25498E450;
}

void sub_20C84171C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E488);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetCpuCallbackLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E4C8);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E4C8);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 40), dword_25498E490);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E490, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E4C8);
    }
  }
  return dword_25498E490;
}

void sub_20C8417DC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E4C8);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDispatchCountLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E508);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E508);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 48), dword_25498E4D0);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E4D0, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E508);
    }
  }
  return dword_25498E4D0;
}

void sub_20C84189C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E508);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetElementCountLocator(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E548);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchema *)__cxa_guard_acquire(&qword_25498E548);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      if (!v4)
        v4 = sub_20C809E68(&pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E350, (pxrInternal__aapl__pxrReserved__::HdExtComputationSchemaTokens_StaticTokenType *)((char *)v4 + 56), dword_25498E510);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E510, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E548);
    }
  }
  return dword_25498E510;
}

void sub_20C84195C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E548);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetInputValues(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetInputComputations(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetOutputs(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetGlslKernel(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 48), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetCpuCallback(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 64), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetDispatchCount(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 80), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::SetElementCount(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 96), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtComputationSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, (uint64_t *)this + 6, (uint64_t *)this + 8, (uint64_t *)this + 10, (uint64_t *)this + 12, a2);
}

void *sub_20C841AA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54FE68, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::_GenerateDependencyMap@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdRenderIndex *v4;
  uint64_t v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char **v13;
  _QWORD *i;
  pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *v15;
  _QWORD *Sprim;
  _QWORD *v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  int v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;

  v4 = *(pxrInternal__aapl__pxrReserved__::HdRenderIndex **)(a2 + 8);
  v37 = 0u;
  memset(v36, 0, sizeof(v36));
  v5 = *a1;
  v6 = a1[1];
  if (*a1 == v6)
  {
    *(_OWORD *)a3 = 0uLL;
    *(_OWORD *)(a3 + 16) = 0uLL;
    *(_DWORD *)(a3 + 32) = 1065353216;
  }
  else
  {
    do
    {
      *(_QWORD *)&v32 = 0;
      v7 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      if (!v7)
        v7 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
      *(_QWORD *)&v32 = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetSprim(v4, (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)((char *)v7 + 280), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v5 + 28));
      sub_20C841E1C(v36, &v32);
      v5 += 64;
    }
    while (v5 != v6);
    v8 = *((_QWORD *)&v37 + 1);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_DWORD *)(a3 + 32) = 1065353216;
    if (v8)
    {
      do
      {
        v35 = 0;
        v35 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)&v36[0] + 1) + (((unint64_t)v37 >> 6) & 0x3FFFFFFFFFFFFF8))
                        + 8 * (v37 & 0x1FF));
        *(_QWORD *)&v37 = v37 + 1;
        *((_QWORD *)&v37 + 1) = v8 - 1;
        if ((unint64_t)v37 >= 0x400)
        {
          operator delete(**((void ***)&v36[0] + 1));
          *((_QWORD *)&v36[0] + 1) += 8;
          *(_QWORD *)&v37 = v37 - 512;
        }
        if (!sub_20C842FE4((_QWORD *)a3, &v35))
        {
          *(_QWORD *)&v32 = &v35;
          v9 = sub_20C8430D0(a3, &v35, (uint64_t)&unk_20CAC184C, (_QWORD **)&v32);
          v32 = 0u;
          v33 = 0u;
          v34 = 1065353216;
          v10 = *(_QWORD *)(v35 + 56);
          v11 = *(_QWORD *)(v35 + 64);
          if (v10 != v11)
          {
            v12 = v9;
            v13 = (char **)(v9 + 3);
            do
            {
              sub_20C2215D8((uint64_t)&v32, (unsigned int *)(v10 + 8), (_DWORD *)(v10 + 8));
              v10 += 24;
            }
            while (v10 != v11);
            for (i = (_QWORD *)v33; i; i = (_QWORD *)*i)
            {
              v31 = 0;
              v15 = (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
              if (!v15)
                v15 = sub_20C8092E8(&pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens);
              Sprim = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetSprim(v4, (pxrInternal__aapl__pxrReserved__::HdPrimTypeTokens_StaticTokenType *)((char *)v15 + 280), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2));
              v17 = Sprim;
              v31 = Sprim;
              v19 = (_QWORD *)v12[4];
              v18 = v12[5];
              if ((unint64_t)v19 >= v18)
              {
                v21 = ((char *)v19 - *v13) >> 3;
                if ((unint64_t)(v21 + 1) >> 61)
                  sub_20BDDF694();
                v22 = v18 - (_QWORD)*v13;
                v23 = v22 >> 2;
                if (v22 >> 2 <= (unint64_t)(v21 + 1))
                  v23 = v21 + 1;
                if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8)
                  v24 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v24 = v23;
                if (v24)
                {
                  v25 = (char *)sub_20BDDF6A8((uint64_t)(v12 + 5), v24);
                  v17 = v31;
                }
                else
                {
                  v25 = 0;
                }
                v26 = &v25[8 * v21];
                *(_QWORD *)v26 = v17;
                v20 = v26 + 8;
                v28 = (char *)v12[3];
                v27 = (char *)v12[4];
                if (v27 != v28)
                {
                  do
                  {
                    v29 = *((_QWORD *)v27 - 1);
                    v27 -= 8;
                    *((_QWORD *)v26 - 1) = v29;
                    v26 -= 8;
                  }
                  while (v27 != v28);
                  v27 = *v13;
                }
                v12[3] = v26;
                v12[4] = v20;
                v12[5] = &v25[8 * v24];
                if (v27)
                  operator delete(v27);
              }
              else
              {
                *v19 = Sprim;
                v20 = v19 + 1;
              }
              v12[4] = v20;
              sub_20C841E1C(v36, &v31);
            }
          }
          sub_20C220E58((uint64_t)&v32);
        }
        v8 = *((_QWORD *)&v37 + 1);
      }
      while (*((_QWORD *)&v37 + 1));
    }
  }
  return sub_20C842C3C(v36);
}

void sub_20C841DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  sub_20BEC57F0(v9);
  sub_20C842C3C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C841E1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v4 = a1[2];
  v5 = a1[1];
  if (v4 == v5)
    v6 = 0;
  else
    v6 = ((v4 - v5) << 6) - 1;
  v7 = a1[4];
  v8 = a1[5];
  v9 = v8 + v7;
  if (v6 == v8 + v7)
  {
    sub_20C842CD0(a1);
    v7 = a1[4];
    v8 = a1[5];
    v5 = a1[1];
    v9 = v7 + v8;
  }
  *(_QWORD *)(*(_QWORD *)(v5 + ((v9 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v9 & 0x1FF)) = *a2;
  a1[5] = v8 + 1;
  v10 = v7 + v8 + 1;
  v11 = a1[1];
  v12 = (_QWORD *)(v11 + 8 * (v10 >> 9));
  v13 = *v12 + 8 * (v10 & 0x1FF);
  if (a1[2] == v11)
    v13 = 0;
  if (v13 == *v12)
    v13 = *(v12 - 1) + 4096;
  return v13 - 8;
}

void pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::_LimitTimeSamples(unint64_t a1, double **a2)
{
  double *v4;
  double *v5;
  unint64_t v6;
  unint64_t v7;

  std::__sort<std::__less<double,double> &,double *>();
  v4 = sub_20C27E94C(*a2, a2[1]);
  v5 = *a2;
  if (a2[1] != v4)
    a2[1] = v4;
  v6 = v4 - v5;
  if (v6 >= a1)
    v7 = a1;
  else
    v7 = v6;
  sub_20BDDEC88((uint64_t)a2, v7);
}

BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::_InvokeComputation(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::VtValue *a3, uint64_t a4, const pxrInternal__aapl__pxrReserved__::VtValue *a5, uint64_t a6, pxrInternal__aapl__pxrReserved__::VtValue *a7, unint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  const char *Text;
  char *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  const char *v25;
  const char *v26;
  char *v27;
  char *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  char v33;
  uint64_t *v34[8];

  pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::HdExtComputationContextInternal((uint64_t)v34);
  if (a4)
  {
    v16 = 0;
    do
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::SetInputValue(v34, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a2[4] + v16), a3);
      v16 += 8;
      a3 = (const pxrInternal__aapl__pxrReserved__::VtValue *)((char *)a3 + 16);
      --a4;
    }
    while (a4);
  }
  if (a6)
  {
    v17 = 0;
    do
    {
      pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::SetInputValue(v34, (const pxrInternal__aapl__pxrReserved__::TfToken *)(a2[7] + v17), a5);
      v17 += 24;
      a5 = (const pxrInternal__aapl__pxrReserved__::VtValue *)((char *)a5 + 16);
      --a6;
    }
    while (a6);
  }
  (*(void (**)(uint64_t, _QWORD *, uint64_t **))(*(_QWORD *)a1 + 368))(a1, a2 + 1, v34);
  if ((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::HasComputationError((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)v34) & 1) != 0)
  {
    v29 = "hd/extComputationUtils.cpp";
    v30 = "_InvokeComputation";
    v31 = 146;
    v32 = "static BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::_InvokeComputation(HdSceneDelegate &, con"
          "st HdExtComputation &, TfSpan<const VtValue>, TfSpan<const VtValue>, TfSpan<VtValue>)";
    v33 = 0;
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 1));
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v29, (pxrInternal__aapl__pxrReserved__ *)"Error invoking computation %s.\n", v19, Text);
    v20 = 0;
  }
  else if (a8)
  {
    v21 = 0;
    v20 = 0;
    v22 = 0;
    while (1)
    {
      v23 = a2[10];
      if (!pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetOutputValue((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)v34, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v23 + v21), a7))break;
      v20 = ++v22 >= a8;
      v21 += 24;
      a7 = (pxrInternal__aapl__pxrReserved__::VtValue *)((char *)a7 + 16);
      if (a8 == v22)
        goto LABEL_20;
    }
    v29 = "hd/extComputationUtils.cpp";
    v30 = "_InvokeComputation";
    v31 = 156;
    v32 = "static BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::_InvokeComputation(HdSceneDelegate &, con"
          "st HdExtComputation &, TfSpan<const VtValue>, TfSpan<const VtValue>, TfSpan<VtValue>)";
    v33 = 0;
    v24 = *(_QWORD *)(v23 + v21) & 0xFFFFFFFFFFFFFFF8;
    if (v24)
    {
      v25 = (const char *)(v24 + 16);
      if (*(char *)(v24 + 39) < 0)
        v25 = *(const char **)v25;
    }
    else
    {
      v25 = "";
    }
    v26 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 1));
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v29, (pxrInternal__aapl__pxrReserved__ *)"Error getting out %s for computation %s.\n", v27, v25, v26);
  }
  else
  {
    v20 = 1;
  }
LABEL_20:
  pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::~HdExtComputationContextInternal((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)v34);
  return v20;
}

void sub_20C842168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::~HdExtComputationContextInternal((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::GetComputedPrimvarValues@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v6;
  BOOL v7;
  pxrInternal__aapl__pxrReserved__::HdExtComputation **v8;
  pxrInternal__aapl__pxrReserved__::HdExtComputation *v9;
  pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  uint64_t *v11;
  uint64_t *v12;
  _QWORD *v13;
  pxrInternal__aapl__pxrReserved__::HdExtComputation *v14;
  const pxrInternal__aapl__pxrReserved__::TfToken *v15;
  const pxrInternal__aapl__pxrReserved__::TfToken *v16;
  _QWORD *v17;
  const pxrInternal__aapl__pxrReserved__::TfToken *v18;
  const pxrInternal__aapl__pxrReserved__::TfToken *v19;
  _QWORD *v20;
  const char *Text;
  char *v22;
  uint64_t *v23;
  uint64_t *v24;
  _QWORD *v25;
  unint64_t v26;
  const char *v27;
  const char *v28;
  char *v29;
  uint64_t *i;
  uint64_t *v31;
  _QWORD *v32;
  _QWORD *v33;
  pxrInternal__aapl__pxrReserved__::HdExtComputation **v35;
  pxrInternal__aapl__pxrReserved__::HdExtComputation **v36;
  pxrInternal__aapl__pxrReserved__::HdExtComputation **v37;
  uint64_t v38;
  _OWORD v39[2];
  int v40;
  _QWORD v41[5];
  void *__p;
  _BYTE *v43;
  uint64_t v44;
  _BYTE v45[40];
  _QWORD v46[3];
  char *v47;
  const char *v48;
  uint64_t v49;
  const char *v50;
  char v51;
  uint64_t *v52;
  _QWORD v53[2];
  uint64_t *v54[10];

  v54[8] = *(uint64_t **)MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::_GenerateDependencyMap(a1, a2, (uint64_t)v45);
  __p = 0;
  v43 = 0;
  v44 = 0;
  sub_20C843354((uint64_t)v41, (uint64_t)v45);
  v7 = pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::DependencySort(v41, &__p, v6);
  sub_20BEC57F0((uint64_t)v41);
  if (v7)
  {
    v37 = 0;
    v38 = 0;
    v36 = 0;
    sub_20C8436D0(&v36, __p, (uint64_t)v43, (v43 - (_BYTE *)__p) >> 3);
    memset(v39, 0, sizeof(v39));
    v40 = 1065353216;
    v8 = v36;
    v35 = v37;
    if (v36 != v37)
    {
      do
      {
        v9 = *v8;
        v10 = (pxrInternal__aapl__pxrReserved__::HdExtComputation *)((char *)*v8 + 8);
        v11 = (uint64_t *)*((_QWORD *)*v8 + 4);
        v12 = (uint64_t *)*((_QWORD *)*v8 + 5);
        if (v11 != v12)
        {
          do
          {
            (*(void (**)(uint64_t **__return_ptr, uint64_t, pxrInternal__aapl__pxrReserved__::SdfPath *, uint64_t *))(*(_QWORD *)a2 + 344))(v54, a2, v10, v11);
            v47 = (char *)v11;
            v13 = sub_20C83CAC4((uint64_t)v39, v11, (uint64_t)&unk_20CAC184C, (uint64_t **)&v47);
            sub_20BF4B5D8(v13 + 3, v54);
            sub_20BF4C2D8((uint64_t)v54);
            ++v11;
          }
          while (v11 != v12);
          v9 = *v8;
        }
        if (!pxrInternal__aapl__pxrReserved__::HdExtComputation::IsInputAggregation(v9))
        {
          pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::HdExtComputationContextInternal((uint64_t)v54);
          v14 = *v8;
          v15 = (const pxrInternal__aapl__pxrReserved__::TfToken *)*((_QWORD *)*v8 + 4);
          v16 = (const pxrInternal__aapl__pxrReserved__::TfToken *)*((_QWORD *)*v8 + 5);
          if (v15 != v16)
          {
            do
            {
              v17 = sub_20BF2B388(v39, v15);
              if (v17)
                pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::SetInputValue(v54, v15, (const pxrInternal__aapl__pxrReserved__::VtValue *)(v17 + 3));
              v15 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v15 + 8);
            }
            while (v15 != v16);
            v14 = *v8;
          }
          v18 = (const pxrInternal__aapl__pxrReserved__::TfToken *)*((_QWORD *)v14 + 7);
          v19 = (const pxrInternal__aapl__pxrReserved__::TfToken *)*((_QWORD *)v14 + 8);
          while (v18 != v19)
          {
            v20 = sub_20BF2B388(v39, (_QWORD *)v18 + 2);
            if (v20)
              pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::SetInputValue(v54, v18, (const pxrInternal__aapl__pxrReserved__::VtValue *)(v20 + 3));
            v18 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v18 + 24);
          }
          (*(void (**)(uint64_t, pxrInternal__aapl__pxrReserved__::SdfPath *, uint64_t **))(*(_QWORD *)a2 + 368))(a2, v10, v54);
          if (pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::HasComputationError((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)v54))
          {
            v47 = "hd/extComputationUtils.cpp";
            v48 = "_ExecuteComputations";
            v49 = 215;
            v50 = "HdExtComputationUtils::ValueStore pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_ExecuteCom"
                  "putations(HdExtComputationConstPtrVector, HdSceneDelegate *)";
            v51 = 0;
            Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v10);
            pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v47, (pxrInternal__aapl__pxrReserved__ *)"Error invoking computation %s.\n", v22, Text);
          }
          else
          {
            pxrInternal__aapl__pxrReserved__::HdExtComputation::GetOutputNames(*v8, (uint64_t)v46);
            v23 = (uint64_t *)v46[0];
            v24 = (uint64_t *)v46[1];
            while (v23 != v24)
            {
              v53[1] = 0;
              if (pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::GetOutputValue((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)v54, (const pxrInternal__aapl__pxrReserved__::TfToken *)v23, (pxrInternal__aapl__pxrReserved__::VtValue *)v53))
              {
                v52 = v23;
                v25 = sub_20C83CAC4((uint64_t)v39, v23, (uint64_t)&unk_20CAC184C, &v52);
                sub_20BF4A9BC(v25 + 3, v53);
              }
              else
              {
                v47 = "hd/extComputationUtils.cpp";
                v48 = "_ExecuteComputations";
                v49 = 224;
                v50 = "HdExtComputationUtils::ValueStore pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_Execut"
                      "eComputations(HdExtComputationConstPtrVector, HdSceneDelegate *)";
                v51 = 0;
                v26 = *v23 & 0xFFFFFFFFFFFFFFF8;
                if (v26)
                {
                  v27 = (const char *)(v26 + 16);
                  if (*(char *)(v26 + 39) < 0)
                    v27 = *(const char **)v27;
                }
                else
                {
                  v27 = "";
                }
                v28 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v10);
                pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v47, (pxrInternal__aapl__pxrReserved__ *)"Error getting out %s for computation %s.\n", v29, v27, v28);
              }
              sub_20BF4C2D8((uint64_t)v53);
              ++v23;
            }
            v47 = (char *)v46;
            sub_20BEEB2B8((void ***)&v47);
          }
          pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal::~HdExtComputationContextInternal((pxrInternal__aapl__pxrReserved__::HdExtComputationContextInternal *)v54);
        }
        ++v8;
      }
      while (v8 != v35);
      v8 = v36;
    }
    if (v8)
    {
      v37 = v8;
      operator delete(v8);
    }
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_DWORD *)(a3 + 32) = 1065353216;
    v31 = (uint64_t *)*a1;
    for (i = (uint64_t *)a1[1]; v31 != i; v31 += 8)
    {
      v54[0] = v31 + 5;
      v32 = sub_20C83CAC4((uint64_t)v39, v31 + 5, (uint64_t)&unk_20CAC184C, v54);
      v54[0] = v31;
      v33 = sub_20C83CAC4(a3, v31, (uint64_t)&unk_20CAC184C, v54);
      sub_20BF4A9BC(v33 + 3, v32 + 3);
    }
    sub_20C83C58C((uint64_t)v39);
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_DWORD *)(a3 + 32) = 1065353216;
  }
  if (__p)
  {
    v43 = __p;
    operator delete(__p);
  }
  return sub_20BEC57F0((uint64_t)v45);
}

void sub_20C842594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  if (__p)
    operator delete(__p);
  sub_20BEC57F0((uint64_t)&a30);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::DependencySort(_QWORD *a1, void **a2, char *a3)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  char *v23;
  char *v24;
  int64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  _QWORD v29[4];
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if (a2)
  {
    v32 = 0u;
    v33 = 0u;
    v31 = 0u;
    v5 = (uint64_t *)a1[2];
    if (v5)
    {
      do
      {
        v6 = v5[3];
        v29[0] = v5[2];
        if (v6 == v5[4])
        {
          sub_20C841E1C(&v31, v29);
          v5 = (uint64_t *)sub_20BED9E48(a1, v5);
        }
        else
        {
          v5 = (uint64_t *)*v5;
        }
      }
      while (v5);
      for (i = *((_QWORD *)&v33 + 1); *((_QWORD *)&v33 + 1); i = *((_QWORD *)&v33 + 1))
      {
        v8 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)&v31 + 1)
                                   + (((unint64_t)(i + v33 - 1) >> 6) & 0x3FFFFFFFFFFFFF8))
                       + 8 * ((i + v33 - 1) & 0x1FF));
        v10 = a2[1];
        v9 = (unint64_t)a2[2];
        if ((unint64_t)v10 >= v9)
        {
          v12 = ((char *)v10 - (_BYTE *)*a2) >> 3;
          if ((unint64_t)(v12 + 1) >> 61)
            sub_20BDDF694();
          v13 = v9 - (_QWORD)*a2;
          v14 = v13 >> 2;
          if (v13 >> 2 <= (unint64_t)(v12 + 1))
            v14 = v12 + 1;
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
            v15 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v15 = v14;
          if (v15)
            v16 = (char *)sub_20BDDF6A8((uint64_t)(a2 + 2), v15);
          else
            v16 = 0;
          v17 = &v16[8 * v12];
          *(_QWORD *)v17 = v8;
          v11 = v17 + 8;
          v19 = (char *)*a2;
          v18 = (char *)a2[1];
          if (v18 != *a2)
          {
            do
            {
              v20 = *((_QWORD *)v18 - 1);
              v18 -= 8;
              *((_QWORD *)v17 - 1) = v20;
              v17 -= 8;
            }
            while (v18 != v19);
            v18 = (char *)*a2;
          }
          *a2 = v17;
          a2[1] = v11;
          a2[2] = &v16[8 * v15];
          if (v18)
            operator delete(v18);
        }
        else
        {
          *v10 = v8;
          v11 = v10 + 1;
        }
        a2[1] = v11;
        --*((_QWORD *)&v33 + 1);
        sub_20C67FC44(&v31, 1);
        v21 = (uint64_t *)a1[2];
        while (v21)
        {
          v22 = (char *)v21[3];
          v29[0] = v21[2];
          v23 = (char *)v21[4];
          v24 = v22;
          if (v22 != v23)
          {
            while (*(_QWORD *)v24 != v8)
            {
              v24 += 8;
              if (v24 == v23)
              {
                v24 = (char *)v21[4];
                break;
              }
            }
          }
          if (v24 != v23)
          {
            v25 = v23 - (v24 + 8);
            if (v23 != v24 + 8)
            {
              memmove(v24, v24 + 8, v23 - (v24 + 8));
              v22 = (char *)v21[3];
            }
            v23 = &v24[v25];
            v21[4] = (uint64_t)&v24[v25];
          }
          if (v22 == v23)
          {
            sub_20C842984((uint64_t)&v31, v29);
            v21 = (uint64_t *)sub_20BED9E48(a1, v21);
          }
          else
          {
            v21 = (uint64_t *)*v21;
          }
        }
      }
    }
    v26 = a1[3];
    v27 = v26 == 0;
    if (v26)
    {
      v29[0] = "hd/extComputationUtils.cpp";
      v29[1] = "DependencySort";
      v29[2] = 339;
      v29[3] = "static BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::DependencySort(HdExtComputationUtils"
               "::ComputationDependencyMap, HdExtComputationConstPtrVector *)";
      v30 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v29, (pxrInternal__aapl__pxrReserved__ *)"Cycle detected in ExtComputation dependency graph. Unresolved dependencies:\n", a3);
      if (sub_20C7ED838(15))
        pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::PrintDependencyMap((uint64_t)a1);
      a2[1] = *a2;
    }
    sub_20C842C3C(&v31);
  }
  else
  {
    *(_QWORD *)&v31 = "hd/extComputationUtils.cpp";
    *((_QWORD *)&v31 + 1) = "DependencySort";
    *(_QWORD *)&v32 = 279;
    *((_QWORD *)&v32 + 1) = "static BOOL pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::DependencySort(HdExtCom"
                            "putationUtils::ComputationDependencyMap, HdExtComputationConstPtrVector *)";
    LOBYTE(v33) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v31, 1, (pxrInternal__aapl__pxrReserved__ *)"Received nullptr for sortedComps.");
    return 0;
  }
  return v27;
}

void sub_20C842954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20C842C3C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C842984(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
  {
    sub_20C843748((void **)a1);
    v4 = *(_QWORD *)(a1 + 32);
  }
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (_QWORD *)(v5 + 8 * (v4 >> 9));
  if (*(_QWORD *)(a1 + 16) == v5)
    v7 = 0;
  else
    v7 = *v6 + 8 * (v4 & 0x1FF);
  if (v7 == *v6)
    v7 = *(v6 - 1) + 4096;
  *(_QWORD *)(v7 - 8) = *a2;
  v8 = v4 - 1;
  v9 = *(_QWORD *)(a1 + 40) + 1;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(a1 + 16) == v10)
    return 0;
  else
    return *(_QWORD *)(v10 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtComputationUtils::PrintDependencyMap(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  const std::locale::facet *v4;
  _QWORD *v5;
  _QWORD *v6;
  std::locale::id *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  const std::locale::facet *v14;
  const std::locale::facet *v15;
  std::locale v17;

  v2 = (_QWORD *)MEMORY[0x24BEDB318];
  v3 = sub_20BDDC1C8(MEMORY[0x24BEDB318], (uint64_t)"Computations dep map", 20);
  std::ios_base::getloc((const std::ios_base *)((char *)v3 + *(_QWORD *)(*v3 - 24)));
  v4 = std::locale::use_facet(&v17, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v4->__vftable[2].~facet_0)(v4, 10);
  std::locale::~locale(&v17);
  std::ostream::put();
  std::ostream::flush();
  v5 = *(_QWORD **)(a1 + 16);
  if (v5)
  {
    v6 = (_QWORD *)MEMORY[0x24BEDB318];
    v7 = (std::locale::id *)MEMORY[0x24BEDB350];
    do
    {
      v8 = pxrInternal__aapl__pxrReserved__::operator<<(v6, (pxrInternal__aapl__pxrReserved__::SdfPath *)(v5[2] + 8));
      sub_20BDDC1C8(v8, (uint64_t)" -> [ ", 6);
      v9 = (uint64_t *)v5[3];
      v10 = (uint64_t *)v5[4];
      while (v9 != v10)
      {
        v11 = *v9++;
        v12 = pxrInternal__aapl__pxrReserved__::operator<<(v6, (pxrInternal__aapl__pxrReserved__::SdfPath *)(v11 + 8));
        sub_20BDDC1C8(v12, (uint64_t)", ", 2);
      }
      v13 = sub_20BDDC1C8(v6, (uint64_t)" ]", 2);
      std::ios_base::getloc((const std::ios_base *)((char *)v13 + *(_QWORD *)(*v13 - 24)));
      v14 = std::locale::use_facet(&v17, v7);
      ((void (*)(const std::locale::facet *, uint64_t))v14->__vftable[2].~facet_0)(v14, 10);
      std::locale::~locale(&v17);
      std::ostream::put();
      std::ostream::flush();
      v5 = (_QWORD *)*v5;
    }
    while (v5);
  }
  std::ios_base::getloc((const std::ios_base *)((char *)v2 + *(_QWORD *)(*v2 - 24)));
  v15 = std::locale::use_facet(&v17, MEMORY[0x24BEDB350]);
  ((void (*)(const std::locale::facet *, uint64_t))v15->__vftable[2].~facet_0)(v15, 10);
  std::locale::~locale(&v17);
  std::ostream::put();
  return std::ostream::flush();
}

void sub_20C842C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
  std::locale::~locale(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C842C3C(_QWORD *a1)
{
  void **v2;
  void **v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = (void **)a1[1];
  v3 = (void **)a1[2];
  a1[5] = 0;
  v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = (void **)a1[2];
      v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  v5 = v4 >> 3;
  if (v5 == 1)
  {
    v6 = 256;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_9;
    v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    v7 = *v2++;
    operator delete(v7);
  }
  return sub_20BE97BCC((uint64_t)a1);
}

void sub_20C842CD0(_QWORD *a1)
{
  unint64_t v2;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v2 = a1[4];
  v3 = v2 >= 0x200;
  v4 = v2 - 512;
  if (v3)
  {
    v5 = (uint64_t)(a1 + 3);
    v6 = (char *)a1[3];
    a1[4] = v4;
    v7 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v11 = *v7;
    v9 = (char *)(v7 + 1);
    v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(_QWORD *)v8 = v10;
      a1[2] += 8;
      return;
    }
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v33 = 1;
      else
        v33 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_20BDDF6A8(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      v38 = (uint64_t *)a1[1];
      v8 = v35;
      v39 = a1[2] - (_QWORD)v38;
      if (v39)
      {
        v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          v42 = *v38++;
          *(_QWORD *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    v13 = v12 >> 3;
    v14 = v12 >> 3 < -1;
    v15 = (v12 >> 3) + 2;
    if (v14)
      v16 = v15;
    else
      v16 = v13 + 1;
    v17 = -(v16 >> 1);
    v18 = v16 >> 1;
    v19 = &v9[-8 * v18];
    v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      v9 = (char *)a1[1];
    }
    v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  v21 = a1[2];
  v22 = (v21 - a1[1]) >> 3;
  v23 = a1[3];
  v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(_QWORD *)&v54 = operator new(0x1000uLL);
      sub_20BE972A0(a1, &v54);
      return;
    }
    *(_QWORD *)&v54 = operator new(0x1000uLL);
    sub_20BE973B4((uint64_t)a1, &v54);
    v44 = (_QWORD *)a1[1];
    v8 = (char *)a1[2];
    v45 = *v44;
    v9 = (char *)(v44 + 1);
    v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3])
      goto LABEL_33;
    v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1)
        v46 = 1;
      else
        v46 = (uint64_t)&v8[-*a1] >> 2;
      v34 = (char *)sub_20BDDF6A8((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      v8 = v35;
      v49 = a1[2] - (_QWORD)v48;
      if (v49)
      {
        v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          v52 = *v48++;
          *(_QWORD *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1)
    v25 = 1;
  else
    v25 = v24 >> 2;
  v56 = a1 + 3;
  *(_QWORD *)&v54 = sub_20BDDF6A8((uint64_t)(a1 + 3), v25);
  *((_QWORD *)&v54 + 1) = v54 + 8 * v22;
  *(_QWORD *)&v55 = *((_QWORD *)&v54 + 1);
  *((_QWORD *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_20BE974D0(&v54, &v53);
  v27 = (_QWORD *)a1[2];
  v28 = -7 - (_QWORD)v27;
  while (v27 != (_QWORD *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_20BE975E4((uint64_t)&v54, v27);
  }
  v29 = (char *)*a1;
  v30 = v54;
  v31 = v55;
  *(_QWORD *)&v54 = *a1;
  *((_QWORD *)&v54 + 1) = v27;
  v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  v55 = v32;
  if (v27 != (_QWORD *)v32)
    *(_QWORD *)&v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  if (v29)
    operator delete(v29);
}

void sub_20C842F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v13;

  operator delete(v13);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C842FE4(_QWORD *a1, _QWORD *a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  unint64_t v10;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = v5;
    if (v5 >= *(_QWORD *)&v2)
      v7 = v5 % *(_QWORD *)&v2;
  }
  else
  {
    v7 = v5 & (*(_QWORD *)&v2 - 1);
  }
  v8 = *(_QWORD **)(*a1 + 8 * v7);
  if (!v8)
    return 0;
  result = (_QWORD *)*v8;
  if (*v8)
  {
    do
    {
      v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2)
          return result;
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(_QWORD *)&v2)
            v10 %= *(_QWORD *)&v2;
        }
        else
        {
          v10 &= *(_QWORD *)&v2 - 1;
        }
        if (v10 != v7)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

_QWORD *sub_20C8430D0(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD **a4)
{
  unint64_t v4;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD **v12;
  _QWORD *i;
  unint64_t v14;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10)
        v4 = v9 % v10;
    }
    else
    {
      v4 = v9 & (v10 - 1);
    }
    v12 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v4);
    if (v12)
    {
      for (i = *v12; i; i = (_QWORD *)*i)
      {
        v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2)
            return i;
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10)
              v14 %= v10;
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4)
            break;
        }
      }
    }
  }
  v15 = (_QWORD *)(a1 + 16);
  i = operator new(0x30uLL);
  *i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  i[4] = 0;
  i[5] = 0;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    sub_20BDEC6E0(a1, v21);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v23)
  {
    *i = *v23;
LABEL_38:
    *v23 = i;
    goto LABEL_39;
  }
  *i = *v15;
  *v15 = i;
  *(_QWORD *)(v22 + 8 * v4) = v15;
  if (*i)
  {
    v24 = *(_QWORD *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v24 >= v10)
        v24 %= v10;
    }
    else
    {
      v24 &= v10 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_20C843338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;

  sub_20BEC604C(v11, v10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C843354(uint64_t a1, uint64_t a2)
{
  _QWORD *i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_20BDEC6E0(a1, *(_QWORD *)(a2 + 8));
  for (i = *(_QWORD **)(a2 + 16); i; i = (_QWORD *)*i)
    sub_20C8433C8(a1, i + 2, i + 2);
  return a1;
}

void sub_20C8433B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BEC57F0(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8433C8(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  _QWORD *v10;
  _QWORD *result;
  unint64_t v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;

  v5 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  v6 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v5 >> 47) ^ v5);
  v7 = 0x9DDFEA08EB382D69 * (v6 ^ (v6 >> 47));
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v3 = 0x9DDFEA08EB382D69 * (v6 ^ (v6 >> 47));
      if (v7 >= v8)
        v3 = v7 % v8;
    }
    else
    {
      v3 = v7 & (v8 - 1);
    }
    v10 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
    if (v10)
    {
      result = (_QWORD *)*v10;
      if (*v10)
      {
        do
        {
          v12 = result[1];
          if (v12 == v7)
          {
            if (result[2] == *a2)
              return result;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v3)
              break;
          }
          result = (_QWORD *)*result;
        }
        while (result);
      }
    }
  }
  sub_20C843634(a1, v7, a3, (uint64_t)&v21);
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    v15 = 1;
    if (v8 >= 3)
      v15 = (v8 & (v8 - 1)) != 0;
    v16 = v15 | (2 * v8);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    sub_20BDEC6E0(a1, v18);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v3 = v7 % v8;
      else
        v3 = v7;
    }
    else
    {
      v3 = (v8 - 1) & v7;
    }
  }
  v19 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v19)
  {
    *v21 = *v19;
    *v19 = v21;
  }
  else
  {
    *v21 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v3) = a1 + 16;
    if (*v21)
    {
      v20 = *(_QWORD *)(*v21 + 8);
      if ((v8 & (v8 - 1)) != 0)
      {
        if (v20 >= v8)
          v20 %= v8;
      }
      else
      {
        v20 &= v8 - 1;
      }
      *(_QWORD *)(*(_QWORD *)a1 + 8 * v20) = v21;
    }
  }
  result = v21;
  ++*(_QWORD *)(a1 + 24);
  return result;
}

void sub_20C843610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD *__p, uint64_t a11)
{
  if (__p)
    sub_20BEC604C((uint64_t)&a11, __p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20C843634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  const void *v9;
  _QWORD *result;

  v7 = a1 + 16;
  v8 = operator new(0x30uLL);
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  *v8 = 0;
  v8[1] = a2;
  v9 = (const void *)a3[1];
  v8[2] = *a3;
  v8[4] = 0;
  v8[5] = 0;
  v8[3] = 0;
  result = sub_20C8436D0(v8 + 3, v9, a3[2], (uint64_t)(a3[2] - (_QWORD)v9) >> 3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_20C8436B4(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  sub_20BEC604C(v3, v2);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C8436D0(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C84372C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_20C843748(void **a1)
{
  _BYTE *v2;
  _BYTE *v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  void *__p;
  char *v43;
  char *v44;
  char *v45;
  _QWORD *v46;

  v2 = a1[1];
  v3 = a1[2];
  v4 = v3 - v2;
  if (v3 == v2)
    v5 = 0;
  else
    v5 = ((v3 - v2) << 6) - 1;
  v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(_QWORD)a1[5]] < 0x200)
  {
    v7 = (uint64_t)(a1 + 3);
    v8 = a1[3];
    v9 = *a1;
    v10 = v8 - (_BYTE *)*a1;
    if (v4 >= v10)
    {
      if (v8 == v9)
        v11 = 1;
      else
        v11 = v10 >> 2;
      v46 = a1 + 3;
      __p = sub_20BDDF6A8(v7, v11);
      v43 = (char *)__p;
      v44 = (char *)__p;
      v45 = (char *)__p + 8 * v12;
      v41 = operator new(0x1000uLL);
      sub_20BE974D0(&__p, &v41);
      v13 = (char *)a1[1];
      v14 = v44;
      if (v13 == a1[2])
      {
        v33 = (char *)a1[1];
      }
      else
      {
        do
        {
          if (v14 == v45)
          {
            v15 = v43 - (_BYTE *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p)
                v23 = 1;
              else
                v23 = (v14 - (_BYTE *)__p) >> 2;
              v24 = (char *)sub_20BDDF6A8((uint64_t)v46, v23);
              v26 = v43;
              v14 = &v24[8 * (v23 >> 2)];
              v27 = v44 - v43;
              if (v44 != v43)
              {
                v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8)];
                v28 = 8 * (v27 >> 3);
                v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  v30 = *(_QWORD *)v26;
                  v26 += 8;
                  *(_QWORD *)v29 = v30;
                  v29 += 8;
                  v28 -= 8;
                }
                while (v28);
              }
              v31 = __p;
              __p = v24;
              v43 = &v24[8 * (v23 >> 2)];
              v44 = v14;
              v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                v14 = v44;
              }
            }
            else
            {
              v16 = v15 >> 3;
              v17 = v15 >> 3 < -1;
              v18 = (v15 >> 3) + 2;
              if (v17)
                v19 = v18;
              else
                v19 = v16 + 1;
              v20 = &v43[-8 * (v19 >> 1)];
              v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                v14 = v43;
              }
              v22 = &v14[-8 * (v19 >> 1)];
              v14 = &v20[v21];
              v43 = v22;
              v44 = &v20[v21];
            }
          }
          v32 = *(_QWORD *)v13;
          v13 += 8;
          *(_QWORD *)v14 = v32;
          v14 = v44 + 8;
          v44 += 8;
        }
        while (v13 != a1[2]);
        v33 = (char *)a1[1];
      }
      v36 = *a1;
      v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      __p = v36;
      v43 = v33;
      v38 = (char *)a1[3];
      v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      v44 = v13;
      v45 = v38;
      if (v14 - v37 == 8)
        v40 = 256;
      else
        v40 = (uint64_t)a1[4] + 512;
      a1[4] = (void *)v40;
      if (v13 != v33)
        v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8];
      if (v36)
        operator delete(v36);
    }
    else
    {
      if (v2 == v9)
      {
        __p = operator new(0x1000uLL);
        sub_20BE972A0(a1, &__p);
        v34 = a1[2];
        __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }
      else
      {
        __p = operator new(0x1000uLL);
      }
      sub_20BE973B4((uint64_t)a1, &__p);
      if ((_BYTE *)a1[2] - (_BYTE *)a1[1] == 8)
        v35 = 256;
      else
        v35 = (uint64_t)a1[4] + 512;
      a1[4] = (void *)v35;
    }
  }
  else
  {
    a1[4] = v6 + 512;
    __p = (void *)*((_QWORD *)v3 - 1);
    a1[2] = v3 - 8;
    sub_20BE973B4((uint64_t)a1, &__p);
  }
}

void sub_20C843A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  void *v12;

  operator delete(v12);
  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType::~HdExtentSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  void **v10;

  v10 = (void **)((char *)this + 24);
  sub_20BEEB2B8(&v10);
  v2 = *((_QWORD *)this + 2);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType::HdExtentSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int **v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "extent", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "min", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "max", 0);
  v3 = *this;
  v23 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v23 = v4;
  }
  v6 = *v2;
  v24 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v24 = v7;
  }
  v9 = this[2];
  v25 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v25 = v10;
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  v12 = (unsigned int *)operator new(0x18uLL);
  v13 = 0;
  this[3] = v12;
  this[4] = v12;
  this[5] = v12 + 6;
  do
  {
    v14 = (&v23)[v13];
    *(_QWORD *)v12 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        *(_QWORD *)v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    v12 += 2;
  }
  while (v13 != 3);
  v17 = (unsigned int **)&v26;
  this[4] = v12;
  do
  {
    v19 = (uint64_t)*--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  while (v17 != &v23);
  return (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)this;
}

void sub_20C843CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;

  sub_20BEEB2B8(&a9);
  v18 = &a14;
  while (1)
  {
    v20 = *--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v18 == (uint64_t *)&a11)
    {
      if ((*v16 & 7) != 0)
      {
        v23 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      if ((*v15 & 7) != 0)
      {
        v25 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stlxr(v26 - 2, v25));
      }
      if ((*v14 & 7) != 0)
      {
        v27 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetMin(pxrInternal__aapl__pxrReserved__::HdExtentSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
  if (!v4)
    v4 = sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C843E3C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C843E3C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C8443CC((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetMax(pxrInternal__aapl__pxrReserved__::HdExtentSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
  if (!v4)
    v4 = sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C843E3C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtentSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v7;
  unint64_t v8;
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17[2];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v17[0] = 0;
  v17[1] = 0;
  memset(v16, 0, sizeof(v16));
  v5 = &v18;
  if (*a1)
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    if (!v7)
      v7 = sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    sub_20BF32220(v17, (_QWORD *)v7 + 1);
    sub_20BDE881C(v16, a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  if (*a2)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    if (!v9)
      v9 = sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    sub_20BF32220(&v17[v8], (_QWORD *)v9 + 2);
    sub_20BDE881C(&v16[v8++], a2);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v8, v17, (uint64_t *)v16, &v15);
  *a3 = v15;
  for (i = 1; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v16[i]);
  do
  {
    v12 = *--v5;
    v11 = v12;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
  }
  while (v5 != v17);
}

void sub_20C844100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  char *v16;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;

  for (i = 16; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v20 = *((_QWORD *)v16 - 1);
    v16 -= 8;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v16 == &a16)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens))
      sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C844284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdExtentSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
  if (!result)
    return sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdExtentSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdExtentSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E588);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E588))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    if (!v3)
      v3 = sub_20C80A2A8(&pxrInternal__aapl__pxrReserved__::HdExtentSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E550, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E550, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E588);
  }
  return &unk_25498E550;
}

void sub_20C844360(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E588);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder::SetMin(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder::SetMax(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdExtentSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdExtentSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, a2);
}

void *sub_20C8443CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54D5D0, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdFieldTokens_StaticTokenType::~HdFieldTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdFieldTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::HdFieldTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdFieldTokens_StaticTokenType::HdFieldTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "filePath", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "fieldName", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::HdFieldTokens_StaticTokenType *)this;
}

void sub_20C844638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

pxrInternal__aapl__pxrReserved__::HdBprim *pxrInternal__aapl__pxrReserved__::HdField::HdField(pxrInternal__aapl__pxrReserved__::HdField *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  pxrInternal__aapl__pxrReserved__::HdBprim *result;

  result = pxrInternal__aapl__pxrReserved__::HdBprim::HdBprim(this, a2);
  *(_QWORD *)result = off_24C550518;
  return result;
}

pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::HdSingleInputFilteringSceneIndexBase(pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *a1, uint64_t *a2)
{
  _QWORD *v4;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v11;
  __int128 v13;
  uint64_t v14;
  const char *v15;
  char v16;

  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::HdSceneIndexBase(a1);
  *v4 = off_24C550568;
  v4[14] = *a2;
  v5 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(v4 + 14);
  sub_20BF1DD04(v4 + 14);
  *((_QWORD *)a1 + 15) = &off_24C5505C8;
  *((_QWORD *)a1 + 16) = 0;
  *((_QWORD *)a1 + 17) = a1;
  if (*a2)
  {
    v6 = sub_20C82FBFC(a2);
    sub_20C844B90(&v13, (uint64_t)a1 + 120);
    pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::AddObserver(v6, &v13);
    v7 = *((_QWORD *)&v13 + 1);
    if (*((_QWORD *)&v13 + 1))
    {
      v8 = (unsigned int *)(*((_QWORD *)&v13 + 1) + 8);
      do
      {
        v9 = __ldxr(v8);
        v10 = v9 - 1;
      }
      while (__stlxr(v10, v8));
      if (!v10)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    }
  }
  else
  {
    *(_QWORD *)&v13 = "hd/filteringSceneIndex.cpp";
    *((_QWORD *)&v13 + 1) = "HdSingleInputFilteringSceneIndexBase";
    v14 = 61;
    v15 = "pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::HdSingleInputFilteringSceneIndexBase(c"
          "onst HdSceneIndexBaseRefPtr &)";
    v16 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v13, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid input sceneIndex.");
    sub_20C8448A0((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase **)&v13);
    v11 = *v5;
    *v5 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)v13;
    *(_QWORD *)&v13 = 0;
    sub_20BF1D8F4((int)v5, v11);
    sub_20C831DE4((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v13);
  }
  return a1;
}

void sub_20C844824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v3;
  unsigned int **v4;
  const void *v6;
  va_list va;

  va_start(va, a2);
  sub_20C831DE4((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::~HdSceneIndexObserver(v4, v6);
  sub_20C831DE4(v3);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase(v2);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C8448A0@<X0>(pxrInternal__aapl__pxrReserved__::HdSceneIndexBase **a1@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)operator new(0x70uLL);
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::HdSceneIndexBase(v2);
  *(_QWORD *)v2 = &unk_24C550650;
  *a1 = v2;
  v4 = 0;
  return sub_20C844B64(&v4);
}

void sub_20C844908(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::GetInputScenes@<X0>(pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase *this@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v5 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*((_QWORD *)this + 14);
  sub_20BF1DD04((uint64_t *)&v5);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v3 = (char *)operator new(8uLL);
  *a2 = v3;
  a2[1] = v3;
  a2[2] = v3 + 8;
  a2[1] = sub_20C844C48((uint64_t)(a2 + 2), (uint64_t)&v5, (uint64_t)&v6, (uint64_t)v3);
  return sub_20C831DE4(&v5);
}

void sub_20C8449CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = v12;
  *(_QWORD *)(v11 + 8) = v13;
  sub_20C844CCC(&a9);
  sub_20C831DE4(&a11);
  _Unwind_Resume(a1);
}

void **pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::_PrimsRenamed(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  void *v6[33];
  void *v7[18];

  v7[17] = *(void **)MEMORY[0x24BDAC8D0];
  v7[16] = (void *)0x1000000000;
  v6[32] = (void *)0x1000000000;
  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::ConvertPrimsRenamedToRemovedAndAdded(a2, a3, v7, v6);
  (*(void (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 56))(a1, a2, v7);
  (*(void (**)(uint64_t, uint64_t, void **))(*(_QWORD *)a1 + 48))(a1, a2, v6);
  sub_20C844DD0(v6);
  return sub_20C844D3C(v7);
}

void sub_20C844AC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20C844DD0((void **)va);
  sub_20C844D3C((void **)(v2 - 176));
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::_Observer::PrimsAdded(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 48))(*(_QWORD *)(a1 + 16));
}

uint64_t pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::_Observer::PrimsRemoved(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 56))(*(_QWORD *)(a1 + 16));
}

uint64_t pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::_Observer::PrimsDirtied(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 64))(*(_QWORD *)(a1 + 16));
}

uint64_t pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::_Observer::PrimsRenamed(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 72))(*(_QWORD *)(a1 + 16));
}

void sub_20C844B20(unsigned int **a1, const void *a2)
{
  void *v2;

  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::~HdSceneIndexObserver(a1, a2);
  operator delete(v2);
}

void sub_20C844B38(pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase(a1);
  operator delete(v1);
}

void sub_20C844B4C(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

void sub_20C844B58(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C844B64(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

_QWORD *sub_20C844B90(_QWORD *a1, uint64_t a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v12;

  *a1 = a2;
  a1[1] = 0;
  if (a2)
  {
    sub_20BEB5AD8((unint64_t *)(a2 + 8), &v12);
    v3 = (unsigned int *)a1[1];
    a1[1] = v12;
    v12 = 0;
    if (v3)
    {
      v4 = v3 + 2;
      do
      {
        v5 = __ldxr(v4);
        v6 = v5 - 1;
      }
      while (__stlxr(v6, v4));
      if (!v6)
        (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
      v7 = v12;
      if (v12)
      {
        v8 = (unsigned int *)(v12 + 8);
        do
        {
          v9 = __ldxr(v8);
          v10 = v9 - 1;
        }
        while (__stlxr(v10, v8));
        if (!v10)
          (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      }
    }
  }
  return a1;
}

void sub_20C844C30(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
    sub_20C96B0D8(v3);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C844C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      *(_QWORD *)(a4 + v7) = *(_QWORD *)(a2 + v7);
      sub_20BF1DD04((uint64_t *)(a4 + v7));
      v7 += 8;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_20C844CA8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (v2)
  {
    v4 = v1 - 8;
    do
    {
      sub_20C831DE4((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(v4 + v2));
      v2 -= 8;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_20C844CCC(void ***a1)
{
  void **v1;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v2;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v4;
  void *v5;

  v1 = *a1;
  v2 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)**a1;
  if (v2)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v1[1];
    v5 = v2;
    if (v4 != v2)
    {
      do
        v4 = sub_20C831DE4(v4 - 1);
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void **sub_20C844D3C(void **a1)
{
  sub_20C844D78(a1);
  if (*((_DWORD *)a1 + 33) >= 0x11u)
    free(*a1);
  return a1;
}

_DWORD *sub_20C844D78(_DWORD *result)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = result;
  if (result[33] >= 0x11u)
    v1 = *(_DWORD **)result;
  v2 = result[32];
  if ((_DWORD)v2)
  {
    v3 = 8 * v2;
    do
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v1 + 1);
      result = sub_20BFD265C(v1);
      v1 += 2;
      v3 -= 8;
    }
    while (v3);
  }
  return result;
}

void **sub_20C844DD0(void **a1)
{
  sub_20C844E0C(a1);
  if (*((_DWORD *)a1 + 65) >= 0x11u)
    free(*a1);
  return a1;
}

_DWORD *sub_20C844E0C(_DWORD *result)
{
  _DWORD *v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v1 = result;
  if (result[65] >= 0x11u)
    v1 = *(_DWORD **)result;
  v2 = result[64];
  if ((_DWORD)v2)
  {
    v3 = &v1[4 * v2];
    do
    {
      v4 = *((_QWORD *)v1 + 1);
      if ((v4 & 7) != 0)
      {
        v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
        do
          v6 = __ldxr(v5);
        while (__stlxr(v6 - 2, v5));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v1 + 1);
      result = sub_20BFD265C(v1);
      v1 += 4;
    }
    while (v1 != v3);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetInputDataSource(uint64_t **this@<X0>, _QWORD *a2@<X8>)
{
  sub_20C7E0698(this[3], a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetFlattenedDataSourceFromParentPrim@<X0>(pxrInternal__aapl__pxrReserved__::SdfPath **this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::SdfPath *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  result = pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath(this[1]);
  if ((_DWORD)result)
  {
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    v5 = *this;
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(this[1], &v11);
    (*(void (**)(uint64_t *__return_ptr, pxrInternal__aapl__pxrReserved__::SdfPath *, int *))(*(_QWORD *)v5 + 16))(&v13, v5, &v11);
    sub_20C7E0698(&v14, a2);
    v6 = v15;
    if (v15)
    {
      p_shared_owners = (unint64_t *)&v15->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    if ((v13 & 7) != 0)
    {
      v9 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stlxr(v10 - 2, v9));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
    return (uint64_t)sub_20BFD265C(&v11);
  }
  return result;
}

void sub_20C844F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v10;
  unsigned int *v12;
  unsigned int v13;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v10);
  if ((a10 & 7) != 0)
  {
    v12 = (unsigned int *)(a10 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  sub_20BFD1A18(&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProviders(_QWORD *a1@<X8>)
{
  unsigned __int8 v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchema *v7;
  uint64_t *SchemaToken;
  pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema *v9;
  uint64_t *v10;
  pxrInternal__aapl__pxrReserved__::HdPurposeSchema *v11;
  uint64_t *v12;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *v13;
  uint64_t *v14;
  pxrInternal__aapl__pxrReserved__::HdXformSchema *v15;
  unsigned int **v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v3 = atomic_load((unsigned __int8 *)&qword_25498E5A0);
  if ((v3 & 1) == 0)
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchema *)__cxa_guard_acquire(&qword_25498E5A0);
    if ((_DWORD)v7)
    {
      SchemaToken = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdCoordSysBindingSchema::GetSchemaToken(v7);
      sub_20C845234(&v25);
      v26 = v25;
      v25 = 0uLL;
      v10 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdPrimvarsSchema::GetSchemaToken(v9);
      sub_20C845334(&v23);
      v24 = v23;
      v23 = 0uLL;
      v12 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdPurposeSchema::GetSchemaToken(v11);
      sub_20C845434(&v21);
      v22 = v21;
      v21 = 0uLL;
      v14 = (uint64_t *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetSchemaToken(v13);
      sub_20C845534(&v19);
      v20 = v19;
      v19 = 0uLL;
      v16 = (unsigned int **)pxrInternal__aapl__pxrReserved__::HdXformSchema::GetSchemaToken(v15);
      sub_20C845634(&v17);
      v18 = v17;
      v17 = 0uLL;
      pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(SchemaToken, (uint64_t *)&v26, v10, (uint64_t *)&v24, v12, (uint64_t *)&v22, v14, (uint64_t *)&v20, &v27, v16, (uint64_t *)&v18);
      xmmword_25498E590 = v27;
      v27 = 0uLL;
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v27);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v18);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v17);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v20);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v19);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v22);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v21);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v24);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v23);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v26);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v25);
      __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &xmmword_25498E590, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E5A0);
    }
  }
  v4 = *((_QWORD *)&xmmword_25498E590 + 1);
  *a1 = xmmword_25498E590;
  a1[1] = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
}

void sub_20C845190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  va_list va1;
  uint64_t v10;
  uint64_t v11;
  va_list va2;
  uint64_t v13;
  uint64_t v14;
  va_list va3;
  uint64_t v16;
  uint64_t v17;
  va_list va4;
  uint64_t v19;
  uint64_t v20;
  va_list va5;
  uint64_t v22;
  uint64_t v23;
  va_list va6;
  uint64_t v25;
  va_list va7;

  va_start(va7, a3);
  va_start(va6, a3);
  va_start(va5, a3);
  va_start(va4, a3);
  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v8 = va_arg(va2, _QWORD);
  v10 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v11 = va_arg(va3, _QWORD);
  v13 = va_arg(va3, _QWORD);
  va_copy(va4, va3);
  v14 = va_arg(va4, _QWORD);
  v16 = va_arg(va4, _QWORD);
  va_copy(va5, va4);
  v17 = va_arg(va5, _QWORD);
  v19 = va_arg(va5, _QWORD);
  va_copy(va6, va5);
  v20 = va_arg(va6, _QWORD);
  v22 = va_arg(va6, _QWORD);
  va_copy(va7, va6);
  v23 = va_arg(va7, _QWORD);
  v25 = va_arg(va7, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va5);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va4);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va7);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va6);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v3 - 96));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v3 - 112));
  __cxa_guard_abort(&qword_25498E5A0);
  _Unwind_Resume(a1);
}

void sub_20C845228()
{
  JUMPOUT(0x20C845214);
}

void sub_20C845234(_OWORD *a1@<X8>)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  __int128 v8;

  v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550848;
  v2->__shared_owners_ = 0;
  v7 = v2;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_24C5509D8;
  v6 = &v2[1].__vftable;
  sub_20C845734((uint64_t *)&v6, &v8);
  *a1 = v8;
  v8 = 0uLL;
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20C845318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C845334(_OWORD *a1@<X8>)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  __int128 v8;

  v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550898;
  v2->__shared_owners_ = 0;
  v7 = v2;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550A20;
  v6 = &v2[1].__vftable;
  sub_20C845734((uint64_t *)&v6, &v8);
  *a1 = v8;
  v8 = 0uLL;
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20C845418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C845434(_OWORD *a1@<X8>)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  __int128 v8;

  v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C5508E8;
  v2->__shared_owners_ = 0;
  v7 = v2;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550B88;
  v6 = &v2[1].__vftable;
  sub_20C845734((uint64_t *)&v6, &v8);
  *a1 = v8;
  v8 = 0uLL;
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20C845518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C845534(_OWORD *a1@<X8>)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  __int128 v8;

  v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550938;
  v2->__shared_owners_ = 0;
  v7 = v2;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550BC0;
  v6 = &v2[1].__vftable;
  sub_20C845734((uint64_t *)&v6, &v8);
  *a1 = v8;
  v8 = 0uLL;
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20C845618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C845634(_OWORD *a1@<X8>)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  __int128 v8;

  v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550988;
  v2->__shared_owners_ = 0;
  v7 = v2;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550BF8;
  v6 = &v2[1].__vftable;
  sub_20C845734((uint64_t *)&v6, &v8);
  *a1 = v8;
  v8 = 0uLL;
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20C845718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C845734@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v4 = operator new(0x18uLL);
  v6 = *a1;
  v5 = a1[1];
  *v4 = &unk_24C5506A0;
  v4[1] = v6;
  v4[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return sub_20C845A10(a2, (uint64_t)v4);
}

void sub_20C845794(uint64_t a1)
{
  *(_QWORD *)a1 = &unk_24C5506A0;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C8457C8(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = &unk_24C5506A0;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v2);
}

char *sub_20C845800@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = 0;
  return sub_20C84583C(a2, (_QWORD *)(a1 + 8));
}

uint64_t sub_20C845810()
{
  return 0;
}

uint64_t sub_20C845818@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 16);
  *a2 = *(_QWORD *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

char *sub_20C84583C(_QWORD *a1, _QWORD *a2)
{
  char *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  a1[1] = &off_24C5506F8;
  result = (char *)operator new(0x18uLL);
  v5 = a2[1];
  *(_QWORD *)result = *a2;
  *((_QWORD *)result + 1) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = (unsigned int *)(result + 16);
  atomic_store(0, (unsigned int *)result + 4);
  *a1 = result;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  return result;
}

uint64_t *sub_20C8458AC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  v2 = *result;
  *a2 = *result;
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **sub_20C8458D4(pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **a1, pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource **a2)
{
  *a2 = *a1;
  *a1 = 0;
  return sub_20BFC3FD4(a1);
}

uint64_t sub_20C8458E4()
{
  return 0;
}

uint64_t sub_20C8458EC(uint64_t a1, const std::type_info *a2)
{
  pxrInternal__aapl__pxrReserved__::Vt_HashDetail::_IssueUnimplementedHashError((pxrInternal__aapl__pxrReserved__::Vt_HashDetail *)&unk_24C5507B0, a2);
  return 0;
}

BOOL sub_20C84590C(_QWORD **a1, _QWORD **a2)
{
  return **a1 == **a2;
}

BOOL sub_20C845928(_QWORD **a1, _QWORD *a2)
{
  return **a1 == *a2;
}

uint64_t sub_20C845944()
{
  return 0;
}

uint64_t sub_20C845950()
{
  return std::ostream::operator<<();
}

void *sub_20C845964()
{
  return &unk_24C5507B0;
}

uint64_t sub_20C845970()
{
  return 0;
}

uint64_t sub_20C845978()
{
  return MEMORY[0x24BEDB7C8];
}

uint64_t sub_20C845984()
{
  return 0;
}

uint64_t sub_20C84598C()
{
  return 0;
}

BOOL sub_20C845994(uint64_t a1, uint64_t a2)
{
  return strcmp((const char *)(0x800000020CB1700ELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

uint64_t sub_20C8459CC(uint64_t a1, const std::type_info *a2, char *a3)
{
  return *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&unk_24C5507B0, a2, a3);
}

void *sub_20C8459EC()
{
  return &unk_24C5507B0;
}

uint64_t sub_20C8459F8(uint64_t a1)
{
  return *(_QWORD *)a1;
}

char *sub_20C845A00@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  v2 = *a1;
  a2[1] = 0;
  return sub_20C84583C(a2, v2);
}

_QWORD *sub_20C845A10(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C5507D0;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C845A58(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C845A7C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C845A90(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C845AA8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C550820))
    return a1 + 24;
  else
    return 0;
}

void sub_20C845AE8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550848;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C845AFC(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550848;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C845B28(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550898;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C845B3C(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550898;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C845B68(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C5508E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C845B7C(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C5508E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C845BA8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550938;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C845BBC(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550938;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C845BE8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550988;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C845BFC(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550988;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedOverlayDataSourceProvider::GetFlattenedDataSource(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;

  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetInputDataSource(a1, &v13);
  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetFlattenedDataSourceFromParentPrim((pxrInternal__aapl__pxrReserved__::SdfPath **)a1, &v11);
  pxrInternal__aapl__pxrReserved__::HdOverlayContainerDataSource::OverlayedContainerDataSources(&v13, &v11, a2);
  v5 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v14;
  if (v14)
  {
    v9 = (unint64_t *)&v14->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_20C845CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedPrimvarsDataSourceProvider::GetFlattenedDataSource(uint64_t **a1@<X1>, _QWORD *a2@<X8>)
{
  const void *v5;
  std::__shared_weak_count *v6;
  void *v7;
  void *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  char *v11;
  char *v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  _OWORD *v19;
  uint64_t i;
  _QWORD *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  const void *v34;
  std::__shared_weak_count *v35;
  const void *v36;
  std::__shared_weak_count *v37;
  void *v38;
  std::__shared_weak_count *v39;
  uint64_t v40;
  std::__shared_weak_count *v41;

  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetInputDataSource(a1, &v40);
  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetFlattenedDataSourceFromParentPrim((pxrInternal__aapl__pxrReserved__::SdfPath **)a1, &v34);
  v5 = v34;
  v6 = v35;
  v36 = v34;
  v37 = v35;
  v34 = 0;
  v35 = 0;
  if (v36
    && (v7 = __dynamic_cast(v5, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C550A60, 0)) != 0)
  {
    v8 = v7;
    v38 = v7;
    v39 = v6;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
    }
  }
  else
  {
    v6 = 0;
    v8 = 0;
    v38 = 0;
    v39 = 0;
  }
  v11 = (char *)operator new(0x280uLL);
  v12 = v11;
  v14 = v40;
  v13 = v41;
  *(_QWORD *)v11 = off_24C550A88;
  *((_QWORD *)v11 + 1) = v14;
  *((_QWORD *)v11 + 2) = v13;
  if (v13)
  {
    v15 = (unint64_t *)&v13->__shared_owners_;
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  *((_QWORD *)v11 + 3) = v8;
  *((_QWORD *)v11 + 4) = v6;
  if (v6)
  {
    v17 = (unint64_t *)&v6->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
  }
  v19 = v11 + 568;
  for (i = 576; i != 624; i += 24)
    *(_QWORD *)&v11[i] = 0;
  *((_OWORD *)v11 + 33) = 0u;
  *((_OWORD *)v11 + 34) = 0u;
  *((_OWORD *)v11 + 31) = 0u;
  *((_OWORD *)v11 + 32) = 0u;
  *((_OWORD *)v11 + 29) = 0u;
  *((_OWORD *)v11 + 30) = 0u;
  *((_OWORD *)v11 + 27) = 0u;
  *((_OWORD *)v11 + 28) = 0u;
  *((_OWORD *)v11 + 25) = 0u;
  *((_OWORD *)v11 + 26) = 0u;
  *((_OWORD *)v11 + 23) = 0u;
  *((_OWORD *)v11 + 24) = 0u;
  *((_OWORD *)v11 + 21) = 0u;
  *((_OWORD *)v11 + 22) = 0u;
  *((_OWORD *)v11 + 19) = 0u;
  *((_OWORD *)v11 + 20) = 0u;
  *((_OWORD *)v11 + 17) = 0u;
  *((_OWORD *)v11 + 18) = 0u;
  *((_OWORD *)v11 + 15) = 0u;
  *((_OWORD *)v11 + 16) = 0u;
  *((_OWORD *)v11 + 13) = 0u;
  *((_OWORD *)v11 + 14) = 0u;
  *((_OWORD *)v11 + 11) = 0u;
  *((_OWORD *)v11 + 12) = 0u;
  *((_OWORD *)v11 + 9) = 0u;
  *((_OWORD *)v11 + 10) = 0u;
  *((_OWORD *)v11 + 7) = 0u;
  *((_OWORD *)v11 + 8) = 0u;
  *((_OWORD *)v11 + 5) = 0u;
  *((_OWORD *)v11 + 6) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  __dmb(0xBu);
  *((_QWORD *)v11 + 5) = 0;
  __dmb(0xBu);
  *((_QWORD *)v11 + 70) = 0;
  *v19 = 0u;
  *(_OWORD *)(v11 + 584) = 0u;
  *(_OWORD *)(v11 + 600) = 0u;
  *((_QWORD *)v11 + 6) = v19;
  __dmb(0xBu);
  *((_QWORD *)v11 + 5) = 1;
  *((_OWORD *)v11 + 39) = 0u;
  v21 = operator new(0x20uLL);
  *v21 = &off_24C550B10;
  v21[1] = 0;
  v21[2] = 0;
  v21[3] = v12;
  *a2 = v12;
  a2[1] = v21;
  v22 = v39;
  if (v39)
  {
    v23 = (unint64_t *)&v39->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  v25 = v37;
  if (v37)
  {
    v26 = (unint64_t *)&v37->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  v28 = v35;
  if (v35)
  {
    v29 = (unint64_t *)&v35->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  v31 = v41;
  if (v41)
  {
    v32 = (unint64_t *)&v41->__shared_owners_;
    do
      v33 = __ldaxr(v32);
    while (__stlxr(v33 - 1, v32));
    if (!v33)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
    }
  }
}

void sub_20C845F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  uint64_t v15;

  (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a13);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a15);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlattenedPrimvarsDataSourceProvider::ComputeDirtyLocatorsForDescendants(pxrInternal__aapl__pxrReserved__::HdFlattenedPrimvarsDataSourceProvider *this, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v3 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(a2);
  result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(a2);
  if (v3 != (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)result)
  {
    v5 = result;
    while (1)
    {
      result = sub_20C846074(v3);
      if ((_DWORD)result)
        break;
      v3 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v3 + 56);
      if (v3 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v5)
        return result;
    }
    result = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)result);
    if ((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)result != a2)
    {
      if (*(_DWORD *)(result + 452) >= 9u)
        v6 = *(_QWORD *)result;
      else
        v6 = result;
      return sub_20C82877C((uint64_t)a2, v6, v6 + 56 * *(unsigned int *)(result + 448));
    }
  }
  return result;
}

BOOL sub_20C846074(pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *a1)
{
  _QWORD *Element;
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *v4;

  if ((unint64_t)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElementCount(a1) < 2)
    return 1;
  Element = (_QWORD *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetElement(a1, 1u);
  v4 = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
  if (!v4)
    v4 = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
  return (*Element & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v4 + 3) & 0xFFFFFFFFFFFFFFF8);
}

void sub_20C8460EC(unint64_t *a1)
{
  unint64_t *v2;

  *a1 = (unint64_t)off_24C550A88;
  v2 = a1 + 5;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 78));
  sub_20C846CC4(v2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 3));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 1));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C846140(unint64_t *a1)
{
  unint64_t *v2;
  void *v3;

  *a1 = (unint64_t)off_24C550A88;
  v2 = a1 + 5;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 78));
  sub_20C846CC4(v2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 3));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 1));
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v3);
}

void sub_20C846198(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  void **v11;
  std::__shared_weak_count *v12;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    (*(void (**)(__int128 *__return_ptr))(*(_QWORD *)v4 + 16))(&v13);
    sub_20C0B4038((void **)a2);
    *(_OWORD *)a2 = v13;
    *(_QWORD *)(a2 + 16) = v14;
    v14 = 0;
    v13 = 0uLL;
    v11 = (void **)&v13;
    sub_20BEEB2B8(&v11);
  }
  v5 = *(_QWORD **)(a1 + 24);
  if (v5)
  {
    sub_20C846DFC(v5, (uint64_t *)&v11);
    sub_20C84754C((uint64_t *)&v13, (uint64_t)v11);
    v6 = v12;
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    if (v14)
    {
      v9 = *(uint64_t **)a2;
      v10 = *(uint64_t **)(a2 + 8);
      if (*(uint64_t **)a2 != v10)
      {
        do
          sub_20C761688((uint64_t **)&v13, v9++);
        while (v9 != v10);
        v9 = *(uint64_t **)(a2 + 8);
      }
      sub_20C26D21C((uint64_t *)a2, v9, (_QWORD *)v13, (_QWORD *)&v13 + 1);
    }
    sub_20BF2B200((uint64_t)&v13, *((_QWORD **)&v13 + 1));
  }
}

void sub_20C8462C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, _QWORD *a12)
{
  sub_20BF2B200((uint64_t)&a11, a12);
  sub_20BEEB2B8(&a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C846304@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  unint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64x2_t v34;
  uint64_t v35;
  uint64x2_t v36;
  uint64x2_t v37;
  int8x16_t v38;
  int64x2_t v39;
  uint64x2_t v40;
  int8x16_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  tbb::spin_rw_mutex_v3 *v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  uint64_t *v60;
  unint64_t *v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  _QWORD *v69;
  std::__shared_weak_count *v70;
  unint64_t *v71;
  unint64_t v72;
  unint64_t *v73;
  uint64_t v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t *v77;
  char v80;
  __int128 v81;
  __int128 v82;
  _QWORD *v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  tbb::spin_rw_mutex_v3 *v87[2];
  uint64_t v88;

  v5 = 0;
  v6 = 0;
  v83 = 0;
  v84 = 0;
  v85 = 0;
  v7 = a1 + 5;
  v8 = a1[5];
  v9 = bswap64(0x9E3779B97F4A7C55 * (*a2 & 0xFFFFFFFFFFFFFFF8));
  __dmb(0xBu);
  while (1)
  {
    sub_20C8476B8((uint64_t)v87, (uint64_t)v7, v8 & v9);
    v10 = (_QWORD *)(v88 + 16);
    while (1)
    {
      v10 = (_QWORD *)*v10;
      if ((unint64_t)v10 < 0x40)
        break;
      if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (v10[2] & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_7;
    }
    if (v10)
    {
LABEL_7:
      v11 = (uint64_t)v5;
      goto LABEL_8;
    }
    if (!v5)
    {
      v21 = tbb::internal::allocate_via_handler_v3((tbb::internal *)0x28);
      v5 = (_QWORD *)v21;
      *(_QWORD *)(v21 + 32) = 0;
      *(_OWORD *)v21 = 0u;
      *(_OWORD *)(v21 + 16) = 0u;
      v22 = *a2;
      *(_QWORD *)(v21 + 16) = *a2;
      if ((v22 & 7) != 0)
      {
        v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 2, v23));
        if ((v24 & 1) == 0)
          *(_QWORD *)(v21 + 16) &= 0xFFFFFFFFFFFFFFF8;
      }
      *(_QWORD *)(v21 + 24) = 0;
      *(_QWORD *)(v21 + 32) = 0;
    }
    if (!LOBYTE(v87[1]))
    {
      LOBYTE(v87[1]) = 1;
      if ((tbb::spin_rw_mutex_v3::internal_upgrade(v87[0]) & 1) == 0)
      {
        v10 = (_QWORD *)(v88 + 16);
        while (1)
        {
          v10 = (_QWORD *)*v10;
          if ((unint64_t)v10 < 0x40)
            break;
          if ((*a2 & 0xFFFFFFFFFFFFFFF8) == (v10[2] & 0xFFFFFFFFFFFFFFF8))
          {
            if (LOBYTE(v87[1]))
            {
              v25 = (unint64_t *)v87[0];
              do
                v26 = __ldaxr(v25);
              while (__stlxr(v26 + 3, v25));
              LOBYTE(v87[1]) = 0;
            }
            goto LABEL_7;
          }
        }
      }
    }
    v20 = *v7;
    __dmb(0xBu);
    if (v8 == v20)
      break;
    if (!sub_20BECF7E4((uint64_t)v7, v9, v8, v20))
      goto LABEL_36;
LABEL_23:
    sub_20BEBF29C(v87);
    v8 = v20;
  }
  v20 = v8;
LABEL_36:
  v6 = sub_20BECF26C((uint64_t)v7, v88, v5, v20);
  v11 = 0;
  v10 = v5;
LABEL_8:
  v84 = 1;
  if (!tbb::spin_rw_mutex_v3::internal_try_acquire_writer((tbb::spin_rw_mutex_v3 *)(v10 + 1)))
  {
    sched_yield();
    v12 = 2;
    while (1)
    {
      v84 = 1;
      if (tbb::spin_rw_mutex_v3::internal_try_acquire_writer((tbb::spin_rw_mutex_v3 *)(v10 + 1)))
        break;
      sched_yield();
      v13 = v12 < 16;
      v12 *= 2;
      if (!v13)
      {
        v14 = (unint64_t *)v87[0];
        v87[0] = 0;
        if (LOBYTE(v87[1]))
        {
          while (1)
          {
            v15 = *v14;
            v16 = *v14 & 0xFFFFFFFFFFFFFFFCLL;
            do
            {
              while (1)
              {
                v17 = __ldaxr(v14);
                if (v17 != v15)
                  break;
                if (!__stlxr(v16, v14))
                  goto LABEL_22;
              }
              __clrex();
              do
                v18 = __ldxr(v14);
              while (__stxr(v18, v14));
            }
            while (v18 == v15);
            sched_yield();
          }
        }
        do
          v19 = __ldaxr(v14);
        while (__stlxr(v19 - 4, v14));
LABEL_22:
        sched_yield();
        v20 = *v7;
        __dmb(0xBu);
        v5 = (_QWORD *)v11;
        goto LABEL_23;
      }
    }
  }
  v83 = v10 + 1;
  sub_20BEBF29C(v87);
  v85 = v10;
  v86 = v9;
  if (v6)
  {
    if (v6 < 8)
    {
      v31 = tbb::internal::allocate_via_handler_v3((tbb::internal *)0x17D0);
      v32 = -6096;
      do
      {
        v33 = v31 + v32;
        *(_QWORD *)(v33 + 6104) = 0;
        *(_QWORD *)(v33 + 6112) = 3;
        v32 += 24;
      }
      while (v32);
      v34 = (int64x2_t)xmmword_20CA59F60;
      v35 = v31 - 48;
      v36 = (uint64x2_t)vdupq_n_s64(7uLL);
      v37 = (uint64x2_t)vdupq_n_s64(1uLL);
      v38 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFEuLL);
      v39 = vdupq_n_s64(2uLL);
      v30 = 255;
      do
      {
        v40 = (uint64x2_t)vorrq_s8((int8x16_t)vdupq_n_s64(v32), (int8x16_t)xmmword_20CA59F70);
        v41 = vandq_s8((int8x16_t)vshlq_u64(v37, (uint64x2_t)v34), v38);
        if ((vmovn_s64((int64x2_t)vcgtq_u64(v36, v40)).u8[0] & 1) != 0)
          a1[v32 + 7] = v35 + 24 * v41.i64[0];
        if ((vmovn_s64((int64x2_t)vcgtq_u64((uint64x2_t)vdupq_n_s64(7uLL), v40)).i32[1] & 1) != 0)
          a1[v32 + 8] = v35 + 24 * v41.i64[1];
        v32 += 2;
        v34 = vaddq_s64(v34, v39);
      }
      while (v32 != 8);
    }
    else
    {
      v27 = tbb::internal::allocate_via_handler_v3((tbb::internal *)(24 << v6));
      v28 = 1 << v6;
      v29 = (_QWORD *)(v27 + 16);
      do
      {
        *(v29 - 1) = 0;
        *v29 = 3;
        v29 += 3;
        --v28;
      }
      while (v28);
      v7[v6 + 1] = v27;
      v30 = (2 << v6) - 1;
    }
    __dmb(0xBu);
    *v7 = v30;
  }
  if (v11)
    sub_20C846DAC(v11);
  sub_20C806934(v85 + 3, v87);
  if (v87[0])
  {
    sub_20C7E0B14((uint64_t)v87, &v82);
    *(_OWORD *)a3 = v82;
    v42 = (std::__shared_weak_count *)v87[1];
    if (!v87[1])
      goto LABEL_121;
    v43 = (unint64_t *)((char *)v87[1] + 8);
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    goto LABEL_119;
  }
  v45 = (std::__shared_weak_count *)v87[1];
  if (v87[1])
  {
    v46 = (unint64_t *)((char *)v87[1] + 8);
    do
      v47 = __ldaxr(v46);
    while (__stlxr(v47 - 1, v46));
    if (!v47)
    {
      ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
      std::__shared_weak_count::__release_weak(v45);
    }
  }
  v48 = a1[1];
  if (v48)
  {
    (*(void (**)(tbb::spin_rw_mutex_v3 **__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v48 + 24))(v87, v48, a2);
    sub_20C7E0B14((uint64_t)v87, &v82);
    v49 = (std::__shared_weak_count *)v87[1];
    if (v87[1])
    {
      v50 = (unint64_t *)((char *)v87[1] + 8);
      do
        v51 = __ldaxr(v50);
      while (__stlxr(v51 - 1, v50));
      if (!v51)
      {
        ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
        std::__shared_weak_count::__release_weak(v49);
      }
    }
    v52 = (tbb::spin_rw_mutex_v3 *)v82;
    if ((_QWORD)v82)
      goto LABEL_90;
    v53 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
    if (*((_QWORD *)&v82 + 1))
    {
      v54 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
      do
        v55 = __ldaxr(v54);
      while (__stlxr(v55 - 1, v54));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
  }
  v56 = a1[3];
  if (!v56)
    goto LABEL_102;
  (*(void (**)(tbb::spin_rw_mutex_v3 **__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v56 + 24))(v87, v56, a2);
  sub_20C7E0B14((uint64_t)v87, &v82);
  v57 = (std::__shared_weak_count *)v87[1];
  if (v87[1])
  {
    v58 = (unint64_t *)((char *)v87[1] + 8);
    do
      v59 = __ldaxr(v58);
    while (__stlxr(v59 - 1, v58));
    if (!v59)
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
  }
  if (!sub_20C847190((uint64_t *)&v82))
  {
    v66 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
    if (*((_QWORD *)&v82 + 1))
    {
      v67 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
      do
        v68 = __ldaxr(v67);
      while (__stlxr(v68 - 1, v67));
      if (!v68)
      {
        ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
        std::__shared_weak_count::__release_weak(v66);
      }
    }
LABEL_102:
    v82 = 0uLL;
LABEL_103:
    v69 = v85;
    v80 = 0;
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v80, (uint64_t *)&v81);
    *(_OWORD *)v87 = v81;
    v81 = 0uLL;
    sub_20C847624(v69 + 3, (uint64_t *)v87);
    v70 = (std::__shared_weak_count *)v87[1];
    if (v87[1])
    {
      v71 = (unint64_t *)((char *)v87[1] + 8);
      do
        v72 = __ldaxr(v71);
      while (__stlxr(v72 - 1, v71));
      if (!v72)
      {
        ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
        std::__shared_weak_count::__release_weak(v70);
      }
    }
    v63 = (std::__shared_weak_count *)*((_QWORD *)&v81 + 1);
    if (!*((_QWORD *)&v81 + 1))
      goto LABEL_113;
    v73 = (unint64_t *)(*((_QWORD *)&v81 + 1) + 8);
    do
      v65 = __ldaxr(v73);
    while (__stlxr(v65 - 1, v73));
    goto LABEL_111;
  }
  v52 = (tbb::spin_rw_mutex_v3 *)v82;
  if (!(_QWORD)v82)
    goto LABEL_103;
LABEL_90:
  v60 = v85 + 3;
  v87[0] = v52;
  v87[1] = *((tbb::spin_rw_mutex_v3 **)&v82 + 1);
  if (*((_QWORD *)&v82 + 1))
  {
    v61 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
    do
      v62 = __ldxr(v61);
    while (__stxr(v62 + 1, v61));
  }
  sub_20C847624(v60, (uint64_t *)v87);
  v63 = (std::__shared_weak_count *)v87[1];
  if (!v87[1])
    goto LABEL_113;
  v64 = (unint64_t *)((char *)v87[1] + 8);
  do
    v65 = __ldaxr(v64);
  while (__stlxr(v65 - 1, v64));
LABEL_111:
  if (!v65)
  {
    ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
    std::__shared_weak_count::__release_weak(v63);
  }
LABEL_113:
  v74 = *((_QWORD *)&v82 + 1);
  *(_QWORD *)a3 = v82;
  *(_QWORD *)(a3 + 8) = v74;
  if (!v74)
    goto LABEL_121;
  v75 = (unint64_t *)(v74 + 8);
  do
    v76 = __ldxr(v75);
  while (__stxr(v76 + 1, v75));
  v42 = (std::__shared_weak_count *)*((_QWORD *)&v82 + 1);
  if (!*((_QWORD *)&v82 + 1))
    goto LABEL_121;
  v77 = (unint64_t *)(*((_QWORD *)&v82 + 1) + 8);
  do
    v44 = __ldaxr(v77);
  while (__stlxr(v44 - 1, v77));
LABEL_119:
  if (!v44)
  {
    ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
    std::__shared_weak_count::__release_weak(v42);
  }
LABEL_121:
  v85 = 0;
  return sub_20BEBF29C(&v83);
}

void sub_20C846A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a13);
  a17 = 0;
  sub_20BEBF29C(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_20C846A9C(unint64_t *a1, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *this)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v4;
  char v5;
  unint64_t *v6;
  unint64_t *v7;
  _DWORD *FirstElement;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v17;
  tbb::spin_rw_mutex_v3 *v18;
  char v19;
  uint64_t v20;

  v4 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(this);
  v17 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(this);
  if (v4 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v17)
  {
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = a1 + 5;
    v7 = a1 + 70;
    while (!sub_20C846074(v4))
    {
      FirstElement = pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::GetFirstElement(v4);
      v9 = bswap64(0x9E3779B97F4A7C55 * (*(_QWORD *)FirstElement & 0xFFFFFFFFFFFFFFF8));
      v10 = *v6;
      __dmb(0xBu);
      while (2)
      {
        sub_20C8476B8((uint64_t)&v18, (uint64_t)v6, v10 & v9);
        while (1)
        {
          v11 = (_QWORD *)(v20 + 16);
          while (1)
          {
            v12 = v11;
            v11 = (_QWORD *)*v11;
            if ((unint64_t)v11 < 0x40)
              break;
            if ((*(_QWORD *)FirstElement & 0xFFFFFFFFFFFFFFF8) == (v11[2] & 0xFFFFFFFFFFFFFFF8))
              goto LABEL_11;
          }
          if (!v11)
            break;
LABEL_11:
          if (v19 || (v19 = 1, (tbb::spin_rw_mutex_v3::internal_upgrade(v18) & 1) != 0))
          {
            *v12 = *v11;
            do
              v15 = __ldaxr(v7);
            while (__stlxr(v15 - 1, v7));
            sub_20BEBF29C(&v18);
            v5 = 1;
            v19 = 1;
            v18 = (tbb::spin_rw_mutex_v3 *)(v11 + 1);
            tbb::spin_rw_mutex_v3::internal_acquire_writer((tbb::spin_rw_mutex_v3 *)(v11 + 1));
            sub_20BEBF29C(&v18);
            sub_20C846DAC((uint64_t)v11);
            goto LABEL_22;
          }
          v13 = *v6;
          __dmb(0xBu);
          if (v10 != v13)
          {
            v14 = sub_20BECF7E4((uint64_t)v6, v9, v10, v13);
            v10 = v13;
            if (v14)
              goto LABEL_18;
          }
        }
        v13 = *v6;
        __dmb(0xBu);
        if (v10 != v13 && sub_20BECF7E4((uint64_t)v6, v9, v10, v13))
        {
LABEL_18:
          sub_20BEBF29C(&v18);
          v10 = v13;
          continue;
        }
        break;
      }
      sub_20BEBF29C(&v18);
LABEL_22:
      v4 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)((char *)v4 + 56);
      if (v4 == (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v17)
        return v5 & 1;
    }
    sub_20C846CC4(v6);
    sub_20BDEBF08(a1 + 78);
    v5 = 1;
  }
  return v5 & 1;
}

void sub_20C846CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C846CC4(unint64_t *a1)
{
  unint64_t v2;
  void *v3;
  unint64_t i;
  unint64_t v5;
  unint64_t *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t result;

  v2 = *a1;
  __dmb(0xBu);
  __dmb(0xBu);
  a1[65] = 0;
  for (i = sub_20BEB4B94(v2); ; --i)
  {
    v5 = 0;
    v6 = &a1[i];
    v9 = v6[1];
    v7 = (uint64_t *)(v6 + 1);
    v8 = v9;
    v10 = i <= 1 ? 1 : i;
    do
    {
      v11 = v8 + 24 * v5;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = (_QWORD *)(v11 + 16);
      v12 = (_QWORD *)v14;
      if (v14 >= 0x40)
      {
        do
        {
          *v13 = *v12;
          sub_20C846DAC((uint64_t)v12);
          v12 = (_QWORD *)*v13;
        }
        while (*v13 > 0x3FuLL);
      }
      ++v5;
    }
    while (!(v5 >> v10));
    result = *v7;
    if (i < 8 && i != 1)
      break;
    tbb::internal::deallocate_via_handler_v3(result, v3);
LABEL_13:
    *v7 = 0;
  }
  if (i)
    goto LABEL_13;
  __dmb(0xBu);
  *a1 = 1;
  return result;
}

uint64_t sub_20C846DAC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 24));
  v3 = *(_QWORD *)(a1 + 16);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  return tbb::internal::deallocate_via_handler_v3(a1, v2);
}

void sub_20C846DFC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  _BOOL4 v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t ***v39;
  std::__shared_weak_count *v40;
  uint64_t **v41;
  std::__shared_weak_count *v42;

  v4 = a1 + 78;
  sub_20C806934(a1 + 78, a2);
  if (*a2)
    return;
  v34 = 0;
  v35 = 0;
  v33 = (uint64_t *)&v34;
  if (a1[3])
  {
    sub_20C846DFC(&v41);
    if (&v33 != v41)
      sub_20C847360(&v33, *v41, v41 + 1);
    v5 = v42;
    if (v42)
    {
      p_shared_owners = (unint64_t *)&v42->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
  v8 = a1[1];
  if (v8)
  {
    (*(void (**)(uint64_t ***__return_ptr))(*(_QWORD *)v8 + 16))(&v41);
    v9 = (uint64_t *)v41;
    v10 = (uint64_t *)v42;
    while (1)
    {
      if (v9 == v10)
      {
        v39 = &v41;
        sub_20BEEB2B8((void ***)&v39);
        goto LABEL_29;
      }
      (*(void (**)(uint64_t *__return_ptr, _QWORD, uint64_t *))(*(_QWORD *)a1[1] + 24))(&v37, a1[1], v9);
      sub_20C7E0B14((uint64_t)&v37, &v39);
      v11 = sub_20C847190((uint64_t *)&v39);
      v12 = v40;
      if (v40)
      {
        v13 = (unint64_t *)&v40->__shared_owners_;
        do
          v14 = __ldaxr(v13);
        while (__stlxr(v14 - 1, v13));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      v15 = v38;
      if (!v38)
        break;
      v16 = (unint64_t *)&v38->__shared_owners_;
      do
        v17 = __ldaxr(v16);
      while (__stlxr(v17 - 1, v16));
      if (v17)
        break;
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if (v11)
        goto LABEL_24;
LABEL_25:
      ++v9;
    }
    if (!v11)
      goto LABEL_25;
LABEL_24:
    sub_20C0D7FB4(&v33, v9, v9);
    goto LABEL_25;
  }
LABEL_29:
  v18 = operator new(0x30uLL);
  v18[2] = 0;
  v19 = v34;
  v18[3] = v33;
  *v18 = &unk_24C550AC0;
  v18[1] = 0;
  v18[4] = v19;
  v20 = v18 + 4;
  v21 = v35;
  v18[5] = v35;
  if (v21)
  {
    v19[2] = v20;
    v33 = (uint64_t *)&v34;
    v34 = 0;
    v35 = 0;
  }
  else
  {
    v18[3] = v20;
  }
  *(_QWORD *)&v36 = v18 + 3;
  *((_QWORD *)&v36 + 1) = v18;
  sub_20BDE82DC((uint64_t)a2, &v36);
  v22 = (std::__shared_weak_count *)*((_QWORD *)&v36 + 1);
  if (*((_QWORD *)&v36 + 1))
  {
    v23 = (unint64_t *)(*((_QWORD *)&v36 + 1) + 8);
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
  sub_20BF2B200((uint64_t)&v33, v34);
  v25 = (std::__shared_weak_count *)a2[1];
  v31 = *a2;
  v32 = v25;
  if (v25)
  {
    v26 = (unint64_t *)&v25->__shared_owners_;
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }
  sub_20C8068DC(v4, &v31);
  v28 = v32;
  if (v32)
  {
    v29 = (unint64_t *)&v32->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
}

void sub_20C8470C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v3;
  uint64_t v5;
  va_list va;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD *);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  sub_20BF2B200((uint64_t)va, v7);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v3);
  _Unwind_Resume(a1);
}

void sub_20C847144(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550AC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20C847158(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C550AC0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_20C84717C(uint64_t a1)
{
  sub_20BF2B200(a1 + 24, *(_QWORD **)(a1 + 32));
}

BOOL sub_20C847190(uint64_t *a1)
{
  uint64_t v1;
  unint64_t *v2;
  unint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *v7;
  unsigned int *v8;
  _BOOL8 v9;
  unsigned int v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;

  v1 = a1[1];
  v21 = *a1;
  v22 = (std::__shared_weak_count *)v1;
  if (v1)
  {
    v2 = (unint64_t *)(v1 + 8);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + 1, v2));
  }
  sub_20C7E0E2C(&v23, &v21);
  v4 = v22;
  if (v22)
  {
    p_shared_owners = (unint64_t *)&v22->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdPrimvarSchema::GetInterpolation((pxrInternal__aapl__pxrReserved__::HdPrimvarSchema *)&v23, &v19);
  if (v19)
  {
    (*(void (**)(uint64_t *__return_ptr, float))(*(_QWORD *)v19 + 32))(&v18, 0.0);
    v7 = (pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
    if (!v7)
      v7 = sub_20C80698C(&pxrInternal__aapl__pxrReserved__::HdPrimvarSchemaTokens);
    v8 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    v9 = (v18 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 6) & 0xFFFFFFFFFFFFFFF8);
    if ((v18 & 7) != 0)
    {
      do
        v10 = __ldxr(v8);
      while (__stlxr(v10 - 2, v8));
    }
  }
  else
  {
    v9 = 0;
  }
  v11 = v20;
  if (v20)
  {
    v12 = (unint64_t *)&v20->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v14 = v24;
  if (v24)
  {
    v15 = (unint64_t *)&v24->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  return v9;
}

void sub_20C847308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  unsigned int *v5;
  unsigned int v6;
  va_list va;

  va_start(va, a3);
  if ((a3 & 7) != 0)
  {
    v5 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v3 - 32));
  _Unwind_Resume(a1);
}

uint64_t **sub_20C847360(uint64_t **result, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t **v10;
  _QWORD *v11;
  BOOL v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t **v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;

  v5 = result;
  if (result[2])
  {
    v6 = *result;
    v7 = result[1];
    *result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1])
      v8 = (uint64_t *)v6[1];
    else
      v8 = v6;
    v15 = result;
    v16 = v8;
    v17 = v8;
    if (v8)
    {
      v16 = sub_20BDFC6B0((uint64_t)v8);
      if (a2 != a3)
      {
        v9 = a2;
        do
        {
          sub_20BF32220(v8 + 4, v9 + 4);
          v10 = (uint64_t **)sub_20BF3367C((uint64_t)v5, &v18, v17 + 4);
          sub_20BDDE1B4(v5, v18, v10, v17);
          v17 = v16;
          if (v16)
            v16 = sub_20BDFC6B0((uint64_t)v16);
          v11 = (_QWORD *)v9[1];
          if (v11)
          {
            do
            {
              a2 = v11;
              v11 = (_QWORD *)*v11;
            }
            while (v11);
          }
          else
          {
            do
            {
              a2 = (_QWORD *)v9[2];
              v12 = *a2 == (_QWORD)v9;
              v9 = a2;
            }
            while (!v12);
          }
          v8 = v17;
          if (v17)
            v12 = a2 == a3;
          else
            v12 = 1;
          v9 = a2;
        }
        while (!v12);
      }
    }
    result = (uint64_t **)sub_20C54BB3C((uint64_t)&v15);
  }
  if (a2 != a3)
  {
    do
    {
      result = (uint64_t **)sub_20C8474E0(v5, a2 + 4);
      v13 = (_QWORD *)a2[1];
      if (v13)
      {
        do
        {
          v14 = v13;
          v13 = (_QWORD *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          v14 = (_QWORD *)a2[2];
          v12 = *v14 == (_QWORD)a2;
          a2 = v14;
        }
        while (!v12);
      }
      a2 = v14;
    }
    while (v14 != a3);
  }
  return result;
}

void sub_20C8474CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C54BB3C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C8474E0(uint64_t **a1, uint64_t *a2)
{
  uint64_t **v3;
  uint64_t v5;
  uint64_t *v6;

  sub_20BFD25E8((uint64_t)a1, a2, (uint64_t)&v6);
  v3 = (uint64_t **)sub_20BF3367C((uint64_t)a1, &v5, v6 + 4);
  sub_20BDDE1B4(a1, v5, v3, v6);
  return v6;
}

void sub_20C847534(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C54BC9C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C84754C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_20C8475A0(a1, *(_QWORD **)a2, (_QWORD *)(a2 + 8));
  return a1;
}

void sub_20C847588(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF2B200(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_20C8475A0(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_20C0A7D18(v5, v6, v4 + 4, v4 + 4);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void sub_20C847624(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;

  v2 = a2[1];
  v8 = *a2;
  v9 = (std::__shared_weak_count *)v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  sub_20C8068DC(a1, &v8);
  v5 = v9;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_20C8476A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C8476B8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  tbb::spin_rw_mutex_v3 *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  unsigned int v13;
  char v14;
  unint64_t *v15;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  tbb::spin_rw_mutex_v3 *v21;
  char v22;
  uint64_t v23;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  v6 = sub_20BECF614(a2, a3);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(v6 + 16);
  __dmb(0xBu);
  if (v7 == 3
    && (v8 = (tbb::spin_rw_mutex_v3 *)(*(_QWORD *)(a1 + 16) + 8),
        *(_BYTE *)(a1 + 8) = 1,
        tbb::spin_rw_mutex_v3::internal_try_acquire_writer(v8)))
  {
    *(_QWORD *)a1 = v8;
    v9 = *(_QWORD *)(a1 + 16);
    if (*(_QWORD *)(v9 + 16) == 3)
    {
      __dmb(0xBu);
      *(_QWORD *)(v9 + 16) = 0;
      if (a3)
      {
        v10 = HIDWORD(a3);
        if (!HIDWORD(a3))
          v10 = a3;
        v11 = 32 * (HIDWORD(a3) != 0);
        if (v10 >= 0x10000)
        {
          v10 >>= 16;
          v11 = (32 * (HIDWORD(a3) != 0)) | 0x10;
        }
        if (v10 >= 0x100)
        {
          v10 >>= 8;
          v11 |= 8u;
        }
        if (v10 >= 0x10)
        {
          v10 >>= 4;
          v11 |= 4u;
        }
        v12 = v10 >= 4;
        if (v10 >= 4)
          LODWORD(v10) = v10 >> 2;
        v13 = (v10 >> 1) & 1;
        if (v12)
          v11 += 2;
        v14 = v13 + v11;
      }
      else
      {
        v14 = -1;
      }
      v17 = ~(-1 << v14);
      sub_20C8476B8(&v21, a2, v17 & a3);
      v18 = (_QWORD *)(v23 + 16);
      v19 = *(_QWORD **)(v23 + 16);
      __dmb(0xBu);
      if ((unint64_t)v19 >= 0x40)
      {
        v20 = (2 * v17) | 1;
        while ((bswap64(0x9E3779B97F4A7C55 * (v19[2] & 0xFFFFFFFFFFFFFFF8)) & v20) == a3)
        {
          if (v22 || (v22 = 1, (tbb::spin_rw_mutex_v3::internal_upgrade(v21) & 1) != 0))
          {
            *v18 = *v19;
            *v19 = *(_QWORD *)(v9 + 16);
            *(_QWORD *)(v9 + 16) = v19;
LABEL_29:
            v19 = (_QWORD *)*v18;
            if (*v18 <= 0x3FuLL)
              goto LABEL_32;
          }
          else
          {
            v18 = (_QWORD *)(v23 + 16);
            v19 = *(_QWORD **)(v23 + 16);
            __dmb(0xBu);
            if ((unint64_t)v19 < 0x40)
              goto LABEL_32;
          }
        }
        v18 = v19;
        goto LABEL_29;
      }
LABEL_32:
      sub_20BEBF29C(&v21);
    }
  }
  else
  {
    v15 = (unint64_t *)(*(_QWORD *)(a1 + 16) + 8);
    *(_BYTE *)(a1 + 8) = 0;
    *(_QWORD *)a1 = v15;
    tbb::spin_rw_mutex_v3::internal_acquire_reader(v15);
  }
  return a1;
}

void sub_20C8478B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  _QWORD *v2;
  va_list va;

  va_start(va, a2);
  sub_20BEBF29C((uint64_t *)va);
  sub_20BEBF29C(v2);
  _Unwind_Resume(a1);
}

void sub_20C8478E0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8478F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C84790C(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C550B60))
    return a1 + 24;
  else
    return 0;
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedPurposeDataSourceProvider::GetFlattenedDataSource(uint64_t **a1@<X1>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t *v29;
  pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;

  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetInputDataSource(a1, &v39);
  sub_20C7E0E2C(&v41, &v39);
  v5 = v40;
  if (v40)
  {
    p_shared_owners = (unint64_t *)&v40->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdPurposeSchema::GetPurpose((pxrInternal__aapl__pxrReserved__::HdPurposeSchema *)&v41, &v37);
  v9 = v37;
  v8 = v38;
  if (!v38)
    goto LABEL_10;
  v10 = (unint64_t *)&v38->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (v9)
      goto LABEL_11;
  }
  else
  {
LABEL_10:
    if (v9)
    {
LABEL_11:
      pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer(&v41, a2);
      goto LABEL_12;
    }
  }
  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetFlattenedDataSourceFromParentPrim((pxrInternal__aapl__pxrReserved__::SdfPath **)a1, &v35);
  sub_20C7E0E2C(&v37, &v35);
  v15 = v36;
  if (v36)
  {
    v16 = (unint64_t *)&v36->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdPurposeSchema::GetPurpose((pxrInternal__aapl__pxrReserved__::HdPurposeSchema *)&v37, &v33);
  v19 = v33;
  v18 = v34;
  if (v34)
  {
    v20 = (unint64_t *)&v34->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (v19)
        goto LABEL_29;
LABEL_31:
      v22 = atomic_load((unsigned __int8 *)&qword_25498E5B8);
      if ((v22 & 1) == 0 && __cxa_guard_acquire(&qword_25498E5B8))
      {
        v33 = 0;
        v34 = 0;
        v29 = (uint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdRenderTagTokens);
        if (!v29)
          v29 = (uint64_t *)sub_20C847CF0(&pxrInternal__aapl__pxrReserved__::HdRenderTagTokens);
        sub_20C7EA9FC(v29, &v31);
        v32 = v31;
        v31 = 0uLL;
        v30 = (pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder::SetPurpose(&v33, (uint64_t *)&v32);
        pxrInternal__aapl__pxrReserved__::HdPurposeSchema::Builder::Build(&qword_25498E5A8, v30);
        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v32);
        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v31);
        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v33);
        __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498E5A8, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498E5B8);
      }
      v23 = unk_25498E5B0;
      *a2 = qword_25498E5A8;
      a2[1] = v23;
      if (v23)
      {
        v24 = (unint64_t *)(v23 + 8);
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
      }
      goto LABEL_35;
    }
  }
  if (!v19)
    goto LABEL_31;
LABEL_29:
  pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer(&v37, a2);
LABEL_35:
  v26 = v38;
  if (v38)
  {
    v27 = (unint64_t *)&v38->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
LABEL_12:
  v12 = v42;
  if (v42)
  {
    v13 = (unint64_t *)&v42->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20C847C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  __cxa_guard_abort(&qword_25498E5B8);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v5 - 48));
  _Unwind_Resume(a1);
}

unsigned int *pxrInternal__aapl__pxrReserved__::HdFlattenedPurposeDataSourceProvider::ComputeDirtyLocatorsForDescendants(pxrInternal__aapl__pxrReserved__::HdFlattenedPurposeDataSourceProvider *this, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  unsigned int *result;
  uint64_t v4;

  result = (unsigned int *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet(this);
  if (result != (unsigned int *)a2)
  {
    if (result[113] >= 9)
      v4 = *(_QWORD *)result;
    else
      v4 = (uint64_t)result;
    return (unsigned int *)sub_20C82877C((uint64_t)a2, v4, v4 + 56 * result[112]);
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType *sub_20C847CF0(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C847D38();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType::~HdRenderTagTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType *sub_20C847D38()
{
  pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType *)operator new(0x48uLL);
  pxrInternal__aapl__pxrReserved__::HdRenderTagTokens_StaticTokenType::HdRenderTagTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C847D64(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedVisibilityDataSourceProvider::GetFlattenedDataSource(uint64_t **a1@<X1>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *v29;
  char v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  std::__shared_weak_count *v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  uint64_t v39;
  std::__shared_weak_count *v40;
  uint64_t v41;
  std::__shared_weak_count *v42;

  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetInputDataSource(a1, &v39);
  sub_20C7E0E2C(&v41, &v39);
  v5 = v40;
  if (v40)
  {
    p_shared_owners = (unint64_t *)&v40->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetVisibility((pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *)&v41, &v37);
  v9 = v37;
  v8 = v38;
  if (!v38)
    goto LABEL_10;
  v10 = (unint64_t *)&v38->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    if (v9)
      goto LABEL_11;
  }
  else
  {
LABEL_10:
    if (v9)
    {
LABEL_11:
      pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer(&v41, a2);
      goto LABEL_12;
    }
  }
  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetFlattenedDataSourceFromParentPrim((pxrInternal__aapl__pxrReserved__::SdfPath **)a1, &v35);
  sub_20C7E0E2C(&v37, &v35);
  v15 = v36;
  if (v36)
  {
    v16 = (unint64_t *)&v36->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::GetVisibility((pxrInternal__aapl__pxrReserved__::HdVisibilitySchema *)&v37, &v33);
  v19 = v33;
  v18 = v34;
  if (v34)
  {
    v20 = (unint64_t *)&v34->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
      if (v19)
        goto LABEL_29;
LABEL_31:
      v22 = atomic_load((unsigned __int8 *)&qword_25498E5D0);
      if ((v22 & 1) == 0 && __cxa_guard_acquire(&qword_25498E5D0))
      {
        v33 = 0;
        v34 = 0;
        v30 = 1;
        pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v30, (uint64_t *)&v31);
        v32 = v31;
        v31 = 0uLL;
        v29 = (pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder *)pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::SetVisibility(&v33, (uint64_t *)&v32);
        pxrInternal__aapl__pxrReserved__::HdVisibilitySchema::Builder::Build(&qword_25498E5C0, v29);
        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v32);
        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v31);
        pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v33);
        __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498E5C0, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498E5D0);
      }
      v23 = *(_QWORD *)algn_25498E5C8;
      *a2 = qword_25498E5C0;
      a2[1] = v23;
      if (v23)
      {
        v24 = (unint64_t *)(v23 + 8);
        do
          v25 = __ldxr(v24);
        while (__stxr(v25 + 1, v24));
      }
      goto LABEL_35;
    }
  }
  if (!v19)
    goto LABEL_31;
LABEL_29:
  pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer(&v37, a2);
LABEL_35:
  v26 = v38;
  if (v38)
  {
    v27 = (unint64_t *)&v38->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
LABEL_12:
  v12 = v42;
  if (v42)
  {
    v13 = (unint64_t *)&v42->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20C848038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  __cxa_guard_abort(&qword_25498E5D0);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va1);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v7 - 48));
  _Unwind_Resume(a1);
}

unsigned int *pxrInternal__aapl__pxrReserved__::HdFlattenedVisibilityDataSourceProvider::ComputeDirtyLocatorsForDescendants(pxrInternal__aapl__pxrReserved__::HdFlattenedVisibilityDataSourceProvider *this, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  unsigned int *result;
  uint64_t v4;

  result = (unsigned int *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet(this);
  if (result != (unsigned int *)a2)
  {
    if (result[113] >= 9)
      v4 = *(_QWORD *)result;
    else
      v4 = (uint64_t)result;
    return (unsigned int *)sub_20C82877C((uint64_t)a2, v4, v4 + 56 * result[112]);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdFlattenedXformDataSourceProvider::GetFlattenedDataSource(uint64_t **a1@<X1>, _QWORD *a2@<X8>)
{
  unsigned __int8 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  __int128 v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  unint64_t *v38;
  unint64_t v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  _QWORD *v43;
  pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *v44;
  std::__shared_weak_count *v45;
  unint64_t *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  unint64_t *v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  _QWORD *v60;
  pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  std::__shared_weak_count *v75;
  unint64_t *v76;
  unint64_t v77;
  std::__shared_weak_count *v78;
  unint64_t *v79;
  unint64_t v80;
  std::__shared_weak_count *v81;
  unint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t *v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  _OWORD *v91;
  _QWORD *v92;
  pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  std::__shared_weak_count *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  uint64_t v102;
  std::__shared_weak_count *v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  uint64_t v106;
  std::__shared_weak_count *v107;
  uint64_t v108;
  std::__shared_weak_count *v109;
  __int128 v110;
  __int128 v111;
  double v112[16];
  __int128 v113;
  _OWORD v114[7];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;

  v5 = atomic_load((unsigned __int8 *)&qword_25498E5E8);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_25498E5E8))
  {
    v113 = 0u;
    v114[0] = 0u;
    v121 = 0u;
    v122 = 0u;
    v119 = 0u;
    v120 = 0u;
    v117 = 0u;
    v118 = 0u;
    v115 = 0u;
    v116 = 0u;
    v91 = (_OWORD *)pxrInternal__aapl__pxrReserved__::GfMatrix4d::SetDiagonal((uint64_t)&v115, 1.0);
    sub_20C848B54(v91, &v96);
    *(_OWORD *)v112 = v96;
    v96 = 0uLL;
    v92 = pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetMatrix(&v113, (uint64_t *)v112);
    LOBYTE(v108) = 1;
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v108, (uint64_t *)&v110);
    v111 = v110;
    v110 = 0uLL;
    v93 = (pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetResetXformStack((uint64_t)v92, (uint64_t *)&v111);
    pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::Build(v93, &qword_25498E5D8);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v111);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v110);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v112);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v96);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v114);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v113);
    __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498E5D8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E5E8);
  }
  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetInputDataSource(a1, &v106);
  sub_20C7E0E2C(&v108, &v106);
  v6 = v107;
  if (v107)
  {
    p_shared_owners = (unint64_t *)&v107->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdXformSchema::GetResetXformStack((pxrInternal__aapl__pxrReserved__::HdXformSchema *)&v108, &v115);
  if ((_QWORD)v115 && (*(unsigned int (**)(_QWORD, float))(*(_QWORD *)v115 + 32))(v115, 0.0))
  {
    pxrInternal__aapl__pxrReserved__::HdXformSchema::GetMatrix((pxrInternal__aapl__pxrReserved__::HdXformSchema *)&v108, &v113);
    v9 = v113;
    if (!*((_QWORD *)&v113 + 1))
      goto LABEL_13;
    v10 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v9 + 1) + 16))(*((_QWORD *)&v9 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v9 + 1));
      if ((_QWORD)v9)
        goto LABEL_14;
    }
    else
    {
LABEL_13:
      if ((_QWORD)v9)
      {
LABEL_14:
        pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer(&v108, a2);
LABEL_116:
        v81 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
        if (!*((_QWORD *)&v115 + 1))
          goto LABEL_121;
        v87 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
        do
          v83 = __ldaxr(v87);
        while (__stlxr(v83 - 1, v87));
        goto LABEL_119;
      }
    }
    v84 = unk_25498E5E0;
    *a2 = qword_25498E5D8;
    a2[1] = v84;
    if (v84)
    {
      v85 = (unint64_t *)(v84 + 8);
      do
        v86 = __ldxr(v85);
      while (__stxr(v86 + 1, v85));
    }
    goto LABEL_116;
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
  if (*((_QWORD *)&v115 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdXformSchema::GetMatrix((pxrInternal__aapl__pxrReserved__::HdXformSchema *)&v108, &v104);
  pxrInternal__aapl__pxrReserved__::HdFlattenedDataSourceProvider::Context::GetFlattenedDataSourceFromParentPrim((pxrInternal__aapl__pxrReserved__::SdfPath **)a1, &v100);
  sub_20C7E0E2C(&v102, &v100);
  v15 = v101;
  if (v101)
  {
    v16 = (unint64_t *)&v101->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdXformSchema::GetMatrix((pxrInternal__aapl__pxrReserved__::HdXformSchema *)&v102, &v98);
  v18 = v104;
  v19 = v98;
  if (v104)
  {
    if (v98)
    {
      v96 = 0uLL;
      v97 = 0uLL;
      v20 = operator new(0xA8uLL);
      v21 = v20;
      v22 = v99;
      *(_QWORD *)&v111 = v19;
      *((_QWORD *)&v111 + 1) = v99;
      if (v99)
      {
        v23 = (unint64_t *)&v99->__shared_owners_;
        do
          v24 = __ldxr(v23);
        while (__stxr(v24 + 1, v23));
      }
      v25 = v105;
      *(_QWORD *)&v110 = v18;
      *((_QWORD *)&v110 + 1) = v105;
      if (v105)
      {
        v26 = (unint64_t *)&v105->__shared_owners_;
        do
          v27 = __ldxr(v26);
        while (__stxr(v27 + 1, v26));
      }
      *v20 = off_24C550CF8;
      v20[1] = v19;
      v28 = v20 + 1;
      v20[2] = v22;
      if (v22)
      {
        v29 = (unint64_t *)&v22->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
      }
      v20[3] = v18;
      v20[4] = v25;
      if (v25)
      {
        v31 = (unint64_t *)&v25->__shared_owners_;
        do
          v32 = __ldxr(v31);
        while (__stxr(v32 + 1, v31));
      }
      (*(void (**)(__int128 *__return_ptr, uint64_t, float))(*(_QWORD *)v18 + 32))(&v113, v18, 0.0);
      (*(void (**)(double *__return_ptr, float))(*(_QWORD *)*v28 + 32))(v112, 0.0);
      v119 = v114[3];
      v120 = v114[4];
      v121 = v114[5];
      v122 = v114[6];
      v115 = v113;
      v116 = v114[0];
      v117 = v114[1];
      v118 = v114[2];
      pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)&v115, v112);
      v33 = v120;
      *(_OWORD *)(v21 + 13) = v119;
      *(_OWORD *)(v21 + 15) = v33;
      v34 = v122;
      *(_OWORD *)(v21 + 17) = v121;
      *(_OWORD *)(v21 + 19) = v34;
      v35 = v116;
      *(_OWORD *)(v21 + 5) = v115;
      *(_OWORD *)(v21 + 7) = v35;
      v36 = v118;
      *(_OWORD *)(v21 + 9) = v117;
      *(_OWORD *)(v21 + 11) = v36;
      *(_QWORD *)&v94 = v21;
      v37 = operator new(0x20uLL);
      *v37 = &off_24C550D48;
      v37[1] = 0;
      v37[2] = 0;
      v37[3] = v21;
      *((_QWORD *)&v94 + 1) = v37;
      if (v25)
      {
        v38 = (unint64_t *)&v25->__shared_owners_;
        do
          v39 = __ldaxr(v38);
        while (__stlxr(v39 - 1, v38));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      v40 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
      if (*((_QWORD *)&v111 + 1))
      {
        v41 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
      v95 = v94;
      v43 = pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetMatrix(&v96, (uint64_t *)&v95);
      LOBYTE(v112[0]) = 1;
      pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(v112, (uint64_t *)&v113);
      v115 = v113;
      v113 = 0uLL;
      v44 = (pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetResetXformStack((uint64_t)v43, (uint64_t *)&v115);
      pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::Build(v44, a2);
      v45 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
      if (*((_QWORD *)&v115 + 1))
      {
        v46 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
        do
          v47 = __ldaxr(v46);
        while (__stlxr(v47 - 1, v46));
        if (!v47)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      v48 = (std::__shared_weak_count *)*((_QWORD *)&v113 + 1);
      if (*((_QWORD *)&v113 + 1))
      {
        v49 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
        do
          v50 = __ldaxr(v49);
        while (__stlxr(v50 - 1, v49));
        if (!v50)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
      }
      v51 = (std::__shared_weak_count *)*((_QWORD *)&v95 + 1);
      if (*((_QWORD *)&v95 + 1))
      {
        v52 = (unint64_t *)(*((_QWORD *)&v95 + 1) + 8);
        do
          v53 = __ldaxr(v52);
        while (__stlxr(v53 - 1, v52));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
          std::__shared_weak_count::__release_weak(v51);
        }
      }
      v54 = (std::__shared_weak_count *)*((_QWORD *)&v97 + 1);
      if (*((_QWORD *)&v97 + 1))
      {
        v55 = (unint64_t *)(*((_QWORD *)&v97 + 1) + 8);
        do
          v56 = __ldaxr(v55);
        while (__stlxr(v56 - 1, v55));
        if (!v56)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
      v57 = (std::__shared_weak_count *)*((_QWORD *)&v96 + 1);
      if (*((_QWORD *)&v96 + 1))
      {
        v58 = (unint64_t *)(*((_QWORD *)&v96 + 1) + 8);
        do
          v59 = __ldaxr(v58);
        while (__stlxr(v59 - 1, v58));
        goto LABEL_93;
      }
    }
    else
    {
      v115 = 0uLL;
      v116 = 0uLL;
      v60 = pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetMatrix(&v115, &v104);
      LOBYTE(v96) = 1;
      pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v96, (uint64_t *)v112);
      v113 = *(_OWORD *)v112;
      *(_OWORD *)v112 = 0uLL;
      v61 = (pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder *)pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::SetResetXformStack((uint64_t)v60, (uint64_t *)&v113);
      pxrInternal__aapl__pxrReserved__::HdXformSchema::Builder::Build(v61, a2);
      v62 = (std::__shared_weak_count *)*((_QWORD *)&v113 + 1);
      if (*((_QWORD *)&v113 + 1))
      {
        v63 = (unint64_t *)(*((_QWORD *)&v113 + 1) + 8);
        do
          v64 = __ldaxr(v63);
        while (__stlxr(v64 - 1, v63));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
      v65 = *(std::__shared_weak_count **)&v112[1];
      if (*(_QWORD *)&v112[1])
      {
        v66 = (unint64_t *)(*(_QWORD *)&v112[1] + 8);
        do
          v67 = __ldaxr(v66);
        while (__stlxr(v67 - 1, v66));
        if (!v67)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
      v68 = (std::__shared_weak_count *)*((_QWORD *)&v116 + 1);
      if (*((_QWORD *)&v116 + 1))
      {
        v69 = (unint64_t *)(*((_QWORD *)&v116 + 1) + 8);
        do
          v70 = __ldaxr(v69);
        while (__stlxr(v70 - 1, v69));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
          std::__shared_weak_count::__release_weak(v68);
        }
      }
      v57 = (std::__shared_weak_count *)*((_QWORD *)&v115 + 1);
      if (*((_QWORD *)&v115 + 1))
      {
        v71 = (unint64_t *)(*((_QWORD *)&v115 + 1) + 8);
        do
          v59 = __ldaxr(v71);
        while (__stlxr(v59 - 1, v71));
LABEL_93:
        if (!v59)
        {
          ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
          std::__shared_weak_count::__release_weak(v57);
        }
      }
    }
  }
  else if (v98)
  {
    pxrInternal__aapl__pxrReserved__::HdSchema::GetContainer(&v102, a2);
  }
  else
  {
    v72 = unk_25498E5E0;
    *a2 = qword_25498E5D8;
    a2[1] = v72;
    if (v72)
    {
      v73 = (unint64_t *)(v72 + 8);
      do
        v74 = __ldxr(v73);
      while (__stxr(v74 + 1, v73));
    }
  }
  v75 = v99;
  if (v99)
  {
    v76 = (unint64_t *)&v99->__shared_owners_;
    do
      v77 = __ldaxr(v76);
    while (__stlxr(v77 - 1, v76));
    if (!v77)
    {
      ((void (*)(std::__shared_weak_count *))v75->__on_zero_shared)(v75);
      std::__shared_weak_count::__release_weak(v75);
    }
  }
  v78 = v103;
  if (v103)
  {
    v79 = (unint64_t *)&v103->__shared_owners_;
    do
      v80 = __ldaxr(v79);
    while (__stlxr(v80 - 1, v79));
    if (!v80)
    {
      ((void (*)(std::__shared_weak_count *))v78->__on_zero_shared)(v78);
      std::__shared_weak_count::__release_weak(v78);
    }
  }
  v81 = v105;
  if (v105)
  {
    v82 = (unint64_t *)&v105->__shared_owners_;
    do
      v83 = __ldaxr(v82);
    while (__stlxr(v83 - 1, v82));
LABEL_119:
    if (!v83)
    {
      ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
      std::__shared_weak_count::__release_weak(v81);
    }
  }
LABEL_121:
  v88 = v109;
  if (v109)
  {
    v89 = (unint64_t *)&v109->__shared_owners_;
    do
      v90 = __ldaxr(v89);
    while (__stlxr(v90 - 1, v89));
    if (!v90)
    {
      ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
      std::__shared_weak_count::__release_weak(v88);
    }
  }
}

void sub_20C8489A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a33);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a13);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a51);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a49);
  __cxa_guard_abort(&qword_25498E5E8);
  _Unwind_Resume(a1);
}

void sub_20C848B48()
{
  JUMPOUT(0x20C848B3CLL);
}

_QWORD *sub_20C848B54@<X0>(_OWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = (char *)operator new(0x88uLL);
  v5 = a1[5];
  *(_OWORD *)(v4 + 72) = a1[4];
  *(_OWORD *)(v4 + 88) = v5;
  v6 = a1[7];
  *(_OWORD *)(v4 + 104) = a1[6];
  *(_OWORD *)(v4 + 120) = v6;
  v7 = a1[1];
  *(_OWORD *)(v4 + 8) = *a1;
  *(_OWORD *)(v4 + 24) = v7;
  v8 = a1[3];
  *(_OWORD *)(v4 + 40) = a1[2];
  *(_QWORD *)v4 = &unk_24C550C30;
  *(_OWORD *)(v4 + 56) = v8;
  return sub_20C848CF0(a2, (uint64_t)v4);
}

unsigned int *pxrInternal__aapl__pxrReserved__::HdFlattenedXformDataSourceProvider::ComputeDirtyLocatorsForDescendants(pxrInternal__aapl__pxrReserved__::HdFlattenedXformDataSourceProvider *this, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *a2)
{
  unsigned int *result;
  uint64_t v4;

  result = (unsigned int *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet(this);
  if (result != (unsigned int *)a2)
  {
    if (result[113] >= 9)
      v4 = *(_QWORD *)result;
    else
      v4 = (uint64_t)result;
    return (unsigned int *)sub_20C82877C((uint64_t)a2, v4, v4 + 56 * result[112]);
  }
  return result;
}

void sub_20C848C1C(pxrInternal__aapl__pxrReserved__::HdDataSourceBase *a1)
{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(a1);
  operator delete(v1);
}

char *sub_20C848C30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  unsigned int *v9;
  unsigned int v10;

  a2[1] = (char *)&off_24C51E470 + 2;
  result = (char *)operator new(0x88uLL);
  v5 = *(_OWORD *)(a1 + 88);
  *((_OWORD *)result + 4) = *(_OWORD *)(a1 + 72);
  *((_OWORD *)result + 5) = v5;
  v6 = *(_OWORD *)(a1 + 120);
  *((_OWORD *)result + 6) = *(_OWORD *)(a1 + 104);
  *((_OWORD *)result + 7) = v6;
  v7 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)result = *(_OWORD *)(a1 + 8);
  *((_OWORD *)result + 1) = v7;
  v8 = *(_OWORD *)(a1 + 56);
  *((_OWORD *)result + 2) = *(_OWORD *)(a1 + 40);
  *((_OWORD *)result + 3) = v8;
  v9 = (unsigned int *)(result + 128);
  atomic_store(0, (unsigned int *)result + 32);
  *a2 = result;
  do
    v10 = __ldxr(v9);
  while (__stxr(v10 + 1, v9));
  return result;
}

uint64_t sub_20C848CB4()
{
  return 0;
}

__n128 sub_20C848CBC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 80) = v2;
  v3 = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 112) = v3;
  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = v4;
  result = *(__n128 *)(a1 + 40);
  v6 = *(_OWORD *)(a1 + 56);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v6;
  return result;
}

_QWORD *sub_20C848CF0(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C550C80;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C848D38(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C848D5C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C848D70(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C848D88(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C550CD0))
    return a1 + 24;
  else
    return 0;
}

void sub_20C848DC8(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v2;

  *(_QWORD *)a1 = off_24C550CF8;
  v2 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 24));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C848E08(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v2;
  void *v3;

  *(_QWORD *)a1 = off_24C550CF8;
  v2 = (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 8);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 24));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v3);
}

char *sub_20C848E4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  unsigned int *v8;
  unsigned int v9;
  _OWORD v10[8];

  (*(void (**)(_OWORD *__return_ptr))(*(_QWORD *)a1 + 32))(v10);
  a2[1] = (char *)&off_24C51E470 + 2;
  result = (char *)operator new(0x88uLL);
  v4 = v10[5];
  *((_OWORD *)result + 4) = v10[4];
  *((_OWORD *)result + 5) = v4;
  v5 = v10[7];
  *((_OWORD *)result + 6) = v10[6];
  *((_OWORD *)result + 7) = v5;
  v6 = v10[1];
  *(_OWORD *)result = v10[0];
  *((_OWORD *)result + 1) = v6;
  v7 = v10[3];
  *((_OWORD *)result + 2) = v10[2];
  *((_OWORD *)result + 3) = v7;
  v8 = (unsigned int *)(result + 128);
  atomic_store(0, (unsigned int *)result + 32);
  *a2 = result;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  return result;
}

uint64_t sub_20C848ED4(uint64_t a1, void **a2, float a3, float a4)
{
  int v8;
  unsigned int v9;
  unsigned int v10;
  void *v11;
  void *v12;
  void *__p[2];
  void *v15;
  void *v16[2];
  void *v17;
  float *v18;

  v16[0] = 0;
  v16[1] = 0;
  v17 = 0;
  v8 = (*(uint64_t (**)(_QWORD, void **))(**(_QWORD **)(a1 + 8) + 24))(*(_QWORD *)(a1 + 8), v16);
  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v9 = (*(uint64_t (**)(_QWORD, void **, float, float))(**(_QWORD **)(a1 + 24) + 24))(*(_QWORD *)(a1 + 24), __p, a3, a4);
  v10 = v9;
  if (!a2)
    goto LABEL_12;
  if ((v8 & v9) == 1)
  {
    sub_20C7FAB48((float *)v16[0], (float *)v16[1], (float *)__p[0], (float *)__p[1], (uint64_t)a2, &v18);
    goto LABEL_12;
  }
  if (v8)
  {
    v11 = *a2;
    if (*a2)
    {
      a2[1] = v11;
      operator delete(v11);
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
    *(_OWORD *)a2 = *(_OWORD *)v16;
    a2[2] = v17;
    v16[1] = 0;
    v17 = 0;
    v16[0] = 0;
    goto LABEL_12;
  }
  if (!v9)
  {
LABEL_12:
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    goto LABEL_14;
  }
  v12 = *a2;
  if (*a2)
  {
    a2[1] = v12;
    operator delete(v12);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  *(_OWORD *)a2 = *(_OWORD *)__p;
  a2[2] = v15;
LABEL_14:
  if (v16[0])
  {
    v16[1] = v16[0];
    operator delete(v16[0]);
  }
  return v8 | v10;
}

void sub_20C849014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C849048(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  double v14[16];
  _OWORD v15[8];

  if (a3 == 0.0)
  {
    v5 = *(_OWORD *)(a1 + 120);
    *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 104);
    *(_OWORD *)(a2 + 80) = v5;
    v6 = *(_OWORD *)(a1 + 152);
    *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 136);
    *(_OWORD *)(a2 + 112) = v6;
    v7 = *(_OWORD *)(a1 + 56);
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 40);
    *(_OWORD *)(a2 + 16) = v7;
    v8 = *(_OWORD *)(a1 + 88);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 72);
    *(_OWORD *)(a2 + 48) = v8;
  }
  else
  {
    (*(void (**)(_OWORD *__return_ptr))(**(_QWORD **)(a1 + 24) + 32))(v15);
    (*(void (**)(double *__return_ptr, float))(**(_QWORD **)(a1 + 8) + 32))(v14, a3);
    v10 = v15[5];
    *(_OWORD *)(a2 + 64) = v15[4];
    *(_OWORD *)(a2 + 80) = v10;
    v11 = v15[7];
    *(_OWORD *)(a2 + 96) = v15[6];
    *(_OWORD *)(a2 + 112) = v11;
    v12 = v15[1];
    *(_OWORD *)a2 = v15[0];
    *(_OWORD *)(a2 + 16) = v12;
    v13 = v15[3];
    *(_OWORD *)(a2 + 32) = v15[2];
    *(_OWORD *)(a2 + 48) = v13;
    pxrInternal__aapl__pxrReserved__::GfMatrix4d::operator*=((double *)a2, v14);
  }
}

void sub_20C84911C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C849130(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C849148(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C550D98))
    return a1 + 24;
  else
    return 0;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_PrimLevelWrappingDataSource::PrimDirtied(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t *v9;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v10;
  unsigned int v11;
  uint64_t *v12;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  std::__shared_weak_count *v30;

  if (*((_DWORD *)a2 + 912))
  {
    v4 = 0;
    v5 = 0;
    v6 = (_QWORD *)(a1 + 40);
    while (1)
    {
      if (*((_DWORD *)a2 + 913) >= 9u)
        v7 = (uint64_t *)*a2;
      else
        v7 = a2;
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IsEmpty((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)&v7[57 * v5]))
        goto LABEL_35;
      v8 = v6;
      if (*(_DWORD *)(a1 + 172) >= 9u)
        v8 = (_QWORD *)*v6;
      v9 = &v8[2 * v5];
      sub_20C806934(v9, &v29);
      if (v29)
      {
        v11 = *((_DWORD *)a2 + 913);
        v12 = (uint64_t *)*a2;
        v13 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(v10);
        if (v11 >= 9)
          v14 = v12;
        else
          v14 = a2;
        if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Contains((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)&v14[57 * v5], v13))
        {
LABEL_24:
          v27 = 0;
          v28 = 0;
          sub_20C847624(v9, &v27);
          v20 = v28;
          if (v28)
          {
            p_shared_owners = (unint64_t *)&v28->__shared_owners_;
            do
              v22 = __ldaxr(p_shared_owners);
            while (__stlxr(v22 - 1, p_shared_owners));
            if (!v22)
            {
              ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
              std::__shared_weak_count::__release_weak(v20);
            }
          }
          v4 = 1;
          goto LABEL_30;
        }
        sub_20C8493A8((uint64_t)&v29, &v27);
        v15 = v27;
        if (v27)
        {
          if (*((_DWORD *)a2 + 913) >= 9u)
            v16 = (uint64_t *)*a2;
          else
            v16 = a2;
          v4 |= (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)v27 + 32))(v27, &v16[57 * v5]);
        }
        v17 = v28;
        if (!v28)
          goto LABEL_23;
        v18 = (unint64_t *)&v28->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
          if (!v15)
            goto LABEL_24;
        }
        else
        {
LABEL_23:
          if (!v15)
            goto LABEL_24;
        }
      }
LABEL_30:
      v23 = v30;
      if (v30)
      {
        v24 = (unint64_t *)&v30->__shared_owners_;
        do
          v25 = __ldaxr(v24);
        while (__stlxr(v25 - 1, v24));
        if (!v25)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
LABEL_35:
      if (++v5 >= (unint64_t)*((unsigned int *)a2 + 912))
        return v4 & 1;
    }
  }
  LOBYTE(v4) = 0;
  return v4 & 1;
}

void sub_20C849374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  _Unwind_Resume(a1);
}

void *sub_20C8493A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C550A48, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

char *pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_Insert(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unsigned int v9;
  char *result;
  char *v11;
  unint64_t v12;
  uint64_t i;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  char *v26;
  _QWORD v27[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = (char *)v5 - (char *)*a1;
  if ((unint64_t)v6 < 0xF9)
  {
    v9 = ~(-1 << ((unint64_t)v6 >> 3));
    v11 = *(char **)a2;
    result = *(char **)(a2 + 8);
    if (*(char **)a2 == result)
    {
LABEL_16:
      if (v5 != v4)
      {
        v15 = 0;
        do
        {
          if (((v9 >> v15) & 1) != 0)
          {
            v16 = &v4[v15];
            if ((unint64_t)result >= *(_QWORD *)(a2 + 16))
            {
              result = sub_20BFCA068((char **)a2, v16);
            }
            else
            {
              v17 = *v16;
              *(_QWORD *)result = *v16;
              if ((v17 & 7) != 0)
              {
                v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
                do
                  v19 = __ldxr(v18);
                while (__stxr(v19 + 2, v18));
                if ((v19 & 1) == 0)
                  *(_QWORD *)result &= 0xFFFFFFFFFFFFFFF8;
              }
              result += 8;
            }
            *(_QWORD *)(a2 + 8) = result;
            v4 = *a1;
            v5 = a1[1];
          }
          ++v15;
        }
        while (v15 < v5 - v4);
      }
    }
    else
    {
      v12 = v6 >> 3;
      if (v12 <= 1)
        v12 = 1;
      while (1)
      {
        if (v5 != v4)
        {
          for (i = 0; i != v12; ++i)
          {
            if ((v4[i] & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v11 & 0xFFFFFFFFFFFFFFF8))
              v14 = ~(1 << i);
            else
              v14 = -1;
            v9 &= v14;
          }
        }
        if (!v9)
          break;
        v11 += 8;
        if (v11 == result)
          goto LABEL_16;
      }
    }
  }
  else
  {
    sub_20C84B73C((uint64_t)v27, v4, v5);
    v7 = *(char **)a2;
    v8 = *(char **)(a2 + 8);
    while (v7 != v8)
    {
      sub_20C82D55C(v27, v7);
      v7 += 8;
    }
    v21 = *a1;
    v20 = a1[1];
    while (v21 != v20)
    {
      if (sub_20BF2B388(v27, v21))
      {
        v22 = *(uint64_t **)(a2 + 8);
        if ((unint64_t)v22 >= *(_QWORD *)(a2 + 16))
        {
          v26 = sub_20BFCA068((char **)a2, v21);
        }
        else
        {
          v23 = *v21;
          *v22 = *v21;
          if ((v23 & 7) != 0)
          {
            v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
            do
              v25 = __ldxr(v24);
            while (__stxr(v25 + 2, v24));
            if ((v25 & 1) == 0)
              *v22 &= 0xFFFFFFFFFFFFFFF8;
          }
          v26 = (char *)(v22 + 1);
        }
        *(_QWORD *)(a2 + 8) = v26;
      }
      ++v21;
    }
    return (char *)sub_20BF20BCC((uint64_t)v27);
  }
  return result;
}

void sub_20C8495F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF20BCC((uint64_t)va);
  _Unwind_Resume(a1);
}

char *pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_PrimLevelWrappingDataSource::GetNames@<X0>(pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_PrimLevelWrappingDataSource *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v4 = *((_QWORD *)this + 3);
  if (v4)
  {
    (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)v4 + 16))(a2);
    return pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_Insert((uint64_t **)(*((_QWORD *)this + 1) + 144), (uint64_t)a2);
  }
  else
  {
    v6 = *((_QWORD *)this + 1);
    a2[1] = 0;
    a2[2] = 0;
    *a2 = 0;
    return (char *)sub_20BFE538C(a2, *(uint64_t **)(v6 + 144), *(uint64_t **)(v6 + 152), (uint64_t)(*(_QWORD *)(v6 + 152) - *(_QWORD *)(v6 + 144)) >> 3);
  }
}

void sub_20C849690(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEEB2B8((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_PrimLevelWrappingDataSource::Get(pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_PrimLevelWrappingDataSource *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  __int128 *v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  __int128 v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  std::__shared_weak_count *v37;
  const pxrInternal__aapl__pxrReserved__::TfToken *v38;
  char *v39;
  __int128 v40;

  v6 = (_QWORD *)*((_QWORD *)this + 1);
  v8 = v6[18];
  v7 = v6[19];
  v9 = v7 - v8;
  if (v7 == v8)
  {
LABEL_6:
    v13 = *((_QWORD *)this + 3);
    if (v13)
    {
      (*(void (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::TfToken *))(*(_QWORD *)v13 + 24))(v13, a2);
    }
    else
    {
      *a3 = 0;
      a3[1] = 0;
    }
    return;
  }
  v10 = 0;
  v11 = 0;
  v12 = v9 >> 3;
  if ((unint64_t)(v9 >> 3) <= 1)
    v12 = 1;
  while ((*(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)(v8 + 8 * v11) & 0xFFFFFFFFFFFFFFF8))
  {
    ++v11;
    v10 += 16;
    if (v12 == v11)
      goto LABEL_6;
  }
  v14 = (_QWORD *)((char *)this + 40);
  if (*((_DWORD *)this + 43) >= 9u)
    v14 = (_QWORD *)*v14;
  v15 = &v14[2 * v11];
  sub_20C806934(v15, &v36);
  if (v36)
  {
    sub_20C7E0B14((uint64_t)&v36, &v40);
    *(_OWORD *)a3 = v40;
    v16 = v37;
    if (!v37)
      return;
    p_shared_owners = (unint64_t *)&v37->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    goto LABEL_33;
  }
  v19 = v37;
  if (v37)
  {
    v20 = (unint64_t *)&v37->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  v36 = *((_QWORD *)this + 1);
  v37 = (std::__shared_weak_count *)((char *)this + 16);
  v38 = a2;
  v39 = (char *)this + 24;
  (***(void (****)(__int128 *__return_ptr, _QWORD, uint64_t *))(v6[21] + v10))(&v35, *(_QWORD *)(v6[21] + v10), &v36);
  v40 = v35;
  if (!(_QWORD)v35)
  {
    LOBYTE(v34) = 0;
    pxrInternal__aapl__pxrReserved__::HdRetainedTypedSampledDataSource<BOOL>::New(&v34, (uint64_t *)&v35);
    v27 = v35;
    v35 = 0uLL;
    v28 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
    v40 = v27;
    if (v28)
    {
      v29 = (unint64_t *)&v28->__shared_owners_;
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    v31 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
    if (*((_QWORD *)&v35 + 1))
    {
      v32 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
      }
    }
  }
  v35 = 0uLL;
  if (sub_20C8499A4(v15, &v35, (uint64_t *)&v40))
    v22 = &v40;
  else
    v22 = &v35;
  sub_20C7E0B14((uint64_t)v22, &v34);
  *(_OWORD *)a3 = v34;
  v23 = (std::__shared_weak_count *)*((_QWORD *)&v35 + 1);
  if (*((_QWORD *)&v35 + 1))
  {
    v24 = (unint64_t *)(*((_QWORD *)&v35 + 1) + 8);
    do
      v25 = __ldaxr(v24);
    while (__stlxr(v25 - 1, v24));
    if (!v25)
    {
      ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
      std::__shared_weak_count::__release_weak(v23);
    }
  }
  v16 = (std::__shared_weak_count *)*((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    v26 = (unint64_t *)(*((_QWORD *)&v40 + 1) + 8);
    do
      v18 = __ldaxr(v26);
    while (__stlxr(v18 - 1, v26));
LABEL_33:
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
}

void sub_20C849980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C8499A4(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  _BOOL8 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v11;
  std::__shared_weak_count *v12;

  v3 = a3[1];
  v11 = *a3;
  v12 = (std::__shared_weak_count *)v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = sub_20C84B56C(a1, a2, &v11);
  v7 = v12;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return v6;
}

void sub_20C849A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::HdFlatteningSceneIndex(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *v5;
  char **v6;
  char **v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  char *v19;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v20;
  uint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  __int128 v29;
  uint64_t v30;
  std::__shared_weak_count *v31;
  _QWORD v32[3];
  void **v33;
  std::__shared_weak_count *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v5 = pxrInternal__aapl__pxrReserved__::HdSingleInputFilteringSceneIndexBase::HdSingleInputFilteringSceneIndexBase((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)a1, a2);
  *(_QWORD *)v5 = off_24C550DC0;
  *((_OWORD *)v5 + 9) = 0u;
  v6 = (char **)((char *)v5 + 144);
  v7 = (char **)((char *)v5 + 168);
  *((_OWORD *)v5 + 10) = 0u;
  *((_OWORD *)v5 + 11) = 0u;
  *((_QWORD *)v5 + 80) = 0x800000000;
  *((_QWORD *)v5 + 537) = 0x800000000;
  *((_OWORD *)v5 + 269) = 0u;
  *((_OWORD *)v5 + 270) = 0u;
  *((_QWORD *)v5 + 542) = 0;
  v8 = (_OWORD *)((char *)v5 + 4872);
  v9 = -48;
  do
  {
    *(_QWORD *)(a1 + v9 + 4928) = 0;
    v9 += 24;
  }
  while (v9);
  *(_OWORD *)(a1 + 4848) = 0u;
  *(_OWORD *)(a1 + 4832) = 0u;
  *(_OWORD *)(a1 + 4816) = 0u;
  *(_OWORD *)(a1 + 4800) = 0u;
  *(_OWORD *)(a1 + 4784) = 0u;
  *(_OWORD *)(a1 + 4768) = 0u;
  *(_OWORD *)(a1 + 4752) = 0u;
  *(_OWORD *)(a1 + 4736) = 0u;
  *(_OWORD *)(a1 + 4720) = 0u;
  *(_OWORD *)(a1 + 4704) = 0u;
  *(_OWORD *)(a1 + 4688) = 0u;
  *(_OWORD *)(a1 + 4672) = 0u;
  *(_OWORD *)(a1 + 4656) = 0u;
  *(_OWORD *)(a1 + 4640) = 0u;
  *(_OWORD *)(a1 + 4624) = 0u;
  *(_OWORD *)(a1 + 4608) = 0u;
  *(_OWORD *)(a1 + 4592) = 0u;
  *(_OWORD *)(a1 + 4576) = 0u;
  *(_OWORD *)(a1 + 4560) = 0u;
  *(_OWORD *)(a1 + 4544) = 0u;
  *(_OWORD *)(a1 + 4528) = 0u;
  *(_OWORD *)(a1 + 4512) = 0u;
  *(_OWORD *)(a1 + 4496) = 0u;
  *(_OWORD *)(a1 + 4480) = 0u;
  *(_OWORD *)(a1 + 4464) = 0u;
  *(_OWORD *)(a1 + 4448) = 0u;
  *(_OWORD *)(a1 + 4432) = 0u;
  *(_OWORD *)(a1 + 4416) = 0u;
  *(_OWORD *)(a1 + 4400) = 0u;
  *(_OWORD *)(a1 + 4384) = 0u;
  *(_OWORD *)(a1 + 4368) = 0u;
  *(_OWORD *)(a1 + 4352) = 0u;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 4344) = 0;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 4864) = 0;
  *v8 = 0u;
  *(_OWORD *)((char *)v5 + 4888) = 0u;
  *(_OWORD *)((char *)v5 + 4904) = 0u;
  *(_QWORD *)(a1 + 4352) = v8;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 4344) = 1;
  if (*a3)
  {
    (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)*a3 + 16))(v32);
    v10 = (uint64_t *)v32[0];
    v11 = (uint64_t *)v32[1];
    while (v10 != v11)
    {
      (*(void (**)(void ***__return_ptr, _QWORD, uint64_t *))(*(_QWORD *)*a3 + 24))(&v33, *a3, v10);
      sub_20C849E40((uint64_t)&v33, &v30);
      v12 = v34;
      if (v34)
      {
        p_shared_owners = (unint64_t *)&v34->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
        }
      }
      if (v30)
      {
        (*(void (**)(__int128 *__return_ptr, float))(*(_QWORD *)v30 + 32))(&v29, 0.0);
        if ((_QWORD)v29)
        {
          v15 = *(uint64_t **)(a1 + 152);
          if ((unint64_t)v15 >= *(_QWORD *)(a1 + 160))
          {
            v19 = sub_20BFCA068(v6, v10);
          }
          else
          {
            v16 = *v10;
            *v15 = *v10;
            if ((v16 & 7) != 0)
            {
              v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
              do
                v18 = __ldxr(v17);
              while (__stxr(v18 + 2, v17));
              if ((v18 & 1) == 0)
                *v15 &= 0xFFFFFFFFFFFFFFF8;
            }
            v19 = (char *)(v15 + 1);
          }
          *(_QWORD *)(a1 + 152) = v19;
          sub_20BDEA72C(v7, &v29);
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&v33, (const pxrInternal__aapl__pxrReserved__::TfToken *)v10);
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)(a1 + 192), (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&v33);
          v20 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)sub_20C7E0EB0((uint64_t)&v33);
          v21 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet(v20);
          sub_20C84B920(a1 + 648, v21);
        }
        v22 = (std::__shared_weak_count *)*((_QWORD *)&v29 + 1);
        if (*((_QWORD *)&v29 + 1))
        {
          v23 = (unint64_t *)(*((_QWORD *)&v29 + 1) + 8);
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 - 1, v23));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      v25 = v31;
      if (v31)
      {
        v26 = (unint64_t *)&v31->__shared_owners_;
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
      ++v10;
    }
    v33 = (void **)v32;
    sub_20BEEB2B8(&v33);
  }
  return a1;
}

void sub_20C849D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  const void *v14;
  va_list va;

  va_start(va, a9);
  sub_20C84B304((unint64_t *)(v9 + 4344));
  sub_20C84B83C(v10);
  sub_20C84B7B4(v12);
  sub_20C7F1148(v11);
  sub_20BDE9EB0((void ***)va);
  sub_20BEEB2B8((void ***)va);
  sub_20C82F5D4((unsigned int **)v9, v14);
  _Unwind_Resume(a1);
}

void *sub_20C849E40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C5506C8, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::~HdFlatteningSceneIndex(pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *this)
{
  const void *v2;
  void **v3;

  *(_QWORD *)this = off_24C550DC0;
  sub_20C84B304((unint64_t *)this + 543);
  sub_20C84B83C((uint64_t *)this + 538);
  sub_20C84B7B4((uint64_t)this + 648);
  sub_20C7F1148((uint64_t)this + 192);
  v3 = (void **)((char *)this + 168);
  sub_20BDE9EB0(&v3);
  v3 = (void **)((char *)this + 144);
  sub_20BEEB2B8(&v3);
  *(_QWORD *)this = off_24C550568;
  pxrInternal__aapl__pxrReserved__::HdSceneIndexObserver::~HdSceneIndexObserver((unsigned int **)this + 15, v2);
  sub_20C831DE4((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)this + 14);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase(this);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::~HdFlatteningSceneIndex(this);
  operator delete(v1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::GetPrim@<X0>(pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *result;
  _QWORD *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  char v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  std::__shared_weak_count *v33;
  unint64_t *p_shared_owners;
  unint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  const char *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;

  result = sub_20C200D44((_QWORD *)this + 538, (unsigned int *)a2);
  v7 = result;
  if (result && result[2])
  {
    v8 = result[1];
    *a3 = v8;
    if ((v8 & 7) != 0)
    {
      v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 2, v9));
      if ((v10 & 1) == 0)
        *a3 &= 0xFFFFFFFFFFFFFFF8;
    }
    a3[1] = result[2];
    v11 = result[3];
    a3[2] = v11;
    if (v11)
    {
      v12 = (unint64_t *)(v11 + 8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
    }
    return result;
  }
  *(_QWORD *)&v39 = 0;
  BYTE8(v39) = 0;
  v40 = 0;
  v14 = (uint64_t *)((char *)this + 4344);
  if (sub_20C84A384((uint64_t *)this + 543, (uint64_t)&v39, (unsigned int *)a2))
  {
    v15 = v40;
    v16 = *(_QWORD *)(v40 + 24);
    *a3 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stxr(v18 + 2, v17));
      if ((v18 & 1) == 0)
        *a3 &= 0xFFFFFFFFFFFFFFF8;
    }
    a3[1] = *(_QWORD *)(v15 + 32);
    v19 = *(_QWORD *)(v15 + 40);
    a3[2] = v19;
    if (v19)
    {
      v20 = (unint64_t *)(v19 + 8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
    }
    v40 = 0;
    v22 = &v39;
    return sub_20BEBF29C(v22);
  }
  v40 = 0;
  sub_20BEBF29C(&v39);
  v23 = sub_20C82FBFC((uint64_t *)this + 14);
  result = (_QWORD *)(*(uint64_t (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::SdfPath *))(*(_QWORD *)v23 + 16))(v23, a2);
  if (v7 || a3[1])
  {
    sub_20C84A3E8((uint64_t)this, a2, a3 + 1, &v39);
    sub_20BDE82DC((uint64_t)(a3 + 1), &v39);
    v24 = (std::__shared_weak_count *)*((_QWORD *)&v39 + 1);
    if (*((_QWORD *)&v39 + 1))
    {
      v25 = (unint64_t *)(*((_QWORD *)&v39 + 1) + 8);
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
    sub_20C84B65C((uint64_t)&v43, a2, a3);
    sub_20C84B6F0((uint64_t)&v39, (uint64_t)&v43);
    v27 = sub_20C84BAAC(v14, 1, (unsigned int *)&v39, (uint64_t)&v39 + 8, 0, 0, (uint64_t (*)(uint64_t, unsigned int *, uint64_t))sub_20C84C474, 0);
    v28 = (std::__shared_weak_count *)v41;
    if (v41)
    {
      v29 = (unint64_t *)(v41 + 8);
      do
        v30 = __ldaxr(v29);
      while (__stlxr(v30 - 1, v29));
      if (!v30)
      {
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
      }
    }
    if ((BYTE8(v39) & 7) != 0)
    {
      v31 = (unsigned int *)(*((_QWORD *)&v39 + 1) & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v39 + 1);
    sub_20BFD265C(&v39);
    v33 = v46;
    if (v46)
    {
      p_shared_owners = (unint64_t *)&v46->__shared_owners_;
      do
        v35 = __ldaxr(p_shared_owners);
      while (__stlxr(v35 - 1, p_shared_owners));
      if (!v35)
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
      }
    }
    if ((v44 & 7) != 0)
    {
      v36 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
      do
        v37 = __ldxr(v36);
      while (__stlxr(v37 - 2, v36));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    result = sub_20BFD265C(&v43);
    if ((v27 & 1) == 0)
    {
      v43 = 0;
      LOBYTE(v44) = 0;
      v45 = 0;
      if ((sub_20C84A500(v14, (uint64_t)&v43, (unsigned int *)a2) & 1) != 0
        || (*(_QWORD *)&v39 = "hd/flatteningSceneIndex.cpp",
            *((_QWORD *)&v39 + 1) = "GetPrim",
            v40 = 306,
            v41 = "virtual HdSceneIndexPrim pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::GetPrim(const SdfPath &) const",
            v42 = 0,
            (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v39, "_recentPrims.find(accessor, primPath)", 0) & 1) != 0))
      {
        v38 = v45;
        sub_20BF32220(a3, (_QWORD *)(v45 + 24));
        sub_20BDE881C(a3 + 1, (uint64_t *)(v38 + 32));
      }
      v45 = 0;
      v22 = (__int128 *)&v43;
      return sub_20BEBF29C(v22);
    }
  }
  return result;
}

void sub_20C84A304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _QWORD *v17;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v18;
  unsigned int *v20;
  unsigned int v21;

  a17 = 0;
  sub_20BEBF29C(&a15);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v18);
  if ((*v17 & 7) != 0)
  {
    v20 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C84A384(uint64_t *a1, uint64_t a2, unsigned int *a3)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_20BEBF2D0(a2);
    *(_QWORD *)(a2 + 16) = 0;
  }
  return sub_20C84BAAC(a1, 0, a3, 0, a2, 0, (uint64_t (*)(uint64_t, unsigned int *, uint64_t))sub_20C84BDE4, 0);
}

_QWORD *sub_20C84A3E8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  void *v8;

  v8 = operator new(0xB0uLL);
  sub_20C84C284((uint64_t)v8, a1, a2, a3);
  return sub_20C84C39C(a4, (uint64_t)v8);
}

void sub_20C84A444(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C84A458(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 4));
  return sub_20BFD265C((_DWORD *)a1);
}

_DWORD *sub_20C84A4AC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 4));
  return sub_20BFD265C((_DWORD *)a1);
}

uint64_t sub_20C84A500(uint64_t *a1, uint64_t a2, unsigned int *a3)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_20BEBF2D0(a2);
    *(_QWORD *)(a2 + 16) = 0;
  }
  return sub_20C84BAAC(a1, 0, a3, 0, a2, 1, (uint64_t (*)(uint64_t, unsigned int *, uint64_t))sub_20C84BDE4, 0);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::GetChildPrimPaths(pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v3;

  v3 = sub_20C82FBFC((uint64_t *)this + 14);
  return (*(uint64_t (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::SdfPath *))(*(_QWORD *)v3 + 24))(v3, a2);
}

void **pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_PrimsAdded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  _QWORD *v13;
  void *v15[928];
  uint64_t v16;
  uint64_t v17;

  v3 = (pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *)MEMORY[0x24BDAC7A8](a1, a2, a3);
  v5 = v4;
  v6 = (uint64_t *)v3;
  v17 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_ConsolidateRecentPrims(v3);
  v16 = 0x1000000000;
  if (*(_DWORD *)(v5 + 260) >= 0x11u)
    v7 = *(unsigned int **)v5;
  else
    v7 = (unsigned int *)v5;
  v8 = *(unsigned int *)(v5 + 256);
  if ((_DWORD)v8)
  {
    v9 = 16 * v8;
    do
    {
      pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_DirtyHierarchy((uint64_t)v6, v7, v6 + 81, (uint64_t)(v6 + 24), v15);
      v7 += 4;
      v9 -= 16;
    }
    while (v9);
    v10 = *(unsigned int *)(v5 + 256);
    v11 = *(_DWORD *)(v5 + 260) >= 0x11u ? *(unsigned int **)v5 : (unsigned int *)v5;
    if ((_DWORD)v10)
    {
      v12 = 16 * v10;
      do
      {
        v13 = sub_20C200D44(v6 + 538, v11);
        if (v13)
          sub_20C84AA70((pxrInternal__aapl__pxrReserved__ *)(v13 + 2));
        v11 += 4;
        v12 -= 16;
      }
      while (v12);
    }
  }
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsAdded(v6, v5);
  if ((_DWORD)v16)
    pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsDirtied(v6, (uint64_t)v15);
  return sub_20C7F17EC(v15);
}

void sub_20C84A6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C7F17EC(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_ConsolidateRecentPrims(pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *this)
{
  unint64_t *v2;
  unint64_t v3;
  unint64_t *v4;
  BOOL v5;
  char *v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  __int128 *v10;
  unsigned int *v11;
  unsigned int v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  BOOL v18;
  _QWORD v20[3];
  unint64_t *v21;
  uint64_t v22;
  __int128 v23;

  v2 = (unint64_t *)((char *)this + 4344);
  v3 = *((_QWORD *)this + 611);
  v20[0] = (char *)this + 4344;
  v20[1] = 0;
  v20[2] = (char *)this + 4872;
  v21 = (unint64_t *)v3;
  v4 = (unint64_t *)((char *)this + 4344);
  if (v3 <= 0x3F)
  {
    sub_20BED323C((unint64_t)v20);
    v3 = (unint64_t)v21;
    v4 = (unint64_t *)v20[0];
  }
  if (v3)
    v5 = 0;
  else
    v5 = v4 == v2;
  if (!v5)
  {
    v6 = (char *)this + 4304;
    do
    {
      v7 = sub_20C84B18C((uint64_t)v6, (_DWORD *)(v3 + 16));
      v8 = (uint64_t *)(v3 + 24);
      v9 = *(_QWORD *)v7;
      v22 = *(_QWORD *)v7;
      *(_QWORD *)v7 = 0;
      v23 = *(_OWORD *)(v7 + 8);
      *((_QWORD *)v7 + 2) = 0;
      *((_QWORD *)v7 + 1) = 0;
      if ((char *)(v3 + 24) != v7)
      {
        *(_QWORD *)v7 = *v8;
        *v8 = 0;
      }
      v10 = (__int128 *)(v3 + 32);
      sub_20BDE82DC((uint64_t)(v7 + 8), v10);
      if (&v22 != v8)
      {
        if ((*v8 & 7) != 0)
        {
          v11 = (unsigned int *)(*v8 & 0xFFFFFFFFFFFFFFF8);
          do
            v12 = __ldxr(v11);
          while (__stlxr(v12 - 2, v11));
          v9 = v22;
        }
        *v8 = v9;
        v22 = 0;
      }
      sub_20BDE82DC((uint64_t)v10, &v23);
      v13 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
      if (*((_QWORD *)&v23 + 1))
      {
        v14 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      if ((v22 & 7) != 0)
      {
        v16 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stlxr(v17 - 2, v16));
      }
      v3 = *v21;
      v21 = (unint64_t *)v3;
      if (!v3)
      {
        sub_20BED323C((unint64_t)v20);
        v3 = (unint64_t)v21;
      }
      if (v3)
        v18 = 0;
      else
        v18 = v20[0] == (_QWORD)v2;
    }
    while (!v18);
  }
  return sub_20C84B304(v2);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_DirtyHierarchy(uint64_t a1, unsigned int *a2, uint64_t *a3, uint64_t a4, _DWORD *a5)
{
  unint64_t v9;
  _QWORD *result;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  _DWORD *v25;
  _QWORD *v26;
  std::__shared_weak_count *v27;

  v27 = 0;
  v26 = sub_20C200D44((_QWORD *)(a1 + 4304), a2);
  v9 = sub_20C200DAC((uint64_t)&v26);
  result = v26;
LABEL_2:
  v25 = result;
  while (result != (_QWORD *)v9)
  {
    v11 = (std::__shared_weak_count *)result[3];
    v23 = result[2];
    v24 = v11;
    if (v11)
    {
      p_shared_owners = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    sub_20C84B3D0((uint64_t)&v23, &v26);
    v14 = v24;
    if (v24)
    {
      v15 = (unint64_t *)&v24->__shared_owners_;
      do
        v16 = __ldaxr(v15);
      while (__stlxr(v16 - 1, v15));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    if (!v26)
      goto LABEL_22;
    if (pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex_Impl::_PrimLevelWrappingDataSource::PrimDirtied((uint64_t)v26, a3))
    {
      if (*(_QWORD *)v25 != *(_QWORD *)a2)
        sub_20C84B43C(a5, v25, a4);
LABEL_22:
      v20 = v27;
      if (v27)
      {
        v21 = (unint64_t *)&v27->__shared_owners_;
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      result = (_QWORD *)*((_QWORD *)v25 + 5);
      if (!result)
        result = (_QWORD *)sub_20C200DAC((uint64_t)&v25);
      goto LABEL_2;
    }
    v25 = (_DWORD *)sub_20C200DAC((uint64_t)&v25);
    v17 = v27;
    if (v27)
    {
      v18 = (unint64_t *)&v27->__shared_owners_;
      do
        v19 = __ldaxr(v18);
      while (__stlxr(v19 - 1, v18));
      if (!v19)
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    result = v25;
  }
  return result;
}

void sub_20C84AA58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void sub_20C84AA70(pxrInternal__aapl__pxrReserved__ *a1)
{
  std::__shared_weak_count *v1;
  unint64_t *v2;
  unint64_t v3;
  __int128 v4;

  v4 = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *((_QWORD *)a1 + 1) = 0;
  if ((pxrInternal__aapl__pxrReserved__::Work_ShouldSynchronizeAsyncDestroyCalls(a1) & 1) == 0)
    sub_20C84C570((pxrInternal__aapl__pxrReserved__ *)&v4);
  v1 = (std::__shared_weak_count *)*((_QWORD *)&v4 + 1);
  if (*((_QWORD *)&v4 + 1))
  {
    v2 = (unint64_t *)(*((_QWORD *)&v4 + 1) + 8);
    do
      v3 = __ldaxr(v2);
    while (__stlxr(v3 - 1, v2));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20C84AAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_PrimsRemoved(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_ConsolidateRecentPrims((pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *)a1);
  v5 = *(unsigned int *)(a3 + 128);
  if (*(_DWORD *)(a3 + 132) >= 0x11u)
    v6 = *(unsigned int **)a3;
  else
    v6 = (unsigned int *)a3;
  if ((_DWORD)v5)
  {
    v7 = &v6[2 * v5];
    do
    {
      if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v6))
      {
        pxrInternal__aapl__pxrReserved__::Sdf_VisitPathTableInParallel(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 4304), (uint64_t)(*(_QWORD *)(a1 + 4312) - *(_QWORD *)(a1 + 4304)) >> 3, (uint64_t)&v13, (void (*)(uint64_t))sub_20C84C808);
        v13 = *(_OWORD *)(a1 + 4304);
        *(_OWORD *)(a1 + 4304) = 0u;
        v8 = *(_QWORD *)(a1 + 4320);
        *(_QWORD *)(a1 + 4320) = 0;
        v14 = v8;
        v15 = 0;
        v16 = *(_QWORD *)(a1 + 4336);
        *(_OWORD *)(a1 + 4328) = 0u;
        sub_20C84B83C((uint64_t *)&v13);
      }
      else
      {
        *((_QWORD *)&v13 + 1) = 0;
        *(_QWORD *)&v13 = sub_20C200D44((_QWORD *)(a1 + 4304), v6);
        v9 = sub_20C200DAC((uint64_t)&v13);
        v10 = v13;
        *((_QWORD *)&v13 + 1) = v9;
        v12 = v13;
        if (v9 != (_QWORD)v13)
        {
          do
          {
            sub_20C84AA70((pxrInternal__aapl__pxrReserved__ *)(v10 + 16));
            v10 = *(_QWORD *)(v12 + 40);
            if (!v10)
              v10 = sub_20C200DAC((uint64_t)&v12);
            v12 = v10;
          }
          while (*((_QWORD *)&v13 + 1) != v10);
          if ((_QWORD)v13 != v10)
            sub_20C84AC58((pxrInternal__aapl__pxrReserved__::SdfPath *)(a1 + 4304), (uint64_t *)&v13);
        }
      }
      v6 += 2;
    }
    while (v6 != v7);
  }
  return pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsRemoved((uint64_t *)a1, a3);
}

void sub_20C84AC58(pxrInternal__aapl__pxrReserved__::SdfPath *a1, uint64_t *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;

  v3 = (pxrInternal__aapl__pxrReserved__::SdfPath *)*a2;
  sub_20C84C884(a1, *a2);
  sub_20C84C8C4(a1, v3);
  sub_20C84C95C(a1, (unsigned int *)v3);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_PrimDirtied(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int *v4;
  _DWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v11;
  uint64_t *v12;
  _BOOL8 v13;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *v14;
  uint64_t v15;
  uint64_t v16;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator **v17;
  uint64_t v18;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v19;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v20;
  unsigned int ***v21;
  uint64_t v22;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *IsEmpty;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *v24;
  _QWORD *v25;
  pxrInternal__aapl__pxrReserved__ *v26;
  uint64_t v27;
  _DWORD *v29;
  unsigned int *v30;
  _BYTE v31[56];
  __int128 v32;
  uint64_t v33;
  _DWORD v34[14];
  __int128 v35;
  uint64_t v36;
  _DWORD v37[14];
  __int128 v38;
  uint64_t v39;
  _BYTE v40[72];
  uint64_t v41;
  _BYTE v42[56];
  _BYTE v43[56];
  _BYTE v44[448];
  uint64_t v45;
  uint64_t v46[456];
  unsigned int v47;
  uint64_t v48;

  v3 = MEMORY[0x24BDAC7A8](a1, a2, a3);
  v29 = v5;
  v30 = v4;
  v6 = (_QWORD *)v3;
  v48 = *MEMORY[0x24BDAC8D0];
  v7 = (_QWORD *)(v3 + 152);
  v8 = (uint64_t *)(v3 + 144);
  sub_20C84CA90((char *)v46, (*(_QWORD *)(v3 + 152) - *(_QWORD *)(v3 + 144)) >> 3);
  v45 = 0x800000000;
  v9 = *v8;
  if (*v7 != *v8)
  {
    v10 = 0;
    v11 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)(v30 + 2);
    do
    {
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v9 + 8 * v10));
      if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersects(v11, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43))
      {
        if (v47 >= 9)
          v12 = (uint64_t *)v46[0];
        else
          v12 = v46;
        v13 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Contains(v11, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43);
        v14 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)&v12[57 * v10];
        if (v13)
        {
          v15 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::UniversalSet((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)v13);
          if (v14 != (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)v15)
          {
            if (*(_DWORD *)(v15 + 452) >= 9u)
              v16 = *(_QWORD *)v15;
            else
              v16 = v15;
            sub_20C82877C((uint64_t)v14, v16, v16 + 56 * *(unsigned int *)(v15 + 448));
          }
        }
        else
        {
          pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersection(v11, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43, (uint64_t)&v38);
          v35 = v38;
          v36 = v39;
          sub_20C7F1078(v37, (uint64_t)v40);
          v32 = *(_OWORD *)&v40[56];
          v33 = v41;
          sub_20C7F1078(v34, (uint64_t)v42);
          while (*((_QWORD *)&v35 + 1) != *((_QWORD *)&v32 + 1))
          {
            v17 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IntersectionIterator::operator*((uint64_t)&v35);
            pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::RemoveFirstElement((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v17, (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v31);
            pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert(v14, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v31);
            sub_20C7E0EB0((uint64_t)v31);
            pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IntersectionIterator::operator++((uint64_t)&v35);
          }
          sub_20C7E0EB0((uint64_t)v34);
          sub_20C7E0EB0((uint64_t)v37);
          sub_20C7E0EB0((uint64_t)v42);
          sub_20C7E0EB0((uint64_t)v40);
          v18 = *(_QWORD *)(v6[21] + 16 * v10);
          v19 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)(*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *))(*(_QWORD *)v18 + 8))(v18, v14);
          v20 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(v19);
          if (!pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Contains(v14, v20))
          {
            v21 = (unsigned int ***)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::begin(v14);
            v22 = pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::end(v14);
            while (v21 != (unsigned int ***)v22)
            {
              pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43, v21, &v38);
              pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)v44, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&v38);
              sub_20C7E0EB0((uint64_t)&v38);
              v21 += 7;
            }
            goto LABEL_19;
          }
        }
        pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::insert((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)v44, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)v43);
      }
LABEL_19:
      sub_20C7E0EB0((uint64_t)v43);
      ++v10;
      v9 = v6[18];
    }
    while (v10 < (v6[19] - v9) >> 3);
  }
  IsEmpty = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::IsEmpty((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)v44);
  if ((IsEmpty & 1) == 0)
    IsEmpty = (pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_DirtyHierarchy((uint64_t)v6, v30, v46, (uint64_t)v44, v29);
  v24 = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::EmptyLocator(IsEmpty);
  if (pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Contains((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)(v30 + 2), v24))
  {
    v25 = sub_20C200D44(v6 + 538, v30);
    if (v25)
    {
      v27 = v25[2];
      v26 = (pxrInternal__aapl__pxrReserved__ *)(v25 + 2);
      if (v27)
        sub_20C84AA70(v26);
    }
  }
  sub_20C7F1148((uint64_t)v44);
  return sub_20C84B7B4((uint64_t)v46);
}

void sub_20C84AFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  sub_20C7F1148((uint64_t)&a66);
  sub_20C84B7B4((uint64_t)&STACK[0x390]);
  _Unwind_Resume(a1);
}

void **pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_PrimsDirtied(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  void *v11[928];
  uint64_t v12;
  uint64_t v13;

  v3 = (pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex *)MEMORY[0x24BDAC7A8](a1, a2, a3);
  v5 = v4;
  v6 = (uint64_t *)v3;
  v13 = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_ConsolidateRecentPrims(v3);
  v12 = 0x1000000000;
  if (*(_DWORD *)(v5 + 7428) >= 0x11u)
    v7 = *(_QWORD *)v5;
  else
    v7 = v5;
  v8 = *(_DWORD *)(v5 + 7424);
  if (v8)
  {
    v9 = 464 * v8;
    do
    {
      pxrInternal__aapl__pxrReserved__::HdFlatteningSceneIndex::_PrimDirtied((uint64_t)v6, v7, (uint64_t)v11);
      v7 += 464;
      v9 -= 464;
    }
    while (v9);
  }
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsDirtied(v6, v5);
  if ((_DWORD)v12)
    pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::_SendPrimsDirtied(v6, (uint64_t)v11);
  return sub_20C7F17EC(v11);
}

void sub_20C84B174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_20C7F17EC(&a9);
  _Unwind_Resume(a1);
}

char *sub_20C84B18C(uint64_t a1, _DWORD *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  sub_20BFD6E54(&v11, a2);
  sub_20BFD6EA4(&v12, a2 + 1);
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v4 = sub_20C84CB0C(a1, &v11);
  v5 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if ((v13 & 7) != 0)
  {
    v8 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  return (char *)v4 + 8;
}

void sub_20C84B2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v5;
  unsigned int *v7;
  unsigned int v8;
  va_list va;

  va_start(va, a5);
  sub_20C84A4AC((uint64_t)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v5);
  if ((a3 & 7) != 0)
  {
    v7 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C84B304(unint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t result;

  v2 = *a1;
  __dmb(0xBu);
  __dmb(0xBu);
  a1[65] = 0;
  v3 = sub_20BEB4B94(v2);
  do
  {
    v4 = 0;
    v5 = v3;
    v6 = a1[v3 + 1];
    if (v3-- > 1)
      v8 = v5;
    else
      v8 = 1;
    do
    {
      v9 = v6 + 24 * v4;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = (_QWORD *)(v9 + 16);
      v10 = (_QWORD *)v12;
      if (v12 >= 0x40)
      {
        do
        {
          *v11 = *v10;
          sub_20C84BF80((uint64_t)a1, (uint64_t)v10);
          v10 = (_QWORD *)*v11;
        }
        while (*v11 > 0x3FuLL);
      }
      ++v4;
    }
    while (!(v4 >> v8));
    result = sub_20C84D0F4((uint64_t)a1, v5);
  }
  while (v5);
  __dmb(0xBu);
  *a1 = 1;
  return result;
}

void *sub_20C84B3D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

_DWORD *sub_20C84B43C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  _DWORD *v8;

  v6 = a1[1856];
  v7 = a1[1857];
  if (v6 == v7)
  {
    sub_20C832EFC(a1, v6 + (v6 >> 1) + 1);
    v7 = a1[1857];
  }
  v8 = a1;
  if (v7 >= 0x11)
    v8 = *(_DWORD **)a1;
  return sub_20C7F0F04(&v8[116 * a1[1856]++], a2, a3);
}

void sub_20C84B4C0(_DWORD *a1)
{
  _DWORD *v2;

  *(_QWORD *)a1 = off_24C550E20;
  v2 = a1 + 5;
  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 10));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 6));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
}

void sub_20C84B514(_DWORD *a1)
{
  _DWORD *v2;
  void *v3;

  *(_QWORD *)a1 = off_24C550E20;
  v2 = a1 + 5;
  sub_20C809138((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 10));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 6));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(a1 + 4);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase((pxrInternal__aapl__pxrReserved__::HdDataSourceBase *)a1);
  operator delete(v3);
}

BOOL sub_20C84B56C(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  std::__sp_mut *sp_mut;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  sp_mut = std::__get_sp_mut(a1);
  std::__sp_mut::lock(sp_mut);
  v7 = (std::__shared_weak_count *)a1[1];
  v8 = (std::__shared_weak_count *)a2[1];
  if (v7 == v8)
  {
    *a1 = 0;
    a1[1] = 0;
    sub_20BDE881C(a1, a3);
    v9 = v7;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    sub_20BDE881C(a2, a1);
    v9 = v8;
  }
  std::__sp_mut::unlock(sp_mut);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  return v7 == v8;
}

void sub_20C84B648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84B65C(uint64_t a1, _DWORD *a2, uint64_t *a3)
{
  _DWORD *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  v6 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  v7 = *a3;
  *(_QWORD *)(a1 + 8) = *a3;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *(_QWORD *)(a1 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  v10 = a3[2];
  *(_QWORD *)(a1 + 16) = a3[1];
  *(_QWORD *)(a1 + 24) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return a1;
}

uint64_t sub_20C84B6F0(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD38A4((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD38DC(v4 + 1, (_DWORD *)(a2 + 4));
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  return a1;
}

uint64_t sub_20C84B73C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a2 != a3)
  {
    v5 = a2;
    do
    {
      sub_20BF348DC(a1, v5, v5);
      ++v5;
    }
    while (v5 != a3);
  }
  return a1;
}

void sub_20C84B7A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF20BCC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84B7B4(uint64_t a1)
{
  sub_20C84B7F0(a1);
  if (*(_DWORD *)(a1 + 3652) >= 9u)
    free(*(void **)a1);
  return a1;
}

uint64_t sub_20C84B7F0(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  v1 = result;
  if (*(_DWORD *)(result + 3652) >= 9u)
    result = *(_QWORD *)result;
  v2 = *(_DWORD *)(v1 + 3648);
  if (v2)
  {
    v3 = 456 * v2;
    do
    {
      result = sub_20C7F1148(result) + 456;
      v3 -= 456;
    }
    while (v3);
  }
  return result;
}

uint64_t *sub_20C84B83C(uint64_t *a1)
{
  void *v2;

  sub_20C84B870(a1);
  v2 = (void *)*a1;
  if (*a1)
  {
    a1[1] = (uint64_t)v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20C84B870(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  _DWORD *v11;

  v2 = a1[1] - *a1;
  if (v2)
  {
    v3 = 0;
    v4 = v2 >> 3;
    do
    {
      v5 = *a1;
      v6 = *(_QWORD *)(*a1 + 8 * v3);
      if (v6)
      {
        do
        {
          v7 = *(_QWORD *)(v6 + 32);
          pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v6 + 16));
          v8 = *(_QWORD *)(v6 + 8);
          if ((v8 & 7) != 0)
          {
            v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
            do
              v10 = __ldxr(v9);
            while (__stlxr(v10 - 2, v9));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v6 + 4));
          v11 = sub_20BFD265C((_DWORD *)v6);
          operator delete(v11);
          v6 = v7;
        }
        while (v7);
        v5 = *a1;
      }
      *(_QWORD *)(v5 + 8 * v3++) = 0;
    }
    while (v3 != v4);
  }
  a1[3] = 0;
}

_DWORD *sub_20C84B920(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  _DWORD *result;

  v4 = *(_DWORD *)(a1 + 3648);
  v5 = *(_DWORD *)(a1 + 3652);
  if (v4 == v5)
  {
    sub_20C84B994(a1, v4 + (v4 >> 1) + 1);
    v5 = *(_DWORD *)(a1 + 3652);
  }
  v6 = a1;
  if (v5 >= 9)
    v6 = *(_QWORD *)a1;
  result = sub_20C7F0F64((_DWORD *)(v6 + 456 * *(unsigned int *)(a1 + 3648)), a2);
  ++*(_DWORD *)(a1 + 3648);
  return result;
}

void sub_20C84B994(uint64_t a1, unsigned int a2)
{
  void *v4;
  void *v5;

  v4 = malloc(456 * a2);
  v5 = (void *)a1;
  if (*(_DWORD *)(a1 + 3652) >= 9u)
    v5 = *(void **)a1;
  sub_20C84BA18((uint64_t)v5, (uint64_t)v5 + 456 * *(unsigned int *)(a1 + 3648), (uint64_t)v4);
  sub_20C84B7F0(a1);
  if (*(_DWORD *)(a1 + 3652) >= 9u)
    free(*(void **)a1);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 3652) = a2;
}

uint64_t sub_20C84BA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    v6 = 0;
    do
    {
      sub_20C833060(a3 + v6, a1 + v6);
      v6 += 456;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

void sub_20C84BA74(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  __cxa_begin_catch(a1);
  for (; v2; v2 -= 456)
  {
    sub_20C7F1148(v1);
    v1 += 456;
  }
  __cxa_rethrow();
}

void sub_20C84BA98(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_20C84BAAC(uint64_t *a1, int a2, unsigned int *a3, uint64_t a4, uint64_t a5, int a6, uint64_t (*a7)(uint64_t, unsigned int *, uint64_t), _QWORD *a8)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v32;
  unint64_t v33;
  tbb::spin_rw_mutex_v3 *v35;
  char v36;
  uint64_t v37;

  v33 = 0;
  v13 = bswap64(0x9E3779B97F4A7C55* (a3[1]+ ((a3[1] + (unint64_t)*a3 + (a3[1] + (unint64_t)*a3) * (a3[1] + (unint64_t)*a3)) >> 1)));
  v14 = *a1;
  __dmb(0xBu);
  v32 = (uint64_t)(a1 + 72);
  while (1)
  {
    sub_20C84BFB0((uint64_t)&v35, (uint64_t)a1, v14 & v13, 0);
    v15 = (_QWORD *)(v37 + 16);
    do
      v15 = (_QWORD *)*v15;
    while ((unint64_t)v15 >= 0x40 && *(_QWORD *)a3 != v15[2]);
    if (a2)
      break;
    if (v15)
    {
      v16 = 1;
LABEL_10:
      v17 = (uint64_t)a8;
      if (!a5)
        goto LABEL_51;
      goto LABEL_11;
    }
    v26 = *a1;
    __dmb(0xBu);
    if (v14 == v26 || !sub_20BECF7E4((uint64_t)a1, v13, v14, v26))
    {
      sub_20BEBF29C(&v35);
      return 0;
    }
LABEL_34:
    sub_20BEBF29C(&v35);
    v14 = v26;
  }
  if (v15)
  {
LABEL_7:
    v16 = 0;
    goto LABEL_10;
  }
  if (!a8)
    a8 = (_QWORD *)a7(v32, a3, a4);
  if (!v36)
  {
    v36 = 1;
    if ((tbb::spin_rw_mutex_v3::internal_upgrade(v35) & 1) == 0)
    {
      v15 = (_QWORD *)(v37 + 16);
      while (1)
      {
        v15 = (_QWORD *)*v15;
        if ((unint64_t)v15 < 0x40)
          break;
        if (*(_QWORD *)a3 == v15[2])
        {
          if (!v36)
            goto LABEL_7;
          v27 = (unint64_t *)v35;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 + 3, v27));
          v16 = 0;
          v36 = 0;
          goto LABEL_10;
        }
      }
    }
  }
  v26 = *a1;
  __dmb(0xBu);
  if (v14 != v26)
  {
    if (!sub_20BECF7E4((uint64_t)a1, v13, v14, v26))
      goto LABEL_36;
    goto LABEL_34;
  }
  v26 = v14;
LABEL_36:
  v33 = sub_20BECF26C((uint64_t)a1, v37, a8, v26);
  v17 = 0;
  v16 = 1;
  v15 = a8;
  if (!a5)
  {
LABEL_51:
    sub_20BEBF29C(&v35);
    goto LABEL_46;
  }
LABEL_11:
  if ((sub_20BECF35C(a5, (tbb::spin_rw_mutex_v3 *)(v15 + 1), a6) & 1) == 0)
  {
    sched_yield();
    v18 = 2;
    while ((sub_20BECF35C(a5, (tbb::spin_rw_mutex_v3 *)(v15 + 1), a6) & 1) == 0)
    {
      sched_yield();
      v19 = v18 < 16;
      v18 *= 2;
      if (!v19)
      {
        v20 = (unint64_t *)v35;
        v35 = 0;
        if (v36)
        {
          while (1)
          {
            v21 = *v20;
            v22 = *v20 & 0xFFFFFFFFFFFFFFFCLL;
            do
            {
              while (1)
              {
                v23 = __ldaxr(v20);
                if (v23 != v21)
                  break;
                if (!__stlxr(v22, v20))
                  goto LABEL_25;
              }
              __clrex();
              do
                v24 = __ldxr(v20);
              while (__stxr(v24, v20));
            }
            while (v24 == v21);
            sched_yield();
          }
        }
        do
          v25 = __ldaxr(v20);
        while (__stlxr(v25 - 4, v20));
LABEL_25:
        sched_yield();
        v26 = *a1;
        __dmb(0xBu);
        a8 = (_QWORD *)v17;
        goto LABEL_34;
      }
    }
  }
  sub_20BEBF29C(&v35);
  *(_QWORD *)(a5 + 16) = v15;
  *(_QWORD *)(a5 + 24) = v13;
LABEL_46:
  if (v33)
    sub_20C84BDEC(a1, v33, v32, 0);
  if (v17)
    sub_20C84BF80((uint64_t)a1, v17);
  return v16;
}

void sub_20C84BDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84BDE4()
{
  return 0;
}

void sub_20C84BDEC(uint64_t *a1, unint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  int64x2_t v17;
  char *v18;
  uint64x2_t v19;
  uint64x2_t v20;
  int8x16_t v21;
  int64x2_t v22;
  uint64x2_t v23;
  int8x16_t v24;

  if (a2 < 8)
  {
    v9 = (char *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x17D0);
    v10 = v9;
    if ((a4 & 1) != 0)
    {
      bzero(v9, 0x17D0uLL);
    }
    else
    {
      v14 = -6096;
      do
      {
        v15 = &v9[v14];
        *((_QWORD *)v15 + 763) = 0;
        *((_QWORD *)v15 + 764) = 3;
        v14 += 24;
      }
      while (v14);
    }
    v16 = 0;
    v17 = (int64x2_t)xmmword_20CA59F60;
    v18 = v10 - 48;
    v19 = (uint64x2_t)vdupq_n_s64(7uLL);
    v20 = (uint64x2_t)vdupq_n_s64(1uLL);
    v21 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFEuLL);
    v22 = vdupq_n_s64(2uLL);
    v13 = 255;
    do
    {
      v23 = (uint64x2_t)vorrq_s8((int8x16_t)vdupq_n_s64(v16), (int8x16_t)xmmword_20CA59F70);
      v24 = vandq_s8((int8x16_t)vshlq_u64(v20, (uint64x2_t)v17), v21);
      if ((vmovn_s64((int64x2_t)vcgtq_u64(v19, v23)).u8[0] & 1) != 0)
        a1[v16 + 2] = (uint64_t)&v18[24 * v24.i64[0]];
      if ((vmovn_s64((int64x2_t)vcgtq_u64((uint64x2_t)vdupq_n_s64(7uLL), v23)).i32[1] & 1) != 0)
        a1[v16 + 3] = (uint64_t)&v18[24 * v24.i64[1]];
      v16 += 2;
      v17 = vaddq_s64(v17, v22);
    }
    while (v16 != 8);
  }
  else
  {
    v7 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)(24 << a2));
    v8 = v7;
    if ((a4 & 1) != 0)
    {
      bzero(v7, 24 << a2);
    }
    else
    {
      v11 = 1 << a2;
      v12 = v7 + 2;
      do
      {
        *(v12 - 1) = 0;
        *v12 = 3;
        v12 += 3;
        --v11;
      }
      while (v11);
    }
    a1[a2 + 1] = (uint64_t)v8;
    v13 = (2 << a2) - 1;
  }
  __dmb(0xBu);
  *a1 = v13;
}

void sub_20C84BF70(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8 * v2 + 8) = 0;
  _Unwind_Resume(a1);
}

uint64_t sub_20C84BF80(uint64_t a1, uint64_t a2)
{
  void *v3;

  sub_20C84C230(a2 + 16);
  return tbb::internal::deallocate_via_handler_v3(a2, v3);
}

uint64_t sub_20C84BFB0(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  unint64_t v8;
  uint64_t v9;
  tbb::spin_rw_mutex_v3 *v10;
  uint64_t v11;
  tbb::spin_rw_mutex_v3 *v12;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  v8 = sub_20BECF614(a2, a3);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(v8 + 16);
  __dmb(0xBu);
  if (v9 == 3
    && (v10 = (tbb::spin_rw_mutex_v3 *)(*(_QWORD *)(a1 + 16) + 8),
        *(_BYTE *)(a1 + 8) = 1,
        tbb::spin_rw_mutex_v3::internal_try_acquire_writer(v10)))
  {
    *(_QWORD *)a1 = v10;
    v11 = *(_QWORD *)(a1 + 16);
    if (*(_QWORD *)(v11 + 16) == 3)
      sub_20C84C088(a2, v11, a3);
  }
  else
  {
    v12 = (tbb::spin_rw_mutex_v3 *)(*(_QWORD *)(a1 + 16) + 8);
    *(_BYTE *)(a1 + 8) = a4;
    *(_QWORD *)a1 = v12;
    if (a4)
      tbb::spin_rw_mutex_v3::internal_acquire_writer(v12);
    else
      tbb::spin_rw_mutex_v3::internal_acquire_reader((unint64_t *)v12);
  }
  return a1;
}

void sub_20C84C074(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20BEBF29C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84C088(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  char v6;
  BOOL v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  tbb::spin_rw_mutex_v3 *v15;
  char v16;
  uint64_t v17;

  __dmb(0xBu);
  *(_QWORD *)(a2 + 16) = 0;
  if (a3)
  {
    v5 = HIDWORD(a3);
    if (!HIDWORD(a3))
      v5 = a3;
    v6 = 32 * (HIDWORD(a3) != 0);
    if (v5 >= 0x10000)
    {
      v5 >>= 16;
      v6 = (32 * (HIDWORD(a3) != 0)) | 0x10;
    }
    if (v5 >= 0x100)
    {
      v5 >>= 8;
      v6 |= 8u;
    }
    if (v5 >= 0x10)
    {
      v5 >>= 4;
      v6 |= 4u;
    }
    v7 = v5 >= 4;
    if (v5 >= 4)
      LODWORD(v5) = v5 >> 2;
    v8 = (v5 >> 1) & 1;
    if (v7)
      v6 += 2;
    v9 = v8 + v6;
  }
  else
  {
    v9 = -1;
  }
  v10 = ~(-1 << v9);
  sub_20C84BFB0(&v15, a1, v10 & a3, 0);
  v11 = (unint64_t *)(v17 + 16);
  v12 = *(_QWORD *)(v17 + 16);
  __dmb(0xBu);
  if (v12 >= 0x40)
  {
    v13 = (2 * v10) | 1;
    while ((bswap64(0x9E3779B97F4A7C55* (*(unsigned int *)(v12 + 20)+ ((*(unsigned int *)(v12 + 20)+ (unint64_t)*(unsigned int *)(v12 + 16)+ (*(unsigned int *)(v12 + 20) + (unint64_t)*(unsigned int *)(v12 + 16))* (*(unsigned int *)(v12 + 20) + (unint64_t)*(unsigned int *)(v12 + 16))) >> 1))) & v13) == a3)
    {
      if (v16 || (v16 = 1, (tbb::spin_rw_mutex_v3::internal_upgrade(v15) & 1) != 0))
      {
        *v11 = *(_QWORD *)v12;
        *(_QWORD *)v12 = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a2 + 16) = v12;
LABEL_24:
        v12 = *v11;
        if (*v11 <= 0x3F)
          return sub_20BEBF29C(&v15);
      }
      else
      {
        v11 = (unint64_t *)(v17 + 16);
        v12 = *(_QWORD *)(v17 + 16);
        __dmb(0xBu);
        if (v12 < 0x40)
          return sub_20BEBF29C(&v15);
      }
    }
    v11 = (unint64_t *)v12;
    goto LABEL_24;
  }
  return sub_20BEBF29C(&v15);
}

void sub_20C84C21C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C84C230(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 4));
  return sub_20BFD265C((_DWORD *)a1);
}

uint64_t sub_20C84C284(uint64_t a1, uint64_t a2, _DWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  *(_QWORD *)a1 = off_24C550E20;
  *(_QWORD *)(a1 + 8) = a2;
  sub_20BFD6E54((_DWORD *)(a1 + 16), a3);
  sub_20BFD6EA4((_DWORD *)(a1 + 20), a3 + 1);
  v7 = a4[1];
  *(_QWORD *)(a1 + 24) = *a4;
  *(_QWORD *)(a1 + 32) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_20C84C33C((_DWORD *)(a1 + 40), (*(_QWORD *)(*(_QWORD *)(a1 + 8) + 152) - *(_QWORD *)(*(_QWORD *)(a1 + 8) + 144)) >> 3);
  return a1;
}

void sub_20C84C318(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;
  _DWORD *v2;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v3;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v3);
  sub_20BFD1A18(v2);
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C84C33C(_DWORD *a1, unsigned int a2)
{
  _DWORD *v3;

  v3 = a1;
  a1[33] = 8;
  if (a2 >= 9)
  {
    a1 = malloc(16 * a2);
    *(_QWORD *)v3 = a1;
    v3[32] = a2;
    v3[33] = a2;
LABEL_4:
    bzero(a1, 16 * a2);
    return v3;
  }
  a1[32] = a2;
  if (a2)
    goto LABEL_4;
  return v3;
}

_QWORD *sub_20C84C39C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C550E80;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C84C3E4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C84C408(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C84C41C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C84C434(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C550ED0))
    return a1 + 24;
  else
    return 0;
}

_OWORD *sub_20C84C478(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  _OWORD *v6;
  void *v7;
  uint64_t v9[2];

  v6 = (_OWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x30);
  v9[1] = a1;
  v6[2] = 0u;
  *v6 = 0u;
  v6[1] = 0u;
  sub_20C84C4E8((uint64_t)(v6 + 1), a2, a3);
  v9[0] = 0;
  sub_20C84C540(v9, v7);
  return v6;
}

uint64_t sub_20C84C4E8(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v6;

  v6 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)a3;
  *(_QWORD *)a3 = 0;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  return a1;
}

uint64_t *sub_20C84C540(uint64_t *a1, void *a2)
{
  uint64_t v3;

  v3 = *a1;
  if (v3)
    tbb::internal::deallocate_via_handler_v3(v3, a2);
  return a1;
}

void sub_20C84C570(pxrInternal__aapl__pxrReserved__ *a1)
{
  _BOOL8 HasConcurrency;
  uint64_t DetachedDispatcher;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__ *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  _QWORD v10[2];

  v9 = *(_OWORD *)a1;
  *(_QWORD *)a1 = 0;
  *((_QWORD *)a1 + 1) = 0;
  HasConcurrency = pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(a1);
  if (HasConcurrency)
  {
    DetachedDispatcher = pxrInternal__aapl__pxrReserved__::Work_GetDetachedDispatcher((pxrInternal__aapl__pxrReserved__ *)HasConcurrency);
    v3 = *(_QWORD *)(DetachedDispatcher + 256);
    v10[0] = 0;
    v10[1] = v3;
    v4 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v10, 0x20uLL);
    *((_BYTE *)v4 - 11) = 1;
    *v4 = &unk_24C550EF8;
    v4[1] = v9;
    v5 = *((_QWORD *)&v9 + 1);
    v9 = 0uLL;
    v4[2] = v5;
    v4[3] = DetachedDispatcher + 264;
    v6 = (pxrInternal__aapl__pxrReserved__ *)(**(uint64_t (***)(_QWORD, _QWORD *, uint64_t))*(v4 - 5))(*(v4 - 5), v4, (uint64_t)(v4 - 1));
    pxrInternal__aapl__pxrReserved__::Work_EnsureDetachedTaskProgress(v6);
  }
  else
  {
    sub_20C84C664();
  }
  if (*((_QWORD *)&v9 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v9 + 1) + 8);
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      (*(void (**)(_QWORD))(**((_QWORD **)&v9 + 1) + 16))(*((_QWORD *)&v9 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v9 + 1));
    }
  }
}

void sub_20C84C650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void sub_20C84C664()
{
  unint64_t *Instance;
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  char v4;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v3);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v1 = sub_20BEC5244(&v3, 0);
  v4 = 0;
  v2 = (_QWORD *)sub_20BEB5B80(Instance + 19, &v4);
  if (v2 != v1)
    pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(Instance, v1, v2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v3);
}

void sub_20C84C6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84C700(_QWORD *a1)
{
  *a1 = &unk_24C550EF8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 1));
  return a1;
}

void sub_20C84C734(_QWORD *a1)
{
  *a1 = &unk_24C550EF8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 1));
  operator delete(a1);
}

uint64_t sub_20C84C768(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C84C664();
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 24));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C84C7F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void sub_20C84C808(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  _DWORD *v8;

  v3 = *a2;
  if (*a2)
  {
    do
    {
      v4 = *(_QWORD *)(v3 + 32);
      pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v3 + 16));
      v5 = *(_QWORD *)(v3 + 8);
      if ((v5 & 7) != 0)
      {
        v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
        do
          v7 = __ldxr(v6);
        while (__stlxr(v7 - 2, v6));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v3 + 4));
      v8 = sub_20BFD265C((_DWORD *)v3);
      operator delete(v8);
      v3 = v4;
    }
    while (v4);
  }
  *a2 = 0;
}

void sub_20C84C884(_QWORD *a1, uint64_t a2)
{
  unsigned int *v2;

  v2 = *(unsigned int **)(a2 + 40);
  if (v2)
  {
    sub_20C84CA1C(a1, *(_QWORD *)(a2 + 40));
    sub_20C84C95C(a1, v2);
  }
}

_QWORD *sub_20C84C8C4(pxrInternal__aapl__pxrReserved__::SdfPath *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  _QWORD *result;
  _QWORD *v5;
  unsigned int v6;
  int v7;

  result = (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(a1);
  if (*(_QWORD *)a2 != *result)
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a2, &v6);
    v5 = sub_20C200D44(a1, &v6);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
    sub_20BFD265C(&v6);
    return (_QWORD *)sub_20C200FE8((uint64_t)v5, (uint64_t)a2);
  }
  return result;
}

void sub_20C84C948(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void sub_20C84C95C(_QWORD *a1, unsigned int *a2)
{
  _DWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned int *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  _DWORD *v10;

  v3 = a2 + 1;
  v4 = (_QWORD *)(*a1
                + 8
                * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2)* (a2[1] + (unint64_t)*a2)) >> 1))) & a1[4]));
  do
  {
    v5 = v4;
    v6 = (unsigned int *)*v4;
    v4 = (_QWORD *)(*v4 + 32);
  }
  while (v6 != a2);
  --a1[3];
  *v5 = *((_QWORD *)a2 + 4);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a2 + 4));
  v7 = *((_QWORD *)a2 + 1);
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
  v10 = sub_20BFD265C(a2);
  operator delete(v10);
}

void sub_20C84CA1C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;

  ((void (*)(void))sub_20C84C884)();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((v4 & 7) != 0 && v5 != 0)
  {
    do
    {
      v7 = *(_QWORD *)(v5 + 48);
      if ((v7 & 7) != 0)
        v8 = v7 & 0xFFFFFFFFFFFFFFF8;
      else
        v8 = 0;
      sub_20C84C884(a1, v5);
      sub_20C84C95C(a1, (unsigned int *)v5);
      v5 = v8;
    }
    while (v8);
  }
}

char *sub_20C84CA90(char *a1, unsigned int a2)
{
  char *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = a1;
  *((_DWORD *)a1 + 913) = 8;
  if (a2 < 9)
  {
    *((_DWORD *)a1 + 912) = a2;
    if (!a2)
      return v3;
  }
  else
  {
    a1 = (char *)malloc(456 * a2);
    *(_QWORD *)v3 = a1;
    *((_DWORD *)v3 + 913) = a2;
    *((_DWORD *)v3 + 912) = a2;
  }
  v4 = a2;
  v5 = a1 + 448;
  do
  {
    *v5 = 0x800000000;
    v5 += 57;
    --v4;
  }
  while (v4);
  return v3;
}

pxrInternal__aapl__pxrReserved__::SdfPath *sub_20C84CB0C(uint64_t a1, unsigned int *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *result;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  pxrInternal__aapl__pxrReserved__::SdfPath *v5[2];
  unsigned int *v6;

  v6 = a2;
  result = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C84CD28(a1, a2, (uint64_t *)&v6);
  v5[0] = result;
  v5[1] = v4;
  if ((_BYTE)v4)
  {
    sub_20C84CB58(a1, v5);
    return v5[0];
  }
  return result;
}

_DWORD *sub_20C84CB58(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfPath **a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  int v26;
  int v27;

  v3 = *a2;
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(*a2, &v26);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v26))
  {
    sub_20BFD6E54(&v21, &v26);
    sub_20BFD6EA4(&v22, &v27);
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v19 = 0;
    v20 = 0;
    v18 = 0;
    v4 = sub_20C84CB0C(a1, &v21);
    v5 = v25;
    if (v25)
    {
      p_shared_owners = (unint64_t *)&v25->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    if ((v23 & 7) != 0)
    {
      v8 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
    sub_20BFD265C(&v21);
    v10 = v20;
    if (v20)
    {
      v11 = (unint64_t *)&v20->__shared_owners_;
      do
        v12 = __ldaxr(v11);
      while (__stlxr(v12 - 1, v11));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    if ((v18 & 7) != 0)
    {
      v13 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
    v15 = *(_QWORD *)(v4 + 40);
    if (v15)
      v16 = v15 | 1;
    else
      v16 = v4;
    *((_QWORD *)v3 + 6) = v16;
    *(_QWORD *)(v4 + 40) = v3;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  return sub_20BFD265C(&v26);
}

void sub_20C84CCDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v4;
  uint64_t v5;
  unsigned int *v7;
  unsigned int v8;
  va_list va;

  va_start(va, a4);
  sub_20C84A4AC((uint64_t)va);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v4);
  if ((a2 & 7) != 0)
  {
    v7 = (unsigned int *)(a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  sub_20BFD1A18((_DWORD *)(v5 - 40));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84CD28(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *result;
  void *v10;

  v6 = *(_QWORD *)(a1 + 32);
  if (!v6)
  {
    sub_20C84CE44((void **)a1);
    v6 = *(_QWORD *)(a1 + 32);
  }
  v7 = (_QWORD *)(*(_QWORD *)a1
                + 8
                * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2)* (a2[1] + (unint64_t)*a2)) >> 1))) & v6));
  v8 = (_QWORD *)*v7;
  if (*v7)
  {
    result = (_QWORD *)*v7;
    while (*result != *(_QWORD *)a2)
    {
      result = (_QWORD *)result[4];
      if (!result)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    if (*(_QWORD *)(a1 + 24) > (unint64_t)((uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3))
    {
      sub_20C84CE44((void **)a1);
      v7 = (_QWORD *)(*(_QWORD *)a1
                    + 8
                    * (bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1]+ (unint64_t)*a2+ (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1))) & *(_QWORD *)(a1 + 32)));
      v8 = (_QWORD *)*v7;
    }
    v10 = operator new(0x38uLL);
    result = (_QWORD *)sub_20C84D06C((uint64_t)v10, *a3);
    result[5] = 0;
    result[6] = 0;
    result[4] = v8;
    *v7 = result;
    ++*(_QWORD *)(a1 + 24);
  }
  return result;
}

void sub_20C84CE44(void **a1)
{
  char *v2;
  unsigned __int8 v3;
  _QWORD *v4;
  _BOOL4 v5;
  unint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  unsigned int *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  __int128 v17;
  void *v18;
  _QWORD *v19;
  unsigned int v20;
  uint64_t v21;
  int v22;

  sub_20BEB59B0((uint64_t)&v21, (uint64_t)"Sdf", (uint64_t)"SdfPathTable::_Grow");
  v3 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v3 & 1) != 0)
  {
    v4 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("void pxrInternal__aapl__pxrReserved__::SdfPathTable<pxrInternal__aapl__pxrReserved__::HdSceneIndexPrim>::_Grow() [MappedType = pxrInternal__aapl__pxrReserved__::HdSceneIndexPrim]", 0, v2);
    v5 = v4 != 0;
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  v19 = v4;
  v20 = v5;
  v6 = (2 * (_QWORD)a1[4]) | 1;
  if (v6 <= 7)
    v6 = 7;
  a1[4] = (void *)v6;
  sub_20C84CFF8(&v17, v6 + 1);
  v7 = a1[1];
  if (v7 != *a1)
  {
    v8 = 0;
    v9 = (v7 - (_BYTE *)*a1) >> 3;
    do
    {
      v10 = (unsigned int *)*((_QWORD *)*a1 + v8);
      if (v10)
      {
        v11 = (unint64_t)a1[4];
        do
        {
          v12 = (unsigned int *)*((_QWORD *)v10 + 4);
          v13 = bswap64(0x9E3779B97F4A7C55* (v10[1]+ ((v10[1]+ (unint64_t)*v10+ (v10[1] + (unint64_t)*v10) * (v10[1] + (unint64_t)*v10)) >> 1))) & v11;
          v14 = v17;
          *((_QWORD *)v10 + 4) = *(_QWORD *)(v17 + 8 * v13);
          *(_QWORD *)(v14 + 8 * v13) = v10;
          v10 = v12;
        }
        while (v12);
      }
      ++v8;
    }
    while (v8 != v9);
    v7 = *a1;
  }
  *(_OWORD *)a1 = v17;
  v15 = a1[2];
  a1[2] = v18;
  *(_QWORD *)&v17 = v7;
  v18 = v15;
  if (v7)
  {
    *((_QWORD *)&v17 + 1) = v7;
    operator delete(v7);
  }
  v20 = v5 - 1;
  if (v5)
  {
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End((uint64_t)v4);
    v20 = v5 | 0xFFFFFFFE;
  }
  while (v22--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v21);
}

void sub_20C84CFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20BEB24F4((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84CFF8(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_20BDDF654(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_20C84D050(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C84D06C(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v4 = sub_20BFD6E54((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD6EA4(v4 + 1, (_DWORD *)(a2 + 4));
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      *(_QWORD *)(a1 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return a1;
}

uint64_t sub_20C84D0F4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  v2 = a1 + 8 * a2;
  v5 = *(_QWORD *)(v2 + 8);
  v4 = (_QWORD *)(v2 + 8);
  result = v5;
  if (a2 < 8)
  {
    if (!a2)
      return result;
    if (a2 == 1)
      result = tbb::internal::deallocate_via_handler_v3(result, (void *)1);
  }
  else
  {
    result = tbb::internal::deallocate_via_handler_v3(result, (void *)a2);
  }
  *v4 = 0;
  return result;
}

void sub_20C84D144(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD v19[3];
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;

  v6 = a1 + 24;
  v7 = *(unsigned int *)(a1 + 24);
  v8 = (pxrInternal__aapl__pxrReserved__ *)(int)v7;
  sub_20BF5AB98((uint64_t)a3, (int)v7);
  sub_20BF64CC4((uint64_t)v23, (int)v7);
  if ((int)v7 >= 1)
  {
    v11 = 0;
    v12 = 0;
    v13 = 4 * v7;
    do
    {
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v23, v9, v10);
      *(_DWORD *)(v24 + v11) = v12;
      v12 += *(_DWORD *)(*(_QWORD *)(a1 + 56) + v11);
      v11 += 4;
    }
    while (v13 != v11);
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v14)
    v14 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *((_QWORD *)v14 + 69);
  sub_20BF5AFC0(a3, v9, v10);
  v17 = *((_QWORD *)a3 + 4);
  v19[0] = v23;
  v19[1] = v6;
  v19[2] = a1 + 64;
  v20 = (v15 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8);
  v21 = a2;
  v22 = v17;
  v18[0] = sub_20C84D6F0;
  v18[1] = 0;
  v18[2] = v19;
  sub_20C84D864(v8, (uint64_t)v18, 1);
  sub_20BF5618C((uint64_t)v23);
}

void sub_20C84D270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20BF5618C((uint64_t)va);
  sub_20BF5618C(v10);
  _Unwind_Resume(a1);
}

void sub_20C84D2B0(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD v19[3];
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;

  v6 = a1 + 24;
  v7 = *(unsigned int *)(a1 + 24);
  v8 = (pxrInternal__aapl__pxrReserved__ *)(int)v7;
  sub_20BF5C3C4((uint64_t)a3, (int)v7);
  sub_20BF64CC4((uint64_t)v23, (int)v7);
  if ((int)v7 >= 1)
  {
    v11 = 0;
    v12 = 0;
    v13 = 4 * v7;
    do
    {
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v23, v9, v10);
      *(_DWORD *)(v24 + v11) = v12;
      v12 += *(_DWORD *)(*(_QWORD *)(a1 + 56) + v11);
      v11 += 4;
    }
    while (v13 != v11);
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v14)
    v14 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *((_QWORD *)v14 + 69);
  sub_20BF5C734(a3, v9, v10);
  v17 = *((_QWORD *)a3 + 4);
  v19[0] = v23;
  v19[1] = v6;
  v19[2] = a1 + 64;
  v20 = (v15 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8);
  v21 = a2;
  v22 = v17;
  v18[0] = sub_20C84DEF8;
  v18[1] = 0;
  v18[2] = v19;
  sub_20C84E044(v8, (uint64_t)v18, 1);
  sub_20BF5618C((uint64_t)v23);
}

void sub_20C84D3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20BF5618C((uint64_t)va);
  sub_20BF5618C(v10);
  _Unwind_Resume(a1);
}

void sub_20C84D41C(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD v19[3];
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;

  v6 = a1 + 24;
  v7 = *(unsigned int *)(a1 + 24);
  v8 = (pxrInternal__aapl__pxrReserved__ *)(int)v7;
  sub_20C84E6D8((uint64_t)a3, (int)v7);
  sub_20BF64CC4((uint64_t)v23, (int)v7);
  if ((int)v7 >= 1)
  {
    v11 = 0;
    v12 = 0;
    v13 = 4 * v7;
    do
    {
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v23, v9, v10);
      *(_DWORD *)(v24 + v11) = v12;
      v12 += *(_DWORD *)(*(_QWORD *)(a1 + 56) + v11);
      v11 += 4;
    }
    while (v13 != v11);
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v14)
    v14 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *((_QWORD *)v14 + 69);
  sub_20C84EB6C(a3, v9, v10);
  v17 = *((_QWORD *)a3 + 4);
  v19[0] = v23;
  v19[1] = v6;
  v19[2] = a1 + 64;
  v20 = (v15 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8);
  v21 = a2;
  v22 = v17;
  v18[0] = sub_20C84E744;
  v18[1] = 0;
  v18[2] = v19;
  sub_20C84EC00(v8, (uint64_t)v18, 1);
  sub_20BF5618C((uint64_t)v23);
}

void sub_20C84D548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20BF5618C((uint64_t)va);
  sub_20BF5618C(v10);
  _Unwind_Resume(a1);
}

void sub_20C84D588(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD v19[3];
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[32];
  uint64_t v24;

  v6 = a1 + 24;
  v7 = *(unsigned int *)(a1 + 24);
  v8 = (pxrInternal__aapl__pxrReserved__ *)(int)v7;
  sub_20C84E6D8((uint64_t)a3, (int)v7);
  sub_20BF64CC4((uint64_t)v23, (int)v7);
  if ((int)v7 >= 1)
  {
    v11 = 0;
    v12 = 0;
    v13 = 4 * v7;
    do
    {
      sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v23, v9, v10);
      *(_DWORD *)(v24 + v11) = v12;
      v12 += *(_DWORD *)(*(_QWORD *)(a1 + 56) + v11);
      v11 += 4;
    }
    while (v13 != v11);
  }
  v14 = (pxrInternal__aapl__pxrReserved__::HdTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdTokens);
  if (!v14)
    v14 = sub_20C7DFC58(&pxrInternal__aapl__pxrReserved__::HdTokens);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *((_QWORD *)v14 + 69);
  sub_20C84EB6C(a3, v9, v10);
  v17 = *((_QWORD *)a3 + 4);
  v19[0] = v23;
  v19[1] = v6;
  v19[2] = a1 + 64;
  v20 = (v15 & 0xFFFFFFFFFFFFFFF8) != (v16 & 0xFFFFFFFFFFFFFFF8);
  v21 = a2;
  v22 = v17;
  v18[0] = sub_20C84F320;
  v18[1] = 0;
  v18[2] = v19;
  sub_20C84F4D0(v8, (uint64_t)v18, 1);
  sub_20BF5618C((uint64_t)v23);
}

void sub_20C84D6B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20BF5618C((uint64_t)va);
  sub_20BF5618C(v10);
  _Unwind_Resume(a1);
}

double sub_20C84D6F0(uint64_t a1, unint64_t a2, unint64_t a3)
{
  double result;
  uint64_t v4;
  float v5;
  float v6;
  float v7;
  int *v8;
  int *v9;
  int v10;
  uint64_t v11;
  float *v12;
  float v13;
  float v14;
  float v15;
  double v16;
  uint64_t v17;
  float *v18;
  float *v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  double v32;
  float v33;
  float v34;
  float v35;
  float *v36;

  if (a2 < a3)
  {
    result = -1.0;
    do
    {
      v4 = *(unsigned int *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 32) + 4 * a2);
      v5 = 0.0;
      v6 = 0.0;
      v7 = 0.0;
      if ((int)v4 >= 3)
      {
        v8 = (int *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 32)
                   + 4 * *(int *)(*(_QWORD *)(*(_QWORD *)a1 + 32) + 4 * a2));
        v10 = *v8;
        v9 = v8 + 2;
        v11 = *(_QWORD *)(a1 + 32);
        v12 = (float *)(v11 + 12 * v10);
        v13 = *v12;
        v14 = v12[1];
        v15 = v12[2];
        if (*(_BYTE *)(a1 + 24))
          v16 = -1.0;
        else
          v16 = 1.0;
        v17 = v4 - 2;
        do
        {
          v18 = (float *)(v11 + 12 * *(v9 - 1));
          v19 = (float *)(v11 + 12 * *v9);
          v20 = *v18 - v13;
          v21 = v18[1] - v14;
          v22 = v18[2] - v15;
          v23 = *v19 - v13;
          v24 = v19[1] - v14;
          v25 = v19[2] - v15;
          v26 = v21 * v25;
          v27 = v20 * v25;
          v28 = (float)(v20 * v24) - (float)(v21 * v23);
          v29 = v16 * (float)(v26 - (float)(v22 * v24));
          v30 = v16 * (float)((float)(v22 * v23) - v27);
          v31 = v16 * v28;
          v7 = v7 + v29;
          v6 = v6 + v30;
          v5 = v5 + v31;
          ++v9;
          --v17;
        }
        while (v17);
      }
      v32 = 1.0 / fmaxf(sqrtf((float)(v5 * v5) + (float)((float)(v6 * v6) + (float)(v7 * v7))), 1.0e-10);
      v33 = v32 * v7;
      v34 = v32 * v6;
      v35 = v32 * v5;
      v36 = (float *)(*(_QWORD *)(a1 + 40) + 12 * a2);
      *v36 = v33;
      v36[1] = v34;
      v36[2] = v35;
      ++a2;
    }
    while (a2 != a3);
  }
  return result;
}

void sub_20C84D864(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *);
  _QWORD *v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  _DWORD v15[32];
  uint64_t v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(a1))
    {
      v15[0] = 0;
      v16 = 65539;
      v17 = 55;
      tbb::task_group_context::init((uint64_t)v15, v6, v7, v8);
      v13[0] = a1;
      v13[1] = 0;
      v13[2] = a3;
      v12 = a2;
      sub_20C84D980(v13, &v12, (uint64_t)&v14, (tbb::task_group_context *)v15);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)v15);
    }
    else
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))a2;
      v11 = (_QWORD *)(*(_QWORD *)(a2 + 16) + (v9 >> 1));
      if ((v9 & 1) != 0)
        v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))(*v11 + v10);
      v10(v11, 0, a1);
    }
  }
}

void sub_20C84D964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84D980(_QWORD *result, _QWORD *a2, uint64_t a3, tbb::task_group_context *a4)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t initial_auto_partitioner_divisor;
  tbb::task_group_context *v9;

  if (result[1] < *result)
  {
    v5 = result;
    v9 = a4;
    v6 = tbb::internal::allocate_root_with_context_proxy::allocate(&v9, 0x38uLL);
    *(_BYTE *)(v6 - 11) = 1;
    *(_QWORD *)v6 = &unk_24C550F40;
    v7 = v5[2];
    *(_OWORD *)(v6 + 8) = *(_OWORD *)v5;
    *(_QWORD *)(v6 + 24) = v7;
    *(_QWORD *)(v6 + 32) = *a2;
    initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v6);
    *(_DWORD *)(v6 + 48) = 0;
    *(_BYTE *)(v6 + 52) = 5;
    *(_QWORD *)(v6 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
    return (_QWORD *)(*(uint64_t (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v6 - 40)
                                                                                           + 16))(*(_QWORD *)(v6 - 40), v6, v6 - 8);
  }
  return result;
}

void sub_20C84DA34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  tbb::task *v10;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a10, v10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84DA58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = a1 + 40;
  if (!v3)
  {
    *(_QWORD *)(a1 + 40) = 1;
    if (*(char *)(a1 - 11) < 0)
    {
      v4 = *(_QWORD *)(a1 - 32);
      if (*(int *)(v4 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v4 + 8) = 1;
        v5 = *(unsigned __int8 *)(a1 + 52);
        if (v5 <= 1)
          LOBYTE(v5) = 1;
        *(_BYTE *)(a1 + 52) = v5 + 1;
      }
    }
  }
  sub_20C84DAC4(v2, a1, a1 + 8);
  return 0;
}

void sub_20C84DAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16) < *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
  {
    if (*(_QWORD *)a1 > 1uLL)
      goto LABEL_6;
    if (*(_QWORD *)a1)
    {
LABEL_4:
      if (*(_BYTE *)(a1 + 12))
      {
        --*(_BYTE *)(a1 + 12);
        *(_QWORD *)a1 = 0;
LABEL_6:
        while (1)
        {
          sub_20C84DB74(a2);
          if (*(_QWORD *)(a3 + 16) >= *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
            break;
          if (*(_QWORD *)a1 <= 1uLL)
          {
            if (*(_QWORD *)a1)
              goto LABEL_4;
            break;
          }
        }
      }
    }
  }
  sub_20C84DC38(a1, a2, (__int128 *)a3);
}

uint64_t sub_20C84DB74(uint64_t a1)
{
  _BYTE *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v2 - 11) = 1;
  *(_QWORD *)v2 = &unk_24C520F68;
  __dmb(0xBu);
  v2[8] = 0;
  *(_QWORD *)(a1 - 32) = v2;
  *((_QWORD *)v2 - 3) = 2;
  v3 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v2, 0x38uLL);
  *(_BYTE *)(v3 - 11) = 1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v3 = &unk_24C550F40;
  *(_QWORD *)(v3 + 8) = v4;
  v6 = v5 + ((unint64_t)(*(_QWORD *)(a1 + 8) - v5) >> 1);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(v3 + 40) = v7;
  *(_DWORD *)(v3 + 48) = 2;
  *(_BYTE *)(v3 + 52) = *(_BYTE *)(a1 + 52);
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v3 - 40))(*(_QWORD *)(v3 - 40), v3, v3 - 8);
}

void sub_20C84DC38(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __n128 v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD, _QWORD, __n128);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20[16];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*((_QWORD *)a3 + 2) < *(_QWORD *)a3 - *((_QWORD *)a3 + 1) && *(_BYTE *)(a1 + 12))
  {
    *(_DWORD *)v20 = 0x10000;
    v21 = *a3;
    v22 = *((_QWORD *)a3 + 2);
    while (1)
    {
      v5 = sub_20C15C670(v20, *(unsigned __int8 *)(a1 + 12));
      v6 = *(_BYTE *)(*(_QWORD *)(a2 - 32) + 8);
      __dmb(0xBu);
      if ((v6 & 1) == 0)
        break;
      v14 = *(_BYTE *)(a1 + 12) + 1;
      *(_BYTE *)(a1 + 12) = v14;
      v13 = v20[2];
      if (v20[2] < 2u)
      {
        v7 = v20[0];
        if (v20[v20[0] + 3] >= v14
          || *((_QWORD *)&v21 + 3 * v20[0] + 2) >= *((_QWORD *)&v21 + 3 * v20[0]) - *((_QWORD *)&v21 + 3 * v20[0] + 1))
        {
          goto LABEL_6;
        }
      }
      else
      {
        sub_20C84DE30(a2, (__int128 *)((char *)&v21 + 24 * v20[1]), v20[v20[1] + 3]);
        v13 = --v20[2];
        v20[1] = (v20[1] + 1) & 7;
      }
LABEL_13:
      if (!v13 || tbb::task_group_context::is_group_execution_cancelled(*(tbb::task_group_context **)(a2 - 56)))
        return;
    }
    v7 = v20[0];
LABEL_6:
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))v8;
    v11 = v8 + 8;
    v10 = *(_QWORD *)(v8 + 8);
    v12 = (_QWORD *)(*(_QWORD *)(v11 + 8) + (v10 >> 1));
    if ((v10 & 1) != 0)
      v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))(*v12 + v9);
    v9(v12, *((_QWORD *)&v21 + 3 * v7 + 1), *((_QWORD *)&v21 + 3 * v7), v5);
    v13 = --v20[2];
    v20[0] = (v20[0] - 1) & 7;
    goto LABEL_13;
  }
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(void (**)(_QWORD *))v15;
  v18 = v15 + 8;
  v17 = *(_QWORD *)(v15 + 8);
  v19 = (_QWORD *)(*(_QWORD *)(v18 + 8) + (v17 >> 1));
  if ((v17 & 1) != 0)
    v16 = *(void (**)(_QWORD *))(*v19 + v16);
  v16(v19);
}

uint64_t sub_20C84DE30(uint64_t a1, __int128 *a2, char a3)
{
  _BYTE *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v6 - 11) = 1;
  *(_QWORD *)v6 = &unk_24C520F68;
  __dmb(0xBu);
  v6[8] = 0;
  *(_QWORD *)(a1 - 32) = v6;
  *((_QWORD *)v6 - 3) = 2;
  v7 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v6, 0x38uLL);
  *(_BYTE *)(v7 - 11) = 1;
  *(_QWORD *)v7 = &unk_24C550F40;
  v8 = *a2;
  *(_QWORD *)(v7 + 24) = *((_QWORD *)a2 + 2);
  *(_OWORD *)(v7 + 8) = v8;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  *(_DWORD *)(v7 + 48) = 2;
  *(_BYTE *)(v7 + 52) = *(_BYTE *)(a1 + 52) - a3;
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v7 - 40))(*(_QWORD *)(v7 - 40), v7, v7 - 8);
}

uint64_t sub_20C84DEF8(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  int *v7;
  int *v8;
  int v9;
  uint64_t v10;
  double *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double *v17;
  double *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double *v27;

  if (a2 < a3)
  {
    do
    {
      v3 = *(unsigned int *)(*(_QWORD *)(*(_QWORD *)(result + 8) + 32) + 4 * a2);
      v4 = 0.0;
      v5 = 0.0;
      v6 = 0.0;
      if ((int)v3 >= 3)
      {
        v7 = (int *)(*(_QWORD *)(*(_QWORD *)(result + 16) + 32)
                   + 4 * *(int *)(*(_QWORD *)(*(_QWORD *)result + 32) + 4 * a2));
        v9 = *v7;
        v8 = v7 + 2;
        v10 = *(_QWORD *)(result + 32);
        v11 = (double *)(v10 + 24 * v9);
        v12 = *v11;
        v13 = v11[1];
        v14 = v11[2];
        if (*(_BYTE *)(result + 24))
          v15 = -1.0;
        else
          v15 = 1.0;
        v16 = v3 - 2;
        do
        {
          v17 = (double *)(v10 + 24 * *(v8 - 1));
          v18 = (double *)(v10 + 24 * *v8);
          v19 = *v17 - v12;
          v20 = v17[1] - v13;
          v21 = v17[2] - v14;
          v22 = *v18 - v12;
          v23 = v18[1] - v13;
          v24 = v18[2] - v14;
          v6 = v6 + (v20 * v24 - v21 * v23) * v15;
          v5 = v5 + (v21 * v22 - v19 * v24) * v15;
          v4 = v4 + (v19 * v23 - v20 * v22) * v15;
          ++v8;
          --v16;
        }
        while (v16);
      }
      v25 = sqrt(v4 * v4 + v5 * v5 + v6 * v6);
      if (v25 <= 1.0e-10)
        v26 = 1.0e10;
      else
        v26 = 1.0 / v25;
      v27 = (double *)(*(_QWORD *)(result + 40) + 24 * a2);
      *v27 = v6 * v26;
      v27[1] = v5 * v26;
      v27[2] = v4 * v26;
      ++a2;
    }
    while (a2 != a3);
  }
  return result;
}

void sub_20C84E044(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *);
  _QWORD *v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  _DWORD v15[32];
  uint64_t v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(a1))
    {
      v15[0] = 0;
      v16 = 65539;
      v17 = 55;
      tbb::task_group_context::init((uint64_t)v15, v6, v7, v8);
      v13[0] = a1;
      v13[1] = 0;
      v13[2] = a3;
      v12 = a2;
      sub_20C84E160(v13, &v12, (uint64_t)&v14, (tbb::task_group_context *)v15);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)v15);
    }
    else
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))a2;
      v11 = (_QWORD *)(*(_QWORD *)(a2 + 16) + (v9 >> 1));
      if ((v9 & 1) != 0)
        v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))(*v11 + v10);
      v10(v11, 0, a1);
    }
  }
}

void sub_20C84E144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84E160(_QWORD *result, _QWORD *a2, uint64_t a3, tbb::task_group_context *a4)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t initial_auto_partitioner_divisor;
  tbb::task_group_context *v9;

  if (result[1] < *result)
  {
    v5 = result;
    v9 = a4;
    v6 = tbb::internal::allocate_root_with_context_proxy::allocate(&v9, 0x38uLL);
    *(_BYTE *)(v6 - 11) = 1;
    *(_QWORD *)v6 = &unk_24C550F88;
    v7 = v5[2];
    *(_OWORD *)(v6 + 8) = *(_OWORD *)v5;
    *(_QWORD *)(v6 + 24) = v7;
    *(_QWORD *)(v6 + 32) = *a2;
    initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v6);
    *(_DWORD *)(v6 + 48) = 0;
    *(_BYTE *)(v6 + 52) = 5;
    *(_QWORD *)(v6 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
    return (_QWORD *)(*(uint64_t (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v6 - 40)
                                                                                           + 16))(*(_QWORD *)(v6 - 40), v6, v6 - 8);
  }
  return result;
}

void sub_20C84E214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  tbb::task *v10;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a10, v10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84E238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = a1 + 40;
  if (!v3)
  {
    *(_QWORD *)(a1 + 40) = 1;
    if (*(char *)(a1 - 11) < 0)
    {
      v4 = *(_QWORD *)(a1 - 32);
      if (*(int *)(v4 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v4 + 8) = 1;
        v5 = *(unsigned __int8 *)(a1 + 52);
        if (v5 <= 1)
          LOBYTE(v5) = 1;
        *(_BYTE *)(a1 + 52) = v5 + 1;
      }
    }
  }
  sub_20C84E2A4(v2, a1, a1 + 8);
  return 0;
}

void sub_20C84E2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16) < *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
  {
    if (*(_QWORD *)a1 > 1uLL)
      goto LABEL_6;
    if (*(_QWORD *)a1)
    {
LABEL_4:
      if (*(_BYTE *)(a1 + 12))
      {
        --*(_BYTE *)(a1 + 12);
        *(_QWORD *)a1 = 0;
LABEL_6:
        while (1)
        {
          sub_20C84E354(a2);
          if (*(_QWORD *)(a3 + 16) >= *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
            break;
          if (*(_QWORD *)a1 <= 1uLL)
          {
            if (*(_QWORD *)a1)
              goto LABEL_4;
            break;
          }
        }
      }
    }
  }
  sub_20C84E418(a1, a2, (__int128 *)a3);
}

uint64_t sub_20C84E354(uint64_t a1)
{
  _BYTE *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v2 - 11) = 1;
  *(_QWORD *)v2 = &unk_24C520F68;
  __dmb(0xBu);
  v2[8] = 0;
  *(_QWORD *)(a1 - 32) = v2;
  *((_QWORD *)v2 - 3) = 2;
  v3 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v2, 0x38uLL);
  *(_BYTE *)(v3 - 11) = 1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v3 = &unk_24C550F88;
  *(_QWORD *)(v3 + 8) = v4;
  v6 = v5 + ((unint64_t)(*(_QWORD *)(a1 + 8) - v5) >> 1);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(v3 + 40) = v7;
  *(_DWORD *)(v3 + 48) = 2;
  *(_BYTE *)(v3 + 52) = *(_BYTE *)(a1 + 52);
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v3 - 40))(*(_QWORD *)(v3 - 40), v3, v3 - 8);
}

void sub_20C84E418(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __n128 v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD, _QWORD, __n128);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20[16];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*((_QWORD *)a3 + 2) < *(_QWORD *)a3 - *((_QWORD *)a3 + 1) && *(_BYTE *)(a1 + 12))
  {
    *(_DWORD *)v20 = 0x10000;
    v21 = *a3;
    v22 = *((_QWORD *)a3 + 2);
    while (1)
    {
      v5 = sub_20C15C670(v20, *(unsigned __int8 *)(a1 + 12));
      v6 = *(_BYTE *)(*(_QWORD *)(a2 - 32) + 8);
      __dmb(0xBu);
      if ((v6 & 1) == 0)
        break;
      v14 = *(_BYTE *)(a1 + 12) + 1;
      *(_BYTE *)(a1 + 12) = v14;
      v13 = v20[2];
      if (v20[2] < 2u)
      {
        v7 = v20[0];
        if (v20[v20[0] + 3] >= v14
          || *((_QWORD *)&v21 + 3 * v20[0] + 2) >= *((_QWORD *)&v21 + 3 * v20[0]) - *((_QWORD *)&v21 + 3 * v20[0] + 1))
        {
          goto LABEL_6;
        }
      }
      else
      {
        sub_20C84E610(a2, (__int128 *)((char *)&v21 + 24 * v20[1]), v20[v20[1] + 3]);
        v13 = --v20[2];
        v20[1] = (v20[1] + 1) & 7;
      }
LABEL_13:
      if (!v13 || tbb::task_group_context::is_group_execution_cancelled(*(tbb::task_group_context **)(a2 - 56)))
        return;
    }
    v7 = v20[0];
LABEL_6:
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))v8;
    v11 = v8 + 8;
    v10 = *(_QWORD *)(v8 + 8);
    v12 = (_QWORD *)(*(_QWORD *)(v11 + 8) + (v10 >> 1));
    if ((v10 & 1) != 0)
      v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))(*v12 + v9);
    v9(v12, *((_QWORD *)&v21 + 3 * v7 + 1), *((_QWORD *)&v21 + 3 * v7), v5);
    v13 = --v20[2];
    v20[0] = (v20[0] - 1) & 7;
    goto LABEL_13;
  }
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(void (**)(_QWORD *))v15;
  v18 = v15 + 8;
  v17 = *(_QWORD *)(v15 + 8);
  v19 = (_QWORD *)(*(_QWORD *)(v18 + 8) + (v17 >> 1));
  if ((v17 & 1) != 0)
    v16 = *(void (**)(_QWORD *))(*v19 + v16);
  v16(v19);
}

uint64_t sub_20C84E610(uint64_t a1, __int128 *a2, char a3)
{
  _BYTE *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v6 - 11) = 1;
  *(_QWORD *)v6 = &unk_24C520F68;
  __dmb(0xBu);
  v6[8] = 0;
  *(_QWORD *)(a1 - 32) = v6;
  *((_QWORD *)v6 - 3) = 2;
  v7 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v6, 0x38uLL);
  *(_BYTE *)(v7 - 11) = 1;
  *(_QWORD *)v7 = &unk_24C550F88;
  v8 = *a2;
  *(_QWORD *)(v7 + 24) = *((_QWORD *)a2 + 2);
  *(_OWORD *)(v7 + 8) = v8;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  *(_DWORD *)(v7 + 48) = 2;
  *(_BYTE *)(v7 + 52) = *(_BYTE *)(a1 + 52) - a3;
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v7 - 40))(*(_QWORD *)(v7 - 40), v7, v7 - 8);
}

uint64_t sub_20C84E6D8(uint64_t a1, unint64_t a2)
{
  char v5;
  char *v6;

  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_20BF56210((_QWORD *)a1);
  v6 = &v5;
  sub_20C84E91C((unint64_t *)a1, a2, (_DWORD **)&v6);
  return a1;
}

void sub_20C84E72C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BF5618C(v1);
  _Unwind_Resume(a1);
}

unsigned int *sub_20C84E744(unsigned int *result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  float v13;
  float v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float *v19;
  double v20;
  int *v21;
  uint64_t v22;
  float *v23;
  float *v24;
  float v25;
  float v26;
  float v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  double v39;
  unsigned int v40;
  unsigned int v41;
  float v42;
  unsigned int v43;
  unint64_t v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (a2 < a3)
  {
    v46 = v8;
    v47 = v7;
    v48 = v6;
    v49 = v5;
    v50 = v3;
    v51 = v4;
    v10 = a2;
    v11 = result;
    do
    {
      v45 = 0.0;
      v44 = 0;
      v12 = *(unsigned int *)(*(_QWORD *)(*((_QWORD *)v11 + 1) + 32) + 4 * v10);
      v13 = 0.0;
      v14 = 0.0;
      v15 = 0.0;
      if ((int)v12 >= 3)
      {
        v16 = *(int *)(*(_QWORD *)(*(_QWORD *)v11 + 32) + 4 * v10);
        v17 = *((_QWORD *)v11 + 4);
        v18 = *(_QWORD *)(*((_QWORD *)v11 + 2) + 32);
        v19 = (float *)(v17 + 12 * *(int *)(v18 + 4 * v16));
        if (*((_BYTE *)v11 + 24))
          v20 = -1.0;
        else
          v20 = 1.0;
        v21 = (int *)(v18 + 4 * v16 + 8);
        v22 = v12 - 2;
        do
        {
          v23 = (float *)(v17 + 12 * *(v21 - 1));
          v24 = (float *)(v17 + 12 * *v21);
          v25 = v19[1];
          v26 = *v23 - *v19;
          v27 = v23[1] - v25;
          v28 = v19[2];
          v29 = v23[2] - v28;
          v30 = *v24 - *v19;
          v31 = v24[1] - v25;
          v32 = v24[2] - v28;
          v33 = (float)(v27 * v32) - (float)(v29 * v31);
          v34 = v26 * v32;
          v35 = (float)(v26 * v31) - (float)(v27 * v30);
          v36 = v20 * v33;
          v37 = v20 * (float)((float)(v29 * v30) - v34);
          v38 = v20 * v35;
          v15 = v15 + v36;
          v14 = v14 + v37;
          v44 = __PAIR64__(LODWORD(v14), LODWORD(v15));
          v13 = v13 + v38;
          v45 = v13;
          ++v21;
          --v22;
        }
        while (v22);
      }
      v39 = 1.0 / fmaxf(sqrtf((float)((float)(v15 * v15) + (float)(v14 * v14)) + (float)(v13 * v13)), 1.0e-10);
      *(float *)&v40 = v39 * v15;
      *(float *)&v41 = v39 * v14;
      v44 = __PAIR64__(v41, v40);
      v42 = v39 * v13;
      v45 = v42;
      result = sub_20C84F294(&v43, (float *)&v44);
      *(_DWORD *)(*((_QWORD *)v11 + 5) + 4 * v10++) = v43;
    }
    while (v10 != a3);
  }
  return result;
}

void sub_20C84E91C(unint64_t *a1, unint64_t a2, _DWORD **a3)
{
  unint64_t v3;
  unint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  _DWORD *v18;
  unint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  unint64_t *v22;
  int v23;
  _DWORD *v24;
  uint64_t v25;

  v3 = *a1;
  if (*a1 == a2)
    return;
  if (!a2)
    goto LABEL_18;
  v7 = (unint64_t *)a1[4];
  if (v7)
  {
    if (!a1[3])
    {
      v8 = atomic_load(v7 - 2);
      if (v8 == 1)
      {
        if (v3 < a2)
        {
          v9 = a1[4];
          if (*(_QWORD *)(v9 - 8) < a2)
          {
            v10 = sub_20C84EAD0((uint64_t)a1, a2);
            v7 = v10;
            if (v3)
            {
              v11 = 0;
              do
              {
                *(_DWORD *)((char *)v10 + v11) = *(_DWORD *)(v9 + v11);
                v11 += 4;
              }
              while (4 * v3 != v11);
            }
          }
          v12 = *a3;
          v13 = 4 * v3;
          do
          {
            *(_DWORD *)((char *)v7 + v13) = *v12;
            v13 += 4;
          }
          while (4 * a2 != v13);
        }
        v14 = v7;
        goto LABEL_29;
      }
      v7 = (unint64_t *)a1[4];
    }
    if (v3 >= a2)
      v19 = a2;
    else
      v19 = *a1;
    v20 = sub_20C84EAD0((uint64_t)a1, a2);
    v14 = v20;
    if (v19)
    {
      v21 = 4 * v19;
      v22 = v20;
      do
      {
        v23 = *(_DWORD *)v7;
        v7 = (unint64_t *)((char *)v7 + 4);
        *(_DWORD *)v22 = v23;
        v22 = (unint64_t *)((char *)v22 + 4);
        v21 -= 4;
      }
      while (v21);
    }
    if (v3 < a2)
    {
      v24 = *a3;
      v25 = 4 * v3;
      do
      {
        *(_DWORD *)((char *)v20 + v25) = *v24;
        v25 += 4;
      }
      while (4 * a2 != v25);
    }
    goto LABEL_29;
  }
  v15 = 4 * a2;
  if (4 * a2 / a2 != 4)
  {
LABEL_18:
    sub_20BF56210(a1);
    return;
  }
  v16 = sub_20C84EAD0((uint64_t)a1, a2);
  v14 = v16;
  v17 = 0;
  v18 = *a3;
  do
  {
    *(_DWORD *)((char *)v16 + v17) = *v18;
    v17 += 4;
  }
  while (v15 != v17);
LABEL_29:
  if (v14 != (unint64_t *)a1[4])
  {
    sub_20BF5618C((uint64_t)a1);
    a1[4] = (unint64_t)v14;
  }
  *a1 = a2;
}

_QWORD *sub_20C84EAD0(uint64_t a1, unint64_t a2)
{
  size_t v3;
  _QWORD *v4;
  uint64_t v7;
  int v8;

  sub_20BEB59B0((uint64_t)&v7, (uint64_t)"VtArray::_AllocateNew", (uint64_t)"value_type *pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::HdVec4f_2_10_10_10_REV>::_AllocateNew(size_t) [T = pxrInternal__aapl__pxrReserved__::HdVec4f_2_10_10_10_REV]");
  if (a2 > 0x3FFFFFFFFFFFFFFBLL)
    v3 = -1;
  else
    v3 = 4 * a2 + 16;
  v4 = operator new(v3);
  *v4 = 1;
  v4[1] = a2;
  while (v8--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v7);
  return v4 + 2;
}

void sub_20C84EB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BEB24F4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20C84EB6C(pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *this, uint64_t a2, char *a3)
{
  uint64_t v3;
  unint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  int v12;

  v3 = *((_QWORD *)this + 4);
  if (v3)
  {
    if (*((_QWORD *)this + 3) || (v5 = atomic_load((unint64_t *)(v3 - 16)), v5 != 1))
    {
      pxrInternal__aapl__pxrReserved__::Vt_ArrayBase::_DetachCopyHook(this, "void pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::HdVec4f_2_10_10_10_REV>::_DetachIfNotUnique() [T = pxrInternal__aapl__pxrReserved__::HdVec4f_2_10_10_10_REV]", a3);
      v6 = (int *)*((_QWORD *)this + 4);
      v7 = *(_QWORD *)this;
      v8 = sub_20C84EAD0((uint64_t)this, *(_QWORD *)this);
      v9 = v8;
      if (v7)
      {
        v10 = 4 * v7;
        v11 = v8;
        do
        {
          v12 = *v6++;
          *v11++ = v12;
          v10 -= 4;
        }
        while (v10);
      }
      sub_20BF5618C((uint64_t)this);
      *((_QWORD *)this + 4) = v9;
    }
  }
}

void sub_20C84EC00(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *);
  _QWORD *v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  _DWORD v15[32];
  uint64_t v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(a1))
    {
      v15[0] = 0;
      v16 = 65539;
      v17 = 55;
      tbb::task_group_context::init((uint64_t)v15, v6, v7, v8);
      v13[0] = a1;
      v13[1] = 0;
      v13[2] = a3;
      v12 = a2;
      sub_20C84ED1C(v13, &v12, (uint64_t)&v14, (tbb::task_group_context *)v15);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)v15);
    }
    else
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))a2;
      v11 = (_QWORD *)(*(_QWORD *)(a2 + 16) + (v9 >> 1));
      if ((v9 & 1) != 0)
        v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))(*v11 + v10);
      v10(v11, 0, a1);
    }
  }
}

void sub_20C84ED00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84ED1C(_QWORD *result, _QWORD *a2, uint64_t a3, tbb::task_group_context *a4)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t initial_auto_partitioner_divisor;
  tbb::task_group_context *v9;

  if (result[1] < *result)
  {
    v5 = result;
    v9 = a4;
    v6 = tbb::internal::allocate_root_with_context_proxy::allocate(&v9, 0x38uLL);
    *(_BYTE *)(v6 - 11) = 1;
    *(_QWORD *)v6 = &unk_24C550FD0;
    v7 = v5[2];
    *(_OWORD *)(v6 + 8) = *(_OWORD *)v5;
    *(_QWORD *)(v6 + 24) = v7;
    *(_QWORD *)(v6 + 32) = *a2;
    initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v6);
    *(_DWORD *)(v6 + 48) = 0;
    *(_BYTE *)(v6 + 52) = 5;
    *(_QWORD *)(v6 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
    return (_QWORD *)(*(uint64_t (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v6 - 40)
                                                                                           + 16))(*(_QWORD *)(v6 - 40), v6, v6 - 8);
  }
  return result;
}

void sub_20C84EDD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  tbb::task *v10;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a10, v10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84EDF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = a1 + 40;
  if (!v3)
  {
    *(_QWORD *)(a1 + 40) = 1;
    if (*(char *)(a1 - 11) < 0)
    {
      v4 = *(_QWORD *)(a1 - 32);
      if (*(int *)(v4 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v4 + 8) = 1;
        v5 = *(unsigned __int8 *)(a1 + 52);
        if (v5 <= 1)
          LOBYTE(v5) = 1;
        *(_BYTE *)(a1 + 52) = v5 + 1;
      }
    }
  }
  sub_20C84EE60(v2, a1, a1 + 8);
  return 0;
}

void sub_20C84EE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16) < *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
  {
    if (*(_QWORD *)a1 > 1uLL)
      goto LABEL_6;
    if (*(_QWORD *)a1)
    {
LABEL_4:
      if (*(_BYTE *)(a1 + 12))
      {
        --*(_BYTE *)(a1 + 12);
        *(_QWORD *)a1 = 0;
LABEL_6:
        while (1)
        {
          sub_20C84EF10(a2);
          if (*(_QWORD *)(a3 + 16) >= *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
            break;
          if (*(_QWORD *)a1 <= 1uLL)
          {
            if (*(_QWORD *)a1)
              goto LABEL_4;
            break;
          }
        }
      }
    }
  }
  sub_20C84EFD4(a1, a2, (__int128 *)a3);
}

uint64_t sub_20C84EF10(uint64_t a1)
{
  _BYTE *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v2 - 11) = 1;
  *(_QWORD *)v2 = &unk_24C520F68;
  __dmb(0xBu);
  v2[8] = 0;
  *(_QWORD *)(a1 - 32) = v2;
  *((_QWORD *)v2 - 3) = 2;
  v3 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v2, 0x38uLL);
  *(_BYTE *)(v3 - 11) = 1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v3 = &unk_24C550FD0;
  *(_QWORD *)(v3 + 8) = v4;
  v6 = v5 + ((unint64_t)(*(_QWORD *)(a1 + 8) - v5) >> 1);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(v3 + 40) = v7;
  *(_DWORD *)(v3 + 48) = 2;
  *(_BYTE *)(v3 + 52) = *(_BYTE *)(a1 + 52);
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v3 - 40))(*(_QWORD *)(v3 - 40), v3, v3 - 8);
}

void sub_20C84EFD4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __n128 v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD, _QWORD, __n128);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20[16];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*((_QWORD *)a3 + 2) < *(_QWORD *)a3 - *((_QWORD *)a3 + 1) && *(_BYTE *)(a1 + 12))
  {
    *(_DWORD *)v20 = 0x10000;
    v21 = *a3;
    v22 = *((_QWORD *)a3 + 2);
    while (1)
    {
      v5 = sub_20C15C670(v20, *(unsigned __int8 *)(a1 + 12));
      v6 = *(_BYTE *)(*(_QWORD *)(a2 - 32) + 8);
      __dmb(0xBu);
      if ((v6 & 1) == 0)
        break;
      v14 = *(_BYTE *)(a1 + 12) + 1;
      *(_BYTE *)(a1 + 12) = v14;
      v13 = v20[2];
      if (v20[2] < 2u)
      {
        v7 = v20[0];
        if (v20[v20[0] + 3] >= v14
          || *((_QWORD *)&v21 + 3 * v20[0] + 2) >= *((_QWORD *)&v21 + 3 * v20[0]) - *((_QWORD *)&v21 + 3 * v20[0] + 1))
        {
          goto LABEL_6;
        }
      }
      else
      {
        sub_20C84F1CC(a2, (__int128 *)((char *)&v21 + 24 * v20[1]), v20[v20[1] + 3]);
        v13 = --v20[2];
        v20[1] = (v20[1] + 1) & 7;
      }
LABEL_13:
      if (!v13 || tbb::task_group_context::is_group_execution_cancelled(*(tbb::task_group_context **)(a2 - 56)))
        return;
    }
    v7 = v20[0];
LABEL_6:
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))v8;
    v11 = v8 + 8;
    v10 = *(_QWORD *)(v8 + 8);
    v12 = (_QWORD *)(*(_QWORD *)(v11 + 8) + (v10 >> 1));
    if ((v10 & 1) != 0)
      v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))(*v12 + v9);
    v9(v12, *((_QWORD *)&v21 + 3 * v7 + 1), *((_QWORD *)&v21 + 3 * v7), v5);
    v13 = --v20[2];
    v20[0] = (v20[0] - 1) & 7;
    goto LABEL_13;
  }
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(void (**)(_QWORD *))v15;
  v18 = v15 + 8;
  v17 = *(_QWORD *)(v15 + 8);
  v19 = (_QWORD *)(*(_QWORD *)(v18 + 8) + (v17 >> 1));
  if ((v17 & 1) != 0)
    v16 = *(void (**)(_QWORD *))(*v19 + v16);
  v16(v19);
}

uint64_t sub_20C84F1CC(uint64_t a1, __int128 *a2, char a3)
{
  _BYTE *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v6 - 11) = 1;
  *(_QWORD *)v6 = &unk_24C520F68;
  __dmb(0xBu);
  v6[8] = 0;
  *(_QWORD *)(a1 - 32) = v6;
  *((_QWORD *)v6 - 3) = 2;
  v7 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v6, 0x38uLL);
  *(_BYTE *)(v7 - 11) = 1;
  *(_QWORD *)v7 = &unk_24C550FD0;
  v8 = *a2;
  *(_QWORD *)(v7 + 24) = *((_QWORD *)a2 + 2);
  *(_OWORD *)(v7 + 8) = v8;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  *(_DWORD *)(v7 + 48) = 2;
  *(_BYTE *)(v7 + 52) = *(_BYTE *)(a1 + 52) - a3;
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v7 - 40))(*(_QWORD *)(v7 - 40), v7, v7 - 8);
}

unsigned int *sub_20C84F294(unsigned int *result, float *a2)
{
  float v2;
  float v3;
  unsigned int v4;
  unsigned int v5;
  float v6;
  float v7;
  __int16 v8;
  float v9;
  float v10;

  v2 = *a2;
  if (*a2 < -1.0)
    v2 = -1.0;
  if (v2 <= 1.0)
    v3 = v2 * 511.0;
  else
    v3 = 511.0;
  v4 = llroundf(v3) & 0x3FF;
  v5 = *result & 0xFFFFFC00 | v4;
  *result = v5;
  v6 = a2[1];
  if (v6 < -1.0)
    v6 = -1.0;
  if (v6 <= 1.0)
    v7 = v6 * 511.0;
  else
    v7 = 511.0;
  v8 = llroundf(v7);
  *result = v5 & 0xFFF003FF | ((v8 & 0x3FF) << 10);
  v9 = a2[2];
  if (v9 < -1.0)
    v9 = -1.0;
  if (v9 <= 1.0)
    v10 = v9 * 511.0;
  else
    v10 = 511.0;
  *result = v4 & 0xC00003FF | ((llroundf(v10) & 0x3FF) << 20) | ((v8 & 0x3FF) << 10);
  return result;
}

unsigned int *sub_20C84F320(unsigned int *result, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  double v20;
  int *v21;
  uint64_t v22;
  double *v23;
  double *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  unsigned int v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (a2 < a3)
  {
    v39 = v8;
    v40 = v7;
    v41 = v6;
    v42 = v5;
    v43 = v3;
    v44 = v4;
    v10 = a2;
    v11 = result;
    do
    {
      v36 = 0.0;
      v37 = 0.0;
      v38 = 0.0;
      v12 = *(unsigned int *)(*(_QWORD *)(*((_QWORD *)v11 + 1) + 32) + 4 * v10);
      v13 = 0.0;
      v14 = 0.0;
      v15 = 0.0;
      if ((int)v12 >= 3)
      {
        v16 = *(int *)(*(_QWORD *)(*(_QWORD *)v11 + 32) + 4 * v10);
        v17 = *((_QWORD *)v11 + 4);
        v18 = *(_QWORD *)(*((_QWORD *)v11 + 2) + 32);
        v19 = (double *)(v17 + 24 * *(int *)(v18 + 4 * v16));
        if (*((_BYTE *)v11 + 24))
          v20 = -1.0;
        else
          v20 = 1.0;
        v21 = (int *)(v18 + 4 * v16 + 8);
        v22 = v12 - 2;
        do
        {
          v23 = (double *)(v17 + 24 * *(v21 - 1));
          v24 = (double *)(v17 + 24 * *v21);
          v25 = v19[1];
          v26 = *v23 - *v19;
          v27 = v23[1] - v25;
          v28 = v19[2];
          v29 = v23[2] - v28;
          v30 = *v24 - *v19;
          v31 = v24[1] - v25;
          v32 = v24[2] - v28;
          v15 = v15 + (v27 * v32 - v29 * v31) * v20;
          v14 = (v29 * v30 - v26 * v32) * v20 + v14;
          v36 = v15;
          v37 = v14;
          v13 = (v26 * v31 - v27 * v30) * v20 + v13;
          v38 = v13;
          ++v21;
          --v22;
        }
        while (v22);
      }
      v33 = sqrt(v15 * v15 + v14 * v14 + v13 * v13);
      if (v33 <= 1.0e-10)
        v34 = 1.0e10;
      else
        v34 = 1.0 / v33;
      v36 = v15 * v34;
      v37 = v14 * v34;
      v38 = v13 * v34;
      result = sub_20C84FB64(&v35, &v36);
      *(_DWORD *)(*((_QWORD *)v11 + 5) + 4 * v10++) = v35;
    }
    while (v10 != a3);
  }
  return result;
}

void sub_20C84F4D0(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *);
  _QWORD *v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  _DWORD v15[32];
  uint64_t v16;
  int v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (a1)
  {
    if (pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(a1))
    {
      v15[0] = 0;
      v16 = 65539;
      v17 = 55;
      tbb::task_group_context::init((uint64_t)v15, v6, v7, v8);
      v13[0] = a1;
      v13[1] = 0;
      v13[2] = a3;
      v12 = a2;
      sub_20C84F5EC(v13, &v12, (uint64_t)&v14, (tbb::task_group_context *)v15);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)v15);
    }
    else
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))a2;
      v11 = (_QWORD *)(*(_QWORD *)(a2 + 16) + (v9 >> 1));
      if ((v9 & 1) != 0)
        v10 = *(void (**)(_QWORD *, _QWORD, pxrInternal__aapl__pxrReserved__ *))(*v11 + v10);
      v10(v11, 0, a1);
    }
  }
}

void sub_20C84F5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  tbb::task_group_context::~task_group_context((tbb::task_group_context *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C84F5EC(_QWORD *result, _QWORD *a2, uint64_t a3, tbb::task_group_context *a4)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t initial_auto_partitioner_divisor;
  tbb::task_group_context *v9;

  if (result[1] < *result)
  {
    v5 = result;
    v9 = a4;
    v6 = tbb::internal::allocate_root_with_context_proxy::allocate(&v9, 0x38uLL);
    *(_BYTE *)(v6 - 11) = 1;
    *(_QWORD *)v6 = &unk_24C551018;
    v7 = v5[2];
    *(_OWORD *)(v6 + 8) = *(_OWORD *)v5;
    *(_QWORD *)(v6 + 24) = v7;
    *(_QWORD *)(v6 + 32) = *a2;
    initial_auto_partitioner_divisor = tbb::internal::get_initial_auto_partitioner_divisor((tbb::internal *)v6);
    *(_DWORD *)(v6 + 48) = 0;
    *(_BYTE *)(v6 + 52) = 5;
    *(_QWORD *)(v6 + 40) = (initial_auto_partitioner_divisor >> 1) & 0x7FFFFFFFFFFFFFFELL;
    return (_QWORD *)(*(uint64_t (**)(_QWORD, unint64_t, unint64_t))(**(_QWORD **)(v6 - 40)
                                                                                           + 16))(*(_QWORD *)(v6 - 40), v6, v6 - 8);
  }
  return result;
}

void sub_20C84F6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  tbb::task *v10;

  tbb::internal::allocate_root_with_context_proxy::free((tbb::internal::allocate_root_with_context_proxy *)&a10, v10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C84F6C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)(a1 + 40);
  v2 = a1 + 40;
  if (!v3)
  {
    *(_QWORD *)(a1 + 40) = 1;
    if (*(char *)(a1 - 11) < 0)
    {
      v4 = *(_QWORD *)(a1 - 32);
      if (*(int *)(v4 - 24) >= 2)
      {
        __dmb(0xBu);
        *(_BYTE *)(v4 + 8) = 1;
        v5 = *(unsigned __int8 *)(a1 + 52);
        if (v5 <= 1)
          LOBYTE(v5) = 1;
        *(_BYTE *)(a1 + 52) = v5 + 1;
      }
    }
  }
  sub_20C84F730(v2, a1, a1 + 8);
  return 0;
}

void sub_20C84F730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16) < *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
  {
    if (*(_QWORD *)a1 > 1uLL)
      goto LABEL_6;
    if (*(_QWORD *)a1)
    {
LABEL_4:
      if (*(_BYTE *)(a1 + 12))
      {
        --*(_BYTE *)(a1 + 12);
        *(_QWORD *)a1 = 0;
LABEL_6:
        while (1)
        {
          sub_20C84F7E0(a2);
          if (*(_QWORD *)(a3 + 16) >= *(_QWORD *)a3 - *(_QWORD *)(a3 + 8))
            break;
          if (*(_QWORD *)a1 <= 1uLL)
          {
            if (*(_QWORD *)a1)
              goto LABEL_4;
            break;
          }
        }
      }
    }
  }
  sub_20C84F8A4(a1, a2, (__int128 *)a3);
}

uint64_t sub_20C84F7E0(uint64_t a1)
{
  _BYTE *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v2 - 11) = 1;
  *(_QWORD *)v2 = &unk_24C520F68;
  __dmb(0xBu);
  v2[8] = 0;
  *(_QWORD *)(a1 - 32) = v2;
  *((_QWORD *)v2 - 3) = 2;
  v3 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v2, 0x38uLL);
  *(_BYTE *)(v3 - 11) = 1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)v3 = &unk_24C551018;
  *(_QWORD *)(v3 + 8) = v4;
  v6 = v5 + ((unint64_t)(*(_QWORD *)(a1 + 8) - v5) >> 1);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(v3 + 40) = v7;
  *(_DWORD *)(v3 + 48) = 2;
  *(_BYTE *)(v3 + 52) = *(_BYTE *)(a1 + 52);
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v3 - 40))(*(_QWORD *)(v3 - 40), v3, v3 - 8);
}

void sub_20C84F8A4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __n128 v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD, _QWORD, __n128);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned __int8 v20[16];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  if (*((_QWORD *)a3 + 2) < *(_QWORD *)a3 - *((_QWORD *)a3 + 1) && *(_BYTE *)(a1 + 12))
  {
    *(_DWORD *)v20 = 0x10000;
    v21 = *a3;
    v22 = *((_QWORD *)a3 + 2);
    while (1)
    {
      v5 = sub_20C15C670(v20, *(unsigned __int8 *)(a1 + 12));
      v6 = *(_BYTE *)(*(_QWORD *)(a2 - 32) + 8);
      __dmb(0xBu);
      if ((v6 & 1) == 0)
        break;
      v14 = *(_BYTE *)(a1 + 12) + 1;
      *(_BYTE *)(a1 + 12) = v14;
      v13 = v20[2];
      if (v20[2] < 2u)
      {
        v7 = v20[0];
        if (v20[v20[0] + 3] >= v14
          || *((_QWORD *)&v21 + 3 * v20[0] + 2) >= *((_QWORD *)&v21 + 3 * v20[0]) - *((_QWORD *)&v21 + 3 * v20[0] + 1))
        {
          goto LABEL_6;
        }
      }
      else
      {
        sub_20C84FA9C(a2, (__int128 *)((char *)&v21 + 24 * v20[1]), v20[v20[1] + 3]);
        v13 = --v20[2];
        v20[1] = (v20[1] + 1) & 7;
      }
LABEL_13:
      if (!v13 || tbb::task_group_context::is_group_execution_cancelled(*(tbb::task_group_context **)(a2 - 56)))
        return;
    }
    v7 = v20[0];
LABEL_6:
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))v8;
    v11 = v8 + 8;
    v10 = *(_QWORD *)(v8 + 8);
    v12 = (_QWORD *)(*(_QWORD *)(v11 + 8) + (v10 >> 1));
    if ((v10 & 1) != 0)
      v9 = *(void (**)(_QWORD *, _QWORD, _QWORD, __n128))(*v12 + v9);
    v9(v12, *((_QWORD *)&v21 + 3 * v7 + 1), *((_QWORD *)&v21 + 3 * v7), v5);
    v13 = --v20[2];
    v20[0] = (v20[0] - 1) & 7;
    goto LABEL_13;
  }
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(void (**)(_QWORD *))v15;
  v18 = v15 + 8;
  v17 = *(_QWORD *)(v15 + 8);
  v19 = (_QWORD *)(*(_QWORD *)(v18 + 8) + (v17 >> 1));
  if ((v17 & 1) != 0)
    v16 = *(void (**)(_QWORD *))(*v19 + v16);
  v16(v19);
}

uint64_t sub_20C84FA9C(uint64_t a1, __int128 *a2, char a3)
{
  _BYTE *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (_BYTE *)tbb::internal::allocate_continuation_proxy::allocate((tbb::internal::allocate_continuation_proxy *)a1, 0x10uLL);
  *(v6 - 11) = 1;
  *(_QWORD *)v6 = &unk_24C520F68;
  __dmb(0xBu);
  v6[8] = 0;
  *(_QWORD *)(a1 - 32) = v6;
  *((_QWORD *)v6 - 3) = 2;
  v7 = tbb::internal::allocate_child_proxy::allocate((tbb::internal::allocate_child_proxy *)v6, 0x38uLL);
  *(_BYTE *)(v7 - 11) = 1;
  *(_QWORD *)v7 = &unk_24C551018;
  v8 = *a2;
  *(_QWORD *)(v7 + 24) = *((_QWORD *)a2 + 2);
  *(_OWORD *)(v7 + 8) = v8;
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40) >> 1;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v10;
  *(_DWORD *)(v7 + 48) = 2;
  *(_BYTE *)(v7 + 52) = *(_BYTE *)(a1 + 52) - a3;
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v7 - 40))(*(_QWORD *)(v7 - 40), v7, v7 - 8);
}

unsigned int *sub_20C84FB64(unsigned int *result, double *a2)
{
  float v2;
  float v3;
  unsigned int v4;
  unsigned int v5;
  float v6;
  float v7;
  __int16 v8;
  float v9;
  float v10;

  v2 = *a2;
  if (v2 < -1.0)
    v2 = -1.0;
  if (v2 <= 1.0)
    v3 = v2 * 511.0;
  else
    v3 = 511.0;
  v4 = llroundf(v3) & 0x3FF;
  v5 = *result & 0xFFFFFC00 | v4;
  *result = v5;
  v6 = a2[1];
  if (v6 < -1.0)
    v6 = -1.0;
  if (v6 <= 1.0)
    v7 = v6 * 511.0;
  else
    v7 = 511.0;
  v8 = llroundf(v7);
  *result = v5 & 0xFFF003FF | ((v8 & 0x3FF) << 10);
  v9 = a2[2];
  if (v9 < -1.0)
    v9 = -1.0;
  if (v9 <= 1.0)
    v10 = v9 * 511.0;
  else
    v10 = 511.0;
  *result = v4 & 0xC00003FF | ((llroundf(v10) & 0x3FF) << 20) | ((v8 & 0x3FF) << 10);
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::operator==(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && *(_QWORD *)(a1 + 4) == *(_QWORD *)(a2 + 4)
    && *(_QWORD *)(a1 + 12) == *(_QWORD *)(a2 + 12))
  {
    return pxrInternal__aapl__pxrReserved__::UsdSkelTopology::operator==(a1 + 24, a2 + 24);
  }
  else
  {
    return 0;
  }
}

{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  const void **v9;
  unsigned __int8 *v10;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || (*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8))
  {
    return 0;
  }
  v4 = *(unsigned __int8 *)(a1 + 39);
  v5 = *(char **)(a1 + 24);
  if ((v4 & 0x80u) == 0)
    v6 = *(unsigned __int8 *)(a1 + 39);
  else
    v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a2 + 39);
  v8 = (char)v7;
  if ((v7 & 0x80u) != 0)
    v7 = *(_QWORD *)(a2 + 24);
  if (v6 != v7)
    return 0;
  v9 = (const void **)(a1 + 16);
  if (v8 >= 0)
    v10 = (unsigned __int8 *)(a2 + 16);
  else
    v10 = *(unsigned __int8 **)(a2 + 16);
  if ((v4 & 0x80) != 0)
  {
    if (memcmp(*v9, v10, (size_t)v5))
      return 0;
  }
  else if (*(_BYTE *)(a1 + 39))
  {
    while (*(unsigned __int8 *)v9 == *v10)
    {
      v9 = (const void **)((char *)v9 + 1);
      ++v10;
      if (!--v4)
        goto LABEL_18;
    }
    return 0;
  }
LABEL_18:
  if ((*(_QWORD *)(a1 + 40) & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8))
    return 0;
  return pxrInternal__aapl__pxrReserved__::operator==((_QWORD **)(a1 + 48), (uint64_t *)(a2 + 48), v5);
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType::~HdGeomSubsetSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  void **v16;

  v16 = (void **)((char *)this + 40);
  sub_20BEEB2B8(&v16);
  v2 = *((_QWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 3);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 2);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v14 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
}

pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType::HdGeomSubsetSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int **v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v29;
  unsigned int *v30;
  unsigned int *v31;
  unsigned int *v32;
  unsigned int *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "type", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "indices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "typeFaceSet", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "typePointSet", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 4, "typeCurveSet", 0);
  v3 = *this;
  v29 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v29 = v4;
  }
  v6 = *v2;
  v30 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v30 = v7;
  }
  v9 = this[2];
  v31 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v31 = v10;
  }
  v12 = this[3];
  v32 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v32 = v13;
  }
  v15 = this[4];
  v33 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v33 = v16;
  }
  this[5] = 0;
  this[6] = 0;
  this[7] = 0;
  v18 = (unsigned int *)operator new(0x28uLL);
  v19 = 0;
  this[5] = v18;
  this[6] = v18;
  this[7] = v18 + 10;
  do
  {
    v20 = (&v29)[v19];
    *(_QWORD *)v18 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 2, v21));
      if ((v22 & 1) == 0)
        *(_QWORD *)v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v19;
    v18 += 2;
  }
  while (v19 != 5);
  v23 = (unsigned int **)&v34;
  this[6] = v18;
  do
  {
    v25 = (uint64_t)*--v23;
    v24 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
  }
  while (v23 != &v29);
  return (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)this;
}

void sub_20C84FF74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int v36;

  sub_20BEEB2B8(&a9);
  v22 = &a16;
  while (1)
  {
    v24 = *--v22;
    v23 = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    if (v22 == (uint64_t *)&a11)
    {
      if ((*v20 & 7) != 0)
      {
        v27 = (unsigned int *)(*v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      if ((*v19 & 7) != 0)
      {
        v29 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v30 = __ldxr(v29);
        while (__stlxr(v30 - 2, v29));
      }
      if ((*v18 & 7) != 0)
      {
        v31 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      if ((*v17 & 7) != 0)
      {
        v33 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if ((*v16 & 7) != 0)
      {
        v35 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v36 = __ldxr(v35);
        while (__stlxr(v36 - 2, v35));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::GetType(pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  v4 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
  if (!v4)
    v4 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
  v9 = *(unsigned int **)v4;
  if ((*(_QWORD *)v4 & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v9 = v5;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::GetIndices(pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
  if (!v4)
    v4 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E26A4((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v7;
  unint64_t v8;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17[2];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v17[0] = 0;
  v17[1] = 0;
  memset(v16, 0, sizeof(v16));
  v5 = &v18;
  if (*a1)
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
    if (!v7)
      v7 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
    sub_20BF32220(v17, v7);
    sub_20BDE881C(v16, a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  if (*a2)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
    if (!v9)
      v9 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
    sub_20BF32220(&v17[v8], (_QWORD *)v9 + 1);
    sub_20BDE881C(&v16[v8++], a2);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v8, v17, (uint64_t *)v16, &v15);
  *a3 = v15;
  for (i = 1; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v16[i]);
  do
  {
    v12 = *--v5;
    v11 = v12;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
  }
  while (v5 != v17);
}

void sub_20C850380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  char *v16;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;

  for (i = 16; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v20 = *((_QWORD *)v16 - 1);
    v16 -= 8;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v16 == &a16)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildTypeDataSource(pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v5;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *v7;
  unsigned __int8 v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;

  v5 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
  if (!v5)
    v5 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v5 + 2) & 0xFFFFFFFFFFFFFFF8))
  {
    v8 = atomic_load((unsigned __int8 *)&qword_25498E600);
    if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_25498E600))
    {
      sub_20C7EA9FC((uint64_t *)this, &qword_25498E5F0);
      __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498E5F0, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E600);
    }
    v9 = *(_QWORD *)algn_25498E5F8;
    *a2 = qword_25498E5F0;
    a2[1] = v9;
    if (v9)
    {
      v10 = (unint64_t *)(v9 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
  }
  else
  {
    v6 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
    if (!v6)
      v6 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 3) & 0xFFFFFFFFFFFFFFF8))
    {
      v12 = atomic_load((unsigned __int8 *)&qword_25498E618);
      if ((v12 & 1) == 0 && __cxa_guard_acquire(&qword_25498E618))
      {
        sub_20C7EA9FC((uint64_t *)this, &qword_25498E608);
        __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498E608, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498E618);
      }
      v13 = unk_25498E610;
      *a2 = qword_25498E608;
      a2[1] = v13;
      if (v13)
      {
        v14 = (unint64_t *)(v13 + 8);
        do
          v15 = __ldxr(v14);
        while (__stxr(v15 + 1, v14));
      }
    }
    else
    {
      v7 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
      if (!v7)
        v7 = sub_20C815BF0(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchemaTokens);
      if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v7 + 4) & 0xFFFFFFFFFFFFFFF8))
      {
        v16 = atomic_load((unsigned __int8 *)&qword_25498E630);
        if ((v16 & 1) == 0 && __cxa_guard_acquire(&qword_25498E630))
        {
          sub_20C7EA9FC((uint64_t *)this, &qword_25498E620);
          __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498E620, &dword_20BDBC000);
          __cxa_guard_release(&qword_25498E630);
        }
        v17 = *(_QWORD *)algn_25498E628;
        *a2 = qword_25498E620;
        a2[1] = v17;
        if (v17)
        {
          v18 = (unint64_t *)(v17 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
      }
      else
      {
        sub_20C7EA9FC((uint64_t *)this, &v20);
        *(_OWORD *)a2 = v20;
      }
    }
  }
}

void sub_20C85064C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E630);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetType(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::SetIndices(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, a2);
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType::~HdGeomSubsetsSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *this)
{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

{
  unsigned int *v2;
  unsigned int v3;
  void **v4;

  v4 = (void **)((char *)this + 8);
  sub_20BEEB2B8(&v4);
  if ((*(_QWORD *)this & 7) != 0)
  {
    v2 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
}

pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType::HdGeomSubsetsSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *this)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  _QWORD *v6;
  _QWORD *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v2 = (uint64_t *)pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "geomSubsets", 0);
  v3 = *v2;
  if ((*v2 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v3 &= 0xFFFFFFFFFFFFFFF8;
  }
  v2[1] = 0;
  v2[2] = 0;
  v2[3] = 0;
  v6 = operator new(8uLL);
  *((_QWORD *)this + 1) = v6;
  *((_QWORD *)this + 2) = v6;
  *v6 = v3;
  v7 = v6 + 1;
  *((_QWORD *)this + 3) = v6 + 1;
  if ((v3 & 7) != 0)
  {
    v8 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      *v6 &= 0xFFFFFFFFFFFFFFF8;
    *((_QWORD *)this + 2) = v7;
    do
      v10 = __ldxr(v8);
    while (__stlxr(v10 - 2, v8));
  }
  else
  {
    *((_QWORD *)this + 2) = v7;
  }
  return this;
}

void sub_20C850864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v13;
  unsigned int v14;

  v11 = v10;
  sub_20BEEB2B8(&a9);
  if ((v11 & 7) != 0)
  {
    v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  sub_20C96B3E4(v9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema::GetGeomSubsetNames@<X0>(pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = *(_QWORD *)this;
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 16))(result);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema::GetGeomSubset(pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema *this@<X0>, unsigned int **a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;

  v11 = *a2;
  if (((unint64_t)*a2 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)*a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v11 = v4;
  }
  sub_20C7E0698((uint64_t *)this, &v12);
  sub_20C7E0E2C(a3, &v12);
  v6 = v13;
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  if ((v11 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
}

void sub_20C850988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema::BuildRetained@<D0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  double result;
  __int128 v6;

  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(a1, a2, a3, &v6);
  result = *(double *)&v6;
  *a4 = v6;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *p_shared_owners;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *a1;
  if (!*a1)
  {
    v14 = 0;
    v15 = 0;
    sub_20C7E0E2C(a2, &v14);
    v8 = v15;
    if (!v15)
      return;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    goto LABEL_16;
  }
  if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens))
    sub_20C850B34(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v12, v3);
  sub_20C7E0B14((uint64_t)&v12, &v14);
  sub_20C7E0E2C(a2, &v14);
  v5 = v15;
  if (v15)
  {
    v6 = (unint64_t *)&v15->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
LABEL_16:
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

unint64_t pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchema *this)
{
  unint64_t result;

  result = atomic_load(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens);
  if (!result)
    return sub_20C850B34(&pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens);
  return result;
}

unint64_t sub_20C850B34(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *v2;
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *v3;
  unsigned int *v5;
  unsigned int v6;
  void **v8;

  v2 = sub_20C850BBC();
  v3 = v2;
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)v2, a1))
      return (unint64_t)v3;
  }
  __clrex();
  if (v2)
  {
    v8 = (void **)((char *)v2 + 8);
    sub_20BEEB2B8(&v8);
    if ((*(_QWORD *)v3 & 7) != 0)
    {
      v5 = (unsigned int *)(*(_QWORD *)v3 & 0xFFFFFFFFFFFFFFF8);
      do
        v6 = __ldxr(v5);
      while (__stlxr(v6 - 2, v5));
    }
    operator delete(v3);
  }
  return atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *sub_20C850BBC()
{
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType *)operator new(0x20uLL);
  pxrInternal__aapl__pxrReserved__::HdGeomSubsetsSchemaTokens_StaticTokenType::HdGeomSubsetsSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C850BE8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType::~HdImageShaderTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  void **v13;

  v13 = (void **)((char *)this + 32);
  sub_20BEEB2B8(&v13);
  v2 = *((_QWORD *)this + 3);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 1);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v11 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
}

pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType::HdImageShaderTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int **v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "enabled", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "priority", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "filePath", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "constants", 0);
  v3 = *this;
  v26 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v26 = v4;
  }
  v6 = *v2;
  v27 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v27 = v7;
  }
  v9 = this[2];
  v28 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v28 = v10;
  }
  v12 = this[3];
  v29 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v29 = v13;
  }
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  v15 = (unsigned int *)operator new(0x20uLL);
  v16 = 0;
  this[4] = v15;
  this[5] = v15;
  this[6] = v15 + 8;
  do
  {
    v17 = (&v26)[v16];
    *(_QWORD *)v15 = v17;
    if ((v17 & 7) != 0)
    {
      v18 = (unsigned int *)((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 2, v18));
      if ((v19 & 1) == 0)
        *(_QWORD *)v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v16;
    v15 += 2;
  }
  while (v16 != 4);
  v20 = (unsigned int **)&v30;
  this[5] = v15;
  do
  {
    v22 = (uint64_t)*--v20;
    v21 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stlxr(v24 - 2, v23));
    }
  }
  while (v20 != &v26);
  return (pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType *)this;
}

void sub_20C850ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;

  sub_20BEEB2B8(&a10);
  v21 = &a16;
  while (1)
  {
    v23 = *--v21;
    v22 = v23;
    if ((v23 & 7) != 0)
    {
      v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    if (v21 == (uint64_t *)&a12)
    {
      if ((*v19 & 7) != 0)
      {
        v26 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v27 = __ldxr(v26);
        while (__stlxr(v27 - 2, v26));
      }
      if ((*v18 & 7) != 0)
      {
        v28 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v29 = __ldxr(v28);
        while (__stlxr(v29 - 2, v28));
      }
      if ((*v17 & 7) != 0)
      {
        v30 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      if ((*v16 & 7) != 0)
      {
        v32 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v33 = __ldxr(v32);
        while (__stlxr(v33 - 2, v32));
      }
      _Unwind_Resume(a1);
    }
  }
}

double pxrInternal__aapl__pxrReserved__::HdImageShader::HdImageShader(pxrInternal__aapl__pxrReserved__::HdImageShader *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  pxrInternal__aapl__pxrReserved__::HdSprim *v2;
  double result;

  v2 = pxrInternal__aapl__pxrReserved__::HdSprim::HdSprim(this, a2);
  *(_QWORD *)v2 = off_24C551060;
  *((_BYTE *)v2 + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)v2 + 20) = 0u;
  *(_OWORD *)((char *)v2 + 36) = 0u;
  *((_DWORD *)v2 + 13) = 0;
  return result;
}

{
  pxrInternal__aapl__pxrReserved__::HdSprim *v2;
  double result;

  v2 = pxrInternal__aapl__pxrReserved__::HdSprim::HdSprim(this, a2);
  *(_QWORD *)v2 = off_24C551060;
  *((_BYTE *)v2 + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)v2 + 20) = 0u;
  *(_OWORD *)((char *)v2 + 36) = 0u;
  *((_DWORD *)v2 + 13) = 0;
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdImageShader::~HdImageShader(pxrInternal__aapl__pxrReserved__::HdImageShader *this)
{
  *(_QWORD *)this = off_24C551060;
  sub_20BF49F14((_QWORD ***)this + 6, 0);
  if (*((char *)this + 47) < 0)
    operator delete(*((void **)this + 3));
  pxrInternal__aapl__pxrReserved__::HdSprim::~HdSprim(this);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdImageShader::~HdImageShader(this);
  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShader::Sync(pxrInternal__aapl__pxrReserved__::HdImageShader *this, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *a2, pxrInternal__aapl__pxrReserved__::HdRenderParam *a3, unsigned int *a4)
{
  uint64_t result;
  int v8;
  unsigned int **v10;
  unsigned int **v11;
  const std::string *v12;
  unsigned int **v13;
  const void ****v14;
  uint64_t v16;
  int v17;
  char *v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  char v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  result = sub_20BEB59B0((uint64_t)&v16, (uint64_t)"hd", (uint64_t)"virtual void pxrInternal__aapl__pxrReserved__::HdImageShader::Sync(HdSceneDelegate *, HdRenderParam *, HdDirtyBits *)");
  if (a2
    || (v18 = "hd/imageShader.cpp",
        v19 = "Sync",
        v20 = 54,
        v21 = "virtual void pxrInternal__aapl__pxrReserved__::HdImageShader::Sync(HdSceneDelegate *, HdRenderParam *, HdDirtyBits *)",
        v22 = 0,
        result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v18, "sceneDelegate != nullptr", 0),
        (result & 1) != 0))
  {
    v8 = *a4;
    if ((*a4 & 1) != 0)
    {
      if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens))
        sub_20C851368(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      (*(void (**)(char **__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *))(*(_QWORD *)a2 + 120))(&v18, a2, (char *)this + 8);
      if (v19)
        *((_BYTE *)this + 16) = *(_BYTE *)sub_20BFB0910((pxrInternal__aapl__pxrReserved__::VtValue *)&v18);
      result = sub_20BF4C2D8((uint64_t)&v18);
    }
    if ((v8 & 2) != 0)
    {
      v10 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      if (!v10)
        v10 = sub_20C851368(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      (*(void (**)(char **__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *, unsigned int **))(*(_QWORD *)a2 + 120))(&v18, a2, (char *)this + 8, v10 + 1);
      if (v19)
        *((_DWORD *)this + 5) = *(_DWORD *)sub_20BFB1BA8((pxrInternal__aapl__pxrReserved__::VtValue *)&v18);
      result = sub_20BF4C2D8((uint64_t)&v18);
    }
    if ((v8 & 4) != 0)
    {
      v11 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      if (!v11)
        v11 = sub_20C851368(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      (*(void (**)(char **__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *, unsigned int **))(*(_QWORD *)a2 + 120))(&v18, a2, (char *)this + 8, v11 + 2);
      if (v19)
      {
        v12 = (const std::string *)sub_20BFB2D9C((pxrInternal__aapl__pxrReserved__::VtValue *)&v18);
        std::string::operator=((std::string *)this + 1, v12);
      }
      result = sub_20BF4C2D8((uint64_t)&v18);
    }
    if ((v8 & 8) != 0)
    {
      v13 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      if (!v13)
        v13 = sub_20C851368(&pxrInternal__aapl__pxrReserved__::HdImageShaderTokens);
      (*(void (**)(char **__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *, unsigned int **))(*(_QWORD *)a2 + 120))(&v18, a2, (char *)this + 8, v13 + 3);
      if (v19)
      {
        v14 = (const void ****)sub_20BF4D3FC((pxrInternal__aapl__pxrReserved__::VtValue *)&v18);
        pxrInternal__aapl__pxrReserved__::VtDictionary::operator=((const void ****)this + 6, v14);
      }
      result = sub_20BF4C2D8((uint64_t)&v18);
    }
    *a4 = 0;
  }
  while (v17--)
    result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v16);
  return result;
}

void sub_20C8512E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BEB24F4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShader::GetInitialDirtyBitsMask(pxrInternal__aapl__pxrReserved__::HdImageShader *this)
{
  return 15;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShader::GetEnabled(pxrInternal__aapl__pxrReserved__::HdImageShader *this)
{
  return *((unsigned __int8 *)this + 16);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShader::GetPriority(pxrInternal__aapl__pxrReserved__::HdImageShader *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShader::GetFilePath(pxrInternal__aapl__pxrReserved__::HdImageShader *this)
{
  return (uint64_t)this + 24;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShader::GetConstants(pxrInternal__aapl__pxrReserved__::HdImageShader *this)
{
  return (uint64_t)this + 48;
}

unsigned int **sub_20C851368(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C8513B0();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType::~HdImageShaderTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C8513B0()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x38uLL);
  pxrInternal__aapl__pxrReserved__::HdImageShaderTokens_StaticTokenType::HdImageShaderTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C8513DC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType::~HdImageShaderSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  void **v16;

  v16 = (void **)((char *)this + 40);
  sub_20BEEB2B8(&v16);
  v2 = *((_QWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 3);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 2);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v14 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
}

pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType::HdImageShaderSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int **v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v29;
  unsigned int *v30;
  unsigned int *v31;
  unsigned int *v32;
  unsigned int *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "imageShader", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "enabled", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "priority", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "filePath", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 4, "constants", 0);
  v3 = *this;
  v29 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v29 = v4;
  }
  v6 = *v2;
  v30 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v30 = v7;
  }
  v9 = this[2];
  v31 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v31 = v10;
  }
  v12 = this[3];
  v32 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v32 = v13;
  }
  v15 = this[4];
  v33 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v33 = v16;
  }
  this[5] = 0;
  this[6] = 0;
  this[7] = 0;
  v18 = (unsigned int *)operator new(0x28uLL);
  v19 = 0;
  this[5] = v18;
  this[6] = v18;
  this[7] = v18 + 10;
  do
  {
    v20 = (&v29)[v19];
    *(_QWORD *)v18 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 2, v21));
      if ((v22 & 1) == 0)
        *(_QWORD *)v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v19;
    v18 += 2;
  }
  while (v19 != 5);
  v23 = (unsigned int **)&v34;
  this[6] = v18;
  do
  {
    v25 = (uint64_t)*--v23;
    v24 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
  }
  while (v23 != &v29);
  return (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)this;
}

void sub_20C851724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int v36;

  sub_20BEEB2B8(&a9);
  v22 = &a16;
  while (1)
  {
    v24 = *--v22;
    v23 = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    if (v22 == (uint64_t *)&a11)
    {
      if ((*v20 & 7) != 0)
      {
        v27 = (unsigned int *)(*v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      if ((*v19 & 7) != 0)
      {
        v29 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v30 = __ldxr(v29);
        while (__stlxr(v30 - 2, v29));
      }
      if ((*v18 & 7) != 0)
      {
        v31 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      if ((*v17 & 7) != 0)
      {
        v33 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if ((*v16 & 7) != 0)
      {
        v35 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v36 = __ldxr(v35);
        while (__stlxr(v36 - 2, v35));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetEnabled(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v4)
    v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9794((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetPriority(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v4)
    v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C8519BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C8519BC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C85246C((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetFilePath(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v4)
    v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 3);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C840A94((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetConstants(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!v4)
    v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 4);
  v13 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v13 = v6;
  }
  sub_20C7E0698((uint64_t *)this, &v14);
  sub_20C82D07C(a2, &v14);
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if ((v13 & 7) != 0)
  {
    v11 = (unsigned int *)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
}

void sub_20C851BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, _OWORD *a5@<X8>)
{
  _OWORD *v9;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v11;
  unint64_t v12;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  __int128 v21;
  _OWORD v22[4];
  _OWORD v23[2];
  _QWORD v24[2];

  v24[1] = *MEMORY[0x24BDAC8D0];
  memset(v23, 0, sizeof(v23));
  memset(v22, 0, sizeof(v22));
  v9 = v24;
  if (*a1)
  {
    v11 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v11)
      v11 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    sub_20BF32220(v23, (_QWORD *)v11 + 1);
    sub_20BDE881C(v22, a1);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  if (*a2)
  {
    v13 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v13)
      v13 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    sub_20BF32220((_QWORD *)((unint64_t)v23 | (8 * v12)), (_QWORD *)v13 + 2);
    sub_20BDE881C(&v22[v12++], a2);
  }
  if (*a3)
  {
    v14 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v14)
      v14 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    sub_20BF32220((_QWORD *)v23 + v12, (_QWORD *)v14 + 3);
    sub_20BDE881C(&v22[v12++], a3);
  }
  if (*a4)
  {
    v15 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v15)
      v15 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    sub_20BF32220((_QWORD *)v23 + v12, (_QWORD *)v15 + 4);
    sub_20BDE881C(&v22[v12++], a4);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v12, (uint64_t *)v23, (uint64_t *)v22, &v21);
  *a5 = v21;
  for (i = 3; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v22[i]);
  do
  {
    v18 = *((_QWORD *)v9 - 1);
    v9 = (_OWORD *)((char *)v9 - 8);
    v17 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stlxr(v20 - 2, v19));
    }
  }
  while (v9 != v23);
}

void sub_20C851E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  char *v19;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;

  for (i = 48; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v23 = *((_QWORD *)v19 - 1);
    v19 -= 8;
    v22 = v23;
    if ((v23 & 7) != 0)
    {
      v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    if (v19 == &a19)
      _Unwind_Resume(a1);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::Builder::SetEnabled(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::Builder::SetPriority(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::Builder::SetFilePath(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::Builder::SetConstants(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 48), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, (uint64_t *)this + 6, a2);
}

void pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens))
      sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C852078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  if (!result)
    return sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E670);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E670))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    if (!v3)
      v3 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E638, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E638, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E670);
  }
  return &unk_25498E638;
}

void sub_20C852154(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E670);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetEnabledLocator(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E6B0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)__cxa_guard_acquire(&qword_25498E6B0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v4)
        v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E638, (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)((char *)v4 + 8), dword_25498E678);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E678, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E6B0);
    }
  }
  return dword_25498E678;
}

void sub_20C852214(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E6B0);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetPriorityLocator(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E6F0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)__cxa_guard_acquire(&qword_25498E6F0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v4)
        v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E638, (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)((char *)v4 + 16), dword_25498E6B8);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E6B8, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E6F0);
    }
  }
  return dword_25498E6B8;
}

void sub_20C8522D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E6F0);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetFilePathLocator(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E730);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)__cxa_guard_acquire(&qword_25498E730);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v4)
        v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E638, (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)((char *)v4 + 24), dword_25498E6F8);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E6F8, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E730);
    }
  }
  return dword_25498E6F8;
}

void sub_20C852394(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E730);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetConstantsLocator(pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E770);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchema *)__cxa_guard_acquire(&qword_25498E770);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdImageShaderSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      if (!v4)
        v4 = sub_20C80A000(&pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E638, (pxrInternal__aapl__pxrReserved__::HdImageShaderSchemaTokens_StaticTokenType *)((char *)v4 + 32), dword_25498E738);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E738, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E770);
    }
  }
  return dword_25498E738;
}

void sub_20C852454(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E770);
  _Unwind_Resume(a1);
}

void *sub_20C85246C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54D150, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType::~HdInstanceCategoriesSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType::HdInstanceCategoriesSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "instanceCategories", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "categoriesValues", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)this;
}

void sub_20C8526D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::GetCategoriesValues(pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
  if (!v4)
    v4 = sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C82D994((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::BuildRetained(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *v4;
  unint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  __int128 v8;
  uint64_t v9[2];
  uint64_t v10[2];

  v10[1] = *MEMORY[0x24BDAC8D0];
  v9[1] = 0;
  v10[0] = 0;
  v9[0] = 0;
  if (*a1)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    if (!v4)
      v4 = sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    sub_20BF32220(v10, (_QWORD *)v4 + 1);
    sub_20BDE881C(v9, a1);
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v5, v10, v9, &v8);
  *a2 = v8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v9);
  if ((v10[0] & 7) != 0)
  {
    v6 = (unsigned int *)(v10[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
}

void sub_20C852918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  unsigned int *v14;
  unsigned int v15;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens))
      sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C852A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
  if (!result)
    return sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E7B0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E7B0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    if (!v3)
      v3 = sub_20C80A440(&pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E778, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E778, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E7B0);
  }
  return &unk_25498E778;
}

void sub_20C852B58(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E7B0);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdInstanceCategoriesSchema::Builder::SetCategoriesValues(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType::~HdInstancedBySchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  void **v10;

  v10 = (void **)((char *)this + 24);
  sub_20BEEB2B8(&v10);
  v2 = *((_QWORD *)this + 2);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType::HdInstancedBySchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int **v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "instancedBy", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "paths", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "prototypeRoots", 0);
  v3 = *this;
  v23 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v23 = v4;
  }
  v6 = *v2;
  v24 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v24 = v7;
  }
  v9 = this[2];
  v25 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v25 = v10;
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  v12 = (unsigned int *)operator new(0x18uLL);
  v13 = 0;
  this[3] = v12;
  this[4] = v12;
  this[5] = v12 + 6;
  do
  {
    v14 = (&v23)[v13];
    *(_QWORD *)v12 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        *(_QWORD *)v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    v12 += 2;
  }
  while (v13 != 3);
  v17 = (unsigned int **)&v26;
  this[4] = v12;
  do
  {
    v19 = (uint64_t)*--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  while (v17 != &v23);
  return (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)this;
}

void sub_20C852DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;

  sub_20BEEB2B8(&a9);
  v18 = &a14;
  while (1)
  {
    v20 = *--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v18 == (uint64_t *)&a11)
    {
      if ((*v16 & 7) != 0)
      {
        v23 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      if ((*v15 & 7) != 0)
      {
        v25 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stlxr(v26 - 2, v25));
      }
      if ((*v14 & 7) != 0)
      {
        v27 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetPaths(pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
  if (!v4)
    v4 = sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C852F7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C852F7C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C85350C((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetPrototypeRoots(pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
  if (!v4)
    v4 = sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C852F7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v5;
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v7;
  unint64_t v8;
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17[2];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v17[0] = 0;
  v17[1] = 0;
  memset(v16, 0, sizeof(v16));
  v5 = &v18;
  if (*a1)
  {
    v7 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    if (!v7)
      v7 = sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    sub_20BF32220(v17, (_QWORD *)v7 + 1);
    sub_20BDE881C(v16, a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  if (*a2)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    if (!v9)
      v9 = sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    sub_20BF32220(&v17[v8], (_QWORD *)v9 + 2);
    sub_20BDE881C(&v16[v8++], a2);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v8, v17, (uint64_t *)v16, &v15);
  *a3 = v15;
  for (i = 1; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v16[i]);
  do
  {
    v12 = *--v5;
    v11 = v12;
    if ((v12 & 7) != 0)
    {
      v13 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v14 = __ldxr(v13);
      while (__stlxr(v14 - 2, v13));
    }
  }
  while (v5 != v17);
}

void sub_20C853240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  char *v16;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;

  for (i = 16; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v20 = *((_QWORD *)v16 - 1);
    v16 -= 8;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v16 == &a16)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens))
      sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C8533C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
  if (!result)
    return sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdInstancedBySchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E7F0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E7F0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    if (!v3)
      v3 = sub_20C80A4C8(&pxrInternal__aapl__pxrReserved__::HdInstancedBySchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E7B8, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E7B8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E7F0);
  }
  return &unk_25498E7B8;
}

void sub_20C8534A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E7F0);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder::SetPaths(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder::SetPrototypeRoots(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancedBySchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, a2);
}

void *sub_20C85350C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54C868, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType::~HdInstanceIndicesSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  void **v10;

  v10 = (void **)((char *)this + 24);
  sub_20BEEB2B8(&v10);
  v2 = *((_QWORD *)this + 2);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 1);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v8 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType::HdInstanceIndicesSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int **v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "instancer", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "prototypeIndex", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "instanceIndices", 0);
  v3 = *this;
  v23 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v23 = v4;
  }
  v6 = *v2;
  v24 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v24 = v7;
  }
  v9 = this[2];
  v25 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v25 = v10;
  }
  this[3] = 0;
  this[4] = 0;
  this[5] = 0;
  v12 = (unsigned int *)operator new(0x18uLL);
  v13 = 0;
  this[3] = v12;
  this[4] = v12;
  this[5] = v12 + 6;
  do
  {
    v14 = (&v23)[v13];
    *(_QWORD *)v12 = v14;
    if ((v14 & 7) != 0)
    {
      v15 = (unsigned int *)((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v16 = __ldxr(v15);
      while (__stxr(v16 + 2, v15));
      if ((v16 & 1) == 0)
        *(_QWORD *)v12 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v13;
    v12 += 2;
  }
  while (v13 != 3);
  v17 = (unsigned int **)&v26;
  this[4] = v12;
  do
  {
    v19 = (uint64_t)*--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
  }
  while (v17 != &v23);
  return (pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType *)this;
}

void sub_20C8537DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;

  sub_20BEEB2B8(&a9);
  v18 = &a14;
  while (1)
  {
    v20 = *--v18;
    v19 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    if (v18 == (uint64_t *)&a11)
    {
      if ((*v16 & 7) != 0)
      {
        v23 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v24 = __ldxr(v23);
        while (__stlxr(v24 - 2, v23));
      }
      if ((*v15 & 7) != 0)
      {
        v25 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v26 = __ldxr(v25);
        while (__stlxr(v26 - 2, v25));
      }
      if ((*v14 & 7) != 0)
      {
        v27 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::GetInstancer(pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
  if (!v4)
    v4 = sub_20C853D94(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
  v9 = *v4;
  if (((unint64_t)*v4 & 7) != 0)
  {
    v5 = (unsigned int *)((unint64_t)*v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 2, v5));
    if ((v6 & 1) == 0)
      v9 = v5;
  }
  sub_20C7F80A0((uint64_t *)this, a2);
  if ((v9 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::GetPrototypeIndex(pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
  if (!v4)
    v4 = sub_20C853D94(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
  v5 = v4[1];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C8519BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::GetInstanceIndices(pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
  if (!v4)
    v4 = sub_20C853D94(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
  v5 = v4[2];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E26A4((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v7;
  unsigned int **v9;
  unint64_t v10;
  unsigned int **v11;
  unsigned int **v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  __int128 v18;
  _OWORD v19[3];
  uint64_t v20[3];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  v7 = &v21;
  if (*a1)
  {
    v9 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
    if (!v9)
      v9 = sub_20C853D94(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
    sub_20BF32220(v20, v9);
    sub_20BDE881C(v19, a1);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  if (*a2)
  {
    v11 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
    if (!v11)
      v11 = sub_20C853D94(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
    sub_20BF32220(&v20[v10], v11 + 1);
    sub_20BDE881C(&v19[v10++], a2);
  }
  if (*a3)
  {
    v12 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
    if (!v12)
      v12 = sub_20C853D94(&pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens);
    sub_20BF32220(&v20[v10], v12 + 2);
    sub_20BDE881C(&v19[v10++], a3);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v10, v20, (uint64_t *)v19, &v18);
  *a4 = v18;
  for (i = 2; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v19[i]);
  do
  {
    v15 = *--v7;
    v14 = v15;
    if ((v15 & 7) != 0)
    {
      v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
  }
  while (v7 != v20);
}

void sub_20C853CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char *v17;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;

  for (i = 32; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v21 = *((_QWORD *)v17 - 1);
    v17 -= 8;
    v20 = v21;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    if (v17 == &a17)
      _Unwind_Resume(a1);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::Builder::SetInstancer(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::Builder::SetPrototypeIndex(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::Builder::SetInstanceIndices(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, a2);
}

unsigned int **sub_20C853D94(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C853DDC();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType::~HdInstanceIndicesSchemaTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C853DDC()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x30uLL);
  pxrInternal__aapl__pxrReserved__::HdInstanceIndicesSchemaTokens_StaticTokenType::HdInstanceIndicesSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C853E08(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstancer *pxrInternal__aapl__pxrReserved__::HdInstancer::HdInstancer(pxrInternal__aapl__pxrReserved__::HdInstancer *this, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  *(_QWORD *)this = off_24C5510B0;
  *((_QWORD *)this + 1) = a2;
  sub_20BFD6E54((_DWORD *)this + 4, a3);
  sub_20BFD6EA4((_DWORD *)this + 5, (_DWORD *)a3 + 1);
  *((_QWORD *)this + 3) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)this + 6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)this + 7);
  *((_QWORD *)this + 4) = 850045863;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  return this;
}

void pxrInternal__aapl__pxrReserved__::HdInstancer::~HdInstancer(pxrInternal__aapl__pxrReserved__::HdInstancer *this)
{
  _DWORD *v2;

  *(_QWORD *)this = off_24C5510B0;
  v2 = (_DWORD *)((char *)this + 28);
  std::mutex::~mutex((std::mutex *)((char *)this + 32));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C((_DWORD *)this + 6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)this + 5);
  sub_20BFD265C((_DWORD *)this + 4);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdInstancer::~HdInstancer(this);
  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstancer::GetInstancerNumLevels(pxrInternal__aapl__pxrReserved__::HdInstancer *this, pxrInternal__aapl__pxrReserved__::HdRenderIndex *a2, const pxrInternal__aapl__pxrReserved__::HdRprim *a3)
{
  uint64_t v5;
  uint64_t Instancer;
  uint64_t *v7;
  pxrInternal__aapl__pxrReserved__::SdfPath *v8;
  _QWORD v10[4];
  char v11;
  int v12;
  int v13;

  sub_20BFD6E54(&v12, (_DWORD *)a2 + 2);
  sub_20BFD6EA4(&v13, (_DWORD *)a2 + 3);
  v5 = 0;
  while (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v12))
  {
    Instancer = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetInstancer(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    if (Instancer)
    {
      v7 = (uint64_t *)(Instancer + 24);
    }
    else
    {
      v10[0] = "hd/instancer.cpp";
      v10[1] = "GetInstancerNumLevels";
      v10[2] = 56;
      v10[3] = "static int pxrInternal__aapl__pxrReserved__::HdInstancer::GetInstancerNumLevels(HdRenderIndex &, const HdRprim &)";
      v11 = 0;
      v8 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v10, "instancer", 0);
      v7 = pxrInternal__aapl__pxrReserved__::SdfPath::EmptyPath(v8);
    }
    sub_20C01A074(&v12, v7);
    sub_20C01A0C8(&v13, (_DWORD *)v7 + 1);
    v5 = (v5 + 1);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  sub_20BFD265C(&v12);
  return v5;
}

void sub_20C854024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdInstancer::GetBuiltinPrimvarNames(pxrInternal__aapl__pxrReserved__::HdInstancer *this)
{
  _BYTE *v1;
  unsigned __int8 v2;
  _QWORD *v3;
  unsigned __int8 v4;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  __guard *v27;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;
  pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  v1 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::HD_USE_DEPRECATED_INSTANCER_PRIMVAR_NAMES);
  if (!v1)
  {
    pxrInternal__aapl__pxrReserved__::Tf_InitializeEnvSetting<BOOL>((uint64_t)&pxrInternal__aapl__pxrReserved__::HD_USE_DEPRECATED_INSTANCER_PRIMVAR_NAMES);
    v1 = (_BYTE *)atomic_load((unint64_t *)pxrInternal__aapl__pxrReserved__::HD_USE_DEPRECATED_INSTANCER_PRIMVAR_NAMES);
  }
  if (*v1)
  {
    v2 = atomic_load((unsigned __int8 *)&qword_25498E810);
    if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25498E810))
    {
      v6 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v6)
        v6 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v7 = *((_QWORD *)v6 + 10);
      v49 = v7;
      if ((v7 & 7) != 0)
      {
        v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 2, v8));
        if ((v9 & 1) == 0)
          v49 &= 0xFFFFFFFFFFFFFFF8;
      }
      v10 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v10)
        v10 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v11 = *((_QWORD *)v10 + 11);
      v50 = v11;
      if ((v11 & 7) != 0)
      {
        v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stxr(v13 + 2, v12));
        if ((v13 & 1) == 0)
          v50 &= 0xFFFFFFFFFFFFFFF8;
      }
      v14 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v14)
        v14 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v15 = *((_QWORD *)v14 + 12);
      v51 = v15;
      if ((v15 & 7) != 0)
      {
        v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stxr(v17 + 2, v16));
        if ((v17 & 1) == 0)
          v51 &= 0xFFFFFFFFFFFFFFF8;
      }
      v18 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v18)
        v18 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v19 = *((_QWORD *)v18 + 13);
      v52 = v19;
      if ((v19 & 7) != 0)
      {
        v20 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stxr(v21 + 2, v20));
        if ((v21 & 1) == 0)
          v52 &= 0xFFFFFFFFFFFFFFF8;
      }
      sub_20C374970(qword_25498E7F8, &v49, 4uLL);
      v22 = &v53;
      do
      {
        v24 = *--v22;
        v23 = v24;
        if ((v24 & 7) != 0)
        {
          v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
          do
            v26 = __ldxr(v25);
          while (__stlxr(v26 - 2, v25));
        }
      }
      while (v22 != &v49);
      v27 = &qword_25498E810;
      v3 = qword_25498E7F8;
LABEL_79:
      __cxa_atexit((void (*)(void *))sub_20C1984B4, v3, &dword_20BDBC000);
      __cxa_guard_release(v27);
      return v3;
    }
    return qword_25498E7F8;
  }
  else
  {
    v4 = atomic_load((unsigned __int8 *)&qword_25498E830);
    if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25498E830))
    {
      v28 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v28)
        v28 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v29 = *((_QWORD *)v28 + 6);
      v49 = v29;
      if ((v29 & 7) != 0)
      {
        v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 2, v30));
        if ((v31 & 1) == 0)
          v49 &= 0xFFFFFFFFFFFFFFF8;
      }
      v32 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v32)
        v32 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v33 = *((_QWORD *)v32 + 7);
      v50 = v33;
      if ((v33 & 7) != 0)
      {
        v34 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 2, v34));
        if ((v35 & 1) == 0)
          v50 &= 0xFFFFFFFFFFFFFFF8;
      }
      v36 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v36)
        v36 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v37 = *((_QWORD *)v36 + 8);
      v51 = v37;
      if ((v37 & 7) != 0)
      {
        v38 = (unsigned int *)(v37 & 0xFFFFFFFFFFFFFFF8);
        do
          v39 = __ldxr(v38);
        while (__stxr(v39 + 2, v38));
        if ((v39 & 1) == 0)
          v51 &= 0xFFFFFFFFFFFFFFF8;
      }
      v40 = (pxrInternal__aapl__pxrReserved__::HdInstancerTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      if (!v40)
        v40 = sub_20C7F221C(&pxrInternal__aapl__pxrReserved__::HdInstancerTokens);
      v41 = *((_QWORD *)v40 + 9);
      v52 = v41;
      if ((v41 & 7) != 0)
      {
        v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
        do
          v43 = __ldxr(v42);
        while (__stxr(v43 + 2, v42));
        if ((v43 & 1) == 0)
          v52 &= 0xFFFFFFFFFFFFFFF8;
      }
      sub_20C374970(qword_25498E818, &v49, 4uLL);
      v44 = &v53;
      do
      {
        v46 = *--v44;
        v45 = v46;
        if ((v46 & 7) != 0)
        {
          v47 = (unsigned int *)(v45 & 0xFFFFFFFFFFFFFFF8);
          do
            v48 = __ldxr(v47);
          while (__stlxr(v48 - 2, v47));
        }
      }
      while (v44 != &v49);
      v27 = &qword_25498E830;
      v3 = qword_25498E818;
      goto LABEL_79;
    }
    return qword_25498E818;
  }
}

void sub_20C854488(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E830);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdInstancer::_SyncInstancerAndParents(pxrInternal__aapl__pxrReserved__::HdInstancer *this, pxrInternal__aapl__pxrReserved__::HdRenderIndex *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  uint64_t RenderDelegate;
  uint64_t v6;
  uint64_t Instancer;
  _QWORD v9[4];
  char v10;
  int v11;
  int v12;

  RenderDelegate = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetRenderDelegate(this);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)RenderDelegate + 48))(RenderDelegate);
  sub_20BFD6E54(&v11, a2);
  sub_20BFD6EA4(&v12, (_DWORD *)a2 + 1);
  while (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v11))
  {
    Instancer = pxrInternal__aapl__pxrReserved__::HdRenderIndex::GetInstancer(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11);
    if (!Instancer)
    {
      v9[0] = "hd/instancer.cpp";
      v9[1] = "_SyncInstancerAndParents";
      v9[2] = 107;
      v9[3] = "static void pxrInternal__aapl__pxrReserved__::HdInstancer::_SyncInstancerAndParents(HdRenderIndex &, const SdfPath &)";
      v10 = 0;
      if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v9, "instancer", 0) & 1) == 0)
        break;
    }
    std::mutex::lock((std::mutex *)(Instancer + 32));
    LODWORD(v9[0]) = 0;
    LODWORD(v9[0]) = pxrInternal__aapl__pxrReserved__::HdChangeTracker::GetInstancerDirtyBits((pxrInternal__aapl__pxrReserved__::HdInstancer *)((char *)this + 416), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11);
    if (LODWORD(v9[0]))
    {
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(*(_QWORD *)Instancer + 16))(Instancer, *(_QWORD *)(Instancer + 8), v6, v9);
      pxrInternal__aapl__pxrReserved__::HdChangeTracker::MarkInstancerClean((pxrInternal__aapl__pxrReserved__::HdInstancer *)((char *)this + 416), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, 0);
    }
    sub_20C01A074(&v11, (_DWORD *)(Instancer + 24));
    sub_20C01A0C8(&v12, (_DWORD *)(Instancer + 28));
    std::mutex::unlock((std::mutex *)(Instancer + 32));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  return sub_20BFD265C(&v11);
}

void sub_20C8546EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdInstancer::_UpdateInstancer(pxrInternal__aapl__pxrReserved__::HdInstancer *this, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  _DWORD *result;
  pxrInternal__aapl__pxrReserved__::HdChangeTracker *v6;
  uint64_t v7;

  result = (_DWORD *)pxrInternal__aapl__pxrReserved__::HdChangeTracker::IsInstancerDirty((pxrInternal__aapl__pxrReserved__::HdChangeTracker *)*(unsigned int *)a3, (pxrInternal__aapl__pxrReserved__::HdInstancer *)((char *)this + 16), a3);
  if ((_DWORD)result)
  {
    (*(void (**)(uint64_t *__return_ptr, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *, char *))(*(_QWORD *)a2 + 232))(&v7, a2, (char *)this + 16);
    if (v7 != *((_QWORD *)this + 3))
    {
      v6 = (pxrInternal__aapl__pxrReserved__::HdChangeTracker *)(*((_QWORD *)a2 + 1) + 416);
      if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)this + 6))
        pxrInternal__aapl__pxrReserved__::HdChangeTracker::RemoveInstancerInstancerDependency(v6, (pxrInternal__aapl__pxrReserved__::HdInstancer *)((char *)this + 24), (pxrInternal__aapl__pxrReserved__::HdInstancer *)((char *)this + 16));
      if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v7))
        pxrInternal__aapl__pxrReserved__::HdChangeTracker::AddInstancerInstancerDependency(v6, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v7, (pxrInternal__aapl__pxrReserved__::HdInstancer *)((char *)this + 16));
      sub_20C01A074((int *)this + 6, &v7);
      sub_20C01A0C8((int *)this + 7, (_DWORD *)&v7 + 1);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v7 + 1);
    return sub_20BFD265C(&v7);
  }
  return result;
}

void sub_20C854808(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstancer::GetInitialDirtyBitsMask(pxrInternal__aapl__pxrReserved__::HdInstancer *this)
{
  return 197184;
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType::~HdInstancerTopologySchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  void **v16;

  v16 = (void **)((char *)this + 40);
  sub_20BEEB2B8(&v16);
  v2 = *((_QWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 3);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 2);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v14 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
}

pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType::HdInstancerTopologySchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int **v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v29;
  unsigned int *v30;
  unsigned int *v31;
  unsigned int *v32;
  unsigned int *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "instancerTopology", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "prototypes", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "instanceIndices", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "mask", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 4, "instanceLocations", 0);
  v3 = *this;
  v29 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v29 = v4;
  }
  v6 = *v2;
  v30 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v30 = v7;
  }
  v9 = this[2];
  v31 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v31 = v10;
  }
  v12 = this[3];
  v32 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v32 = v13;
  }
  v15 = this[4];
  v33 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v33 = v16;
  }
  this[5] = 0;
  this[6] = 0;
  this[7] = 0;
  v18 = (unsigned int *)operator new(0x28uLL);
  v19 = 0;
  this[5] = v18;
  this[6] = v18;
  this[7] = v18 + 10;
  do
  {
    v20 = (&v29)[v19];
    *(_QWORD *)v18 = v20;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 2, v21));
      if ((v22 & 1) == 0)
        *(_QWORD *)v18 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v19;
    v18 += 2;
  }
  while (v19 != 5);
  v23 = (unsigned int **)&v34;
  this[6] = v18;
  do
  {
    v25 = (uint64_t)*--v23;
    v24 = v25;
    if ((v25 & 7) != 0)
    {
      v26 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
      do
        v27 = __ldxr(v26);
      while (__stlxr(v27 - 2, v26));
    }
  }
  while (v23 != &v29);
  return (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)this;
}

void sub_20C854B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int v36;

  sub_20BEEB2B8(&a9);
  v22 = &a16;
  while (1)
  {
    v24 = *--v22;
    v23 = v24;
    if ((v24 & 7) != 0)
    {
      v25 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v26 = __ldxr(v25);
      while (__stlxr(v26 - 2, v25));
    }
    if (v22 == (uint64_t *)&a11)
    {
      if ((*v20 & 7) != 0)
      {
        v27 = (unsigned int *)(*v20 & 0xFFFFFFFFFFFFFFF8);
        do
          v28 = __ldxr(v27);
        while (__stlxr(v28 - 2, v27));
      }
      if ((*v19 & 7) != 0)
      {
        v29 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v30 = __ldxr(v29);
        while (__stlxr(v30 - 2, v29));
      }
      if ((*v18 & 7) != 0)
      {
        v31 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v32 = __ldxr(v31);
        while (__stlxr(v32 - 2, v31));
      }
      if ((*v17 & 7) != 0)
      {
        v33 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if ((*v16 & 7) != 0)
      {
        v35 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v36 = __ldxr(v35);
        while (__stlxr(v36 - 2, v35));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::ComputeInstanceIndicesForProto(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t i;
  uint64_t v20;
  char *v21;
  std::__shared_weak_count *v22;
  unint64_t *p_shared_owners;
  unint64_t v24;
  int *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  __int128 v44;
  __int128 v45;
  int *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  __int128 v49;
  __int128 v50;
  int *v51;
  __int128 v52;
  __int128 v53;
  int *v54;
  __int128 v55;
  __int128 v56;
  int *v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  _OWORD v60[2];
  uint64_t v61;

  *(_QWORD *)(a3 + 32) = 0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  v61 = 0;
  memset(v60, 0, sizeof(v60));
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetInstanceIndices(this, &v58);
  if (pxrInternal__aapl__pxrReserved__::HdVectorSchema::IsDefined((pxrInternal__aapl__pxrReserved__::HdVectorSchema *)&v58))
  {
    v57 = 0;
    v55 = 0u;
    v56 = 0u;
    pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetPrototypes(this, &v49);
    if ((_QWORD)v49)
    {
      (*(void (**)(__int128 *__return_ptr, float))(*(_QWORD *)v49 + 32))(&v52, 0.0);
      sub_20C809764(&v55);
      v55 = v52;
      v56 = v53;
      v52 = 0u;
      v53 = 0u;
      v57 = v54;
      v54 = 0;
      sub_20C809764(&v52);
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)&v49 + 1);
    if (*((_QWORD *)&v49 + 1))
    {
      v7 = (unint64_t *)(*((_QWORD *)&v49 + 1) + 8);
      do
        v8 = __ldaxr(v7);
      while (__stlxr(v8 - 1, v7));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
    if ((_QWORD)v55)
    {
      v9 = 0;
      v10 = 0;
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v57[v9]))
        {
          LODWORD(v52) = v10;
          sub_20C59A0AC((uint64_t)v60, &v52);
        }
        ++v10;
        v9 += 2;
      }
      while (v10 < (unint64_t)v55);
    }
    v54 = 0;
    v52 = 0u;
    v53 = 0u;
    pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetMask(this, &v44);
    if ((_QWORD)v44)
    {
      (*(void (**)(__int128 *__return_ptr, float))(*(_QWORD *)v44 + 32))(&v49, 0.0);
      sub_20BF5618C((uint64_t)&v52);
      v52 = v49;
      v53 = v50;
      v49 = 0u;
      v50 = 0u;
      v54 = v51;
      v51 = 0;
      sub_20BF5618C((uint64_t)&v49);
    }
    v13 = (std::__shared_weak_count *)*((_QWORD *)&v44 + 1);
    if (*((_QWORD *)&v44 + 1))
    {
      v14 = (unint64_t *)(*((_QWORD *)&v44 + 1) + 8);
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
      }
    }
    sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v60, v11, v12);
    v16 = v61;
    sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v60, v17, v18);
    for (i = v61 + 4 * *(_QWORD *)&v60[0]; v16 != i; v16 += 4)
    {
      v51 = 0;
      v49 = 0u;
      v50 = 0u;
      sub_20C7E26A4(&v58, &v47);
      if (v47)
      {
        (*(void (**)(__int128 *__return_ptr, float))(*(_QWORD *)v47 + 32))(&v44, 0.0);
        sub_20BF5618C((uint64_t)&v49);
        v49 = v44;
        v50 = v45;
        v44 = 0u;
        v45 = 0u;
        v51 = v46;
        v46 = 0;
        sub_20BF5618C((uint64_t)&v44);
      }
      v22 = v48;
      if (v48)
      {
        p_shared_owners = (unint64_t *)&v48->__shared_owners_;
        do
          v24 = __ldaxr(p_shared_owners);
        while (__stlxr(v24 - 1, p_shared_owners));
        if (!v24)
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
        }
      }
      if ((_QWORD)v52)
      {
        sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v49, v20, v21);
        v25 = v51;
        sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v49, v26, v27);
        v30 = &v51[v49];
        while (v25 != v30)
        {
          LODWORD(v44) = 0;
          v31 = *v25;
          LODWORD(v44) = v31;
          if ((int)v31 >= (int)v52
            || (sub_20C001998((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v52, v28, v29), *((_BYTE *)v54 + v31)))
          {
            sub_20C59A7A4(a3, &v44);
          }
          ++v25;
        }
      }
      else
      {
        v32 = *(_QWORD *)a3;
        if (*(_QWORD *)a3)
        {
          v33 = v49;
          sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v20, v21);
          LODWORD(v47) = 0;
          *(_QWORD *)&v44 = &v47;
          sub_20BF64D74((unint64_t *)a3, v33 + v32, (_DWORD **)&v44);
          if (v33)
          {
            v36 = 0;
            v37 = 4 * v32;
            do
            {
              sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v49, v34, v35);
              v38 = v51[v36];
              sub_20BF64FC4((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)a3, v39, v40);
              *(_DWORD *)(*(_QWORD *)(a3 + 32) + v37 + 4 * v36++) = v38;
            }
            while (v33 != v36);
          }
        }
        else
        {
          sub_20C03150C(a3, &v49);
        }
      }
      sub_20BF5618C((uint64_t)&v49);
    }
    sub_20BF5618C((uint64_t)&v52);
    sub_20C809764(&v55);
  }
  v41 = v59;
  if (v59)
  {
    v42 = (unint64_t *)&v59->__shared_owners_;
    do
      v43 = __ldaxr(v42);
    while (__stlxr(v43 - 1, v42));
    if (!v43)
    {
      ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
      std::__shared_weak_count::__release_weak(v41);
    }
  }
  sub_20BF5618C((uint64_t)v60);
}

void sub_20C855074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;
  uint64_t v30;

  sub_20BF5618C((uint64_t)&a17);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  sub_20BF5618C((uint64_t)&a23);
  sub_20C809764(&a29);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v30 - 144));
  sub_20BF5618C(v30 - 128);
  sub_20BF5618C(v29);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetInstanceIndices(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v4)
    v4 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v16 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v16 = v6;
  }
  sub_20C82D994((uint64_t *)this, &v17);
  v8 = v18;
  *a2 = v17;
  a2[1] = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    v11 = v18;
    if (v18)
    {
      v12 = (unint64_t *)&v18->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if ((v16 & 7) != 0)
  {
    v14 = (unsigned int *)((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetPrototypes(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v4)
    v4 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C852F7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetMask(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v4)
    v4 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 3);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C855440((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C855440(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C855ACC((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetInstanceLocations(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!v4)
    v4 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 4);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C852F7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, _OWORD *a5@<X8>)
{
  _OWORD *v9;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v11;
  unint64_t v12;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  __int128 v21;
  _OWORD v22[4];
  _OWORD v23[2];
  _QWORD v24[2];

  v24[1] = *MEMORY[0x24BDAC8D0];
  memset(v23, 0, sizeof(v23));
  memset(v22, 0, sizeof(v22));
  v9 = v24;
  if (*a1)
  {
    v11 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v11)
      v11 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    sub_20BF32220(v23, (_QWORD *)v11 + 1);
    sub_20BDE881C(v22, a1);
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  if (*a2)
  {
    v13 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v13)
      v13 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    sub_20BF32220((_QWORD *)((unint64_t)v23 | (8 * v12)), (_QWORD *)v13 + 2);
    sub_20BDE881C(&v22[v12++], a2);
  }
  if (*a3)
  {
    v14 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v14)
      v14 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    sub_20BF32220((_QWORD *)v23 + v12, (_QWORD *)v14 + 3);
    sub_20BDE881C(&v22[v12++], a3);
  }
  if (*a4)
  {
    v15 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v15)
      v15 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    sub_20BF32220((_QWORD *)v23 + v12, (_QWORD *)v15 + 4);
    sub_20BDE881C(&v22[v12++], a4);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v12, (uint64_t *)v23, (uint64_t *)v22, &v21);
  *a5 = v21;
  for (i = 3; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v22[i]);
  do
  {
    v18 = *((_QWORD *)v9 - 1);
    v9 = (_OWORD *)((char *)v9 - 8);
    v17 = v18;
    if ((v18 & 7) != 0)
    {
      v19 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v20 = __ldxr(v19);
      while (__stlxr(v20 - 2, v19));
    }
  }
  while (v9 != v23);
}

void sub_20C8557A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  char *v19;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;

  for (i = 48; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v23 = *((_QWORD *)v19 - 1);
    v19 -= 8;
    v22 = v23;
    if ((v23 & 7) != 0)
    {
      v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    if (v19 == &a19)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens))
      sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C85592C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  if (!result)
    return sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E870);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E870))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    if (!v3)
      v3 = sub_20C809824(&pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E838, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E838, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E870);
  }
  return &unk_25498E838;
}

void sub_20C855A08(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E870);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::Builder::SetPrototypes(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::Builder::SetInstanceIndices(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::Builder::SetMask(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::Builder::SetInstanceLocations(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 48), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstancerTopologySchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, (uint64_t *)this + 6, a2);
}

void *sub_20C855ACC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C5510E8, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType::~HdInstanceSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  void **v13;

  v13 = (void **)((char *)this + 32);
  sub_20BEEB2B8(&v13);
  v2 = *((_QWORD *)this + 3);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 2);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 1);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v11 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
}

pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType::HdInstanceSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int **v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int *v26;
  unsigned int *v27;
  unsigned int *v28;
  unsigned int *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "instance", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "instancer", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 2, "prototypeIndex", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this + 3, "instanceIndex", 0);
  v3 = *this;
  v26 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v26 = v4;
  }
  v6 = *v2;
  v27 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v27 = v7;
  }
  v9 = this[2];
  v28 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v28 = v10;
  }
  v12 = this[3];
  v29 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)((unint64_t)v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v29 = v13;
  }
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  v15 = (unsigned int *)operator new(0x20uLL);
  v16 = 0;
  this[4] = v15;
  this[5] = v15;
  this[6] = v15 + 8;
  do
  {
    v17 = (&v26)[v16];
    *(_QWORD *)v15 = v17;
    if ((v17 & 7) != 0)
    {
      v18 = (unsigned int *)((unint64_t)v17 & 0xFFFFFFFFFFFFFFF8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 2, v18));
      if ((v19 & 1) == 0)
        *(_QWORD *)v15 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v16;
    v15 += 2;
  }
  while (v16 != 4);
  v20 = (unsigned int **)&v30;
  this[5] = v15;
  do
  {
    v22 = (uint64_t)*--v20;
    v21 = v22;
    if ((v22 & 7) != 0)
    {
      v23 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
      do
        v24 = __ldxr(v23);
      while (__stlxr(v24 - 2, v23));
    }
  }
  while (v20 != &v26);
  return (pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType *)this;
}

void sub_20C855E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;

  sub_20BEEB2B8(&a10);
  v21 = &a16;
  while (1)
  {
    v23 = *--v21;
    v22 = v23;
    if ((v23 & 7) != 0)
    {
      v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    if (v21 == (uint64_t *)&a12)
    {
      if ((*v19 & 7) != 0)
      {
        v26 = (unsigned int *)(*v19 & 0xFFFFFFFFFFFFFFF8);
        do
          v27 = __ldxr(v26);
        while (__stlxr(v27 - 2, v26));
      }
      if ((*v18 & 7) != 0)
      {
        v28 = (unsigned int *)(*v18 & 0xFFFFFFFFFFFFFFF8);
        do
          v29 = __ldxr(v28);
        while (__stlxr(v29 - 2, v28));
      }
      if ((*v17 & 7) != 0)
      {
        v30 = (unsigned int *)(*v17 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      if ((*v16 & 7) != 0)
      {
        v32 = (unsigned int *)(*v16 & 0xFFFFFFFFFFFFFFF8);
        do
          v33 = __ldxr(v32);
        while (__stlxr(v33 - 2, v32));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchema::GetInstancer(pxrInternal__aapl__pxrReserved__::HdInstanceSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  if (!v4)
    v4 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  v5 = v4[1];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7F80A0((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchema::GetPrototypeIndex(pxrInternal__aapl__pxrReserved__::HdInstanceSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  if (!v4)
    v4 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  v5 = v4[2];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C8519BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchema::GetInstanceIndex(pxrInternal__aapl__pxrReserved__::HdInstanceSchema *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int **v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  if (!v4)
    v4 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  v5 = v4[3];
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C8519BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t *v7;
  unsigned int **v9;
  unint64_t v10;
  unsigned int **v11;
  unsigned int **v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  __int128 v18;
  _OWORD v19[3];
  uint64_t v20[3];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  v7 = &v21;
  if (*a1)
  {
    v9 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    if (!v9)
      v9 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    sub_20BF32220(v20, v9 + 1);
    sub_20BDE881C(v19, a1);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  if (*a2)
  {
    v11 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    if (!v11)
      v11 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    sub_20BF32220(&v20[v10], v11 + 2);
    sub_20BDE881C(&v19[v10++], a2);
  }
  if (*a3)
  {
    v12 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    if (!v12)
      v12 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    sub_20BF32220(&v20[v10], v12 + 3);
    sub_20BDE881C(&v19[v10++], a3);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v10, v20, (uint64_t *)v19, &v18);
  *a4 = v18;
  for (i = 2; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v19[i]);
  do
  {
    v15 = *--v7;
    v14 = v15;
    if ((v15 & 7) != 0)
    {
      v16 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
  }
  while (v7 != v20);
}

void sub_20C856310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char *v17;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;

  for (i = 32; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a11 + i));
  while (1)
  {
    v21 = *((_QWORD *)v17 - 1);
    v17 -= 8;
    v20 = v21;
    if ((v21 & 7) != 0)
    {
      v22 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    if (v17 == &a17)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens))
      sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C856494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

unsigned int **pxrInternal__aapl__pxrReserved__::HdInstanceSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdInstanceSchema *this)
{
  unsigned int **result;

  result = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  if (!result)
    return sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdInstanceSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdInstanceSchema *this)
{
  unsigned __int8 v1;
  unsigned int **v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E8B0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E8B0))
  {
    v3 = (unsigned int **)atomic_load(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    if (!v3)
      v3 = sub_20C856608(&pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E878, (const pxrInternal__aapl__pxrReserved__::TfToken *)v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E878, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E8B0);
  }
  return &unk_25498E878;
}

void sub_20C856570(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E8B0);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdInstanceSchema::Builder::SetInstancer(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstanceSchema::Builder::SetPrototypeIndex(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdInstanceSchema::Builder::SetInstanceIndex(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdInstanceSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdInstanceSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdInstanceSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, a2);
}

unsigned int **sub_20C856608(unint64_t *a1)
{
  unsigned int **result;
  void *v4;

  result = sub_20C856650();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType::~HdInstanceSchemaTokens_StaticTokenType((pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType *)result);
    operator delete(v4);
  }
  return (unsigned int **)atomic_load(a1);
}

unsigned int **sub_20C856650()
{
  unsigned int **v0;

  v0 = (unsigned int **)operator new(0x38uLL);
  pxrInternal__aapl__pxrReserved__::HdInstanceSchemaTokens_StaticTokenType::HdInstanceSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C85667C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType::~HdIntegratorSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int v6;
  void **v7;

  v7 = (void **)((char *)this + 16);
  sub_20BEEB2B8(&v7);
  v2 = *((_QWORD *)this + 1);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v5 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
}

pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType::HdIntegratorSchemaTokens_StaticTokenType(unsigned int **this)
{
  unsigned int **v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int **v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v20;
  unsigned int *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (unsigned int **)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "integrator", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "resource", 0);
  v3 = *this;
  v20 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)((unint64_t)v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v20 = v4;
  }
  v6 = *v2;
  v21 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v21 = v7;
  }
  this[2] = 0;
  this[3] = 0;
  this[4] = 0;
  v9 = (unsigned int *)operator new(0x10uLL);
  v10 = 0;
  this[2] = v9;
  this[3] = v9;
  this[4] = v9 + 4;
  do
  {
    v11 = (&v20)[v10];
    *(_QWORD *)v9 = v11;
    if ((v11 & 7) != 0)
    {
      v12 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 2, v12));
      if ((v13 & 1) == 0)
        *(_QWORD *)v9 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v10;
    v9 += 2;
  }
  while (v10 != 2);
  v14 = (unsigned int **)&v22;
  this[3] = v9;
  do
  {
    v16 = (uint64_t)*--v14;
    v15 = v16;
    if ((v16 & 7) != 0)
    {
      v17 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
  }
  while (v14 != &v20);
  return (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)this;
}

void sub_20C856890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  unsigned int v25;

  sub_20BEEB2B8(&a10);
  v17 = &a14;
  while (1)
  {
    v19 = *--v17;
    v18 = v19;
    if ((v19 & 7) != 0)
    {
      v20 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
      do
        v21 = __ldxr(v20);
      while (__stlxr(v21 - 2, v20));
    }
    if (v17 == (uint64_t *)&a12)
    {
      if ((*v15 & 7) != 0)
      {
        v22 = (unsigned int *)(*v15 & 0xFFFFFFFFFFFFFFF8);
        do
          v23 = __ldxr(v22);
        while (__stlxr(v23 - 2, v22));
      }
      if ((*v14 & 7) != 0)
      {
        v24 = (unsigned int *)(*v14 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      _Unwind_Resume(a1);
    }
  }
}

void pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetResource(pxrInternal__aapl__pxrReserved__::HdIntegratorSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v4 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  if (!v4)
    v4 = sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v13 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v13 = v6;
  }
  sub_20C7E0698((uint64_t *)this, &v14);
  sub_20C7E0E2C(a2, &v14);
  v8 = v15;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  if ((v13 & 7) != 0)
  {
    v11 = (unsigned int *)((unint64_t)v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
}

void sub_20C856A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  unsigned int *v4;
  unsigned int v5;
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  if ((a3 & 7) != 0)
  {
    v4 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::BuildRetained(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v4;
  unint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  __int128 v8;
  uint64_t v9[2];
  uint64_t v10[2];

  v10[1] = *MEMORY[0x24BDAC8D0];
  v9[1] = 0;
  v10[0] = 0;
  v9[0] = 0;
  if (*a1)
  {
    v4 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
    if (!v4)
      v4 = sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
    sub_20BF32220(v10, (_QWORD *)v4 + 1);
    sub_20BDE881C(v9, a1);
    v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v5, v10, v9, &v8);
  *a2 = v8;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v9);
  if ((v10[0] & 7) != 0)
  {
    v6 = (unsigned int *)(v10[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
}

void sub_20C856B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  unsigned int *v14;
  unsigned int v15;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *p_shared_owners;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v3 = *a1;
  if (!*a1)
  {
    v14 = 0;
    v15 = 0;
    sub_20C7E0E2C(a2, &v14);
    v8 = v15;
    if (!v15)
      return;
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    goto LABEL_16;
  }
  if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens))
    sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v12, v3);
  sub_20C7E0B14((uint64_t)&v12, &v14);
  sub_20C7E0E2C(a2, &v14);
  v5 = v15;
  if (v15)
  {
    v6 = (unint64_t *)&v15->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
LABEL_16:
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdIntegratorSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  if (!result)
    return sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdIntegratorSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E8F0);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E8F0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
    if (!v3)
      v3 = sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E8B8, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E8B8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E8F0);
  }
  return &unk_25498E8B8;
}

void sub_20C856D3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E8F0);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetResourceLocator(pxrInternal__aapl__pxrReserved__::HdIntegratorSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E930);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchema *)__cxa_guard_acquire(&qword_25498E930);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
      if (!v4)
        v4 = sub_20C80A550(&pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E8B8, (pxrInternal__aapl__pxrReserved__::HdIntegratorSchemaTokens_StaticTokenType *)((char *)v4 + 8), dword_25498E8F8);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E8F8, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E930);
    }
  }
  return dword_25498E8F8;
}

void sub_20C856DFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E930);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdIntegratorSchema::Builder::SetResource(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::HdLazyContainerDataSource(_QWORD *a1, uint64_t a2)
{
  *a1 = off_24C551110;
  sub_20BE9E6E8((uint64_t)(a1 + 1), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_20C856E70(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase *v1;

  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::~HdLazyContainerDataSource(pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *this)
{
  pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *v2;
  uint64_t v3;

  *(_QWORD *)this = off_24C551110;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *)((char *)this + 40));
  v2 = (pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *)*((_QWORD *)this + 4);
  if (v2 == (pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *)((char *)this + 8))
  {
    v3 = 4;
    v2 = (pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *)((char *)this + 8);
    goto LABEL_5;
  }
  if (v2)
  {
    v3 = 5;
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)v2 + 8 * v3))();
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceBase::~HdDataSourceBase(this);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::~HdLazyContainerDataSource(this);
  operator delete(v1);
}

void pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::GetNames(pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::_GetSrc(this, (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v7);
  v3 = v7;
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
  v4 = v8;
  if (!v8)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v8->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
  {
LABEL_7:
    if (v3)
      return;
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  if (!v3)
  {
LABEL_8:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

void sub_20C856F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::_GetSrc(pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *this@<X0>, pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;

  v4 = (uint64_t *)((char *)this + 40);
  sub_20C806934((_QWORD *)this + 5, a2);
  if (!*(_QWORD *)a2)
  {
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(a2);
    v5 = *((_QWORD *)this + 4);
    if (!v5)
      sub_20BE9E974();
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
    sub_20C7FCAAC(v4, (uint64_t *)a2);
  }
}

void sub_20C85701C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v1;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::Get(pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource *this@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;

  pxrInternal__aapl__pxrReserved__::HdLazyContainerDataSource::_GetSrc(this, (pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v9);
  v5 = v9;
  if (v9)
    (*(void (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::TfToken *))(*(_QWORD *)v9 + 24))(v9, a2);
  v6 = v10;
  if (!v10)
    goto LABEL_7;
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
LABEL_7:
    if (v5)
      return;
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  if (!v5)
  {
LABEL_8:
    *a3 = 0;
    a3[1] = 0;
  }
}

void sub_20C8570D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType::~HdLegacyDisplayStyleSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int v30;
  void **v31;

  v31 = (void **)((char *)this + 80);
  sub_20BEEB2B8(&v31);
  v2 = *((_QWORD *)this + 9);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 8);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 7);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 6);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  v14 = *((_QWORD *)this + 5);
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  v17 = *((_QWORD *)this + 4);
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  v20 = *((_QWORD *)this + 3);
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stlxr(v22 - 2, v21));
  }
  v23 = *((_QWORD *)this + 2);
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  v26 = *((_QWORD *)this + 1);
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stlxr(v28 - 2, v27));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v29 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
}

pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType::HdLegacyDisplayStyleSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *this)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "displayStyle", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v2, "refineLevel", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "flatShadingEnabled", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "displacementEnabled", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "occludedSelectionShowsThrough", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "pointsShadingEnabled", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "materialIsFinal", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "shadingStyle", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "reprSelector", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "cullStyle", 0);
  v3 = *(_QWORD *)this;
  v44 = v3;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v44 &= 0xFFFFFFFFFFFFFFF8;
  }
  v6 = *v2;
  v45 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      v45 &= 0xFFFFFFFFFFFFFFF8;
  }
  v9 = *((_QWORD *)this + 2);
  v46 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v46 &= 0xFFFFFFFFFFFFFFF8;
  }
  v12 = *((_QWORD *)this + 3);
  v47 = v12;
  if ((v12 & 7) != 0)
  {
    v13 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 2, v13));
    if ((v14 & 1) == 0)
      v47 &= 0xFFFFFFFFFFFFFFF8;
  }
  v15 = *((_QWORD *)this + 4);
  v48 = v15;
  if ((v15 & 7) != 0)
  {
    v16 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 2, v16));
    if ((v17 & 1) == 0)
      v48 &= 0xFFFFFFFFFFFFFFF8;
  }
  v18 = *((_QWORD *)this + 5);
  v49 = v18;
  if ((v18 & 7) != 0)
  {
    v19 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 2, v19));
    if ((v20 & 1) == 0)
      v49 &= 0xFFFFFFFFFFFFFFF8;
  }
  v21 = *((_QWORD *)this + 6);
  v50 = v21;
  if ((v21 & 7) != 0)
  {
    v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 2, v22));
    if ((v23 & 1) == 0)
      v50 &= 0xFFFFFFFFFFFFFFF8;
  }
  v24 = *((_QWORD *)this + 7);
  v51 = v24;
  if ((v24 & 7) != 0)
  {
    v25 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 2, v25));
    if ((v26 & 1) == 0)
      v51 &= 0xFFFFFFFFFFFFFFF8;
  }
  v27 = *((_QWORD *)this + 8);
  v52 = v27;
  if ((v27 & 7) != 0)
  {
    v28 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 2, v28));
    if ((v29 & 1) == 0)
      v52 &= 0xFFFFFFFFFFFFFFF8;
  }
  v30 = *((_QWORD *)this + 9);
  v53 = v30;
  if ((v30 & 7) != 0)
  {
    v31 = (unsigned int *)(v30 & 0xFFFFFFFFFFFFFFF8);
    do
      v32 = __ldxr(v31);
    while (__stxr(v32 + 2, v31));
    if ((v32 & 1) == 0)
      v53 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  v33 = operator new(0x50uLL);
  v34 = 0;
  *((_QWORD *)this + 10) = v33;
  *((_QWORD *)this + 11) = v33;
  *((_QWORD *)this + 12) = v33 + 10;
  do
  {
    v35 = *(&v44 + v34);
    *v33 = v35;
    if ((v35 & 7) != 0)
    {
      v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
      do
        v37 = __ldxr(v36);
      while (__stxr(v37 + 2, v36));
      if ((v37 & 1) == 0)
        *v33 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v34;
    ++v33;
  }
  while (v34 != 10);
  v38 = &v54;
  *((_QWORD *)this + 11) = v33;
  do
  {
    v40 = *--v38;
    v39 = v40;
    if ((v40 & 7) != 0)
    {
      v41 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
      do
        v42 = __ldxr(v41);
      while (__stlxr(v42 - 2, v41));
    }
  }
  while (v38 != &v44);
  return this;
}

void sub_20C85766C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, void **a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int *v49;
  unsigned int v50;
  unsigned int *v51;
  unsigned int v52;
  unsigned int *v53;
  unsigned int v54;
  unsigned int *v55;
  unsigned int v56;

  sub_20BEEB2B8(&a10);
  v32 = (char *)&a22;
  while (1)
  {
    v34 = *((_QWORD *)v32 - 1);
    v32 -= 8;
    v33 = v34;
    if ((v34 & 7) != 0)
    {
      v35 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
      do
        v36 = __ldxr(v35);
      while (__stlxr(v36 - 2, v35));
    }
    if (v32 == &a12)
    {
      if ((*v31 & 7) != 0)
      {
        v37 = (unsigned int *)(*v31 & 0xFFFFFFFFFFFFFFF8);
        do
          v38 = __ldxr(v37);
        while (__stlxr(v38 - 2, v37));
      }
      if ((*v30 & 7) != 0)
      {
        v39 = (unsigned int *)(*v30 & 0xFFFFFFFFFFFFFFF8);
        do
          v40 = __ldxr(v39);
        while (__stlxr(v40 - 2, v39));
      }
      if ((*v29 & 7) != 0)
      {
        v41 = (unsigned int *)(*v29 & 0xFFFFFFFFFFFFFFF8);
        do
          v42 = __ldxr(v41);
        while (__stlxr(v42 - 2, v41));
      }
      if ((*v28 & 7) != 0)
      {
        v43 = (unsigned int *)(*v28 & 0xFFFFFFFFFFFFFFF8);
        do
          v44 = __ldxr(v43);
        while (__stlxr(v44 - 2, v43));
      }
      if ((*v27 & 7) != 0)
      {
        v45 = (unsigned int *)(*v27 & 0xFFFFFFFFFFFFFFF8);
        do
          v46 = __ldxr(v45);
        while (__stlxr(v46 - 2, v45));
      }
      if ((*v26 & 7) != 0)
      {
        v47 = (unsigned int *)(*v26 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if ((*v25 & 7) != 0)
      {
        v49 = (unsigned int *)(*v25 & 0xFFFFFFFFFFFFFFF8);
        do
          v50 = __ldxr(v49);
        while (__stlxr(v50 - 2, v49));
      }
      if ((*v24 & 7) != 0)
      {
        v51 = (unsigned int *)(*v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v52 = __ldxr(v51);
        while (__stlxr(v52 - 2, v51));
      }
      if ((*v23 & 7) != 0)
      {
        v53 = (unsigned int *)(*v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v54 = __ldxr(v53);
        while (__stlxr(v54 - 2, v53));
      }
      if ((*v22 & 7) != 0)
      {
        v55 = (unsigned int *)(*v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v56 = __ldxr(v55);
        while (__stlxr(v56 - 2, v55));
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_20C857830()
{
  JUMPOUT(0x20C857808);
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetRefineLevel(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C8519BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetFlatShadingEnabled(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9794((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDisplacementEnabled(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 3);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9794((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetOccludedSelectionShowsThrough(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 4);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9794((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetPointsShadingEnabled(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 5);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9794((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetMaterialIsFinal(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 6);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9794((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetShadingStyle(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 7);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetReprSelector(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 8);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C857E7C((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void sub_20C857E7C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;

  v3 = *a1;
  if (v3)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 24))(&v7);
    sub_20C85891C((uint64_t)&v7, a2);
    v4 = v8;
    if (v8)
    {
      p_shared_owners = (unint64_t *)&v8->__shared_owners_;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      if (!v6)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetCullStyle(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!v4)
    v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 9);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, _OWORD *a9@<X8>, uint64_t *a10)
{
  _OWORD *v16;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v18;
  unint64_t v19;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v20;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v21;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v22;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v24;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v25;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v26;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v27;
  uint64_t i;
  uint64_t v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  __int128 v35;
  _OWORD v36[9];
  _OWORD v37[4];
  uint64_t v38;
  _QWORD v39[3];

  v39[1] = *MEMORY[0x24BDAC8D0];
  v38 = 0;
  memset(v37, 0, sizeof(v37));
  memset(v36, 0, sizeof(v36));
  v16 = v39;
  if (*a1)
  {
    v18 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v18)
      v18 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220(v37, (_QWORD *)v18 + 1);
    sub_20BDE881C(v36, a1);
    v19 = 1;
  }
  else
  {
    v19 = 0;
  }
  if (*a2)
  {
    v20 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v20)
      v20 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)((unint64_t)v37 | (8 * v19)), (_QWORD *)v20 + 2);
    sub_20BDE881C(&v36[v19++], a2);
  }
  if (*a3)
  {
    v21 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v21)
      v21 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v21 + 3);
    sub_20BDE881C(&v36[v19++], a3);
  }
  if (*a4)
  {
    v22 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v22)
      v22 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v22 + 4);
    sub_20BDE881C(&v36[v19++], a4);
  }
  if (*a5)
  {
    v23 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v23)
      v23 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v23 + 5);
    sub_20BDE881C(&v36[v19++], a5);
  }
  if (*a6)
  {
    v24 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v24)
      v24 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v24 + 6);
    sub_20BDE881C(&v36[v19++], a6);
  }
  if (*a7)
  {
    v25 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v25)
      v25 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v25 + 7);
    sub_20BDE881C(&v36[v19++], a7);
  }
  if (*a8)
  {
    v26 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v26)
      v26 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v26 + 8);
    sub_20BDE881C(&v36[v19++], a8);
  }
  if (*a10)
  {
    v27 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v27)
      v27 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    sub_20BF32220((_QWORD *)v37 + v19, (_QWORD *)v27 + 9);
    sub_20BDE881C(&v36[v19++], a10);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v19, (uint64_t *)v37, (uint64_t *)v36, &v35);
  *a9 = v35;
  for (i = 8; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v36[i]);
  do
  {
    v30 = *((_QWORD *)v16 - 1);
    v16 = (_OWORD *)((char *)v16 - 8);
    v29 = v30;
    if ((v30 & 7) != 0)
    {
      v31 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
  }
  while (v16 != v37);
}

void sub_20C858380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  char *v31;
  uint64_t i;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;

  for (i = 128; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a13 + i));
  while (1)
  {
    v35 = *((_QWORD *)v31 - 1);
    v31 -= 8;
    v34 = v35;
    if ((v35 & 7) != 0)
    {
      v36 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
      do
        v37 = __ldxr(v36);
      while (__stlxr(v37 - 2, v36));
    }
    if (v31 == &a31)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens))
      sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C858504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  if (!result)
    return sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v3;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E970);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498E970))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    if (!v3)
      v3 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E938, v3);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E938, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498E970);
  }
  return &unk_25498E938;
}

void sub_20C8585E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E970);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetReprSelectorLocator(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E9B0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *)__cxa_guard_acquire(&qword_25498E9B0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
      if (!v4)
        v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E938, (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)((char *)v4 + 64), dword_25498E978);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E978, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E9B0);
    }
  }
  return dword_25498E978;
}

void sub_20C8586A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E9B0);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetCullStyleLocator(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *v3;
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498E9F0);
  if ((v1 & 1) == 0)
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema *)__cxa_guard_acquire(&qword_25498E9F0);
    if ((_DWORD)v3)
    {
      pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::GetDefaultLocator(v3);
      v4 = (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
      if (!v4)
        v4 = sub_20C809DE0(&pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens);
      pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::Append((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E938, (pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchemaTokens_StaticTokenType *)((char *)v4 + 72), dword_25498E9B8);
      __cxa_atexit((void (*)(void *))sub_20C7E0C54, dword_25498E9B8, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498E9F0);
    }
  }
  return dword_25498E9B8;
}

void sub_20C858760(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498E9F0);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetRefineLevel(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetFlatShadingEnabled(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetDisplacementEnabled(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetOccludedSelectionShowsThrough(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 48), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetPointsShadingEnabled(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 64), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetMaterialIsFinal(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 80), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetShadingStyle(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 96), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetReprSelector(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 112), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::SetCullStyle(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 128), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLegacyDisplayStyleSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, (uint64_t *)this + 6, (uint64_t *)this + 8, (uint64_t *)this + 10, (uint64_t *)this + 12, (uint64_t *)this + 14, a2, (uint64_t *)this + 16);
}

void *sub_20C85891C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
    && (result = __dynamic_cast(result, (const struct __class_type_info *)&unk_24C54BBE0, (const struct __class_type_info *)&unk_24C54D230, 0)) != 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex::AddLegacyPrim(pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, unsigned int **a3, pxrInternal__aapl__pxrReserved__::HdSceneDelegate *a4)
{
  unint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  char *v16;
  uint64_t v17;
  char *v18;
  pxrInternal__aapl__pxrReserved__::HdSceneDelegate *v19;
  char **v20;
  char v21;
  int v22;
  int v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v19 = a4;
  sub_20BFD6E54(&v22, a2);
  sub_20BFD6EA4(&v23, (_DWORD *)a2 + 1);
  v7 = (unint64_t)*a3;
  v24 = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      v24 &= 0xFFFFFFFFFFFFFFF8;
  }
  sub_20C858BB8(a2, a3, &v19, &v15);
  v25 = v15;
  v15 = 0uLL;
  v17 = 0;
  v18 = 0;
  v16 = 0;
  v20 = &v16;
  v21 = 0;
  v16 = (char *)operator new(0x20uLL);
  v17 = (uint64_t)v16;
  v18 = v16 + 32;
  v17 = sub_20C8593F8((uint64_t)&v18, (uint64_t)&v22, (uint64_t)&v26, (uint64_t)v16);
  (*(void (**)(pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex *, char **))(*(_QWORD *)this + 40))(this, &v16);
  v20 = &v16;
  sub_20C8595EC((void ***)&v20);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v25);
  if ((v24 & 7) != 0)
  {
    v10 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
  sub_20BFD265C(&v22);
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20C858B3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20C858BB8@<X0>(_DWORD *a1@<X0>, unsigned int **a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  void *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v15;
  int v16;
  int v17;

  v8 = operator new(0x58uLL);
  sub_20BFD6E54(&v16, a1);
  sub_20BFD6EA4(&v17, a1 + 1);
  v9 = *a2;
  v15 = v9;
  if ((v9 & 7) != 0)
  {
    v10 = (unsigned int *)((unint64_t)v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 2, v10));
    if ((v11 & 1) == 0)
      v15 = v10;
  }
  pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::HdDataSourceLegacyPrim(v8, &v16, &v15, *a3);
  sub_20C859320(a4, (uint64_t)v8);
  if ((v15 & 7) != 0)
  {
    v12 = (unsigned int *)((unint64_t)v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  return sub_20BFD265C(&v16);
}

void sub_20C858CAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2;
  int v3;
  unsigned int *v5;
  unsigned int v6;
  va_list va;

  va_start(va, a2);
  if ((a2 & 7) != 0)
  {
    v5 = (unsigned int *)(a2 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  sub_20BFD1A18((int *)va);
  if (v3)
    operator delete(v2);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C858CEC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a1 + 16));
  v2 = *(_QWORD *)(a1 + 8);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 4));
  return sub_20BFD265C((_DWORD *)a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex::RemovePrim(pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  void *v4;
  void *v5;
  unsigned int *v6;
  unsigned int v7;
  void **v8;
  void ***v10;
  char v11;
  void *v12;
  unint64_t v13;
  _QWORD v14[2];
  _QWORD v15[13];
  void **v16;
  void **v17;
  _QWORD v18[2];

  v18[1] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(void **__return_ptr))(*(_QWORD *)this + 24))(&v12);
  v4 = v12;
  v5 = (void *)v13;
  v16 = &v12;
  sub_20BFD6F90(&v16);
  if (v4 == v5)
  {
    sub_20BFD6E54(&v16, a2);
    sub_20BFD6EA4((_DWORD *)&v16 + 1, (_DWORD *)a2 + 1);
    v15[12] = 0x1000000001;
    sub_20BFD6E54(&v12, &v16);
    sub_20BFD6EA4((_DWORD *)&v12 + 1, (_DWORD *)&v16 + 1);
    (*(void (**)(pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex *, void **))(*(_QWORD *)this + 48))(this, &v12);
    sub_20C844D3C(&v12);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
    v8 = (void **)&v16;
  }
  else
  {
    sub_20BFD6E54(&v12, a2);
    sub_20BFD6EA4((_DWORD *)&v12 + 1, (_DWORD *)a2 + 1);
    v13 = 0;
    v14[0] = 0;
    v14[1] = 0;
    v17 = 0;
    v18[0] = 0;
    v16 = 0;
    v10 = &v16;
    v11 = 0;
    v16 = (void **)operator new(0x20uLL);
    v17 = v16;
    v18[0] = v16 + 4;
    v17 = (void **)sub_20C8593F8((uint64_t)v18, (uint64_t)&v12, (uint64_t)v15, (uint64_t)v16);
    (*(void (**)(pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex *, void ***))(*(_QWORD *)this + 40))(this, &v16);
    v10 = &v16;
    sub_20C8595EC((void ***)&v10);
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v14);
    if ((v13 & 7) != 0)
    {
      v6 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
      do
        v7 = __ldxr(v6);
      while (__stlxr(v7 - 2, v6));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v12 + 1);
    v8 = &v12;
  }
  return sub_20BFD265C(v8);
}

void sub_20C858F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20C858F84(_DWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 1);
  return sub_20BFD265C(a1);
}

void **pxrInternal__aapl__pxrReserved__::HdLegacyPrimSceneIndex::DirtyPrims(pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **CachedLocators;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *v24;
  std::__shared_weak_count *v25;

  v4 = (uint64_t)a1;
  if (*(_DWORD *)(a2 + 7428) >= 0x11u)
    v5 = *(_QWORD *)a2;
  else
    v5 = a2;
  v6 = *(_DWORD *)(a2 + 7424);
  if (v6)
  {
    v7 = v5 + 464 * v6;
    do
    {
      CachedLocators = (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet **)pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::GetCachedLocators(a1);
      a1 = (pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim *)pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet::Intersects((pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)(v5 + 8), CachedLocators);
      if ((_DWORD)a1)
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v4 + 16))(&v21, v4, v5);
        v23 = v22;
        v22 = 0uLL;
        sub_20C859164((uint64_t)&v23, &v24);
        v9 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
        if (*((_QWORD *)&v23 + 1))
        {
          v10 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
          do
            v11 = __ldaxr(v10);
          while (__stlxr(v11 - 1, v10));
          if (!v11)
          {
            ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
            std::__shared_weak_count::__release_weak(v9);
          }
        }
        v12 = (std::__shared_weak_count *)*((_QWORD *)&v22 + 1);
        if (*((_QWORD *)&v22 + 1))
        {
          v13 = (unint64_t *)(*((_QWORD *)&v22 + 1) + 8);
          do
            v14 = __ldaxr(v13);
          while (__stlxr(v14 - 1, v13));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
            std::__shared_weak_count::__release_weak(v12);
          }
        }
        if ((v21 & 7) != 0)
        {
          v15 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
          do
            v16 = __ldxr(v15);
          while (__stlxr(v16 - 2, v15));
        }
        a1 = v24;
        if (v24)
          pxrInternal__aapl__pxrReserved__::HdDataSourceLegacyPrim::PrimDirtied(v24, (const pxrInternal__aapl__pxrReserved__::HdDataSourceLocatorSet *)(v5 + 8));
        v17 = v25;
        if (v25)
        {
          p_shared_owners = (unint64_t *)&v25->__shared_owners_;
          do
            v19 = __ldaxr(p_shared_owners);
          while (__stlxr(v19 - 1, p_shared_owners));
          if (!v19)
          {
            ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
            std::__shared_weak_count::__release_weak(v17);
          }
        }
      }
      v5 += 464;
    }
    while (v5 != v7);
  }
  return pxrInternal__aapl__pxrReserved__::HdRetainedSceneIndex::DirtyPrims(v4, a2, a3);
}

void sub_20C859150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void *sub_20C859164@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  result = *(void **)a1;
  if (result
  {
    v5 = *(_QWORD *)(a1 + 8);
    *a2 = result;
    a2[1] = v5;
    if (v5)
    {
      v6 = (unint64_t *)(v5 + 8);
      do
        v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

void sub_20C8591D0(uint64_t *a1)
{
  *a1 = (uint64_t)off_24C5595D0;
  sub_20C85923C(a1 + 14);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)a1);
}

void sub_20C859204(uint64_t *a1)
{
  void *v2;

  *a1 = (uint64_t)off_24C5595D0;
  sub_20C85923C(a1 + 14);
  pxrInternal__aapl__pxrReserved__::HdSceneIndexBase::~HdSceneIndexBase((pxrInternal__aapl__pxrReserved__::HdSceneIndexBase *)a1);
  operator delete(v2);
}

uint64_t *sub_20C85923C(uint64_t *a1)
{
  void *v2;

  sub_20C859270(a1);
  v2 = (void *)*a1;
  if (*a1)
  {
    a1[1] = (uint64_t)v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20C859270(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  _DWORD *v11;

  v2 = a1[1] - *a1;
  if (v2)
  {
    v3 = 0;
    v4 = v2 >> 3;
    do
    {
      v5 = *a1;
      v6 = *(_QWORD *)(*a1 + 8 * v3);
      if (v6)
      {
        do
        {
          v7 = *(_QWORD *)(v6 + 32);
          pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v6 + 16));
          v8 = *(_QWORD *)(v6 + 8);
          if ((v8 & 7) != 0)
          {
            v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
            do
              v10 = __ldxr(v9);
            while (__stlxr(v10 - 2, v9));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v6 + 4));
          v11 = sub_20BFD265C((_DWORD *)v6);
          operator delete(v11);
          v6 = v7;
        }
        while (v7);
        v5 = *a1;
      }
      *(_QWORD *)(v5 + 8 * v3++) = 0;
    }
    while (v3 != v4);
  }
  a1[3] = 0;
}

_QWORD *sub_20C859320(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;

  *a1 = a2;
  v4 = operator new(0x20uLL);
  *v4 = &unk_24C5511C0;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = a2;
  a1[1] = v4;
  return a1;
}

void sub_20C859368(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

void sub_20C85938C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_20C8593A0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20C8593B8(uint64_t a1, uint64_t a2)
{
  if (sub_20BDE150C(a2, (uint64_t)&unk_24C551210))
    return a1 + 24;
  else
    return 0;
}

uint64_t sub_20C8593F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a4;
  v11 = a4;
  v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20C859488(a1, v4, v6);
      v6 += 32;
      v4 = v12 + 32;
      v12 += 32;
    }
    while (v6 != a3);
  }
  v10 = 1;
  sub_20C859514((uint64_t)v9);
  return v4;
}

_DWORD *sub_20C859488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *result;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  sub_20BFD6E54((_DWORD *)a2, (_DWORD *)a3);
  result = sub_20BFD6EA4((_DWORD *)(a2 + 4), (_DWORD *)(a3 + 4));
  v6 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 8) = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      *(_QWORD *)(a2 + 8) &= 0xFFFFFFFFFFFFFFF8;
  }
  v9 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a2 + 24) = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

uint64_t sub_20C859514(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C859548((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C859548(uint64_t *result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)result[1];
  v1 = (uint64_t *)result[2];
  v3 = *v1;
  v4 = *v2;
  if (*v1 != *v2)
  {
    v5 = *result;
    do
    {
      v3 -= 32;
      result = (uint64_t *)sub_20C859598(v5, v3);
    }
    while (v3 != v4);
  }
  return result;
}

_DWORD *sub_20C859598(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(a2 + 16));
  v3 = *(_QWORD *)(a2 + 8);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 4));
  return sub_20BFD265C((_DWORD *)a2);
}

void sub_20C8595EC(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_20C859598((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType::~HdLensDistortionSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;
  void **v34;

  v34 = (void **)((char *)this + 88);
  sub_20BEEB2B8(&v34);
  v2 = *((_QWORD *)this + 10);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 9);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 8);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 7);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  v14 = *((_QWORD *)this + 6);
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  v17 = *((_QWORD *)this + 5);
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  v20 = *((_QWORD *)this + 4);
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stlxr(v22 - 2, v21));
  }
  v23 = *((_QWORD *)this + 3);
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  v26 = *((_QWORD *)this + 2);
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stlxr(v28 - 2, v27));
  }
  v29 = *((_QWORD *)this + 1);
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stlxr(v31 - 2, v30));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v32 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v33 = __ldxr(v32);
    while (__stlxr(v33 - 2, v32));
  }
}

pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType::HdLensDistortionSchemaTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v46 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "lensDistortion", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v46, "type", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "k1", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "k2", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "center", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "anaSq", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "asym", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "scale", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "ior", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "standard", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 80, "fisheye", 0);
  v2 = *(_QWORD *)this;
  v47 = v2;
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 2, v3));
    if ((v4 & 1) == 0)
      v47 &= 0xFFFFFFFFFFFFFFF8;
  }
  v5 = *v46;
  v48 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v48 &= 0xFFFFFFFFFFFFFFF8;
  }
  v8 = *((_QWORD *)this + 2);
  v49 = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v49 &= 0xFFFFFFFFFFFFFFF8;
  }
  v11 = *((_QWORD *)this + 3);
  v50 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v50 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = *((_QWORD *)this + 4);
  v51 = v14;
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 2, v15));
    if ((v16 & 1) == 0)
      v51 &= 0xFFFFFFFFFFFFFFF8;
  }
  v17 = *((_QWORD *)this + 5);
  v52 = v17;
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 2, v18));
    if ((v19 & 1) == 0)
      v52 &= 0xFFFFFFFFFFFFFFF8;
  }
  v20 = *((_QWORD *)this + 6);
  v53 = v20;
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 2, v21));
    if ((v22 & 1) == 0)
      v53 &= 0xFFFFFFFFFFFFFFF8;
  }
  v23 = *((_QWORD *)this + 7);
  v54 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v54 &= 0xFFFFFFFFFFFFFFF8;
  }
  v26 = *((_QWORD *)this + 8);
  v55 = v26;
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 2, v27));
    if ((v28 & 1) == 0)
      v55 &= 0xFFFFFFFFFFFFFFF8;
  }
  v29 = *((_QWORD *)this + 9);
  v56 = v29;
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 2, v30));
    if ((v31 & 1) == 0)
      v56 &= 0xFFFFFFFFFFFFFFF8;
  }
  v32 = *((_QWORD *)this + 10);
  v57 = v32;
  if ((v32 & 7) != 0)
  {
    v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 2, v33));
    if ((v34 & 1) == 0)
      v57 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 13) = 0;
  v35 = operator new(0x58uLL);
  v36 = 0;
  *((_QWORD *)this + 11) = v35;
  *((_QWORD *)this + 12) = v35;
  *((_QWORD *)this + 13) = v35 + 11;
  do
  {
    v37 = *(&v47 + v36);
    *v35 = v37;
    if ((v37 & 7) != 0)
    {
      v38 = (unsigned int *)(v37 & 0xFFFFFFFFFFFFFFF8);
      do
        v39 = __ldxr(v38);
      while (__stxr(v39 + 2, v38));
      if ((v39 & 1) == 0)
        *v35 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v36;
    ++v35;
  }
  while (v36 != 11);
  v40 = &v58;
  *((_QWORD *)this + 12) = v35;
  do
  {
    v42 = *--v40;
    v41 = v42;
    if ((v42 & 7) != 0)
    {
      v43 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
      do
        v44 = __ldxr(v43);
      while (__stlxr(v44 - 2, v43));
    }
  }
  while (v40 != &v47);
  return this;
}

void sub_20C859C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object, _QWORD *a10, void **a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unsigned int *v49;
  unsigned int v50;
  unsigned int *v51;
  unsigned int v52;
  unsigned int *v53;
  unsigned int v54;
  unsigned int *v55;
  unsigned int v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;

  sub_20BEEB2B8(&a11);
  v34 = (char *)&a24;
  while (1)
  {
    v36 = *((_QWORD *)v34 - 1);
    v34 -= 8;
    v35 = v36;
    if ((v36 & 7) != 0)
    {
      v37 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
      do
        v38 = __ldxr(v37);
      while (__stlxr(v38 - 2, v37));
    }
    if (v34 == &a13)
    {
      if ((*v25 & 7) != 0)
      {
        v39 = (unsigned int *)(*v25 & 0xFFFFFFFFFFFFFFF8);
        do
          v40 = __ldxr(v39);
        while (__stlxr(v40 - 2, v39));
      }
      if ((*v33 & 7) != 0)
      {
        v41 = (unsigned int *)(*v33 & 0xFFFFFFFFFFFFFFF8);
        do
          v42 = __ldxr(v41);
        while (__stlxr(v42 - 2, v41));
      }
      if ((*v32 & 7) != 0)
      {
        v43 = (unsigned int *)(*v32 & 0xFFFFFFFFFFFFFFF8);
        do
          v44 = __ldxr(v43);
        while (__stlxr(v44 - 2, v43));
      }
      if ((*v31 & 7) != 0)
      {
        v45 = (unsigned int *)(*v31 & 0xFFFFFFFFFFFFFFF8);
        do
          v46 = __ldxr(v45);
        while (__stlxr(v46 - 2, v45));
      }
      if ((*v30 & 7) != 0)
      {
        v47 = (unsigned int *)(*v30 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if ((*v29 & 7) != 0)
      {
        v49 = (unsigned int *)(*v29 & 0xFFFFFFFFFFFFFFF8);
        do
          v50 = __ldxr(v49);
        while (__stlxr(v50 - 2, v49));
      }
      if ((*v28 & 7) != 0)
      {
        v51 = (unsigned int *)(*v28 & 0xFFFFFFFFFFFFFFF8);
        do
          v52 = __ldxr(v51);
        while (__stlxr(v52 - 2, v51));
      }
      if ((*v27 & 7) != 0)
      {
        v53 = (unsigned int *)(*v27 & 0xFFFFFFFFFFFFFFF8);
        do
          v54 = __ldxr(v53);
        while (__stlxr(v54 - 2, v53));
      }
      if ((*v26 & 7) != 0)
      {
        v55 = (unsigned int *)(*v26 & 0xFFFFFFFFFFFFFFF8);
        do
          v56 = __ldxr(v55);
        while (__stlxr(v56 - 2, v55));
      }
      if ((*a10 & 7) != 0)
      {
        v57 = (unsigned int *)(*a10 & 0xFFFFFFFFFFFFFFF8);
        do
          v58 = __ldxr(v57);
        while (__stlxr(v58 - 2, v57));
      }
      if ((*v24 & 7) != 0)
      {
        v59 = (unsigned int *)(*v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v60 = __ldxr(v59);
        while (__stlxr(v60 - 2, v59));
      }
      _Unwind_Resume(a1);
    }
  }
}

void sub_20C859E50()
{
  JUMPOUT(0x20C859E04);
}

void sub_20C859E58()
{
  JUMPOUT(0x20C859E28);
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetType(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 1);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E28BC((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetK1(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 2);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E8C14((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetK2(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 3);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E8C14((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetCenter(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 4);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9084((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetAnaSq(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 5);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E8C14((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetAsym(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 6);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E9084((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetScale(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 7);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E8C14((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetIor(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;

  v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v4)
    v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  v5 = (unsigned int *)*((_QWORD *)v4 + 8);
  v10 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)((unint64_t)v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v10 = v6;
  }
  sub_20C7E8C14((uint64_t *)this, a2);
  if ((v10 & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::BuildRetained(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t *v15;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v17;
  unint64_t v18;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v19;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v20;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v21;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v22;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v24;
  uint64_t *v25;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  __int128 v34;
  _OWORD v35[8];
  _OWORD v36[4];
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  memset(v36, 0, sizeof(v36));
  memset(v35, 0, sizeof(v35));
  v15 = &v37;
  if (*a1)
  {
    v17 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v17)
      v17 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220(v36, (_QWORD *)v17 + 1);
    sub_20BDE881C(v35, a1);
    v18 = 1;
  }
  else
  {
    v18 = 0;
  }
  if (*a2)
  {
    v19 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v19)
      v19 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220((_QWORD *)((unint64_t)v36 | (8 * v18)), (_QWORD *)v19 + 2);
    sub_20BDE881C(&v35[v18++], a2);
  }
  if (*a3)
  {
    v20 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v20)
      v20 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220((_QWORD *)v36 + v18, (_QWORD *)v20 + 3);
    sub_20BDE881C(&v35[v18++], a3);
  }
  if (*a4)
  {
    v21 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v21)
      v21 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220((_QWORD *)v36 + v18, (_QWORD *)v21 + 4);
    sub_20BDE881C(&v35[v18++], a4);
  }
  if (*a5)
  {
    v22 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v22)
      v22 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220((_QWORD *)v36 + v18, (_QWORD *)v22 + 5);
    sub_20BDE881C(&v35[v18++], a5);
  }
  if (*a6)
  {
    v23 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v23)
      v23 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220((_QWORD *)v36 + v18, (_QWORD *)v23 + 6);
    sub_20BDE881C(&v35[v18++], a6);
  }
  if (*a7)
  {
    v24 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v24)
      v24 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    sub_20BF32220((_QWORD *)v36 + v18, (_QWORD *)v24 + 7);
    sub_20BDE881C(&v35[v18++], a7);
  }
  v25 = a8;
  if (*a8)
  {
    v26 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v26)
    {
      v26 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
      v25 = a8;
    }
    sub_20BF32220((_QWORD *)v36 + v18, (_QWORD *)v26 + 8);
    sub_20BDE881C(&v35[v18++], v25);
  }
  pxrInternal__aapl__pxrReserved__::HdRetainedContainerDataSource::New(v18, (uint64_t *)v36, (uint64_t *)v35, &v34);
  *a9 = v34;
  for (i = 7; i != -1; --i)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&v35[i]);
  do
  {
    v29 = *--v15;
    v28 = v29;
    if ((v29 & 7) != 0)
    {
      v30 = (unsigned int *)(v28 & 0xFFFFFFFFFFFFFFF8);
      do
        v31 = __ldxr(v30);
      while (__stlxr(v31 - 2, v30));
    }
  }
  while (v15 != (uint64_t *)v36);
}

void sub_20C85A808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  char *v29;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;

  for (i = 112; i != -16; i -= 16)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(&a13 + i));
  while (1)
  {
    v33 = *((_QWORD *)v29 - 1);
    v29 -= 8;
    v32 = v33;
    if ((v33 & 7) != 0)
    {
      v34 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
      do
        v35 = __ldxr(v34);
      while (__stlxr(v35 - 2, v34));
    }
    if (v29 == &a29)
      _Unwind_Resume(a1);
  }
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetFromParent(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;

  v3 = *a1;
  if (*a1)
  {
    if (!atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens))
      sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 24))(&v14, v3);
    sub_20C7E0B14((uint64_t)&v14, &v16);
  }
  else
  {
    v16 = 0;
    v17 = 0;
  }
  sub_20C7E0E2C(a2, &v16);
  v5 = v17;
  if (v3)
  {
    if (v17)
    {
      p_shared_owners = (unint64_t *)&v17->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    v8 = v15;
    if (v15)
    {
      v9 = (unint64_t *)&v15->__shared_owners_;
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        v11 = v8;
LABEL_22:
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (v17)
  {
    v12 = (unint64_t *)&v17->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      v11 = v5;
      goto LABEL_22;
    }
  }
}

void sub_20C85A98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a11);
  if (v11)
    pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a9);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetSchemaToken(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *result;

  result = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!result)
    return sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  return result;
}

void *pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::GetDefaultLocator(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this)
{
  unsigned __int8 v1;
  pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *v3;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v4;

  v1 = atomic_load((unsigned __int8 *)&qword_25498EA30);
  if ((v1 & 1) == 0 && __cxa_guard_acquire(&qword_25498EA30))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
    if (!v3)
      v3 = sub_20C7EAA68(&pxrInternal__aapl__pxrReserved__::HdCameraSchemaTokens);
    v4 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v4)
      v4 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    pxrInternal__aapl__pxrReserved__::HdDataSourceLocator::HdDataSourceLocator((pxrInternal__aapl__pxrReserved__::HdDataSourceLocator *)&unk_25498E9F8, v3, v4);
    __cxa_atexit((void (*)(void *))sub_20C7E0C54, &unk_25498E9F8, &dword_20BDBC000);
    __cxa_guard_release(&qword_25498EA30);
  }
  return &unk_25498E9F8;
}

void sub_20C85AA90(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498EA30);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::BuildTypeDataSource(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema *this@<X0>, _QWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v5;
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v6;
  unsigned __int8 v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;

  v5 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if (!v5)
    v5 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
  if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v5 + 9) & 0xFFFFFFFFFFFFFFF8))
  {
    v7 = atomic_load((unsigned __int8 *)&qword_25498EA48);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_25498EA48))
    {
      sub_20C7EA9FC((uint64_t *)this, &qword_25498EA38);
      __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498EA38, &dword_20BDBC000);
      __cxa_guard_release(&qword_25498EA48);
    }
    v8 = unk_25498EA40;
    *a2 = qword_25498EA38;
    a2[1] = v8;
    if (v8)
    {
      v9 = (unint64_t *)(v8 + 8);
      do
        v10 = __ldxr(v9);
      while (__stxr(v10 + 1, v9));
    }
  }
  else
  {
    v6 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if (!v6)
      v6 = sub_20C85ADE8(&pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens);
    if ((*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v6 + 10) & 0xFFFFFFFFFFFFFFF8))
    {
      v11 = atomic_load((unsigned __int8 *)&qword_25498EA60);
      if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_25498EA60))
      {
        sub_20C7EA9FC((uint64_t *)this, &qword_25498EA50);
        __cxa_atexit((void (*)(void *))pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource, &qword_25498EA50, &dword_20BDBC000);
        __cxa_guard_release(&qword_25498EA60);
      }
      v12 = *(_QWORD *)algn_25498EA58;
      *a2 = qword_25498EA50;
      a2[1] = v12;
      if (v12)
      {
        v13 = (unint64_t *)(v12 + 8);
        do
          v14 = __ldxr(v13);
        while (__stxr(v14 + 1, v13));
      }
    }
    else
    {
      sub_20C7EA9FC((uint64_t *)this, &v15);
      *(_OWORD *)a2 = v15;
    }
  }
}

void sub_20C85AC64(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25498EA60);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetType(_QWORD *a1, uint64_t *a2)
{
  sub_20BDE881C(a1, a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetK1(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 16), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetK2(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 32), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetCenter(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 48), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetAnaSq(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 64), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetAsym(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 80), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetScale(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 96), a2);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::SetIor(uint64_t a1, uint64_t *a2)
{
  sub_20BDE881C((_QWORD *)(a1 + 112), a2);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder::Build(pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::Builder *this@<X0>, _OWORD *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchema::BuildRetained((uint64_t *)this, (uint64_t *)this + 2, (uint64_t *)this + 4, (uint64_t *)this + 6, (uint64_t *)this + 8, (uint64_t *)this + 10, (uint64_t *)this + 12, (uint64_t *)this + 14, a2);
}

pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *sub_20C85ADE8(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C85AE30();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType::~HdLensDistortionSchemaTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *sub_20C85AE30()
{
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType *)operator new(0x70uLL);
  pxrInternal__aapl__pxrReserved__::HdLensDistortionSchemaTokens_StaticTokenType::HdLensDistortionSchemaTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C85AE5C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType::~HdLightTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int *v66;
  unsigned int v67;
  uint64_t v68;
  unsigned int *v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int *v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int *v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int *v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  unsigned int *v98;
  unsigned int v99;
  void **v100;

  v100 = (void **)((char *)this + 264);
  sub_20BEEB2B8(&v100);
  v2 = *((_QWORD *)this + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  v5 = *((_QWORD *)this + 31);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  v8 = *((_QWORD *)this + 30);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  v11 = *((_QWORD *)this + 29);
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  v14 = *((_QWORD *)this + 28);
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  v17 = *((_QWORD *)this + 27);
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  v20 = *((_QWORD *)this + 26);
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stlxr(v22 - 2, v21));
  }
  v23 = *((_QWORD *)this + 25);
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stlxr(v25 - 2, v24));
  }
  v26 = *((_QWORD *)this + 24);
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stlxr(v28 - 2, v27));
  }
  v29 = *((_QWORD *)this + 23);
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stlxr(v31 - 2, v30));
  }
  v32 = *((_QWORD *)this + 22);
  if ((v32 & 7) != 0)
  {
    v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stlxr(v34 - 2, v33));
  }
  v35 = *((_QWORD *)this + 21);
  if ((v35 & 7) != 0)
  {
    v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stlxr(v37 - 2, v36));
  }
  v38 = *((_QWORD *)this + 20);
  if ((v38 & 7) != 0)
  {
    v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stlxr(v40 - 2, v39));
  }
  v41 = *((_QWORD *)this + 19);
  if ((v41 & 7) != 0)
  {
    v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stlxr(v43 - 2, v42));
  }
  v44 = *((_QWORD *)this + 18);
  if ((v44 & 7) != 0)
  {
    v45 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stlxr(v46 - 2, v45));
  }
  v47 = *((_QWORD *)this + 17);
  if ((v47 & 7) != 0)
  {
    v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stlxr(v49 - 2, v48));
  }
  v50 = *((_QWORD *)this + 16);
  if ((v50 & 7) != 0)
  {
    v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stlxr(v52 - 2, v51));
  }
  v53 = *((_QWORD *)this + 15);
  if ((v53 & 7) != 0)
  {
    v54 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
    do
      v55 = __ldxr(v54);
    while (__stlxr(v55 - 2, v54));
  }
  v56 = *((_QWORD *)this + 14);
  if ((v56 & 7) != 0)
  {
    v57 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
    do
      v58 = __ldxr(v57);
    while (__stlxr(v58 - 2, v57));
  }
  v59 = *((_QWORD *)this + 13);
  if ((v59 & 7) != 0)
  {
    v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stlxr(v61 - 2, v60));
  }
  v62 = *((_QWORD *)this + 12);
  if ((v62 & 7) != 0)
  {
    v63 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v64 = __ldxr(v63);
    while (__stlxr(v64 - 2, v63));
  }
  v65 = *((_QWORD *)this + 11);
  if ((v65 & 7) != 0)
  {
    v66 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
    do
      v67 = __ldxr(v66);
    while (__stlxr(v67 - 2, v66));
  }
  v68 = *((_QWORD *)this + 10);
  if ((v68 & 7) != 0)
  {
    v69 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v70 = __ldxr(v69);
    while (__stlxr(v70 - 2, v69));
  }
  v71 = *((_QWORD *)this + 9);
  if ((v71 & 7) != 0)
  {
    v72 = (unsigned int *)(v71 & 0xFFFFFFFFFFFFFFF8);
    do
      v73 = __ldxr(v72);
    while (__stlxr(v73 - 2, v72));
  }
  v74 = *((_QWORD *)this + 8);
  if ((v74 & 7) != 0)
  {
    v75 = (unsigned int *)(v74 & 0xFFFFFFFFFFFFFFF8);
    do
      v76 = __ldxr(v75);
    while (__stlxr(v76 - 2, v75));
  }
  v77 = *((_QWORD *)this + 7);
  if ((v77 & 7) != 0)
  {
    v78 = (unsigned int *)(v77 & 0xFFFFFFFFFFFFFFF8);
    do
      v79 = __ldxr(v78);
    while (__stlxr(v79 - 2, v78));
  }
  v80 = *((_QWORD *)this + 6);
  if ((v80 & 7) != 0)
  {
    v81 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
    do
      v82 = __ldxr(v81);
    while (__stlxr(v82 - 2, v81));
  }
  v83 = *((_QWORD *)this + 5);
  if ((v83 & 7) != 0)
  {
    v84 = (unsigned int *)(v83 & 0xFFFFFFFFFFFFFFF8);
    do
      v85 = __ldxr(v84);
    while (__stlxr(v85 - 2, v84));
  }
  v86 = *((_QWORD *)this + 4);
  if ((v86 & 7) != 0)
  {
    v87 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
    do
      v88 = __ldxr(v87);
    while (__stlxr(v88 - 2, v87));
  }
  v89 = *((_QWORD *)this + 3);
  if ((v89 & 7) != 0)
  {
    v90 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
    do
      v91 = __ldxr(v90);
    while (__stlxr(v91 - 2, v90));
  }
  v92 = *((_QWORD *)this + 2);
  if ((v92 & 7) != 0)
  {
    v93 = (unsigned int *)(v92 & 0xFFFFFFFFFFFFFFF8);
    do
      v94 = __ldxr(v93);
    while (__stlxr(v94 - 2, v93));
  }
  v95 = *((_QWORD *)this + 1);
  if ((v95 & 7) != 0)
  {
    v96 = (unsigned int *)(v95 & 0xFFFFFFFFFFFFFFF8);
    do
      v97 = __ldxr(v96);
    while (__stlxr(v97 - 2, v96));
  }
  if ((*(_QWORD *)this & 7) != 0)
  {
    v98 = (unsigned int *)(*(_QWORD *)this & 0xFFFFFFFFFFFFFFF8);
    do
      v99 = __ldxr(v98);
    while (__stlxr(v99 - 2, v98));
  }
}

pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType::HdLightTokens_StaticTokenType(pxrInternal__aapl__pxrReserved__::HdLightTokens_StaticTokenType *this)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int *v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int *v66;
  unsigned int v67;
  uint64_t v68;
  unsigned int *v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int *v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int *v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int v82;
  uint64_t v83;
  unsigned int *v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int *v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int *v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int *v99;
  unsigned int v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int *v104;
  unsigned int v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int *v109;
  unsigned int v110;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v146 = *MEMORY[0x24BDAC8D0];
  v112 = (uint64_t *)(pxrInternal__aapl__pxrReserved__::TfToken::TfToken(this, "angle", 0) + 8);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(v112, "color", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 16, "colorTemperature", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 24, "enableColorTemperature", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 32, "domeOffset", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 40, "exposure", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 48, "height", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 56, "intensity", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 64, "radius", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 72, "length", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 80, "texture:file", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 88, "texture:format", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 96, "width", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 104, "ambient", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 112, "diffuse", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 120, "specular", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 128, "normalize", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 136, "hasShadow", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 144, "shaping:focus", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 152, "shaping:focusTint", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 160, "shaping:cone:angle", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 168, "shaping:cone:softness", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 176, "shaping:ies:file", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 184, "shaping:ies:angleScale", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 192, "shaping:ies:normalize", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 200, "shadow:enable", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 208, "shadow:color", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 216, "shadow:distance", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 224, "shadow:falloff", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 232, "shadow:falloffGamma", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 240, "params", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 248, "shadowCollection", 0);
  pxrInternal__aapl__pxrReserved__::TfToken::TfToken((char *)this + 256, "shadowParams", 0);
  v2 = *(_QWORD *)this;
  v113 = v2;
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 2, v3));
    if ((v4 & 1) == 0)
      v113 &= 0xFFFFFFFFFFFFFFF8;
  }
  v5 = *v112;
  v114 = v5;
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 2, v6));
    if ((v7 & 1) == 0)
      v114 &= 0xFFFFFFFFFFFFFFF8;
  }
  v8 = *((_QWORD *)this + 2);
  v115 = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      v115 &= 0xFFFFFFFFFFFFFFF8;
  }
  v11 = *((_QWORD *)this + 3);
  v116 = v11;
  if ((v11 & 7) != 0)
  {
    v12 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 2, v12));
    if ((v13 & 1) == 0)
      v116 &= 0xFFFFFFFFFFFFFFF8;
  }
  v14 = *((_QWORD *)this + 4);
  v117 = v14;
  if ((v14 & 7) != 0)
  {
    v15 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 2, v15));
    if ((v16 & 1) == 0)
      v117 &= 0xFFFFFFFFFFFFFFF8;
  }
  v17 = *((_QWORD *)this + 5);
  v118 = v17;
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 2, v18));
    if ((v19 & 1) == 0)
      v118 &= 0xFFFFFFFFFFFFFFF8;
  }
  v20 = *((_QWORD *)this + 6);
  v119 = v20;
  if ((v20 & 7) != 0)
  {
    v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 2, v21));
    if ((v22 & 1) == 0)
      v119 &= 0xFFFFFFFFFFFFFFF8;
  }
  v23 = *((_QWORD *)this + 7);
  v120 = v23;
  if ((v23 & 7) != 0)
  {
    v24 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 2, v24));
    if ((v25 & 1) == 0)
      v120 &= 0xFFFFFFFFFFFFFFF8;
  }
  v26 = *((_QWORD *)this + 8);
  v121 = v26;
  if ((v26 & 7) != 0)
  {
    v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v28 = __ldxr(v27);
    while (__stxr(v28 + 2, v27));
    if ((v28 & 1) == 0)
      v121 &= 0xFFFFFFFFFFFFFFF8;
  }
  v29 = *((_QWORD *)this + 9);
  v122 = v29;
  if ((v29 & 7) != 0)
  {
    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
    do
      v31 = __ldxr(v30);
    while (__stxr(v31 + 2, v30));
    if ((v31 & 1) == 0)
      v122 &= 0xFFFFFFFFFFFFFFF8;
  }
  v32 = *((_QWORD *)this + 10);
  v123 = v32;
  if ((v32 & 7) != 0)
  {
    v33 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 2, v33));
    if ((v34 & 1) == 0)
      v123 &= 0xFFFFFFFFFFFFFFF8;
  }
  v35 = *((_QWORD *)this + 11);
  v124 = v35;
  if ((v35 & 7) != 0)
  {
    v36 = (unsigned int *)(v35 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stxr(v37 + 2, v36));
    if ((v37 & 1) == 0)
      v124 &= 0xFFFFFFFFFFFFFFF8;
  }
  v38 = *((_QWORD *)this + 12);
  v125 = v38;
  if ((v38 & 7) != 0)
  {
    v39 = (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 2, v39));
    if ((v40 & 1) == 0)
      v125 &= 0xFFFFFFFFFFFFFFF8;
  }
  v41 = *((_QWORD *)this + 13);
  v126 = v41;
  if ((v41 & 7) != 0)
  {
    v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stxr(v43 + 2, v42));
    if ((v43 & 1) == 0)
      v126 &= 0xFFFFFFFFFFFFFFF8;
  }
  v44 = *((_QWORD *)this + 14);
  v127 = v44;
  if ((v44 & 7) != 0)
  {
    v45 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v46 = __ldxr(v45);
    while (__stxr(v46 + 2, v45));
    if ((v46 & 1) == 0)
      v127 &= 0xFFFFFFFFFFFFFFF8;
  }
  v47 = *((_QWORD *)this + 15);
  v128 = v47;
  if ((v47 & 7) != 0)
  {
    v48 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
    do
      v49 = __ldxr(v48);
    while (__stxr(v49 + 2, v48));
    if ((v49 & 1) == 0)
      v128 &= 0xFFFFFFFFFFFFFFF8;
  }
  v50 = *((_QWORD *)this + 16);
  v129 = v50;
  if ((v50 & 7) != 0)
  {
    v51 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v52 = __ldxr(v51);
    while (__stxr(v52 + 2, v51));
    if ((v52 & 1) == 0)
      v129 &= 0xFFFFFFFFFFFFFFF8;
  }
  v53 = *((_QWORD *)this + 17);
  v130 = v53;
  if ((v53 & 7) != 0)
  {
    v54 = (unsigned int *)(v53 & 0xFFFFFFFFFFFFFFF8);
    do
      v55 = __ldxr(v54);
    while (__stxr(v55 + 2, v54));
    if ((v55 & 1) == 0)
      v130 &= 0xFFFFFFFFFFFFFFF8;
  }
  v56 = *((_QWORD *)this + 18);
  v131 = v56;
  if ((v56 & 7) != 0)
  {
    v57 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
    do
      v58 = __ldxr(v57);
    while (__stxr(v58 + 2, v57));
    if ((v58 & 1) == 0)
      v131 &= 0xFFFFFFFFFFFFFFF8;
  }
  v59 = *((_QWORD *)this + 19);
  v132 = v59;
  if ((v59 & 7) != 0)
  {
    v60 = (unsigned int *)(v59 & 0xFFFFFFFFFFFFFFF8);
    do
      v61 = __ldxr(v60);
    while (__stxr(v61 + 2, v60));
    if ((v61 & 1) == 0)
      v132 &= 0xFFFFFFFFFFFFFFF8;
  }
  v62 = *((_QWORD *)this + 20);
  v133 = v62;
  if ((v62 & 7) != 0)
  {
    v63 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v64 = __ldxr(v63);
    while (__stxr(v64 + 2, v63));
    if ((v64 & 1) == 0)
      v133 &= 0xFFFFFFFFFFFFFFF8;
  }
  v65 = *((_QWORD *)this + 21);
  v134 = v65;
  if ((v65 & 7) != 0)
  {
    v66 = (unsigned int *)(v65 & 0xFFFFFFFFFFFFFFF8);
    do
      v67 = __ldxr(v66);
    while (__stxr(v67 + 2, v66));
    if ((v67 & 1) == 0)
      v134 &= 0xFFFFFFFFFFFFFFF8;
  }
  v68 = *((_QWORD *)this + 22);
  v135 = v68;
  if ((v68 & 7) != 0)
  {
    v69 = (unsigned int *)(v68 & 0xFFFFFFFFFFFFFFF8);
    do
      v70 = __ldxr(v69);
    while (__stxr(v70 + 2, v69));
    if ((v70 & 1) == 0)
      v135 &= 0xFFFFFFFFFFFFFFF8;
  }
  v71 = *((_QWORD *)this + 23);
  v136 = v71;
  if ((v71 & 7) != 0)
  {
    v72 = (unsigned int *)(v71 & 0xFFFFFFFFFFFFFFF8);
    do
      v73 = __ldxr(v72);
    while (__stxr(v73 + 2, v72));
    if ((v73 & 1) == 0)
      v136 &= 0xFFFFFFFFFFFFFFF8;
  }
  v74 = *((_QWORD *)this + 24);
  v137 = v74;
  if ((v74 & 7) != 0)
  {
    v75 = (unsigned int *)(v74 & 0xFFFFFFFFFFFFFFF8);
    do
      v76 = __ldxr(v75);
    while (__stxr(v76 + 2, v75));
    if ((v76 & 1) == 0)
      v137 &= 0xFFFFFFFFFFFFFFF8;
  }
  v77 = *((_QWORD *)this + 25);
  v138 = v77;
  if ((v77 & 7) != 0)
  {
    v78 = (unsigned int *)(v77 & 0xFFFFFFFFFFFFFFF8);
    do
      v79 = __ldxr(v78);
    while (__stxr(v79 + 2, v78));
    if ((v79 & 1) == 0)
      v138 &= 0xFFFFFFFFFFFFFFF8;
  }
  v80 = *((_QWORD *)this + 26);
  v139 = v80;
  if ((v80 & 7) != 0)
  {
    v81 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
    do
      v82 = __ldxr(v81);
    while (__stxr(v82 + 2, v81));
    if ((v82 & 1) == 0)
      v139 &= 0xFFFFFFFFFFFFFFF8;
  }
  v83 = *((_QWORD *)this + 27);
  v140 = v83;
  if ((v83 & 7) != 0)
  {
    v84 = (unsigned int *)(v83 & 0xFFFFFFFFFFFFFFF8);
    do
      v85 = __ldxr(v84);
    while (__stxr(v85 + 2, v84));
    if ((v85 & 1) == 0)
      v140 &= 0xFFFFFFFFFFFFFFF8;
  }
  v86 = *((_QWORD *)this + 28);
  v141 = v86;
  if ((v86 & 7) != 0)
  {
    v87 = (unsigned int *)(v86 & 0xFFFFFFFFFFFFFFF8);
    do
      v88 = __ldxr(v87);
    while (__stxr(v88 + 2, v87));
    if ((v88 & 1) == 0)
      v141 &= 0xFFFFFFFFFFFFFFF8;
  }
  v89 = *((_QWORD *)this + 29);
  v142 = v89;
  if ((v89 & 7) != 0)
  {
    v90 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
    do
      v91 = __ldxr(v90);
    while (__stxr(v91 + 2, v90));
    if ((v91 & 1) == 0)
      v142 &= 0xFFFFFFFFFFFFFFF8;
  }
  v92 = *((_QWORD *)this + 30);
  v143 = v92;
  if ((v92 & 7) != 0)
  {
    v93 = (unsigned int *)(v92 & 0xFFFFFFFFFFFFFFF8);
    do
      v94 = __ldxr(v93);
    while (__stxr(v94 + 2, v93));
    if ((v94 & 1) == 0)
      v143 &= 0xFFFFFFFFFFFFFFF8;
  }
  v95 = *((_QWORD *)this + 31);
  v144 = v95;
  if ((v95 & 7) != 0)
  {
    v96 = (unsigned int *)(v95 & 0xFFFFFFFFFFFFFFF8);
    do
      v97 = __ldxr(v96);
    while (__stxr(v97 + 2, v96));
    if ((v97 & 1) == 0)
      v144 &= 0xFFFFFFFFFFFFFFF8;
  }
  v98 = *((_QWORD *)this + 32);
  v145 = v98;
  if ((v98 & 7) != 0)
  {
    v99 = (unsigned int *)(v98 & 0xFFFFFFFFFFFFFFF8);
    do
      v100 = __ldxr(v99);
    while (__stxr(v100 + 2, v99));
    if ((v100 & 1) == 0)
      v145 &= 0xFFFFFFFFFFFFFFF8;
  }
  *((_QWORD *)this + 33) = 0;
  *((_QWORD *)this + 34) = 0;
  *((_QWORD *)this + 35) = 0;
  v101 = operator new(0x108uLL);
  v102 = 0;
  *((_QWORD *)this + 33) = v101;
  *((_QWORD *)this + 34) = v101;
  *((_QWORD *)this + 35) = v101 + 33;
  do
  {
    v103 = *(&v113 + v102);
    *v101 = v103;
    if ((v103 & 7) != 0)
    {
      v104 = (unsigned int *)(v103 & 0xFFFFFFFFFFFFFFF8);
      do
        v105 = __ldxr(v104);
      while (__stxr(v105 + 2, v104));
      if ((v105 & 1) == 0)
        *v101 &= 0xFFFFFFFFFFFFFFF8;
    }
    ++v102;
    ++v101;
  }
  while (v102 != 33);
  v106 = &v146;
  *((_QWORD *)this + 34) = v101;
  do
  {
    v108 = *--v106;
    v107 = v108;
    if ((v108 & 7) != 0)
    {
      v109 = (unsigned int *)(v107 & 0xFFFFFFFFFFFFFFF8);
      do
        v110 = __ldxr(v109);
      while (__stlxr(v110 - 2, v109));
    }
  }
  while (v106 != &v113);
  return this;
}

void sub_20C85BE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, _QWORD *a11, _QWORD *a12, _QWORD *a13, _QWORD *a14, _QWORD *a15, _QWORD *a16, _QWORD *a17, _QWORD *a18, _QWORD *a19, _QWORD *a20,_QWORD *a21,_QWORD *a22,_QWORD *a23,_QWORD *a24,_QWORD *a25,_QWORD *a26,_QWORD *a27,_QWORD *a28,_QWORD *a29,_QWORD *a30,_QWORD *a31,_QWORD *a32,_QWORD *a33,void **a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int *v82;
  unsigned int v83;
  unsigned int *v84;
  unsigned int v85;
  unsigned int *v86;
  unsigned int v87;
  unsigned int *v88;
  unsigned int v89;
  unsigned int *v90;
  unsigned int v91;
  unsigned int *v92;
  unsigned int v93;
  unsigned int *v94;
  unsigned int v95;
  unsigned int *v96;
  unsigned int v97;
  unsigned int *v98;
  unsigned int v99;
  unsigned int *v100;
  unsigned int v101;
  unsigned int *v102;
  unsigned int v103;
  unsigned int *v104;
  unsigned int v105;
  unsigned int *v106;
  unsigned int v107;
  unsigned int *v108;
  unsigned int v109;
  unsigned int *v110;
  unsigned int v111;
  unsigned int *v112;
  unsigned int v113;
  unsigned int *v114;
  unsigned int v115;
  unsigned int *v116;
  unsigned int v117;
  unsigned int *v118;
  unsigned int v119;
  unsigned int *v120;
  unsigned int v121;
  unsigned int *v122;
  unsigned int v123;
  unsigned int *v124;
  unsigned int v125;
  unsigned int *v126;
  unsigned int v127;
  unsigned int *v128;
  unsigned int v129;
  unsigned int *v130;
  unsigned int v131;
  unsigned int *v132;
  unsigned int v133;
  unsigned int *v134;
  unsigned int v135;
  unsigned int *v136;
  unsigned int v137;
  unsigned int *v138;
  unsigned int v139;
  unsigned int *v140;
  unsigned int v141;
  unsigned int *v142;
  unsigned int v143;
  unsigned int *v144;
  unsigned int v145;
  unsigned int *v146;
  unsigned int v147;
  unsigned int *v148;
  unsigned int v149;

  sub_20BEEB2B8(&a34);
  v79 = (char *)&a69;
  while (1)
  {
    v81 = *((_QWORD *)v79 - 1);
    v79 -= 8;
    v80 = v81;
    if ((v81 & 7) != 0)
    {
      v82 = (unsigned int *)(v80 & 0xFFFFFFFFFFFFFFF8);
      do
        v83 = __ldxr(v82);
      while (__stlxr(v83 - 2, v82));
    }
    if (v79 == &a36)
    {
      if ((*v74 & 7) != 0)
      {
        v84 = (unsigned int *)(*v74 & 0xFFFFFFFFFFFFFFF8);
        do
          v85 = __ldxr(v84);
        while (__stlxr(v85 - 2, v84));
      }
      if ((*v73 & 7) != 0)
      {
        v86 = (unsigned int *)(*v73 & 0xFFFFFFFFFFFFFFF8);
        do
          v87 = __ldxr(v86);
        while (__stlxr(v87 - 2, v86));
      }
      if ((*v72 & 7) != 0)
      {
        v88 = (unsigned int *)(*v72 & 0xFFFFFFFFFFFFFFF8);
        do
          v89 = __ldxr(v88);
        while (__stlxr(v89 - 2, v88));
      }
      if ((*v71 & 7) != 0)
      {
        v90 = (unsigned int *)(*v71 & 0xFFFFFFFFFFFFFFF8);
        do
          v91 = __ldxr(v90);
        while (__stlxr(v91 - 2, v90));
      }
      if ((*v70 & 7) != 0)
      {
        v92 = (unsigned int *)(*v70 & 0xFFFFFFFFFFFFFFF8);
        do
          v93 = __ldxr(v92);
        while (__stlxr(v93 - 2, v92));
      }
      if ((*v78 & 7) != 0)
      {
        v94 = (unsigned int *)(*v78 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      if ((*v77 & 7) != 0)
      {
        v96 = (unsigned int *)(*v77 & 0xFFFFFFFFFFFFFFF8);
        do
          v97 = __ldxr(v96);
        while (__stlxr(v97 - 2, v96));
      }
      if ((*v76 & 7) != 0)
      {
        v98 = (unsigned int *)(*v76 & 0xFFFFFFFFFFFFFFF8);
        do
          v99 = __ldxr(v98);
        while (__stlxr(v99 - 2, v98));
      }
      if ((*v75 & 7) != 0)
      {
        v100 = (unsigned int *)(*v75 & 0xFFFFFFFFFFFFFFF8);
        do
          v101 = __ldxr(v100);
        while (__stlxr(v101 - 2, v100));
      }
      if ((*a11 & 7) != 0)
      {
        v102 = (unsigned int *)(*a11 & 0xFFFFFFFFFFFFFFF8);
        do
          v103 = __ldxr(v102);
        while (__stlxr(v103 - 2, v102));
      }
      if ((*a12 & 7) != 0)
      {
        v104 = (unsigned int *)(*a12 & 0xFFFFFFFFFFFFFFF8);
        do
          v105 = __ldxr(v104);
        while (__stlxr(v105 - 2, v104));
      }
      if ((*a13 & 7) != 0)
      {
        v106 = (unsigned int *)(*a13 & 0xFFFFFFFFFFFFFFF8);
        do
          v107 = __ldxr(v106);
        while (__stlxr(v107 - 2, v106));
      }
      if ((*a14 & 7) != 0)
      {
        v108 = (unsigned int *)(*a14 & 0xFFFFFFFFFFFFFFF8);
        do
          v109 = __ldxr(v108);
        while (__stlxr(v109 - 2, v108));
      }
      if ((*a15 & 7) != 0)
      {
        v110 = (unsigned int *)(*a15 & 0xFFFFFFFFFFFFFFF8);
        do
          v111 = __ldxr(v110);
        while (__stlxr(v111 - 2, v110));
      }
      if ((*a16 & 7) != 0)
      {
        v112 = (unsigned int *)(*a16 & 0xFFFFFFFFFFFFFFF8);
        do
          v113 = __ldxr(v112);
        while (__stlxr(v113 - 2, v112));
      }
      if ((*a17 & 7) != 0)
      {
        v114 = (unsigned int *)(*a17 & 0xFFFFFFFFFFFFFFF8);
        do
          v115 = __ldxr(v114);
        while (__stlxr(v115 - 2, v114));
      }
      if ((*a18 & 7) != 0)
      {
        v116 = (unsigned int *)(*a18 & 0xFFFFFFFFFFFFFFF8);
        do
          v117 = __ldxr(v116);
        while (__stlxr(v117 - 2, v116));
      }
      if ((*a19 & 7) != 0)
      {
        v118 = (unsigned int *)(*a19 & 0xFFFFFFFFFFFFFFF8);
        do
          v119 = __ldxr(v118);
        while (__stlxr(v119 - 2, v118));
      }
      if ((*a20 & 7) != 0)
      {
        v120 = (unsigned int *)(*a20 & 0xFFFFFFFFFFFFFFF8);
        do
          v121 = __ldxr(v120);
        while (__stlxr(v121 - 2, v120));
      }
      if ((*a21 & 7) != 0)
      {
        v122 = (unsigned int *)(*a21 & 0xFFFFFFFFFFFFFFF8);
        do
          v123 = __ldxr(v122);
        while (__stlxr(v123 - 2, v122));
      }
      if ((*a22 & 7) != 0)
      {
        v124 = (unsigned int *)(*a22 & 0xFFFFFFFFFFFFFFF8);
        do
          v125 = __ldxr(v124);
        while (__stlxr(v125 - 2, v124));
      }
      if ((*a23 & 7) != 0)
      {
        v126 = (unsigned int *)(*a23 & 0xFFFFFFFFFFFFFFF8);
        do
          v127 = __ldxr(v126);
        while (__stlxr(v127 - 2, v126));
      }
      if ((*a24 & 7) != 0)
      {
        v128 = (unsigned int *)(*a24 & 0xFFFFFFFFFFFFFFF8);
        do
          v129 = __ldxr(v128);
        while (__stlxr(v129 - 2, v128));
      }
      if ((*a25 & 7) != 0)
      {
        v130 = (unsigned int *)(*a25 & 0xFFFFFFFFFFFFFFF8);
        do
          v131 = __ldxr(v130);
        while (__stlxr(v131 - 2, v130));
      }
      if ((*a26 & 7) != 0)
      {
        v132 = (unsigned int *)(*a26 & 0xFFFFFFFFFFFFFFF8);
        do
          v133 = __ldxr(v132);
        while (__stlxr(v133 - 2, v132));
      }
      if ((*a27 & 7) != 0)
      {
        v134 = (unsigned int *)(*a27 & 0xFFFFFFFFFFFFFFF8);
        do
          v135 = __ldxr(v134);
        while (__stlxr(v135 - 2, v134));
      }
      if ((*a28 & 7) != 0)
      {
        v136 = (unsigned int *)(*a28 & 0xFFFFFFFFFFFFFFF8);
        do
          v137 = __ldxr(v136);
        while (__stlxr(v137 - 2, v136));
      }
      if ((*a29 & 7) != 0)
      {
        v138 = (unsigned int *)(*a29 & 0xFFFFFFFFFFFFFFF8);
        do
          v139 = __ldxr(v138);
        while (__stlxr(v139 - 2, v138));
      }
      if ((*a30 & 7) != 0)
      {
        v140 = (unsigned int *)(*a30 & 0xFFFFFFFFFFFFFFF8);
        do
          v141 = __ldxr(v140);
        while (__stlxr(v141 - 2, v140));
      }
      if ((*a31 & 7) != 0)
      {
        v142 = (unsigned int *)(*a31 & 0xFFFFFFFFFFFFFFF8);
        do
          v143 = __ldxr(v142);
        while (__stlxr(v143 - 2, v142));
      }
      if ((*a32 & 7) != 0)
      {
        v144 = (unsigned int *)(*a32 & 0xFFFFFFFFFFFFFFF8);
        do
          v145 = __ldxr(v144);
        while (__stlxr(v145 - 2, v144));
      }
      if ((*a33 & 7) != 0)
      {
        v146 = (unsigned int *)(*a33 & 0xFFFFFFFFFFFFFFF8);
        do
          v147 = __ldxr(v146);
        while (__stlxr(v147 - 2, v146));
      }
      if ((*v69 & 7) != 0)
      {
        v148 = (unsigned int *)(*v69 & 0xFFFFFFFFFFFFFFF8);
        do
          v149 = __ldxr(v148);
        while (__stlxr(v149 - 2, v148));
      }
      _Unwind_Resume(a1);
    }
  }
}

