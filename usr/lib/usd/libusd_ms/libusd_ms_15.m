void sub_20C42CC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, unsigned int **a15, pxrInternal__aapl__pxrReserved__::PcpCache **a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;
  void ***v29;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v30;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v31;
  uint64_t v32;
  unint64_t *v33;
  void **v35;
  unsigned int *v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int v39;
  _QWORD **v40;
  const void *v41;

  a21 = v28 + 1232;
  sub_20C33CEF4((void ***)&a21);
  sub_20BFD6F90((void ***)&a21);
  v35 = *v29;
  *v29 = 0;
  if (v35)
    sub_20C456C64((int)v29, v35);
  if (*(_BYTE *)(v28 + 1184))
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)(v33 + 81));
  v36 = *(unsigned int **)(v28 + 832);
  if (v36)
  {
    v37 = v36 + 2;
    do
    {
      v38 = __ldxr(v37);
      v39 = v38 - 1;
    }
    while (__stlxr(v39, v37));
    if (!v39)
      (*(void (**)(unsigned int *))(*(_QWORD *)v36 + 8))(v36);
  }
  a21 = a13;
  sub_20C456B64((void ***)&a21);
  sub_20C4569E4(v33);
  sub_20BFC9C88(v32);
  v40 = (_QWORD **)*a12;
  *a12 = 0;
  if (v40)
    sub_20C450CA8((uint64_t)a12, v40);
  sub_20C450BC8((pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(v28 + 136), 0);
  sub_20C450AEC(a16, 0);
  sub_20C38B7B4(a14);
  sub_20C103234(v31);
  sub_20C103234(v30);
  sub_20BEBCE60(a15, v41);
  pxrInternal__aapl__pxrReserved__::TfRefBase::~TfRefBase((pxrInternal__aapl__pxrReserved__::TfRefBase *)v28);
  _Unwind_Resume(a1);
}

void **sub_20C42CEB8(void **a1)
{
  void **v3;

  v3 = a1;
  sub_20BFD6F90(&v3);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::~UsdStage(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  const char *v2;
  char *v3;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v4;
  uint64_t Identifier;
  const char *v6;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v7;
  uint64_t v8;
  const char *v9;
  void **v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  _QWORD **v15;
  unsigned int *v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  const void *v20;
  void **v21;

  *(_QWORD *)this = off_24C539570;
  if (sub_20C286E00(12))
  {
    if (*((_QWORD *)this + 4))
    {
      v4 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)this + 4);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v4);
      if (*(char *)(Identifier + 23) >= 0)
        v6 = (const char *)Identifier;
      else
        v6 = *(const char **)Identifier;
    }
    else
    {
      v6 = "<null>";
    }
    if (*((_QWORD *)this + 5))
    {
      v7 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)this + 5);
      v8 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v7);
      if (*(char *)(v8 + 23) >= 0)
        v9 = (const char *)v8;
      else
        v9 = *(const char **)v8;
    }
    else
    {
      v9 = "<null>";
    }
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::~UsdStage(rootLayer=@%s@, sessionLayer=@%s@)\n", v2, v3, v6, v9);
  }
  pxrInternal__aapl__pxrReserved__::UsdStage::_Close(this);
  v21 = (void **)((char *)this + 1232);
  sub_20C33CEF4(&v21);
  v21 = (void **)((char *)this + 1208);
  sub_20BFD6F90(&v21);
  v10 = (void **)*((_QWORD *)this + 149);
  *((_QWORD *)this + 149) = 0;
  if (v10)
    sub_20C456C64((_DWORD)this + 1192, v10);
  if (*((_BYTE *)this + 1184))
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 848));
  v11 = (unsigned int *)*((_QWORD *)this + 104);
  if (v11)
  {
    v12 = v11 + 2;
    do
    {
      v13 = __ldxr(v12);
      v14 = v13 - 1;
    }
    while (__stlxr(v14, v12));
    if (!v14)
      (*(void (**)(unsigned int *))(*(_QWORD *)v11 + 8))(v11);
  }
  v21 = (void **)((char *)this + 792);
  sub_20C456B64(&v21);
  sub_20C4569E4((unint64_t *)this + 25);
  sub_20BFC9C88((uint64_t)this + 152);
  v15 = (_QWORD **)*((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v15)
    sub_20C450CA8((uint64_t)this + 144, v15);
  sub_20C450BC8((pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)this + 17, 0);
  sub_20C450AEC((pxrInternal__aapl__pxrReserved__::PcpCache **)this + 16, 0);
  sub_20C2011B8((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 64));
  v16 = (unsigned int *)*((_QWORD *)this + 7);
  if (v16)
  {
    v17 = v16 + 2;
    do
    {
      v18 = __ldxr(v17);
      v19 = v18 - 1;
    }
    while (__stlxr(v19, v17));
    if (!v19)
      (*(void (**)(unsigned int *))(*(_QWORD *)v16 + 8))(v16);
  }
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)this + 5);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)this + 4);
  sub_20BEBCE60((unsigned int **)this + 2, v20);
  pxrInternal__aapl__pxrReserved__::TfRefBase::~TfRefBase(this);
}

{
  void *v1;

  pxrInternal__aapl__pxrReserved__::UsdStage::~UsdStage(this);
  operator delete(v1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_Close(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  char v2;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::UsdStage *v4;
  uint64_t (**v5[2])(_QWORD);

  v2 = *((_BYTE *)this + 1256);
  *((_BYTE *)this + 1256) = 1;
  v4 = this;
  v5[0] = (uint64_t (**)(_QWORD))off_24C5395D8;
  v5[1] = (uint64_t (**)(_QWORD))&v4;
  tbb::interface7::internal::isolate_within_arena(v5, 0);
  result = sub_20C42D13C((uint64_t *)this + 25);
  *((_BYTE *)this + 1256) = v2;
  return result;
}

void sub_20C42D118(_Unwind_Exception *a1)
{
  uint64_t v1;
  char v2;

  *(_BYTE *)(v1 + 1256) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_20C42D13C(uint64_t *a1)
{
  uint64_t i;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[56];

  for (i = 536; i != 584; i += 24)
    *(uint64_t *)((char *)&v3 + i) = 0;
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v19 = 0u;
  v18 = 0u;
  v17 = 0u;
  v16 = 0u;
  v15 = 0u;
  v14 = 0u;
  v13 = 0u;
  v12 = 0u;
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v6 = 0u;
  v7 = 0u;
  v4 = 0u;
  v5 = 0u;
  __dmb(0xBu);
  v3 = 0;
  __dmb(0xBu);
  v36 = 0;
  memset(v37, 0, 48);
  *(_QWORD *)&v4 = v37;
  __dmb(0xBu);
  v3 = 1;
  if (&v3 != a1)
    a1 = sub_20BED6258(&v3, a1);
  if ((pxrInternal__aapl__pxrReserved__::Work_ShouldSynchronizeAsyncDestroyCalls((pxrInternal__aapl__pxrReserved__ *)a1) & 1) == 0)
    sub_20C456C9C(&v3);
  return sub_20C4569E4((unint64_t *)&v3);
}

void sub_20C42D22C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C4569E4((unint64_t *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiateStage(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _DWORD **a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  const char *v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  unsigned __int8 v15;
  std::string *v16;
  __int128 v17;
  _BOOL4 v18;
  BOOL v19;
  uint64_t v20;
  void *v21;
  pxrInternal__aapl__pxrReserved__::UsdStageLoadRules *v22;
  uint64_t v23;
  pxrInternal__aapl__pxrReserved__::SdfPath *v24;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v25;
  uint64_t v26;
  pxrInternal__aapl__pxrReserved__::UsdStage *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _DWORD *v44;
  _DWORD *v45;
  std::string::size_type v46;
  uint64_t v47;
  std::string::pointer data;
  pxrInternal__aapl__pxrReserved__::UsdStage *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  _DWORD *v64;
  _DWORD *v65;
  void *v66;
  pxrInternal__aapl__pxrReserved__::PcpCache **v67;
  pxrInternal__aapl__pxrReserved__::UsdStage *v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  double v72;
  const char *v73;
  char *v74;
  void *v76;
  uint64_t *v77;
  uint64_t *v78;
  std::string v79[2];
  _OWORD v80[3];
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  void *__p[2];
  uint64_t **v86;
  uint64_t *v87;
  uint64_t (**v88[3])(_QWORD);
  uint64_t v89;
  _DWORD *v90;
  unint64_t v91;
  _BYTE v92[16];
  uint64_t v93;

  v93 = *MEMORY[0x24BDAC8D0];
  if (sub_20C286E00(13))
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::_InstantiateStage: Creating new UsdStage\n", v12, v13);
  v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a1);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v14);
  v15 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v15 & 1) != 0)
  {
    std::operator+<char>();
    v16 = std::string::append(v79, "@");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v86 = (uint64_t **)v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v79[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v79[0].__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v86 = 0;
  }
  sub_20BF472E8((uint64_t)&v83, "Usd", (char *)__p);
  if (SHIBYTE(v86) < 0)
    operator delete(__p[0]);
  v18 = sub_20C286E00(14);
  v19 = v18;
  if (v18)
    v20 = mach_absolute_time();
  else
    v20 = 0;
  if (*a1)
  {
    v21 = operator new(0x4F0uLL);
    pxrInternal__aapl__pxrReserved__::UsdStage::UsdStage((uint64_t)v21, a1, a2, a3, a4, a5);
    *a6 = (uint64_t)v21;
    v22 = (pxrInternal__aapl__pxrReserved__::UsdStageLoadRules *)pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v92);
    if (a5)
      pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadNone(v22, (uint64_t *)v79);
    else
      memset(v79, 0, 24);
    v23 = sub_20C39A7A8(a6);
    sub_20C33E2D4((_QWORD *)(v23 + 1232));
    *(std::string *)(v23 + 1232) = v79[0];
    memset(v79, 0, 24);
    __p[0] = v79;
    sub_20C33CEF4((void ***)__p);
    v82 = 0;
    v81 = 0u;
    memset(v80, 0, sizeof(v80));
    memset(v79, 0, sizeof(v79));
    v25 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v24);
    v26 = sub_20C39A7A8(a6);
    sub_20BFD6E54(&v89, v25);
    sub_20BFD6EA4((_DWORD *)&v89 + 1, (_DWORD *)v25 + 1);
    __p[0] = 0;
    __p[1] = 0;
    v86 = 0;
    v76 = __p;
    LOBYTE(v77) = 0;
    __p[0] = operator new(8uLL);
    __p[1] = __p[0];
    v86 = (uint64_t **)((char *)__p[0] + 8);
    __p[1] = sub_20BFD6DBC((uint64_t)&v86, &v89, &v90, (_DWORD *)__p[0]);
    sub_20BDDC0E4(&v76, "instantiating stage");
    pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimIndexesInParallel(v26, (uint64_t)__p, (uint64_t *)&v76, (uint64_t)v79);
    if (SHIBYTE(v78) < 0)
      operator delete(v76);
    v76 = __p;
    sub_20BFD6F90((void ***)&v76);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v89 + 1);
    sub_20BFD265C(&v89);
    v27 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(a6);
    v29 = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(v27, v25, v28);
    *(_QWORD *)(sub_20C39A7A8(a6) + 24) = v29;
    v30 = ((uint64_t)(v79[0].__r_.__value_.__l.__size_ - v79[0].__r_.__value_.__r.__words[0]) >> 3) + 1;
    v76 = 0;
    v77 = 0;
    v78 = 0;
    v89 = 0;
    v90 = 0;
    v91 = 0;
    sub_20BE8BBC4(&v76, v30);
    sub_20C0B8D74(&v89, v30);
    v31 = sub_20C39A7A8(a6);
    v32 = v31;
    v33 = v77;
    if (v77 >= v78)
    {
      v35 = ((char *)v77 - (_BYTE *)v76) >> 3;
      if ((unint64_t)(v35 + 1) >> 61)
        sub_20BDDF694();
      v36 = ((char *)v78 - (_BYTE *)v76) >> 2;
      if (v36 <= v35 + 1)
        v36 = v35 + 1;
      if ((unint64_t)((char *)v78 - (_BYTE *)v76) >= 0x7FFFFFFFFFFFFFF8)
        v37 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v37 = v36;
      if (v37)
        v38 = (char *)sub_20BDDF6A8((uint64_t)&v78, v37);
      else
        v38 = 0;
      v39 = &v38[8 * v35];
      v40 = &v38[8 * v37];
      *(_QWORD *)v39 = *(_QWORD *)(v32 + 24);
      v34 = (uint64_t *)(v39 + 8);
      v42 = (char *)v76;
      v41 = (char *)v77;
      if (v77 != v76)
      {
        do
        {
          v43 = *((_QWORD *)v41 - 1);
          v41 -= 8;
          *((_QWORD *)v39 - 1) = v43;
          v39 -= 8;
        }
        while (v41 != v42);
        v41 = (char *)v76;
      }
      v76 = v39;
      v77 = v34;
      v78 = (uint64_t *)v40;
      if (v41)
        operator delete(v41);
    }
    else
    {
      *v77 = *(_QWORD *)(v31 + 24);
      v34 = v33 + 1;
    }
    v77 = v34;
    v44 = v90;
    if ((unint64_t)v90 >= v91)
    {
      v45 = (_DWORD *)sub_20BFD7890(&v89, v25);
    }
    else
    {
      sub_20BFD6E54(v90, v25);
      sub_20BFD6EA4(v44 + 1, (_DWORD *)v25 + 1);
      v45 = v44 + 2;
    }
    v90 = v45;
    v46 = v79[0].__r_.__value_.__r.__words[0];
    if (v79[0].__r_.__value_.__l.__size_ != v79[0].__r_.__value_.__r.__words[0])
    {
      v47 = 0;
      do
      {
        data = v79[1].__r_.__value_.__l.__data_;
        v49 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(a6);
        v51 = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(v49, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v46 + 8 * v47), v50);
        v52 = v51;
        if (v51)
          *(_QWORD *)(v51 + 40) = *((_QWORD *)v49 + 3) | 1;
        v53 = v77;
        if (v77 >= v78)
        {
          v55 = ((char *)v77 - (_BYTE *)v76) >> 3;
          if ((unint64_t)(v55 + 1) >> 61)
            sub_20BDDF694();
          v56 = ((char *)v78 - (_BYTE *)v76) >> 2;
          if (v56 <= v55 + 1)
            v56 = v55 + 1;
          if ((unint64_t)((char *)v78 - (_BYTE *)v76) >= 0x7FFFFFFFFFFFFFF8)
            v57 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v57 = v56;
          if (v57)
            v58 = (char *)sub_20BDDF6A8((uint64_t)&v78, v57);
          else
            v58 = 0;
          v59 = (uint64_t *)&v58[8 * v55];
          *v59 = v52;
          v54 = v59 + 1;
          v61 = (char *)v76;
          v60 = (char *)v77;
          if (v77 != v76)
          {
            do
            {
              v62 = *((_QWORD *)v60 - 1);
              v60 -= 8;
              *--v59 = v62;
            }
            while (v60 != v61);
            v60 = (char *)v76;
          }
          v76 = v59;
          v77 = v54;
          v78 = (uint64_t *)&v58[8 * v57];
          if (v60)
            operator delete(v60);
        }
        else
        {
          *v77 = v51;
          v54 = v53 + 1;
        }
        v63 = &data[8 * v47];
        v77 = v54;
        v64 = v90;
        if ((unint64_t)v90 >= v91)
        {
          v65 = (_DWORD *)sub_20BFD7890(&v89, v63);
        }
        else
        {
          sub_20BFD6E54(v90, v63);
          sub_20BFD6EA4(v64 + 1, &data[8 * v47 + 4]);
          v65 = v64 + 2;
        }
        v90 = v65;
        ++v47;
        v46 = v79[0].__r_.__value_.__r.__words[0];
      }
      while (v47 != (uint64_t)(v79[0].__r_.__value_.__l.__size_ - v79[0].__r_.__value_.__r.__words[0]) >> 3);
    }
    v66 = (void *)sub_20C39A7A8(a6);
    v87 = &v89;
    __p[0] = v66;
    __p[1] = &v76;
    v86 = &v87;
    v88[0] = (uint64_t (**)(_QWORD))off_24C539810;
    v88[1] = (uint64_t (**)(_QWORD))__p;
    tbb::interface7::internal::isolate_within_arena(v88, 0);
    v67 = (pxrInternal__aapl__pxrReserved__::PcpCache **)sub_20C39A7A8(a6);
    pxrInternal__aapl__pxrReserved__::UsdStage::_RegisterPerLayerNotices(v67);
    v68 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(a6);
    pxrInternal__aapl__pxrReserved__::UsdStage::_RegisterResolverChangeNotice(v68);
    pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches((char **)__p);
    v69 = (uint64_t *)__p[0];
    v70 = (uint64_t *)__p[1];
    if (__p[0] != __p[1])
    {
      do
        pxrInternal__aapl__pxrReserved__::UsdStageCache::Insert(*v69++, a6);
      while (v69 != v70);
      v69 = (uint64_t *)__p[0];
    }
    if (v69)
    {
      __p[1] = v69;
      operator delete(v69);
    }
    if (v19)
    {
      v71 = mach_absolute_time();
      if (sub_20C286E00(14))
      {
        v72 = pxrInternal__aapl__pxrReserved__::ArchTicksToSeconds((pxrInternal__aapl__pxrReserved__ *)(v71 - v20));
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::_InstantiateStage: Time elapsed (s): %f\n", v73, v74, *(_QWORD *)&v72);
      }
    }
    __p[0] = &v89;
    sub_20BFD6F90((void ***)__p);
    if (v76)
    {
      v77 = (uint64_t *)v76;
      operator delete(v76);
    }
    __p[0] = &v81;
    sub_20BFD6F90((void ***)__p);
    __p[0] = (char *)&v80[1] + 8;
    sub_20BFD6F90((void ***)__p);
    __p[0] = v80;
    sub_20BFD6F90((void ***)__p);
    __p[0] = &v79[1];
    sub_20BFD6F90((void ***)__p);
    __p[0] = v79;
    sub_20BFD6F90((void ***)__p);
    pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v92);
  }
  else
  {
    *a6 = 0;
  }
  while (v84--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v83);
}

void sub_20C42D90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v42;
  uint64_t v43;

  *(_QWORD *)(v43 - 144) = v43 - 136;
  sub_20BFD6F90((void ***)(v43 - 144));
  if (__p)
    operator delete(__p);
  sub_20C42E504(&a16);
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v43 - 112));
  sub_20C455C74(v42);
  sub_20BEB24F4((uint64_t)&a35);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimIndexesInParallel(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v8;
  unint64_t v9;
  const char *v10;
  char *v11;
  void ***v12;
  uint64_t v13;
  const char *p_p;
  const char *v15;
  char *v16;
  void ***v17;
  unsigned __int8 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  char *v26;
  pxrInternal__aapl__pxrReserved__::SdfPath *v27;
  _OWORD v28[3];
  _OWORD v29[3];
  __int128 v30;
  uint64_t v31;
  void *__p;
  char v33;
  void **v34[2];
  char v35;
  void **v36;
  void **v37;
  uint64_t v38;

  if (sub_20C286E00(3))
  {
    v8 = *(pxrInternal__aapl__pxrReserved__::SdfPath **)a2;
    if ((unint64_t)((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3) >= 0x10)
      v9 = 16;
    else
      v9 = (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3;
    memset(v28, 0, 24);
    sub_20C462B70(v28, v8, (_DWORD *)v8 + 2 * v9, v9);
    sub_20C39C4D0((pxrInternal__aapl__pxrReserved__::SdfPath **)v28);
    if (v35 >= 0)
      v12 = v34;
    else
      v12 = (void ***)v34[0];
    v13 = *(_QWORD *)(a2 + 8) - *(_QWORD *)a2;
    if ((unint64_t)v13 < 0x81)
    {
      p_p = "";
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)" (and %zu more)", v10, v11, (v13 >> 3) - 16);
      if (v33 >= 0)
        p_p = (const char *)&__p;
      else
        p_p = (const char *)__p;
    }
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Composing prim indexes: %s%s\n", v10, v11, v12, p_p);
    if ((unint64_t)v13 >= 0x81 && v33 < 0)
      operator delete(__p);
    if (v35 < 0)
      operator delete(v34[0]);
    if (sub_20C286E00(3))
    {
      v17 = &v36;
      if (v38 < 0)
        v17 = (void ***)v36;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"%s", v15, v16, v17);
    }
    if (SHIBYTE(v38) < 0)
      operator delete(v36);
    v36 = (void **)v28;
    sub_20BFD6F90(&v36);
  }
  v18 = atomic_load((unsigned __int8 *)&qword_254988B18);
  if ((v18 & 1) == 0)
  {
    v27 = (pxrInternal__aapl__pxrReserved__::SdfPath *)__cxa_guard_acquire(&qword_254988B18);
    if ((_DWORD)v27)
    {
      sub_20C3407F4(v27, qword_254988B00);
      __cxa_atexit((void (*)(void *))sub_20C42CEB8, qword_254988B00, &dword_20BDBC000);
      __cxa_guard_release(&qword_254988B18);
    }
  }
  v19 = a1 + 1208;
  v20 = *(char **)(a1 + 1216);
  v21 = *(char **)(a1 + 1208);
  v22 = (_QWORD *)qword_254988B00[0];
  if (v20 - v21 == unk_254988B08 - qword_254988B00[0])
  {
    while (v21 != v20)
    {
      if (*(_QWORD *)v21 != *v22)
        goto LABEL_31;
      v21 += 8;
      ++v22;
    }
    v19 = 0;
  }
LABEL_31:
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v23 = *(_QWORD *)(a1 + 128);
  v24 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)&v28[0] = v19;
  *((_QWORD *)&v28[0] + 1) = a1 + 1232;
  *(_QWORD *)&v28[1] = v24;
  v34[0] = (void **)a1;
  v25 = *(const char **)(a1 + 1192);
  if (v25)
  {
    if (v25[23] < 0)
      v25 = *(const char **)v25;
  }
  else
  {
    v25 = "UsdStages in aggregate";
  }
  pxrInternal__aapl__pxrReserved__::PcpCache::_ComputePrimIndexesInParallel(v23, (pxrInternal__aapl__pxrReserved__::SdfPath **)a2, (uint64_t *)&v36, (uint64_t)v28, (uint64_t)sub_20C462BF4, (uint64_t)v34, (uint64_t)sub_20C462D84, "Usd", (uint64_t)v25);
  if (v36 != v37)
    pxrInternal__aapl__pxrReserved__::UsdStage::_ReportPcpErrors(a1, (uint64_t *)&v36, a3);
  v31 = 0;
  v30 = 0u;
  memset(v29, 0, sizeof(v29));
  memset(v28, 0, sizeof(v28));
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::ProcessChanges(*(_QWORD **)(a1 + 144), (uint64_t *)v28, v26);
  if (a4)
    sub_20C440F5C(a4, (_DWORD **)v28);
  if (*(_QWORD *)&v29[0] != *((_QWORD *)&v29[0] + 1))
    pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimIndexesInParallel(a1, (char *)&v29[1] + 8, a3, a4);
  v34[0] = (void **)&v30;
  sub_20BFD6F90(v34);
  v34[0] = (void **)&v29[1] + 1;
  sub_20BFD6F90(v34);
  v34[0] = (void **)v29;
  sub_20BFD6F90(v34);
  v34[0] = (void **)&v28[1] + 1;
  sub_20BFD6F90(v34);
  v34[0] = (void **)v28;
  sub_20BFD6F90(v34);
  *(_QWORD *)&v28[0] = &v36;
  sub_20BDE9EB0((void ***)v28);
}

void sub_20C42DDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  __cxa_guard_abort(&qword_254988B18);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, char *a3)
{
  unsigned __int8 v5;
  _QWORD *v6;
  _BOOL4 v7;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned int *v9;
  uint64_t v10;
  const char *Text;
  _QWORD v13[4];
  char v14;
  uint64_t v15[2];
  int v16;

  v5 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v5 & 1) != 0)
  {
    v6 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("Usd_PrimData", 0, a3);
    v7 = v6 != 0;
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v15[1] = (uint64_t)v6;
  v16 = v7;
  v8 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)operator new(0x40uLL);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData::Usd_PrimData(v8, this, a2);
  v15[0] = (uint64_t)v8;
  v9 = (unsigned int *)sub_20C46006C((uint64_t)this + 776, a2, v15);
  if ((sub_20C45D5EC((uint64_t *)this + 25, 1, v9 + 4, 0, 0, 0, (uint64_t (*)(uint64_t, unsigned int *, uint64_t))sub_20C45D924, v9) & 1) != 0)
  {
    v10 = v15[0];
  }
  else
  {
    v13[0] = "usd/stage.cpp";
    v13[1] = "_InstantiatePrim";
    v13[2] = 2795;
    v13[3] = "Usd_PrimDataPtr pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(const SdfPath &)";
    v14 = 0;
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v13, 3, (pxrInternal__aapl__pxrReserved__ *)"Newly instantiated prim <%s> already present in _primMap", Text);
    v10 = 0;
  }
  v16 = v7 - 1;
  if (v7)
  {
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End((uint64_t)v6);
    v16 = -1;
  }
  return v10;
}

void sub_20C42DFB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_20BEB24F4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrototypePrim(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, char *a3)
{
  uint64_t result;

  result = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(this, a2, a3);
  if (result)
    *(_QWORD *)(result + 40) = *((_QWORD *)this + 3) | 1;
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreesInParallel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[3];
  uint64_t v5;
  uint64_t (**v6[2])(_QWORD);

  v4[0] = a1;
  v4[1] = a2;
  v4[2] = &v5;
  v5 = a3;
  v6[0] = (uint64_t (**)(_QWORD))off_24C539810;
  v6[1] = (uint64_t (**)(_QWORD))v4;
  return tbb::interface7::internal::isolate_within_arena(v6, 0);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_RegisterPerLayerNotices(pxrInternal__aapl__pxrReserved__::PcpCache **this)
{
  uint64_t UsedLayersRevision;
  uint64_t v3;
  char *v4;
  pxrInternal__aapl__pxrReserved__::PcpCache *v5;
  BOOL v6;
  pxrInternal__aapl__pxrReserved__::PcpCache *v7;
  pxrInternal__aapl__pxrReserved__::PcpCache *v8;
  pxrInternal__aapl__pxrReserved__::PcpCache *v9;
  _QWORD *v10;
  __int128 *v11;
  pxrInternal__aapl__pxrReserved__::TfNotice *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  __int128 v40;
  pxrInternal__aapl__pxrReserved__::PcpCache *v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int v45;
  __int128 v46;
  void **v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  pxrInternal__aapl__pxrReserved__::PcpCache *v53;
  _QWORD *v54;
  _QWORD *v55[2];

  UsedLayersRevision = pxrInternal__aapl__pxrReserved__::PcpCache::GetUsedLayersRevision(this[16]);
  v5 = this[24];
  if (v5)
    v6 = v5 == (pxrInternal__aapl__pxrReserved__::PcpCache *)UsedLayersRevision;
  else
    v6 = 0;
  if (v6)
    return;
  v7 = (pxrInternal__aapl__pxrReserved__::PcpCache *)UsedLayersRevision;
  pxrInternal__aapl__pxrReserved__::PcpCache::GetUsedLayers(this[16], v3, v4, (uint64_t)&v54);
  this[24] = v7;
  v8 = this[99];
  v9 = this[100];
  v52 = 0uLL;
  v53 = 0;
  v10 = v54;
  sub_20C440FEC((uint64_t *)&v52, (unint64_t)v55[1]);
  sub_20C3A3AEC(&v50, (uint64_t)this);
  v11 = (__int128 *)(this + 99);
  while (v10 != v55)
  {
    if (v8 == v9 || sub_20BFF2B40((uint64_t)(v10 + 4), (uint64_t)v8))
    {
      v12 = (pxrInternal__aapl__pxrReserved__::TfNotice *)sub_20C462F98(&v50, (uint64_t)pxrInternal__aapl__pxrReserved__::UsdStage::_HandleLayersDidChange, 0, v10 + 4);
      pxrInternal__aapl__pxrReserved__::TfNotice::_Register(v12, (char **)&v46);
      v13 = v10[5];
      v47 = (void **)v10[4];
      v48 = v13;
      if (v13)
      {
        v14 = (unsigned int *)(v13 + 8);
        do
          v15 = __ldxr(v14);
        while (__stxr(v15 + 1, v14));
      }
      v49 = v46;
      v46 = 0uLL;
      sub_20C44107C((uint64_t *)&v52, (uint64_t)&v47);
      v16 = *((_QWORD *)&v49 + 1);
      if (*((_QWORD *)&v49 + 1))
      {
        v17 = (unsigned int *)(*((_QWORD *)&v49 + 1) + 8);
        do
        {
          v18 = __ldxr(v17);
          v19 = v18 - 1;
        }
        while (__stlxr(v19, v17));
        if (!v19)
          (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
      }
      v20 = v48;
      if (v48)
      {
        v21 = (unsigned int *)(v48 + 8);
        do
        {
          v22 = __ldxr(v21);
          v23 = v22 - 1;
        }
        while (__stlxr(v23, v21));
        if (!v23)
          (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
      }
      v24 = *((_QWORD *)&v46 + 1);
      if (*((_QWORD *)&v46 + 1))
      {
        v25 = (unsigned int *)(*((_QWORD *)&v46 + 1) + 8);
        do
        {
          v26 = __ldxr(v25);
          v27 = v26 - 1;
        }
        while (__stlxr(v27, v25));
        if (!v27)
          (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
      }
      v28 = (_QWORD *)v10[1];
      if (v28)
      {
        do
        {
          v10 = v28;
          v28 = (_QWORD *)*v28;
        }
        while (v28);
      }
      else
      {
        do
        {
          v29 = v10;
          v10 = (_QWORD *)v10[2];
        }
        while ((_QWORD *)*v10 != v29);
      }
    }
    else if (sub_20BFF2B40((uint64_t)v8, (uint64_t)(v10 + 4)))
    {
LABEL_35:
      pxrInternal__aapl__pxrReserved__::TfNotice::Revoke((uint64_t *)v8 + 2);
      v8 = (pxrInternal__aapl__pxrReserved__::PcpCache *)((char *)v8 + 32);
    }
    else
    {
      v30 = (_QWORD *)*((_QWORD *)&v52 + 1);
      if (*((_QWORD *)&v52 + 1) >= (unint64_t)v53)
      {
        v37 = sub_20C4635A0((uint64_t *)&v52, v8);
      }
      else
      {
        **((_QWORD **)&v52 + 1) = *(_QWORD *)v8;
        v31 = *((_QWORD *)v8 + 1);
        v30[1] = v31;
        if (v31)
        {
          v32 = (unsigned int *)(v31 + 8);
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
        }
        v30[2] = *((_QWORD *)v8 + 2);
        v34 = *((_QWORD *)v8 + 3);
        v30[3] = v34;
        if (v34)
        {
          v35 = (unsigned int *)(v34 + 8);
          do
            v36 = __ldxr(v35);
          while (__stxr(v36 + 1, v35));
        }
        v37 = (uint64_t)(v30 + 4);
      }
      *((_QWORD *)&v52 + 1) = v37;
      v8 = (pxrInternal__aapl__pxrReserved__::PcpCache *)((char *)v8 + 32);
      v38 = (_QWORD *)v10[1];
      if (v38)
      {
        do
        {
          v10 = v38;
          v38 = (_QWORD *)*v38;
        }
        while (v38);
      }
      else
      {
        do
        {
          v39 = v10;
          v10 = (_QWORD *)v10[2];
        }
        while ((_QWORD *)*v10 != v39);
      }
    }
  }
  if (v8 != v9)
    goto LABEL_35;
  v40 = *v11;
  *v11 = v52;
  v52 = v40;
  v41 = this[101];
  this[101] = v53;
  v53 = v41;
  v42 = v51;
  if (v51)
  {
    v43 = (unsigned int *)(v51 + 8);
    do
    {
      v44 = __ldxr(v43);
      v45 = v44 - 1;
    }
    while (__stlxr(v45, v43));
    if (!v45)
      (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
  }
  v47 = (void **)&v52;
  sub_20C456B64(&v47);
  sub_20BFF29AC((uint64_t)&v54, v55[0]);
}

void sub_20C42E35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,_QWORD *a21)
{
  a11 = (void **)&a17;
  sub_20C456B64(&a11);
  sub_20BFF29AC((uint64_t)&a20, a21);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_RegisterResolverChangeNotice(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  pxrInternal__aapl__pxrReserved__::TfNotice *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  sub_20C3A3AEC(&v15, (uint64_t)this);
  v2 = (pxrInternal__aapl__pxrReserved__::TfNotice *)sub_20C4636C4(&v15, (uint64_t)pxrInternal__aapl__pxrReserved__::UsdStage::_HandleResolverDidChange, 0);
  pxrInternal__aapl__pxrReserved__::TfNotice::_Register(v2, (char **)&v17);
  v3 = (unsigned int *)*((_QWORD *)this + 104);
  *(_OWORD *)((char *)this + 824) = v17;
  *((_QWORD *)&v17 + 1) = 0;
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
    v7 = *((_QWORD *)&v17 + 1);
    *(_QWORD *)&v17 = 0;
    if (*((_QWORD *)&v17 + 1))
    {
      v8 = (unsigned int *)(*((_QWORD *)&v17 + 1) + 8);
      do
      {
        v9 = __ldxr(v8);
        v10 = v9 - 1;
      }
      while (__stlxr(v10, v8));
      if (!v10)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    }
  }
  else
  {
    *(_QWORD *)&v17 = 0;
  }
  result = v16;
  if (v16)
  {
    v12 = (unsigned int *)(v16 + 8);
    do
    {
      v13 = __ldxr(v12);
      v14 = v13 - 1;
    }
    while (__stlxr(v14, v12));
    if (!v14)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C42E4EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

void **sub_20C42E504(void **a1)
{
  void **v3;

  v3 = a1 + 12;
  sub_20BFD6F90(&v3);
  v3 = a1 + 9;
  sub_20BFD6F90(&v3);
  v3 = a1 + 6;
  sub_20BFD6F90(&v3);
  v3 = a1 + 3;
  sub_20BFD6F90(&v3);
  v3 = a1;
  sub_20BFD6F90(&v3);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::CreateNew@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  unsigned __int8 v6;
  std::string *v7;
  __int128 v8;
  void *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  std::string::size_type size;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v25;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v26;
  void *__p[2];
  std::string::size_type v28;
  uint64_t v29;
  int v30;
  std::string v31;

  v6 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v6 & 1) != 0)
  {
    std::operator+<char>();
    v7 = std::string::append(&v31, "@");
    v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v28 = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v31.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v28 = 0;
  }
  sub_20BF472E8((uint64_t)&v29, "Usd", (char *)__p);
  if (SHIBYTE(v28) < 0)
    operator delete(__p[0]);
  sub_20C42E85C(a1, &v26);
  if (v26)
  {
    sub_20C1034E8((uint64_t *)&v31, (uint64_t *)&v26);
    sub_20C1034E8(&v23, (uint64_t *)&v26);
    sub_20C42EB08(&v23, (uint64_t *)&v25);
    sub_20C1034E8((uint64_t *)__p, (uint64_t *)&v25);
    pxrInternal__aapl__pxrReserved__::UsdStage::Open((uint64_t *)&v31, (uint64_t *)__p, a2, a3);
    v9 = __p[1];
    if (__p[1])
    {
      v10 = (unsigned int *)((char *)__p[1] + 8);
      do
      {
        v11 = __ldxr(v10);
        v12 = v11 - 1;
      }
      while (__stlxr(v12, v10));
      if (!v12)
        (*(void (**)(void *))(*(_QWORD *)v9 + 8))(v9);
    }
    sub_20C103234(&v25);
    v13 = v24;
    if (v24)
    {
      v14 = (unsigned int *)(v24 + 8);
      do
      {
        v15 = __ldxr(v14);
        v16 = v15 - 1;
      }
      while (__stlxr(v16, v14));
      if (!v16)
        (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
    }
    size = v31.__r_.__value_.__l.__size_;
    if (v31.__r_.__value_.__l.__size_)
    {
      v18 = (unsigned int *)(v31.__r_.__value_.__l.__size_ + 8);
      do
      {
        v19 = __ldxr(v18);
        v20 = v19 - 1;
      }
      while (__stlxr(v20, v18));
      if (!v20)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
    result = (uint64_t)sub_20C103234(&v26);
  }
  else
  {
    result = (uint64_t)sub_20C103234(&v26);
    *a3 = 0;
  }
  while (v30--)
    result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v29);
  return result;
}

void sub_20C42E75C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  uint64_t v22;

  if (*(char *)(v22 - 33) < 0)
    operator delete(*(void **)(v22 - 56));
  _Unwind_Resume(exception_object);
}

void sub_20C42E85C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t *Instance;
  unint64_t v5;
  unint64_t v6;
  const char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  const char *v11;
  char v12;
  unint64_t v13;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v13);
  v9 = 0;
  v10 = 0;
  v8 = (char *)&v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateNew(a1, (pxrInternal__aapl__pxrReserved__::TfToken *)&v8, a2);
  sub_20BDE9D48((uint64_t)&v8, v9);
  if (!*a2)
  {
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v5 = v13;
    v6 = atomic_load(Instance + 18);
    if (v5 >= v6
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v13, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
    {
      v8 = "usd/stage.cpp";
      v9 = "_CreateNewLayer";
      v10 = 911;
      v11 = "SdfLayerRefPtr pxrInternal__aapl__pxrReserved__::_CreateNewLayer(const std::string &)";
      v12 = 0;
      if (*(char *)(a1 + 23) >= 0)
        v7 = (const char *)a1;
      else
        v7 = *(const char **)a1;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v8, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to CreateNew layer with identifier '%s'", v7);
    }
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v13);
}

void sub_20C42E958(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v1;
  uint64_t v2;

  sub_20C103234(v1);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)(v2 - 24));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Open(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned int a3@<W2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  uint64_t (*v8)(uint64_t *);
  char v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  uint64_t Identifier;
  uint64_t v12;
  uint64_t (*v13)(uint64_t *);
  char v14;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v15;
  uint64_t v16;
  const char *v17;
  const char *v18;
  char *v19;
  void **v20;
  void *__p[2];
  uint64_t v22;
  const char *v23;
  char v24;

  v8 = sub_20BFD2F78(a1);
  if (v9 & 1 | (unint64_t)v8)
  {
    if (sub_20C286E00(13))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v10);
      if (*(char *)(Identifier + 23) >= 0)
        v12 = Identifier;
      else
        v12 = *(_QWORD *)Identifier;
      v13 = sub_20BFD2F78(a2);
      if (v14 & 1 | (unint64_t)v13)
      {
        v15 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
        v16 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v15);
        if (*(char *)(v16 + 23) >= 0)
          v17 = (const char *)v16;
        else
          v17 = *(const char **)v16;
      }
      else
      {
        v17 = "<null>";
      }
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a3, (uint64_t)__p);
      if (v22 >= 0)
        v20 = __p;
      else
        v20 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::Open(rootLayer=@%s@, sessionLayer=@%s@, load=%s)\n", v18, v19, v12, v17, v20);
      if (SHIBYTE(v22) < 0)
        operator delete(__p[0]);
    }
    sub_20C430E80(a3, a1, a2, a4);
  }
  else
  {
    __p[0] = "usd/stage.cpp";
    __p[1] = "Open";
    v22 = 1249;
    v23 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Open(const SdfLayerHandle &, const SdfLayerH"
          "andle &, InitialLoadSet)";
    v24 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a4 = 0;
  }
}

void sub_20C42EAEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C42EB08(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v3;
  uint64_t Identifier;
  std::string *v5;
  __int128 v6;
  _QWORD **v7;
  _QWORD *v8[2];
  void *__p[2];
  char v10;
  std::string v11;
  std::string v12;

  v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
  Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v3);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetDisplayNameFromIdentifier(__p, Identifier);
  pxrInternal__aapl__pxrReserved__::TfStringGetBeforeSuffix((uint64_t)__p, 46, &v11);
  v5 = std::string::append(&v11, "-session.usda");
  v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v12.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  v8[0] = 0;
  v8[1] = 0;
  v7 = v8;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateAnonymous(&v12, (pxrInternal__aapl__pxrReserved__::TfToken *)&v7, a2);
  sub_20BDE9D48((uint64_t)&v7, v8[0]);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v12.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  if (v10 < 0)
    operator delete(__p[0]);
}

void sub_20C42EBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, _QWORD *a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  sub_20BDE9D48((uint64_t)&a10, a11);
  if (*(char *)(v24 - 25) < 0)
    operator delete(*(void **)(v24 - 48));
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
    operator delete(a13);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::CreateNew@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned int a3@<W2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  unsigned __int8 v8;
  std::string *v9;
  __int128 v10;
  std::string::size_type size;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;
  void *__p[2];
  std::string::size_type v18;
  uint64_t v19;
  int v20;
  std::string v21;

  v8 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v8 & 1) != 0)
  {
    std::operator+<char>();
    v9 = std::string::append(&v21, "@");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v18 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v18 = 0;
  }
  sub_20BF472E8((uint64_t)&v19, "Usd", (char *)__p);
  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);
  sub_20C42E85C(a1, __p);
  if (__p[0])
  {
    sub_20C1034E8((uint64_t *)&v21, (uint64_t *)__p);
    pxrInternal__aapl__pxrReserved__::UsdStage::Open((uint64_t *)&v21, a2, a3, a4);
    size = v21.__r_.__value_.__l.__size_;
    if (v21.__r_.__value_.__l.__size_)
    {
      v12 = (unsigned int *)(v21.__r_.__value_.__l.__size_ + 8);
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
    result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
  }
  else
  {
    result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
    *a4 = 0;
  }
  while (v20--)
    result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v19);
  return result;
}

void sub_20C42ED84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::CreateNew@<X0>(uint64_t a1@<X0>, std::string *a2@<X1>, unsigned int a3@<W2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  unsigned __int8 v8;
  std::string *v9;
  __int128 v10;
  std::string::size_type size;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t result;
  void *__p[2];
  std::string::size_type v18;
  uint64_t v19;
  int v20;
  std::string v21;

  v8 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v8 & 1) != 0)
  {
    std::operator+<char>();
    v9 = std::string::append(&v21, "@");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v18 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v18 = 0;
  }
  sub_20BF472E8((uint64_t)&v19, "Usd", (char *)__p);
  if (SHIBYTE(v18) < 0)
    operator delete(__p[0]);
  sub_20C42E85C(a1, __p);
  if (__p[0])
  {
    sub_20C1034E8((uint64_t *)&v21, (uint64_t *)__p);
    pxrInternal__aapl__pxrReserved__::UsdStage::Open((uint64_t *)&v21, a2, a3, a4);
    size = v21.__r_.__value_.__l.__size_;
    if (v21.__r_.__value_.__l.__size_)
    {
      v12 = (unsigned int *)(v21.__r_.__value_.__l.__size_ + 8);
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
    result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
  }
  else
  {
    result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
    *a4 = 0;
  }
  while (v20--)
    result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v19);
  return result;
}

void sub_20C42EF68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Open(uint64_t *a1@<X0>, std::string *a2@<X1>, unsigned int a3@<W2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  uint64_t (*v8)(uint64_t *);
  char v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  uint64_t Identifier;
  int v12;
  uint64_t v13;
  int v14;
  std::string::size_type v15;
  const char *v16;
  char *v17;
  std::string *v18;
  uint64_t v19;
  void **v20;
  void *__p[2];
  char v22;
  std::string v23;
  const char *v24;
  char v25;

  v8 = sub_20BFD2F78(a1);
  if (v9 & 1 | (unint64_t)v8)
  {
    if (sub_20C286E00(13))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v10);
      v12 = *(char *)(Identifier + 23);
      v13 = *(_QWORD *)Identifier;
      pxrInternal__aapl__pxrReserved__::ArResolverContext::GetDebugString(a2, &v23);
      v14 = SHIBYTE(v23.__r_.__value_.__r.__words[2]);
      v15 = v23.__r_.__value_.__r.__words[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a3, (uint64_t)__p);
      v18 = &v23;
      if (v14 < 0)
        v18 = (std::string *)v15;
      if (v12 >= 0)
        v19 = Identifier;
      else
        v19 = v13;
      if (v22 >= 0)
        v20 = __p;
      else
        v20 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::Open(rootLayer=@%s@, pathResolverContext=%s, load=%s)\n", v16, v17, v19, v18, v20);
      if (v22 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v23.__r_.__value_.__l.__data_);
    }
    sub_20C431178(a3, a1, (uint64_t *)a2, a4);
  }
  else
  {
    v23.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v23.__r_.__value_.__l.__size_ = (std::string::size_type)"Open";
    v23.__r_.__value_.__r.__words[2] = 1269;
    v24 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Open(const SdfLayerHandle &, const ArResolve"
          "rContext &, InitialLoadSet)";
    v25 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a4 = 0;
  }
}

void sub_20C42F150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::CreateNew@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X2>, unsigned int a4@<W3>, pxrInternal__aapl__pxrReserved__ **a5@<X8>)
{
  unsigned __int8 v10;
  std::string *v11;
  __int128 v12;
  std::string::size_type size;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t result;
  void *__p[2];
  std::string::size_type v20;
  uint64_t v21;
  int v22;
  std::string v23;

  v10 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v10 & 1) != 0)
  {
    std::operator+<char>();
    v11 = std::string::append(&v23, "@");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v20 = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v23.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v20 = 0;
  }
  sub_20BF472E8((uint64_t)&v21, "Usd", (char *)__p);
  if (SHIBYTE(v20) < 0)
    operator delete(__p[0]);
  sub_20C42E85C(a1, __p);
  if (__p[0])
  {
    sub_20C1034E8((uint64_t *)&v23, (uint64_t *)__p);
    pxrInternal__aapl__pxrReserved__::UsdStage::Open((uint64_t *)&v23, a2, a3, a4, a5);
    size = v23.__r_.__value_.__l.__size_;
    if (v23.__r_.__value_.__l.__size_)
    {
      v14 = (unsigned int *)(v23.__r_.__value_.__l.__size_ + 8);
      do
      {
        v15 = __ldxr(v14);
        v16 = v15 - 1;
      }
      while (__stlxr(v16, v14));
      if (!v16)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
    result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
  }
  else
  {
    result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
    *a5 = 0;
  }
  while (v22--)
    result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v21);
  return result;
}

void sub_20C42F2F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Open(uint64_t *a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X2>, unsigned int a4@<W3>, pxrInternal__aapl__pxrReserved__ **a5@<X8>)
{
  uint64_t (*v10)(uint64_t *);
  char v11;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v12;
  uint64_t Identifier;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *);
  char v16;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v17;
  uint64_t v18;
  const char *v19;
  int v20;
  std::string::size_type v21;
  const char *v22;
  char *v23;
  std::string *v24;
  void **v25;
  void *__p[2];
  char v27;
  std::string v28;
  const char *v29;
  char v30;

  v10 = sub_20BFD2F78(a1);
  if (v11 & 1 | (unint64_t)v10)
  {
    if (sub_20C286E00(13))
    {
      v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v12);
      if (*(char *)(Identifier + 23) >= 0)
        v14 = Identifier;
      else
        v14 = *(_QWORD *)Identifier;
      v15 = sub_20BFD2F78(a2);
      if (v16 & 1 | (unint64_t)v15)
      {
        v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
        v18 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v17);
        if (*(char *)(v18 + 23) >= 0)
          v19 = (const char *)v18;
        else
          v19 = *(const char **)v18;
      }
      else
      {
        v19 = "<null>";
      }
      pxrInternal__aapl__pxrReserved__::ArResolverContext::GetDebugString(a3, &v28);
      v20 = SHIBYTE(v28.__r_.__value_.__r.__words[2]);
      v21 = v28.__r_.__value_.__r.__words[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a4, (uint64_t)__p);
      v24 = &v28;
      if (v20 < 0)
        v24 = (std::string *)v21;
      if (v27 >= 0)
        v25 = __p;
      else
        v25 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::Open(rootLayer=@%s@, sessionLayer=@%s@, pathResolverContext=%s, load=%s)\n", v22, v23, v14, v19, v24, v25);
      if (v27 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v28.__r_.__value_.__l.__data_);
    }
    sub_20C4313E4(a4, a1, a2, (uint64_t *)a3, a5);
  }
  else
  {
    v28.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v28.__r_.__value_.__l.__size_ = (std::string::size_type)"Open";
    v28.__r_.__value_.__r.__words[2] = 1291;
    v29 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Open(const SdfLayerHandle &, const SdfLayerH"
          "andle &, const ArResolverContext &, InitialLoadSet)";
    v30 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v28, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a5 = 0;
  }
}

void sub_20C42F518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::CreateInMemory(unsigned int a1@<W0>, pxrInternal__aapl__pxrReserved__ **a2@<X8>)
{
  std::string __p;

  sub_20BDDC0E4(&__p, "tmp.usda");
  pxrInternal__aapl__pxrReserved__::UsdStage::CreateInMemory(&__p, a1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20C42F5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::CreateInMemory(const std::string *a1@<X0>, unsigned int a2@<W1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  _QWORD **v9;
  _QWORD *v10[2];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v11;
  uint64_t v12;
  uint64_t v13;

  v10[0] = 0;
  v10[1] = 0;
  v9 = v10;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateAnonymous(a1, (pxrInternal__aapl__pxrReserved__::TfToken *)&v9, (uint64_t *)&v11);
  sub_20C1034E8(&v12, (uint64_t *)&v11);
  pxrInternal__aapl__pxrReserved__::UsdStage::Open(&v12, a2, a3);
  v5 = v13;
  if (v13)
  {
    v6 = (unsigned int *)(v13 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  sub_20C103234(&v11);
  sub_20BDE9D48((uint64_t)&v9, v10[0]);
}

void sub_20C42F664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;

  v15 = a14;
  if (a14)
  {
    v16 = (unsigned int *)(a14 + 8);
    do
    {
      v17 = __ldxr(v16);
      v18 = v17 - 1;
    }
    while (__stlxr(v18, v16));
    if (!v18)
      (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  }
  sub_20C103234(&a12);
  sub_20BDE9D48((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Open(uint64_t *a1@<X0>, unsigned int a2@<W1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t Identifier;
  uint64_t v10;
  const char *v11;
  char *v12;
  void **v13;
  void *__p[2];
  uint64_t v15;
  const char *v16;
  char v17;

  v6 = sub_20BFD2F78(a1);
  if (v7 & 1 | (unint64_t)v6)
  {
    if (sub_20C286E00(13))
    {
      v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v8);
      if (*(char *)(Identifier + 23) >= 0)
        v10 = Identifier;
      else
        v10 = *(_QWORD *)Identifier;
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a2, (uint64_t)__p);
      if (v15 >= 0)
        v13 = __p;
      else
        v13 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::Open(rootLayer=@%s@, load=%s)\n", v11, v12, v10, v13);
      if (SHIBYTE(v15) < 0)
        operator delete(__p[0]);
    }
    sub_20C430BD8(a2, a1, a3);
  }
  else
  {
    __p[0] = "usd/stage.cpp";
    __p[1] = "Open";
    v15 = 1230;
    v16 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Open(const SdfLayerHandle &, InitialLoadSet)";
    v17 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a3 = 0;
  }
}

void sub_20C42F7D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::CreateInMemory(const std::string *a1@<X0>, std::string *a2@<X1>, char *a3@<X2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  unsigned int v4;
  unsigned __int8 v8;
  _QWORD *v9;
  _BOOL4 v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  _QWORD **v18;
  _QWORD *v19[2];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;

  v4 = a3;
  v8 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v8 & 1) != 0)
  {
    v9 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("Usd", 0, a3);
    v10 = v9 != 0;
  }
  else
  {
    v9 = 0;
    v10 = 0;
  }
  v23 = v9;
  v24 = v10;
  v19[0] = 0;
  v19[1] = 0;
  v18 = v19;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateAnonymous(a1, (pxrInternal__aapl__pxrReserved__::TfToken *)&v18, (uint64_t *)&v20);
  sub_20C1034E8(&v21, (uint64_t *)&v20);
  pxrInternal__aapl__pxrReserved__::UsdStage::Open(&v21, a2, v4, a4);
  v11 = v22;
  if (v22)
  {
    v12 = (unsigned int *)(v22 + 8);
    do
    {
      v13 = __ldxr(v12);
      v14 = v13 - 1;
    }
    while (__stlxr(v14, v12));
    if (!v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  sub_20C103234(&v20);
  sub_20BDE9D48((uint64_t)&v18, v19[0]);
  v15 = v24--;
  if (v15)
  {
    v16 = (uint64_t)v23;
    v17 = v15 - 2;
    do
    {
      pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v16);
      v24 = v17--;
    }
    while (v17 != -2);
  }
}

void sub_20C42F914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;

  v16 = a14;
  if (a14)
  {
    v17 = (unsigned int *)(a14 + 8);
    do
    {
      v18 = __ldxr(v17);
      v19 = v18 - 1;
    }
    while (__stlxr(v19, v17));
    if (!v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  }
  sub_20C103234(&a12);
  sub_20BDE9D48((uint64_t)&a9, a10);
  sub_20BEB24F4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::CreateInMemory(const std::string *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  unsigned int v4;
  unsigned __int8 v8;
  _QWORD *v9;
  _BOOL4 v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  int v17;
  _QWORD **v18;
  _QWORD *v19[2];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;

  v4 = a3;
  v8 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v8 & 1) != 0)
  {
    v9 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("Usd", 0, a3);
    v10 = v9 != 0;
  }
  else
  {
    v9 = 0;
    v10 = 0;
  }
  v23 = v9;
  v24 = v10;
  v19[0] = 0;
  v19[1] = 0;
  v18 = v19;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateAnonymous(a1, (pxrInternal__aapl__pxrReserved__::TfToken *)&v18, (uint64_t *)&v20);
  sub_20C1034E8(&v21, (uint64_t *)&v20);
  pxrInternal__aapl__pxrReserved__::UsdStage::Open(&v21, a2, v4, a4);
  v11 = v22;
  if (v22)
  {
    v12 = (unsigned int *)(v22 + 8);
    do
    {
      v13 = __ldxr(v12);
      v14 = v13 - 1;
    }
    while (__stlxr(v14, v12));
    if (!v14)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  sub_20C103234(&v20);
  sub_20BDE9D48((uint64_t)&v18, v19[0]);
  v15 = v24--;
  if (v15)
  {
    v16 = (uint64_t)v23;
    v17 = v15 - 2;
    do
    {
      pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v16);
      v24 = v17--;
    }
    while (v17 != -2);
  }
}

void sub_20C42FAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;

  v16 = a14;
  if (a14)
  {
    v17 = (unsigned int *)(a14 + 8);
    do
    {
      v18 = __ldxr(v17);
      v19 = v18 - 1;
    }
    while (__stlxr(v19, v17));
    if (!v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  }
  sub_20C103234(&a12);
  sub_20BDE9D48((uint64_t)&a9, a10);
  sub_20BEB24F4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::CreateInMemory(const std::string *a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X2>, unsigned int a4@<W3>, pxrInternal__aapl__pxrReserved__ **a5@<X8>)
{
  unsigned __int8 v10;
  _QWORD *v11;
  _BOOL4 v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  uint64_t v18;
  int v19;
  _QWORD **v20;
  _QWORD *v21[2];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;

  v10 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v10 & 1) != 0)
  {
    v11 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin("Usd", 0, (char *)a3);
    v12 = v11 != 0;
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  v25 = v11;
  v26 = v12;
  v21[0] = 0;
  v21[1] = 0;
  v20 = v21;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateAnonymous(a1, (pxrInternal__aapl__pxrReserved__::TfToken *)&v20, (uint64_t *)&v22);
  sub_20C1034E8(&v23, (uint64_t *)&v22);
  pxrInternal__aapl__pxrReserved__::UsdStage::Open(&v23, a2, a3, a4, a5);
  v13 = v24;
  if (v24)
  {
    v14 = (unsigned int *)(v24 + 8);
    do
    {
      v15 = __ldxr(v14);
      v16 = v15 - 1;
    }
    while (__stlxr(v16, v14));
    if (!v16)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
  sub_20C103234(&v22);
  sub_20BDE9D48((uint64_t)&v20, v21[0]);
  v17 = v26--;
  if (v17)
  {
    v18 = (uint64_t)v25;
    v19 = v17 - 2;
    do
    {
      pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v18);
      v26 = v19--;
    }
    while (v19 != -2);
  }
}

void sub_20C42FC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int v19;

  v16 = a14;
  if (a14)
  {
    v17 = (unsigned int *)(a14 + 8);
    do
    {
      v18 = __ldxr(v17);
      v19 = v18 - 1;
    }
    while (__stlxr(v19, v17));
    if (!v19)
      (*(void (**)(uint64_t))(*(_QWORD *)v16 + 8))(v16);
  }
  sub_20C103234(&a12);
  sub_20BDE9D48((uint64_t)&a9, a10);
  sub_20BEB24F4((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::Open@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  unsigned __int8 v6;
  std::string *v7;
  __int128 v8;
  std::string::size_type size;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  const char *v13;
  uint64_t result;
  std::string v16;
  const char *v17;
  char v18;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v19;
  void *__p[2];
  std::string::size_type v21;
  uint64_t v22;
  int v23;

  v6 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v6 & 1) != 0)
  {
    std::operator+<char>();
    v7 = std::string::append(&v16, "@");
    v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v21 = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v21 = 0;
  }
  sub_20BF472E8((uint64_t)&v22, "Usd", (char *)__p);
  if (SHIBYTE(v21) < 0)
    operator delete(__p[0]);
  memset(&v16, 0, sizeof(v16));
  sub_20C42FEFC(a1, (pxrInternal__aapl__pxrReserved__::ArResolverContext *)&v16, &v19);
  __p[0] = &v16;
  sub_20BDE9EB0((void ***)__p);
  if (v19)
  {
    sub_20C1034E8((uint64_t *)&v16, (uint64_t *)&v19);
    pxrInternal__aapl__pxrReserved__::UsdStage::Open((uint64_t *)&v16, a2, a3);
    size = v16.__r_.__value_.__l.__size_;
    if (v16.__r_.__value_.__l.__size_)
    {
      v10 = (unsigned int *)(v16.__r_.__value_.__l.__size_ + 8);
      do
      {
        v11 = __ldxr(v10);
        v12 = v11 - 1;
      }
      while (__stlxr(v12, v10));
      if (!v12)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
  }
  else
  {
    v16.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v16.__r_.__value_.__l.__size_ = (std::string::size_type)"Open";
    v16.__r_.__value_.__r.__words[2] = 1062;
    v17 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Open(const std::string &, InitialLoadSet)";
    v18 = 0;
    if (*(char *)(a1 + 23) >= 0)
      v13 = (const char *)a1;
    else
      v13 = *(const char **)a1;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v16, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to open layer @%s@", v13);
    *a3 = 0;
  }
  for (result = (uint64_t)sub_20C103234(&v19); v23--; result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v22))
    ;
  return result;
}

void sub_20C42FE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  sub_20C103234(&a19);
  sub_20BEB24F4(v25 - 48);
  _Unwind_Resume(a1);
}

void sub_20C42FEFC(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::ArResolverContext *a2@<X1>, _QWORD *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v5;
  const std::string *EmptyString;
  pxrInternal__aapl__pxrReserved__::TfToken *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  _QWORD *v11[2];
  __int128 *v12;
  _BYTE v13[48];
  char v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v13[0] = 0;
  v14 = 0;
  if (*(_QWORD *)a2 != *((_QWORD *)a2 + 1))
    sub_20C450FE0((pxrInternal__aapl__pxrReserved__::ArResolverContextBinder *)v13, a2);
  v11[0] = 0;
  v11[1] = 0;
  v10 = (uint64_t *)v11;
  v5 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if (!v5)
    v5 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
  if ((*((_QWORD *)v5 + 2) & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (const std::string *)((*((_QWORD *)v5 + 2) & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = (const std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  v7 = (pxrInternal__aapl__pxrReserved__::TfToken *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFileFormatTokens);
  if (!v7)
    v7 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20C0EA3A4(&pxrInternal__aapl__pxrReserved__::SdfFileFormatTokens);
  if ((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) != 0)
    v8 = (uint64_t *)((*(_QWORD *)v7 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    v8 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v7);
  v12 = (__int128 *)v8;
  v9 = sub_20BDDDFDC(&v10, (const void **)v8, (uint64_t)&unk_20CAC184C, &v12);
  std::string::operator=((std::string *)(v9 + 7), EmptyString);
  pxrInternal__aapl__pxrReserved__::SdfLayer::FindOrOpen(a1, &v10, a3);
  sub_20BDE9D48((uint64_t)&v10, v11[0]);
  if (v14)
    pxrInternal__aapl__pxrReserved__::ArResolverContextBinder::~ArResolverContextBinder((pxrInternal__aapl__pxrReserved__::ArResolverContextBinder *)v13);
}

void sub_20C430050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a21)
    pxrInternal__aapl__pxrReserved__::ArResolverContextBinder::~ArResolverContextBinder((pxrInternal__aapl__pxrReserved__::ArResolverContextBinder *)&a15);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::Open@<X0>(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::ArResolverContext *a2@<X1>, unsigned int a3@<W2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  unsigned __int8 v8;
  std::string *v9;
  __int128 v10;
  std::string::size_type size;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  const char *v15;
  uint64_t result;
  std::string v18;
  const char *v19;
  char v20;
  void *__p[2];
  std::string::size_type v22;
  uint64_t v23;
  int v24;

  v8 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v8 & 1) != 0)
  {
    std::operator+<char>();
    v9 = std::string::append(&v18, "@");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v22 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v22 = 0;
  }
  sub_20BF472E8((uint64_t)&v23, "Usd", (char *)__p);
  if (SHIBYTE(v22) < 0)
    operator delete(__p[0]);
  sub_20C42FEFC(a1, a2, __p);
  if (__p[0])
  {
    sub_20C1034E8((uint64_t *)&v18, (uint64_t *)__p);
    pxrInternal__aapl__pxrReserved__::UsdStage::Open((uint64_t *)&v18, (std::string *)a2, a3, a4);
    size = v18.__r_.__value_.__l.__size_;
    if (v18.__r_.__value_.__l.__size_)
    {
      v12 = (unsigned int *)(v18.__r_.__value_.__l.__size_ + 8);
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
  }
  else
  {
    v18.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v18.__r_.__value_.__l.__size_ = (std::string::size_type)"Open";
    v18.__r_.__value_.__r.__words[2] = 1079;
    v19 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Open(const std::string &, const ArResolverCo"
          "ntext &, InitialLoadSet)";
    v20 = 0;
    if (*(char *)(a1 + 23) >= 0)
      v15 = (const char *)a1;
    else
      v15 = *(const char **)a1;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to open layer @%s@", v15);
    *a4 = 0;
  }
  for (result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
        v24--;
  return result;
}

void sub_20C430228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&a18);
  sub_20BEB24F4(v23 - 48);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked@<X0>(uint64_t a1@<X0>, _DWORD **a2@<X1>, unsigned int a3@<W2>, uint64_t *a4@<X8>)
{
  unsigned __int8 v8;
  std::string *v9;
  __int128 v10;
  std::string::size_type size;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  const char *v15;
  uint64_t result;
  std::string v18;
  const char *v19;
  char v20;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v21;
  void *__p[2];
  std::string::size_type v23;
  uint64_t v24;
  int v25;

  v8 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v8 & 1) != 0)
  {
    std::operator+<char>();
    v9 = std::string::append(&v18, "@");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v23 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v23 = 0;
  }
  sub_20BF472E8((uint64_t)&v24, "Usd", (char *)__p);
  if (SHIBYTE(v23) < 0)
    operator delete(__p[0]);
  memset(&v18, 0, sizeof(v18));
  sub_20C42FEFC(a1, (pxrInternal__aapl__pxrReserved__::ArResolverContext *)&v18, &v21);
  __p[0] = &v18;
  sub_20BDE9EB0((void ***)__p);
  if (v21)
  {
    sub_20C1034E8((uint64_t *)&v18, (uint64_t *)&v21);
    pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked((uint64_t *)&v18, a2, a3, a4);
    size = v18.__r_.__value_.__l.__size_;
    if (v18.__r_.__value_.__l.__size_)
    {
      v12 = (unsigned int *)(v18.__r_.__value_.__l.__size_ + 8);
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
  }
  else
  {
    v18.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v18.__r_.__value_.__l.__size_ = (std::string::size_type)"OpenMasked";
    v18.__r_.__value_.__r.__words[2] = 1096;
    v19 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(const std::string &, const UsdSta"
          "gePopulationMask &, InitialLoadSet)";
    v20 = 0;
    if (*(char *)(a1 + 23) >= 0)
      v15 = (const char *)a1;
    else
      v15 = *(const char **)a1;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v18, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to open layer @%s@", v15);
    *a4 = 0;
  }
  for (result = (uint64_t)sub_20C103234(&v21); v25--; result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v24))
    ;
  return result;
}

void sub_20C43047C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v25;

  sub_20C103234(&a19);
  sub_20BEB24F4(v25 - 64);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(uint64_t *a1@<X0>, _DWORD **a2@<X1>, unsigned int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t (*v8)(uint64_t *);
  char v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  uint64_t Identifier;
  int v12;
  uint64_t v13;
  int v14;
  void **v15;
  const char *v16;
  char *v17;
  void **v18;
  uint64_t v19;
  void **v20;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v21;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v22;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v23;
  void *__p[2];
  char v25;
  void *v26[2];
  uint64_t v27;
  const char *v28;
  char v29;

  v8 = sub_20BFD2F78(a1);
  if (v9 & 1 | (unint64_t)v8)
  {
    if (sub_20C286E00(13))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v10);
      v12 = *(char *)(Identifier + 23);
      v13 = *(_QWORD *)Identifier;
      sub_20C431660(a2);
      v14 = SHIBYTE(v27);
      v15 = (void **)v26[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a3, (uint64_t)__p);
      v18 = v26;
      if (v14 < 0)
        v18 = v15;
      if (v12 >= 0)
        v19 = Identifier;
      else
        v19 = v13;
      if (v25 >= 0)
        v20 = __p;
      else
        v20 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::OpenMasked(rootLayer=@%s@, mask=%s, load=%s)\n", v16, v17, v19, v18, v20);
      if (v25 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v27) < 0)
        operator delete(v26[0]);
    }
    v21 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)a1[1];
    if (v21)
    {
      if (*(_BYTE *)(sub_20BEB47BC(a1 + 1) + 14))
        v21 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a1;
      else
        v21 = 0;
    }
    v23 = v21;
    sub_20BF1DD04((uint64_t *)&v23);
    sub_20C42EB08(a1, (uint64_t *)&v22);
    sub_20C431728(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiateStage((uint64_t *)&v23, &v22, (uint64_t)v26, a2, a3, a4);
    __p[0] = v26;
    sub_20BDE9EB0((void ***)__p);
    sub_20C103234(&v22);
    sub_20C103234(&v23);
  }
  else
  {
    v26[0] = "usd/stage.cpp";
    v26[1] = "OpenMasked";
    v27 = 1316;
    v28 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(const SdfLayerHandle &, const Usd"
          "StagePopulationMask &, InitialLoadSet)";
    v29 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v26, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a4 = 0;
  }
}

void sub_20C4306E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0)
    operator delete(__p);
  if (a29 < 0)
    operator delete(a24);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked@<X0>(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__::ArResolverContext *a2@<X1>, _DWORD **a3@<X2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  unsigned __int8 v10;
  std::string *v11;
  __int128 v12;
  std::string::size_type size;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  const char *v17;
  uint64_t result;
  std::string v20;
  const char *v21;
  char v22;
  void *__p[2];
  std::string::size_type v24;
  uint64_t v25;
  int v26;

  v10 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v10 & 1) != 0)
  {
    std::operator+<char>();
    v11 = std::string::append(&v20, "@");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v24 = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v20.__r_.__value_.__l.__data_);
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v24 = 0;
  }
  sub_20BF472E8((uint64_t)&v25, "Usd", (char *)__p);
  if (SHIBYTE(v24) < 0)
    operator delete(__p[0]);
  sub_20C42FEFC(a1, a2, __p);
  if (__p[0])
  {
    sub_20C1034E8((uint64_t *)&v20, (uint64_t *)__p);
    pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked((uint64_t *)&v20, (std::string *)a2, a3, a4, a5);
    size = v20.__r_.__value_.__l.__size_;
    if (v20.__r_.__value_.__l.__size_)
    {
      v14 = (unsigned int *)(v20.__r_.__value_.__l.__size_ + 8);
      do
      {
        v15 = __ldxr(v14);
        v16 = v15 - 1;
      }
      while (__stlxr(v16, v14));
      if (!v16)
        (*(void (**)(std::string::size_type))(*(_QWORD *)size + 8))(size);
    }
  }
  else
  {
    v20.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v20.__r_.__value_.__l.__size_ = (std::string::size_type)"OpenMasked";
    v20.__r_.__value_.__r.__words[2] = 1114;
    v21 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(const std::string &, const ArReso"
          "lverContext &, const UsdStagePopulationMask &, InitialLoadSet)";
    v22 = 0;
    if (*(char *)(a1 + 23) >= 0)
      v17 = (const char *)a1;
    else
      v17 = *(const char **)a1;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v20, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to open layer @%s@", v17);
    *a5 = 0;
  }
  for (result = (uint64_t)sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)__p);
        v26--;
  return result;
}

void sub_20C430900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&a18);
  sub_20BEB24F4(v23 - 64);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(uint64_t *a1@<X0>, std::string *a2@<X1>, _DWORD **a3@<X2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t (*v10)(uint64_t *);
  char v11;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v12;
  uint64_t Identifier;
  uint64_t v14;
  std::string *v15;
  int v16;
  void **v17;
  const char *v18;
  char *v19;
  void **v20;
  void **v21;
  std::string::size_type v22;
  void *__p[2];
  char v24;
  void *v25[2];
  char v26;
  std::string v27;
  const char *v28;
  char v29;

  v10 = sub_20BFD2F78(a1);
  if (v11 & 1 | (unint64_t)v10)
  {
    if (sub_20C286E00(13))
    {
      v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v12);
      if (*(char *)(Identifier + 23) >= 0)
        v14 = Identifier;
      else
        v14 = *(_QWORD *)Identifier;
      v15 = &v27;
      pxrInternal__aapl__pxrReserved__::ArResolverContext::GetDebugString(a2, &v27);
      if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
      sub_20C431660(a3);
      v16 = v26;
      v17 = (void **)v25[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a4, (uint64_t)__p);
      v20 = v25;
      if (v16 < 0)
        v20 = v17;
      if (v24 >= 0)
        v21 = __p;
      else
        v21 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::OpenMasked(rootLayer=@%s@, pathResolverContext=%s, mask=%s, load=%s)\n", v18, v19, v14, v15, v20, v21);
      if (v24 < 0)
        operator delete(__p[0]);
      if (v26 < 0)
        operator delete(v25[0]);
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v27.__r_.__value_.__l.__data_);
    }
    v22 = a1[1];
    if (v22)
    {
      if (*(_BYTE *)(sub_20BEB47BC(a1 + 1) + 14))
        v22 = *a1;
      else
        v22 = 0;
    }
    v27.__r_.__value_.__r.__words[0] = v22;
    sub_20BF1DD04((uint64_t *)&v27);
    sub_20C42EB08(a1, (uint64_t *)v25);
    pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiateStage((uint64_t *)&v27, v25, (uint64_t)a2, a3, a4, a5);
    sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v25);
    sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v27);
  }
  else
  {
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v27.__r_.__value_.__l.__size_ = (std::string::size_type)"OpenMasked";
    v27.__r_.__value_.__r.__words[2] = 1370;
    v28 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(const SdfLayerHandle &, const ArR"
          "esolverContext &, const UsdStagePopulationMask &, InitialLoadSet)";
    v29 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v27, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a5 = 0;
  }
}

void sub_20C430B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a19 < 0)
    operator delete(__p);
  if (a25 < 0)
    operator delete(a20);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(exception_object);
}

void sub_20C430BD8(int a1@<W0>, uint64_t *a2@<X1>, pxrInternal__aapl__pxrReserved__ **a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__ **v6;
  pxrInternal__aapl__pxrReserved__ **v7;
  _BOOL4 v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v19;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v20;
  unsigned __int8 v21;
  void *__p;
  const char *v23;
  uint64_t v24;
  const char *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  int v30;
  char *v31;
  char *v32;

  pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadableCaches((char **)&__p);
  v6 = (pxrInternal__aapl__pxrReserved__ **)__p;
  v7 = (pxrInternal__aapl__pxrReserved__ **)v23;
  if (__p == v23)
  {
    v8 = 1;
    if (__p)
    {
LABEL_5:
      v23 = (const char *)v6;
      operator delete(v6);
    }
  }
  else
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(*v6, a2, a3);
      v8 = *a3 == 0;
      if (*a3)
        break;
      sub_20C455C74(a3);
      ++v6;
    }
    while (v6 != v7);
    v6 = (pxrInternal__aapl__pxrReserved__ **)__p;
    if (__p)
      goto LABEL_5;
  }
  if (v8)
  {
    *a3 = 0;
    pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches(&v31);
    v9 = (uint64_t *)v31;
    v10 = (uint64_t *)v32;
    if (v31 == v32)
    {
      __p = &unk_24C5399A0;
      v23 = 0;
      v16 = a2[1];
      v24 = *a2;
      v25 = (const char *)v16;
      if (v16)
      {
        v17 = (unsigned int *)(v16 + 8);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = a1;
      sub_20C457054((uint64_t)&__p, (uint64_t *)&v20);
      v19 = *a3;
      *a3 = v20;
      v20 = 0;
      sub_20BF1D8F4((int)a3, v19);
      sub_20C455C74(&v20);
      sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
    }
    else
    {
      do
      {
        v11 = *v9;
        __p = &unk_24C5399A0;
        v23 = 0;
        v12 = a2[1];
        v24 = *a2;
        v25 = (const char *)v12;
        if (v12)
        {
          v13 = (unsigned int *)(v12 + 8);
          do
            v14 = __ldxr(v13);
          while (__stxr(v14 + 1, v13));
        }
        v26 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v30 = a1;
        pxrInternal__aapl__pxrReserved__::UsdStageCache::RequestStage(v11, (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)&__p, (uint64_t)&v20);
        sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
        if (!*a3)
        {
          *a3 = v20;
          sub_20BF1DD04((uint64_t *)&v20);
          sub_20BF1D8F4((int)a3, 0);
        }
        v15 = v21;
        sub_20C455C74(&v20);
        if (v15)
          break;
        ++v9;
      }
      while (v9 != v10);
    }
    if (!*a3)
    {
      __p = "usd/stage.cpp";
      v23 = "_OpenImpl";
      v24 = 1221;
      v25 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::_OpenImpl(InitialLoadSet, const Args &...)"
            " [Args = <pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>>]";
      v26 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "stage", 0);
    }
    if (v31)
    {
      v32 = v31;
      operator delete(v31);
    }
  }
}

void sub_20C430E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v13;
  uint64_t v14;
  void *v16;

  v16 = *(void **)(v14 - 88);
  if (v16)
  {
    *(_QWORD *)(v14 - 80) = v16;
    operator delete(v16);
  }
  sub_20C455C74(v13);
  _Unwind_Resume(a1);
}

void sub_20C430E80(int a1@<W0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__ **v8;
  pxrInternal__aapl__pxrReserved__ **v9;
  _BOOL4 v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v27;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v28;
  unsigned __int8 v29;
  void *__p;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  int v39;
  char *v40;
  char *v41;

  pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadableCaches((char **)&__p);
  v8 = (pxrInternal__aapl__pxrReserved__ **)__p;
  v9 = (pxrInternal__aapl__pxrReserved__ **)v31;
  if (__p == v31)
  {
    v10 = 1;
    if (__p)
    {
LABEL_5:
      v31 = (const char *)v8;
      operator delete(v8);
    }
  }
  else
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(*v8, a2, a3, a4);
      v10 = *a4 == 0;
      if (*a4)
        break;
      sub_20C455C74(a4);
      ++v8;
    }
    while (v8 != v9);
    v8 = (pxrInternal__aapl__pxrReserved__ **)__p;
    if (__p)
      goto LABEL_5;
  }
  if (v10)
  {
    *a4 = 0;
    pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches(&v40);
    v11 = (uint64_t *)v40;
    v12 = (uint64_t *)v41;
    if (v40 == v41)
    {
      __p = &unk_24C5399A0;
      v31 = 0;
      v21 = a2[1];
      v32 = *a2;
      v33 = (const char *)v21;
      if (v21)
      {
        v22 = (unsigned int *)(v21 + 8);
        do
          v23 = __ldxr(v22);
        while (__stxr(v23 + 1, v22));
      }
      v24 = a3[1];
      v34 = *a3;
      v35 = v24;
      if (v24)
      {
        v25 = (unsigned int *)(v24 + 8);
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
      }
      v36 = 1;
      v37 = 0;
      v38 = 0;
      v39 = a1;
      sub_20C457054((uint64_t)&__p, (uint64_t *)&v28);
      v27 = *a4;
      *a4 = v28;
      v28 = 0;
      sub_20BF1D8F4((int)a4, v27);
      sub_20C455C74(&v28);
      sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
    }
    else
    {
      do
      {
        v13 = *v11;
        __p = &unk_24C5399A0;
        v31 = 0;
        v14 = a2[1];
        v32 = *a2;
        v33 = (const char *)v14;
        if (v14)
        {
          v15 = (unsigned int *)(v14 + 8);
          do
            v16 = __ldxr(v15);
          while (__stxr(v16 + 1, v15));
        }
        v17 = a3[1];
        v34 = *a3;
        v35 = v17;
        if (v17)
        {
          v18 = (unsigned int *)(v17 + 8);
          do
            v19 = __ldxr(v18);
          while (__stxr(v19 + 1, v18));
        }
        v36 = 1;
        v37 = 0;
        v38 = 0;
        v39 = a1;
        pxrInternal__aapl__pxrReserved__::UsdStageCache::RequestStage(v13, (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)&__p, (uint64_t)&v28);
        sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
        if (!*a4)
        {
          *a4 = v28;
          sub_20BF1DD04((uint64_t *)&v28);
          sub_20BF1D8F4((int)a4, 0);
        }
        v20 = v29;
        sub_20C455C74(&v28);
        if (v20)
          break;
        ++v11;
      }
      while (v11 != v12);
    }
    if (!*a4)
    {
      __p = "usd/stage.cpp";
      v31 = "_OpenImpl";
      v32 = 1221;
      v33 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::_OpenImpl(InitialLoadSet, const Args &...)"
            " [Args = <pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>, pxrIntern"
            "al__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>>]";
      LOBYTE(v34) = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "stage", 0);
    }
    if (v40)
    {
      v41 = v40;
      operator delete(v40);
    }
  }
}

void sub_20C431100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v13;
  uint64_t v14;
  void *v16;

  v16 = *(void **)(v14 - 104);
  if (v16)
  {
    *(_QWORD *)(v14 - 96) = v16;
    operator delete(v16);
  }
  sub_20C455C74(v13);
  _Unwind_Resume(a1);
}

void sub_20C431178(int a1@<W0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, pxrInternal__aapl__pxrReserved__ **a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__ **v8;
  pxrInternal__aapl__pxrReserved__ **v9;
  _BOOL4 v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v16;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v17;
  unsigned __int8 v18;
  void *__p;
  const char *v20;
  uint64_t v21;
  const char *v22;
  char v23;
  char *v24;
  char *v25;

  pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadableCaches((char **)&__p);
  v8 = (pxrInternal__aapl__pxrReserved__ **)__p;
  v9 = (pxrInternal__aapl__pxrReserved__ **)v20;
  if (__p == v20)
  {
    v10 = 1;
    if (__p)
    {
LABEL_5:
      v20 = (const char *)v8;
      operator delete(v8);
    }
  }
  else
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(*v8, a2, a3, a4);
      v10 = *a4 == 0;
      if (*a4)
        break;
      sub_20C455C74(a4);
      ++v8;
    }
    while (v8 != v9);
    v8 = (pxrInternal__aapl__pxrReserved__ **)__p;
    if (__p)
      goto LABEL_5;
  }
  if (v10)
  {
    *a4 = 0;
    pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches(&v24);
    v11 = v25;
    if (v24 == v25)
    {
      sub_20C457518((uint64_t)&__p, a1, a2, (_QWORD **)a3);
      sub_20C457054((uint64_t)&__p, (uint64_t *)&v17);
      v16 = *a4;
      *a4 = v17;
      v17 = 0;
      sub_20BF1D8F4((int)a4, v16);
      sub_20C455C74(&v17);
      sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
    }
    else
    {
      v12 = v24 + 8;
      do
      {
        v13 = *((_QWORD *)v12 - 1);
        sub_20C457518((uint64_t)&__p, a1, a2, (_QWORD **)a3);
        pxrInternal__aapl__pxrReserved__::UsdStageCache::RequestStage(v13, (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)&__p, (uint64_t)&v17);
        sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
        if (!*a4)
        {
          *a4 = v17;
          sub_20BF1DD04((uint64_t *)&v17);
          sub_20BF1D8F4((int)a4, 0);
        }
        v14 = v18;
        sub_20C455C74(&v17);
        if (v14)
          break;
        v15 = v12 == v11;
        v12 += 8;
      }
      while (!v15);
    }
    if (!*a4)
    {
      __p = "usd/stage.cpp";
      v20 = "_OpenImpl";
      v21 = 1221;
      v22 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::_OpenImpl(InitialLoadSet, const Args &...)"
            " [Args = <pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>, pxrIntern"
            "al__aapl__pxrReserved__::ArResolverContext>]";
      v23 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "stage", 0);
    }
    if (v24)
    {
      v25 = v24;
      operator delete(v24);
    }
  }
}

void sub_20C431364(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v1;
  uint64_t v2;
  void *v4;

  v4 = *(void **)(v2 - 88);
  if (v4)
  {
    *(_QWORD *)(v2 - 80) = v4;
    operator delete(v4);
  }
  sub_20C455C74(v1);
  _Unwind_Resume(a1);
}

void sub_20C4313CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  JUMPOUT(0x20C4313C4);
}

void sub_20C4313E4(int a1@<W0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, pxrInternal__aapl__pxrReserved__ **a5@<X8>)
{
  pxrInternal__aapl__pxrReserved__ **v10;
  pxrInternal__aapl__pxrReserved__ **v11;
  _BOOL4 v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v18;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v19;
  unsigned __int8 v20;
  void *__p;
  const char *v22;
  uint64_t v23;
  const char *v24;
  char v25;
  char *v26;
  char *v27;

  pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetReadableCaches((char **)&__p);
  v10 = (pxrInternal__aapl__pxrReserved__ **)__p;
  v11 = (pxrInternal__aapl__pxrReserved__ **)v22;
  if (__p == v22)
  {
    v12 = 1;
    if (__p)
    {
LABEL_5:
      v22 = (const char *)v10;
      operator delete(v10);
    }
  }
  else
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdStageCache::FindOneMatching(*v10, a2, a3, a4, a5);
      v12 = *a5 == 0;
      if (*a5)
        break;
      sub_20C455C74(a5);
      ++v10;
    }
    while (v10 != v11);
    v10 = (pxrInternal__aapl__pxrReserved__ **)__p;
    if (__p)
      goto LABEL_5;
  }
  if (v12)
  {
    *a5 = 0;
    pxrInternal__aapl__pxrReserved__::UsdStageCacheContext::_GetWritableCaches(&v26);
    v13 = v27;
    if (v26 == v27)
    {
      sub_20C4575D8((uint64_t)&__p, a1, a2, a3, (_QWORD **)a4);
      sub_20C457054((uint64_t)&__p, (uint64_t *)&v19);
      v18 = *a5;
      *a5 = v19;
      v19 = 0;
      sub_20BF1D8F4((int)a5, v18);
      sub_20C455C74(&v19);
      sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
    }
    else
    {
      v14 = v26 + 8;
      do
      {
        v15 = *((_QWORD *)v14 - 1);
        sub_20C4575D8((uint64_t)&__p, a1, a2, a3, (_QWORD **)a4);
        pxrInternal__aapl__pxrReserved__::UsdStageCache::RequestStage(v15, (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)&__p, (uint64_t)&v19);
        sub_20C457464((pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *)&__p);
        if (!*a5)
        {
          *a5 = v19;
          sub_20BF1DD04((uint64_t *)&v19);
          sub_20BF1D8F4((int)a5, 0);
        }
        v16 = v20;
        sub_20C455C74(&v19);
        if (v16)
          break;
        v17 = v14 == v13;
        v14 += 8;
      }
      while (!v17);
    }
    if (!*a5)
    {
      __p = "usd/stage.cpp";
      v22 = "_OpenImpl";
      v23 = 1221;
      v24 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::_OpenImpl(InitialLoadSet, const Args &...)"
            " [Args = <pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>, pxrIntern"
            "al__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>, pxrInternal__aapl__pxrReserv"
            "ed__::ArResolverContext>]";
      v25 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "stage", 0);
    }
    if (v26)
    {
      v27 = v26;
      operator delete(v26);
    }
  }
}

void sub_20C4315E0(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v1;
  uint64_t v2;
  void *v4;

  v4 = *(void **)(v2 - 88);
  if (v4)
  {
    *(_QWORD *)(v2 - 80) = v4;
    operator delete(v4);
  }
  sub_20C455C74(v1);
  _Unwind_Resume(a1);
}

void sub_20C431648(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  JUMPOUT(0x20C431640);
}

uint64_t sub_20C431660(_DWORD **a1)
{
  _QWORD v3[11];
  char v4;
  uint64_t v5;

  sub_20BDDE5E0((uint64_t)v3);
  pxrInternal__aapl__pxrReserved__::operator<<(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(v3[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v3[1] = MEMORY[0x24BEDB848] + 16;
  if (v4 < 0)
    operator delete((void *)v3[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x212B92EB0](&v5);
}

void sub_20C431714(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C431728(uint64_t *a1)
{
  uint64_t (*IsAnonymous)(uint64_t *);
  char v3;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v4;
  uint64_t *v5;
  uint64_t *Resolver;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t RepositoryPath;
  uint64_t v10;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v11;

  IsAnonymous = sub_20BFD2F78(a1);
  if (v3 & 1 | (unint64_t)IsAnonymous
    && (v4 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1),
        IsAnonymous = (uint64_t (*)(uint64_t *))pxrInternal__aapl__pxrReserved__::SdfLayer::IsAnonymous(v4),
        (IsAnonymous & 1) == 0))
  {
    Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver((pxrInternal__aapl__pxrReserved__ *)IsAnonymous);
    v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
    RepositoryPath = pxrInternal__aapl__pxrReserved__::SdfLayer::GetRepositoryPath(v8);
    if (*(char *)(RepositoryPath + 23) >= 0)
      v10 = *(unsigned __int8 *)(RepositoryPath + 23);
    else
      v10 = *(_QWORD *)(RepositoryPath + 8);
    v11 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
    if (v10)
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetRepositoryPath(v11);
    else
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetRealPath(v11);
    return pxrInternal__aapl__pxrReserved__::ArResolver::CreateDefaultContextForAsset((uint64_t)Resolver);
  }
  else
  {
    v5 = pxrInternal__aapl__pxrReserved__::ArGetResolver((pxrInternal__aapl__pxrReserved__ *)IsAnonymous);
    return pxrInternal__aapl__pxrReserved__::ArResolver::CreateDefaultContext((pxrInternal__aapl__pxrReserved__::ArResolver *)v5);
  }
}

void pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _DWORD **a3@<X2>, unsigned int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t (*v10)(uint64_t *);
  char v11;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v12;
  uint64_t Identifier;
  uint64_t v14;
  uint64_t (*v15)(uint64_t *);
  char v16;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v17;
  uint64_t v18;
  const char *v19;
  int v20;
  void **v21;
  const char *v22;
  char *v23;
  void **v24;
  void **v25;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v26;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v27;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v28;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v29;
  void *__p[2];
  char v31;
  void *v32[2];
  uint64_t v33;
  const char *v34;
  char v35;

  v10 = sub_20BFD2F78(a1);
  if (v11 & 1 | (unint64_t)v10)
  {
    if (sub_20C286E00(13))
    {
      v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v12);
      if (*(char *)(Identifier + 23) >= 0)
        v14 = Identifier;
      else
        v14 = *(_QWORD *)Identifier;
      v15 = sub_20BFD2F78(a2);
      if (v16 & 1 | (unint64_t)v15)
      {
        v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
        v18 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v17);
        if (*(char *)(v18 + 23) >= 0)
          v19 = (const char *)v18;
        else
          v19 = *(const char **)v18;
      }
      else
      {
        v19 = "<null>";
      }
      sub_20C431660(a3);
      v20 = SHIBYTE(v33);
      v21 = (void **)v32[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a4, (uint64_t)__p);
      v24 = v32;
      if (v20 < 0)
        v24 = v21;
      if (v31 >= 0)
        v25 = __p;
      else
        v25 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::OpenMasked(rootLayer=@%s@, sessionLayer=@%s@, mask=%s, load=%s)\n", v22, v23, v14, v19, v24, v25);
      if (v31 < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v33) < 0)
        operator delete(v32[0]);
    }
    v26 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)a1[1];
    if (v26)
    {
      if (*(_BYTE *)(sub_20BEB47BC(a1 + 1) + 14))
        v26 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a1;
      else
        v26 = 0;
    }
    v29 = v26;
    sub_20BF1DD04((uint64_t *)&v29);
    v27 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)a2[1];
    if (v27)
    {
      if (*(_BYTE *)(sub_20BEB47BC(a2 + 1) + 14))
        v27 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a2;
      else
        v27 = 0;
    }
    v28 = v27;
    sub_20BF1DD04((uint64_t *)&v28);
    sub_20C431728(a1);
    pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiateStage((uint64_t *)&v29, &v28, (uint64_t)v32, a3, a4, a5);
    __p[0] = v32;
    sub_20BDE9EB0((void ***)__p);
    sub_20C103234(&v28);
    sub_20C103234(&v29);
  }
  else
  {
    v32[0] = "usd/stage.cpp";
    v32[1] = "OpenMasked";
    v33 = 1342;
    v34 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(const SdfLayerHandle &, const Sdf"
          "LayerHandle &, const UsdStagePopulationMask &, InitialLoadSet)";
    v35 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v32, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a5 = 0;
  }
}

void sub_20C4319FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a23 < 0)
    operator delete(__p);
  if (a29 < 0)
    operator delete(a24);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(uint64_t *a1@<X0>, uint64_t *a2@<X1>, std::string *a3@<X2>, _DWORD **a4@<X3>, unsigned int a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t (*v12)(uint64_t *);
  char v13;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  uint64_t Identifier;
  uint64_t v16;
  uint64_t (*v17)(uint64_t *);
  char v18;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v19;
  uint64_t v20;
  const char *v21;
  std::string *v22;
  int v23;
  void **v24;
  const char *v25;
  char *v26;
  void **v27;
  void **v28;
  std::string::size_type v29;
  void *v30;
  uint64_t v31;
  void *__p[2];
  char v33;
  void *v34[2];
  char v35;
  std::string v36;
  const char *v37;
  char v38;

  v12 = sub_20BFD2F78(a1);
  if (v13 & 1 | (unint64_t)v12)
  {
    if (sub_20C286E00(13))
    {
      v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v14);
      if (*(char *)(Identifier + 23) >= 0)
        v16 = Identifier;
      else
        v16 = *(_QWORD *)Identifier;
      v31 = v16;
      v17 = sub_20BFD2F78(a2);
      if (v18 & 1 | (unint64_t)v17)
      {
        v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a2);
        v20 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v19);
        if (*(char *)(v20 + 23) >= 0)
          v21 = (const char *)v20;
        else
          v21 = *(const char **)v20;
      }
      else
      {
        v21 = "<null>";
      }
      pxrInternal__aapl__pxrReserved__::ArResolverContext::GetDebugString(a3, &v36);
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v22 = &v36;
      else
        v22 = (std::string *)v36.__r_.__value_.__r.__words[0];
      sub_20C431660(a4);
      v23 = v35;
      v24 = (void **)v34[0];
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C5395B8, a5, (uint64_t)__p);
      v27 = v34;
      if (v23 < 0)
        v27 = v24;
      if (v33 >= 0)
        v28 = __p;
      else
        v28 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::OpenMasked(rootLayer=@%s@, sessionLayer=@%s@, pathResolverContext=%s, mask=%s, load=%s)\n", v25, v26, v31, v21, v22, v27, v28);
      if (v33 < 0)
        operator delete(__p[0]);
      if (v35 < 0)
        operator delete(v34[0]);
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v36.__r_.__value_.__l.__data_);
    }
    v29 = a1[1];
    if (v29)
    {
      if (*(_BYTE *)(sub_20BEB47BC(a1 + 1) + 14))
        v29 = *a1;
      else
        v29 = 0;
    }
    v36.__r_.__value_.__r.__words[0] = v29;
    sub_20BF1DD04((uint64_t *)&v36);
    v30 = (void *)a2[1];
    if (v30)
    {
      if (*(_BYTE *)(sub_20BEB47BC(a2 + 1) + 14))
        v30 = (void *)*a2;
      else
        v30 = 0;
    }
    v34[0] = v30;
    sub_20BF1DD04((uint64_t *)v34);
    pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiateStage((uint64_t *)&v36, v34, (uint64_t)a3, a4, a5, a6);
    sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v34);
    sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v36);
  }
  else
  {
    v36.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v36.__r_.__value_.__l.__size_ = (std::string::size_type)"OpenMasked";
    v36.__r_.__value_.__r.__words[2] = 1399;
    v37 = "static UsdStageRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::OpenMasked(const SdfLayerHandle &, const Sdf"
          "LayerHandle &, const ArResolverContext &, const UsdStagePopulationMask &, InitialLoadSet)";
    v38 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v36, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid root layer");
    *a6 = 0;
  }
}

void sub_20C431CB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a21 < 0)
    operator delete(__p);
  if (a27 < 0)
    operator delete(a22);
  if (a33 < 0)
    operator delete(a28);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty(const pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v6;
  _QWORD *PrimDefinition;
  unsigned int **v8;

  v4 = *((_QWORD *)a1 + 1);
  if (!v4 || (*(_BYTE *)(v4 + 57) & 8) != 0)
  {
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  else
  {
    v6 = *(unint64_t **)(v4 + 24);
    PrimDefinition = (_QWORD *)atomic_load(v6 + 7);
    if (!PrimDefinition)
      PrimDefinition = (_QWORD *)pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v6);
    v8 = (unsigned int **)sub_20C398E78(a1);
    pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::GetPropertyDefinition(PrimDefinition, v8, (unsigned int **)a2);
  }
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaAttribute@<X0>(const pxrInternal__aapl__pxrReserved__::UsdAttribute *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  unsigned int *v5;
  unsigned int v6;
  _QWORD v7[2];

  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty(a1, (uint64_t)v7);
  result = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute::Attribute(a2, v7);
  if ((v7[0] & 7) != 0)
  {
    v5 = (unsigned int *)(v7[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  return result;
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaRelationship@<X0>(const pxrInternal__aapl__pxrReserved__::UsdRelationship *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  unsigned int *v5;
  unsigned int v6;
  _QWORD v7[2];

  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty(a1, (uint64_t)v7);
  result = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Relationship::Relationship(a2, v7);
  if ((v7[0] & 7) != 0)
  {
    v5 = (unsigned int *)(v7[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2, const char *a3)
{
  char *v6;
  char *v7;
  const char *Text;
  const char *v10;
  char *v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  char v15;
  char *v16;
  int v17;
  int v18;

  if (!*((_BYTE *)this + 120))
    return 1;
  if (!pxrInternal__aapl__pxrReserved__::PcpMapFunction::IsIdentityPathMapping((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 64)))
  {
    sub_20C348EEC((uint64_t)a2, &v17);
    pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v17, &v11);
    sub_20C348EEC((uint64_t)a2, (int *)&v16);
    v6 = v11;
    v7 = v16;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v16 + 1);
    sub_20BFD265C(&v16);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
    sub_20BFD265C(&v11);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
    sub_20BFD265C(&v17);
    if (v6 != v7)
      return 1;
  }
  if (sub_20C39C9C4((uint64_t)a2))
  {
    v11 = "usd/stage.cpp";
    v12 = "_ValidateEditPrim";
    v13 = 1464;
    v14 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim(const UsdPrim &, const char *) const";
    v15 = 0;
    sub_20C348EEC((uint64_t)a2, &v17);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v17);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v11, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot %s at path <%s>; authoring to an instancing prototype is not allowed.",
      a3,
      Text);
LABEL_10:
    sub_20BFD1A18(&v17);
    return 0;
  }
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a2 + 4))
  {
    v11 = "usd/stage.cpp";
    v12 = "_ValidateEditPrim";
    v13 = 1472;
    v14 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim(const UsdPrim &, const char *) const";
    v15 = 0;
    sub_20C348EEC((uint64_t)a2, &v17);
    v10 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v17);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v11, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot %s at path <%s>; authoring to an instance proxy is not allowed.",
      a3,
      v10);
    goto LABEL_10;
  }
  return 1;
}

void sub_20C432034(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 56));
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrimAtPath(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const char *a3)
{
  const pxrInternal__aapl__pxrReserved__::SdfPath *v5;
  char *v6;
  char *v7;
  char *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  char v13;

  if (!*((_BYTE *)this + 120))
    return 1;
  if (!pxrInternal__aapl__pxrReserved__::PcpMapFunction::IsIdentityPathMapping((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 64)))
  {
    pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), a2, &v9);
    v6 = v9;
    v7 = *(char **)a2;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v9 + 1);
    sub_20BFD265C(&v9);
    if (v6 != v7)
      return 1;
  }
  if (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPathInPrototype(a2, v5))
  {
    v9 = "usd/stage.cpp";
    v10 = "_ValidateEditPrimAtPath";
    v11 = 1493;
    v12 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrimAtPath(const SdfPath &, const char *) const";
    v13 = 0;
    pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot %s at path <%s>; authoring to an instancing prototype is not allowed.");
    return 0;
  }
  if (pxrInternal__aapl__pxrReserved__::UsdStage::_IsObjectDescendantOfInstance((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2))
  {
    v9 = "usd/stage.cpp";
    v10 = "_ValidateEditPrimAtPath";
    v11 = 1501;
    v12 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrimAtPath(const SdfPath &, const char *) const";
    v13 = 0;
    pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v9, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot %s at path <%s>; authoring to an instance proxy is not allowed.");
    return 0;
  }
  return 1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsObjectDescendantOfInstance(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *v4;
  _BOOL8 IsPathDescendantToAnInstance;
  int v7;
  int v8;

  if (!pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetNumPrototypes(this[18]))
    return 0;
  v4 = this[18];
  pxrInternal__aapl__pxrReserved__::SdfPath::GetAbsoluteRootOrPrimPath(a2, &v7);
  IsPathDescendantToAnInstance = pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPathDescendantToAnInstance(v4, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v7);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  return IsPathDescendantToAnInstance;
}

void sub_20C432228(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C43223C@<X0>(pxrInternal__aapl__pxrReserved__::UsdEditTarget *a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, _QWORD *a3@<X8>)
{
  int v6;
  int v7;

  pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(a1, a2, &v6);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v6))
    pxrInternal__aapl__pxrReserved__::SdfCreatePrimInLayer((uint64_t *)a1, (uint64_t)&v6, a3);
  else
    *a3 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
  return sub_20BFD265C(&v6);
}

void sub_20C4322A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::SdfChangeBlock *pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaAttribute@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute *a3@<X2>, unsigned int **a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfToken *Name;
  uint64_t *EmptyString;
  int Variability;
  void *v11;
  _QWORD v13[4];
  char v14;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v15;
  _BYTE v16[8];

  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v16);
  pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(this, a2, &v15);
  if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v15)
    || (v13[0] = "usd/stage.cpp",
        v13[1] = "_CreateNewSpecFromSchemaAttribute",
        v13[2] = 1539,
        v13[3] = "SdfAttributeSpecHandle pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaAttribute(co"
                 "nst UsdPrim &, const UsdPrimDefinition::Attribute &)",
        v14 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v13, "primSpec", 0) & 1) != 0))
  {
    Name = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::GetName(a3);
    if ((*(_QWORD *)Name & 0xFFFFFFFFFFFFFFF8) != 0)
      EmptyString = (uint64_t *)((*(_QWORD *)Name & 0xFFFFFFFFFFFFFFF8) + 16);
    else
      EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Name);
    v13[0] = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute::GetTypeName(a3);
    Variability = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::GetVariability(a3);
    pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(&v15, (uint64_t)EmptyString, (pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)v13, Variability, 0, a4);
  }
  else
  {
    *a4 = 0;
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v11, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v15);
  return sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v16);
}

void sub_20C4323C8(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)(v8 - 40));
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::SdfChangeBlock *pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaRelationship@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Relationship *a3@<X2>, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::TfToken *Name;
  uint64_t *EmptyString;
  int Variability;
  void *v11;
  _QWORD v13[4];
  char v14;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v15;
  _BYTE v16[8];

  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v16);
  pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(this, a2, &v15);
  if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v15)
    || (v13[0] = "usd/stage.cpp",
        v13[1] = "_CreateNewSpecFromSchemaRelationship",
        v13[2] = 1553,
        v13[3] = "SdfRelationshipSpecHandle pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaRelations"
                 "hip(const UsdPrim &, const UsdPrimDefinition::Relationship &)",
        v14 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v13, "primSpec", 0) & 1) != 0))
  {
    Name = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::GetName(a3);
    if ((*(_QWORD *)Name & 0xFFFFFFFFFFFFFFF8) != 0)
      EmptyString = (uint64_t *)((*(_QWORD *)Name & 0xFFFFFFFFFFFFFFF8) + 16);
    else
      EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Name);
    Variability = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::GetVariability(a3);
    pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec::New(&v15, (uint64_t)EmptyString, 0, Variability, a4);
  }
  else
  {
    *a4 = 0;
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v11, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v15);
  return sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v16);
}

void sub_20C4324EC(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)(v8 - 40));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewPropertySpecFromSchema<pxrInternal__aapl__pxrReserved__::SdfPropertySpec>(pxrInternal__aapl__pxrReserved__::UsdStage *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20[2];
  _BYTE v21[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27[2];

  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2, (uint64_t)v27);
  if (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::IsAttribute((pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)v27))
  {
    sub_20C35C4F8((uint64_t)v21, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute::Attribute(v20, v27);
    pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaAttribute(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v21, (const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute *)v20, &v26);
    v6 = v26;
    *a3 = v26;
    if (v6)
    {
      do
        v7 = __ldaxr(v6);
      while (__stlxr(v7 + 1, v6));
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v6, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v26);
    if ((v20[0] & 7) != 0)
    {
      v8 = (unsigned int *)(v20[0] & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    if ((v25 & 7) != 0)
    {
      v10 = (unsigned int *)(v25 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
  }
  else
  {
    if (!pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::IsRelationship((pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)v27))
    {
      *a3 = 0;
      goto LABEL_23;
    }
    sub_20C35C4F8((uint64_t)v21, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Relationship::Relationship(v20, (const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)v27);
    pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaRelationship(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v21, (const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Relationship *)v20, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v26);
    v12 = v26;
    *a3 = v26;
    if (v12)
    {
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 + 1, v12));
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v12, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v26);
    if ((v20[0] & 7) != 0)
    {
      v14 = (unsigned int *)(v20[0] & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    if ((v25 & 7) != 0)
    {
      v16 = (unsigned int *)(v25 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
  sub_20BFD265C(&v23);
  if (v22)
    sub_20C35C614(v22);
LABEL_23:
  if ((v27[0] & 7) != 0)
  {
    v18 = (unsigned int *)(v27[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
}

void sub_20C4326EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  va_list va;

  va_start(va, a4);
  if ((a3 & 7) != 0)
  {
    v6 = (unsigned int *)(a3 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  sub_20C35C2E0((uint64_t)va);
  v8 = *(_QWORD *)(v4 - 48);
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewPropertySpecFromSchema<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>(pxrInternal__aapl__pxrReserved__::UsdStage *a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  _QWORD v17[2];

  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2, (uint64_t)&v12);
  pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute::Attribute(v17, &v12);
  if ((v12 & 7) != 0)
  {
    v6 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::IsAttribute((pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)v17))
  {
    sub_20C35C4F8((uint64_t)&v12, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaAttribute(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v12, (const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Attribute *)v17, a3);
    if ((v16 & 7) != 0)
    {
      v8 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    if (v13)
      sub_20C35C614(v13);
  }
  else
  {
    *a3 = 0;
  }
  if ((v17[0] & 7) != 0)
  {
    v10 = (unsigned int *)(v17[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
}

void sub_20C43288C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned int *v14;
  unsigned int v15;

  sub_20C35C2E0((uint64_t)&a9);
  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewPropertySpecFromSchema<pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec>(pxrInternal__aapl__pxrReserved__::UsdStage *a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3@<X8>)
{
  unsigned int *v6;
  unsigned int v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  _QWORD v17[2];

  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2, (uint64_t)&v12);
  pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Relationship::Relationship(v17, &v12);
  if ((v12 & 7) != 0)
  {
    v6 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  if (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::IsRelationship((pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)v17))
  {
    sub_20C35C4F8((uint64_t)&v12, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewSpecFromSchemaRelationship(a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v12, (const pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Relationship *)v17, a3);
    if ((v16 & 7) != 0)
    {
      v8 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
      do
        v9 = __ldxr(v8);
      while (__stlxr(v9 - 2, v8));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
    sub_20BFD265C(&v14);
    if (v13)
      sub_20C35C614(v13);
  }
  else
  {
    *a3 = 0;
  }
  if ((v17[0] & 7) != 0)
  {
    v10 = (unsigned int *)(v17[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
}

void sub_20C4329F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned int *v14;
  unsigned int v15;

  sub_20C35C2E0((uint64_t)&a9);
  if ((a13 & 7) != 0)
  {
    v14 = (unsigned int *)(a13 & 0xFFFFFFFFFFFFFFF8);
    do
      v15 = __ldxr(v14);
    while (__stlxr(v15 - 2, v14));
  }
  _Unwind_Resume(a1);
}

void sub_20C432A64(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::UsdEditTarget *v7;
  const std::type_info *v8;
  void *v9;
  void *v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  const std::type_info *v16;
  void *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  void *v21;
  void *v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  void **v29;
  const char *p_p;
  const char *v31;
  const char *v32;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v33;
  uint64_t v34;
  const char *v35;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v36;
  unsigned int v37;
  const char *v38;
  unsigned int *v39;
  unsigned int v40;
  const char *v41;
  const char *Text;
  const char *v43;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v44;
  uint64_t Identifier;
  const char *v46;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v47;
  unsigned int SpecType;
  void **v49;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v50;
  const char *v51;
  uint64_t **v52;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  void *v64[2];
  char v65;
  int v66;
  int v67;
  void *__p;
  const char *v69;
  uint64_t v70;
  const char *v71;
  char v72;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v73;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v74;
  _QWORD v75[2];
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  const char *v79;
  uint64_t *v80;
  void *v81[2];
  char v82;
  int v83;
  int v84;
  _BYTE v85[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v86;
  int v87;
  int v88;
  uint64_t v89;

  sub_20C35C4F8((uint64_t)v85, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v85, "create property spec") & 1) != 0)
  {
    sub_20C348EEC(a2, &v83);
    v6 = sub_20C398E78((_DWORD *)a2);
    v7 = (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 48);
    pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPropertySpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, (uint64_t *)v64);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64) & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v64);
      pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewPropertySpecFromSchema<pxrInternal__aapl__pxrReserved__::SdfAttributeSpec>((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, a2, a3);
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)a3) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v10, (pxrInternal__aapl__pxrReserved__::SdfSpec *)a3);
        v12 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)sub_20C368FF0((uint64_t)v85, v11);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v75, v12, 1);
        while (v76 != v78 || v77 != v79)
        {
          v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v80);
          __p = (void *)v76;
          v69 = v77;
          Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&__p);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v6, (int *)v81);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetPropertyAtPath((uint64_t *)&v74, v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v81);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v81 + 1);
          sub_20BFD265C(v81);
          if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v74))
          {
            if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType(&v74, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527B18, v16))
            {
              v18 = (unsigned int *)v74;
              __p = v74;
              if (v74)
              {
                do
                  v19 = __ldaxr(v18);
                while (__stlxr(v19 + 1, v18));
                v18 = (unsigned int *)__p;
                v73 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity *)__p;
                if (__p)
                {
                  do
                    v20 = __ldaxr(v18);
                  while (__stlxr(v20 + 1, v18));
                }
              }
              else
              {
                v73 = 0;
              }
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v18, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
            }
            else
            {
              v73 = 0;
            }
            if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v73))
            {
              __p = "usd/stage.cpp";
              v69 = "_CreatePropertySpecForEditing";
              v70 = 1706;
              v71 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(const "
                    "UsdProperty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfAttributeSpec]";
              v72 = 0;
              pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CAB439CLL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v81);
              if (v82 >= 0)
                v41 = (const char *)v81;
              else
                v41 = (const char *)v81[0];
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v83);
              pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, &v66);
              v43 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v66);
              v44 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v7);
              Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v44);
              if (*(char *)(Identifier + 23) >= 0)
                v46 = (const char *)Identifier;
              else
                v46 = *(const char **)Identifier;
              v47 = sub_20BFE6874(&v74);
              SpecType = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v47);
              pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, SpecType, (uint64_t)v64);
              if (v65 >= 0)
                v49 = v64;
              else
                v49 = (void **)v64[0];
              v50 = sub_20BFE6874(&v74);
              pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v50, &v62);
              v51 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v62);
              v52 = (uint64_t **)sub_20BFE6874(&v74);
              pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v52, &v60);
              v53 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v60);
              v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v53);
              if (*(char *)(v54 + 23) >= 0)
                v55 = (const char *)v54;
              else
                v55 = *(const char **)v54;
              pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 3, (pxrInternal__aapl__pxrReserved__ *)"Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  Strongest existing spec, %s at <%s> in @%s@", v41, Text, v43, v46, (const char *)v49, v51, v55);
              v56 = v61;
              if (v61)
              {
                v57 = (unsigned int *)(v61 + 8);
                do
                {
                  v58 = __ldxr(v57);
                  v59 = v58 - 1;
                }
                while (__stlxr(v59, v57));
                if (!v59)
                  (*(void (**)(uint64_t))(*(_QWORD *)v56 + 8))(v56);
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v63);
              sub_20BFD265C(&v62);
              if (v65 < 0)
                operator delete(v64[0]);
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v67);
              sub_20BFD265C(&v66);
              v27 = v82;
              if ((v27 & 0x80000000) != 0)
                operator delete(v81[0]);
              *a3 = 0;
              goto LABEL_32;
            }
            pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v81);
            pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v85, v64);
            if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64)
              || (__p = "usd/stage.cpp",
                  v69 = "_CreatePropertySpecForEditing",
                  v70 = 1712,
                  v71 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(co"
                        "nst UsdProperty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfAttributeSpec]",
                  v72 = 0,
                  (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "primSpec", 0) & 1) != 0))
            {
              sub_20C4576C8((pxrInternal__aapl__pxrReserved__::TfToken *)v64, v6, &v73, a3);
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v26, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v64);
              sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v81);
LABEL_32:
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v27, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v73);
              v29 = (void **)&v74;
              goto LABEL_51;
            }
            pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v21, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v64);
            sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v81);
            pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v22, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v73);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v17, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v74);
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v75);
        }
        *a3 = 0;
      }
    }
    else
    {
      if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527B18, v8))
      {
        v23 = (unsigned int *)v64[0];
        v75[0] = v64[0];
        if (v64[0])
        {
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 + 1, v23));
          v23 = (unsigned int *)v75[0];
          *a3 = (unsigned int *)v75[0];
          if (v23)
          {
            do
              v25 = __ldaxr(v23);
            while (__stlxr(v25 + 1, v23));
          }
        }
        else
        {
          *a3 = 0;
        }
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v23, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v75);
      }
      else
      {
        *a3 = 0;
      }
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)a3) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v28, (pxrInternal__aapl__pxrReserved__::SdfSpec *)a3);
        v75[0] = "usd/stage.cpp";
        v75[1] = "_CreatePropertySpecForEditing";
        v76 = 1664;
        v77 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(const UsdPro"
              "perty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfAttributeSpec]";
        LOBYTE(v78) = 0;
        pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CAB439CLL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&__p);
        if (v70 >= 0)
          p_p = (const char *)&__p;
        else
          p_p = (const char *)__p;
        v31 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v83);
        pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, &v60);
        v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v60);
        v33 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v7);
        v34 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v33);
        if (*(char *)(v34 + 23) >= 0)
          v35 = (const char *)v34;
        else
          v35 = *(const char **)v34;
        v36 = sub_20BFE6874((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64);
        v37 = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v36);
        pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, v37, (uint64_t)v81);
        if (v82 >= 0)
          v38 = (const char *)v81;
        else
          v38 = (const char *)v81[0];
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v75, 3, (pxrInternal__aapl__pxrReserved__ *)"Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  %s already at that location.", p_p, v31, v32, v35, v38);
        if (v82 < 0)
          operator delete(v81[0]);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
        sub_20BFD265C(&v60);
        v28 = SHIBYTE(v70);
        if ((v28 & 0x80000000) != 0)
          operator delete(__p);
        *a3 = 0;
      }
      v29 = v64;
LABEL_51:
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v28, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v29);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v84);
    sub_20BFD265C(&v83);
  }
  else
  {
    *a3 = 0;
  }
  if ((v89 & 7) != 0)
  {
    v39 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stlxr(v40 - 2, v39));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v88);
  sub_20BFD265C(&v87);
  if (v86)
    sub_20C35C614(v86);
}

void sub_20C4330C0(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  void *v35;
  void *v36;

  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)(v33 - 152));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v35, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a29);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v36, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a31);
  sub_20BFD1A18((_DWORD *)(v33 - 128));
  sub_20C35C2E0(v33 - 120);
  _Unwind_Resume(a1);
}

void sub_20C433280(uint64_t a1@<X0>, uint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::UsdEditTarget *v7;
  const std::type_info *v8;
  void *v9;
  void *v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  const std::type_info *v16;
  void *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  void *v21;
  void *v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;
  void **v29;
  const char *p_p;
  const char *v31;
  const char *v32;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v33;
  uint64_t v34;
  const char *v35;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v36;
  unsigned int v37;
  const char *v38;
  unsigned int *v39;
  unsigned int v40;
  const char *v41;
  const char *Text;
  const char *v43;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v44;
  uint64_t Identifier;
  const char *v46;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v47;
  unsigned int SpecType;
  void **v49;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v50;
  const char *v51;
  uint64_t **v52;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  unsigned int *v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  void *v64[2];
  char v65;
  int v66;
  int v67;
  void *__p;
  const char *v69;
  uint64_t v70;
  const char *v71;
  char v72;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v73;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v74;
  _QWORD v75[2];
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  const char *v79;
  uint64_t *v80;
  void *v81[2];
  char v82;
  int v83;
  int v84;
  _BYTE v85[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v86;
  int v87;
  int v88;
  uint64_t v89;

  sub_20C35C4F8((uint64_t)v85, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v85, "create property spec") & 1) != 0)
  {
    sub_20C348EEC(a2, &v83);
    v6 = sub_20C398E78((_DWORD *)a2);
    v7 = (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 48);
    pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPropertySpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, (uint64_t *)v64);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64) & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v64);
      pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewPropertySpecFromSchema<pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec>((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, a2, a3);
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v10, (pxrInternal__aapl__pxrReserved__::SdfSpec *)a3);
        v12 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)sub_20C368FF0((uint64_t)v85, v11);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v75, v12, 1);
        while (v76 != v78 || v77 != v79)
        {
          v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v80);
          __p = (void *)v76;
          v69 = v77;
          Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&__p);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v6, (int *)v81);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetPropertyAtPath((uint64_t *)&v74, v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v81);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v81 + 1);
          sub_20BFD265C(v81);
          if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v74))
          {
            if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType(&v74, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527C68, v16))
            {
              v18 = (unsigned int *)v74;
              __p = v74;
              if (v74)
              {
                do
                  v19 = __ldaxr(v18);
                while (__stlxr(v19 + 1, v18));
                v18 = (unsigned int *)__p;
                v73 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity *)__p;
                if (__p)
                {
                  do
                    v20 = __ldaxr(v18);
                  while (__stlxr(v20 + 1, v18));
                }
              }
              else
              {
                v73 = 0;
              }
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v18, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
            }
            else
            {
              v73 = 0;
            }
            if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v73))
            {
              __p = "usd/stage.cpp";
              v69 = "_CreatePropertySpecForEditing";
              v70 = 1706;
              v71 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(const "
                    "UsdProperty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec]";
              v72 = 0;
              pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CAB44D7 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v81);
              if (v82 >= 0)
                v41 = (const char *)v81;
              else
                v41 = (const char *)v81[0];
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v83);
              pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, &v66);
              v43 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v66);
              v44 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v7);
              Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v44);
              if (*(char *)(Identifier + 23) >= 0)
                v46 = (const char *)Identifier;
              else
                v46 = *(const char **)Identifier;
              v47 = sub_20BFE6874(&v74);
              SpecType = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v47);
              pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, SpecType, (uint64_t)v64);
              if (v65 >= 0)
                v49 = v64;
              else
                v49 = (void **)v64[0];
              v50 = sub_20BFE6874(&v74);
              pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v50, &v62);
              v51 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v62);
              v52 = (uint64_t **)sub_20BFE6874(&v74);
              pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v52, &v60);
              v53 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v60);
              v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v53);
              if (*(char *)(v54 + 23) >= 0)
                v55 = (const char *)v54;
              else
                v55 = *(const char **)v54;
              pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 3, (pxrInternal__aapl__pxrReserved__ *)"Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  Strongest existing spec, %s at <%s> in @%s@", v41, Text, v43, v46, (const char *)v49, v51, v55);
              v56 = v61;
              if (v61)
              {
                v57 = (unsigned int *)(v61 + 8);
                do
                {
                  v58 = __ldxr(v57);
                  v59 = v58 - 1;
                }
                while (__stlxr(v59, v57));
                if (!v59)
                  (*(void (**)(uint64_t))(*(_QWORD *)v56 + 8))(v56);
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v63);
              sub_20BFD265C(&v62);
              if (v65 < 0)
                operator delete(v64[0]);
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v67);
              sub_20BFD265C(&v66);
              v27 = v82;
              if ((v27 & 0x80000000) != 0)
                operator delete(v81[0]);
              *a3 = 0;
              goto LABEL_32;
            }
            pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v81);
            pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v85, v64);
            if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64)
              || (__p = "usd/stage.cpp",
                  v69 = "_CreatePropertySpecForEditing",
                  v70 = 1712,
                  v71 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(co"
                        "nst UsdProperty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec]",
                  v72 = 0,
                  (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "primSpec", 0) & 1) != 0))
            {
              sub_20C457768((pxrInternal__aapl__pxrReserved__::TfToken *)v64, v6, &v73, a3);
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v26, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v64);
              sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v81);
LABEL_32:
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v27, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v73);
              v29 = (void **)&v74;
              goto LABEL_51;
            }
            pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v21, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v64);
            sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v81);
            pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v22, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v73);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v17, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v74);
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v75);
        }
        *a3 = 0;
      }
    }
    else
    {
      if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527C68, v8))
      {
        v23 = (unsigned int *)v64[0];
        v75[0] = v64[0];
        if (v64[0])
        {
          do
            v24 = __ldaxr(v23);
          while (__stlxr(v24 + 1, v23));
          v23 = (unsigned int *)v75[0];
          *a3 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity *)v75[0];
          if (v23)
          {
            do
              v25 = __ldaxr(v23);
            while (__stlxr(v25 + 1, v23));
          }
        }
        else
        {
          *a3 = 0;
        }
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v23, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v75);
      }
      else
      {
        *a3 = 0;
      }
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a3) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v28, (pxrInternal__aapl__pxrReserved__::SdfSpec *)a3);
        v75[0] = "usd/stage.cpp";
        v75[1] = "_CreatePropertySpecForEditing";
        v76 = 1664;
        v77 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(const UsdPro"
              "perty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec]";
        LOBYTE(v78) = 0;
        pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CAB44D7 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&__p);
        if (v70 >= 0)
          p_p = (const char *)&__p;
        else
          p_p = (const char *)__p;
        v31 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v83);
        pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, &v60);
        v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v60);
        v33 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v7);
        v34 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v33);
        if (*(char *)(v34 + 23) >= 0)
          v35 = (const char *)v34;
        else
          v35 = *(const char **)v34;
        v36 = sub_20BFE6874((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v64);
        v37 = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v36);
        pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, v37, (uint64_t)v81);
        if (v82 >= 0)
          v38 = (const char *)v81;
        else
          v38 = (const char *)v81[0];
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v75, 3, (pxrInternal__aapl__pxrReserved__ *)"Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  %s already at that location.", p_p, v31, v32, v35, v38);
        if (v82 < 0)
          operator delete(v81[0]);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
        sub_20BFD265C(&v60);
        v28 = SHIBYTE(v70);
        if ((v28 & 0x80000000) != 0)
          operator delete(__p);
        *a3 = 0;
      }
      v29 = v64;
LABEL_51:
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v28, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v29);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v84);
    sub_20BFD265C(&v83);
  }
  else
  {
    *a3 = 0;
  }
  if ((v89 & 7) != 0)
  {
    v39 = (unsigned int *)(v89 & 0xFFFFFFFFFFFFFFF8);
    do
      v40 = __ldxr(v39);
    while (__stlxr(v40 - 2, v39));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v88);
  sub_20BFD265C(&v87);
  if (v86)
    sub_20C35C614(v86);
}

void sub_20C4338DC(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  void *v35;
  void *v36;

  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)(v33 - 152));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v35, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a29);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v36, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a31);
  sub_20BFD1A18((_DWORD *)(v33 - 128));
  sub_20C35C2E0(v33 - 120);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdProperty *a2@<X1>, void **a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v6;
  uint64_t *v7;
  const std::type_info *v8;
  void *v9;
  void *v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  const std::type_info *v16;
  void *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  const std::type_info *v21;
  void *v22;
  void *v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  const char *v31;
  const char *v32;
  const char *v33;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v34;
  uint64_t v35;
  const char *v36;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v37;
  unsigned int v38;
  const char *v39;
  void **v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  void **p_p;
  unsigned int *v47;
  unsigned int v48;
  void *v49;
  void *v50;
  unint64_t v51;
  unsigned int *v52;
  unsigned int v53;
  const char *v54;
  const char *Text;
  const char *v56;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v57;
  uint64_t Identifier;
  const char *v59;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v60;
  unsigned int SpecType;
  void **v62;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v63;
  const char *v64;
  uint64_t **v65;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  unsigned int *v70;
  unsigned int v71;
  unsigned int v72;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v73;
  uint64_t v74;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v75;
  void *v76[2];
  char v77;
  int v78;
  int v79;
  void *__p;
  const char *v81;
  uint64_t v82;
  const char *v83;
  char v84;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v85;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v86;
  _QWORD v87[2];
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  const char *v91;
  uint64_t *v92;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v93[2];
  char v94;
  int v95;
  int v96;
  _BYTE v97[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v98;
  int v99;
  int v100;
  uint64_t v101;

  sub_20C35C4F8((uint64_t)v97, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v97, "create property spec") & 1) != 0)
  {
    sub_20C348EEC((uint64_t)a2, &v95);
    v6 = sub_20C398E78(a2);
    v7 = (uint64_t *)((char *)this + 48);
    pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPropertySpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v95, (uint64_t *)v76);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v76) & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v76);
      pxrInternal__aapl__pxrReserved__::UsdStage::_CreateNewPropertySpecFromSchema<pxrInternal__aapl__pxrReserved__::SdfPropertySpec>(this, (uint64_t)a2, a3);
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)a3) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v10, (pxrInternal__aapl__pxrReserved__::SdfSpec *)a3);
        v12 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)sub_20C368FF0((uint64_t)v97, v11);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v87, v12, 1);
        while (v88 != v90 || v89 != v91)
        {
          v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v92);
          __p = (void *)v88;
          v81 = v89;
          Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&__p);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v6, (int *)v93);
          pxrInternal__aapl__pxrReserved__::SdfLayer::GetPropertyAtPath((uint64_t *)&v86, v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v93);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v93 + 1);
          sub_20BFD265C(v93);
          if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v86))
          {
            if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType(&v86, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527B00, v16))
            {
              v18 = (unsigned int *)v86;
              __p = v86;
              if (v86)
              {
                do
                  v19 = __ldaxr(v18);
                while (__stlxr(v19 + 1, v18));
                v18 = (unsigned int *)__p;
                v85 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity *)__p;
                if (__p)
                {
                  do
                    v20 = __ldaxr(v18);
                  while (__stlxr(v20 + 1, v18));
                }
              }
              else
              {
                v85 = 0;
              }
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v18, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
            }
            else
            {
              v85 = 0;
            }
            if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v85))
            {
              __p = "usd/stage.cpp";
              v81 = "_CreatePropertySpecForEditing";
              v82 = 1706;
              v83 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(const "
                    "UsdProperty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfPropertySpec]";
              v84 = 0;
              pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CABC422 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v93);
              if (v94 >= 0)
                v54 = (const char *)v93;
              else
                v54 = (const char *)v93[0];
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v95);
              pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v95, &v78);
              v56 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v78);
              v57 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v7);
              Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v57);
              if (*(char *)(Identifier + 23) >= 0)
                v59 = (const char *)Identifier;
              else
                v59 = *(const char **)Identifier;
              v60 = sub_20BFE6874(&v86);
              SpecType = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v60);
              pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, SpecType, (uint64_t)v76);
              if (v77 >= 0)
                v62 = v76;
              else
                v62 = (void **)v76[0];
              v63 = sub_20BFE6874(&v86);
              pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v63, &v75);
              v64 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v75);
              v65 = (uint64_t **)sub_20BFE6874(&v86);
              pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v65, (uint64_t *)&v73);
              v66 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&v73);
              v67 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v66);
              if (*(char *)(v67 + 23) >= 0)
                v68 = (const char *)v67;
              else
                v68 = *(const char **)v67;
              pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 3, (pxrInternal__aapl__pxrReserved__ *)"Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  Strongest existing spec, %s at <%s> in @%s@", v54, Text, v56, v59, (const char *)v62, v64, v68);
              v69 = v74;
              if (v74)
              {
                v70 = (unsigned int *)(v74 + 8);
                do
                {
                  v71 = __ldxr(v70);
                  v72 = v71 - 1;
                }
                while (__stlxr(v72, v70));
                if (!v72)
                  (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
              }
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v75 + 1);
              sub_20BFD265C(&v75);
              if (v77 < 0)
                operator delete(v76[0]);
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v79);
              sub_20BFD265C(&v78);
              v51 = v94;
              if ((v51 & 0x80000000) != 0)
                operator delete(v93[0]);
              *a3 = 0;
              goto LABEL_72;
            }
            pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v78);
            pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v97, &v75);
            if (!pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v75)
              || (__p = "usd/stage.cpp",
                  v81 = "_CreatePropertySpecForEditing",
                  v82 = 1712,
                  v83 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(co"
                        "nst UsdProperty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfPropertySpec]",
                  v84 = 0,
                  (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "primSpec", 0) & 1) != 0))
            {
              if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType(&v85, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527B18, v21))
              {
                v27 = (unsigned int *)v85;
                __p = v85;
                if (v85)
                {
                  do
                    v28 = __ldaxr(v27);
                  while (__stlxr(v28 + 1, v27));
                  v27 = (unsigned int *)__p;
                  v93[0] = (pxrInternal__aapl__pxrReserved__::Sdf_Identity *)__p;
                  if (__p)
                  {
                    do
                      v29 = __ldaxr(v27);
                    while (__stlxr(v29 + 1, v27));
                  }
                }
                else
                {
                  v93[0] = 0;
                }
                pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v27, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
              }
              else
              {
                v93[0] = 0;
              }
              if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(v93) & 1) != 0)
              {
                v41 = (unsigned int *)v85;
                __p = v85;
                if (v85)
                {
                  do
                    v42 = __ldaxr(v41);
                  while (__stlxr(v42 + 1, v41));
                  v41 = (unsigned int *)__p;
                  v73 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity *)__p;
                  if (__p)
                  {
                    do
                      v43 = __ldaxr(v41);
                    while (__stlxr(v43 + 1, v41));
                  }
                }
                else
                {
                  v73 = 0;
                }
                pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v41, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
                sub_20C457768((pxrInternal__aapl__pxrReserved__::TfToken *)&v75, v6, &v73, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v76);
                v47 = (unsigned int *)v76[0];
                *a3 = v76[0];
                if (v47)
                {
                  do
                    v48 = __ldaxr(v47);
                  while (__stlxr(v48 + 1, v47));
                }
                pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v47, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v76);
                p_p = (void **)&v73;
              }
              else
              {
                sub_20C4576C8((pxrInternal__aapl__pxrReserved__::TfToken *)&v75, v6, v93, (unsigned int **)&__p);
                v44 = (unsigned int *)__p;
                *a3 = __p;
                if (v44)
                {
                  do
                    v45 = __ldaxr(v44);
                  while (__stlxr(v45 + 1, v44));
                }
                p_p = &__p;
              }
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v44, (pxrInternal__aapl__pxrReserved__::SdfSpec *)p_p);
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v49, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v93);
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v50, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v75);
              sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v78);
LABEL_72:
              pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v51, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v85);
              v40 = (void **)&v86;
              goto LABEL_73;
            }
            pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v22, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v75);
            sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&v78);
            pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v23, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v85);
          }
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v17, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v86);
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v87);
        }
        *a3 = 0;
      }
    }
    else
    {
      if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v76, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527B00, v8))
      {
        v24 = (unsigned int *)v76[0];
        v87[0] = v76[0];
        if (v76[0])
        {
          do
            v25 = __ldaxr(v24);
          while (__stlxr(v25 + 1, v24));
          v24 = (unsigned int *)v87[0];
          *a3 = (void *)v87[0];
          if (v24)
          {
            do
              v26 = __ldaxr(v24);
            while (__stlxr(v26 + 1, v24));
          }
        }
        else
        {
          *a3 = 0;
        }
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v24, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v87);
      }
      else
      {
        *a3 = 0;
      }
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)a3) & 1) != 0)
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v30, (pxrInternal__aapl__pxrReserved__::SdfSpec *)a3);
        v87[0] = "usd/stage.cpp";
        v87[1] = "_CreatePropertySpecForEditing";
        v88 = 1664;
        v89 = "SdfHandle<PropType> pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(const UsdPro"
              "perty &) [PropType = pxrInternal__aapl__pxrReserved__::SdfPropertySpec]";
        LOBYTE(v90) = 0;
        pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CABC422 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&__p);
        if (v82 >= 0)
          v31 = (const char *)&__p;
        else
          v31 = (const char *)__p;
        v32 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v95);
        pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v95, &v73);
        v33 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v73);
        v34 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v7);
        v35 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v34);
        if (*(char *)(v35 + 23) >= 0)
          v36 = (const char *)v35;
        else
          v36 = *(const char **)v35;
        v37 = sub_20BFE6874((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v76);
        v38 = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v37);
        pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, v38, (uint64_t)v93);
        if (v94 >= 0)
          v39 = (const char *)v93;
        else
          v39 = (const char *)v93[0];
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v87, 3, (pxrInternal__aapl__pxrReserved__ *)"Spec type mismatch.  Failed to create %s for <%s> at <%s> in @%s@.  %s already at that location.", v31, v32, v33, v36, v39);
        if (v94 < 0)
          operator delete(v93[0]);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v73 + 1);
        sub_20BFD265C(&v73);
        v30 = SHIBYTE(v82);
        if ((v30 & 0x80000000) != 0)
          operator delete(__p);
        *a3 = 0;
      }
      v40 = v76;
LABEL_73:
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v30, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v40);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v96);
    sub_20BFD265C(&v95);
  }
  else
  {
    *a3 = 0;
  }
  if ((v101 & 7) != 0)
  {
    v52 = (unsigned int *)(v101 & 0xFFFFFFFFFFFFFFF8);
    do
      v53 = __ldxr(v52);
    while (__stlxr(v53 - 2, v52));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v100);
  sub_20BFD265C(&v99);
  if (v98)
    sub_20C35C614(v98);
}

void sub_20C434218(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  void *v35;
  void *v36;

  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a13);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)&a20);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v35, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a29);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v36, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a31);
  sub_20BFD1A18((_DWORD *)(v33 - 128));
  sub_20C35C2E0(v33 - 120);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_SetMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdObject *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  const pxrInternal__aapl__pxrReserved__::VtValue *v5;
  uint64_t v10;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v19;
  uint64_t v20;
  __int128 *v21;

  v5 = a5;
  if (sub_20C1D0F74(a5))
  {
    v10 = *((_QWORD *)v5 + 1);
    if ((v10 & 4) != 0)
      v5 = (const pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(const pxrInternal__aapl__pxrReserved__::VtValue *))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(v5);
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetEditTargetMappedMetadata<pxrInternal__aapl__pxrReserved__::SdfTimeCode>(this, (int *)a2, a3, a4, (double *)v5);
  }
  else if (sub_20C1D1114(v5))
  {
    v12 = *((_QWORD *)v5 + 1);
    if ((v12 & 4) != 0)
      v13 = (__int128 *)(*(uint64_t (**)(const pxrInternal__aapl__pxrReserved__::VtValue *))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(v5);
    else
      v13 = *(__int128 **)v5;
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetEditTargetMappedMetadata<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::SdfTimeCode>>(this, (int *)a2, a3, a4, v13);
  }
  else if (sub_20BFEFCF0(v5))
  {
    v14 = *((_QWORD *)v5 + 1);
    if ((v14 & 4) != 0)
      v15 = (*(uint64_t (**)(const pxrInternal__aapl__pxrReserved__::VtValue *))((v14 & 0xFFFFFFFFFFFFFFF8)
                                                                                         + 168))(v5);
    else
      v15 = *(_QWORD *)v5;
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetEditTargetMappedMetadata<pxrInternal__aapl__pxrReserved__::SdfPathExpression>(this, (uint64_t)a2, a3, a4, v15);
  }
  else if (sub_20BFEFDCC(v5))
  {
    v16 = *((_QWORD *)v5 + 1);
    if ((v16 & 4) != 0)
      v17 = (__int128 *)(*(uint64_t (**)(const pxrInternal__aapl__pxrReserved__::VtValue *))((v16 & 0xFFFFFFFFFFFFFFF8) + 168))(v5);
    else
      v17 = *(__int128 **)v5;
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetEditTargetMappedMetadata<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::SdfPathExpression>>(this, (uint64_t)a2, a3, a4, v17);
  }
  else if (sub_20BF4A73C(v5))
  {
    v18 = *((_QWORD *)v5 + 1);
    if ((v18 & 4) != 0)
      v19 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(const pxrInternal__aapl__pxrReserved__::VtValue *))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))(v5);
    else
      v19 = *(const pxrInternal__aapl__pxrReserved__::VtDictionary **)v5;
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetEditTargetMappedMetadata<pxrInternal__aapl__pxrReserved__::VtDictionary>(this, (int *)a2, a3, a4, v19);
  }
  else if (sub_20BFEB19C(v5))
  {
    v20 = *((_QWORD *)v5 + 1);
    if ((v20 & 4) != 0)
      v21 = (__int128 *)(*(uint64_t (**)(const pxrInternal__aapl__pxrReserved__::VtValue *))((v20 & 0xFFFFFFFFFFFFFFF8) + 168))(v5);
    else
      v21 = *(__int128 **)v5;
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetEditTargetMappedMetadata<std::map<double,pxrInternal__aapl__pxrReserved__::VtValue>>(this, (int *)a2, a3, a4, v21);
  }
  else
  {
    return pxrInternal__aapl__pxrReserved__::UsdStage::_SetMetadataImpl<pxrInternal__aapl__pxrReserved__::VtValue>(this, (int *)a2, a3, a4, v5);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_SetValue(uint64_t a1, pxrInternal__aapl__pxrReserved__ *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3, double a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;

  v4 = (uint64_t)a3;
  if (sub_20C1D0F74(a3))
  {
    v8 = *(_QWORD *)(v4 + 8);
    if ((v8 & 4) != 0)
      v4 = (*(uint64_t (**)(uint64_t))((v8 & 0xFFFFFFFFFFFFFFF8) + 168))(v4);
    return sub_20C3EBDC4(a1, a2, (double *)v4, a4);
  }
  else if (sub_20C1D1114((pxrInternal__aapl__pxrReserved__::VtValue *)v4))
  {
    v10 = *(_QWORD *)(v4 + 8);
    if ((v10 & 4) != 0)
      v11 = (__int128 *)(*(uint64_t (**)(uint64_t))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(v4);
    else
      v11 = *(__int128 **)v4;
    return sub_20C3EBE70(a1, a2, v11, a4);
  }
  else if (sub_20BFEFCF0((pxrInternal__aapl__pxrReserved__::VtValue *)v4))
  {
    v12 = *(_QWORD *)(v4 + 8);
    if ((v12 & 4) != 0)
      v13 = (*(uint64_t (**)(uint64_t))((v12 & 0xFFFFFFFFFFFFFFF8) + 168))(v4);
    else
      v13 = *(_QWORD *)v4;
    return sub_20C3F3170(a1, (uint64_t)a2, v13, a4);
  }
  else if (sub_20BFEFDCC((pxrInternal__aapl__pxrReserved__::VtValue *)v4))
  {
    v14 = *(_QWORD *)(v4 + 8);
    if ((v14 & 4) != 0)
      v15 = (__int128 *)(*(uint64_t (**)(uint64_t))((v14 & 0xFFFFFFFFFFFFFFF8) + 168))(v4);
    else
      v15 = *(__int128 **)v4;
    return sub_20C3F3420(a1, (uint64_t)a2, v15, a4);
  }
  else
  {
    return sub_20C4347C8(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)v4, a4);
  }
}

uint64_t sub_20C4347C8(uint64_t a1, pxrInternal__aapl__pxrReserved__ *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3, double a4)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v7;
  unsigned int *v8;
  unsigned int v9;
  unint64_t ***Instance;
  unsigned __int8 v11;
  uint64_t Typeid;
  const char *Text;
  unint64_t v14;
  const char *v15;
  const char *v16;
  unint64_t v17;
  const char *v18;
  unint64_t v19;
  const char *v20;
  unint64_t v21;
  void **v22;
  uint64_t v23;
  _BOOL8 v24;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v25;
  void *p_p;
  const char *v27;
  char *v28;
  int v29;
  const char *v30;
  void **v31;
  void **v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int *v35;
  unsigned int v36;
  uint64_t v37;
  int IsDormant;
  pxrInternal__aapl__pxrReserved__::UsdEditTarget *v39;
  const char *v40;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v41;
  uint64_t Identifier;
  const char *v43;
  unsigned int *v44;
  const char *v45;
  double v46;
  uint64_t **v47;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v48;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v49;
  const char *v50;
  unsigned int v51;
  unsigned int v52;
  const std::type_info *v54;
  char *v55;
  void *v56[2];
  char v57;
  void *v58[2];
  char v59;
  int v60;
  int v61;
  void *v62;
  void *__p;
  const char *v64;
  uint64_t v65;
  const char *v66;
  char v67;
  double Inverse;
  const char *v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  unsigned int *v73[3];
  __int16 v74;
  uint64_t v75;
  double v76;

  v76 = a4;
  if ((sub_20C0AA3E8(a3) & 1) != 0)
    goto LABEL_62;
  v75 = 0;
  v73[2] = (unsigned int *)&stru_24C51BCE0;
  v74 = 0;
  v73[0] = (unsigned int *)&unk_24C5286B0;
  v73[1] = (unsigned int *)&v75;
  sub_20C4535E0((uint64_t)&Inverse, (uint64_t)v73, (uint64_t)a2);
  v7 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v7)
    v7 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  __p = 0;
  sub_20C4577E8(a1, (uint64_t)a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v7 + 448), (uint64_t *)&__p, (uint64_t (****)(_QWORD, uint64_t))&Inverse);
  if ((__p & 7) != 0)
  {
    v8 = (unsigned int *)((unint64_t)__p & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  if (!v75)
  {
    __p = "usd/stage.cpp";
    v64 = "_SetValueImpl";
    v65 = 6738;
    v66 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) ["
          "T = pxrInternal__aapl__pxrReserved__::VtValue]";
    v67 = 0;
    sub_20C348EEC((uint64_t)a2, (int *)v58);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v58);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 3, (pxrInternal__aapl__pxrReserved__ *)"Empty typeName for <%s>", Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v58 + 1);
LABEL_50:
    v32 = v58;
LABEL_51:
    sub_20BFD265C(v32);
    v29 = 1;
    goto LABEL_52;
  }
  Instance = (unint64_t ***)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (unint64_t ***)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  __p = (void *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FindType(Instance, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v75);
  v62 = *(void **)pxrInternal__aapl__pxrReserved__::SdfValueTypeName::GetType((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&__p);
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)&__p);
  if (v62 == __p)
  {
    __p = "usd/stage.cpp";
    v64 = "_SetValueImpl";
    v65 = 6745;
    v66 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) ["
          "T = pxrInternal__aapl__pxrReserved__::VtValue]";
    v67 = 0;
    v14 = v75 & 0xFFFFFFFFFFFFFFF8;
    if ((v75 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v15 = (const char *)(v14 + 16);
      if (*(char *)(v14 + 39) < 0)
        v15 = *(const char **)v15;
    }
    else
    {
      v15 = "";
    }
    sub_20C348EEC((uint64_t)a2, (int *)v58);
    v30 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v58);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 3, (pxrInternal__aapl__pxrReserved__ *)"Unknown typename for <%s>: '%s'", v15, v30);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v58 + 1);
    goto LABEL_50;
  }
  if ((v11 & 1) == 0
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl<pxrInternal__aapl__pxrReserved__::VtValue>(pxrInternal__aapl__pxrReserved__::UsdTimeCode,pxrInternal__aapl__pxrReserved__::UsdAttribute const&,pxrInternal__aapl__pxrReserved__::VtValue const&)::opaqueType = *(_QWORD *)pxrInternal__aapl__pxrReserved__::TfType::_FindByTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&stru_24C524D80, v54, v55);
  }
  if (v62 == (void *)pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl<pxrInternal__aapl__pxrReserved__::VtValue>(pxrInternal__aapl__pxrReserved__::UsdTimeCode,pxrInternal__aapl__pxrReserved__::UsdAttribute const&,pxrInternal__aapl__pxrReserved__::VtValue const&)::opaqueType)
  {
    __p = "usd/stage.cpp";
    v64 = "_SetValueImpl";
    v65 = 6752;
    v66 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) ["
          "T = pxrInternal__aapl__pxrReserved__::VtValue]";
    v67 = 0;
    sub_20C348EEC((uint64_t)a2, (int *)v58);
    v16 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v58);
    v17 = v75 & 0xFFFFFFFFFFFFFFF8;
    if ((v75 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v18 = (const char *)(v17 + 16);
      if (*(char *)(v17 + 39) < 0)
        v18 = *(const char **)v18;
    }
    else
    {
      v18 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Can't set value on <%s>: %s-typed attributes cannot have an authored default value", v16, v18);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v58 + 1);
    goto LABEL_50;
  }
  if (*((_QWORD *)a3 + 1))
    Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a3);
  else
    Typeid = MEMORY[0x24BEDB7C8];
  v19 = pxrInternal__aapl__pxrReserved__::TfType::GetTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&v62);
  if (strcmp((const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v19 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    __p = "usd/stage.cpp";
    v64 = "_SetValueImpl";
    v65 = 6760;
    v66 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) ["
          "T = pxrInternal__aapl__pxrReserved__::VtValue]";
    v67 = 0;
    sub_20C348EEC((uint64_t)a2, &v60);
    v20 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v60);
    v21 = pxrInternal__aapl__pxrReserved__::TfType::GetTypeid((pxrInternal__aapl__pxrReserved__::TfType *)&v62);
    v22 = v58;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(*(_QWORD *)(v21 + 8) & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v58);
    if (v59 < 0)
      v22 = (void **)v58[0];
    if (*((_QWORD *)a3 + 1))
      v23 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a3);
    else
      v23 = MEMORY[0x24BEDB7C8];
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(*(_QWORD *)(v23 + 8) & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v56);
    if (v57 >= 0)
      v31 = v56;
    else
      v31 = (void **)v56[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Type mismatch for <%s>: expected '%s', got '%s'", v20, (const char *)v22, (const char *)v31);
    if (v57 < 0)
      operator delete(v56[0]);
    if (v59 < 0)
      operator delete(v58[0]);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v61);
    v32 = (void **)&v60;
    goto LABEL_51;
  }
  if (sub_20C286E00(16))
  {
    __p = (void *)0x7FF8000000000000;
    v24 = sub_20C4588B4(&v76, (pxrInternal__aapl__pxrReserved__::UsdTimeCode *)&__p);
    if (v24
      && pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability((pxrInternal__aapl__pxrReserved__::UsdStage *)v24, a2) == 1&& sub_20C286E00(16))
    {
      p_p = &__p;
      pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&__p, a2, v25);
      if (v65 < 0)
        p_p = __p;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Warning: authoring time sample value on uniform attribute <%s> at time %.3f\n", v27, v28, p_p, *(_QWORD *)&v76);
      if (SHIBYTE(v65) < 0)
        operator delete(__p);
    }
  }
  v29 = 0;
LABEL_52:
  if ((v72 & 7) != 0)
  {
    v33 = (unsigned int *)(v72 & 0xFFFFFFFFFFFFFFF8);
    do
      v34 = __ldxr(v33);
    while (__stlxr(v34 - 2, v33));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v71 + 1);
  sub_20BFD265C(&v71);
  if (v70)
    sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v70);
  if ((v75 & 7) != 0)
  {
    v35 = (unsigned int *)(v75 & 0xFFFFFFFFFFFFFFF8);
    do
      v36 = __ldxr(v35);
    while (__stlxr(v36 - 2, v35));
  }
  if (v29)
    return 0;
LABEL_62:
  sub_20C432A64(a1, (uint64_t)a2, v73);
  IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v73);
  if (IsDormant)
  {
    Inverse = COERCE_DOUBLE("usd/stage.cpp");
    v69 = "_SetValueImpl";
    v70 = 6785;
    v71 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_SetValueImpl(UsdTimeCode, const UsdAttribute &, const T &) ["
          "T = pxrInternal__aapl__pxrReserved__::VtValue]";
    LOBYTE(v72) = 0;
    sub_20C348EEC((uint64_t)a2, (int *)v58);
    v39 = (pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 48);
    pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v39, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v58, &__p);
    v40 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&__p);
    v41 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v39);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v41);
    if (*(char *)(Identifier + 23) >= 0)
      v43 = (const char *)Identifier;
    else
      v43 = *(const char **)Identifier;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&Inverse, 3, (pxrInternal__aapl__pxrReserved__ *)"Cannot set attribute value.  Failed to create attribute spec <%s> in layer @%s@", v40, v43);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_20BFD265C(&__p);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v58 + 1);
    sub_20BFD265C(v58);
  }
  else
  {
    Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a1 + 104));
    v69 = v45;
    v46 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(&Inverse, v76);
    v47 = (uint64_t **)sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v73);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v47, (uint64_t *)&__p);
    v48 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&__p);
    v49 = sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v73);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v49, v58);
    pxrInternal__aapl__pxrReserved__::SdfLayer::SetTimeSample(v48, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v58, v46, a3);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v58 + 1);
    sub_20BFD265C(v58);
    v50 = v64;
    if (v64)
    {
      v44 = (unsigned int *)(v64 + 8);
      do
      {
        v51 = __ldxr(v44);
        v52 = v51 - 1;
      }
      while (__stlxr(v52, v44));
      if (!v52)
        (*(void (**)(const char *))(*(_QWORD *)v50 + 8))(v50);
    }
  }
  v37 = IsDormant ^ 1u;
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v44, (pxrInternal__aapl__pxrReserved__::SdfSpec *)v73);
  return v37;
}

void sub_20C434F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v37;
  unsigned int *v38;
  unsigned int v39;

  sub_20C444704((uint64_t)&a34);
  v37 = *(_QWORD *)(v35 - 96);
  if ((v37 & 7) != 0)
  {
    v38 = (unsigned int *)(v37 & 0xFFFFFFFFFFFFFFF8);
    do
      v39 = __ldxr(v38);
    while (__stlxr(v39 - 2, v38));
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ClearValue(uint64_t *a1, uint64_t a2, double a3)
{
  char v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t (*v9)(uint64_t *);
  char v10;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  double v13;
  uint64_t **v14;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v15;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v16;
  unsigned int *v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v24;
  uint64_t Identifier;
  const char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  unsigned int *v35;
  double Inverse;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;

  sub_20C35C4F8((uint64_t)&Inverse, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
  v6 = pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&Inverse, "clear attribute value");
  if ((v39 & 7) != 0)
  {
    v7 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v38 + 1);
  sub_20BFD265C(&v38);
  if (v37)
    sub_20C35C614(v37);
  if ((v6 & 1) == 0)
    return 0;
  v9 = sub_20BFD2F78(a1 + 6);
  if (!(v10 & 1 | (unint64_t)v9))
  {
    Inverse = COERCE_DOUBLE("usd/stage.cpp");
    v37 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ClearValue";
    v38 = 1990;
    v39 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ClearValue(UsdTimeCode, const UsdAttribute &)";
    v40 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&Inverse, 1, (pxrInternal__aapl__pxrReserved__ *)"EditTarget does not contain a valid layer.");
    return 0;
  }
  v11 = sub_20BFCF650(a1 + 6);
  sub_20C348EEC(a2, (int *)&v31);
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 6), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v31, &Inverse);
  LOBYTE(v11) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasSpec((pxrInternal__aapl__pxrReserved__::SdfLayer *)v11, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&Inverse);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&Inverse + 1);
  sub_20BFD265C(&Inverse);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v31 + 1);
  sub_20BFD265C(&v31);
  if ((v11 & 1) == 0)
    return 1;
  sub_20C432A64((uint64_t)a1, a2, &v35);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v35) & 1) == 0)
    goto LABEL_10;
  Inverse = COERCE_DOUBLE("usd/stage.cpp");
  v37 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ClearValue";
  v38 = 2004;
  v39 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ClearValue(UsdTimeCode, const UsdAttribute &)";
  v40 = 0;
  sub_20C348EEC(a2, &v33);
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)(a1 + 6), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v33, &v31);
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
  v24 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1 + 6);
  Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v24);
  v28 = *(char *)(Identifier + 23) >= 0 ? Identifier : *(_QWORD *)Identifier;
  v29 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Failed to get attribute spec <%s> in layer @%s@", v26, v27, Text, v28);
  v30 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&Inverse, "attrSpec", v29);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v31 + 1);
  sub_20BFD265C(&v31);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  if ((v30 & 1) != 0)
  {
LABEL_10:
    Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a1 + 13));
    v37 = v12;
    v13 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(&Inverse, a3);
    v14 = (uint64_t **)sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v35);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v14, &v31);
    v15 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v31);
    v16 = sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v35);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v16, &v33);
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseTimeSample(v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v33, v13);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
    sub_20BFD265C(&v33);
    v18 = v32;
    if (v32)
    {
      v17 = (unsigned int *)(v32 + 8);
      do
      {
        v19 = __ldxr(v17);
        v20 = v19 - 1;
      }
      while (__stlxr(v20, v17));
      if (!v20)
        (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
    }
    v21 = 1;
  }
  else
  {
    v21 = 0;
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v17, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v35);
  return v21;
}

void sub_20C4354CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, int a15, __int16 a16, char a17, char a18, uint64_t a19)
{
  unsigned int *v19;
  unsigned int v20;

  if ((a19 & 7) != 0)
  {
    v19 = (unsigned int *)(a19 & 0xFFFFFFFFFFFFFFF8);
    do
      v20 = __ldxr(v19);
    while (__stlxr(v20 - 2, v19));
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ClearMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdObject *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4)
{
  char v8;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::UsdEditTarget *v11;
  uint64_t (*v12)(uint64_t *);
  char v13;
  uint64_t v14;
  void *v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  void *v19;
  unsigned int *v20;
  unsigned int v21;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v22;
  uint64_t Schema;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v24;
  unsigned int SpecType;
  uint64_t **v26;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v27;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v28;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  unsigned int *v30;
  unsigned int v31;
  BOOL v32;
  unint64_t v33;
  const char *v34;
  uint64_t **v35;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v36;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v37;
  unsigned int *v38;
  unsigned int v39;
  void **v40;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v43;
  uint64_t Identifier;
  const char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char v49;
  void *__p[2];
  char v51;
  int v52;
  int v53;
  unsigned int *v54;
  char *v55;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  sub_20C35C4F8((uint64_t)&v55, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  v8 = pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v55, "clear metadata");
  if ((v58 & 7) != 0)
  {
    v9 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
  sub_20BFD265C(&v57);
  if (v56)
    sub_20C35C614(v56);
  if ((v8 & 1) == 0)
    return 0;
  v11 = (pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48);
  v12 = sub_20BFD2F78((_QWORD *)this + 6);
  if (!(v13 & 1 | (unint64_t)v12))
  {
    v55 = "usd/stage.cpp";
    v56 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ClearMetadata";
    v57 = 2028;
    v58 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ClearMetadata(const UsdObject &, const TfT"
                            "oken &, const TfToken &)";
    v59 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v55, 1, (pxrInternal__aapl__pxrReserved__ *)"EditTarget does not contain a valid layer.");
    return 0;
  }
  v14 = sub_20BFCF650((uint64_t *)this + 6);
  sub_20C348EEC((uint64_t)a2, (int *)__p);
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)__p, &v55);
  LOBYTE(v14) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasSpec((pxrInternal__aapl__pxrReserved__::SdfLayer *)v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v55 + 1);
  sub_20BFD265C(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
  sub_20BFD265C(__p);
  if ((v14 & 1) != 0)
  {
    v54 = 0;
    if (*(int *)a2 < 2)
    {
      sub_20C386D74((uint64_t)a2, (uint64_t)&v55);
      pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)&v55, __p);
      pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(&v54, (unsigned int **)__p);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v19, (pxrInternal__aapl__pxrReserved__::SdfSpec *)__p);
      if ((v58 & 7) != 0)
      {
        v20 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stlxr(v21 - 2, v20));
      }
    }
    else
    {
      sub_20C3AD664((uint64_t)a2, (uint64_t)&v55);
      pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePropertySpecForEditing(this, (const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v55, __p);
      pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(&v54, (unsigned int **)__p);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v15, (pxrInternal__aapl__pxrReserved__::SdfSpec *)__p);
      if ((v58 & 7) != 0)
      {
        v16 = (unsigned int *)(v58 & 0xFFFFFFFFFFFFFFF8);
        do
          v17 = __ldxr(v16);
        while (__stlxr(v17 - 2, v16));
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v57 + 1);
    sub_20BFD265C(&v57);
    if (v56)
      sub_20C35C614(v56);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54) & 1) != 0)
    {
      v55 = "usd/stage.cpp";
      v56 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ClearMetadata";
      v57 = 2046;
      v58 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ClearMetadata(const UsdObject &, const T"
                              "fToken &, const TfToken &)";
      v59 = 0;
      sub_20C348EEC((uint64_t)a2, &v52);
      pxrInternal__aapl__pxrReserved__::UsdEditTarget::MapToSpecPath(v11, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v52, __p);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)__p);
      v43 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v11);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v43);
      v47 = *(char *)(Identifier + 23) >= 0 ? Identifier : *(_QWORD *)Identifier;
      v48 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"No spec at <%s> in layer @%s@", v45, v46, Text, v47);
      v49 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v55, "spec", v48);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
      sub_20BFD265C(__p);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v53);
      sub_20BFD265C(&v52);
      if ((v49 & 1) == 0)
        goto LABEL_45;
    }
    v22 = sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54);
    Schema = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSchema(v22);
    v24 = sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54);
    SpecType = pxrInternal__aapl__pxrReserved__::SdfSpec::GetSpecType(v24);
    if ((pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec(Schema, a3, SpecType) & 1) == 0)
    {
      v55 = "usd/stage.cpp";
      v56 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_ClearMetadata";
      v57 = 2056;
      v58 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ClearMetadata(const UsdObject &, const T"
                              "fToken &, const TfToken &)";
      v59 = 0;
      v33 = *(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8;
      if (v33)
      {
        v34 = (const char *)(v33 + 16);
        if (*(char *)(v33 + 39) < 0)
          v34 = *(const char **)v34;
      }
      else
      {
        v34 = "";
      }
      pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&stru_24C524D70, SpecType, (uint64_t)__p);
      if (v51 >= 0)
        v40 = __p;
      else
        v40 = (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v55, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot clear metadata. '%s' is not registered as valid metadata for spec type %s.", v34, (const char *)v40);
      if (v51 < 0)
        operator delete(__p[0]);
LABEL_45:
      v18 = 0;
      goto LABEL_46;
    }
    if (*(_QWORD *)a4)
    {
      v26 = (uint64_t **)sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v26, (uint64_t *)&v55);
      v27 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&v55);
      v28 = sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v28, __p);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseFieldDictValueByKey(v27, (const pxrInternal__aapl__pxrReserved__::SdfPath *)__p, a3, a4);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
      sub_20BFD265C(__p);
      v29 = v56;
      if (v56)
      {
        v30 = (unsigned int *)((char *)v56 + 8);
        do
        {
          v31 = __ldxr(v30);
          v32 = --v31 == 0;
        }
        while (__stlxr(v31, v30));
        goto LABEL_35;
      }
    }
    else
    {
      v35 = (uint64_t **)sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetLayer(v35, (uint64_t *)&v55);
      v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&v55);
      v37 = sub_20BFD5244((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v54);
      pxrInternal__aapl__pxrReserved__::SdfSpec::GetPath((pxrInternal__aapl__pxrReserved__::SdfSpec *)v37, __p);
      pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)__p, a3);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)__p + 1);
      sub_20BFD265C(__p);
      v29 = v56;
      if (v56)
      {
        v38 = (unsigned int *)((char *)v56 + 8);
        do
        {
          v39 = __ldxr(v38);
          v32 = --v39 == 0;
        }
        while (__stlxr(v39, v38));
LABEL_35:
        if (v32)
          (*(void (**)(pxrInternal__aapl__pxrReserved__::Usd_PrimData *))(*(_QWORD *)v29 + 8))(v29);
      }
    }
    v18 = 1;
LABEL_46:
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v54);
    return v18;
  }
  return 1;
}

void sub_20C435AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, int a17, int a18, __int16 a19, char a20,char a21,int a22,__int16 a23,char a24,char a25,uint64_t a26)
{
  sub_20BFD1A18(&a17);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&a19);
  _Unwind_Resume(a1);
}

void sub_20C435C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_20C35C2E0((uint64_t)va);
  JUMPOUT(0x20C435C3CLL);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;

  v3 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)this + 3);
  v7 = v3;
  if (v3)
  {
    v4 = (unint64_t *)((char *)v3 + 48);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v6 + 1);
  sub_20C35C4F8(a2, (uint64_t *)&v7, &v6);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v6 + 1);
  sub_20BFD265C(&v6);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C435CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a10)
{
  sub_20BFD1A18(&a9);
  if (a10)
    sub_20C35C614(a10);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::GetDefaultPrim@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase **v4;
  pxrInternal__aapl__pxrReserved__::TfToken *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t *EmptyString;
  pxrInternal__aapl__pxrReserved__::SdfPath *IsValidIdentifier;
  pxrInternal__aapl__pxrReserved__::SdfPath *v11;
  _DWORD *result;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unint64_t v17;

  sub_20C1034E8(&v15, (uint64_t *)this + 4);
  v4 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase **)sub_20BFCF650(&v15);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetDefaultPrim(v4, (unsigned int **)&v17);
  v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)v16;
  if (v16)
  {
    v6 = v16 + 2;
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      v5 = (pxrInternal__aapl__pxrReserved__::TfToken *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::TfToken *))(*(_QWORD *)v5 + 8))(v5);
  }
  if ((v17 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((v17 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v5);
  IsValidIdentifier = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::IsValidIdentifier((uint64_t)EmptyString);
  if ((_DWORD)IsValidIdentifier)
  {
    v11 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(IsValidIdentifier);
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendChild(v11, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v17, &v15);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v15, a2);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v15 + 1);
    result = sub_20BFD265C(&v15);
  }
  else
  {
    *(_DWORD *)a2 = 1;
    *(_QWORD *)(a2 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a2 + 16));
    result = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a2 + 20));
    *(_QWORD *)(a2 + 24) = 0;
  }
  if ((v17 & 7) != 0)
  {
    v13 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  return result;
}

void sub_20C435E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12)
{
  unsigned int *v13;
  unsigned int v14;

  sub_20BFD1A18(&a10);
  if ((a12 & 7) != 0)
  {
    v13 = (unsigned int *)(a12 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  _Unwind_Resume(a1);
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdStage::GetRootLayer@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t *a2@<X8>)
{
  return sub_20C1034E8(a2, (uint64_t *)this + 4);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *PrimDataAtPathOrInPrototype;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  unint64_t *v8;
  unint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;

  v3 = a2;
  if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(a2))
  {
    PrimDataAtPathOrInPrototype = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPathOrInPrototype(this, v3);
    if (PrimDataAtPathOrInPrototype)
    {
      v7 = PrimDataAtPathOrInPrototype;
      if (*((_QWORD *)PrimDataAtPathOrInPrototype + 2) == *(_QWORD *)v3)
        v3 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::EmptyPath(PrimDataAtPathOrInPrototype);
      v10 = v7;
      v8 = (unint64_t *)((char *)v7 + 48);
      do
        v9 = __ldxr(v8);
      while (__stxr(v9 + 1, v8));
    }
    else
    {
      v3 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::EmptyPath(0);
      v10 = 0;
    }
    sub_20C35C4F8(a3, (uint64_t *)&v10, v3);
    if (v10)
      sub_20C35C614(v10);
  }
  else
  {
    *(_DWORD *)a3 = 1;
    *(_QWORD *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(_QWORD *)(a3 + 24) = 0;
  }
}

void sub_20C435F70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a10)
{
  if (a10)
    sub_20C35C614(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetDefaultPrim(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v3;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  sub_20C1034E8(&v9, (uint64_t *)this + 4);
  v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v9);
  v4 = sub_20C398E78(a2);
  pxrInternal__aapl__pxrReserved__::SdfLayer::SetDefaultPrim(v3, v4);
  result = v10;
  if (v10)
  {
    v6 = (unsigned int *)(v10 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C436008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::ClearDefaultPrim(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v1;
  uint64_t result;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  sub_20C1034E8(&v6, (uint64_t *)this + 4);
  v1 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v6);
  pxrInternal__aapl__pxrReserved__::SdfLayer::ClearDefaultPrim(v1);
  result = v7;
  if (v7)
  {
    v3 = (unsigned int *)(v7 + 8);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C436088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::HasDefaultPrim(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v1;
  uint64_t HasDefaultPrim;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v8;
  uint64_t v9;

  sub_20C1034E8(&v8, (uint64_t *)this + 4);
  v1 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v8);
  HasDefaultPrim = pxrInternal__aapl__pxrReserved__::SdfLayer::HasDefaultPrim(v1);
  v3 = v9;
  if (v9)
  {
    v4 = (unsigned int *)(v9 + 8);
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  return HasDefaultPrim;
}

void sub_20C436110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPathOrInPrototype(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t PrimDataAtPath;
  int v6;
  int v7;

  PrimDataAtPath = pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPath((pxrInternal__aapl__pxrReserved__::UsdStage *)this, a2);
  if (!PrimDataAtPath)
  {
    pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetPathInPrototypeForInstancePath(this[18], a2, &v6);
    if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v6))
      PrimDataAtPath = pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPath((pxrInternal__aapl__pxrReserved__::UsdStage *)this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v6);
    else
      PrimDataAtPath = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
    sub_20BFD265C(&v6);
  }
  return PrimDataAtPath;
}

void sub_20C4361B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetObjectAtPath(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  unsigned int **NameToken;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  int v12;
  int v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  int v20;
  int v21;
  uint64_t v22;

  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(a2))
    goto LABEL_19;
  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimPath(a2))
  {
    if ((pxrInternal__aapl__pxrReserved__::SdfPath::IsPropertyPath(a2) & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath(a2, &v12);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v12, (uint64_t)&v18);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
      sub_20BFD265C(&v12);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v18, v6))
      {
        NameToken = (unsigned int **)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken(a2);
        pxrInternal__aapl__pxrReserved__::UsdPrim::GetProperty((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v18, NameToken, (uint64_t)&v12);
        *(_DWORD *)a3 = v12;
        *(_QWORD *)(a3 + 8) = v14;
        v14 = 0;
        sub_20BFD38A4((_DWORD *)(a3 + 16), &v15);
        sub_20BFD38DC((_DWORD *)(a3 + 20), &v16);
        *(_QWORD *)(a3 + 24) = v17;
        v17 = 0;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
        sub_20BFD265C(&v15);
        if (v14)
          sub_20C35C614(v14);
        if ((v22 & 7) != 0)
        {
          v8 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
          do
            v9 = __ldxr(v8);
          while (__stlxr(v9 - 2, v8));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
        goto LABEL_4;
      }
      if ((v22 & 7) != 0)
      {
        v10 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
        do
          v11 = __ldxr(v10);
        while (__stlxr(v11 - 2, v10));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
      sub_20BFD265C(&v20);
      if (v19)
        sub_20C35C614(v19);
    }
LABEL_19:
    *(_DWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(_QWORD *)(a3 + 24) = 0;
    return;
  }
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(this, a2, (uint64_t)&v18);
  *(_DWORD *)a3 = v18;
  *(_QWORD *)(a3 + 8) = v19;
  v19 = 0;
  sub_20BFD38A4((_DWORD *)(a3 + 16), &v20);
  sub_20BFD38DC((_DWORD *)(a3 + 20), &v21);
  *(_QWORD *)(a3 + 24) = v22;
  v22 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
LABEL_4:
  sub_20BFD265C(&v20);
  if (v19)
    sub_20C35C614(v19);
}

void sub_20C4363F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetPropertyAtPath(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  pxrInternal__aapl__pxrReserved__::UsdStage::GetObjectAtPath(this, a2, (uint64_t)&v6);
  sub_20C3AD664((uint64_t)&v6, a3);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C43649C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C37C6E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetAttributeAtPath(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  pxrInternal__aapl__pxrReserved__::UsdStage::GetObjectAtPath(this, a2, (uint64_t)&v6);
  sub_20C3AD760((uint64_t)&v6, a3);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C43652C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C37C6E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetRelationshipAtPath(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  pxrInternal__aapl__pxrReserved__::UsdStage::GetObjectAtPath(this, a2, (uint64_t)&v6);
  sub_20C3AD860((uint64_t)&v6, a3);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C4365BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C37C6E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPath(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = 0;
  v5 = 0;
  v6 = 0;
  if (sub_20C436648((uint64_t *)this + 25, (uint64_t)&v4, (unsigned int *)a2))
    v2 = *(_QWORD *)(v6 + 24);
  else
    v2 = 0;
  v6 = 0;
  sub_20BEBF29C(&v4);
  return v2;
}

{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = 0;
  v5 = 0;
  v6 = 0;
  if (sub_20C436648((uint64_t *)this + 25, (uint64_t)&v4, (unsigned int *)a2))
    v2 = *(_QWORD *)(v6 + 24);
  else
    v2 = 0;
  v6 = 0;
  sub_20BEBF29C(&v4);
  return v2;
}

void sub_20C436630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  a11 = 0;
  sub_20BEBF29C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C436648(uint64_t *a1, uint64_t a2, unsigned int *a3)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_20BEBF2D0(a2);
    *(_QWORD *)(a2 + 16) = 0;
  }
  return sub_20C45D5EC(a1, 0, a3, 0, a2, 0, (uint64_t (*)(uint64_t, unsigned int *, uint64_t))sub_20C45D924, 0);
}

void sub_20C43670C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  a11 = 0;
  sub_20BEBF29C(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForUnload(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  const pxrInternal__aapl__pxrReserved__::SdfPath *v3;
  char *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  char v9;

  if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(a2))
  {
    v5 = "usd/stage.cpp";
    v6 = "_IsValidForUnload";
    v7 = 2254;
    v8 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForUnload(const SdfPath &) const";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempted to load/unload a relative path <%s>");
    return 0;
  }
  if (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPathInPrototype(a2, v3))
  {
    v5 = "usd/stage.cpp";
    v6 = "_IsValidForUnload";
    v7 = 2259;
    v8 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForUnload(const SdfPath &) const";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v5, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempted to load/unload a prototype path <%s>");
    return 0;
  }
  return 1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForLoad(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *i;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  pxrInternal__aapl__pxrReserved__ *v9;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned int *v11;
  unsigned int v12;
  char IsDefined;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *String;
  const char *v19;
  pxrInternal__aapl__pxrReserved__ *v20;
  uint64_t v21;
  uint64_t *v22;
  const char *v23;
  uint64_t *v24;
  const char *v25;
  unsigned int *v26;
  unsigned int v27;
  char *v29;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  pxrInternal__aapl__pxrReserved__ *v36;
  int v37;
  int v38;
  unint64_t v39;

  if (!pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForUnload(this, a2))
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2, (uint64_t)&v35);
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v35, v4) & 1) == 0)
  {
    sub_20BFD6E54(&v34, a2);
    for (i = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD6EA4((_DWORD *)&v34 + 1, (_DWORD *)a2 + 1);
          ;
          i = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD265C(&v29))
    {
      v7 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(i);
      if (v34 == *(_QWORD *)v7)
        break;
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v34, (uint64_t)&v29);
      v35 = (int)v29;
      v8 = v30;
      v30 = 0;
      v9 = v36;
      v36 = v8;
      if (v9)
        sub_20C35C614(v9);
      sub_20BFD3EBC(&v37, (int *)&v31);
      sub_20BFD3F10(&v38, (int *)&v31 + 1);
      if ((v39 & 7) != 0)
      {
        v11 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
        do
          v12 = __ldxr(v11);
        while (__stlxr(v12 - 2, v11));
      }
      v39 = v32;
      v32 = 0;
      IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v35, v10);
      if ((v32 & 7) != 0)
      {
        v14 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
        do
          v15 = __ldxr(v14);
        while (__stlxr(v15 - 2, v14));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v31 + 1);
      sub_20BFD265C(&v31);
      v7 = v30;
      if (v30)
        sub_20C35C614(v30);
      if ((IsDefined & 1) != 0)
        break;
      pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v34, &v29);
      sub_20BFD3EBC((int *)&v34, (int *)&v29);
      sub_20BFD3F10((int *)&v34 + 1, (int *)&v29 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v29 + 1);
    }
    v17 = (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v7);
    if (v34 == *v17)
    {
      v29 = "usd/stage.cpp";
      v30 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_IsValidForLoad";
      v31 = 2290;
      v32 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForLoad(const SdfPath &) const";
      v33 = 0;
      String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString(a2);
      if (*((char *)String + 23) >= 0)
        v19 = (const char *)String;
      else
        v19 = (const char *)*String;
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v29, 3, (pxrInternal__aapl__pxrReserved__ *)"Attempt to load a path <%s> which is not present in the stage", v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
      sub_20BFD265C(&v34);
      goto LABEL_37;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v34 + 1);
    sub_20BFD265C(&v34);
  }
  v20 = v36;
  if (!v36 || (v21 = *((_QWORD *)v36 + 7), (v21 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v36, v5);
    v21 = *((_QWORD *)v20 + 7);
  }
  if ((v21 & 1) != 0)
  {
    if (!sub_20C3AD308((uint64_t)&v35, v5))
    {
      v16 = 1;
      goto LABEL_38;
    }
    v29 = "usd/stage.cpp";
    v30 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_IsValidForLoad";
    v31 = 2303;
    v32 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForLoad(const SdfPath &) const";
    v33 = 0;
    v24 = pxrInternal__aapl__pxrReserved__::SdfPath::GetString(a2);
    if (*((char *)v24 + 23) >= 0)
      v25 = (const char *)v24;
    else
      v25 = (const char *)*v24;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v29, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to load instance prototype <%s>", v25);
  }
  else
  {
    v29 = "usd/stage.cpp";
    v30 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_IsValidForLoad";
    v31 = 2297;
    v32 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForLoad(const SdfPath &) const";
    v33 = 0;
    v22 = pxrInternal__aapl__pxrReserved__::SdfPath::GetString(a2);
    if (*((char *)v22 + 23) >= 0)
      v23 = (const char *)v22;
    else
      v23 = (const char *)*v22;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v29, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to load an inactive path <%s>", v23);
  }
LABEL_37:
  v16 = 0;
LABEL_38:
  if ((v39 & 7) != 0)
  {
    v26 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
    do
      v27 = __ldxr(v26);
    while (__stlxr(v27 - 2, v26));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v38);
  sub_20BFD265C(&v37);
  if (v36)
    sub_20C35C614(v36);
  return v16;
}

void sub_20C436B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C436BD0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  if (!v2 || (v3 = *(_QWORD *)(v2 + 56), (v3 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), a2);
    v3 = *(_QWORD *)(v2 + 56);
  }
  return v3 & 1;
}

unint64_t *pxrInternal__aapl__pxrReserved__::UsdStage::_DiscoverPayloads(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, int a3, uint64_t *a4, char a5, uint64_t *a6)
{
  uint64_t i;
  uint64_t j;
  unsigned int *v10;
  unsigned int v11;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  pxrInternal__aapl__pxrReserved__ *IsDefined;
  int8x16_t *UsdPrimAllPrimsPredicate;
  uint64_t v23;
  int8x16_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  tbb::interface5::internal::task_base *v28;
  unint64_t v29;
  tbb::interface5::internal::task_base *v30;
  tbb::task *v31;
  unsigned int *v32;
  unsigned int v33;
  _QWORD v34[3];
  uint64_t v35[3];
  _QWORD v36[3];
  uint64_t v37[3];
  __int128 v38;
  int v39;
  int v40;
  int v41;
  __int16 v42;
  __int128 v43;
  int v44;
  _DWORD v45[2];
  __int16 v46;
  uint64_t v47[2];
  int v48;
  int v49[9];
  char v50[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v51;
  int v52;
  int v53;
  uint64_t v54;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v55;
  char v56;
  uint64_t *v57;
  uint64_t *v58;
  unint64_t *v59;
  unint64_t *v60;
  unint64_t v61;
  _QWORD v62[2];
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v67[2];
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  __int128 v71;
  int v72;
  int v73;
  int v74;
  __int16 v75;
  __int128 v76;
  int v77;
  int v78;
  int v79;
  __int16 v80;
  __int128 v81;
  int v82;
  int v83;
  int v84;
  __int16 v85;
  __int128 v86;
  int v87;
  int v88;
  int v89;
  __int16 v90;
  __int128 v91;
  uint64_t v92;
  int v93;
  __int16 v94;
  __int128 v95;
  uint64_t v96;
  int v97;
  __int16 v98;
  uint64_t *v99;
  __int128 v100;
  int v101;
  int v102;
  int v103;
  __int16 v104;
  __int128 v105;
  int v106;
  int v107;
  int v108;
  __int16 v109;
  __int128 v110;
  int v111;
  int v112;
  int v113;
  __int16 v114;
  __int128 v115;
  int v116;
  int v117;
  int v118;
  __int16 v119;
  __int128 v120;
  int v121;
  int v122;
  int v123;
  __int16 v124;
  __int128 v125;
  int v126;
  int v127;
  int v128;
  __int16 v129;
  _QWORD v130[2];
  tbb::interface5::internal::task_base *v131;
  int8x16_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;

  v137 = *MEMORY[0x24BDAC8D0];
  for (i = 5; i != 8; ++i)
    v67[i - 1] = 0;
  v68 = 0;
  v67[1] = 0;
  v69 = &v70;
  v67[0] = sub_20C45DD40;
  for (j = 5; j != 8; ++j)
    v62[j - 1] = 0;
  v63 = 0;
  v62[1] = 0;
  v64 = &v65;
  v62[0] = sub_20C45DD40;
  v55 = a1;
  v56 = a5;
  v57 = a4;
  v58 = a6;
  v59 = &v66;
  v60 = &v61;
  if (a3)
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(a1, a2, (uint64_t)&v132);
    sub_20C4375C8((uint64_t *)&v55, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v132);
    if ((v134 & 7) != 0)
    {
      v10 = (unsigned int *)(v134 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v133 + 1);
    sub_20BFD265C(&v133);
    v12 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v132.i64[1];
    if (v132.i64[1])
LABEL_10:
      sub_20C35C614(v12);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(a1, a2, (uint64_t)v50);
    IsDefined = (pxrInternal__aapl__pxrReserved__ *)pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v50, v20);
    if ((_DWORD)IsDefined)
    {
      UsdPrimAllPrimsPredicate = (int8x16_t *)pxrInternal__aapl__pxrReserved__::GetUsdPrimAllPrimsPredicate(IsDefined);
      v23 = UsdPrimAllPrimsPredicate[1].i64[0];
      v24.i64[0] = -8193;
      v24.i64[0] = vandq_s8(*UsdPrimAllPrimsPredicate, v24).u64[0];
      v24.i64[1] = vorrq_s8(*UsdPrimAllPrimsPredicate, (int8x16_t)vdupq_n_s64(0x2000uLL)).i64[1];
      v132 = v24;
      v133 = v23;
      sub_20C37F5FC((uint64_t)v47, (uint64_t)v50, &v132);
      sub_20C37ECB8(v47, (uint64_t)&v43);
      *(_QWORD *)&v38 = v47[1];
      *((_QWORD *)&v38 + 1) = v47;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v39);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v40);
      v41 = 0;
      v42 = 0;
      v132.i32[0] = 0;
      v135 = 65539;
      v136 = 55;
      tbb::task_group_context::init((uint64_t)&v132, v25, v26, v27);
      v76 = v43;
      sub_20BFD6E54(&v77, &v44);
      sub_20BFD6EA4(&v78, v45);
      v79 = v45[1];
      v80 = v46;
      v71 = v38;
      sub_20BFD6E54(&v72, &v39);
      sub_20BFD6EA4(&v73, &v40);
      v74 = v41;
      v75 = v42;
      v86 = v76;
      sub_20BFD6E54(&v87, &v77);
      sub_20BFD6EA4(&v88, &v78);
      v89 = v79;
      v90 = v80;
      v81 = v71;
      sub_20BFD6E54(&v82, &v72);
      sub_20BFD6EA4(&v83, &v73);
      v84 = v74;
      v85 = v75;
      v99 = (uint64_t *)&v55;
      v95 = v86;
      sub_20BFD6E54(&v96, &v87);
      sub_20BFD6EA4((_DWORD *)&v96 + 1, &v88);
      v97 = v89;
      v98 = v90;
      v91 = v81;
      sub_20BFD6E54(&v92, &v82);
      sub_20BFD6EA4((_DWORD *)&v92 + 1, &v83);
      v93 = v84;
      v94 = v85;
      if (v95 != v91
        || v96 != v92
        || v97 != v93
        || v98 != v94
        || HIBYTE(v98) != HIBYTE(v94))
      {
        v105 = v95;
        sub_20BFD6E54(&v106, &v96);
        sub_20BFD6EA4(&v107, (_DWORD *)&v96 + 1);
        v108 = v97;
        v109 = v98;
        v100 = v91;
        sub_20BFD6E54(&v101, &v92);
        sub_20BFD6EA4(&v102, (_DWORD *)&v92 + 1);
        v103 = v93;
        v104 = v94;
        v115 = v105;
        sub_20BFD6E54(&v116, &v106);
        sub_20BFD6EA4(&v117, &v107);
        v118 = v108;
        v119 = v109;
        v110 = v100;
        sub_20BFD6E54(&v111, &v101);
        sub_20BFD6EA4(&v112, &v102);
        v113 = v103;
        v114 = v104;
        v130[0] = off_24C539AD0;
        *(_QWORD *)&v125 = &v132;
        v28 = (tbb::interface5::internal::task_base *)tbb::internal::allocate_root_with_context_proxy::allocate((tbb::task_group_context **)&v125, 8uLL);
        *((_BYTE *)v28 - 11) = 1;
        *(_QWORD *)v28 = &unk_24C5164A8;
        v131 = v28;
        v130[1] = &v99;
        v29 = tbb::internal::allocate_child_proxy::allocate(v28, 0x50uLL);
        v125 = v115;
        sub_20BFD6E54(&v126, &v116);
        sub_20BFD6EA4(&v127, &v117);
        v128 = v118;
        v129 = v119;
        v120 = v110;
        sub_20BFD6E54(&v121, &v111);
        sub_20BFD6EA4(&v122, &v112);
        v123 = v113;
        v124 = v114;
        *(_BYTE *)(v29 - 11) = 1;
        *(_QWORD *)v29 = off_24C539B60;
        *(_OWORD *)(v29 + 8) = v125;
        sub_20BFD6E54((_DWORD *)(v29 + 24), &v126);
        sub_20BFD6EA4((_DWORD *)(v29 + 28), &v127);
        *(_DWORD *)(v29 + 32) = v128;
        *(_WORD *)(v29 + 36) = v129;
        *(_OWORD *)(v29 + 40) = v120;
        sub_20BFD6E54((_DWORD *)(v29 + 56), &v121);
        sub_20BFD6EA4((_DWORD *)(v29 + 60), &v122);
        *(_DWORD *)(v29 + 64) = v123;
        *(_WORD *)(v29 + 68) = v124;
        *(_QWORD *)(v29 + 72) = v130;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v122);
        sub_20BFD265C(&v121);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
        sub_20BFD265C(&v126);
        v30 = v131;
        *((_QWORD *)v131 - 3) = 2;
        (*(void (**)(_QWORD, tbb::interface5::internal::task_base *, unint64_t))(**((_QWORD **)v30 - 5)
                                                                                                 + 8))(*((_QWORD *)v30 - 5), v30, v29);
        v130[0] = off_24C539AD0;
        tbb::interface5::internal::task_base::destroy(v131, v31);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v112);
        sub_20BFD265C(&v111);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v117);
        sub_20BFD265C(&v116);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v102);
        sub_20BFD265C(&v101);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v107);
        sub_20BFD265C(&v106);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v92 + 1);
      sub_20BFD265C(&v92);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v96 + 1);
      sub_20BFD265C(&v96);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v83);
      sub_20BFD265C(&v82);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v88);
      sub_20BFD265C(&v87);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v73);
      sub_20BFD265C(&v72);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v78);
      sub_20BFD265C(&v77);
      tbb::task_group_context::~task_group_context((tbb::task_group_context *)&v132);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v40);
      sub_20BFD265C(&v39);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v45);
      sub_20BFD265C(&v44);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v49);
      sub_20BFD265C(&v48);
    }
    if ((v54 & 7) != 0)
    {
      v32 = (unsigned int *)(v54 & 0xFFFFFFFFFFFFFFF8);
      do
        v33 = __ldxr(v32);
      while (__stlxr(v33 - 2, v32));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v53);
    sub_20BFD265C(&v52);
    v12 = v51;
    if (v51)
      goto LABEL_10;
  }
  if (a4)
  {
    v37[1] = 0;
    v37[2] = 0;
    v37[0] = (uint64_t)&v66;
    v13 = v68;
    __dmb(0xBu);
    v14 = tbb::internal::concurrent_vector_base_v3::internal_capacity((tbb::internal::concurrent_vector_base_v3 *)v67);
    if (v14 >= v13)
      v15 = v13;
    else
      v15 = v14;
    v36[0] = &v66;
    v36[1] = v15;
    v36[2] = 0;
    sub_20C4376B8(a4, v37, v36);
  }
  if (a6)
  {
    v35[1] = 0;
    v35[2] = 0;
    v35[0] = (uint64_t)&v61;
    v16 = v63;
    __dmb(0xBu);
    v17 = tbb::internal::concurrent_vector_base_v3::internal_capacity((tbb::internal::concurrent_vector_base_v3 *)v62);
    if (v17 >= v16)
      v18 = v16;
    else
      v18 = v17;
    v34[0] = &v61;
    v34[1] = v18;
    v34[2] = 0;
    sub_20C4376B8(a6, v35, v34);
  }
  sub_20C45DD50(&v61);
  return sub_20C45DD50(&v66);
}

void sub_20C437490(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20BDC12F4(a1);
  _Unwind_Resume(a1);
}

void sub_20C4375C8(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v4;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  char *v7;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v8;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  char *v10;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v11;
  void *v12;
  uint64_t *Path;
  uint64_t v14;
  void *v15;
  int v16;
  int v17;
  _BYTE v18[24];

  v4 = *a1;
  if (sub_20C436BD0((uint64_t)a2, a2))
  {
    if ((sub_20C3AD308((uint64_t)a2, v5) & 1) == 0)
    {
      v8 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)sub_20C3AD358((uint64_t)a2, v6, v7);
      if (pxrInternal__aapl__pxrReserved__::PcpPrimIndex::HasAnyPayloads(v8))
      {
        v11 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)sub_20C3AD358((uint64_t)a2, v9, v10);
        Path = pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(v11);
        if (!*((_BYTE *)a1 + 8)
          || !pxrInternal__aapl__pxrReserved__::PcpCache::IsPayloadIncluded(*(_QWORD *)(v4 + 128), (unsigned int *)Path))
        {
          if (a1[2])
            sub_20C45101C(a1[4], Path, v12, (uint64_t)v18);
          if (a1[3])
          {
            v14 = a1[5];
            sub_20C348EEC((uint64_t)a2, &v16);
            sub_20C451084(v14, &v16, v15, (uint64_t)v18);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
            sub_20BFD265C(&v16);
          }
        }
      }
    }
  }
}

void sub_20C4376A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  sub_20BFD1A18(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C4376B8(uint64_t *result, uint64_t *a2, _QWORD *a3)
{
  uint64_t **v6;
  _QWORD *v7;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a2[1] != a3[1] || *a2 != *a3)
  {
    v6 = (uint64_t **)result;
    v7 = result + 1;
    do
    {
      v8 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C45E7D4(a2);
      result = sub_20BFD72BC(v6, v7, v8, v8);
      v9 = a2[1];
      v10 = a2[2];
      v11 = v9 + 1;
      a2[1] = v9 + 1;
      if (v10)
      {
        v12 = v10 + 8;
        if (((v9 - 1) & v11) != 0)
          v13 = v12;
        else
          v13 = 0;
        a2[2] = v13;
      }
    }
    while (v11 != a3[1] || *a2 != *a3);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Load(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **a1@<X0>, pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v8;
  _QWORD *v9[2];
  _QWORD **v10;
  _QWORD *v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v9[1] = 0;
  v10 = v11;
  v8 = (uint64_t *)v9;
  v9[0] = 0;
  sub_20C0A7BE0(&v8, a2, a2);
  pxrInternal__aapl__pxrReserved__::UsdStage::LoadAndUnload((uint64_t)a1, &v8, &v10, a3);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(a1, a2, a4);
  sub_20BFD7C28((uint64_t)&v8, v9[0]);
  sub_20BFD7C28((uint64_t)&v10, v11[0]);
}

void sub_20C4377EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_20BFD7C28((uint64_t)&a9, a10);
  sub_20BFD7C28((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::LoadAndUnload(uint64_t a1, _QWORD *a2, _QWORD *a3, int a4)
{
  const char *v8;
  uint64_t EffectiveRuleForPath;
  uint64_t v10;
  BOOL v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v27;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  pxrInternal__aapl__pxrReserved__ *v29;
  uint64_t v30;
  int v31;
  unsigned int *v32;
  unsigned int v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t *v36;
  _BOOL4 v37;
  pxrInternal__aapl__pxrReserved__::SdfPath ***v38;
  pxrInternal__aapl__pxrReserved__::SdfPath *v39;
  _DWORD *v40;
  pxrInternal__aapl__pxrReserved__::SdfPath *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  _BOOL4 v45;
  pxrInternal__aapl__pxrReserved__::SdfPath ***v46;
  pxrInternal__aapl__pxrReserved__::SdfPath *v47;
  _DWORD *v48;
  pxrInternal__aapl__pxrReserved__::SdfPath *v49;
  uint64_t *v50;
  uint64_t *v51;
  pxrInternal__aapl__pxrReserved__::SdfPath *v52;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v53;
  uint64_t IncludedPayloads;
  pxrInternal__aapl__pxrReserved__::SdfPath *i;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  void *v60;
  void *v61;
  void *v62;
  int v63;
  void **v64;
  const char *v65;
  char *v66;
  void **v67;
  void *p_p;
  const char *v69;
  char *v70;
  pxrInternal__aapl__pxrReserved__::SdfPath *v71;
  pxrInternal__aapl__pxrReserved__::SdfPath *j;
  uint64_t v73;
  unsigned int *v74;
  unsigned int v75;
  unsigned int v76;
  _QWORD *v78;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  void *__p;
  char v86;
  void *v87;
  char v88;
  void *v89;
  uint64_t v90;
  char v91;
  void *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD **v95;
  _QWORD *v96[2];
  _QWORD *v97;
  _QWORD *v98;
  pxrInternal__aapl__pxrReserved__::SdfPath **v99;
  pxrInternal__aapl__pxrReserved__ *v100;
  int v101;
  int v102;
  uint64_t v103;
  pxrInternal__aapl__pxrReserved__::SdfPath *v104;
  pxrInternal__aapl__pxrReserved__::SdfPath *v105;
  unint64_t v106;
  uint64_t *v107;
  _QWORD *v108[2];
  uint64_t *v109;
  _QWORD *v110[2];
  uint64_t v111;
  int v112;

  v8 = *(const char **)(a1 + 1192);
  if (v8)
  {
    if (v8[23] < 0)
      v8 = *(const char **)v8;
  }
  else
  {
    v8 = "UsdStages in aggregate";
  }
  v99 = (pxrInternal__aapl__pxrReserved__::SdfPath **)v8;
  EffectiveRuleForPath = sub_20C45E830((uint64_t)&v111, "Usd", (char *)&v99);
  v10 = a3[2];
  if (a2[2])
    v11 = v10 == 0;
  else
    v11 = 1;
  if (v11)
  {
    if (v10)
    {
      v12 = (_QWORD *)*a3;
      if ((_QWORD *)*a3 == a3 + 1)
        goto LABEL_136;
      v13 = 1;
      while (1)
      {
        EffectiveRuleForPath = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::GetEffectiveRuleForPath((char **)(a1 + 1232), (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v12 + 28));
        if ((_DWORD)EffectiveRuleForPath != 2)
          goto LABEL_21;
        v14 = (_QWORD *)v12[1];
        if (v14)
        {
          do
          {
            v15 = v14;
            v14 = (_QWORD *)*v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            v15 = (_QWORD *)v12[2];
            v11 = *v15 == (_QWORD)v12;
            v12 = v15;
          }
          while (!v11);
        }
        v13 &= (_DWORD)EffectiveRuleForPath == 2;
        v12 = v15;
        if (v15 == a3 + 1)
        {
          if ((v13 & 1) != 0)
            goto LABEL_136;
          goto LABEL_21;
        }
      }
    }
    v78 = (_QWORD *)*a2;
    if ((_QWORD *)*a2 == a2 + 1)
      goto LABEL_136;
    while (1)
    {
      v79 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v78 + 28);
      if (a4 == 1)
        break;
      if (!a4)
      {
        EffectiveRuleForPath = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoadedWithAllDescendants((char **)(a1 + 1232), v79);
        goto LABEL_144;
      }
LABEL_145:
      v80 = (_QWORD *)v78[1];
      if (v80)
      {
        do
        {
          v81 = v80;
          v80 = (_QWORD *)*v80;
        }
        while (v80);
      }
      else
      {
        do
        {
          v81 = (_QWORD *)v78[2];
          v11 = *v81 == (_QWORD)v78;
          v78 = v81;
        }
        while (!v11);
      }
      v78 = v81;
      if (v81 == a2 + 1)
        goto LABEL_136;
    }
    EffectiveRuleForPath = pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoadedWithNoDescendants((char **)(a1 + 1232), v79);
LABEL_144:
    if ((EffectiveRuleForPath & 1) == 0)
      goto LABEL_21;
    goto LABEL_145;
  }
LABEL_21:
  v110[0] = 0;
  v110[1] = 0;
  v108[1] = 0;
  v109 = (uint64_t *)v110;
  v107 = (uint64_t *)v108;
  v108[0] = 0;
  v18 = (_QWORD *)*a2;
  v16 = a2 + 1;
  v17 = v18;
  if (v18 != v16)
  {
    do
    {
      EffectiveRuleForPath = pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForLoad((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v17 + 28));
      if ((EffectiveRuleForPath & 1) != 0)
        EffectiveRuleForPath = (uint64_t)sub_20C0A7BE0(&v109, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v17 + 28), (_DWORD *)v17 + 7);
      v19 = (_QWORD *)v17[1];
      if (v19)
      {
        do
        {
          v20 = v19;
          v19 = (_QWORD *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          v20 = (_QWORD *)v17[2];
          v11 = *v20 == (_QWORD)v17;
          v17 = v20;
        }
        while (!v11);
      }
      v17 = v20;
    }
    while (v20 != v16);
  }
  v23 = (_QWORD *)*a3;
  v21 = a3 + 1;
  v22 = v23;
  if (v23 != v21)
  {
    do
    {
      EffectiveRuleForPath = pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidForUnload((pxrInternal__aapl__pxrReserved__::UsdStage *)EffectiveRuleForPath, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v22 + 28));
      if ((EffectiveRuleForPath & 1) != 0)
        EffectiveRuleForPath = (uint64_t)sub_20C0A7BE0(&v107, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v22 + 28), (_DWORD *)v22 + 7);
      v24 = (_QWORD *)v22[1];
      if (v24)
      {
        do
        {
          v25 = v24;
          v24 = (_QWORD *)*v24;
        }
        while (v24);
      }
      else
      {
        do
        {
          v25 = (_QWORD *)v22[2];
          v11 = *v25 == (_QWORD)v22;
          v22 = v25;
        }
        while (!v11);
      }
      v22 = v25;
    }
    while (v25 != v21);
  }
  pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::LoadAndUnload((int *)(a1 + 1232), &v109, &v107, a4);
  v26 = v109;
  if (v109 == (uint64_t *)v110)
  {
    v104 = 0;
    v105 = 0;
    v106 = 0;
  }
  else
  {
    do
    {
      sub_20BFD6E54(&v82, (_DWORD *)v26 + 7);
      sub_20BFD6EA4((_DWORD *)&v82 + 1, (_DWORD *)v26 + 8);
      do
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)&v82, &v104);
        if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v104))
        {
          pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v104, (uint64_t)&v99);
          if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v99, v27))goto LABEL_47;
          v29 = v100;
          if (!v100 || (v30 = *((_QWORD *)v100 + 7), (v30 & 0x800) != 0))
          {
            pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v100, v28);
            v30 = *((_QWORD *)v29 + 7);
          }
          if ((v30 & 2) != 0)
          {
            if (*(void **)((char *)v26 + 28) != v82)
              sub_20C0A7BE0(&v109, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v82, &v82);
            v31 = 13;
          }
          else
          {
LABEL_47:
            sub_20C01A074((int *)&v82, &v104);
            sub_20C01A0C8((int *)&v82 + 1, (_DWORD *)&v104 + 1);
            v31 = 0;
          }
          if ((v103 & 7) != 0)
          {
            v32 = (unsigned int *)(v103 & 0xFFFFFFFFFFFFFFF8);
            do
              v33 = __ldxr(v32);
            while (__stlxr(v33 - 2, v32));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v102);
          sub_20BFD265C(&v101);
          if (v100)
            sub_20C35C614(v100);
        }
        else
        {
          v31 = 13;
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v104 + 1);
        sub_20BFD265C(&v104);
      }
      while (!v31);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v82 + 1);
      sub_20BFD265C(&v82);
      v34 = (uint64_t *)v26[1];
      if (v34)
      {
        do
        {
          v35 = v34;
          v34 = (uint64_t *)*v34;
        }
        while (v34);
      }
      else
      {
        do
        {
          v35 = (uint64_t *)v26[2];
          v11 = *v35 == (_QWORD)v26;
          v26 = v35;
        }
        while (!v11);
      }
      v26 = v35;
    }
    while (v35 != (uint64_t *)v110);
    v36 = v109;
    v104 = 0;
    v105 = 0;
    v106 = 0;
    if (v109 != (uint64_t *)v110)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetMostAncestralInstancePath(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(a1 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v36 + 28), (int *)&v99);
        v37 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v99);
        if (v37)
          v38 = &v99;
        else
          v38 = (pxrInternal__aapl__pxrReserved__::SdfPath ***)((char *)v36 + 28);
        v39 = v105;
        if ((unint64_t)v105 >= v106)
        {
          v41 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD7890((uint64_t *)&v104, v38);
        }
        else
        {
          sub_20BFD6E54(v105, v38);
          if (v37)
            v40 = (_DWORD *)&v99 + 1;
          else
            v40 = v36 + 4;
          sub_20BFD6EA4((_DWORD *)v39 + 1, v40);
          v41 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v39 + 8);
        }
        v105 = v41;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v99 + 1);
        sub_20BFD265C(&v99);
        v42 = (uint64_t *)v36[1];
        if (v42)
        {
          do
          {
            v43 = v42;
            v42 = (uint64_t *)*v42;
          }
          while (v42);
        }
        else
        {
          do
          {
            v43 = (uint64_t *)v36[2];
            v11 = *v43 == (_QWORD)v36;
            v36 = v43;
          }
          while (!v11);
        }
        v36 = v43;
      }
      while (v43 != (uint64_t *)v110);
    }
  }
  v44 = v107;
  if (v107 != (uint64_t *)v108)
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetMostAncestralInstancePath(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(a1 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v44 + 28), (int *)&v99);
      v45 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v99);
      if (v45)
        v46 = &v99;
      else
        v46 = (pxrInternal__aapl__pxrReserved__::SdfPath ***)((char *)v44 + 28);
      v47 = v105;
      if ((unint64_t)v105 >= v106)
      {
        v49 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD7890((uint64_t *)&v104, v46);
      }
      else
      {
        sub_20BFD6E54(v105, v46);
        if (v45)
          v48 = (_DWORD *)&v99 + 1;
        else
          v48 = v44 + 4;
        sub_20BFD6EA4((_DWORD *)v47 + 1, v48);
        v49 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v47 + 8);
      }
      v105 = v49;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v99 + 1);
      sub_20BFD265C(&v99);
      v50 = (uint64_t *)v44[1];
      if (v50)
      {
        do
        {
          v51 = v50;
          v50 = (uint64_t *)*v50;
        }
        while (v50);
      }
      else
      {
        do
        {
          v51 = (uint64_t *)v44[2];
          v11 = *v51 == (_QWORD)v44;
          v44 = v51;
        }
        while (!v11);
      }
      v44 = v51;
    }
    while (v51 != (uint64_t *)v108);
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::RemoveDescendentPaths((uint64_t)&v104);
  pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(&v99);
  v53 = v104;
  v52 = v105;
  while (v53 != v52)
  {
    pxrInternal__aapl__pxrReserved__::PcpChanges::DidChangeSignificantly((uint64_t **)&v99, *(const pxrInternal__aapl__pxrReserved__::PcpCache **)(a1 + 128), v53);
    v53 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v53 + 8);
  }
  IncludedPayloads = pxrInternal__aapl__pxrReserved__::PcpCache::GetIncludedPayloads(*(pxrInternal__aapl__pxrReserved__::PcpCache **)(a1 + 128));
  sub_20C45E8A0((uint64_t)&v97, *(_QWORD **)(IncludedPayloads + 16), 0);
  v96[0] = 0;
  v96[1] = 0;
  v95 = v96;
  v56 = v104;
  for (i = v105; v56 != i; v56 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v56 + 8))
  {
    v57 = sub_20C134B30(v97, &v98, v56, &v82);
    sub_20C379CA4((uint64_t *)&v95, v57, v58);
  }
  v59 = *(_QWORD **)(a1 + 128);
  v83 = 0;
  v84 = 0;
  v82 = &v83;
  pxrInternal__aapl__pxrReserved__::PcpCache::RequestPayloads(v59, &v82, &v95, (uint64_t **)&v99);
  sub_20BFD7C28((uint64_t)&v82, v83);
  if (sub_20C286E00(8) && sub_20C286E00(8))
  {
    v60 = &v82;
    sub_20C4383C8(&v109);
    if (v84 < 0)
      v60 = v82;
    v61 = &v92;
    sub_20C4383C8(&v107);
    if (v94 < 0)
      v61 = v92;
    v62 = &v89;
    sub_20C438490((pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 1232));
    if (v91 < 0)
      v62 = v89;
    sub_20C4383C8(&v95);
    v63 = v88;
    v64 = (void **)v87;
    sub_20C39C4D0(&v104);
    v67 = &v87;
    if (v63 < 0)
      v67 = v64;
    if (v86 >= 0)
      p_p = &__p;
    else
      p_p = __p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"UsdStage::LoadAndUnload()\n  finalLoadSet: %s\n  finalUnloadSet: %s\n  _loadRules: %s\n  payloadsToExclude: %s\n  recomposePaths: %s\n", v65, v66, v60, v61, v62, v67, p_p);
    if (v86 < 0)
      operator delete(__p);
    if (v88 < 0)
      operator delete(v87);
    if (v91 < 0)
      operator delete(v89);
    if (SHIBYTE(v94) < 0)
      operator delete(v92);
    if (SHIBYTE(v84) < 0)
      operator delete(v82);
  }
  if (sub_20C286E00(1))
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\nProcessing Load/Unload changes\n", v69, v70);
  v93 = 0;
  v94 = 0;
  v92 = &v93;
  sub_20C438558((pxrInternal__aapl__pxrReserved__::PcpCache **)a1, (pxrInternal__aapl__pxrReserved__::PcpChanges *)&v99, (char *)&v92);
  sub_20C3A3AEC(&v89, a1);
  v71 = v104;
  for (j = v105; v71 != j; v71 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v71 + 8))
  {
    v82 = v71;
    sub_20C45FB70((uint64_t **)&v92, v71, (uint64_t)&unk_20CAC184C, (_DWORD **)&v82);
  }
  pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)&v82, (uint64_t *)&v89, (uint64_t)&v92);
  sub_20C4387FC(&v82, (uint64_t *)&v89);
  pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::~ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)&v82);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(&v82, (uint64_t *)&v89);
  v82 = &unk_24C538A18;
  sub_20C4387FC(&v82, (uint64_t *)&v89);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)&v82);
  v73 = v90;
  if (v90)
  {
    v74 = (unsigned int *)(v90 + 8);
    do
    {
      v75 = __ldxr(v74);
      v76 = v75 - 1;
    }
    while (__stlxr(v76, v74));
    if (!v76)
      (*(void (**)(uint64_t))(*(_QWORD *)v73 + 8))(v73);
  }
  sub_20C3A2248((uint64_t)&v92, v93);
  sub_20BFD7C28((uint64_t)&v95, v96[0]);
  sub_20BFD7C28((uint64_t)&v97, v98);
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)&v99);
  v99 = &v104;
  sub_20BFD6F90((void ***)&v99);
  sub_20BFD7C28((uint64_t)&v107, v108[0]);
  sub_20BFD7C28((uint64_t)&v109, v110[0]);
LABEL_136:
  while (v112--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v111);
}

void sub_20C438118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,char a49,_QWORD *a50,uint64_t a51,char a52,_QWORD *a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;

  if (a30 < 0)
    operator delete(__p);
  if (a36 < 0)
    operator delete(a31);
  if (a42 < 0)
    operator delete(a37);
  if (a48 < 0)
    operator delete(a43);
  if (a21 < 0)
    operator delete(a16);
  sub_20BFD7C28((uint64_t)&a49, a50);
  sub_20BFD7C28((uint64_t)&a52, a53);
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)&a55);
  a55 = v55 - 176;
  sub_20BFD6F90((void ***)&a55);
  sub_20BFD7C28(v55 - 152, *(_QWORD **)(v55 - 144));
  sub_20BFD7C28(v55 - 128, *(_QWORD **)(v55 - 120));
  sub_20BEB24F4(v55 - 104);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Unload(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t *v3;
  _QWORD *v4[2];
  _QWORD **v5;
  _QWORD *v6[2];

  v6[0] = 0;
  v6[1] = 0;
  v4[1] = 0;
  v5 = v6;
  v3 = (uint64_t *)v4;
  v4[0] = 0;
  sub_20C0A7BE0(&v3, a2, a2);
  pxrInternal__aapl__pxrReserved__::UsdStage::LoadAndUnload((uint64_t)this, &v5, &v3, 0);
  sub_20BFD7C28((uint64_t)&v3, v4[0]);
  sub_20BFD7C28((uint64_t)&v5, v6[0]);
}

void sub_20C4383A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_20BFD7C28((uint64_t)&a9, a10);
  sub_20BFD7C28((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4383C8(_QWORD *a1)
{
  _QWORD v3[11];
  char v4;
  uint64_t v5;

  sub_20BDDE5E0((uint64_t)v3);
  sub_20C45E920(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(v3[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v3[1] = MEMORY[0x24BEDB848] + 16;
  if (v4 < 0)
    operator delete((void *)v3[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x212B92EB0](&v5);
}

void sub_20C43847C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C438490(pxrInternal__aapl__pxrReserved__::SdfPath **a1)
{
  _QWORD v3[11];
  char v4;
  uint64_t v5;

  sub_20BDDE5E0((uint64_t)v3);
  pxrInternal__aapl__pxrReserved__::operator<<(v3, a1);
  std::stringbuf::str();
  v3[0] = *MEMORY[0x24BEDB800];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(v3[0] - 24)) = *(_QWORD *)(MEMORY[0x24BEDB800] + 24);
  v3[1] = MEMORY[0x24BEDB848] + 16;
  if (v4 < 0)
    operator delete((void *)v3[9]);
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x212B92EB0](&v5);
}

void sub_20C438544(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDDE6CC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20C438558(pxrInternal__aapl__pxrReserved__::PcpCache **a1, pxrInternal__aapl__pxrReserved__::PcpChanges *this, char *a3)
{
  _QWORD *LayerStackChanges;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  BOOL v14;
  _QWORD *CacheChanges;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  const char *Text;
  const char *v20;
  char *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  const char *v26;
  const char *v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  const char *v31;
  char *v32;
  void *__p[2];
  char v34;
  _DWORD *v35[3];

  pxrInternal__aapl__pxrReserved__::PcpChanges::Apply(this, (uint64_t)this, a3);
  LayerStackChanges = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpChanges::GetLayerStackChanges(this);
  v9 = LayerStackChanges + 1;
  v10 = (_QWORD *)*LayerStackChanges;
  if ((_QWORD *)*LayerStackChanges != LayerStackChanges + 1)
  {
    do
    {
      v11 = (char *)sub_20C1FF3C0(v10 + 4);
      sub_20C20C368(v11, (uint64_t)v35);
      if (v35[0] != v35[1])
      {
        sub_20BDDC0E4(__p, "Recomposing stage");
        pxrInternal__aapl__pxrReserved__::UsdStage::_ReportPcpErrors((uint64_t)a1, (uint64_t *)v35, (uint64_t *)__p);
        if (v34 < 0)
          operator delete(__p[0]);
      }
      __p[0] = v35;
      sub_20BDE9EB0((void ***)__p);
      v12 = (_QWORD *)v10[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (_QWORD *)v10[2];
          v14 = *v13 == (_QWORD)v10;
          v10 = v13;
        }
        while (!v14);
      }
      v10 = v13;
    }
    while (v13 != v9);
  }
  CacheChanges = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpChanges::GetCacheChanges(this, v7, v8);
  if (CacheChanges[2])
  {
    v16 = *CacheChanges;
    v17 = *(_QWORD **)(*CacheChanges + 40);
    v18 = *CacheChanges + 48;
    if (v17 != (_QWORD *)v18)
    {
      do
      {
        v35[0] = (_DWORD *)v17 + 7;
        sub_20C45FB70((uint64_t **)a3, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v17 + 28), (uint64_t)&unk_20CAC184C, v35);
        if (sub_20C286E00(1))
        {
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v17 + 28));
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Did Change Significantly: %s\n", v20, v21, Text);
        }
        v22 = (_QWORD *)v17[1];
        if (v22)
        {
          do
          {
            v23 = v22;
            v22 = (_QWORD *)*v22;
          }
          while (v22);
        }
        else
        {
          do
          {
            v23 = (_QWORD *)v17[2];
            v14 = *v23 == (_QWORD)v17;
            v17 = v23;
          }
          while (!v14);
        }
        v17 = v23;
      }
      while (v23 != (_QWORD *)v18);
    }
    v24 = *(_QWORD **)(v16 + 88);
    v25 = (_QWORD *)(v16 + 96);
    if (v24 != v25)
    {
      do
      {
        v35[0] = (_DWORD *)v24 + 7;
        sub_20C45FB70((uint64_t **)a3, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v24 + 28), (uint64_t)&unk_20CAC184C, v35);
        if (sub_20C286E00(1))
        {
          v26 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v24 + 28));
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Did Change Prim: %s\n", v27, v28, v26);
        }
        v29 = (_QWORD *)v24[1];
        if (v29)
        {
          do
          {
            v30 = v29;
            v29 = (_QWORD *)*v29;
          }
          while (v29);
        }
        else
        {
          do
          {
            v30 = (_QWORD *)v24[2];
            v14 = *v30 == (_QWORD)v24;
            v24 = v30;
          }
          while (!v14);
        }
        v24 = v30;
      }
      while (v30 != v25);
    }
  }
  else if (sub_20C286E00(1))
  {
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"No cache changes\n", v31, v32);
  }
  sub_20C45E9D4((uint64_t)a1, (uint64_t)a3);
  pxrInternal__aapl__pxrReserved__::UsdStage::_RegisterPerLayerNotices(a1);
}

void sub_20C4387C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  __p = &a17;
  sub_20BDE9EB0((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4387FC(_QWORD *a1, uint64_t *a2)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  const std::type_info *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;

  v4 = sub_20C369024(a2);
  if (v5 & 1 | (unint64_t)v4)
  {
    v6 = (const std::type_info *)(sub_20C348E08(a2) + 16);
    v8 = a2[1];
    v7 = a2 + 1;
    if (v8)
    {
      v9 = sub_20BEB47BC(v7);
      v10 = (char *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    }
    else
    {
      v10 = 0;
    }
  }
  else
  {
    v6 = 0;
    v10 = 0;
    v11 = (void *)MEMORY[0x24BEDB7C8];
  }
  return pxrInternal__aapl__pxrReserved__::TfNotice::_Send(a1, v6, v10, (uint64_t)v11);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::GetLoadSet@<X0>(pxrInternal__aapl__pxrReserved__::PcpCache **this@<X0>, uint64_t a2@<X8>)
{
  _DWORD *result;
  _QWORD *i;
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int v7;
  int v8;

  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)a2 = a2 + 8;
  result = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpCache::GetIncludedPayloads(this[16]);
  for (i = (_QWORD *)*((_QWORD *)result + 2); i; i = (_QWORD *)*i)
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimPathUsingPrimIndexAtPath(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2), &v7);
    if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v7))
      v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)&v7;
    else
      v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(i + 2);
    sub_20C0A7BE0((uint64_t **)a2, v6, v6);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
    result = sub_20BFD265C(&v7);
  }
  return result;
}

void sub_20C438934(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD7C28(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimPathUsingPrimIndexAtPath(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, int *a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  int IsDefined;
  unsigned int *v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  int v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::SdfPath **v17;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(a3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(a3 + 1);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(this, a2, (uint64_t)&v12);
  IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v12, v6);
  if ((v16 & 7) != 0)
  {
    v8 = (unsigned int *)(v16 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stlxr(v9 - 2, v8));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v15);
  sub_20BFD265C(&v14);
  if (v13)
    sub_20C35C614(v13);
  if (IsDefined)
  {
    sub_20C01A074(a3, a2);
    sub_20C01A0C8(a3 + 1, (_DWORD *)a2 + 1);
  }
  else if (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetNumPrototypes(this[18]))
  {
    pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetPrimsInPrototypesUsingPrimIndexPath(this[18], a2, (uint64_t *)&v12);
    v10 = v12;
    v11 = v13;
    while (v10 != v11)
    {
      if ((pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath(v10) & 1) == 0)
      {
        sub_20C01A074(a3, v10);
        sub_20C01A0C8(a3 + 1, (_DWORD *)v10 + 1);
        break;
      }
      v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
    }
    v17 = &v12;
    sub_20BFD6F90((void ***)&v17);
  }
}

void sub_20C438AA0(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::FindLoadable@<X0>(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t *a3@<X8>)
{
  int v7;
  int v8;

  sub_20BFD6E54(&v7, a2);
  sub_20BFD6EA4(&v8, (_DWORD *)a2 + 1);
  a3[2] = 0;
  a3[1] = 0;
  *a3 = (uint64_t)(a3 + 1);
  pxrInternal__aapl__pxrReserved__::UsdStage::_DiscoverPayloads(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v7, 0, 0, 0, a3);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  return sub_20BFD265C(&v7);
}

void sub_20C438B78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  sub_20BFD7C28(v2, *(_QWORD **)(v2 + 8));
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::SetLoadRules(uint64_t a1, _DWORD **a2)
{
  uint64_t v3;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  const pxrInternal__aapl__pxrReserved__::PcpCache *v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  _DWORD *v12[6];
  uint64_t *v13;
  _QWORD *v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17[15];

  v3 = a1 + 1232;
  if ((_DWORD **)v3 != a2)
    sub_20C33E154(v3, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (a2[1] - *a2));
  v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(v17);
  v5 = *(const pxrInternal__aapl__pxrReserved__::PcpCache **)(a1 + 128);
  v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v4);
  pxrInternal__aapl__pxrReserved__::PcpChanges::DidChangeSignificantly(v17, v5, v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_Recompose((pxrInternal__aapl__pxrReserved__::PcpCache **)a1, (const pxrInternal__aapl__pxrReserved__::PcpChanges *)v17);
  v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C3A3AEC(&v15, a1);
  v14[0] = 0;
  v14[1] = 0;
  v13 = (uint64_t *)v14;
  v12[0] = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v7);
  sub_20C45FB70(&v13, (pxrInternal__aapl__pxrReserved__::SdfPath *)v12[0], (uint64_t)&unk_20CAC184C, v12);
  pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v12, &v15, (uint64_t)&v13);
  sub_20C4387FC(v12, &v15);
  pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::~ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v12);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(v12, &v15);
  v12[0] = &unk_24C538A18;
  sub_20C4387FC(v12, &v15);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)v12);
  sub_20C3A2248((uint64_t)&v13, v14[0]);
  v8 = v16;
  if (v16)
  {
    v9 = (unsigned int *)(v16 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)v17);
}

void sub_20C438CF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD *);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)va);
  sub_20C3A2248((uint64_t)va1, v16);
  v3 = v19;
  if (v19)
  {
    v4 = (unsigned int *)(v19 + 8);
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)va2);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_Recompose(pxrInternal__aapl__pxrReserved__::PcpCache **this, const pxrInternal__aapl__pxrReserved__::PcpChanges *a2)
{
  _QWORD **v2;
  _QWORD *v3[2];

  v3[0] = 0;
  v3[1] = 0;
  v2 = v3;
  sub_20C438558(this, a2, (char *)&v2);
  sub_20C3A2248((uint64_t)&v2, v3[0]);
}

void sub_20C438DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _QWORD *a11)
{
  sub_20C3A2248((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::SetPopulationMask(uint64_t a1, _DWORD **a2)
{
  uint64_t v3;
  pxrInternal__aapl__pxrReserved__::SdfPath *v4;
  const pxrInternal__aapl__pxrReserved__::PcpCache *v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  _DWORD *v12[6];
  uint64_t *v13;
  _QWORD *v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17[15];

  v3 = a1 + 1208;
  if ((_DWORD **)v3 != a2)
    sub_20C0E29B0(v3, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 3);
  v4 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(v17);
  v5 = *(const pxrInternal__aapl__pxrReserved__::PcpCache **)(a1 + 128);
  v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v4);
  pxrInternal__aapl__pxrReserved__::PcpChanges::DidChangeSignificantly(v17, v5, v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_Recompose((pxrInternal__aapl__pxrReserved__::PcpCache **)a1, (const pxrInternal__aapl__pxrReserved__::PcpChanges *)v17);
  v7 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C3A3AEC(&v15, a1);
  v14[0] = 0;
  v14[1] = 0;
  v13 = (uint64_t *)v14;
  v12[0] = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v7);
  sub_20C45FB70(&v13, (pxrInternal__aapl__pxrReserved__::SdfPath *)v12[0], (uint64_t)&unk_20CAC184C, v12);
  pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v12, &v15, (uint64_t)&v13);
  sub_20C4387FC(v12, &v15);
  pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::~ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v12);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(v12, &v15);
  v12[0] = &unk_24C538A18;
  sub_20C4387FC(v12, &v15);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)v12);
  sub_20C3A2248((uint64_t)&v13, v14[0]);
  v8 = v16;
  if (v16)
  {
    v9 = (unsigned int *)(v16 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)v17);
}

void sub_20C438F20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v14 = va_arg(va2, _QWORD);
  v16 = va_arg(va2, _QWORD *);
  v17 = va_arg(va2, _QWORD);
  v18 = va_arg(va2, _QWORD);
  v19 = va_arg(va2, _QWORD);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)va);
  sub_20C3A2248((uint64_t)va1, v16);
  v3 = v19;
  if (v19)
  {
    v4 = (unsigned int *)(v19 + 8);
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)va2);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::ExpandPopulationMask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  char v8;
  int *v9;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  int *v11;
  int *v12;
  int *v13;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  pxrInternal__aapl__pxrReserved__::SdfPath *v19;
  int *v20;
  pxrInternal__aapl__pxrReserved__::SdfPath *v21;
  int *v22;
  char v23;
  unsigned int *v24;
  unsigned int v25;
  void **v28[3];
  void ***v29;
  int *v30;
  void **v31;
  int *v32;
  uint64_t v33;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  uint64_t v35;
  uint64_t v36;
  void ***v37;

  v33 = 0;
  v34 = 0;
  v35 = 0;
  v6 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFD6D38(&v33, *(_DWORD **)(a1 + 1208), *(_DWORD **)(a1 + 1216), (uint64_t)(*(_QWORD *)(a1 + 1216) - *(_QWORD *)(a1 + 1208)) >> 3);
  v7 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v6);
  v8 = pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::IncludesSubtree((pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)&v33, v7);
  v31 = (void **)&v33;
  sub_20BFD6F90(&v31);
  if ((v8 & 1) == 0)
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (uint64_t)&v33);
      pxrInternal__aapl__pxrReserved__::UsdPrim::FindAllRelationshipTargetPaths(&v31, &v33, a2, a3, 0);
      pxrInternal__aapl__pxrReserved__::UsdPrim::FindAllAttributeConnectionPaths(&v29, &v33, a2, a4, 0);
      v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v31;
      v9 = v32;
      if (v31 == (void **)v32)
        goto LABEL_14;
      v11 = v32;
      v12 = (int *)v31 + 3;
      while (!pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes((pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 1208), v10))
      {
        v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v10 + 8);
        v12 += 2;
        if (v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)v9)
          goto LABEL_15;
      }
      if (v10 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)v9)
        goto LABEL_15;
      if ((int *)((char *)v10 + 8) == v9)
      {
LABEL_14:
        v11 = (int *)v10;
      }
      else
      {
        v11 = (int *)v10;
        do
        {
          if (!pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes((pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 1208), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v12 - 1)))
          {
            sub_20BFD3EBC(v11, v12 - 1);
            sub_20BFD3F10(v11 + 1, v12);
            v11 += 2;
          }
          v13 = v12 + 1;
          v12 += 2;
        }
        while (v13 != v9);
      }
LABEL_15:
      sub_20C11D784((uint64_t)&v31, v11, v32);
      v14 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v29;
      v15 = v30;
      if (v29 == (void ***)v30)
        goto LABEL_27;
      v16 = v30;
      v17 = (int *)v29 + 3;
      while (!pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes((pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 1208), v14))
      {
        v14 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v14 + 8);
        v17 += 2;
        if (v14 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)v15)
          goto LABEL_28;
      }
      if (v14 == (const pxrInternal__aapl__pxrReserved__::SdfPath *)v15)
        goto LABEL_28;
      if ((int *)((char *)v14 + 8) == v15)
      {
LABEL_27:
        v16 = (int *)v14;
      }
      else
      {
        v16 = (int *)v14;
        do
        {
          if (!pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes((pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 1208), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v17 - 1)))
          {
            sub_20BFD3EBC(v16, v17 - 1);
            sub_20BFD3F10(v16 + 1, v17);
            v16 += 2;
          }
          v18 = v17 + 1;
          v17 += 2;
        }
        while (v18 != v15);
      }
LABEL_28:
      sub_20C11D784((uint64_t)&v29, v16, v30);
      if (v31 == (void **)v32 && v29 == (void ***)v30)
      {
        v23 = 0;
      }
      else
      {
        memset(v28, 0, sizeof(v28));
        sub_20BFD6D38(v28, *(_DWORD **)(a1 + 1208), *(_DWORD **)(a1 + 1216), (uint64_t)(*(_QWORD *)(a1 + 1216) - *(_QWORD *)(a1 + 1208)) >> 3);
        v19 = (pxrInternal__aapl__pxrReserved__::SdfPath *)v31;
        v20 = v32;
        while (v19 != (pxrInternal__aapl__pxrReserved__::SdfPath *)v20)
        {
          pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath(v19, &v37);
          sub_20C340A98((pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)v28, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v37);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v37 + 1);
          sub_20BFD265C(&v37);
          v19 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v19 + 8);
        }
        v21 = (pxrInternal__aapl__pxrReserved__::SdfPath *)v29;
        v22 = v30;
        while (v21 != (pxrInternal__aapl__pxrReserved__::SdfPath *)v22)
        {
          pxrInternal__aapl__pxrReserved__::SdfPath::GetPrimPath(v21, &v37);
          sub_20C340A98((pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)v28, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v37);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v37 + 1);
          sub_20BFD265C(&v37);
          v21 = (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v21 + 8);
        }
        pxrInternal__aapl__pxrReserved__::UsdStage::SetPopulationMask(a1, (_DWORD **)v28);
        v37 = v28;
        sub_20BFD6F90((void ***)&v37);
        v23 = 1;
      }
      v28[0] = (void **)&v29;
      sub_20BFD6F90(v28);
      v29 = &v31;
      sub_20BFD6F90((void ***)&v29);
      if ((v36 & 7) != 0)
      {
        v24 = (unsigned int *)(v36 & 0xFFFFFFFFFFFFFFF8);
        do
          v25 = __ldxr(v24);
        while (__stlxr(v25 - 2, v24));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v35 + 1);
      sub_20BFD265C(&v35);
      if (v34)
        sub_20C35C614(v34);
    }
    while ((v23 & 1) != 0);
  }
}

void sub_20C439318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_20BFD6F90((void ***)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::ExpandPopulationMask(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2, uint64_t a3)
{
  uint64_t UsdPrimDefaultPredicate;

  UsdPrimDefaultPredicate = pxrInternal__aapl__pxrReserved__::GetUsdPrimDefaultPredicate(a1);
  pxrInternal__aapl__pxrReserved__::UsdStage::ExpandPopulationMask((uint64_t)a1, UsdPrimDefaultPredicate, a2, a3);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetPrototypes(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  int *v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  const char *Text;
  const char *v14;
  char *v15;
  char *v16;
  void **v17[4];
  char v18;
  _BYTE v19[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  int v21;
  int v22;
  uint64_t v23;
  int *v24;
  int *v25;

  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetAllPrototypes(this[18], (uint64_t *)&v24);
  v4 = 126 - 2 * __clz(((char *)v25 - (char *)v24) >> 3);
  if (v25 == v24)
    v5 = 0;
  else
    v5 = v4;
  sub_20C028540((uint64_t)v24, v25, (uint64_t)v17, v5, 1);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v24;
  v7 = v25;
  if (v24 != v25)
  {
    do
    {
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(this, v6, (uint64_t)v19);
      if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v19, v8) & 1) != 0|| (v17[0] = (void **)"usd/stage.cpp", v17[1] = (void **)"GetPrototypes", v17[2] = (void **)2690, v17[3] = (void **)"vector<UsdPrim> pxrInternal__aapl__pxrReserved__::UsdStage::GetPrototypes() const", v18 = 0, Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v6), v16 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Failed to find prim at prototype path <%s>.\n", v14, v15, Text), (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v17, "p", v16) & 1) != 0))
      {
        v9 = a2[1];
        if (v9 >= a2[2])
        {
          v10 = sub_20C45FD60(a2, (uint64_t)v19);
        }
        else
        {
          sub_20C37F2BC((uint64_t)(a2 + 2), a2[1], (uint64_t)v19);
          v10 = v9 + 32;
          a2[1] = v9 + 32;
        }
        a2[1] = v10;
      }
      if ((v23 & 7) != 0)
      {
        v11 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v12 = __ldxr(v11);
        while (__stlxr(v12 - 2, v11));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
      sub_20BFD265C(&v21);
      if (v20)
        sub_20C35C614(v20);
      v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v6 + 8);
    }
    while (v6 != (const pxrInternal__aapl__pxrReserved__::SdfPath *)v7);
  }
  v17[0] = (void **)&v24;
  sub_20BFD6F90(v17);
}

void sub_20C4395C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  sub_20C35C2E0((uint64_t)&a16);
  sub_20C45FC78(&a16);
  a16 = (void **)&a20;
  sub_20BFD6F90(&a16);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetInstancesForPrototype(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t *a3@<X8>)
{
  int v6;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *v7;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v8;
  const pxrInternal__aapl__pxrReserved__::SdfPath *i;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *PrimDataAtPathOrInPrototype;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unsigned int *v14;
  unsigned int v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  const pxrInternal__aapl__pxrReserved__::SdfPath **v17;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v22;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v23;

  v6 = sub_20C3AD308((uint64_t)a2, a2);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  if (v6)
  {
    v7 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *)*((_QWORD *)this + 18);
    sub_20C348EEC((uint64_t)a2, (int *)&v17);
    pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetInstancePrimIndexesForPrototype(v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v17, &v22);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v17 + 1);
    sub_20BFD265C(&v17);
    sub_20C4397E4(a3, (v23 - v22) >> 3);
    v8 = v22;
    for (i = v23; v8 != i; v8 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v8 + 8))
    {
      PrimDataAtPathOrInPrototype = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPathOrInPrototype((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, v8);
      v16 = PrimDataAtPathOrInPrototype;
      if (PrimDataAtPathOrInPrototype)
      {
        v11 = (unint64_t *)((char *)PrimDataAtPathOrInPrototype + 48);
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      v13 = pxrInternal__aapl__pxrReserved__::SdfPath::EmptyPath(PrimDataAtPathOrInPrototype);
      sub_20C35C4F8((uint64_t)&v17, (uint64_t *)&v16, v13);
      sub_20C439874(a3, (uint64_t)&v17);
      if ((v21 & 7) != 0)
      {
        v14 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v15 = __ldxr(v14);
        while (__stlxr(v15 - 2, v14));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
      if (v18)
        sub_20C35C614(v18);
      if (v16)
        sub_20C35C614(v16);
    }
    v17 = &v22;
    sub_20BFD6F90((void ***)&v17);
  }
}

void sub_20C439774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  a10 = (void **)&a14;
  sub_20BFD6F90(&a10);
  sub_20C45FC78(&a10);
  _Unwind_Resume(a1);
}

void **sub_20C4397E4(uint64_t *a1, unint64_t a2)
{
  void **result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7[5];

  v4 = a1[2];
  result = (void **)(a1 + 2);
  if (a2 > (v4 - *a1) >> 5)
  {
    if (a2 >> 59)
      sub_20BDDF694();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_20BED2F10((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 32 * v6;
    sub_20C45FE4C(a1, v7);
    return sub_20C45FFF8(v7);
  }
  return result;
}

void sub_20C439860(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45FFF8((void **)va);
  _Unwind_Resume(a1);
}

void *sub_20C439874(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  void *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t *v18;

  v5 = (uint64_t)(a1 + 2);
  v4 = a1[2];
  v6 = a1[1];
  if (v6 >= v4)
  {
    v9 = (uint64_t)(v6 - *a1) >> 5;
    if ((unint64_t)(v9 + 1) >> 59)
      sub_20BDDF694();
    v10 = v4 - *a1;
    v11 = v10 >> 4;
    if (v10 >> 4 <= (unint64_t)(v9 + 1))
      v11 = v9 + 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0)
      v12 = 0x7FFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    v18 = a1 + 2;
    if (v12)
      v13 = (char *)sub_20BED2F10((uint64_t)(a1 + 2), v12);
    else
      v13 = 0;
    v14 = v13;
    v15 = &v13[32 * v9];
    v17 = &v13[32 * v12];
    sub_20C3AE790(v5, (uint64_t)v15, a2);
    v16 = v15 + 32;
    sub_20C45FE4C(a1, &v14);
    v8 = a1[1];
    result = sub_20C45FFF8(&v14);
  }
  else
  {
    result = sub_20C3AE790((uint64_t)(a1 + 2), v6, a2);
    v8 = v6 + 32;
    a1[1] = v6 + 32;
  }
  a1[1] = v8;
  return result;
}

void sub_20C439970(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45FFF8((void **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrototypeForInstance(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t PrimDataAtPath;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *v4;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t *Path;
  int v8;
  int v9;

  if ((*((_BYTE *)a2 + 57) & 1) == 0)
    return 0;
  v4 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *)*((_QWORD *)this + 18);
  PrimIndex = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(a2);
  Path = pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(PrimIndex);
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetPrototypeForInstanceablePrimIndexPath(v4, (const pxrInternal__aapl__pxrReserved__::SdfPath *)Path, &v8);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v8))
    PrimDataAtPath = pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPath(this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v8);
  else
    PrimDataAtPath = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  return PrimDataAtPath;
}

void sub_20C439A14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(pxrInternal__aapl__pxrReserved__::UsdStage *a1, unint64_t a2, pxrInternal__aapl__pxrReserved__::SdfPath **a3, int a4)
{
  uint64_t v5;
  const char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *SourcePrimIndex;
  uint64_t *Path;
  const char *v12;
  char *v13;
  uint64_t *v14;
  const pxrInternal__aapl__pxrReserved__::TfToken *v15;
  const pxrInternal__aapl__pxrReserved__::TfToken *v16;
  _BOOL4 v17;
  const pxrInternal__aapl__pxrReserved__::TfToken *v18;
  _BOOL4 v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t *v22;
  const pxrInternal__aapl__pxrReserved__::TfToken *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  const char *v31;
  const char *v32;
  char *v33;
  uint64_t **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t **v37;
  uint64_t v38;
  uint64_t v39;
  pxrInternal__aapl__pxrReserved__::SdfPath *v40;
  char *v41;
  char v42;
  const char *v43;
  const char *v44;
  const char *v45;
  char *v46;
  const char *v47;
  const char *v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  const char *v52;
  const char *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  BOOL v60;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v61;
  const char *v62;
  const char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **v75;
  uint64_t **v76;
  const pxrInternal__aapl__pxrReserved__::TfToken **v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  const void *v87;
  const void *v88;
  int v89;
  unint64_t v90;
  const void *v91;
  const void *v92;
  int v93;
  size_t v94;
  const void *v95;
  size_t v96;
  const void *v97;
  size_t v98;
  int v99;
  _BOOL4 v100;
  const char *v101;
  const char *v102;
  char *v103;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v104;
  const pxrInternal__aapl__pxrReserved__::TfToken **v105;
  const pxrInternal__aapl__pxrReserved__::TfToken *v106;
  const char *v107;
  const char *v108;
  char *v109;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v110;
  const pxrInternal__aapl__pxrReserved__::TfToken *v111;
  uint64_t *v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **v119;
  uint64_t *v120;
  char *v121;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **v122;
  const pxrInternal__aapl__pxrReserved__::TfToken *v123;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *NameToken;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  BOOL v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  const void *v134;
  const void *v135;
  int v136;
  unint64_t v137;
  const void *v138;
  const void *v139;
  int v140;
  size_t v141;
  const void *v142;
  size_t v143;
  const void *v144;
  size_t v145;
  int v146;
  _BOOL4 v147;
  char *v148;
  const char *v149;
  const char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  const pxrInternal__aapl__pxrReserved__::TfToken *v154;
  uint64_t *v155;
  uint64_t *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  uint64_t *v162;
  uint64_t *v163;
  char *v164;
  char *v165;
  uint64_t *v166;
  uint64_t *v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t i;
  unint64_t v177;
  const char *v178;
  const char *v179;
  char *v180;
  int v181;
  const char *Text;
  const char *v183;
  unint64_t v184;
  unint64_t v185;
  pxrInternal__aapl__pxrReserved__::SdfPath *v186;
  uint64_t *v190;
  uint64_t *v191;
  char *v192;
  void *__p;
  char *v194;
  void *v195;
  uint64_t **v196;
  void **v197;
  const char *v198;
  uint64_t v199;
  const char *v200;
  char v201;
  uint64_t *v202;
  uint64_t *v203;
  uint64_t v204;

  v5 = *(_QWORD *)(a2 + 56);
  if ((v5 & 1) == 0)
  {
    if (sub_20C286E00(3))
    {
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Inactive prim <%s>\n", v6, v7, Text);
    }
LABEL_11:
    pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyDescendents(a1, (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    return;
  }
  if ((v5 & 0x100) != 0)
  {
    if (sub_20C286E00(3))
    {
      v183 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Instance prim <%s>\n", v12, v13, v183);
    }
    goto LABEL_11;
  }
  v202 = 0;
  v203 = 0;
  v204 = 0;
  if ((pxrInternal__aapl__pxrReserved__::Usd_PrimData::_ComposePrimChildNames((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, &v202) & 1) == 0)
  {
    v197 = (void **)"usd/stage.cpp";
    v198 = "_ComposeChildren";
    v199 = 2870;
    v200 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopulationMask *, BOOL)";
    v201 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v197, "prim->_ComposePrimChildNames(&nameOrder)", 0) & 1) == 0)goto LABEL_269;
  }
  if (a3
    && (SourcePrimIndex = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetSourcePrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v8, v9), Path = pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(SourcePrimIndex), (pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::IncludesSubtree((pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)Path) & 1) == 0))
  {
    v15 = (const pxrInternal__aapl__pxrReserved__::TfToken *)v202;
    v14 = v203;
    v16 = (const pxrInternal__aapl__pxrReserved__::TfToken *)v203;
    if (v202 != v203)
    {
      while (1)
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::AppendChild((pxrInternal__aapl__pxrReserved__::SdfPath *)Path, v15, &v197);
        v17 = pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes(a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v197);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v197 + 1);
        sub_20BFD265C(&v197);
        if (!v17)
          break;
        v15 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v15 + 8);
        if (v15 == (const pxrInternal__aapl__pxrReserved__::TfToken *)v14)
          goto LABEL_29;
      }
    }
    if (v15 != (const pxrInternal__aapl__pxrReserved__::TfToken *)v14)
    {
      v18 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v15 + 8);
      if ((uint64_t *)((char *)v15 + 8) == v14)
      {
        v16 = v15;
      }
      else
      {
        v16 = v15;
        do
        {
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendChild((pxrInternal__aapl__pxrReserved__::SdfPath *)Path, v18, &v197);
          v19 = pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::Includes(a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v197);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v197 + 1);
          sub_20BFD265C(&v197);
          if (v19)
          {
            if (v18 != v16)
            {
              if ((*(_QWORD *)v16 & 7) != 0)
              {
                v20 = (unsigned int *)(*(_QWORD *)v16 & 0xFFFFFFFFFFFFFFF8);
                do
                  v21 = __ldxr(v20);
                while (__stlxr(v21 - 2, v20));
              }
              *(_QWORD *)v16 = *(_QWORD *)v18;
              *(_QWORD *)v18 = 0;
            }
            v16 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v16 + 8);
          }
          v18 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v18 + 8);
        }
        while (v18 != (const pxrInternal__aapl__pxrReserved__::TfToken *)v14);
      }
    }
LABEL_29:
    sub_20C117D14((uint64_t)&v202, v16, v203);
  }
  else
  {
    a3 = 0;
  }
  v23 = (const pxrInternal__aapl__pxrReserved__::TfToken *)v202;
  v22 = v203;
  if (v202 == v203)
  {
    if (sub_20C286E00(3))
    {
      v44 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Children empty <%s>\n", v45, v46, v44);
    }
    pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyDescendents(a1, (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
  }
  else
  {
    v24 = *(_QWORD *)(a2 + 32);
    if (v24)
    {
      v25 = *(_QWORD *)(a2 + 32);
      while ((*(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(v25 + 16)) & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v23 & 0xFFFFFFFFFFFFFFF8))
      {
        v26 = *(_QWORD *)(v25 + 40);
        v25 = v26 & 0xFFFFFFFFFFFFFFF8;
        v23 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v23 + 8);
        if ((v26 & 7) != 0)
          v27 = 0;
        else
          v27 = v26 & 0xFFFFFFFFFFFFFFF8;
        if (v27)
          v28 = v23 == (const pxrInternal__aapl__pxrReserved__::TfToken *)v22;
        else
          v28 = 1;
        if (v28)
        {
          v25 = v27;
          break;
        }
      }
      if (v24 != v25 && a4)
      {
        v29 = v24;
        do
        {
          pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildSubtree((uint64_t)a1, v29, (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)a3);
          v30 = *(_QWORD *)(v29 + 40);
          if ((v30 & 7) != 0)
            v29 = 0;
          else
            v29 = v30 & 0xFFFFFFFFFFFFFFF8;
        }
        while (v29 != v25);
      }
      if (v25)
      {
        if (v23 == (const pxrInternal__aapl__pxrReserved__::TfToken *)v22)
        {
          v60 = sub_20C286E00(3);
          v61 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v25;
          if (v60)
          {
            v62 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
            pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Children removed from end <%s>\n", v63, v64, v62);
            v61 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v25;
          }
          while (v61)
          {
            v65 = *((_QWORD *)v61 + 5);
            if ((v65 & 7) != 0)
              v66 = 0;
            else
              v66 = v65 & 0xFFFFFFFFFFFFFFF8;
            pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(a1, v61);
            v61 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v66;
          }
          if (v25 == v24)
          {
            *(_QWORD *)(a2 + 32) = 0;
          }
          else
          {
            v67 = *(_QWORD *)(v24 + 40);
            if ((v67 & 7) != 0)
              v68 = 0;
            else
              v68 = v67 & 0xFFFFFFFFFFFFFFF8;
            while (v68 != v25)
            {
              v24 = v68;
              v69 = *(_QWORD *)(v68 + 40);
              if ((v69 & 7) != 0)
                v68 = 0;
              else
                v68 = v69 & 0xFFFFFFFFFFFFFFF8;
            }
            *(_QWORD *)(v24 + 40) = a2 | 1;
          }
          goto LABEL_269;
        }
        if (sub_20C286E00(3))
        {
          v31 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Require general children recomposition <%s>\n", v32, v33, v31);
        }
        sub_20C46017C(&v195, ((char *)v22 - (char *)v23) >> 3);
        v34 = v196;
        if (v196 == v195)
        {
          v37 = v196;
        }
        else
        {
          v35 = 0;
          v36 = ((char *)v196 - (_BYTE *)v195) >> 3;
          do
          {
            *((_QWORD *)v195 + v35++) = v23;
            v23 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v23 + 8);
          }
          while (v36 != v35);
          v37 = (uint64_t **)v195;
          v34 = v196;
        }
        v70 = 126 - 2 * __clz(v34 - v37);
        if (v34 == v37)
          v71 = 0;
        else
          v71 = v70;
        sub_20C4601F0((uint64_t)v37, v34, v71, 1);
        sub_20C460D78((uint64_t)&__p, v25, 0);
        v185 = v24;
        v72 = 126 - 2 * __clz((v194 - (_BYTE *)__p) >> 3);
        if (v194 == __p)
          v73 = 0;
        else
          v73 = v72;
        sub_20C460E58((uint64_t)__p, (uint64_t *)v194, v73, 1);
        v75 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)__p;
        v74 = v194;
        v77 = (const pxrInternal__aapl__pxrReserved__::TfToken **)v195;
        v76 = v196;
        v190 = 0;
        v191 = 0;
        v192 = 0;
        sub_20BEE6850((void **)&v190, ((char *)v196 - (_BYTE *)v195) >> 3);
        if (v77 != (const pxrInternal__aapl__pxrReserved__::TfToken **)v76
          || v75 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74)
        {
          while (1)
          {
            while (v75 == (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74)
            {
              v105 = v77;
              v75 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74;
LABEL_182:
              v77 = (const pxrInternal__aapl__pxrReserved__::TfToken **)v76;
              if (v105 != (const pxrInternal__aapl__pxrReserved__::TfToken **)v76)
              {
                while (1)
                {
                  if (v75 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74)
                  {
                    v123 = *v105;
                    NameToken = pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)*v75 + 16));
                    v125 = *(_QWORD *)v123;
                    v126 = *(_QWORD *)NameToken;
                    if (*(_QWORD *)v123)
                      v127 = v126 == 0;
                    else
                      v127 = 1;
                    if (v127)
                    {
                      if (v125)
                        v128 = 1;
                      else
                        v128 = v126 == 0;
                      if (v128)
                        goto LABEL_238;
                    }
                    else
                    {
                      if (v125 == v126)
                        goto LABEL_238;
                      v129 = v125 & 0xFFFFFFFFFFFFFFF8;
                      v130 = v126 & 0xFFFFFFFFFFFFFFF8;
                      v131 = *(_QWORD *)(v129 + 8);
                      v132 = *(_QWORD *)(v130 + 8);
                      if (v131 >= v132)
                      {
                        if (v131 != v132)
                          goto LABEL_238;
                        v135 = *(const void **)(v130 + 16);
                        v133 = v130 + 16;
                        v134 = v135;
                        v136 = *(char *)(v133 + 23);
                        v139 = *(const void **)(v129 + 16);
                        v137 = v129 + 16;
                        v138 = v139;
                        v140 = *(char *)(v137 + 23);
                        if (v140 >= 0)
                          v141 = *(unsigned __int8 *)(v137 + 23);
                        else
                          v141 = *(_QWORD *)(v137 + 8);
                        if (v140 >= 0)
                          v142 = (const void *)v137;
                        else
                          v142 = v138;
                        if (v136 >= 0)
                          v143 = *(unsigned __int8 *)(v133 + 23);
                        else
                          v143 = *(_QWORD *)(v133 + 8);
                        if (v136 >= 0)
                          v144 = (const void *)v133;
                        else
                          v144 = v134;
                        if (v143 >= v141)
                          v145 = v141;
                        else
                          v145 = v143;
                        v146 = memcmp(v142, v144, v145);
                        v147 = v141 < v143;
                        if (v146)
                          v147 = v146 < 0;
                        if (!v147)
                        {
LABEL_238:
                          v77 = v105;
                          break;
                        }
                      }
                    }
                  }
                  pxrInternal__aapl__pxrReserved__::SdfPath::AppendChild((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16), *v105, &v197);
                  if (sub_20C286E00(3))
                  {
                    v149 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v197);
                    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Creating new <%s>\n", v150, v151, v149);
                  }
                  v152 = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v197, v148);
                  v153 = v152;
                  v154 = *v105;
                  v155 = v191;
                  if (v191 >= (uint64_t *)v192)
                  {
                    v157 = ((char *)v191 - (char *)v190) >> 4;
                    v158 = v157 + 1;
                    if ((unint64_t)(v157 + 1) >> 60)
                      sub_20BDDF694();
                    v159 = v192 - (char *)v190;
                    if ((v192 - (char *)v190) >> 3 > v158)
                      v158 = v159 >> 3;
                    if ((unint64_t)v159 >= 0x7FFFFFFFFFFFFFF0)
                      v160 = 0xFFFFFFFFFFFFFFFLL;
                    else
                      v160 = v158;
                    if (v160)
                      v161 = (char *)sub_20BDEA2F0((uint64_t)&v192, v160);
                    else
                      v161 = 0;
                    v162 = (uint64_t *)&v161[16 * v157];
                    *v162 = v153;
                    v162[1] = (uint64_t)v154;
                    v164 = (char *)v190;
                    v163 = v191;
                    v165 = (char *)v162;
                    if (v191 != v190)
                    {
                      do
                      {
                        *((_OWORD *)v165 - 1) = *((_OWORD *)v163 - 1);
                        v165 -= 16;
                        v163 -= 2;
                      }
                      while (v163 != (uint64_t *)v164);
                      v163 = v190;
                    }
                    v156 = v162 + 2;
                    v190 = (uint64_t *)v165;
                    v191 = v162 + 2;
                    v192 = &v161[16 * v160];
                    if (v163)
                      operator delete(v163);
                  }
                  else
                  {
                    *v191 = v152;
                    v155[1] = (uint64_t)v154;
                    v156 = v155 + 2;
                  }
                  v191 = v156;
                  if (a4)
                    pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildSubtree((uint64_t)a1, *(v156 - 2), (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)a3);
                  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v197 + 1);
                  sub_20BFD265C(&v197);
                  if (++v105 == (const pxrInternal__aapl__pxrReserved__::TfToken **)v76)
                  {
                    v77 = (const pxrInternal__aapl__pxrReserved__::TfToken **)v76;
                    break;
                  }
                }
              }
              if (v77 == (const pxrInternal__aapl__pxrReserved__::TfToken **)v76
                && v75 == (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74)
              {
                goto LABEL_241;
              }
            }
            if (v77 == (const pxrInternal__aapl__pxrReserved__::TfToken **)v76)
              goto LABEL_150;
            v78 = *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)*v75 + 16));
            v79 = *(_QWORD *)*v77;
            if (!v78 || v79 == 0)
              break;
            if (v78 == v79)
              goto LABEL_154;
            v82 = v78 & 0xFFFFFFFFFFFFFFF8;
            v83 = v79 & 0xFFFFFFFFFFFFFFF8;
            v84 = *(_QWORD *)(v82 + 8);
            v85 = *(_QWORD *)(v83 + 8);
            if (v84 >= v85)
            {
              if (v84 != v85)
                goto LABEL_154;
              v88 = *(const void **)(v83 + 16);
              v86 = v83 + 16;
              v87 = v88;
              v89 = *(char *)(v86 + 23);
              v92 = *(const void **)(v82 + 16);
              v90 = v82 + 16;
              v91 = v92;
              v93 = *(char *)(v90 + 23);
              if (v93 >= 0)
                v94 = *(unsigned __int8 *)(v90 + 23);
              else
                v94 = *(_QWORD *)(v90 + 8);
              if (v93 >= 0)
                v95 = (const void *)v90;
              else
                v95 = v91;
              if (v89 >= 0)
                v96 = *(unsigned __int8 *)(v86 + 23);
              else
                v96 = *(_QWORD *)(v86 + 8);
              if (v89 >= 0)
                v97 = (const void *)v86;
              else
                v97 = v87;
              if (v96 >= v94)
                v98 = v94;
              else
                v98 = v96;
              v99 = memcmp(v95, v97, v98);
              v100 = v94 < v96;
              if (v99)
                v100 = v99 < 0;
              if (!v100)
                goto LABEL_154;
            }
LABEL_150:
            if (sub_20C286E00(3))
            {
              v101 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)*v75 + 16));
              pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Removing <%s>\n", v102, v103, v101);
            }
            v104 = *v75++;
            pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(a1, v104);
          }
          if (v78)
            v81 = 1;
          else
            v81 = v79 == 0;
          if (!v81)
            goto LABEL_150;
LABEL_154:
          if (v77 == (const pxrInternal__aapl__pxrReserved__::TfToken **)v76
            || v75 == (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74)
          {
            v105 = v77;
          }
          else
          {
            v105 = v77;
            do
            {
              v106 = *v105;
              if ((*(_QWORD *)v106 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)*v75 + 16)) & 0xFFFFFFFFFFFFFFF8))
                break;
              if (sub_20C286E00(3))
              {
                v107 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)*v75 + 16));
                pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Preserving <%s>\n", v108, v109, v107);
              }
              v110 = *v75;
              v111 = *v105;
              v112 = v191;
              if (v191 >= (uint64_t *)v192)
              {
                v114 = ((char *)v191 - (char *)v190) >> 4;
                v115 = v114 + 1;
                if ((unint64_t)(v114 + 1) >> 60)
                  sub_20BDDF694();
                v116 = v192 - (char *)v190;
                if ((v192 - (char *)v190) >> 3 > v115)
                  v115 = v116 >> 3;
                if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFF0)
                  v117 = 0xFFFFFFFFFFFFFFFLL;
                else
                  v117 = v115;
                if (v117)
                  v118 = (char *)sub_20BDEA2F0((uint64_t)&v192, v117);
                else
                  v118 = 0;
                v119 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v118[16 * v114];
                *v119 = v110;
                v119[1] = v111;
                v121 = (char *)v190;
                v120 = v191;
                v122 = v119;
                if (v191 != v190)
                {
                  do
                  {
                    *((_OWORD *)v122 - 1) = *((_OWORD *)v120 - 1);
                    v122 -= 2;
                    v120 -= 2;
                  }
                  while (v120 != (uint64_t *)v121);
                  v120 = v190;
                }
                v113 = (uint64_t *)(v119 + 2);
                v190 = (uint64_t *)v122;
                v191 = (uint64_t *)(v119 + 2);
                v192 = &v118[16 * v117];
                if (v120)
                  operator delete(v120);
              }
              else
              {
                *v191 = (uint64_t)v110;
                v112[1] = (uint64_t)v111;
                v113 = v112 + 2;
              }
              v191 = v113;
              if (a4)
                pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildSubtree((uint64_t)a1, *(v113 - 2), (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)a3);
              ++v105;
              ++v75;
              if (v105 == (const pxrInternal__aapl__pxrReserved__::TfToken **)v76)
                break;
            }
            while (v75 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v74);
          }
          goto LABEL_182;
        }
LABEL_241:
        v166 = v190;
        v167 = v191;
        if (v190 == v191)
        {
          v197 = (void **)"usd/stage.cpp";
          v198 = "_ComposeChildren";
          v199 = 3098;
          v200 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopula"
                 "tionMask *, BOOL)";
          v201 = 0;
          v181 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v197, "!tempChildren.empty()", 0);
          v166 = v190;
          if (!v181)
          {
            if (!v190)
              goto LABEL_258;
            goto LABEL_257;
          }
          v167 = v191;
        }
        v168 = v185;
        v169 = 126 - 2 * __clz(((char *)v167 - (char *)v166) >> 4);
        if (v167 == v166)
          v170 = 0;
        else
          v170 = v169;
        sub_20C461A04(v166, v167, v170, 1);
        v166 = v190;
        v171 = v191;
        v172 = (((char *)v191 - (char *)v190) >> 4) - 1;
        if (((char *)v191 - (char *)v190) >> 4 != 1)
        {
          v173 = v190 + 2;
          v174 = *v190;
          do
          {
            v175 = *v173;
            v173 += 2;
            *(_QWORD *)(v174 + 40) = v175;
            v174 = v175;
            --v172;
          }
          while (v172);
        }
        *(_QWORD *)(*(v171 - 2) + 40) = a2 | 1;
        if (v25 == v185)
        {
          *(_QWORD *)(a2 + 32) = *v166;
        }
        else
        {
          for (i = *(_QWORD *)(v185 + 40); ; i = *(_QWORD *)(v177 + 40))
          {
            v177 = (i & 7) != 0 ? 0 : i & 0xFFFFFFFFFFFFFFF8;
            if (v177 == v25)
              break;
            v168 = v177;
          }
          *(_QWORD *)(v168 + 40) = *v166;
        }
LABEL_257:
        v191 = v166;
        operator delete(v166);
LABEL_258:
        if (__p)
        {
          v194 = (char *)__p;
          operator delete(__p);
        }
        if (v195)
        {
          v196 = (uint64_t **)v195;
          operator delete(v195);
        }
        goto LABEL_269;
      }
    }
    if (v23 != (const pxrInternal__aapl__pxrReserved__::TfToken *)v22)
    {
      v184 = v24;
      v186 = 0;
      v38 = 0;
      v39 = 0;
      v40 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16);
      while (1)
      {
        if (!*(_QWORD *)v23)
        {
          v197 = (void **)"usd/stage.cpp";
          v198 = "_ComposeChildren";
          v199 = 2946;
          v200 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopula"
                 "tionMask *, BOOL)";
          v201 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v197, 3, (pxrInternal__aapl__pxrReserved__ *)"Unable to instantiate prim with empty path.");
          goto LABEL_269;
        }
        pxrInternal__aapl__pxrReserved__::SdfPath::AppendChild(v40, v23, &v195);
        if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v195))
        {
          v39 = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim(a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v195, v41);
          if (v39)
          {
            if (a4)
              pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildSubtree((uint64_t)a1, v39, (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)a3);
            if (v38)
            {
              *(_QWORD *)(v38 + 40) = v39;
              v42 = 1;
              v38 = v39;
            }
            else
            {
              v42 = 1;
              v38 = v39;
              v186 = (pxrInternal__aapl__pxrReserved__::SdfPath *)v39;
            }
            goto LABEL_70;
          }
          v197 = (void **)"usd/stage.cpp";
          v198 = "_ComposeChildren";
          v199 = 2959;
          v200 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopula"
                 "tionMask *, BOOL)";
          v201 = 0;
          v43 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v195);
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v197, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to instantiate prim properly: <%s>", v43);
          v39 = 0;
        }
        else
        {
          v197 = (void **)"usd/stage.cpp";
          v198 = "_ComposeChildren";
          v199 = 2952;
          v200 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePopula"
                 "tionMask *, BOOL)";
          v201 = 0;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v197, 3, (pxrInternal__aapl__pxrReserved__ *)"Unable to instantiate prim with invalid path.");
        }
        v42 = 0;
LABEL_70:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v195 + 1);
        sub_20BFD265C(&v195);
        if ((v42 & 1) == 0)
          goto LABEL_269;
        v23 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v23 + 8);
        if (v23 == (const pxrInternal__aapl__pxrReserved__::TfToken *)v22)
        {
          v50 = v184;
          if (v184)
          {
            v51 = a2;
            if (sub_20C286E00(3))
            {
              v52 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v40);
              pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Children appended <%s>\n", v53, v54, v52);
            }
            v55 = *(_QWORD *)(v184 + 40);
            if ((v55 & 7) == 0)
            {
              v56 = v55 & 0xFFFFFFFFFFFFFFF8;
              if (v56)
              {
                do
                {
                  v50 = v56;
                  v57 = *(_QWORD *)(v56 + 40);
                  v58 = v57 & 7;
                  v56 = v57 & 0xFFFFFFFFFFFFFFF8;
                  if (v58)
                    v59 = 1;
                  else
                    v59 = v56 == 0;
                }
                while (!v59);
              }
            }
            *(_QWORD *)(v50 + 40) = v186;
          }
          else
          {
            v51 = a2;
            if (sub_20C286E00(3))
            {
              v178 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(v40);
              pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Children all new <%s>\n", v179, v180, v178);
            }
            if (*(_QWORD *)(a2 + 32))
            {
              v197 = (void **)"usd/stage.cpp";
              v198 = "_ComposeChildren";
              v199 = 2977;
              v200 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(Usd_PrimDataPtr, const UsdStagePo"
                     "pulationMask *, BOOL)";
              v201 = 0;
              pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v197, "!prim->_firstChild", 0);
            }
            *(_QWORD *)(a2 + 32) = v186;
          }
          *(_QWORD *)(v39 + 40) = v51 | 1;
          goto LABEL_269;
        }
      }
    }
    if (sub_20C286E00(3))
    {
      v47 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Children same in same order <%s>\n", v48, v49, v47);
    }
  }
LABEL_269:
  v197 = (void **)&v202;
  sub_20BEEB2B8(&v197);
}

void sub_20C43A7C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  a23 = (void *)(v26 - 112);
  sub_20BEEB2B8((void ***)&a23);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyDescendents(_DWORD *this, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  _QWORD v10[2];

  v2 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a2 + 4);
  *((_QWORD *)a2 + 4) = 0;
  if (v2)
  {
    v3 = (uint64_t)this;
    v4 = this + 278;
    do
    {
      while (1)
      {
        v5 = *((_QWORD *)v2 + 5) & 7;
        v6 = *((_QWORD *)v2 + 5) & 0xFFFFFFFFFFFFFFF8;
        if (!*(_BYTE *)(v3 + 1184))
          break;
        v7 = *(_QWORD *)(v3 + 1104);
        v10[0] = 0;
        v10[1] = v7;
        v8 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v10, 0x20uLL);
        *((_BYTE *)v8 - 11) = 1;
        *v8 = &off_24C539C80;
        v8[1] = v3;
        v8[2] = v2;
        v8[3] = v4;
        this = (_DWORD *)(**(uint64_t (***)(_QWORD, _QWORD *, uint64_t))*(v8 - 5))(*(v8 - 5), v8, (uint64_t)(v8 - 1));
        if (!v5)
        {
          v2 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v6;
          if (v6)
            continue;
        }
        return this;
      }
      this = pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim((pxrInternal__aapl__pxrReserved__::UsdStage *)v3, v2);
      if (v5)
        v9 = 1;
      else
        v9 = v6 == 0;
      v2 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v6;
    }
    while (!v9);
  }
  return this;
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildSubtree(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Usd_PrimData *this, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a4)
{
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *SourcePrimIndex;
  uint64_t *Path;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *NameToken;
  uint64_t v12;

  if ((*((_BYTE *)this + 57) & 0x10) != 0)
  {
    SourcePrimIndex = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetSourcePrimIndex(this, a2, (char *)this);
    Path = pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(SourcePrimIndex);
    NameToken = pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendChild((pxrInternal__aapl__pxrReserved__::SdfPath *)Path, NameToken, &v12);
  }
  else
  {
    v12 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v12);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v12 + 1);
  }
  pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtree(a1, a2, this, a4, &v12);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v12 + 1);
  return sub_20BFD265C(&v12);
}

void sub_20C43AADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(pxrInternal__aapl__pxrReserved__::UsdStage *this, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  const char *Text;
  const char *v5;
  char *v6;
  _DWORD *result;
  uint64_t *String;
  const char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD v13[4];
  char v14;
  unsigned int v15;
  int v16;

  if (sub_20C286E00(3))
  {
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)a2 + 16));
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Destroying <%s>\n", v5, v6, Text);
  }
  result = (_DWORD *)pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyDescendents(this, a2);
  *((_QWORD *)a2 + 7) |= 0x800uLL;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  if (!*((_BYTE *)this + 1256))
  {
    sub_20BFD6E54(&v15, (_DWORD *)a2 + 4);
    sub_20BFD6EA4(&v16, (_DWORD *)a2 + 5);
    if ((sub_20C43C2A8((uint64_t *)this + 25, &v15) & 1) == 0)
    {
      v13[0] = "usd/stage.cpp";
      v13[1] = "_DestroyPrim";
      v13[2] = 3494;
      v13[3] = "void pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(Usd_PrimDataPtr)";
      v14 = 0;
      String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)&v15);
      if (*((char *)String + 23) >= 0)
        v11 = (uint64_t)String;
      else
        v11 = *String;
      v12 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Destroyed prim <%s> not present in stage's data structures", v9, v10, v11);
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v13, "_primMap.erase(primPath)", v12);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
    return sub_20BFD265C(&v15);
  }
  return result;
}

void sub_20C43AC18(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtree(uint64_t a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a3, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a4, _DWORD *a5)
{
  uint64_t v7;
  unint64_t v8;
  __int128 v10;
  __int128 v11;
  int v12;
  int v13;
  _QWORD v14[2];

  if (!*(_BYTE *)(a1 + 1184))
    return (_DWORD *)pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreeImpl((pxrInternal__aapl__pxrReserved__ *)a1, a2, a3, a4, a5);
  *(_QWORD *)&v10 = a1;
  *((_QWORD *)&v10 + 1) = a2;
  *(_QWORD *)&v11 = a3;
  *((_QWORD *)&v11 + 1) = a4;
  sub_20BFD6E54(&v12, a5);
  sub_20BFD6EA4(&v13, a5 + 1);
  v7 = *(_QWORD *)(a1 + 1104);
  v14[0] = 0;
  v14[1] = v7;
  v8 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v14, 0x38uLL);
  *(_BYTE *)(v8 - 11) = 1;
  *(_QWORD *)v8 = off_24C539C38;
  *(_OWORD *)(v8 + 24) = v11;
  *(_OWORD *)(v8 + 8) = v10;
  sub_20BFD6E54((_DWORD *)(v8 + 40), &v12);
  sub_20BFD6EA4((_DWORD *)(v8 + 44), &v13);
  *(_QWORD *)(v8 + 48) = a1 + 1112;
  (***(void (****)(_QWORD, unint64_t, uint64_t))(v8 - 40))(*(_QWORD *)(v8 - 40), v8, v8 - 8);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
  return sub_20BFD265C(&v12);
}

void sub_20C43AD3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C43B48C((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_ReportPcpErrors(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3[3];
  void **v4;

  memset(v3, 0, sizeof(v3));
  pxrInternal__aapl__pxrReserved__::UsdStage::_ReportErrors(a1, a2, v3, a3);
  v4 = (void **)v3;
  sub_20BDE5038(&v4);
}

void sub_20C43AD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_20BDE5038(&a12);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_ReportErrors(uint64_t a1, uint64_t *a2, uint64_t **a3, uint64_t *a4)
{
  unsigned __int8 v8;
  uint64_t *v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  uint64_t Identifier;
  const char *v12;
  char *v13;
  uint64_t v14;
  const char *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  const char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  char *v24;
  void **v25;
  void **v26;
  std::string *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *String;
  int v32;
  uint64_t v33;
  const char *v34;
  char *v35;
  uint64_t *v36;
  void **v37;
  void **v38;
  __int128 v39;
  unint64_t v40;
  void **v41;
  void **v42;
  __int128 v43;
  std::string *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t *v47;
  void **v48;
  std::string *v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void **v54;
  void **v55;
  __int128 v56;
  std::string *v57;
  std::string *v58;
  std::string *i;
  uint64_t **v60;
  void *v61[2];
  char v62;
  void *__p[2];
  void *v64;
  std::string *v65;
  std::string *v66;
  unint64_t v67;
  void *v68[2];
  char v69;
  void **v70;
  const char *v71;
  uint64_t v72;
  const char *v73;
  unint64_t *v74;

  v8 = atomic_load((unsigned __int8 *)&qword_254988AE8);
  if ((v8 & 1) == 0 && __cxa_guard_acquire(&qword_254988AE8))
  {
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDB380], &stru_25473D010, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988AE8);
  }
  if (*a2 != a2[1] || *a3 != a3[1])
  {
    if (*((char *)a4 + 23) >= 0)
      v9 = a4;
    else
      v9 = (uint64_t *)*a4;
    sub_20C1034E8((uint64_t *)&v70, (uint64_t *)(a1 + 32));
    v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)&v70);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v10);
    if (*(char *)(Identifier + 23) >= 0)
      v14 = Identifier;
    else
      v14 = *(_QWORD *)Identifier;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"(%s on stage @%s@ <%p>)", v12, v13, v9, v14, a1);
    v15 = v71;
    if (v71)
    {
      v16 = (unsigned int *)(v71 + 8);
      do
      {
        v17 = __ldxr(v16);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v16));
      if (!v18)
        (*(void (**)(const char *))(*(_QWORD *)v15 + 8))(v15);
    }
    v65 = 0;
    v66 = 0;
    v67 = 0;
    v60 = a3;
    sub_20BE71C2C((uint64_t *)&v65, 0xAAAAAAAAAAAAAAABLL * (a3[1] - *a3) + ((a2[1] - *a2) >> 4));
    v21 = *a2;
    v22 = a2[1];
    if (*a2 != v22)
    {
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)v21 + 96)))
        {
          (*(void (**)(void **__return_ptr))(**(_QWORD **)v21 + 16))(v61);
          if (v62 >= 0)
            v25 = v61;
          else
            v25 = (void **)v61[0];
          if (v69 >= 0)
            v26 = v68;
          else
            v26 = (void **)v68[0];
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s %s", v23, v24, v25, v26);
          v27 = v66;
          if ((unint64_t)v66 >= v67)
          {
            v28 = 0xAAAAAAAAAAAAAAABLL * (((char *)v66 - (char *)v65) >> 3);
            v29 = v28 + 1;
            if (v28 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_20BDDF694();
            if (0x5555555555555556 * ((uint64_t)(v67 - (_QWORD)v65) >> 3) > v29)
              v29 = 0x5555555555555556 * ((uint64_t)(v67 - (_QWORD)v65) >> 3);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v67 - (_QWORD)v65) >> 3) >= 0x555555555555555)
              v30 = 0xAAAAAAAAAAAAAAALL;
            else
              v30 = v29;
            v74 = &v67;
            if (v30)
              goto LABEL_49;
            v41 = 0;
            goto LABEL_52;
          }
        }
        else
        {
          String = pxrInternal__aapl__pxrReserved__::SdfPath::GetString((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)v21 + 96));
          v32 = *((char *)String + 23);
          v33 = *String;
          (*(void (**)(void **__return_ptr))(**(_QWORD **)v21 + 16))(v61);
          if (v32 >= 0)
            v36 = String;
          else
            v36 = (uint64_t *)v33;
          v37 = (void **)v61[0];
          if (v62 >= 0)
            v37 = v61;
          if (v69 >= 0)
            v38 = v68;
          else
            v38 = (void **)v68[0];
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"In <%s>: %s %s", v34, v35, v36, v37, v38);
          v27 = v66;
          if ((unint64_t)v66 >= v67)
          {
            v28 = 0xAAAAAAAAAAAAAAABLL * (((char *)v66 - (char *)v65) >> 3);
            v40 = v28 + 1;
            if (v28 + 1 > 0xAAAAAAAAAAAAAAALL)
              sub_20BDDF694();
            if (0x5555555555555556 * ((uint64_t)(v67 - (_QWORD)v65) >> 3) > v40)
              v40 = 0x5555555555555556 * ((uint64_t)(v67 - (_QWORD)v65) >> 3);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v67 - (_QWORD)v65) >> 3) >= 0x555555555555555)
              v30 = 0xAAAAAAAAAAAAAAALL;
            else
              v30 = v40;
            v74 = &v67;
            if (v30)
LABEL_49:
              v41 = (void **)sub_20BDE4FF4((uint64_t)&v67, v30);
            else
              v41 = 0;
LABEL_52:
            v42 = &v41[3 * v28];
            v70 = v41;
            v71 = (const char *)v42;
            v73 = (const char *)&v41[3 * v30];
            v43 = *(_OWORD *)__p;
            v42[2] = v64;
            *(_OWORD *)v42 = v43;
            __p[1] = 0;
            v64 = 0;
            __p[0] = 0;
            v72 = (uint64_t)(v42 + 3);
            sub_20BDF34C0((uint64_t *)&v65, &v70);
            v44 = v66;
            sub_20BDF3648((uint64_t)&v70);
            v66 = v44;
            if (SHIBYTE(v64) < 0)
              operator delete(__p[0]);
            goto LABEL_54;
          }
        }
        v39 = *(_OWORD *)__p;
        v27->__r_.__value_.__r.__words[2] = (std::string::size_type)v64;
        *(_OWORD *)&v27->__r_.__value_.__l.__data_ = v39;
        __p[1] = 0;
        v64 = 0;
        __p[0] = 0;
        v66 = v27 + 1;
LABEL_54:
        if (v62 < 0)
          operator delete(v61[0]);
        v21 += 16;
      }
      while (v21 != v22);
    }
    v45 = *v60;
    v46 = v60[1];
    if (*v60 != v46)
    {
      do
      {
        v47 = v45;
        if (*((char *)v45 + 23) < 0)
          v47 = (uint64_t *)*v45;
        if (v69 >= 0)
          v48 = v68;
        else
          v48 = (void **)v68[0];
        pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"%s %s", v19, v20, v47, v48);
        v49 = v66;
        if ((unint64_t)v66 >= v67)
        {
          v51 = 0xAAAAAAAAAAAAAAABLL * (((char *)v66 - (char *)v65) >> 3);
          v52 = v51 + 1;
          if (v51 + 1 > 0xAAAAAAAAAAAAAAALL)
            sub_20BDDF694();
          if (0x5555555555555556 * ((uint64_t)(v67 - (_QWORD)v65) >> 3) > v52)
            v52 = 0x5555555555555556 * ((uint64_t)(v67 - (_QWORD)v65) >> 3);
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v67 - (_QWORD)v65) >> 3) >= 0x555555555555555)
            v53 = 0xAAAAAAAAAAAAAAALL;
          else
            v53 = v52;
          v74 = &v67;
          if (v53)
            v54 = (void **)sub_20BDE4FF4((uint64_t)&v67, v53);
          else
            v54 = 0;
          v55 = &v54[3 * v51];
          v70 = v54;
          v71 = (const char *)v55;
          v73 = (const char *)&v54[3 * v53];
          v56 = *(_OWORD *)__p;
          v55[2] = v64;
          *(_OWORD *)v55 = v56;
          __p[1] = 0;
          v64 = 0;
          __p[0] = 0;
          v72 = (uint64_t)(v55 + 3);
          sub_20BDF34C0((uint64_t *)&v65, &v70);
          v57 = v66;
          sub_20BDF3648((uint64_t)&v70);
          v66 = v57;
          if (SHIBYTE(v64) < 0)
            operator delete(__p[0]);
        }
        else
        {
          v50 = *(_OWORD *)__p;
          v66->__r_.__value_.__r.__words[2] = (std::string::size_type)v64;
          *(_OWORD *)&v49->__r_.__value_.__l.__data_ = v50;
          v66 = v49 + 1;
        }
        v45 += 3;
      }
      while (v45 != v46);
    }
    std::mutex::lock(&stru_25473D010);
    v58 = v65;
    for (i = v66; v58 != i; ++v58)
    {
      v70 = (void **)"usd/stage.cpp";
      v71 = "_ReportErrors";
      v72 = 3197;
      v73 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ReportErrors(const PcpErrorVector &, const std::vector<std"
            "::string> &, const std::string &) const";
      LOBYTE(v74) = 0;
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v70, v58);
    }
    std::mutex::unlock(&stru_25473D010);
    v70 = (void **)&v65;
    sub_20BDE5038(&v70);
    if (v69 < 0)
      operator delete(v68[0]);
  }
}

void sub_20C43B3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34,uint64_t a35)
{
  a19 = &a25;
  sub_20BDE5038((void ***)&a19);
  if (a33 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C43B48C(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 36));
  sub_20BFD265C((_DWORD *)(a1 + 32));
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreeImpl(pxrInternal__aapl__pxrReserved__ *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *Parent, const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *a4, _DWORD *a5)
{
  const char *v10;
  _QWORD *v11;
  _DWORD *v12;
  _QWORD *PrimIndex;
  int v14;
  pxrInternal__aapl__pxrReserved__::SdfPath *v15;
  pxrInternal__aapl__pxrReserved__::UsdTokensType *v16;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v17;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  const char *Text;
  const char *v25;
  char *v26;
  void **v27;
  char *v28;
  char v29;
  void *__p[2];
  char v31;
  _QWORD **v32[4];
  char v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  int v37;

  v10 = (const char *)*((_QWORD *)a1 + 149);
  if (v10)
  {
    if (v10[23] < 0)
      v10 = *(const char **)v10;
  }
  else
  {
    v10 = "UsdStages in aggregate";
  }
  v32[0] = (_QWORD **)v10;
  sub_20C45E830((uint64_t)&v36, "Usd", (char *)v32);
  v11 = (_QWORD *)(a2 + 16);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(a5))
    v12 = a5;
  else
    v12 = (_DWORD *)(a2 + 16);
  sub_20BFD6E54(&v34, v12);
  sub_20BFD6EA4(&v35, v12 + 1);
  PrimIndex = pxrInternal__aapl__pxrReserved__::PcpCache::FindPrimIndex(*((_QWORD *)a1 + 16), &v34);
  *(_QWORD *)(a2 + 8) = PrimIndex;
  if (PrimIndex)
    goto LABEL_9;
  v32[0] = (_QWORD **)"usd/stage.cpp";
  v32[1] = (_QWORD **)"_ComposeSubtreeImpl";
  v32[2] = (_QWORD **)3342;
  v32[3] = (_QWORD **)"void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreeImpl(Usd_PrimDataPtr, Usd_PrimData"
                      "ConstPtr, const UsdStagePopulationMask *, const SdfPath &)";
  v33 = 0;
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v34);
  pxrInternal__aapl__pxrReserved__::UsdDescribe(a1, __p);
  if (v31 >= 0)
    v27 = __p;
  else
    v27 = (void **)__p[0];
  v28 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Prim index at <%s> not found in PcpCache for UsdStage %s", v25, v26, Text, v27);
  v29 = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v32, "prim->_primIndex", v28);
  if (v31 < 0)
    operator delete(__p[0]);
  if ((v29 & 1) != 0)
  {
LABEL_9:
    if (!Parent)
      Parent = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetParent((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    v14 = Parent == *((const pxrInternal__aapl__pxrReserved__::Usd_PrimData **)a1 + 3)
       && *pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(*(pxrInternal__aapl__pxrReserved__::PcpPrimIndex **)(a2 + 8)) != *v11;
    pxrInternal__aapl__pxrReserved__::Usd_PrimData::_ComposeAndCacheFlags((pxrInternal__aapl__pxrReserved__::UsdStage *)a2, Parent, v14);
    pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimTypeInfoImpl(a1, (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    if (*v11 == *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v15))
    {
      sub_20C46260C((uint64_t)a1 + 152);
      v32[0] = 0;
      v16 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
      if (!v16)
        v16 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
      if (sub_20C43BFB0(a1, (pxrInternal__aapl__pxrReserved__::UsdTokensType *)((char *)v16 + 112), (const void ****)v32))
      {
        sub_20C43C190();
        pxrInternal__aapl__pxrReserved__::Usd_PrimTypeInfoCache::ComputeInvalidPrimTypeToFallbackMap(qword_254988B38, (pxrInternal__aapl__pxrReserved__::VtDictionary *)v32, (uint64_t)a1 + 152);
      }
      sub_20BF49F14(v32, 0);
      goto LABEL_26;
    }
    v17 = (pxrInternal__aapl__pxrReserved__::Usd_ClipCache *)*((_QWORD *)a1 + 17);
    v18 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    if (pxrInternal__aapl__pxrReserved__::Usd_ClipCache::PopulateClipsForPrim(v17, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 16), v18))
    {
      v19 = (unint64_t *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 56) & 0xFFFFFFFFFFFFFBFFLL;
    }
    else
    {
      v19 = (unint64_t *)(a2 + 56);
      v20 = *(_QWORD *)(a2 + 56) & 0xFFFFFFFFFFFFFBFFLL;
      if ((*((_QWORD *)Parent + 7) & 0x400) == 0)
      {
        v21 = 0;
LABEL_25:
        *v19 = v21 | v20;
LABEL_26:
        pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren(a1, (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, a4, 1);
        goto LABEL_27;
      }
    }
    v21 = 1024;
    goto LABEL_25;
  }
LABEL_27:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v35);
  for (result = (uint64_t)sub_20BFD265C(&v34); v37--; result = pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v36))
    ;
  return result;
}

void sub_20C43B78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  uint64_t v23;

  sub_20BFD1A18(&a23);
  sub_20BEB24F4(v23 - 80);
  _Unwind_Resume(a1);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdDescribe@<X0>(pxrInternal__aapl__pxrReserved__ *this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v5;
  uint64_t Identifier;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(uint64_t *);
  const char *v10;
  char *v11;
  unint64_t v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v13;
  uint64_t v14;
  const char *v15;
  char *v16;
  uint64_t v17;
  const char *p_p;
  _QWORD *result;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  void *__p;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (!this)
    return sub_20BDDC0E4(a2, "null stage");
  v4 = sub_20C1034E8(&v37, (uint64_t *)this + 4);
  v5 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v4);
  Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v5);
  if (*(char *)(Identifier + 23) >= 0)
    v7 = Identifier;
  else
    v7 = *(_QWORD *)Identifier;
  v8 = (uint64_t *)((char *)this + 40);
  sub_20C1034E8(&v35, v8);
  v9 = sub_20BFD2F78(&v35);
  v12 = v10 & 1 | (unint64_t)v9;
  if (v12)
  {
    sub_20C1034E8(&v31, v8);
    v13 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v31);
    v14 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v13);
    if (*(char *)(v14 + 23) >= 0)
      v17 = v14;
    else
      v17 = *(_QWORD *)v14;
    pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)", sessionLayer @%s@", v15, v16, v17);
    if (v34 >= 0)
      p_p = (const char *)&__p;
    else
      p_p = (const char *)__p;
  }
  else
  {
    p_p = "";
  }
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"stage with rootLayer @%s@%s", v10, v11, v7, p_p);
  if (v12)
  {
    if (v34 < 0)
      operator delete(__p);
    v20 = v32;
    if (v32)
    {
      v21 = (unsigned int *)(v32 + 8);
      do
      {
        v22 = __ldxr(v21);
        v23 = v22 - 1;
      }
      while (__stlxr(v23, v21));
      if (!v23)
        (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
    }
  }
  v24 = v36;
  if (v36)
  {
    v25 = (unsigned int *)(v36 + 8);
    do
    {
      v26 = __ldxr(v25);
      v27 = v26 - 1;
    }
    while (__stlxr(v27, v25));
    if (!v27)
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  }
  result = (_QWORD *)v38;
  if (v38)
  {
    v28 = (unsigned int *)(v38 + 8);
    do
    {
      v29 = __ldxr(v28);
      v30 = v29 - 1;
    }
    while (__stlxr(v30, v28));
    if (!v30)
      return (_QWORD *)(*(uint64_t (**)(_QWORD *))(*result + 8))(result);
  }
  return result;
}

void sub_20C43B9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,unsigned int *a21)
{
  uint64_t v21;
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int *v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;

  if (a21)
  {
    v23 = a21 + 2;
    do
    {
      v24 = __ldxr(v23);
      v25 = v24 - 1;
    }
    while (__stlxr(v25, v23));
    if (!v25)
      (*(void (**)(unsigned int *))(*(_QWORD *)a21 + 8))(a21);
  }
  v26 = *(unsigned int **)(v21 - 40);
  if (v26)
  {
    v27 = v26 + 2;
    do
    {
      v28 = __ldxr(v27);
      v29 = v28 - 1;
    }
    while (__stlxr(v29, v27));
    if (!v29)
      (*(void (**)(unsigned int *))(*(_QWORD *)v26 + 8))(v26);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimTypeInfoImpl(pxrInternal__aapl__pxrReserved__::UsdStage *this, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v3;
  _QWORD *v6;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v8;
  int HasField;
  int v10;
  unint64_t v11;
  pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *v13;
  unsigned int *v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v18;
  unsigned int v19;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v20;
  _QWORD *v22;
  pxrInternal__aapl__pxrReserved__::SdfPath *v23;
  pxrInternal__aapl__pxrReserved__::UsdTokensType *v24;
  int v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void ***v31;
  uint64_t v32;
  _QWORD *v33;
  unsigned int *v34;
  unsigned int v35;
  unsigned int *v36;
  unsigned int v37;
  unsigned int v38;
  unint64_t v39;
  _OWORD v40[2];
  void **v41;
  uint64_t v42;
  void **v43;
  unint64_t *v44;
  void **v45;
  unint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void ***v56;
  std::type_info *v57;
  __int16 v58;
  void **v59;
  unint64_t *v60;
  std::type_info *v61;
  void ***v62;
  std::type_info *v63;
  void ***v64;
  uint64_t *v65;
  uint64_t v66;

  v66 = *MEMORY[0x24BDAC8D0];
  v3 = *((_QWORD *)a2 + 7);
  if ((v3 & 0x4000) != 0
    || (v3 & 0x1000) != 0
    && pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)((char *)a2 + 16)))
  {
    sub_20C43C190();
    *((_QWORD *)a2 + 3) = qword_254988D80;
    return;
  }
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v41, *((const pxrInternal__aapl__pxrReserved__::PcpPrimIndex **)a2 + 1), 1);
  if (v43 == v45 && v44 == v46)
  {
LABEL_29:
    v55 = 0;
    v39 = 0;
  }
  else
  {
    while (1)
    {
      v55 = 0;
      v6 = (_QWORD *)sub_20C0EEAF8(v47);
      v59 = v43;
      v60 = v44;
      Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v59);
      v8 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v8)
        v8 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      v60 = &v55;
      v61 = &stru_24C51BCE0;
      LOWORD(v62) = 0;
      v59 = (void **)&unk_24C5286B0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v6, Path, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v8 + 448), (uint64_t (***)(_QWORD, uint64_t))&v59);
      v10 = (_BYTE)v62 ? 0 : HasField;
      v11 = v55;
      if (v10 == 1 && v55 != 0)
      {
        v13 = (pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfTokens);
        if (!v13)
          v13 = sub_20BFE0E90(&pxrInternal__aapl__pxrReserved__::SdfTokens);
        v11 = v55;
        v14 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
        if ((v55 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v13 & 0xFFFFFFFFFFFFFFF8))
          break;
      }
      if ((v11 & 7) != 0)
      {
        v15 = (unsigned int *)(v11 & 0xFFFFFFFFFFFFFFF8);
        do
          v16 = __ldxr(v15);
        while (__stlxr(v16 - 2, v15));
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v41);
      if (v43 == v45 && v44 == v46)
        goto LABEL_29;
    }
    v39 = v55;
    if ((v55 & 7) != 0)
    {
      do
        v38 = __ldxr(v14);
      while (__stxr(v38 + 2, v14));
      if ((v38 & 1) == 0)
        v39 &= 0xFFFFFFFFFFFFFFF8;
    }
  }
  memset(v40, 0, sizeof(v40));
  if ((v55 & 7) != 0)
  {
    v18 = (unsigned int *)(v55 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  v20 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)*((_QWORD *)a2 + 1);
  v52 = 0;
  v53 = 0;
  v54 = 0;
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v41);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v59, v20, 1);
  while (v61 != v63 || v62 != v64)
  {
    v22 = (_QWORD *)sub_20C0EEAF8(v65);
    v55 = (unint64_t)v61;
    v56 = v62;
    v23 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v55);
    v24 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
    if (!v24)
      v24 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
    v56 = &v41;
    v57 = &stru_24C524D40;
    v58 = 0;
    v55 = (unint64_t)&unk_24C539538;
    v25 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v22, v23, v24, (uint64_t (***)(_QWORD, uint64_t))&v55);
    if ((_BYTE)v58)
      v26 = 0;
    else
      v26 = v25;
    if (v26 == 1)
    {
      v27 = v53;
      if (v53 >= v54)
      {
        v28 = sub_20C4515D4(&v52);
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp(v53);
        v28 = v27 + 152;
      }
      v53 = v28;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::Swap((char *)(v28 - 152), (char *)&v41);
      v29 = (_QWORD *)v53;
      if (*(_BYTE *)(v53 - 152))
        goto LABEL_50;
    }
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v59);
  }
  v29 = (_QWORD *)v53;
LABEL_50:
  v30 = v52;
  while (v29 != (_QWORD *)v30)
  {
    v29 -= 19;
    v62 = 0;
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v29, (uint64_t **)v40 + 1, (uint64_t)&v59);
    v31 = v62;
    if (v62 == &v59)
    {
      v31 = &v59;
      v32 = 4;
LABEL_56:
      ((void (*)(void))(*v31)[v32])();
    }
    else if (v62)
    {
      v32 = 5;
      goto LABEL_56;
    }
  }
  v59 = (void **)&v51;
  sub_20BEEB2B8(&v59);
  v59 = (void **)&v50;
  sub_20BEEB2B8(&v59);
  v59 = (void **)&v49;
  sub_20BEEB2B8(&v59);
  v59 = (void **)&v48;
  sub_20BEEB2B8(&v59);
  v59 = (void **)&v45;
  sub_20BEEB2B8(&v59);
  v59 = (void **)&v42;
  sub_20BEEB2B8(&v59);
  v41 = (void **)&v52;
  sub_20C451A98(&v41);
  v33 = sub_20BF2B388((_QWORD *)this + 19, &v39);
  if (v33)
    sub_20BF32220(v40, v33 + 3);
  sub_20C43C190();
  *((_QWORD *)a2 + 3) = sub_20C357C3C(qword_254988B38, &v39);
  v41 = (void **)v40 + 1;
  sub_20BEEB2B8(&v41);
  if ((v40[0] & 7) != 0)
  {
    v34 = (unsigned int *)(*(_QWORD *)&v40[0] & 0xFFFFFFFFFFFFFFF8);
    do
      v35 = __ldxr(v34);
    while (__stlxr(v35 - 2, v34));
  }
  if ((v39 & 7) != 0)
  {
    v36 = (unsigned int *)(v39 & 0xFFFFFFFFFFFFFFF8);
    do
      v37 = __ldxr(v36);
    while (__stlxr(v37 - 2, v36));
  }
}

void sub_20C43BEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C357D10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C43BFB0(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const void ****a3)
{
  const void ****v5;
  uint64_t v6;
  void **v7;
  const std::type_info *v8;
  char *v9;
  unint64_t v10;
  const char *v11;
  void **v12;
  void *__p[2];
  char v15;
  void *v16[2];
  char v17;
  _QWORD v18[4];
  char v19;
  const void ****v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v21 = 0;
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)&v20) & 1) == 0)
  {
LABEL_19:
    v6 = 0;
    goto LABEL_20;
  }
  if (!sub_20BF4A73C((pxrInternal__aapl__pxrReserved__::VtValue *)&v20))
  {
    v18[0] = "usd/stage.h";
    v18[1] = "GetMetadata";
    v18[2] = 2410;
    v18[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(const TfToken &, T *) const [T = pxrInternal__"
             "aapl__pxrReserved__::VtDictionary]";
    v19 = 0;
    v7 = v16;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v16);
    if (v17 < 0)
      v7 = (void **)v16[0];
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    pxrInternal__aapl__pxrReserved__::VtValue::GetTypeName((pxrInternal__aapl__pxrReserved__::VtValue *)&v20, v8, v9, (uint64_t)__p);
    if (v15 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Requested type %s for stage metadatum %s does not match retrieved type %s", (const char *)v7, v11, (const char *)v12);
    if (v15 < 0)
      operator delete(__p[0]);
    if (v17 < 0)
      operator delete(v16[0]);
    goto LABEL_19;
  }
  if ((v21 & 4) != 0)
    v5 = (const void ****)(*(uint64_t (**)(const void *****))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(&v20);
  else
    v5 = v20;
  pxrInternal__aapl__pxrReserved__::VtDictionary::operator=(a3, v5);
  v6 = 1;
LABEL_20:
  sub_20BF4C2D8((uint64_t)&v20);
  return v6;
}

void sub_20C43C148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  sub_20BF4C2D8(v24 - 56);
  _Unwind_Resume(a1);
}

void sub_20C43C190()
{
  unsigned __int8 v0;

  v0 = atomic_load((unsigned __int8 *)&qword_254988D88);
  if ((v0 & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_254988D88))
    {
      sub_20C4513D4((uint64_t)&unk_254988B38);
      __cxa_atexit((void (*)(void *))sub_20C4513AC, &unk_254988B38, &dword_20BDBC000);
      __cxa_guard_release(&qword_254988D88);
    }
  }
}

void sub_20C43C204(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254988D88);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrimsInParallel(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD v4[2];
  char *v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  char v9;
  int v10;

  if (*(_BYTE *)(a1 + 1184))
  {
    v5 = "usd/stage.cpp";
    v6 = "_DestroyPrimsInParallel";
    v7 = 3437;
    v8 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrimsInParallel(const vector<SdfPath> &)";
    v9 = 0;
    v10 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticLiteHelper *)&v5, (pxrInternal__aapl__pxrReserved__ *)"Failed axiom: ' %s '", a3, "!_dispatcher");
  }
  v4[0] = a1;
  v4[1] = a2;
  v5 = (char *)off_24C539898;
  v6 = (const char *)v4;
  return tbb::interface7::internal::isolate_within_arena((uint64_t (***)(_QWORD))&v5, 0);
}

uint64_t sub_20C43C2A8(uint64_t *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  tbb::spin_rw_mutex_v3 *v14;
  char v15;
  uint64_t v16;

  v4 = bswap64(0x9E3779B97F4A7C55* (a2[1]+ ((a2[1] + (unint64_t)*a2 + (a2[1] + (unint64_t)*a2) * (a2[1] + (unint64_t)*a2)) >> 1)));
  v5 = *a1;
  __dmb(0xBu);
  while (2)
  {
    sub_20C45DAC0((uint64_t)&v14, (uint64_t)a1, v5 & v4, 0);
    while (1)
    {
      v6 = (_QWORD *)(v16 + 16);
      while (1)
      {
        v7 = v6;
        v6 = (_QWORD *)*v6;
        if ((unint64_t)v6 < 0x40)
          break;
        if (*(_QWORD *)a2 == v6[2])
          goto LABEL_8;
      }
      if (!v6)
        break;
LABEL_8:
      if (v15 || (v15 = 1, (tbb::spin_rw_mutex_v3::internal_upgrade(v14) & 1) != 0))
      {
        *v7 = *v6;
        v10 = (unint64_t *)(a1 + 65);
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        sub_20BEBF29C(&v14);
        v12 = 1;
        v15 = 1;
        v14 = (tbb::spin_rw_mutex_v3 *)(v6 + 1);
        tbb::spin_rw_mutex_v3::internal_acquire_writer((tbb::spin_rw_mutex_v3 *)(v6 + 1));
        sub_20BEBF29C(&v14);
        sub_20C456AB0((uint64_t)a1, (uint64_t)v6);
        return v12;
      }
      v8 = *a1;
      __dmb(0xBu);
      if (v5 != v8)
      {
        v9 = sub_20BECF7E4((uint64_t)a1, v4, v5, v8);
        v5 = v8;
        if (v9)
          goto LABEL_15;
      }
    }
    v8 = *a1;
    __dmb(0xBu);
    if (v5 != v8 && sub_20BECF7E4((uint64_t)a1, v4, v5, v8))
    {
LABEL_15:
      sub_20BEBF29C(&v14);
      v5 = v8;
      continue;
    }
    break;
  }
  sub_20BEBF29C(&v14);
  return 0;
}

void sub_20C43C440(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Reload(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  const char *v2;
  pxrInternal__aapl__pxrReserved__ *v3;
  uint64_t *Resolver;
  _BYTE v6[24];
  char v7[120];
  _QWORD **v8;
  _QWORD *v9[2];
  _QWORD **v10;
  _QWORD *v11[2];
  _QWORD **v12;
  _QWORD *v13[2];
  _QWORD **v14;
  _QWORD *v15[2];
  _QWORD **v16;
  _QWORD *v17[2];
  uint64_t v18;
  int v19;
  void **v20;
  _BYTE v21[16];
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = (const char *)*((_QWORD *)this + 149);
  if (v2)
  {
    if (v2[23] < 0)
      v2 = *(const char **)v2;
  }
  else
  {
    v2 = "UsdStages in aggregate";
  }
  *(_QWORD *)v7 = v2;
  sub_20C45E830((uint64_t)&v18, "Usd", v7);
  pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(v7);
  v8 = v9;
  v9[0] = 0;
  v11[0] = 0;
  v11[1] = 0;
  v9[1] = 0;
  v10 = v11;
  v12 = v13;
  v13[0] = 0;
  v15[0] = 0;
  v15[1] = 0;
  v13[1] = 0;
  v14 = v15;
  v17[0] = 0;
  v17[1] = 0;
  v16 = v17;
  *((_QWORD *)this + 105) = v7;
  v3 = (pxrInternal__aapl__pxrReserved__ *)pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v21);
  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(v3);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(this, (uint64_t)v6);
  pxrInternal__aapl__pxrReserved__::ArResolver::RefreshContext((uint64_t)Resolver);
  v20 = (void **)v6;
  sub_20BDE9EB0(&v20);
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v6);
  pxrInternal__aapl__pxrReserved__::PcpCache::Reload(*((pxrInternal__aapl__pxrReserved__::PcpCache **)this + 16), *((uint64_t ***)this + 105));
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache::Reload(*((pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)this + 17));
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v6);
  if (*((char **)this + 105) == v7)
    pxrInternal__aapl__pxrReserved__::UsdStage::_ProcessPendingChanges(this);
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v21);
  sub_20C3A2248((uint64_t)&v16, v17[0]);
  sub_20C3A2248((uint64_t)&v14, v15[0]);
  sub_20C3A2248((uint64_t)&v12, v13[0]);
  sub_20C3A2248((uint64_t)&v10, v11[0]);
  sub_20C3A2248((uint64_t)&v8, v9[0]);
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)v7);
  while (v19--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v18);
}

void sub_20C43C628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v5 - 72));
  sub_20C43CC34((pxrInternal__aapl__pxrReserved__::PcpChanges *)va);
  sub_20BEB24F4(v5 - 96);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_ProcessPendingChanges(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  const char *v2;
  char *v3;
  void **v4;
  uint64_t v5;
  unsigned int **v6;
  unsigned int *v7;
  unsigned int *v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  unsigned int *v10;
  unsigned int *v11;
  BOOL v12;
  unsigned int *v13;
  _DWORD *v14;
  unsigned int *v15;
  unsigned int *v16;
  uint64_t *v17;
  _QWORD *v18;
  _DWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t LayerStackChanges;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t result;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  void *__p;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v41;

  if (!*((_QWORD *)this + 105))
  {
    __p = "usd/stage.cpp";
    v34 = "_ProcessPendingChanges";
    v35 = 4498;
    v36 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ProcessPendingChanges()";
    LOBYTE(v37) = 0;
    result = pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "_pendingChanges", 0);
    if ((result & 1) == 0)
      return result;
  }
  if (sub_20C286E00(1))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe(this, &__p);
    v4 = v35 >= 0 ? &__p : (void **)__p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\nProcessPendingChanges (%s)\n", v2, v3, v4);
    if (SHIBYTE(v35) < 0)
      operator delete(__p);
  }
  v5 = *((_QWORD *)this + 105);
  v6 = (unsigned int **)(v5 + 192);
  sub_20C438558((int)this, (pxrInternal__aapl__pxrReserved__::PcpChanges *)v5);
  v41 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this;
  sub_20C4408F0(&v41, (uint64_t **)(v5 + 120));
  sub_20C4408F0(&v41, (uint64_t **)(v5 + 192));
  sub_20C4408F0(&v41, (uint64_t **)(v5 + 216));
  sub_20C4408F0(&v41, (uint64_t **)(v5 + 144));
  sub_20C4408F0(&v41, (uint64_t **)(v5 + 168));
  sub_20C440B30((_QWORD **)(v5 + 120), (uint64_t **)(v5 + 192));
  v7 = *(unsigned int **)(v5 + 192);
  v8 = (unsigned int *)(v5 + 200);
  if (v7 != (unsigned int *)(v5 + 200))
  {
    do
    {
      __p = 0;
      LOBYTE(v34) = 0;
      v35 = 0;
      if (sub_20C436648((uint64_t *)this + 25, (uint64_t)&__p, v7 + 8))
      {
        v9 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(v35 + 24);
        if (v9)
          pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimTypeInfoImpl(this, v9);
      }
      v35 = 0;
      sub_20BEBF29C(&__p);
      v10 = (unsigned int *)*((_QWORD *)v7 + 1);
      if (v10)
      {
        do
        {
          v11 = v10;
          v10 = *(unsigned int **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          v11 = (unsigned int *)*((_QWORD *)v7 + 2);
          v12 = *(_QWORD *)v11 == (_QWORD)v7;
          v7 = v11;
        }
        while (!v12);
      }
      v7 = v11;
    }
    while (v11 != v8);
  }
  if (*(_QWORD *)(v5 + 136))
  {
    v13 = *v6;
    if (*v6 == v8)
      goto LABEL_29;
    do
    {
      __p = v13 + 8;
      v14 = sub_20C45FB70((uint64_t **)(v5 + 120), (pxrInternal__aapl__pxrReserved__::SdfPath *)(v13 + 8), (uint64_t)&unk_20CAC184C, (_DWORD **)&__p);
      sub_20C14D5BC((uint64_t)(v14 + 10), (__n128 *)(v13 + 10));
      v15 = (unsigned int *)*((_QWORD *)v13 + 1);
      if (v15)
      {
        do
        {
          v16 = v15;
          v15 = *(unsigned int **)v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          v16 = (unsigned int *)*((_QWORD *)v13 + 2);
          v12 = *(_QWORD *)v16 == (_QWORD)v13;
          v13 = v16;
        }
        while (!v12);
      }
      v13 = v16;
    }
    while (v16 != v8);
  }
  else
  {
    sub_20BF07C64((uint64_t *)(v5 + 120), v5 + 192);
  }
  if (*(_QWORD *)(v5 + 136))
  {
LABEL_29:
    sub_20C440C6C((uint64_t *)(v5 + 120));
    sub_20C440B30((_QWORD **)(v5 + 120), (uint64_t **)(v5 + 144));
    v18 = *(_QWORD **)(v5 + 144);
    if (v18 != (_QWORD *)(v5 + 152))
    {
      do
      {
        __p = v18 + 4;
        v19 = sub_20C45FB70((uint64_t **)(v5 + 120), (pxrInternal__aapl__pxrReserved__::SdfPath *)(v18 + 4), (uint64_t)&unk_20CAC184C, (_DWORD **)&__p);
        sub_20C14D5BC((uint64_t)(v19 + 10), (__n128 *)(v18 + 5));
        v20 = (_QWORD *)v18[1];
        if (v20)
        {
          do
          {
            v21 = v20;
            v20 = (_QWORD *)*v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            v21 = (_QWORD *)v18[2];
            v12 = *v21 == (_QWORD)v18;
            v18 = v21;
          }
          while (!v12);
        }
        v18 = v21;
      }
      while (v21 != (_QWORD *)(v5 + 152));
    }
    goto LABEL_38;
  }
  v17 = sub_20BF07C64((uint64_t *)(v5 + 120), v5 + 144);
LABEL_38:
  if (*(_QWORD *)(v5 + 136))
  {
    v22 = *(_QWORD *)(v5 + 120);
    if (*(_QWORD *)(v22 + 32) == *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v17))
    {
      if (*(_QWORD *)(v5 + 136) != 1)
      {
        __p = "usd/stage.cpp";
        v34 = "_ProcessPendingChanges";
        v35 = 4597;
        v36 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_ProcessPendingChanges()";
        LOBYTE(v37) = 0;
        pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&__p, "recomposeChanges.size() == 1", 0);
      }
      sub_20C3A2248(v5 + 168, *(_QWORD **)(v5 + 176));
      *(_QWORD *)(v5 + 168) = v5 + 176;
      *(_QWORD *)(v5 + 176) = 0;
      *(_QWORD *)(v5 + 184) = 0;
    }
  }
  sub_20C440B30((_QWORD **)(v5 + 120), (uint64_t **)(v5 + 168));
  if (*(_QWORD *)(v5 + 232))
  {
    sub_20C440C6C((uint64_t *)(v5 + 216));
    sub_20C440B30((_QWORD **)(v5 + 120), (uint64_t **)(v5 + 216));
  }
  LayerStackChanges = pxrInternal__aapl__pxrReserved__::PcpChanges::GetLayerStackChanges(*((pxrInternal__aapl__pxrReserved__::PcpChanges **)this
                                                                                         + 105));
  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(*((pxrInternal__aapl__pxrReserved__::PcpCache **)this + 16), (uint64_t *)&__p);
  v24 = sub_20C222FD4(LayerStackChanges, (uint64_t)&__p);
  v25 = (_QWORD *)(LayerStackChanges + 8);
  result = (uint64_t)v34;
  if (v34)
  {
    v27 = (unsigned int *)(v34 + 8);
    do
    {
      v28 = __ldxr(v27);
      v29 = v28 - 1;
    }
    while (__stlxr(v29, v27));
    if (!v29)
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  if (v25 != v24)
  {
    result = pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer((uint64_t)this, (uint64_t *)this + 6);
    *((_BYTE *)this + 120) = result;
  }
  *((_QWORD *)this + 105) = 0;
  if (*(_QWORD *)(v5 + 136) || *(_QWORD *)(v5 + 184) || *(_QWORD *)(v5 + 232))
  {
    sub_20C3A3AEC(&v39, (uint64_t)this);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(&__p, &v39);
    __p = &off_24C538A68;
    v36 = (const char *)(v5 + 120);
    v37 = v5 + 168;
    v38 = v5 + 216;
    sub_20C4387FC(&__p, &v39);
    pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::~ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)&__p);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(&__p, &v39);
    __p = &unk_24C538A18;
    sub_20C4387FC(&__p, &v39);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)&__p);
    result = v40;
    if (v40)
    {
      v30 = (unsigned int *)(v40 + 8);
      do
      {
        v31 = __ldxr(v30);
        v32 = v31 - 1;
      }
      while (__stlxr(v32, v30));
      if (!v32)
        return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
    }
  }
  return result;
}

void sub_20C43CB94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C43CC34(pxrInternal__aapl__pxrReserved__::PcpChanges *a1)
{
  sub_20C3A2248((uint64_t)a1 + 216, *((_QWORD **)a1 + 28));
  sub_20C3A2248((uint64_t)a1 + 192, *((_QWORD **)a1 + 25));
  sub_20C3A2248((uint64_t)a1 + 168, *((_QWORD **)a1 + 22));
  sub_20C3A2248((uint64_t)a1 + 144, *((_QWORD **)a1 + 19));
  sub_20C3A2248((uint64_t)a1 + 120, *((_QWORD **)a1 + 16));
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::IsSupportedFile(uint64_t a1)
{
  uint64_t v1;
  const char *v2;
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v3;
  uint64_t *EmptyString;
  _BOOL8 v5;
  uint64_t (*v6)(uint64_t *);
  char v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v13;
  uint64_t v14;
  void *__p;
  const char *v16;
  uint64_t v17;
  const char *v18;
  char v19;

  v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0)
    v1 = *(_QWORD *)(a1 + 8);
  if (v1)
  {
    pxrInternal__aapl__pxrReserved__::SdfFileFormat::GetFileExtension(a1, (uint64_t)&__p);
    v2 = (const char *)HIBYTE(v17);
    if (v17 < 0)
      v2 = v16;
    if (v2)
    {
      v3 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
      if (!v3)
        v3 = sub_20C45695C(&pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens);
      if ((*((_QWORD *)v3 + 2) & 0xFFFFFFFFFFFFFFF8) != 0)
        EmptyString = (uint64_t *)((*((_QWORD *)v3 + 2) & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v3);
      pxrInternal__aapl__pxrReserved__::SdfFileFormat::FindByExtension((uint64_t)&__p, (uint64_t)EmptyString, &v13);
      v6 = sub_20C0E9DAC(&v13);
      v5 = (v7 & 1 | (unint64_t)v6) != 0;
      v8 = v14;
      if (v14)
      {
        v9 = (unsigned int *)(v14 + 8);
        do
        {
          v10 = __ldxr(v9);
          v11 = v10 - 1;
        }
        while (__stlxr(v11, v9));
        if (!v11)
          (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
      }
      if (v17 < 0)
        goto LABEL_21;
    }
    else
    {
      v5 = 0;
      if (v17 < 0)
LABEL_21:
        operator delete(__p);
    }
  }
  else
  {
    __p = "usd/stage.cpp";
    v16 = "IsSupportedFile";
    v17 = 3550;
    v18 = "static BOOL pxrInternal__aapl__pxrReserved__::UsdStage::IsSupportedFile(const std::string &)";
    v19 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Empty file path given");
    return 0;
  }
  return v5;
}

void sub_20C43CDD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, unsigned int *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;

  if (a11)
  {
    v18 = a11 + 2;
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(unsigned int *))(*(_QWORD *)a11 + 8))(a11);
  }
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::Save(pxrInternal__aapl__pxrReserved__::PcpCache **this, uint64_t a2, char *a3)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  void **v10;
  void **v11;
  uint64_t *v12;
  uint64_t *v13;
  void **v14;
  void **v15;
  void **v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  void **v25;
  void **v26;
  uint64_t v27;
  const char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  void ***v34;

  pxrInternal__aapl__pxrReserved__::UsdStage::GetUsedLayers((pxrInternal__aapl__pxrReserved__::UsdStage *)this, 1, a3, &v32);
  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(this[16], &v30);
  v4 = sub_20C20BDB4(&v30);
  if (v5 & 1 | (unint64_t)v4
    || (v25 = (void **)"usd/stage.cpp",
        v26 = (void **)"Save",
        v27 = 3594,
        v28 = "void pxrInternal__aapl__pxrReserved__::UsdStage::Save()",
        v29 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v25, "localLayerStack", 0) & 1) != 0))
  {
    v6 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FF3C0(&v30);
    pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetSessionLayers(v6, (uint64_t *)&v25);
    v7 = v32;
    v8 = v33;
    if (v32 == v33)
      goto LABEL_31;
    v9 = v33;
    v10 = v26;
    while (1)
    {
      v11 = v25;
      if (v25 == v10)
      {
        v11 = v10;
      }
      else
      {
        while (!sub_20BEB560C((uint64_t)v11, (uint64_t)v7))
        {
          v11 += 2;
          if (v11 == v10)
          {
            v11 = v10;
            break;
          }
        }
        v10 = v26;
      }
      if (v11 != v10)
        break;
      v7 += 2;
      if (v7 == v8)
        goto LABEL_32;
    }
    if (v7 == v8)
      goto LABEL_32;
    v12 = v7 + 2;
    if (v7 + 2 == v8)
    {
LABEL_31:
      v9 = v7;
    }
    else
    {
      v9 = v7;
      do
      {
        v13 = v12;
        v14 = v25;
        v15 = v26;
        if (v25 == v26)
        {
          v16 = v25;
        }
        else
        {
          while (!sub_20BEB560C((uint64_t)v14, (uint64_t)v13))
          {
            v14 += 2;
            if (v14 == v15)
            {
              v14 = v15;
              break;
            }
          }
          v16 = v14;
          v14 = v26;
        }
        if (v16 == v14)
        {
          v17 = (unsigned int *)v9[1];
          *(_OWORD *)v9 = *(_OWORD *)v13;
          v7[3] = 0;
          if (v17)
          {
            v18 = v17 + 2;
            do
            {
              v19 = __ldxr(v18);
              v20 = v19 - 1;
            }
            while (__stlxr(v20, v18));
            if (!v20)
              (*(void (**)(unsigned int *))(*(_QWORD *)v17 + 8))(v17);
          }
          *v13 = 0;
          v9 += 2;
        }
        v12 = v13 + 2;
        v7 = v13;
      }
      while (v13 + 2 != v8);
    }
LABEL_32:
    sub_20C43D1B0((uint64_t)&v32, (uint64_t)v9, (uint64_t)v33);
    v34 = &v25;
    sub_20BEB4844((void ***)&v34);
  }
  sub_20C43D250(&v32);
  v21 = v31;
  if (v31)
  {
    v22 = (unsigned int *)(v31 + 8);
    do
    {
      v23 = __ldxr(v22);
      v24 = v23 - 1;
    }
    while (__stlxr(v24, v22));
    if (!v24)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  }
  v25 = (void **)&v32;
  sub_20BEB4844(&v25);
}

void sub_20C43D05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, char a17)
{
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;

  v18 = a16;
  if (a16)
  {
    v19 = (unsigned int *)(a16 + 8);
    do
    {
      v20 = __ldxr(v19);
      v21 = v20 - 1;
    }
    while (__stlxr(v21, v19));
    if (!v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  a15 = (void **)&a17;
  sub_20BEB4844(&a15);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetUsedLayers(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::PcpCache *v6;
  int v7;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v8;
  _QWORD *v9;
  _QWORD *v10[2];
  _QWORD *v11;
  _QWORD *v12;

  v6 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
  if (v6)
  {
    v7 = a2;
    pxrInternal__aapl__pxrReserved__::PcpCache::GetUsedLayers(v6, a2, a3, (uint64_t)&v11);
    if (v7)
    {
      v8 = (pxrInternal__aapl__pxrReserved__::Usd_ClipCache *)*((_QWORD *)this + 17);
      if (v8)
      {
        pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetUsedLayers(v8, (uint64_t)&v9);
        if (v10[1])
          sub_20C43F1C0((uint64_t *)&v11, v9, v10);
        sub_20BFF29AC((uint64_t)&v9, v10[0]);
      }
    }
    sub_20C462708(a4, v11, &v12);
    sub_20BFF29AC((uint64_t)&v11, v12);
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
}

void sub_20C43D180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_20BFF29AC((uint64_t)&a9, a10);
  sub_20BFF29AC((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

uint64_t sub_20C43D1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  char v13;

  if (a2 != a3)
  {
    sub_20C20E3D4((uint64_t)&v13, a3, *(_QWORD *)(a1 + 8), a2);
    v6 = v5;
    v7 = *(_QWORD *)(a1 + 8);
    if (v7 != v5)
    {
      do
      {
        v8 = *(unsigned int **)(v7 - 8);
        if (v8)
        {
          v9 = v8 + 2;
          do
          {
            v10 = __ldxr(v9);
            v11 = v10 - 1;
          }
          while (__stlxr(v11, v9));
          if (!v11)
            (*(void (**)(unsigned int *))(*(_QWORD *)v8 + 8))(v8);
        }
        v7 -= 16;
      }
      while (v7 != v6);
    }
    *(_QWORD *)(a1 + 8) = v6;
  }
  return a2;
}

void sub_20C43D250(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t *v2;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v3;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v4;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v5;
  uint64_t Identifier;
  char *v7;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v9;
  _QWORD v10[4];
  char v11;

  v1 = *a1;
  v2 = a1[1];
  if (*a1 != v2)
  {
    do
    {
      v3 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v1);
      if (pxrInternal__aapl__pxrReserved__::SdfLayer::IsDirty(v3))
      {
        v4 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v1);
        if (pxrInternal__aapl__pxrReserved__::SdfLayer::IsAnonymous(v4))
        {
          v10[0] = "usd/stage.cpp";
          v10[1] = "_SaveLayers";
          v10[2] = 3576;
          v10[3] = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_SaveLayers(const SdfLayerHandleVector &)";
          v11 = 0;
          v5 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v1);
          Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v5);
          if (*(char *)(Identifier + 23) >= 0)
            v8 = Identifier;
          else
            v8 = *(_QWORD *)Identifier;
          pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v10, (pxrInternal__aapl__pxrReserved__ *)"Not saving @%s@ because it is an anonymous layer", v7, v8);
        }
        else
        {
          v9 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v1);
          pxrInternal__aapl__pxrReserved__::SdfLayer::Save(v9, 0);
        }
      }
      v1 += 2;
    }
    while (v1 != v2);
  }
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SaveSessionLayers(pxrInternal__aapl__pxrReserved__::PcpCache **this)
{
  uint64_t (*v1)(uint64_t *);
  char v2;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v3;
  uint64_t result;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t *v8[4];
  char v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;

  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(this[16], &v10);
  v1 = sub_20C20BDB4(&v10);
  if (v2 & 1 | (unint64_t)v1
    || (v8[0] = (uint64_t *)"usd/stage.cpp",
        v8[1] = (uint64_t *)"SaveSessionLayers",
        v8[2] = (uint64_t *)3616,
        v8[3] = (uint64_t *)"void pxrInternal__aapl__pxrReserved__::UsdStage::SaveSessionLayers()",
        v9 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v8, "localLayerStack", 0) & 1) != 0))
  {
    v3 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FF3C0(&v10);
    pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetSessionLayers(v3, (uint64_t *)v8);
    sub_20C43D250(v8);
    v12 = (void **)v8;
    sub_20BEB4844(&v12);
  }
  result = v11;
  if (v11)
  {
    v5 = (unsigned int *)(v11 + 8);
    do
    {
      v6 = __ldxr(v5);
      v7 = v6 - 1;
    }
    while (__stlxr(v7, v5));
    if (!v7)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C43D408(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int *a15)
{
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;

  if (a15)
  {
    v16 = a15 + 2;
    do
    {
      v17 = __ldxr(v16);
      v18 = v17 - 1;
    }
    while (__stlxr(v18, v16));
    if (!v18)
      (*(void (**)(unsigned int *))(*(_QWORD *)a15 + 8))(a15);
  }
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::WriteFallbackPrimTypes(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  char v2;
  unint64_t Instance;
  uint64_t **v4;
  pxrInternal__aapl__pxrReserved__::UsdTokensType *v5;
  pxrInternal__aapl__pxrReserved__::UsdTokensType *v6;
  _QWORD **v7;

  v2 = *((_BYTE *)this + 1257);
  *((_BYTE *)this + 1257) = 1;
  Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry>::_instance);
  if (!Instance)
    Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry>::_instance);
  v4 = (uint64_t **)(Instance + 120);
  if (!pxrInternal__aapl__pxrReserved__::VtDictionary::empty((pxrInternal__aapl__pxrReserved__::VtDictionary *)(Instance + 120)))
  {
    v7 = 0;
    v5 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
    if (!v5)
      v5 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
    if (sub_20C43BFB0(this, (pxrInternal__aapl__pxrReserved__::UsdTokensType *)((char *)v5 + 112), (const void ****)&v7))
    {
      pxrInternal__aapl__pxrReserved__::VtDictionaryOver((pxrInternal__aapl__pxrReserved__ *)&v7, v4, 0);
      v6 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
      if (!v6)
        v6 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
      v4 = (uint64_t **)&v7;
    }
    else
    {
      v6 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
      if (!v6)
        v6 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
    }
    sub_20C43D588(this, (pxrInternal__aapl__pxrReserved__::UsdTokensType *)((char *)v6 + 112), (const void ****)v4);
    sub_20BF49F14(&v7, 0);
  }
  *((_BYTE *)this + 1257) = v2;
}

void sub_20C43D564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  char v3;
  va_list va;

  va_start(va, a2);
  sub_20BF49F14((_QWORD ***)va, 0);
  *(_BYTE *)(v2 + 1257) = v3;
  _Unwind_Resume(a1);
}

uint64_t sub_20C43D588(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const void ****a3)
{
  uint64_t v5;
  unsigned int *v7[3];

  v7[2] = *(unsigned int **)MEMORY[0x24BDAC8D0];
  v7[1] = (unsigned int *)&off_24C51D8C8;
  sub_20BF4D058(v7, a3);
  v5 = pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  sub_20BF4C2D8((uint64_t)v7);
  return v5;
}

void sub_20C43D614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCreatingPrim(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int *v6;
  unsigned int v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  char v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  const char *v14;
  const char *v15;
  const char *Text;
  char v17;
  _BYTE v18[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v18[0] = 0;
  LODWORD(v23) = 1;
  v24 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v25);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v25 + 1);
  v26 = 0;
  sub_20C451D00(a3, v18, (uint64_t)&v23);
  if ((v26 & 7) != 0)
  {
    v6 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
  sub_20BFD265C(&v25);
  if (v24)
    sub_20C35C614(v24);
  if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsolutePath(a2))
  {
    if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath(a2))
    {
      if (pxrInternal__aapl__pxrReserved__::SdfPath::ContainsPrimVariantSelection(a2))
      {
        v23 = "usd/stage.cpp";
        v24 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_IsValidPathForCreatingPrim";
        v25 = 3672;
        v26 = (unint64_t)"std::pair<BOOL, UsdPrim> pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCrea"
                                "tingPrim(const SdfPath &) const";
        LOBYTE(v27) = 0;
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Path must not contain variant selections: <%s>", Text);
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(this, a2, (uint64_t)v18);
        if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)v18, v8))v9 = pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrim((pxrInternal__aapl__pxrReserved__::UsdStage *)this, (const pxrInternal__aapl__pxrReserved__::UsdPrim *)v18, "create prim");
        else
          v9 = pxrInternal__aapl__pxrReserved__::UsdStage::_ValidateEditPrimAtPath((pxrInternal__aapl__pxrReserved__::UsdStage *)this, a2, "create prim");
        if ((v9 & 1) != 0)
        {
          v17 = 1;
          sub_20C451D64((uint64_t)&v23, &v17, (uint64_t)v18);
          sub_20C43D930(a3, (uint64_t)&v23);
          if ((v27 & 7) != 0)
          {
            v10 = (unsigned int *)(v27 & 0xFFFFFFFFFFFFFFF8);
            do
              v11 = __ldxr(v10);
            while (__stlxr(v11 - 2, v10));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v26 + 1);
          sub_20BFD265C(&v26);
          if (v25)
            sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v25);
        }
        if ((v22 & 7) != 0)
        {
          v12 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
          do
            v13 = __ldxr(v12);
          while (__stlxr(v13 - 2, v12));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
        sub_20BFD265C(&v20);
        if (v19)
          sub_20C35C614(v19);
      }
    }
    else
    {
      v23 = "usd/stage.cpp";
      v24 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_IsValidPathForCreatingPrim";
      v25 = 3665;
      v26 = (unint64_t)"std::pair<BOOL, UsdPrim> pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCreati"
                              "ngPrim(const SdfPath &) const";
      LOBYTE(v27) = 0;
      v15 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Path must be a prim path: <%s>", v15);
    }
  }
  else
  {
    v23 = "usd/stage.cpp";
    v24 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_IsValidPathForCreatingPrim";
    v25 = 3659;
    v26 = (unint64_t)"std::pair<BOOL, UsdPrim> pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCreating"
                            "Prim(const SdfPath &) const";
    LOBYTE(v27) = 0;
    v14 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v23, 1, (pxrInternal__aapl__pxrReserved__ *)"Path must be an absolute path: <%s>", v14);
  }
}

void sub_20C43D8EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C43D9C8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C43D930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0;
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  if (v5)
    sub_20C35C614(v5);
  sub_20BFD3EBC((int *)(a1 + 24), (int *)(a2 + 24));
  sub_20BFD3F10((int *)(a1 + 28), (int *)(a2 + 28));
  if (a2 != a1)
  {
    v6 = *(_QWORD *)(a1 + 32);
    if ((v6 & 7) != 0)
    {
      v7 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
      do
        v8 = __ldxr(v7);
      while (__stlxr(v8 - 2, v7));
    }
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a2 + 32) = 0;
  }
  return a1;
}

uint64_t sub_20C43D9C8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::OverridePrim(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  void *v7;
  unint64_t *Instance;
  unint64_t v9;
  unint64_t v10;
  const char *Text;
  void *v12;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  unsigned int *v15;
  unsigned int v16;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  unint64_t *v18;
  unint64_t v19;
  const char *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  char *v25;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v26;
  uint64_t v27;
  const char *v28;
  char v29;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v30;
  unint64_t v31;
  char v32[8];
  char v33[8];
  int v34;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v35;
  int v36;
  int v37;
  const char *v38;

  if (*(_QWORD *)a2 == *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this))
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, a3);
    return;
  }
  pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCreatingPrim((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2, (uint64_t)v33);
  if (v33[0])
  {
    if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v34, v6) & 1) == 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v32);
      pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v31);
      sub_20C43223C((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), a2, &v30);
      if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v30))
      {
        Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        if (!Instance)
          Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        v9 = v31;
        v10 = atomic_load(Instance + 18);
        if (v9 >= v10
          || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v31, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
        {
          v25 = "usd/stage.cpp";
          v26 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"OverridePrim";
          v27 = 3712;
          v28 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdStage::OverridePrim(const SdfPath &)";
          v29 = 0;
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v25, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to create PrimSpec for <%s>", Text);
        }
        *(_DWORD *)a3 = 1;
        *(_QWORD *)(a3 + 8) = 0;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
        *(_QWORD *)(a3 + 24) = 0;
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v12, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v30);
        pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v31);
        sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v32);
        goto LABEL_28;
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v7, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v30);
      pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v31);
      sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v32);
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2, (uint64_t)&v25);
      v34 = (int)v25;
      v13 = v26;
      v26 = 0;
      v14 = v35;
      v35 = v13;
      if (v14)
        sub_20C35C614(v14);
      sub_20BFD3EBC(&v36, (int *)&v27);
      sub_20BFD3F10(&v37, (int *)&v27 + 1);
      if ((v38 & 7) != 0)
      {
        v15 = (unsigned int *)((unint64_t)v38 & 0xFFFFFFFFFFFFFFF8);
        do
          v16 = __ldxr(v15);
        while (__stlxr(v16 - 2, v15));
      }
      v38 = v28;
      v28 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v27 + 1);
      sub_20BFD265C(&v27);
      if (v26)
        sub_20C35C614(v26);
    }
    *(_DWORD *)a3 = v34;
    v17 = v35;
    *(_QWORD *)(a3 + 8) = v35;
    if (v17)
    {
      v18 = (unint64_t *)((char *)v17 + 48);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    sub_20BFD6E54((_DWORD *)(a3 + 16), &v36);
    sub_20BFD6EA4((_DWORD *)(a3 + 20), &v37);
    v20 = v38;
    *(_QWORD *)(a3 + 24) = v38;
    if ((v20 & 7) != 0)
    {
      v21 = (unsigned int *)((unint64_t)v20 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stxr(v22 + 2, v21));
      if ((v22 & 1) == 0)
        *(_QWORD *)(a3 + 24) &= 0xFFFFFFFFFFFFFFF8;
    }
    goto LABEL_28;
  }
  *(_DWORD *)a3 = 1;
  *(_QWORD *)(a3 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
  *(_QWORD *)(a3 + 24) = 0;
LABEL_28:
  if ((v38 & 7) != 0)
  {
    v23 = (unsigned int *)((unint64_t)v38 & 0xFFFFFFFFFFFFFFF8);
    do
      v24 = __ldxr(v23);
    while (__stlxr(v24 - 2, v23));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v37);
  sub_20BFD265C(&v36);
  if (v35)
    sub_20C35C614(v35);
}

void sub_20C43DD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20C43D9C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::DefinePrim(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>)
{
  int v8;
  unsigned int *v9;
  unsigned int v10;
  _BYTE v11[16];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  int v14;
  uint64_t v15;

  pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCreatingPrim(this, a2, (uint64_t)v11);
  v8 = v11[0];
  if ((v15 & 7) != 0)
  {
    v9 = (unsigned int *)(v15 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  sub_20BFD265C(&v13);
  if (v12)
    sub_20C35C614(v12);
  if (v8)
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::_DefinePrim((pxrInternal__aapl__pxrReserved__::UsdStage *)this, a2, a3, a4);
  }
  else
  {
    *(_DWORD *)a4 = 1;
    *(_QWORD *)(a4 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
    *(_QWORD *)(a4 + 24) = 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_DefinePrim(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  char IsDefined;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  pxrInternal__aapl__pxrReserved__ *v16;
  uint64_t v17;
  unint64_t v18;
  pxrInternal__aapl__pxrReserved__ *v19;
  int IsDormant;
  char v21;
  unint64_t *Instance;
  unint64_t v23;
  unint64_t v24;
  const char *Text;
  void *v26;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v27;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v28;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v29;
  uint64_t *EmptyString;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v31;
  unsigned int *v32;
  unsigned int v33;
  unint64_t *v34;
  unint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  pxrInternal__aapl__pxrReserved__ *v38;
  pxrInternal__aapl__pxrReserved__ *v39;
  unsigned int *v40;
  unsigned int v41;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v42;
  pxrInternal__aapl__pxrReserved__ *v43;
  uint64_t v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  const char *v48;
  char *v49;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v54;
  char v55[8];
  int v56;
  int v57;
  pxrInternal__aapl__pxrReserved__ *v58;
  int v59;
  int v60;
  unint64_t v61;
  unint64_t v62;

  if (*(_QWORD *)a2 == *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this))
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, a4);
    return;
  }
  pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a2, &v56);
  v62 = 0;
  pxrInternal__aapl__pxrReserved__::UsdStage::_DefinePrim((uint64_t *)&v49, this, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v56, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v62);
  IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v49, v8);
  if ((v52 & 7) != 0)
  {
    v10 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
  sub_20BFD265C(&v51);
  if (v50)
    sub_20C35C614(v50);
  if ((v62 & 7) != 0)
  {
    v12 = (unsigned int *)(v62 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v57);
  sub_20BFD265C(&v56);
  if ((IsDefined & 1) == 0)
  {
    *(_DWORD *)a4 = 1;
    *(_QWORD *)(a4 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
    *(_QWORD *)(a4 + 24) = 0;
    return;
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v62);
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2, (uint64_t)&v56);
  if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v56, v14))
  {
    v16 = v58;
    if (!v58 || (v17 = *((_QWORD *)v58 + 7), (v17 & 0x800) != 0))
    {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v58, v15);
      v17 = *((_QWORD *)v16 + 7);
    }
    if ((v17 & 0x40) != 0)
    {
      v18 = (unint64_t)*a3;
      if (!*a3)
        goto LABEL_57;
      v19 = v58;
      if (!v58 || (*((_BYTE *)v58 + 57) & 8) != 0)
      {
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v58, v15);
        v18 = (unint64_t)*a3;
      }
      if ((**((_QWORD **)v19 + 3) & 0xFFFFFFFFFFFFFFF8) == (v18 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_57;
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v55);
  sub_20C43223C((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), a2, &v54);
  IsDormant = pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v54);
  v21 = IsDormant;
  if (IsDormant)
  {
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v23 = v62;
    v24 = atomic_load(Instance + 18);
    if (v23 >= v24
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v62, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
    {
      v49 = "usd/stage.cpp";
      v50 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_DefinePrim";
      v51 = 3761;
      v52 = (unint64_t)"UsdPrim pxrInternal__aapl__pxrReserved__::UsdStage::_DefinePrim(const SdfPath &, const TfToken &)";
      v53 = 0;
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
      pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v49, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to create primSpec for <%s>", Text);
    }
    *(_DWORD *)a4 = 1;
    *(_QWORD *)(a4 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
    *(_QWORD *)(a4 + 24) = 0;
  }
  else
  {
    v27 = sub_20C0B0CA4(&v54);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::SetSpecifier(v27, 0);
    v26 = *a3;
    if (*a3)
    {
      v28 = sub_20C0B0CA4(&v54);
      v29 = v28;
      if (((unint64_t)*a3 & 0xFFFFFFFFFFFFFFF8) != 0)
        EmptyString = (uint64_t *)(((unint64_t)*a3 & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)v28);
      pxrInternal__aapl__pxrReserved__::SdfPrimSpec::SetTypeName(v29, (uint64_t)EmptyString);
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v26, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v54);
  sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v55);
  if ((v21 & 1) == 0)
  {
    if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v56, v31))
    {
      LODWORD(v49) = v56;
      v50 = v58;
      if (v58)
      {
        v34 = (unint64_t *)((char *)v58 + 48);
        do
          v35 = __ldxr(v34);
        while (__stxr(v35 + 1, v34));
      }
      sub_20BFD6E54(&v51, &v59);
      sub_20BFD6EA4((_DWORD *)&v51 + 1, &v60);
      v52 = v61;
      if ((v61 & 7) != 0)
      {
        v36 = (unsigned int *)(v61 & 0xFFFFFFFFFFFFFFF8);
        do
          v37 = __ldxr(v36);
        while (__stxr(v37 + 2, v36));
        if ((v37 & 1) == 0)
          v52 &= 0xFFFFFFFFFFFFFFF8;
      }
    }
    else
    {
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2, (uint64_t)&v49);
    }
    v56 = (int)v49;
    v38 = v50;
    v50 = 0;
    v39 = v58;
    v58 = v38;
    if (v39)
      sub_20C35C614(v39);
    sub_20BFD3EBC(&v59, (int *)&v51);
    sub_20BFD3F10(&v60, (int *)&v51 + 1);
    if ((v61 & 7) != 0)
    {
      v40 = (unsigned int *)(v61 & 0xFFFFFFFFFFFFFFF8);
      do
        v41 = __ldxr(v40);
      while (__stlxr(v41 - 2, v40));
    }
    v61 = v52;
    v52 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v51 + 1);
    sub_20BFD265C(&v51);
    if (v50)
      sub_20C35C614(v50);
LABEL_57:
    if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v56, v15))goto LABEL_62;
    v43 = v58;
    if (!v58 || (v44 = *((_QWORD *)v58 + 7), (v44 & 0x800) != 0))
    {
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v58, v42);
      v44 = *((_QWORD *)v43 + 7);
    }
    if ((v44 & 0x40) == 0)
    {
LABEL_62:
      v45 = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      if (!v45)
        v45 = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      v46 = v62;
      v47 = atomic_load(v45 + 18);
      if (v46 >= v47
        || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v62, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)v45))
      {
        v49 = "usd/stage.cpp";
        v50 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"_DefinePrim";
        v51 = 3777;
        v52 = (unint64_t)"UsdPrim pxrInternal__aapl__pxrReserved__::UsdStage::_DefinePrim(const SdfPath &, const TfToken &)";
        v53 = 0;
        v48 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v49, 3, (pxrInternal__aapl__pxrReserved__ *)"Failed to define UsdPrim <%s>", v48);
      }
    }
    *(_DWORD *)a4 = v56;
    *(_QWORD *)(a4 + 8) = v58;
    v58 = 0;
    sub_20BFD38A4((_DWORD *)(a4 + 16), &v59);
    sub_20BFD38DC((_DWORD *)(a4 + 20), &v60);
    *(_QWORD *)(a4 + 24) = v61;
    v61 = 0;
    goto LABEL_68;
  }
  if ((v61 & 7) != 0)
  {
    v32 = (unsigned int *)(v61 & 0xFFFFFFFFFFFFFFF8);
    do
      v33 = __ldxr(v32);
    while (__stlxr(v33 - 2, v32));
  }
LABEL_68:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v60);
  sub_20BFD265C(&v59);
  if (v58)
    sub_20C35C614(v58);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v62);
}

void sub_20C43E3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20C35C2E0((uint64_t)va);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)(v10 - 56));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::CreateClassPrim(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t *v6;
  unint64_t v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned int *v9;
  unsigned int v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  pxrInternal__aapl__pxrReserved__ *v12;
  uint64_t v13;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  pxrInternal__aapl__pxrReserved__ *v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__ *v17;
  pxrInternal__aapl__pxrReserved__ *v18;
  unsigned int *v19;
  unsigned int v20;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  unsigned int *v22;
  unsigned int v23;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int *v27;
  unsigned int v28;
  const char *Text;
  unsigned int *v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  uint64_t v35;
  const char *v36;
  char v37;
  int v38;
  pxrInternal__aapl__pxrReserved__ *v39;
  int v40;
  int v41;
  unint64_t v42;
  char *v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  const char *v47;

  if (pxrInternal__aapl__pxrReserved__::PcpMapFunction::IsIdentity((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 64))
    && !pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer((uint64_t)this, (uint64_t *)this + 6))
  {
    v43 = "usd/stage.cpp";
    v44 = "CreateClassPrim";
    v45 = 3788;
    v46 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdStage::CreateClassPrim(const SdfPath &)";
    LOBYTE(v47) = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v43, 1, (pxrInternal__aapl__pxrReserved__ *)"Must create classes in local LayerStack");
    *(_DWORD *)a3 = 1;
    *(_QWORD *)(a3 + 8) = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
    *(_QWORD *)(a3 + 24) = 0;
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::_IsValidPathForCreatingPrim((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, a2, (uint64_t)&v43);
    if ((_BYTE)v43)
    {
      v38 = (int)v44;
      v39 = (pxrInternal__aapl__pxrReserved__ *)v45;
      if (v45)
      {
        v6 = (unint64_t *)(v45 + 48);
        do
          v7 = __ldxr(v6);
        while (__stxr(v7 + 1, v6));
      }
      sub_20BFD6E54(&v40, &v46);
      sub_20BFD6EA4(&v41, (_DWORD *)&v46 + 1);
      v42 = (unint64_t)v47;
      if ((v47 & 7) != 0)
      {
        v9 = (unsigned int *)((unint64_t)v47 & 0xFFFFFFFFFFFFFFF8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 2, v9));
        if ((v10 & 1) == 0)
          v42 &= 0xFFFFFFFFFFFFFFF8;
      }
      if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v38, v8))goto LABEL_22;
      v12 = v39;
      if (!v39 || (v13 = *((_QWORD *)v39 + 7), (v13 & 0x800) != 0))
      {
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v39, v11);
        v13 = *((_QWORD *)v12 + 7);
      }
      if ((v13 & 0x40) != 0 && sub_20C388124((uint64_t)&v38, v11) != 2)
      {
        v33 = (unint64_t)"usd/stage.cpp";
        v34 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"CreateClassPrim";
        v35 = 3804;
        v36 = "UsdPrim pxrInternal__aapl__pxrReserved__::UsdStage::CreateClassPrim(const SdfPath &)";
        v37 = 0;
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v33, 3, (pxrInternal__aapl__pxrReserved__ *)"Non-class prim already exists at <%s>", Text);
        *(_DWORD *)a3 = 1;
        *(_QWORD *)(a3 + 8) = 0;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
        *(_QWORD *)(a3 + 24) = 0;
        if ((v42 & 7) != 0)
        {
          v30 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
          do
            v31 = __ldxr(v30);
          while (__stlxr(v31 - 2, v30));
        }
      }
      else
      {
LABEL_22:
        if (!pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v38, v11))goto LABEL_23;
        v15 = v39;
        if (!v39 || (v16 = *((_QWORD *)v39 + 7), (v16 & 0x800) != 0))
        {
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v39, v14);
          v16 = *((_QWORD *)v15 + 7);
        }
        if ((v16 & 0x20) == 0)
        {
LABEL_23:
          v32 = 0;
          pxrInternal__aapl__pxrReserved__::UsdStage::_DefinePrim(this, a2, (void **)&v32, (uint64_t)&v33);
          v38 = v33;
          v17 = v34;
          v34 = 0;
          v18 = v39;
          v39 = v17;
          if (v18)
            sub_20C35C614(v18);
          sub_20BFD3EBC(&v40, (int *)&v35);
          sub_20BFD3F10(&v41, (int *)&v35 + 1);
          if ((v42 & 7) != 0)
          {
            v19 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
            do
              v20 = __ldxr(v19);
            while (__stlxr(v20 - 2, v19));
          }
          v42 = (unint64_t)v36;
          v36 = 0;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v35 + 1);
          sub_20BFD265C(&v35);
          if (v34)
            sub_20C35C614(v34);
          if ((v32 & 7) != 0)
          {
            v22 = (unsigned int *)(v32 & 0xFFFFFFFFFFFFFFF8);
            do
              v23 = __ldxr(v22);
            while (__stlxr(v23 - 2, v22));
          }
          if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v38, v21))
          {
            v24 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v24)
              v24 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            LODWORD(v32) = 2;
            v33 = 0;
            sub_20C455B28((uint64_t)&v38, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v24 + 312), (uint64_t (**)(_QWORD, uint64_t))&v32, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v33);
            if ((v33 & 7) != 0)
            {
              v25 = (unsigned int *)(v33 & 0xFFFFFFFFFFFFFFF8);
              do
                v26 = __ldxr(v25);
              while (__stlxr(v26 - 2, v25));
            }
          }
        }
        *(_DWORD *)a3 = v38;
        *(_QWORD *)(a3 + 8) = v39;
        v39 = 0;
        sub_20BFD38A4((_DWORD *)(a3 + 16), &v40);
        sub_20BFD38DC((_DWORD *)(a3 + 20), &v41);
        *(_QWORD *)(a3 + 24) = v42;
        v42 = 0;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
      sub_20BFD265C(&v40);
      if (v39)
        sub_20C35C614(v39);
    }
    else
    {
      *(_DWORD *)a3 = 1;
      *(_QWORD *)(a3 + 8) = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 16));
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a3 + 20));
      *(_QWORD *)(a3 + 24) = 0;
    }
    if ((v47 & 7) != 0)
    {
      v27 = (unsigned int *)((unint64_t)v47 & 0xFFFFFFFFFFFFFFF8);
      do
        v28 = __ldxr(v27);
      while (__stlxr(v28 - 2, v27));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v46 + 1);
    sub_20BFD265C(&v46);
    if (v45)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v45);
  }
}

void sub_20C43E8AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_20C35C2E0((uint64_t)va);
  sub_20C43D9C8((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _BOOL8 HasLayer;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v10;
  uint64_t v11;

  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(*(pxrInternal__aapl__pxrReserved__::PcpCache **)(a1 + 128), &v10);
  v3 = sub_20C1FF3C0(&v10);
  HasLayer = pxrInternal__aapl__pxrReserved__::PcpLayerStack::HasLayer(v3, a2);
  v5 = v11;
  if (v11)
  {
    v6 = (unsigned int *)(v11 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  return HasLayer;
}

void sub_20C43E978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_RemovePrim(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t **v4;
  void *v5;
  uint64_t **v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v8;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v9;

  pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPrimSpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), a2, &v9);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v9) & 1) != 0)
  {
    v3 = 0;
  }
  else
  {
    v4 = (uint64_t **)sub_20C0B0CA4(&v9);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetRealNameParent(v4, &v8);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v8) & 1) != 0)
    {
      v3 = 0;
    }
    else
    {
      v6 = (uint64_t **)sub_20C0B0CA4(&v8);
      v3 = pxrInternal__aapl__pxrReserved__::SdfPrimSpec::RemoveNameChild(v6, &v9);
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v9);
  return v3;
}

void sub_20C43EA20(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, char a4)
{
  void *v5;

  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a4);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTargetForLocalLayer@<X0>(pxrInternal__aapl__pxrReserved__::PcpCache **this@<X0>, unint64_t a2@<X1>, pxrInternal__aapl__pxrReserved__::UsdEditTarget *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v6;
  _QWORD *Layers;
  const char *v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v13;
  pxrInternal__aapl__pxrReserved__::SdfLayerOffset *LayerOffsetForLayer;
  const char *v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  double v21[3];
  char *v22;
  const char *v23;
  uint64_t v24;
  const char *v25;
  char v26;

  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(this[16], (uint64_t *)&v22);
  v6 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FF3C0((uint64_t *)&v22);
  Layers = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v6);
  v8 = v23;
  if (v23)
  {
    v9 = (unsigned int *)(v23 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(const char *))(*(_QWORD *)v8 + 8))(v8);
  }
  v12 = (uint64_t)(Layers[1] - *Layers) >> 3;
  if (v12 <= a2)
  {
    v22 = "usd/stage.cpp";
    v23 = "GetEditTargetForLocalLayer";
    v24 = 3835;
    v25 = "UsdEditTarget pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTargetForLocalLayer(size_t)";
    v26 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v22, 1, (pxrInternal__aapl__pxrReserved__ *)"Layer index %zu is out of range: only %zu entries in layer stack", a2, v12);
    return pxrInternal__aapl__pxrReserved__::UsdEditTarget::UsdEditTarget(a3);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(this[16], (uint64_t *)&v22);
    v13 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FF3C0((uint64_t *)&v22);
    LayerOffsetForLayer = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayerOffsetForLayer(v13, a2);
    v15 = v23;
    if (v23)
    {
      v16 = (unsigned int *)(v23 + 8);
      do
      {
        v17 = __ldxr(v16);
        v18 = v17 - 1;
      }
      while (__stlxr(v18, v16));
      if (!v18)
        (*(void (**)(const char *))(*(_QWORD *)v15 + 8))(v15);
    }
    v19 = *Layers + 8 * a2;
    if (LayerOffsetForLayer)
      *(_OWORD *)v21 = *(_OWORD *)LayerOffsetForLayer;
    else
      pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset(v21, 0.0, 1.0);
    return pxrInternal__aapl__pxrReserved__::UsdEditTarget::UsdEditTarget(a3, v19, v21[0], v21[1]);
  }
}

void sub_20C43EBA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a15)
    sub_20C96B408(a15);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetEditTargetForLocalLayer@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  pxrInternal__aapl__pxrReserved__::SdfLayerOffset *LayerOffsetForLayer;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(*(pxrInternal__aapl__pxrReserved__::PcpCache **)(a1 + 128), &v13);
  v5 = (_QWORD *)sub_20C1FF3C0(&v13);
  LayerOffsetForLayer = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayerOffsetForLayer(v5, a2);
  v7 = v14;
  if (v14)
  {
    v8 = (unsigned int *)(v14 + 8);
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  if (LayerOffsetForLayer)
    v12 = *(_OWORD *)LayerOffsetForLayer;
  else
    pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset((double *)&v12, 0.0, 1.0);
  return pxrInternal__aapl__pxrReserved__::UsdEditTarget::UsdEditTarget(a3, a2, *(double *)&v12, *((double *)&v12 + 1));
}

void sub_20C43EC80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a12)
    sub_20C96B408(a12);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::SetEditTarget(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdEditTarget *a2)
{
  uint64_t (*v4)(uint64_t *);
  char v5;
  BOOL *p_HasLocalLayer;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v7;
  BOOL v8;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v9;
  uint64_t Identifier;
  const char *v11;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  BOOL v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  BOOL HasLocalLayer;
  char *v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  char v28;

  v4 = sub_20BFD2F78(a2);
  if (!(v5 & 1 | (unint64_t)v4))
  {
    v24 = "usd/stage.cpp";
    v25 = "SetEditTarget";
    v26 = 3862;
    v27 = "void pxrInternal__aapl__pxrReserved__::UsdStage::SetEditTarget(const UsdEditTarget &)";
    v28 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v24, 1, (pxrInternal__aapl__pxrReserved__ *)"Attempt to set an invalid UsdEditTarget as current");
    return;
  }
  HasLocalLayer = 1;
  if (!pxrInternal__aapl__pxrReserved__::PcpMapFunction::IsIdentity((const pxrInternal__aapl__pxrReserved__::UsdEditTarget *)((char *)a2 + 16)))
  {
    p_HasLocalLayer = 0;
    goto LABEL_7;
  }
  HasLocalLayer = pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer((uint64_t)this, (uint64_t *)a2);
  if (HasLocalLayer)
  {
    p_HasLocalLayer = &HasLocalLayer;
LABEL_7:
    if ((pxrInternal__aapl__pxrReserved__::UsdEditTarget::operator==((uint64_t)a2, (uint64_t)this + 48) & 1) == 0)
    {
      sub_20BF2D298((uint64_t)this + 48, (uint64_t)a2);
      if ((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48) != a2)
      {
        v7 = sub_20C2011B8((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 64));
        sub_20C20123C(v7, (uint64_t)a2 + 16);
      }
      *(_OWORD *)((char *)this + 104) = *(_OWORD *)((char *)a2 + 56);
      v8 = p_HasLocalLayer
         ? *p_HasLocalLayer
         : pxrInternal__aapl__pxrReserved__::UsdStage::HasLocalLayer((uint64_t)this, (uint64_t *)a2);
      *((_BYTE *)this + 120) = v8;
      sub_20C3A3AEC(&v21, (uint64_t)this);
      pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(&v24, &v21);
      v24 = (char *)&unk_24C538AA0;
      sub_20C4387FC(&v24, &v21);
      pxrInternal__aapl__pxrReserved__::UsdNotice::StageEditTargetChanged::~StageEditTargetChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageEditTargetChanged *)&v24);
      v15 = v22;
      if (v22)
      {
        v19 = (unsigned int *)(v22 + 8);
        do
        {
          v20 = __ldxr(v19);
          v18 = --v20 == 0;
        }
        while (__stlxr(v20, v19));
LABEL_26:
        if (v18)
          (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
        return;
      }
    }
    return;
  }
  v24 = "usd/stage.cpp";
  v25 = "SetEditTarget";
  v26 = 3877;
  v27 = "void pxrInternal__aapl__pxrReserved__::UsdStage::SetEditTarget(const UsdEditTarget &)";
  v28 = 0;
  v9 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)a2);
  Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v9);
  if (*(char *)(Identifier + 23) >= 0)
    v11 = (const char *)Identifier;
  else
    v11 = *(const char **)Identifier;
  sub_20C1034E8(&v21, (uint64_t *)this + 4);
  v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v21);
  v13 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v12);
  if (*(char *)(v13 + 23) >= 0)
    v14 = (const char *)v13;
  else
    v14 = *(const char **)v13;
  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v24, 1, (pxrInternal__aapl__pxrReserved__ *)"Layer @%s@ is not in the local LayerStack rooted at @%s@", v11, v14);
  v15 = v22;
  if (v22)
  {
    v16 = (unsigned int *)(v22 + 8);
    do
    {
      v17 = __ldxr(v16);
      v18 = --v17 == 0;
    }
    while (__stlxr(v17, v16));
    goto LABEL_26;
  }
}

void sub_20C43EED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int *a5, uint64_t a6, ...)
{
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;
  va_list va;

  va_start(va, a6);
  pxrInternal__aapl__pxrReserved__::UsdNotice::StageEditTargetChanged::~StageEditTargetChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageEditTargetChanged *)va);
  if (a5)
  {
    v7 = a5 + 2;
    do
    {
      v8 = __ldxr(v7);
      v9 = v8 - 1;
    }
    while (__stlxr(v9, v7));
    if (!v9)
      (*(void (**)(unsigned int *))(*(_QWORD *)a5 + 8))(a5);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetLayerStack@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v8;
  uint64_t Layers;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  const char *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t *v17;
  uint64_t result;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v22;
  uint64_t Identifier;
  const char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(*((pxrInternal__aapl__pxrReserved__::PcpCache **)this + 16), &v39);
  v6 = sub_20C20BDB4(&v39);
  if (v7 & 1 | (unint64_t)v6)
  {
    v8 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FF3C0(&v39);
    Layers = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v8);
    v10 = Layers;
    v11 = *(uint64_t **)Layers;
    if ((a2 & 1) == 0)
    {
      v12 = *(uint64_t **)(Layers + 8);
      sub_20C1034E8((uint64_t *)&v34, (uint64_t *)this + 4);
      if (v11 != v12)
      {
        while (!sub_20C1020E4(&v34, v11))
        {
          if (++v11 == v12)
          {
            v11 = v12;
            break;
          }
        }
      }
      v13 = v35;
      if (v35)
      {
        v14 = (unsigned int *)(v35 + 8);
        do
        {
          v15 = __ldxr(v14);
          v16 = v15 - 1;
        }
        while (__stlxr(v16, v14));
        if (!v16)
          (*(void (**)(const char *))(*(_QWORD *)v13 + 8))(v13);
      }
    }
    v17 = *(uint64_t **)(v10 + 8);
    if (v11 == v17)
    {
      v34 = "usd/stage.cpp";
      v35 = "GetLayerStack";
      v36 = 3928;
      v37 = "SdfLayerHandleVector pxrInternal__aapl__pxrReserved__::UsdStage::GetLayerStack(BOOL) const";
      v38 = 0;
      sub_20C1034E8(&v32, (uint64_t *)this + 4);
      v22 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v32);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v22);
      if (*(char *)(Identifier + 23) >= 0)
        v26 = Identifier;
      else
        v26 = *(_QWORD *)Identifier;
      v27 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Root layer @%s@ not in LayerStack", v24, v25, v26);
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v34, "copyBegin != layers.end()", v27);
      v28 = v33;
      if (v33)
      {
        v29 = (unsigned int *)(v33 + 8);
        do
        {
          v30 = __ldxr(v29);
          v31 = v30 - 1;
        }
        while (__stlxr(v31, v29));
        if (!v31)
          (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
      }
      v17 = *(uint64_t **)(v10 + 8);
    }
    sub_20C20E4A8((uint64_t)a3, v11, v17, v17 - v11);
  }
  result = v40;
  if (v40)
  {
    v19 = (unsigned int *)(v40 + 8);
    do
    {
      v20 = __ldxr(v19);
      v21 = v20 - 1;
    }
    while (__stlxr(v21, v19));
    if (!v21)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C43F10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;

  v19 = a18;
  if (a18)
  {
    v20 = (unsigned int *)(a18 + 8);
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  sub_20BEB4844(&a12);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C43F1C0(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t **v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = (uint64_t **)result;
    v6 = result + 1;
    do
    {
      result = sub_20C25657C(v5, v6, (uint64_t)(v4 + 4), v4 + 4);
      v7 = (_QWORD *)v4[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v4[2];
          v9 = *v8 == (_QWORD)v4;
          v4 = v8;
        }
        while (!v9);
      }
      v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *pxrInternal__aapl__pxrReserved__::UsdStage::GetSessionLayer@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t *a2@<X8>)
{
  return sub_20C1034E8(a2, (uint64_t *)this + 5);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::MuteLayer(uint64_t a1, uint64_t a2)
{
  void **v3[3];
  char *v4;
  char *v5;
  char *v6;
  void ***v7;
  void *__p[2];
  uint64_t v9;
  __int128 v10;

  *(_QWORD *)&v10 = *MEMORY[0x24BDAC8D0];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v9 = *(_QWORD *)(a2 + 16);
  }
  v4 = 0;
  v5 = 0;
  v6 = 0;
  v4 = (char *)operator new(0x18uLL);
  v5 = v4;
  v6 = v4 + 24;
  v5 = sub_20BFB76A8((uint64_t)&v6, (__int128 *)__p, &v10, v4);
  memset(v3, 0, sizeof(v3));
  pxrInternal__aapl__pxrReserved__::UsdStage::MuteAndUnmuteLayers(a1, (uint64_t *)&v4, (uint64_t *)v3);
  v7 = v3;
  sub_20BDE5038((void ***)&v7);
  v3[0] = (void **)&v4;
  sub_20BDE5038(v3);
  if (SHIBYTE(v9) < 0)
    operator delete(__p[0]);
}

void sub_20C43F368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::MuteAndUnmuteLayers(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  const char *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  void **v12[6];
  _QWORD **v13;
  _QWORD *v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23[15];
  uint64_t v24;
  int v25;

  v6 = *(const char **)(a1 + 1192);
  if (v6)
  {
    if (v6[23] < 0)
      v6 = *(const char **)v6;
  }
  else
  {
    v6 = "UsdStages in aggregate";
  }
  v23[0] = (void *)v6;
  sub_20C45E830((uint64_t)&v24, "Usd", (char *)v23);
  pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(v23);
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  pxrInternal__aapl__pxrReserved__::PcpCache::RequestLayerMuting(*(uint64_t **)(a1 + 128), a2, a3, v23, &v20, &v17);
  sub_20C3A3AEC(&v15, a1);
  if (v20 != v21 || v17 != v18)
  {
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(v12, &v15);
    v12[0] = (void **)&unk_24C538AD8;
    v12[3] = (void **)&v20;
    v12[4] = (void **)&v17;
    sub_20C4387FC(v12, &v15);
    pxrInternal__aapl__pxrReserved__::UsdNotice::LayerMutingChanged::~LayerMutingChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::LayerMutingChanged *)v12);
  }
  if (!pxrInternal__aapl__pxrReserved__::PcpChanges::IsEmpty((pxrInternal__aapl__pxrReserved__::PcpChanges *)v23))
  {
    v14[0] = 0;
    v14[1] = 0;
    v13 = v14;
    sub_20C438558((pxrInternal__aapl__pxrReserved__::PcpCache **)a1, (pxrInternal__aapl__pxrReserved__::PcpChanges *)v23, (char *)&v13);
    pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v12, &v15, (uint64_t)&v13);
    sub_20C4387FC(v12, &v15);
    pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::~ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v12);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(v12, &v15);
    v12[0] = (void **)&unk_24C538A18;
    sub_20C4387FC(v12, &v15);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)v12);
    sub_20C3A2248((uint64_t)&v13, v14[0]);
  }
  v7 = v16;
  if (v16)
  {
    v8 = (unsigned int *)(v16 + 8);
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  v12[0] = (void **)&v17;
  sub_20BDE5038(v12);
  v12[0] = (void **)&v20;
  sub_20BDE5038(v12);
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)v23);
  while (v25--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v24);
}

void sub_20C43F5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, _QWORD *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;

  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)&a9);
  sub_20C3A2248((uint64_t)&a15, a16);
  v28 = a19;
  if (a19)
  {
    v29 = (unsigned int *)(a19 + 8);
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  }
  a9 = &a20;
  sub_20BDE5038((void ***)&a9);
  a9 = &a23;
  sub_20BDE5038((void ***)&a9);
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)&a26);
  sub_20BEB24F4(v26 - 48);
  _Unwind_Resume(a1);
}

void sub_20C43F67C()
{
  JUMPOUT(0x20C43F66CLL);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::UnmuteLayer(uint64_t a1, uint64_t a2)
{
  void **v3;
  char *v4;
  void **v5;
  uint64_t v6[3];
  void ***v7;
  char v8;
  void *__p[2];
  uint64_t v10;
  __int128 v11;

  *(_QWORD *)&v11 = *MEMORY[0x24BDAC8D0];
  memset(v6, 0, sizeof(v6));
  if (*(char *)(a2 + 23) < 0)
  {
    sub_20BDDBFAC(__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v10 = *(_QWORD *)(a2 + 16);
  }
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v7 = &v3;
  v8 = 0;
  v3 = (void **)operator new(0x18uLL);
  v4 = (char *)v3;
  v5 = v3 + 3;
  v4 = sub_20BFB76A8((uint64_t)&v5, (__int128 *)__p, &v11, (char *)v3);
  pxrInternal__aapl__pxrReserved__::UsdStage::MuteAndUnmuteLayers(a1, v6, (uint64_t *)&v3);
  v7 = &v3;
  sub_20BDE5038((void ***)&v7);
  if (SHIBYTE(v10) < 0)
    operator delete(__p[0]);
  v3 = (void **)v6;
  sub_20BDE5038(&v3);
}

void sub_20C43F79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  a9 = &a12;
  sub_20BDE5038((void ***)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetMutedLayers(pxrInternal__aapl__pxrReserved__::PcpCache **this)
{
  return pxrInternal__aapl__pxrReserved__::PcpCache::GetMutedLayers(this[16]);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::IsLayerMuted(uint64_t a1, uint64_t a2)
{
  return pxrInternal__aapl__pxrReserved__::PcpCache::IsLayerMuted(*(uint64_t **)(a1 + 128), a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::Traverse@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__ *v3;
  _QWORD *UsdPrimDefaultPredicate;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (pxrInternal__aapl__pxrReserved__ *)sub_20C3A3AEC(&v9, (uint64_t)this);
  UsdPrimDefaultPredicate = (_QWORD *)pxrInternal__aapl__pxrReserved__::GetUsdPrimDefaultPredicate(v3);
  pxrInternal__aapl__pxrReserved__::UsdPrimRange::Stage(&v9, UsdPrimDefaultPredicate, a2);
  result = v10;
  if (v10)
  {
    v6 = (unsigned int *)(v10 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C43F874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::Traverse@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  sub_20C3A3AEC(&v9, a1);
  pxrInternal__aapl__pxrReserved__::UsdPrimRange::Stage(&v9, a2, a3);
  result = v10;
  if (v10)
  {
    v6 = (unsigned int *)(v10 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C43F900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::TraverseAll@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__ *v3;
  uint64_t *UsdPrimAllPrimsPredicate;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (pxrInternal__aapl__pxrReserved__ *)sub_20C3A3AEC(&v9, (uint64_t)this);
  UsdPrimAllPrimsPredicate = pxrInternal__aapl__pxrReserved__::GetUsdPrimAllPrimsPredicate(v3);
  pxrInternal__aapl__pxrReserved__::UsdPrimRange::Stage(&v9, UsdPrimAllPrimsPredicate, a2);
  result = v10;
  if (v10)
  {
    v6 = (unsigned int *)(v10 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C43F98C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

unint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimSpec@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, _QWORD *a3@<X8>)
{
  return pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPrimSpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), a2, a3);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_RemoveProperty(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  void *v2;
  uint64_t v3;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v4;
  const std::type_info *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  const char *v9;
  char *v10;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v11;
  void *v12;
  char *v14;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v17;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v18;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v19;

  pxrInternal__aapl__pxrReserved__::UsdEditTarget::GetPropertySpecForScenePath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 48), a2, (uint64_t *)&v19);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v19) & 1) != 0)
  {
    v3 = 0;
  }
  else
  {
    v4 = sub_20BFE6874(&v19);
    pxrInternal__aapl__pxrReserved__::SdfPropertySpec::GetOwner((pxrInternal__aapl__pxrReserved__::SdfPropertySpec *)v4, &v17);
    if (pxrInternal__aapl__pxrReserved__::Sdf_CanCastToType(&v17, (const pxrInternal__aapl__pxrReserved__::SdfSpec *)&stru_24C527C50, v5))
    {
      v6 = (unsigned int *)v17;
      v15 = v17;
      if (v17)
      {
        do
          v7 = __ldaxr(v6);
        while (__stlxr(v7 + 1, v6));
        v6 = (unsigned int *)v15;
        v18 = v15;
        if (v15)
        {
          do
            v8 = __ldaxr((unsigned int *)v15);
          while (__stlxr(v8 + 1, (unsigned int *)v15));
        }
      }
      else
      {
        v18 = 0;
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v6, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v15);
    }
    else
    {
      v18 = 0;
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v17);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v18) & 1) == 0
      || (LOBYTE(v16) = 0,
          v14 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"Prop has no parent", v9, v10, "usd/stage.cpp", "_RemoveProperty", 4073, "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_RemoveProperty(const SdfPath &)", v16), (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v15, "parent", v14) & 1) != 0))
    {
      v11 = sub_20C0B0CA4(&v18);
      pxrInternal__aapl__pxrReserved__::SdfPrimSpec::RemoveProperty(v11, &v19);
      v3 = 1;
    }
    else
    {
      v3 = 0;
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v12, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v18);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v19);
  return v3;
}

void sub_20C43FAF0(_Unwind_Exception *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *v4;

  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v2 - 32));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v2 - 24));
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_HandleLayersDidChange(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfNotice::LayersDidChangeSentPerLayer *a2)
{
  const char *v4;
  unint64_t v5;
  unint64_t v6;
  const char *v7;
  char *v8;
  void **v9;
  void **v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *AllLayerStacksUsingLayer;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  _BOOL8 v17;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v19;
  uint64_t v20;
  const char *v21;
  char *v22;
  uint64_t v23;
  const pxrInternal__aapl__pxrReserved__::TfToken *v24;
  pxrInternal__aapl__pxrReserved__ **v25;
  pxrInternal__aapl__pxrReserved__ *v26;
  uint64_t v27;
  uint64_t v28;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v29;
  pxrInternal__aapl__pxrReserved__ *v30;
  unsigned int v31;
  char v32;
  pxrInternal__aapl__pxrReserved__ *v33;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v34;
  pxrInternal__aapl__pxrReserved__::UsdTokensType *v35;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v36;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v37;
  pxrInternal__aapl__pxrReserved__::UsdTokensType *v38;
  _BOOL4 v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int *v45;
  unsigned int v46;
  unsigned int v47;
  pxrInternal__aapl__pxrReserved__::PcpCache *v48;
  const char *v49;
  char *v50;
  unint64_t v51;
  const char *v52;
  const char *v53;
  char *v54;
  unint64_t v55;
  const char *v56;
  pxrInternal__aapl__pxrReserved__::PcpCache *v57;
  pxrInternal__aapl__pxrReserved__::PcpCache *v58;
  char v59;
  pxrInternal__aapl__pxrReserved__::PcpCache *v60;
  pxrInternal__aapl__pxrReserved__::PcpCache *v61;
  uint64_t v62;
  _BOOL4 HasLayer;
  uint64_t v64;
  unsigned int *v65;
  unsigned int v66;
  unsigned int v67;
  void **v68;
  void **v69;
  const char *v70;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  const char *v75;
  char *v76;
  uint64_t v77;
  void ***v78;
  uint64_t **v79;
  pxrInternal__aapl__pxrReserved__::PcpCache *v80;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v81;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v82;
  uint64_t LayerStackChanges;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t **v86;
  int *v87;
  void **v88;
  void **v89;
  int v90;
  void **v91;
  const char *v92;
  char *v93;
  void ***v94;
  void ***v95;
  _QWORD *v96;
  _QWORD *v97;
  BOOL v98;
  uint64_t *v100;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v101;
  uint64_t Identifier;
  const char *v103;
  uint64_t v104;
  unsigned int *v105;
  unsigned int v106;
  unsigned int v107;
  const pxrInternal__aapl__pxrReserved__::SdfNotice::LayersDidChangeSentPerLayer *v108;
  void **v109;
  uint64_t **v110;
  uint64_t **v111;
  uint64_t v112;
  uint64_t **v113;
  uint64_t **v114;
  pxrInternal__aapl__pxrReserved__::SdfPath *v115;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v116;
  uint64_t v117;
  void *__p[2];
  uint64_t v119;
  const char *v120;
  char v121;
  _QWORD **v122;
  _QWORD *v123[2];
  _QWORD **v124;
  _QWORD *v125[2];
  _QWORD **v126;
  _QWORD *v127[2];
  _QWORD **v128;
  _QWORD *v129[2];
  _QWORD **v130;
  _QWORD *v131[2];
  uint64_t v132;
  int v133;
  pxrInternal__aapl__pxrReserved__::SdfPath ***v134;
  uint64_t v135;
  char v136;
  pxrInternal__aapl__pxrReserved__::SdfPath **v137;
  uint64_t v138;
  char v139;
  void **v140;

  v4 = (const char *)*((_QWORD *)this + 149);
  if (v4)
  {
    if (v4[23] < 0)
      v4 = *(const char **)v4;
  }
  else
  {
    v4 = "UsdStages in aggregate";
  }
  __p[0] = (void *)v4;
  sub_20C45E830((uint64_t)&v132, "Usd", (char *)__p);
  v5 = *((_QWORD *)a2 + 2);
  v6 = *((_QWORD *)this + 102);
  if (v5 == v6)
    goto LABEL_148;
  if (v5 < v6)
  {
    __p[0] = "usd/stage.cpp";
    __p[1] = "_HandleLayersDidChange";
    v119 = 4283;
    v120 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_HandleLayersDidChange(const SdfNotice::LayersDidChangeSentPerLayer &)";
    v121 = 0;
    v100 = sub_20C1034E8((uint64_t *)&v137, (uint64_t *)this + 4);
    v101 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v100);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v101);
    if (*(char *)(Identifier + 23) >= 0)
      v103 = (const char *)Identifier;
    else
      v103 = *(const char **)Identifier;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Detected usd threading violation.  Concurrent changes to layer(s) composed in stage %p rooted at @%s@.  (serial=%zu, lastSerial=%zu).", this, v103, v5, *((_QWORD *)this + 102));
    v104 = v138;
    if (v138)
    {
      v105 = (unsigned int *)(v138 + 8);
      do
      {
        v106 = __ldxr(v105);
        v107 = v106 - 1;
      }
      while (__stlxr(v107, v105));
      if (!v107)
        (*(void (**)(uint64_t))(*(_QWORD *)v104 + 8))(v104);
    }
    goto LABEL_148;
  }
  *((_QWORD *)this + 102) = v5;
  if (sub_20C286E00(1))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe(this, __p);
    v9 = v119 >= 0 ? __p : (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\nHandleLayersDidChange received (%s)\n", v7, v8, v9);
    if (SHIBYTE(v119) < 0)
      operator delete(__p[0]);
  }
  pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(__p);
  v122 = v123;
  v123[0] = 0;
  v125[0] = 0;
  v125[1] = 0;
  v123[1] = 0;
  v124 = v125;
  v126 = v127;
  v127[0] = 0;
  v129[0] = 0;
  v129[1] = 0;
  v127[1] = 0;
  v128 = v129;
  v131[0] = 0;
  v131[1] = 0;
  v130 = v131;
  v10 = (void **)*((_QWORD *)this + 105);
  if (!v10)
  {
    v10 = __p;
    *((_QWORD *)this + 105) = __p;
  }
  v115 = 0;
  v116 = 0;
  v117 = 0;
  v11 = (uint64_t *)*((_QWORD *)a2 + 1);
  v12 = *v11;
  v112 = v11[1];
  v109 = v10;
  if (*v11 == v112)
  {
    v79 = (uint64_t **)v10;
    goto LABEL_122;
  }
  v108 = a2;
  v113 = (uint64_t **)(v10 + 21);
  v114 = (uint64_t **)(v10 + 15);
  v110 = (uint64_t **)(v10 + 24);
  v111 = (uint64_t **)(v10 + 18);
  do
  {
    AllLayerStacksUsingLayer = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpCache::FindAllLayerStacksUsingLayer(*((_QWORD *)this + 16), v12);
    if (*AllLayerStacksUsingLayer != AllLayerStacksUsingLayer[1])
    {
      v14 = v12 + 16;
      if (*(_DWORD *)(v12 + 220) >= 2u)
        v14 = *(_QWORD *)v14;
      v15 = *(_DWORD *)(v12 + 216);
      if (v15)
      {
        v16 = v14 + 200 * v15;
        do
        {
          if ((pxrInternal__aapl__pxrReserved__::SdfPath::IsTargetPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v14) & 1) == 0)
          {
            v17 = sub_20C286E00(1);
            if (v17)
            {
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v14);
              v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v12);
              v20 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v19);
              if (*(char *)(v20 + 23) >= 0)
                v23 = v20;
              else
                v23 = *(_QWORD *)v20;
              pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"<%s> in @%s@ changed.\n", v21, v22, Text, v23);
            }
            v25 = (pxrInternal__aapl__pxrReserved__ **)(v14 + 8);
            if (*(_QWORD *)v14 == *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v17)
              || pxrInternal__aapl__pxrReserved__::SdfPath::IsPrimOrPrimVariantSelectionPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v14))
            {
              v26 = (pxrInternal__aapl__pxrReserved__ *)(v14 + 8);
              if (*(_DWORD *)(v14 + 132) >= 4u)
                v26 = *v25;
              v27 = *(unsigned int *)(v14 + 128);
              if ((_DWORD)v27)
              {
                v28 = 40 * v27;
                while (1)
                {
                  v29 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                  if (!v29)
                    v29 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                  if ((*(_QWORD *)v26 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v29 & 0xFFFFFFFFFFFFFFF8))
                    break;
                  v26 = (pxrInternal__aapl__pxrReserved__ *)((char *)v26 + 40);
                  v28 -= 40;
                  if (!v28)
                    goto LABEL_39;
                }
                if (sub_20C286E00(1))
                {
                  v51 = *(_QWORD *)v26 & 0xFFFFFFFFFFFFFFF8;
                  if (v51)
                  {
                    v52 = (const char *)(v51 + 16);
                    if (*(char *)(v51 + 39) < 0)
                      v52 = *(const char **)v52;
                  }
                  else
                  {
                    v52 = "";
                  }
                  pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Changed field: %s\n", v49, v50, v52);
                }
                v59 = 1;
                goto LABEL_99;
              }
LABEL_39:
              if ((*(_WORD *)(v14 + 192) & 0x10) != 0)
              {
LABEL_98:
                v59 = 0;
LABEL_99:
                v60 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
                v137 = (pxrInternal__aapl__pxrReserved__::SdfPath **)(v14 + 8);
                sub_20C4406F8((uint64_t *)v12, (pxrInternal__aapl__pxrReserved__::SdfPath *)v14, v60, v114, &v137);
                if ((v59 & 1) != 0)
                {
                  v61 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
                  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(v61, (uint64_t *)&v137);
                  v62 = sub_20C1FF3C0((uint64_t *)&v137);
                  HasLayer = pxrInternal__aapl__pxrReserved__::PcpLayerStack::HasLayer(v62, (uint64_t *)v12);
                  v64 = v138;
                  if (v138)
                  {
                    v65 = (unsigned int *)(v138 + 8);
                    do
                    {
                      v66 = __ldxr(v65);
                      v67 = v66 - 1;
                    }
                    while (__stlxr(v67, v65));
                    if (!v67)
                      (*(void (**)(uint64_t))(*(_QWORD *)v64 + 8))(v64);
                  }
                  if (HasLayer)
                  {
                    pxrInternal__aapl__pxrReserved__::SdfPath::StripAllVariantSelections((pxrInternal__aapl__pxrReserved__::SdfPath *)v14, (int *)&v137);
                    sub_20C462AA8((uint64_t *)&v115, &v137);
                    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v137 + 1);
                    sub_20BFD265C(&v137);
                  }
                  pxrInternal__aapl__pxrReserved__::PcpCache::FindSiteDependencies(v61, (_QWORD *)v12, (int *)v14, 62, 1, 0, 0, (uint64_t *)&v137);
                  v69 = (void **)v137;
                  v68 = (void **)v138;
                  while (v69 != v68)
                  {
                    sub_20C462AA8((uint64_t *)&v115, v69);
                    v69 += 9;
                  }
                  v134 = &v137;
                  sub_20C2219C0((void ***)&v134);
                  if (sub_20C286E00(1))
                  {
                    v70 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v14);
                    v71 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)v12);
                    v72 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v71);
                    v73 = *(char *)(v72 + 23);
                    v74 = *(_QWORD *)v72;
                    sub_20C39C4D0(&v115);
                    if (v73 >= 0)
                      v77 = v72;
                    else
                      v77 = v74;
                    v78 = (void ***)&v137;
                    if (v139 < 0)
                      v78 = (void ***)v137;
                    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Adding paths that use <%s> in layer @%s@: %s\n", v75, v76, v70, v77, v78);
                    if (v139 < 0)
                      operator delete(v137);
                  }
                }
                goto LABEL_118;
              }
              v30 = (pxrInternal__aapl__pxrReserved__ *)(v14 + 8);
              if (*(_DWORD *)(v14 + 132) >= 4u)
                v30 = *v25;
              v31 = *(_DWORD *)(v14 + 128);
              if (v31)
              {
                v32 = 0;
                v33 = (pxrInternal__aapl__pxrReserved__ *)((char *)v30 + 40 * v31);
                do
                {
                  v34 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                  if (!v34)
                    v34 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                  if ((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v34 + 56) & 0xFFFFFFFFFFFFFFF8))
                    goto LABEL_64;
                  v35 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
                  if (!v35)
                    v35 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
                  if ((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v35 & 0xFFFFFFFFFFFFFFF8))
                  {
LABEL_64:
                    v32 = 1;
                  }
                  else
                  {
                    v36 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                    if (!v36)
                      v36 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                    if ((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v36 + 26) & 0xFFFFFFFFFFFFFFF8))
                      goto LABEL_161;
                    v37 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                    if (!v37)
                      v37 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                    if ((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v37 + 39) & 0xFFFFFFFFFFFFFFF8)
                      || pxrInternal__aapl__pxrReserved__::UsdIsClipRelatedField(v30, v24))
                    {
                      goto LABEL_161;
                    }
                    v38 = (pxrInternal__aapl__pxrReserved__::UsdTokensType *)atomic_load(&pxrInternal__aapl__pxrReserved__::UsdTokens);
                    if (!v38)
                      v38 = sub_20C27E60C(&pxrInternal__aapl__pxrReserved__::UsdTokens);
                    if ((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v38 + 14) & 0xFFFFFFFFFFFFFFF8)
                      && !*((_BYTE *)this + 1257)
                      && *(_QWORD *)v14 == *(_QWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v38))
                    {
                      sub_20C1034E8((uint64_t *)&v137, (uint64_t *)this + 4);
                      if (sub_20BEB560C(v12, (uint64_t)&v137))
                      {
                        v39 = 1;
                      }
                      else
                      {
                        sub_20C1034E8((uint64_t *)&v134, (uint64_t *)this + 5);
                        v39 = sub_20BEB560C(v12, (uint64_t)&v134);
                        v40 = v135;
                        if (v135)
                        {
                          v41 = (unsigned int *)(v135 + 8);
                          do
                          {
                            v42 = __ldxr(v41);
                            v43 = v42 - 1;
                          }
                          while (__stlxr(v43, v41));
                          if (!v43)
                            (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
                        }
                      }
                      v44 = v138;
                      if (v138)
                      {
                        v45 = (unsigned int *)(v138 + 8);
                        do
                        {
                          v46 = __ldxr(v45);
                          v47 = v46 - 1;
                        }
                        while (__stlxr(v47, v45));
                        if (!v47)
                          (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
                      }
                      if (v39)
                      {
LABEL_161:
                        if (sub_20C286E00(1))
                        {
                          v55 = *(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8;
                          if (v55)
                          {
                            v56 = (const char *)(v55 + 16);
                            if (*(char *)(v55 + 39) < 0)
                              v56 = *(const char **)v56;
                          }
                          else
                          {
                            v56 = "";
                          }
                          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Changed field: %s\n", v53, v54, v56);
                        }
                        goto LABEL_98;
                      }
                    }
                  }
                  v30 = (pxrInternal__aapl__pxrReserved__ *)((char *)v30 + 40);
                }
                while (v30 != v33);
                if ((v32 & 1) != 0)
                {
                  v57 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
                  v137 = (pxrInternal__aapl__pxrReserved__::SdfPath **)(v14 + 8);
                  sub_20C4406F8((uint64_t *)v12, (pxrInternal__aapl__pxrReserved__::SdfPath *)v14, v57, v110, &v137);
                }
              }
LABEL_92:
              v58 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
              v137 = (pxrInternal__aapl__pxrReserved__::SdfPath **)(v14 + 8);
              sub_20C4406F8((uint64_t *)v12, (pxrInternal__aapl__pxrReserved__::SdfPath *)v14, v58, v113, &v137);
              goto LABEL_118;
            }
            if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsPropertyPath((pxrInternal__aapl__pxrReserved__::SdfPath *)v14)
              || (*(unsigned __int16 *)(v14 + 192) | (*(unsigned __int8 *)(v14 + 194) << 16)) < 0x100000u)
            {
              goto LABEL_92;
            }
            v48 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
            v137 = (pxrInternal__aapl__pxrReserved__::SdfPath **)(v14 + 8);
            sub_20C4406F8((uint64_t *)v12, (pxrInternal__aapl__pxrReserved__::SdfPath *)v14, v48, v111, &v137);
          }
LABEL_118:
          v14 += 200;
        }
        while (v14 != v16);
      }
    }
    v12 += 232;
  }
  while (v12 != v112);
  v79 = (uint64_t **)*((_QWORD *)this + 105);
  v11 = (uint64_t *)*((_QWORD *)v108 + 1);
LABEL_122:
  v80 = (pxrInternal__aapl__pxrReserved__::PcpCache *)*((_QWORD *)this + 16);
  pxrInternal__aapl__pxrReserved__::PcpChanges::DidChange(v79, v80, v11);
  v81 = v115;
  v82 = v116;
  while (v81 != v82)
  {
    pxrInternal__aapl__pxrReserved__::PcpChanges::DidChangeSignificantly(v79, v80, v81);
    v81 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v81 + 8);
  }
  LayerStackChanges = pxrInternal__aapl__pxrReserved__::PcpChanges::GetLayerStackChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)v79);
  v84 = (_QWORD *)(LayerStackChanges + 8);
  v85 = *(_QWORD **)LayerStackChanges;
  if (*(_QWORD *)LayerStackChanges != LayerStackChanges + 8)
  {
    v86 = (uint64_t **)(v109 + 27);
    do
    {
      if (*((_BYTE *)v85 + 51))
      {
        v87 = (int *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)LayerStackChanges);
        pxrInternal__aapl__pxrReserved__::PcpCache::FindSiteDependencies(v80, v85 + 4, v87, 47, 1, 0, 0, (uint64_t *)&v137);
        v89 = (void **)v137;
        v88 = (void **)v138;
        while (v89 != v88)
        {
          v140 = v89;
          sub_20C45FB70(v86, (pxrInternal__aapl__pxrReserved__::SdfPath *)v89, (uint64_t)&unk_20CAC184C, (_DWORD **)&v140);
          v89 += 9;
        }
        v134 = &v137;
        sub_20C2219C0((void ***)&v134);
        LayerStackChanges = sub_20C286E00(1);
        if ((LayerStackChanges & 1) != 0)
        {
          sub_20C22C2F4(v85 + 4);
          v90 = v139;
          v91 = (void **)v137;
          sub_20C4629D0(v86);
          if (v90 >= 0)
            v94 = (void ***)&v137;
          else
            v94 = (void ***)v91;
          v95 = (void ***)&v134;
          if (v136 < 0)
            v95 = (void ***)v134;
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Adding paths that use layer stack %s: %s\n", v92, v93, v94, v95);
          if (v136 < 0)
            operator delete(v134);
          if (v139 < 0)
            operator delete(v137);
        }
      }
      v96 = (_QWORD *)v85[1];
      if (v96)
      {
        do
        {
          v97 = v96;
          v96 = (_QWORD *)*v96;
        }
        while (v96);
      }
      else
      {
        do
        {
          v97 = (_QWORD *)v85[2];
          v98 = *v97 == (_QWORD)v85;
          v85 = v97;
        }
        while (!v98);
      }
      v85 = v97;
    }
    while (v97 != v84);
  }
  pxrInternal__aapl__pxrReserved__::UsdStage::_ProcessPendingChanges(this);
  v137 = &v115;
  sub_20BFD6F90((void ***)&v137);
  sub_20C3A2248((uint64_t)&v130, v131[0]);
  sub_20C3A2248((uint64_t)&v128, v129[0]);
  sub_20C3A2248((uint64_t)&v126, v127[0]);
  sub_20C3A2248((uint64_t)&v124, v125[0]);
  sub_20C3A2248((uint64_t)&v122, v123[0]);
  pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)__p);
LABEL_148:
  while (v133--)
    pxrInternal__aapl__pxrReserved__::TfMallocTag::_End(v132);
}

void sub_20C44053C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  uint64_t v31;

  sub_20BEB24F4(v31 - 168);
  _Unwind_Resume(a1);
}

void sub_20C4406F8(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::PcpCache *this, uint64_t **a4, _QWORD *a5)
{
  uint64_t v10;
  _BOOL4 HasLayer;
  _DWORD *v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  _DWORD *v16;
  _DWORD *v17;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v19;
  uint64_t Identifier;
  uint64_t v21;
  const char *v22;
  char *v23;
  void *v24;
  void *__p;
  _DWORD *v26;
  char v27;
  void **p_p;

  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(this, (uint64_t *)&__p);
  v10 = sub_20C1FF3C0((uint64_t *)&__p);
  HasLayer = pxrInternal__aapl__pxrReserved__::PcpLayerStack::HasLayer(v10, a1);
  v12 = v26;
  if (v26)
  {
    v13 = v26 + 2;
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(_DWORD *))(*(_QWORD *)v12 + 8))(v12);
  }
  if (HasLayer)
  {
    pxrInternal__aapl__pxrReserved__::SdfPath::StripAllVariantSelections(a2, (int *)&__p);
    sub_20C4628D0(a4, &__p, a5);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
    sub_20BFD265C(&__p);
  }
  pxrInternal__aapl__pxrReserved__::PcpCache::FindSiteDependencies(this, a1, (int *)a2, 62, 1, 0, 0, (uint64_t *)&__p);
  v16 = __p;
  v17 = v26;
  while (v16 != v17)
  {
    sub_20C4628D0(a4, v16, a5);
    v16 += 18;
  }
  p_p = &__p;
  sub_20C2219C0(&p_p);
  if (sub_20C286E00(1))
  {
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText(a2);
    v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(a1);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v19);
    if (*(char *)(Identifier + 23) >= 0)
      v21 = Identifier;
    else
      v21 = *(_QWORD *)Identifier;
    sub_20C4629D0(a4);
    if (v27 >= 0)
      v24 = &__p;
    else
      v24 = __p;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Adding paths that use <%s> in layer @%s@: %s\n", v22, v23, Text, v21, v24);
    if (v27 < 0)
      operator delete(__p);
  }
}

void sub_20C440894(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20C4408F0(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache ***a1, uint64_t **a2)
{
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v2;
  uint64_t *v3;
  uint64_t *v4;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v7;
  uint64_t *v8;
  uint64_t *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t i;
  _DWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;

  v2 = *a1;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v4 = (uint64_t *)(a2 + 1);
  v3 = *a2;
  if (*a2 != (uint64_t *)(a2 + 1))
  {
    do
    {
      if (pxrInternal__aapl__pxrReserved__::UsdStage::_IsObjectDescendantOfInstance(v2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v3 + 4)))
      {
        pxrInternal__aapl__pxrReserved__::SdfPath::GetAbsoluteRootOrPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v3 + 4), &v16);
        pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetPrimsInPrototypesUsingPrimIndexPath(v2[18], (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v16, (uint64_t *)&v14);
        v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v14;
        v7 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)v15;
        if (v14 != v15)
        {
          do
          {
            pxrInternal__aapl__pxrReserved__::SdfPath::ReplacePrefix((uint64_t *)&v21, (pxrInternal__aapl__pxrReserved__::SdfPath *)(v3 + 4), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v16, v6, 1);
            sub_20C451E04(&v18, &v21, (uint64_t)(v3 + 5));
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v21 + 1);
            sub_20BFD265C(&v21);
            v6 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v6 + 8);
          }
          while (v6 != v7);
        }
        v21 = (void **)&v14;
        sub_20BFD6F90(&v21);
        v8 = sub_20BE10B80(a2, v3);
        sub_20C3A2290((uint64_t)(v3 + 4));
        operator delete(v3);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
        sub_20BFD265C(&v16);
      }
      else
      {
        v9 = (uint64_t *)v3[1];
        if (v9)
        {
          do
          {
            v8 = v9;
            v9 = (uint64_t *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            v8 = (uint64_t *)v3[2];
            v10 = *v8 == (_QWORD)v3;
            v3 = v8;
          }
          while (!v10);
        }
      }
      v3 = v8;
    }
    while (v8 != v4);
    v11 = v18;
    for (i = v19; v11 != i; v11 += 32)
    {
      v14 = (uint64_t *)v11;
      v13 = sub_20C45FB70(a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)v11, (uint64_t)&unk_20CAC184C, (_DWORD **)&v14);
      sub_20BEF2D00((uint64_t)(v13 + 10), *((_QWORD *)v13 + 6), *(char **)(v11 + 8), *(char **)(v11 + 16), (uint64_t)(*(_QWORD *)(v11 + 16) - *(_QWORD *)(v11 + 8)) >> 3);
    }
  }
  v14 = &v18;
  sub_20C4522AC((void ***)&v14);
}

void sub_20C440ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, char a14, uint64_t a15, uint64_t a16, void **a17)
{
  sub_20BFD1A18(&a12);
  a17 = (void **)&a14;
  sub_20C4522AC(&a17);
  _Unwind_Resume(a1);
}

void sub_20C440B30(_QWORD **a1, uint64_t **a2)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  _QWORD *v11;
  _QWORD *v12;

  v3 = (uint64_t *)(a2 + 1);
  v2 = *a2;
  v4 = a1 + 1;
  v5 = *a1;
  while (v5 != v4 && v2 != v3)
  {
    if (sub_20BFD758C((pxrInternal__aapl__pxrReserved__::SdfPath *)(v2 + 4), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v5 + 4)))
    {
      v8 = (uint64_t *)v2[1];
      if (v8)
      {
        do
        {
          v2 = v8;
          v8 = (uint64_t *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = v2;
          v2 = (uint64_t *)v2[2];
        }
        while ((uint64_t *)*v2 != v9);
      }
    }
    else
    {
      if (v2[4] == v5[4])
      {
        sub_20BEF2D00((uint64_t)(v5 + 5), v5[6], (char *)v2[5], (char *)v2[6], (v2[6] - v2[5]) >> 3);
      }
      else if (!pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)(v2 + 4), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v5 + 4)))
      {
        v11 = (_QWORD *)v5[1];
        if (v11)
        {
          do
          {
            v5 = v11;
            v11 = (_QWORD *)*v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            v12 = v5;
            v5 = (_QWORD *)v5[2];
          }
          while ((_QWORD *)*v5 != v12);
        }
        continue;
      }
      v10 = sub_20BE10B80(a2, v2);
      sub_20C3A2290((uint64_t)(v2 + 4));
      operator delete(v2);
      v2 = v10;
    }
  }
}

uint64_t *sub_20C440C6C(uint64_t *result)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t **v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  BOOL v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;

  v1 = result + 1;
  v2 = (uint64_t *)*result;
  if ((uint64_t *)*result != result + 1)
  {
    v3 = (uint64_t **)result;
    do
    {
      v4 = (uint64_t *)v2[1];
      v5 = v2;
      if (v4)
      {
        do
        {
          v6 = v4;
          v4 = (uint64_t *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          v6 = (uint64_t *)v5[2];
          v7 = *v6 == (_QWORD)v5;
          v5 = v6;
        }
        while (!v7);
      }
      v8 = v1;
      if (v6 != v1)
      {
        v8 = v6;
        while (pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix((pxrInternal__aapl__pxrReserved__::SdfPath *)(v8 + 4), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v2 + 4)))
        {
          v9 = (uint64_t *)v8[1];
          if (v9)
          {
            do
            {
              v10 = v9;
              v9 = (uint64_t *)*v9;
            }
            while (v9);
          }
          else
          {
            do
            {
              v10 = (uint64_t *)v8[2];
              v7 = *v10 == (_QWORD)v8;
              v8 = v10;
            }
            while (!v7);
          }
          v8 = v10;
          if (v10 == v1)
          {
            v8 = v1;
            break;
          }
        }
      }
      result = sub_20C462B0C(v3, v6, v8);
      v11 = (uint64_t *)v2[1];
      if (v11)
      {
        do
        {
          v12 = v11;
          v11 = (uint64_t *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          v12 = (uint64_t *)v2[2];
          v7 = *v12 == (_QWORD)v2;
          v2 = v12;
        }
        while (!v7);
      }
      v2 = v12;
    }
    while (v12 != v1);
  }
  return result;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_HandleResolverDidChange(const pxrInternal__aapl__pxrReserved__::PcpCache **this, const pxrInternal__aapl__pxrReserved__::ArNotice::ResolverChanged *a2)
{
  const char *v4;
  char *v5;
  void **v6;
  void **v7;
  const pxrInternal__aapl__pxrReserved__::PcpCache *v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *v9;
  void *__p[2];
  char v11;
  _QWORD **v12;
  _QWORD *v13[2];
  _QWORD **v14;
  _QWORD *v15[2];
  _QWORD **v16;
  _QWORD *v17[2];
  _QWORD **v18;
  _QWORD *v19[2];
  _QWORD **v20;
  _QWORD *v21[2];
  void **v22;

  pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext((pxrInternal__aapl__pxrReserved__::UsdStage *)this, (uint64_t)__p);
  LOBYTE(a2) = pxrInternal__aapl__pxrReserved__::ArNotice::ResolverChanged::AffectsContext((uint64_t)a2);
  v22 = __p;
  sub_20BDE9EB0(&v22);
  if ((a2 & 1) != 0)
  {
    if (sub_20C286E00(1))
    {
      pxrInternal__aapl__pxrReserved__::UsdDescribe((pxrInternal__aapl__pxrReserved__ *)this, __p);
      v6 = v11 >= 0 ? __p : (void **)__p[0];
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"\nHandleResolverDidChange received (%s)\n", v4, v5, v6);
      if (v11 < 0)
        operator delete(__p[0]);
    }
    pxrInternal__aapl__pxrReserved__::PcpChanges::PcpChanges(__p);
    v12 = v13;
    v13[0] = 0;
    v15[0] = 0;
    v15[1] = 0;
    v13[1] = 0;
    v14 = v15;
    v16 = v17;
    v17[0] = 0;
    v19[0] = 0;
    v19[1] = 0;
    v17[1] = 0;
    v18 = v19;
    v21[0] = 0;
    v21[1] = 0;
    v20 = v21;
    v7 = (void **)this[105];
    if (!v7)
    {
      this[105] = (const pxrInternal__aapl__pxrReserved__::PcpCache *)__p;
      v7 = __p;
    }
    pxrInternal__aapl__pxrReserved__::PcpChanges::DidChangeAssetResolver((pxrInternal__aapl__pxrReserved__::PcpChanges *)v7, this[16]);
    v8 = this[105];
    v22 = (void **)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v9);
    sub_20C45FB70((uint64_t **)v8 + 27, (pxrInternal__aapl__pxrReserved__::SdfPath *)v22, (uint64_t)&unk_20CAC184C, (_DWORD **)&v22);
    if (this[105] == (const pxrInternal__aapl__pxrReserved__::PcpCache *)__p)
      pxrInternal__aapl__pxrReserved__::UsdStage::_ProcessPendingChanges((pxrInternal__aapl__pxrReserved__::UsdStage *)this);
    sub_20C3A2248((uint64_t)&v20, v21[0]);
    sub_20C3A2248((uint64_t)&v18, v19[0]);
    sub_20C3A2248((uint64_t)&v16, v17[0]);
    sub_20C3A2248((uint64_t)&v14, v15[0]);
    sub_20C3A2248((uint64_t)&v12, v13[0]);
    pxrInternal__aapl__pxrReserved__::PcpChanges::~PcpChanges((pxrInternal__aapl__pxrReserved__::PcpChanges *)__p);
  }
}

void sub_20C440F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

int *sub_20C440F5C(uint64_t a1, _DWORD **a2)
{
  sub_20C031044((uint64_t *)a1, *(int **)(a1 + 8), *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 3);
  sub_20C031044((uint64_t *)(a1 + 24), *(int **)(a1 + 32), a2[3], a2[4], ((char *)a2[4] - (char *)a2[3]) >> 3);
  sub_20C031044((uint64_t *)(a1 + 48), *(int **)(a1 + 56), a2[6], a2[7], ((char *)a2[7] - (char *)a2[6]) >> 3);
  sub_20C031044((uint64_t *)(a1 + 72), *(int **)(a1 + 80), a2[9], a2[10], ((char *)a2[10] - (char *)a2[9]) >> 3);
  return sub_20C031044((uint64_t *)(a1 + 96), *(int **)(a1 + 104), a2[12], a2[13], ((char *)a2[13] - (char *)a2[12]) >> 3);
}

void **sub_20C440FEC(uint64_t *a1, unint64_t a2)
{
  void **result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7[5];

  v4 = a1[2];
  result = (void **)(a1 + 2);
  if (a2 > (v4 - *a1) >> 5)
  {
    if (a2 >> 59)
      sub_20BDDF694();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_20BED2F10((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 32 * v6;
    sub_20C462D90(a1, v7);
    return sub_20C462F24(v7);
  }
  return result;
}

void sub_20C441068(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C462F24((void **)va);
  _Unwind_Resume(a1);
}

void **sub_20C44107C(uint64_t *a1, uint64_t a2)
{
  void **result;
  unint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void *v16[5];

  v6 = a1[2];
  result = (void **)(a1 + 2);
  v5 = v6;
  v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    v9 = ((uint64_t)v7 - *a1) >> 5;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 59)
      sub_20BDDF694();
    v11 = v5 - *a1;
    if (v11 >> 4 > v10)
      v10 = v11 >> 4;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFE0)
      v12 = 0x7FFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    v16[4] = result;
    v13 = (char *)sub_20BED2F10((uint64_t)result, v12);
    v14 = &v13[32 * v9];
    v16[0] = v13;
    v16[1] = v14;
    v16[3] = &v13[32 * v15];
    *(_OWORD *)v14 = *(_OWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *((_OWORD *)v14 + 1) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    v16[2] = v14 + 32;
    sub_20C462D90(a1, v16);
    v8 = (_OWORD *)a1[1];
    result = sub_20C462F24(v16);
  }
  else
  {
    *v7 = *(_OWORD *)a2;
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    v7[1] = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    v8 = v7 + 2;
    a1[1] = (uint64_t)(v7 + 2);
  }
  a1[1] = (uint64_t)v8;
  return result;
}

void sub_20C441174(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C462F24((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C441188(uint64_t a1)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;

  v2 = *(unsigned int **)(a1 + 24);
  if (v2)
  {
    v3 = v2 + 2;
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
      (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 8))(v2);
  }
  v6 = *(unsigned int **)(a1 + 8);
  if (v6)
  {
    v7 = v6 + 2;
    do
    {
      v8 = __ldxr(v7);
      v9 = v8 - 1;
    }
    while (__stlxr(v9, v7));
    if (!v9)
      (*(void (**)(unsigned int *))(*(_QWORD *)v6 + 8))(v6);
  }
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetDefiningSpecType(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, unsigned int **a3)
{
  pxrInternal__aapl__pxrReserved__::UsdPrimDefinition *PrimDefinition;
  uint64_t SpecType;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  int v8;
  uint64_t *v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  const pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v13;
  int v15;
  int v16;
  int v17;
  int v18;
  _QWORD v19[2];
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  const char *v23;
  uint64_t *v24;
  char *v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  char v29;

  if (!a2)
  {
    v19[0] = "usd/stage.cpp";
    v19[1] = "_GetDefiningSpecType";
    v20 = 5168;
    v21 = "SdfSpecType pxrInternal__aapl__pxrReserved__::UsdStage::_GetDefiningSpecType(Usd_PrimDataConstPtr, const TfToken &) const";
    LOBYTE(v22) = 0;
    if (!pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)v19, "primData", 0))
      return 0;
  }
  if (*a3
    || (v25 = "usd/stage.cpp",
        v26 = "_GetDefiningSpecType",
        v27 = 5168,
        v28 = "SdfSpecType pxrInternal__aapl__pxrReserved__::UsdStage::_GetDefiningSpecType(Usd_PrimDataConstPtr, const TfToken &) const",
        v29 = 0,
        SpecType = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v25, "!propName.IsEmpty()", 0) & 1) != 0))
  {
    PrimDefinition = (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition *)atomic_load((unint64_t *)(*((_QWORD *)a2 + 3) + 56));
    if (!PrimDefinition)
      PrimDefinition = (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition *)pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)a2 + 3));
    SpecType = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::GetSpecType(PrimDefinition, a3);
    if (!(_DWORD)SpecType)
    {
      PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(a2);
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v19, PrimIndex, 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v17);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v18);
      if (v20 != v22 || v21 != v23)
      {
        v8 = 0;
        do
        {
          v9 = v24;
          v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v24);
          v25 = (char *)v20;
          v26 = v21;
          Path = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v25);
          if (pxrInternal__aapl__pxrReserved__::SdfLayer::HasSpec(v10, Path))
          {
            if ((v8 & 1) == 0)
            {
              v25 = (char *)v20;
              v26 = v21;
              v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v25);
              pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v12, (const pxrInternal__aapl__pxrReserved__::TfToken *)a3, &v15);
              sub_20BFD3EBC(&v17, &v15);
              sub_20BFD3F10(&v18, &v16);
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
              sub_20BFD265C(&v15);
            }
            v13 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v9);
            SpecType = pxrInternal__aapl__pxrReserved__::SdfLayer::GetSpecType(v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v17);
            if ((_DWORD)SpecType)
              goto LABEL_17;
            v8 = 1;
          }
          v8 &= !pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v19);
        }
        while (v20 != v22 || v21 != v23);
      }
      SpecType = 0;
LABEL_17:
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
      sub_20BFD265C(&v17);
    }
  }
  return SpecType;
}

void sub_20C441444(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::ExportToString(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const char *a2, char a3)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;

  pxrInternal__aapl__pxrReserved__::UsdStage::Flatten(a1, a3, &v8);
  v4 = sub_20C0EEAF8((uint64_t *)&v8);
  v6 = pxrInternal__aapl__pxrReserved__::SdfLayer::ExportToString(v4, a2, v5);
  sub_20C103234(&v8);
  return v6;
}

void sub_20C4414AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::Flatten@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t *v4;
  const std::string *v5;
  uint64_t (*v6)(uint64_t *);
  char v7;
  pxrInternal__aapl__pxrReserved__::UsdObject *v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  char *v13;
  _QWORD *v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **v16;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  int IsDefined;
  unsigned int *v19;
  unsigned int v20;
  const char *v21;
  char *v22;
  std::string *v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t i;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v29;
  pxrInternal__aapl__pxrReserved__ *v30;
  uint64_t *UsdPrimAllPrimsPredicate;
  uint64_t *v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned int *v36;
  unsigned int v37;
  unsigned int v38;
  pxrInternal__aapl__pxrReserved__ *v39;
  uint64_t *v40;
  unsigned int *v41;
  unsigned int v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase **v49;
  std::string::size_type v50;
  uint64_t *v51;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v52;
  uint64_t RealPath;
  const char *v54;
  char *v55;
  uint64_t v56;
  const std::string::value_type *v57;
  std::string::size_type v58;
  std::string *v59;
  unsigned int *v60;
  unsigned int v61;
  unsigned int v62;
  pxrInternal__aapl__pxrReserved__::SdfPath *v63;
  uint64_t result;
  unsigned int *v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t *v68;
  _QWORD *v69;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  _QWORD *v77[2];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  int v83;
  int v84;
  uint64_t v85;
  pxrInternal__aapl__pxrReserved__ *v86;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v87;
  int v88;
  int v89;
  uint64_t v90;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **size;
  std::string *v92;
  uint64_t v93;
  int v94;
  __int16 v95;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **v96;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v97;
  uint64_t v98;
  uint64_t v99;
  std::string v100;
  unint64_t v101;
  char v102;

  v4 = (uint64_t *)((char *)this + 32);
  sub_20C1034E8(&v79, (uint64_t *)this + 4);
  v5 = (const std::string *)sub_20BDDC0E4(&v100, ".usda");
  v97 = 0;
  v98 = 0;
  v96 = &v97;
  pxrInternal__aapl__pxrReserved__::SdfLayer::CreateAnonymous(v5, (pxrInternal__aapl__pxrReserved__::TfToken *)&v96, (uint64_t *)&v78);
  sub_20BDE9D48((uint64_t)&v96, v97);
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v100.__r_.__value_.__l.__data_);
  v6 = sub_20BFD2F78(&v79);
  if (!(v7 & 1 | (unint64_t)v6))
  {
    v100.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp";
    v100.__r_.__value_.__l.__size_ = (std::string::size_type)"Flatten";
    v100.__r_.__value_.__r.__words[2] = 5630;
    v101 = (unint64_t)"SdfLayerRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Flatten(BOOL) const";
    v102 = 0;
    if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v100, "rootLayer", 0) & 1) == 0)
      goto LABEL_103;
  }
  if (v78
    || (v100.__r_.__value_.__r.__words[0] = (std::string::size_type)"usd/stage.cpp",
        v100.__r_.__value_.__l.__size_ = (std::string::size_type)"Flatten",
        v100.__r_.__value_.__r.__words[2] = 5634,
        v101 = (unint64_t)"SdfLayerRefPtr pxrInternal__aapl__pxrReserved__::UsdStage::Flatten(BOOL) const",
        v102 = 0,
        (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v100, "flatLayer", 0) & 1) != 0))
  {
    v68 = v4;
    v69 = a3;
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrototypes((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, (uint64_t *)&v96);
    v77[0] = 0;
    v77[1] = 0;
    v76 = (uint64_t *)v77;
    v8 = (pxrInternal__aapl__pxrReserved__::UsdObject *)v96;
    v9 = v97;
    if (v96 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v97)
    {
      v10 = 1;
      do
      {
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v86);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v86 + 1);
        sub_20C348EEC((uint64_t)v8, (int *)&v74);
        v11 = sub_20BFE4AF0((uint64_t)&v76, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v74);
        v14 = v11;
        if (v77 == v11)
        {
          pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"/Flattened_Prototype_%lu", v12, v13, v10, v68);
          pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(&size, &v100);
          if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v100.__r_.__value_.__l.__data_);
          sub_20BFD3EBC((int *)&v86, (int *)&size);
          sub_20BFD3F10((int *)&v86 + 1, (int *)&size + 1);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&size + 1);
          sub_20BFD265C(&size);
          pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(v8, v15, &size);
          while (1)
          {
            v16 = (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)sub_20C348E08((uint64_t *)&size);
            pxrInternal__aapl__pxrReserved__::UsdStage::GetPrimAtPath(v16, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v86, (uint64_t)&v100);
            IsDefined = pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v100, v17);
            if ((v101 & 7) != 0)
            {
              v19 = (unsigned int *)(v101 & 0xFFFFFFFFFFFFFFF8);
              do
                v20 = __ldxr(v19);
              while (__stlxr(v20 - 2, v19));
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v100.__r_.__value_.__r.__words[2] + 1);
            sub_20BFD265C(&v100.__r_.__value_.__r.__words[2]);
            if (v100.__r_.__value_.__l.__size_)
              sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v100.__r_.__value_.__l.__size_);
            ++v10;
            if (!IsDefined)
              break;
            pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"/Flattened_Prototype_%lu", v21, v22, v10);
            pxrInternal__aapl__pxrReserved__::SdfPath::SdfPath(&v72, &v100);
            if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v100.__r_.__value_.__l.__data_);
            sub_20BFD3EBC((int *)&v86, (int *)&v72);
            sub_20BFD3F10((int *)&v86 + 1, (int *)&v72 + 1);
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v72 + 1);
            sub_20BFD265C(&v72);
          }
          sub_20C452330(&v76, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v74, &v74, &v86);
          v23 = v92;
          if (v92)
          {
            v24 = (unsigned int *)&v92->__r_.__value_.__r.__words[1];
            do
            {
              v25 = __ldxr(v24);
              v26 = v25 - 1;
            }
            while (__stlxr(v26, v24));
            if (!v26)
              (*(void (**)(std::string *))(v23->__r_.__value_.__r.__words[0] + 8))(v23);
          }
        }
        else
        {
          sub_20C01A074((int *)&v86, (_DWORD *)v11 + 9);
          sub_20C01A0C8((int *)&v86 + 1, (_DWORD *)v14 + 10);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v74 + 1);
        sub_20BFD265C(&v74);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v86 + 1);
        sub_20BFD265C(&v86);
        v8 = (pxrInternal__aapl__pxrReserved__::UsdObject *)((char *)v8 + 32);
      }
      while (v8 != v9);
    }
    v100.__r_.__value_.__r.__words[0] = (std::string::size_type)&v96;
    sub_20C45FC78((void ***)&v100);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPrototypes((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)this, &v74);
    v27 = v74;
    for (i = v75; v27 != i; v27 += 32)
    {
      sub_20C1034E8(&v72, (uint64_t *)&v78);
      sub_20C348EEC(v27, (int *)&v100);
      v29 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C4523E4((uint64_t)&v76, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v100);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v100.__r_.__value_.__r.__words + 1);
      v30 = (pxrInternal__aapl__pxrReserved__ *)sub_20BFD265C(&v100);
      UsdPrimAllPrimsPredicate = pxrInternal__aapl__pxrReserved__::GetUsdPrimAllPrimsPredicate(v30);
      v32 = (uint64_t *)sub_20C37F5FC((uint64_t)&v100, v27, UsdPrimAllPrimsPredicate);
      sub_20C37ECB8(v32, (uint64_t)&v96);
      size = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v100.__r_.__value_.__l.__size_;
      v92 = &v100;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v93);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v93 + 1);
      v94 = 0;
      v95 = 0;
      while (v97 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v92
           || v96 != size
           || v98 != v93
           || (_DWORD)v99 != v94
           || BYTE4(v99) != v95
           || BYTE5(v99) != HIBYTE(v95))
      {
        sub_20C37ED84((uint64_t)&v96, (uint64_t)&v86);
        sub_20C348EEC((uint64_t)&v86, &v83);
        sub_20C348EEC(v27, &v81);
        pxrInternal__aapl__pxrReserved__::SdfPath::ReplacePrefix(&v85, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v83, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v81, v29, 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v82);
        sub_20BFD265C(&v81);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v84);
        sub_20BFD265C(&v83);
        sub_20C4422EC(&v86, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v72, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v85, &v76);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v85 + 1);
        sub_20BFD265C(&v85);
        if ((v90 & 7) != 0)
        {
          v33 = (unsigned int *)(v90 & 0xFFFFFFFFFFFFFFF8);
          do
            v34 = __ldxr(v33);
          while (__stlxr(v34 - 2, v33));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v89);
        sub_20BFD265C(&v88);
        if (v87)
          sub_20C35C614(v87);
        pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)&v96);
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v93 + 1);
      sub_20BFD265C(&v93);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v98 + 1);
      sub_20BFD265C(&v98);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v100.__r_.__value_.__r.__words[2] + 1);
      sub_20BFD265C(&v100.__r_.__value_.__r.__words[2]);
      v35 = v73;
      if (v73)
      {
        v36 = (unsigned int *)(v73 + 8);
        do
        {
          v37 = __ldxr(v36);
          v38 = v37 - 1;
        }
        while (__stlxr(v38, v36));
        if (!v38)
          (*(void (**)(uint64_t))(*(_QWORD *)v35 + 8))(v35);
      }
    }
    v100.__r_.__value_.__r.__words[0] = (std::string::size_type)&v74;
    sub_20C45FC78((void ***)&v100);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v96);
    v40 = pxrInternal__aapl__pxrReserved__::GetUsdPrimAllPrimsPredicate(v39);
    sub_20C37F5FC((uint64_t)&v100, (uint64_t)&v96, v40);
    if ((v99 & 7) != 0)
    {
      v41 = (unsigned int *)(v99 & 0xFFFFFFFFFFFFFFF8);
      do
        v42 = __ldxr(v41);
      while (__stlxr(v42 - 2, v41));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v98 + 1);
    sub_20BFD265C(&v98);
    if (v97)
      sub_20C35C614(v97);
    sub_20C37ECB8((uint64_t *)&v100, (uint64_t)&v96);
    size = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)v100.__r_.__value_.__l.__size_;
    v92 = &v100;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v93);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v93 + 1);
    v94 = 0;
    v95 = 0;
    while (v97 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v92
         || v96 != size
         || v98 != v93
         || (_DWORD)v99 != v94
         || BYTE4(v99) != v95
         || BYTE5(v99) != HIBYTE(v95))
    {
      sub_20C37ED84((uint64_t)&v96, (uint64_t)&v86);
      sub_20C1034E8(&v74, (uint64_t *)&v78);
      sub_20C348EEC((uint64_t)&v86, (int *)&v72);
      sub_20C4422EC(&v86, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v74, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v72, &v76);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v72 + 1);
      sub_20BFD265C(&v72);
      v43 = v75;
      if (v75)
      {
        v44 = (unsigned int *)(v75 + 8);
        do
        {
          v45 = __ldxr(v44);
          v46 = v45 - 1;
        }
        while (__stlxr(v46, v44));
        if (!v46)
          (*(void (**)(uint64_t))(*(_QWORD *)v43 + 8))(v43);
      }
      if ((v90 & 7) != 0)
      {
        v47 = (unsigned int *)(v90 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v89);
      sub_20BFD265C(&v88);
      if (v87)
        sub_20C35C614(v87);
      pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)&v96);
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v93 + 1);
    sub_20BFD265C(&v93);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v98 + 1);
    sub_20BFD265C(&v98);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v100.__r_.__value_.__r.__words[2] + 1);
    sub_20BFD265C(&v100.__r_.__value_.__r.__words[2]);
    if ((a2 & 1) != 0)
    {
      v49 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase **)sub_20C0EEAF8((uint64_t *)&v78);
      pxrInternal__aapl__pxrReserved__::SdfLayer::GetDocumentation(v49, (uint64_t)&v100);
      v50 = HIBYTE(v100.__r_.__value_.__r.__words[2]);
      if ((v100.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v50 = v100.__r_.__value_.__l.__size_;
      if (v50)
        std::string::append(&v100, "\n\n");
      v51 = sub_20C1034E8((uint64_t *)&size, v68);
      v52 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v51);
      RealPath = pxrInternal__aapl__pxrReserved__::SdfLayer::GetRealPath(v52);
      if (*(char *)(RealPath + 23) >= 0)
        v56 = RealPath;
      else
        v56 = *(_QWORD *)RealPath;
      pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"Generated from Composed Stage of root layer %s\n", v54, v55, v56);
      if (v98 >= 0)
        v57 = (const std::string::value_type *)&v96;
      else
        v57 = (const std::string::value_type *)v96;
      if (v98 >= 0)
        v58 = HIBYTE(v98);
      else
        v58 = (std::string::size_type)v97;
      std::string::append(&v100, v57, v58);
      if (SHIBYTE(v98) < 0)
        operator delete(v96);
      v59 = v92;
      if (v92)
      {
        v60 = (unsigned int *)&v92->__r_.__value_.__r.__words[1];
        do
        {
          v61 = __ldxr(v60);
          v62 = v61 - 1;
        }
        while (__stlxr(v62, v60));
        if (!v62)
          (*(void (**)(std::string *))(v59->__r_.__value_.__r.__words[0] + 8))(v59);
      }
      v63 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C0EEAF8((uint64_t *)&v78);
      pxrInternal__aapl__pxrReserved__::SdfLayer::SetDocumentation(v63, (uint64_t)&v100);
      if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v100.__r_.__value_.__l.__data_);
    }
    *v69 = v78;
    v78 = 0;
    sub_20BFE4CE8((uint64_t)&v76, v77[0]);
  }
  else
  {
LABEL_103:
    *a3 = 0;
  }
  sub_20C103234(&v78);
  result = v80;
  if (v80)
  {
    v65 = (unsigned int *)(v80 + 8);
    do
    {
      v66 = __ldxr(v65);
      v67 = v66 - 1;
    }
    while (__stlxr(v67, v65));
    if (!v67)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C441E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a27,uint64_t a28,uint64_t a29)
{
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;

  sub_20C103234(&a27);
  v30 = a29;
  if (a29)
  {
    v31 = (unsigned int *)(a29 + 8);
    do
    {
      v32 = __ldxr(v31);
      v33 = v32 - 1;
    }
    while (__stlxr(v33, v31));
    if (!v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::Export(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const char *a2, char a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v7;
  void *__p[2];
  uint64_t v10;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v11;

  pxrInternal__aapl__pxrReserved__::UsdStage::Flatten(a1, a3, &v11);
  v6 = (uint64_t *)sub_20C0EEAF8((uint64_t *)&v11);
  __p[0] = 0;
  __p[1] = 0;
  v10 = 0;
  v7 = pxrInternal__aapl__pxrReserved__::SdfLayer::Export(v6, a2, (char *)__p, a4);
  if (SHIBYTE(v10) < 0)
    operator delete(__p[0]);
  sub_20C103234(&v11);
  return v7;
}

void sub_20C4422C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a15)
{
  if (a14 < 0)
    operator delete(__p);
  sub_20C103234(&a15);
  _Unwind_Resume(a1);
}

void *sub_20C4422EC(pxrInternal__aapl__pxrReserved__ **a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, _QWORD *a4)
{
  void *v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *v9;
  void **v10;
  void *v11;
  void *v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v13;
  void *v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v16;
  pxrInternal__aapl__pxrReserved__::TfToken *Name;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  pxrInternal__aapl__pxrReserved__ *v19;
  void *v20;
  void *v21;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v22;
  _DWORD *v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int **v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  void **p_p;
  uint64_t v33;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v34;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v35;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v36;
  _BOOL4 HasAuthoredValue;
  unsigned int *v38;
  unsigned int v39;
  _QWORD **v41;
  double v42[2];
  void *v43;
  pxrInternal__aapl__pxrReserved__::UsdProperty *v44;
  uint64_t v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  int v48;
  int v49;
  unsigned int *v50;
  void *__p;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v52;
  int v53;
  int v54;
  _QWORD v55[3];
  _QWORD **v56[2];

  v56[1] = *(_QWORD ***)MEMORY[0x24BDAC8D0];
  v50 = 0;
  if ((sub_20C436BD0((uint64_t)a1, a2) & 1) == 0)
    return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v8, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v50);
  sub_20C348EEC((uint64_t)a1, (int *)&__p);
  v10 = (void **)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v9);
  v11 = __p;
  v12 = *v10;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&__p + 1);
  sub_20BFD265C(&__p);
  if (v11 == v12)
  {
    v13 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)a2);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetPseudoRoot(v13, &__p);
    pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(&v50, (unsigned int **)&__p);
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v14, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
  }
  else
  {
    v16 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)a2);
    pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath(a3, &v46);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetPrimAtPath(v16, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, &v43);
    Name = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfPath::GetName(a3);
    v19 = a1[1];
    if (!v19 || (*((_BYTE *)v19 + 57) & 8) != 0)
      Name = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(a1[1], v18);
    if ((**((_QWORD **)v19 + 3) & 0xFFFFFFFFFFFFFFF8) == 0)
      pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Name);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::New((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v43, 1, &__p);
    pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(&v50, (unsigned int **)&__p);
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v20, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v21, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v43);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v46 + 1);
    sub_20BFD265C(&v46);
  }
  if (sub_20C452420((uint64_t)a1, v15))
  {
    pxrInternal__aapl__pxrReserved__::UsdPrim::GetPrototype((pxrInternal__aapl__pxrReserved__::UsdPrim *)a1, v22, (uint64_t)&__p);
    sub_20C348EEC((uint64_t)&__p, (int *)&v43);
    v23 = (_DWORD *)sub_20C4523E4((uint64_t)a4, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v43);
    sub_20BFD6E54(&v48, v23);
    sub_20BFD6EA4(&v49, v23 + 1);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    sub_20BFD265C(&v43);
    if ((v55[0] & 7) != 0)
    {
      v24 = (unsigned int *)(v55[0] & 0xFFFFFFFFFFFFFFF8);
      do
        v25 = __ldxr(v24);
      while (__stlxr(v25 - 2, v24));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
    sub_20BFD265C(&v53);
    if (v52)
      sub_20C35C614(v52);
    v26 = (unsigned int **)sub_20C0B0CA4((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v50);
    pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetReferenceList(v26, &v46);
    v43 = 0;
    v44 = 0;
    v45 = 0;
    pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset(v42, 0.0, 1.0);
    v41 = 0;
    pxrInternal__aapl__pxrReserved__::SdfReference::SdfReference(&__p, &v43, &v48, v42, &v41);
    sub_20C452458(&v46, (unsigned __int8 *)&__p);
    sub_20BF49F14(v56, 0);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v55 + 1);
    sub_20BFD265C(v55);
    if (SHIBYTE(v54) < 0)
      operator delete(__p);
    sub_20BF49F14(&v41, 0);
    if (SHIBYTE(v45) < 0)
      operator delete(v43);
    v27 = v47;
    if (v47)
    {
      p_shared_owners = (unint64_t *)&v47->__shared_owners_;
      do
        v29 = __ldaxr(p_shared_owners);
      while (__stlxr(v29 - 1, p_shared_owners));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
      }
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
    sub_20BFD265C(&v48);
  }
  v30 = v50;
  __p = v50;
  if (v50)
  {
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 + 1, v30));
  }
  sub_20C452568((pxrInternal__aapl__pxrReserved__::UsdObject *)a1, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&__p);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&__p);
  v55[0] = 0;
  pxrInternal__aapl__pxrReserved__::UsdPrim::GetProperties((uint64_t)a1, (uint64_t)&__p, (uint64_t *)&v43);
  p_p = (void **)v55[0];
  if ((void **)v55[0] == &__p)
  {
    v33 = 4;
    p_p = &__p;
    goto LABEL_32;
  }
  if (v55[0])
  {
    v33 = 5;
LABEL_32:
    (*((void (**)(void))*p_p + v33))();
  }
  v34 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)v43;
  v35 = v44;
  if (v43 != v44)
  {
    do
    {
      if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsAuthored(v34) & 1) != 0)
        goto LABEL_35;
      if (*(_DWORD *)v34 == 3)
      {
        sub_20C3AD760((uint64_t)v34, (uint64_t)&__p);
        HasAuthoredValue = pxrInternal__aapl__pxrReserved__::UsdAttribute::HasAuthoredValue((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&__p);
        if ((v55[0] & 7) != 0)
        {
          v38 = (unsigned int *)(v55[0] & 0xFFFFFFFFFFFFFFF8);
          do
            v39 = __ldxr(v38);
          while (__stlxr(v39 - 2, v38));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
        sub_20BFD265C(&v53);
        if (v52)
          sub_20C35C614(v52);
        if (HasAuthoredValue)
        {
LABEL_35:
          v36 = sub_20C398E78(v34);
          pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset((double *)&__p, 0.0, 1.0);
          sub_20C44378C((int *)v34, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v50, v36, a4, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&__p);
        }
      }
      v34 = (pxrInternal__aapl__pxrReserved__::UsdProperty *)((char *)v34 + 32);
    }
    while (v34 != v35);
  }
  __p = &v43;
  sub_20C37FA04((void ***)&__p);
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v8, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v50);
}

void sub_20C442758(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20,int a21,__int16 a22,char a23,char a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_FlattenProperty(const pxrInternal__aapl__pxrReserved__::UsdProperty *a1@<X1>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X2>, unsigned int **a3@<X3>, uint64_t a4@<X8>)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v12;
  int v13;
  uint64_t *v14;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v15;
  const char *v16;
  const char *p_p;
  unsigned int *v18;
  unsigned int v19;
  const char *v20;
  int v21;
  void **v22;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v23;
  void **v24;
  const char *v25;
  unsigned int *v26;
  unsigned int v27;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  pxrInternal__aapl__pxrReserved__::UsdStage *v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  void *v34;
  int v35;
  uint64_t **v36;
  pxrInternal__aapl__pxrReserved__::TfToken *Properties;
  void *v38;
  unsigned int **v39;
  unsigned int *v40;
  unsigned int v41;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v42;
  _BOOL4 v43;
  unsigned int *v44;
  unsigned int v45;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t **v54;
  pxrInternal__aapl__pxrReserved__::TfToken *v55;
  unsigned int *v56;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v57;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v58;
  unsigned int *v59;
  unsigned int v60;
  _QWORD *v61;
  pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *i;
  pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *v63;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v64;
  char *v65;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **j;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v67;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v68;
  uint64_t *v69;
  unsigned int *v70;
  unsigned int v71;
  unsigned int *v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int *v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int *v79;
  unsigned int v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD v83[2];
  pxrInternal__aapl__pxrReserved__::SdfLayer ***v84[2];
  std::type_info_vtbl *v85;
  _QWORD v86[2];
  _BYTE v87[24];
  unint64_t v88;
  char v89;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v90;
  _BYTE v91[8];
  void *__p;
  _QWORD *v93;
  uint64_t v94;
  void *v95;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v96;
  int v97;
  int v98;
  unint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t v104;
  pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *v105;
  _BYTE v106[8];
  uint64_t v107;
  std::type_info v108;
  uint64_t v109;

  v109 = *MEMORY[0x24BDAC8D0];
  if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a1, a1) & 1) != 0)
  {
    if ((pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined(a2, v9) & 1) != 0)
    {
      v100 = 0uLL;
      v101 = 0;
      pxrInternal__aapl__pxrReserved__::UsdPrim::GetProperty(a2, a3, (uint64_t)&v95);
      if (pxrInternal__aapl__pxrReserved__::UsdProperty::IsDefined((pxrInternal__aapl__pxrReserved__::UsdProperty *)&v95, v11))
      {
        if (*(_DWORD *)a1 == 4)
        {
          if ((_DWORD)v95 != 4)
          {
LABEL_7:
            *(_QWORD *)v87 = "usd/stage.cpp";
            *(_QWORD *)&v87[8] = "_FlattenProperty";
            *(_QWORD *)&v87[16] = 5697;
            v88 = (unint64_t)"UsdProperty pxrInternal__aapl__pxrReserved__::UsdStage::_FlattenProperty(const UsdPr"
                                    "operty &, const UsdPrim &, const TfToken &)";
            v89 = 0;
            pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&v102, a1, v12);
            v13 = SHIBYTE(v104);
            v14 = v102;
            pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&__p, (pxrInternal__aapl__pxrReserved__ *)&v95, v15);
            v16 = (const char *)&v102;
            if (v13 < 0)
              v16 = (const char *)v14;
            if (v94 >= 0)
              p_p = (const char *)&__p;
            else
              p_p = (const char *)__p;
            pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v87, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot flatten %s to %s because they are different property types", v16, p_p);
            if (SHIBYTE(v94) < 0)
              operator delete(__p);
            if (SHIBYTE(v104) < 0)
              operator delete(v102);
            *(_DWORD *)a4 = 2;
            *(_QWORD *)(a4 + 8) = 0;
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
            *(_QWORD *)(a4 + 24) = 0;
            if ((v99 & 7) != 0)
            {
              v18 = (unsigned int *)(v99 & 0xFFFFFFFFFFFFFFF8);
              do
                v19 = __ldxr(v18);
              while (__stlxr(v19 - 2, v18));
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v98);
LABEL_119:
            sub_20BFD265C(&v97);
            if (v96)
              sub_20C35C614(v96);
            *(_QWORD *)v87 = &v100;
            sub_20BFE69E4((void ***)v87);
            return;
          }
        }
        else if (*(_DWORD *)a1 == 3 && (_DWORD)v95 != 3)
        {
          goto LABEL_7;
        }
        pxrInternal__aapl__pxrReserved__::UsdProperty::GetPropertyStack((pxrInternal__aapl__pxrReserved__ **)&v95, v12, (uint64_t)v87, NAN);
        sub_20C463F04((void **)&v100);
        v100 = *(_OWORD *)v87;
        v101 = *(_QWORD *)&v87[16];
        memset(v87, 0, sizeof(v87));
        v102 = (uint64_t *)v87;
        sub_20BFE69E4((void ***)&v102);
      }
      if ((v99 & 7) != 0)
      {
        v26 = (unsigned int *)(v99 & 0xFFFFFFFFFFFFFFF8);
        do
          v27 = __ldxr(v26);
        while (__stlxr(v27 - 2, v26));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v98);
      sub_20BFD265C(&v97);
      if (v96)
        sub_20C35C614(v96);
      LODWORD(v95) = 2;
      v96 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v97);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v98);
      v99 = 0;
      pxrInternal__aapl__pxrReserved__::SdfChangeBlock::SdfChangeBlock((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v91);
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a2, v28, v87);
      v29 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08((uint64_t *)v87);
      pxrInternal__aapl__pxrReserved__::UsdStage::_CreatePrimSpecForEditing(v29, a2, &v90);
      v30 = *(_QWORD *)&v87[8];
      if (*(_QWORD *)&v87[8])
      {
        v31 = (unsigned int *)(*(_QWORD *)&v87[8] + 8);
        do
        {
          v32 = __ldxr(v31);
          v33 = v32 - 1;
        }
        while (__stlxr(v33, v31));
        if (!v33)
          (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
      }
      if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v90))
      {
        *(_DWORD *)a4 = 2;
        *(_QWORD *)(a4 + 8) = 0;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
        *(_QWORD *)(a4 + 24) = 0;
        v35 = 1;
LABEL_112:
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v34, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v90);
        sub_20BFD2190((pxrInternal__aapl__pxrReserved__::SdfChangeBlock *)v91);
        if (v35)
        {
          if ((v99 & 7) != 0)
          {
            v75 = (unsigned int *)(v99 & 0xFFFFFFFFFFFFFFF8);
            do
              v76 = __ldxr(v75);
            while (__stlxr(v76 - 2, v75));
          }
        }
        else
        {
          *(_DWORD *)a4 = (_DWORD)v95;
          *(_QWORD *)(a4 + 8) = v96;
          v96 = 0;
          sub_20BFD38A4((_DWORD *)(a4 + 16), &v97);
          sub_20BFD38DC((_DWORD *)(a4 + 20), &v98);
          *(_QWORD *)(a4 + 24) = v99;
          v99 = 0;
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v98);
        goto LABEL_119;
      }
      v36 = (uint64_t **)sub_20C0B0CA4(&v90);
      Properties = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetProperties(v36, (uint64_t)v87);
      if (((unint64_t)*a3 & 0xFFFFFFFFFFFFFFF8) == 0)
        pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Properties);
      sub_20C444044((uint64_t *)v87, (unsigned int **)&v102);
      sub_20BFE6AEC((uint64_t)v87);
      if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v102) & 1) == 0)
      {
        v39 = sub_20C4436F8((unsigned int **)v100, *((unsigned int ***)&v100 + 1), &v102);
        sub_20C44365C((uint64_t)&v100, v39, *((unsigned int ***)&v100 + 1));
        sub_20C35C4F8((uint64_t)v87, (uint64_t *)a1 + 1, (_DWORD *)a1 + 4);
        if (*(_DWORD *)v87 == *(_DWORD *)a2
          && *(_OWORD *)&v87[8] == *(_OWORD *)((char *)a2 + 8)
          && (v88 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFF8))
        {
          v77 = *(_QWORD *)sub_20C398E78(a1);
          v78 = *a3;
          if ((v88 & 7) != 0)
          {
            v79 = (unsigned int *)(v88 & 0xFFFFFFFFFFFFFFF8);
            do
              v80 = __ldxr(v79);
            while (__stlxr(v80 - 2, v79));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v87[20]);
          v81 = v77 & 0xFFFFFFFFFFFFFFF8;
          v82 = (unint64_t)v78 & 0xFFFFFFFFFFFFFFF8;
          sub_20BFD265C(&v87[16]);
          if (*(_QWORD *)&v87[8])
            sub_20C35C614(*(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v87[8]);
          if (v81 == v82)
            goto LABEL_60;
        }
        else
        {
          if ((v88 & 7) != 0)
          {
            v40 = (unsigned int *)(v88 & 0xFFFFFFFFFFFFFFF8);
            do
              v41 = __ldxr(v40);
            while (__stlxr(v41 - 2, v40));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v87[20]);
          sub_20BFD265C(&v87[16]);
          if (*(_QWORD *)&v87[8])
            sub_20C35C614(*(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v87[8]);
        }
        v42 = sub_20C0B0CA4(&v90);
        pxrInternal__aapl__pxrReserved__::SdfPrimSpec::RemoveProperty(v42, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v102);
      }
LABEL_60:
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v38, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v102);
      v93 = 0;
      v94 = 0;
      __p = &v93;
      sub_20C35C4F8((uint64_t)v87, (uint64_t *)a1 + 1, (_DWORD *)a1 + 4);
      v43 = *(_DWORD *)v87 != *(_DWORD *)a2
         || *(_QWORD *)&v87[8] != *((_QWORD *)a2 + 1)
         || *(_QWORD *)&v87[16] != *((_QWORD *)a2 + 2)
         || (v88 & 0xFFFFFFFFFFFFFFF8) != (*((_QWORD *)a2 + 3) & 0xFFFFFFFFFFFFFFF8);
      if ((v88 & 7) != 0)
      {
        v44 = (unsigned int *)(v88 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v87[20]);
      sub_20BFD265C(&v87[16]);
      if (*(_QWORD *)&v87[8])
        sub_20C35C614(*(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v87[8]);
      if (v43)
      {
        sub_20C348EEC((uint64_t)a2, (int *)&v102);
        *(_QWORD *)v87 = sub_20C3734F4((uint64_t)a1);
        v47 = sub_20C0E4490((uint64_t **)&__p, *(pxrInternal__aapl__pxrReserved__::SdfPath **)v87, (uint64_t)&unk_20CAC184C, (_DWORD **)v87);
        sub_20BFD3EBC((int *)v47 + 9, (int *)&v102);
        sub_20BFD3F10((int *)v47 + 10, (int *)&v102 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v102 + 1);
        sub_20BFD265C(&v102);
      }
      pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a2, v46, v87);
      v48 = sub_20C348E08((uint64_t *)v87);
      v86[0] = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(v48 + 104));
      v86[1] = v49;
      v50 = *(_QWORD *)&v87[8];
      if (*(_QWORD *)&v87[8])
      {
        v51 = (unsigned int *)(*(_QWORD *)&v87[8] + 8);
        do
        {
          v52 = __ldxr(v51);
          v53 = v52 - 1;
        }
        while (__stlxr(v53, v51));
        if (!v53)
          (*(void (**)(uint64_t))(*(_QWORD *)v50 + 8))(v50);
      }
      sub_20C44378C((int *)a1, &v90, a3, &__p, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v86);
      v54 = (uint64_t **)sub_20C0B0CA4(&v90);
      v55 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetProperties(v54, (uint64_t)v87);
      if (((unint64_t)*a3 & 0xFFFFFFFFFFFFFFF8) == 0)
        pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v55);
      sub_20C444044((uint64_t *)v87, (unsigned int **)&v85);
      sub_20BFE6AEC((uint64_t)v87);
      if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v85))
      {
        *(_DWORD *)a4 = 2;
        *(_QWORD *)(a4 + 8) = 0;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
        *(_QWORD *)(a4 + 24) = 0;
        v35 = 1;
      }
      else
      {
        pxrInternal__aapl__pxrReserved__::UsdPrim::GetProperty(a2, a3, (uint64_t)v87);
        LODWORD(v95) = *(_DWORD *)v87;
        v57 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v87[8];
        *(_QWORD *)&v87[8] = 0;
        v58 = v96;
        v96 = v57;
        if (v58)
          sub_20C35C614(v58);
        sub_20BFD3EBC(&v97, (int *)&v87[16]);
        sub_20BFD3F10(&v98, (int *)&v87[20]);
        if ((v99 & 7) != 0)
        {
          v59 = (unsigned int *)(v99 & 0xFFFFFFFFFFFFFFF8);
          do
            v60 = __ldxr(v59);
          while (__stlxr(v60 - 2, v59));
        }
        v99 = v88;
        v88 = 0;
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v87[20]);
        sub_20BFD265C(&v87[16]);
        if (*(_QWORD *)&v87[8])
          sub_20C35C614(*(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v87[8]);
        pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty(a1, (uint64_t)v84);
        pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v95, (uint64_t)v83);
        if (v84[1])
        {
          pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::ListMetadataFields(v84, (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry **)v87);
          v61 = sub_20C453400(*(_QWORD **)v87, *(_QWORD **)&v87[8], (uint64_t (*)(_QWORD *))sub_20C4534B4);
          sub_20C117D14((uint64_t)v87, v61, *(_QWORD **)&v87[8]);
          v103 = 0;
          v104 = 0;
          v102 = (uint64_t *)&v103;
          v63 = *(pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry **)&v87[8];
          for (i = *(pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry **)v87;
                i != v63;
                i = (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *)((char *)i + 8))
          {
            v64 = sub_20BFE6874((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v85);
            if ((pxrInternal__aapl__pxrReserved__::SdfSpec::HasField(v64, i) & 1) == 0)
            {
              v108.__type_name = 0;
              v107 = 0;
              sub_20C453584((uint64_t)v84, i, (pxrInternal__aapl__pxrReserved__::VtValue *)&v108);
              if (v83[1]
                && sub_20C453584((uint64_t)v83, i, (pxrInternal__aapl__pxrReserved__::VtValue *)v106)
                && pxrInternal__aapl__pxrReserved__::SdfUnregisteredValue::operator==((pxrInternal__aapl__pxrReserved__::VtValue *)v106, &v108, v65))
              {
                v67 = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)*((_QWORD *)&v100 + 1);
                for (j = (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)v100; j != v67; ++j)
                {
                  v68 = sub_20BFE6874(j);
                  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::HasInfo((pxrInternal__aapl__pxrReserved__::SdfSpec *)v68, i) & 1) != 0)goto LABEL_98;
                }
              }
              else
              {
LABEL_98:
                v105 = i;
                v69 = sub_20C463C74(&v102, i, (uint64_t)&unk_20CAC184C, (uint64_t **)&v105);
                sub_20BFD3C3C(v69 + 5, &v108);
              }
              sub_20BF4C2D8((uint64_t)v106);
              sub_20BF4C2D8((uint64_t)&v108);
            }
          }
          v70 = (unsigned int *)v85;
          v108.__vftable = v85;
          if (v85)
          {
            do
              v71 = __ldaxr(v70);
            while (__stlxr(v71 + 1, v70));
          }
          sub_20C452980((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v108, &v102);
          pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&v108);
          sub_20C3A3BA4((uint64_t)&v102, v103);
          v102 = (uint64_t *)v87;
          sub_20BEEB2B8((void ***)&v102);
        }
        if ((v83[0] & 7) != 0)
        {
          v72 = (unsigned int *)(v83[0] & 0xFFFFFFFFFFFFFFF8);
          do
            v73 = __ldxr(v72);
          while (__stlxr(v73 - 2, v72));
        }
        v56 = (unsigned int *)v84[0];
        if (((uint64_t)v84[0] & 7) != 0)
        {
          v56 = (unsigned int *)((unint64_t)v84[0] & 0xFFFFFFFFFFFFFFF8);
          do
            v74 = __ldxr(v56);
          while (__stlxr(v74 - 2, v56));
        }
        v35 = 0;
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v56, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v85);
      sub_20BFE4CE8((uint64_t)&__p, v93);
      goto LABEL_112;
    }
    *(_QWORD *)v87 = "usd/stage.cpp";
    *(_QWORD *)&v87[8] = "_FlattenProperty";
    *(_QWORD *)&v87[16] = 5683;
    v88 = (unint64_t)"UsdProperty pxrInternal__aapl__pxrReserved__::UsdStage::_FlattenProperty(const UsdProperty &"
                            ", const UsdPrim &, const TfToken &)";
    v89 = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&v95, a1, v10);
    v21 = SHIBYTE(v98);
    v22 = (void **)v95;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&v102, a2, v23);
    v24 = &v95;
    if (v21 < 0)
      v24 = v22;
    if (v104 >= 0)
      v25 = (const char *)&v102;
    else
      v25 = (const char *)v102;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v87, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot flatten property <%s> to invalid %s", (const char *)v24, v25);
    if (SHIBYTE(v104) < 0)
      operator delete(v102);
  }
  else
  {
    *(_QWORD *)v87 = "usd/stage.cpp";
    *(_QWORD *)&v87[8] = "_FlattenProperty";
    *(_QWORD *)&v87[16] = 5676;
    v88 = (unint64_t)"UsdProperty pxrInternal__aapl__pxrReserved__::UsdStage::_FlattenProperty(const UsdProperty &"
                            ", const UsdPrim &, const TfToken &)";
    v89 = 0;
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)&v95, a1, v9);
    if (v98 >= 0)
      v20 = (const char *)&v95;
    else
      v20 = (const char *)v95;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v87, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot flatten invalid property <%s>", v20);
  }
  if (SHIBYTE(v98) < 0)
    operator delete(v95);
  *(_DWORD *)a4 = 2;
  *(_QWORD *)(a4 + 8) = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 16));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)(a4 + 20));
  *(_QWORD *)(a4 + 24) = 0;
}

void sub_20C4433B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,int a31,__int16 a32,char a33,char a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  if (a2)
    sub_20BDC12F4(exception_object);
  _Unwind_Resume(exception_object);
}

unsigned int **sub_20C44365C(uint64_t a1, unsigned int **a2, unsigned int **a3)
{
  uint64_t v5;
  unsigned int **v6;
  unsigned int **v7;
  uint64_t v8;
  unsigned int **v9;

  if (a2 != a3)
  {
    v5 = (char *)a3 - (char *)a2;
    v6 = a3;
    v7 = *(unsigned int ***)(a1 + 8);
    if (a3 == v7)
    {
      v9 = a2;
    }
    else
    {
      v8 = v5 >> 3;
      v9 = a2;
      do
      {
        pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(v9, &v9[v8]);
        ++v9;
        v5 = (uint64_t)&v9[v8];
      }
      while (&v9[v8] != v7);
      v6 = *(unsigned int ***)(a1 + 8);
    }
    while (v6 != v9)
      v6 = (unsigned int **)pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((void *)v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v6 - 1));
    *(_QWORD *)(a1 + 8) = v9;
  }
  return a2;
}

unsigned int **sub_20C4436F8(unsigned int **a1, unsigned int **a2, _QWORD *a3)
{
  unsigned int **v5;
  unsigned int **i;

  if (a1 == a2)
  {
LABEL_5:
    v5 = a2;
  }
  else
  {
    v5 = a1;
    while (!pxrInternal__aapl__pxrReserved__::SdfSpec::operator==(v5, a3))
    {
      if (++v5 == a2)
        goto LABEL_5;
    }
  }
  if (v5 != a2)
  {
    for (i = v5 + 1; i != a2; ++i)
    {
      if (!pxrInternal__aapl__pxrReserved__::SdfSpec::operator==(i, a3))
        pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(v5++, i);
    }
  }
  return v5;
}

void sub_20C44378C(int *a1, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a2, _QWORD *a3, _QWORD *a4, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a5)
{
  const char *Text;
  char *v11;
  uint64_t **v12;
  pxrInternal__aapl__pxrReserved__::TfToken *Relationships;
  uint64_t **v14;
  pxrInternal__aapl__pxrReserved__::TfToken *Attributes;
  pxrInternal__aapl__pxrReserved__::TfToken *IsDormant;
  uint64_t *EmptyString;
  pxrInternal__aapl__pxrReserved__::TfToken *v18;
  uint64_t *v19;
  void *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int **v23;
  unint64_t *p_shared_owners;
  unint64_t v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  void *v32;
  unsigned int *v33;
  unsigned int v34;
  void *v35;
  unint64_t v36;
  const char *v37;
  unsigned int *v38;
  unsigned int v39;
  _BOOL4 BracketingTimeSamples;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v42;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v43;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v44;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v45;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v46;
  unsigned int **v47;
  unint64_t *v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  void *v56;
  unsigned int *v57;
  unsigned int v58;
  void **v59;
  std::__shared_weak_count *v60;
  BOOL v61;
  double v62;
  double v63;
  unsigned int *v64;
  _BYTE v65[8];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v66;
  int v67;
  int v68;
  uint64_t v69;
  char **p_TypeName;
  std::__shared_weak_count *v71;
  int v72;
  char *TypeName;
  unint64_t v74;
  uint64_t v75;
  const char *v76;
  char v77;
  uint64_t v78;

  v78 = *MEMORY[0x24BDAC8D0];
  if (*a1 == 4)
  {
    sub_20C3AD860((uint64_t)a1, (uint64_t)v65);
    v12 = (uint64_t **)sub_20C0B0CA4(a2);
    Relationships = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetRelationships(v12, (uint64_t)&TypeName);
    if ((*a3 & 0xFFFFFFFFFFFFFFF8) == 0)
      pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Relationships);
    sub_20C4532B8((uint64_t *)&TypeName, &v64);
    sub_20C453368((uint64_t)&TypeName);
    IsDormant = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64);
    if ((_DWORD)IsDormant)
    {
      if ((*a3 & 0xFFFFFFFFFFFFFFF8) != 0)
        EmptyString = (uint64_t *)((*a3 & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(IsDormant);
      pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec::New(a2, (uint64_t)EmptyString, 0, 0, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&TypeName);
      pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(&v64, (unsigned int **)&TypeName);
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v20, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&TypeName);
    }
    v21 = v64;
    TypeName = (char *)v64;
    if (v64)
    {
      do
        v22 = __ldaxr(v21);
      while (__stlxr(v22 + 1, v21));
    }
    sub_20C452568((pxrInternal__aapl__pxrReserved__::UsdObject *)v65, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&TypeName);
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&TypeName);
    TypeName = 0;
    v74 = 0;
    v75 = 0;
    pxrInternal__aapl__pxrReserved__::UsdRelationship::GetTargets((uint64_t)v65, (uint64_t *)&TypeName);
    if (TypeName != (char *)v74)
    {
      sub_20C452F44((int **)&TypeName, a4);
      sub_20C453004(a1, (int **)&TypeName);
      v23 = (unsigned int **)sub_20C0B22EC((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64);
      pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec::GetTargetPathList(v23, &v59);
      p_TypeName = (char **)v59;
      v71 = v60;
      if (v60)
      {
        p_shared_owners = (unint64_t *)&v60->__shared_owners_;
        do
          v25 = __ldxr(p_shared_owners);
        while (__stxr(v25 + 1, p_shared_owners));
      }
      v72 = 0;
      sub_20C3619E0((unsigned int *)&p_TypeName, &TypeName);
      v26 = v71;
      if (v71)
      {
        v27 = (unint64_t *)&v71->__shared_owners_;
        do
          v28 = __ldaxr(v27);
        while (__stlxr(v28 - 1, v27));
        if (!v28)
        {
          ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
          std::__shared_weak_count::__release_weak(v26);
        }
      }
      v29 = v60;
      if (v60)
      {
        v30 = (unint64_t *)&v60->__shared_owners_;
        do
          v31 = __ldaxr(v30);
        while (__stlxr(v31 - 1, v30));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
          std::__shared_weak_count::__release_weak(v29);
        }
      }
    }
    p_TypeName = &TypeName;
    sub_20BFD6F90((void ***)&p_TypeName);
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v32, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v64);
    if ((v69 & 7) != 0)
    {
      v33 = (unsigned int *)(v69 & 0xFFFFFFFFFFFFFFF8);
      do
        v34 = __ldxr(v33);
      while (__stlxr(v34 - 2, v33));
    }
  }
  else
  {
    if (*a1 != 3)
      return;
    sub_20C3AD760((uint64_t)a1, (uint64_t)v65);
    TypeName = (char *)pxrInternal__aapl__pxrReserved__::UsdAttribute::GetTypeName((pxrInternal__aapl__pxrReserved__::UsdAttribute *)v65);
    if (pxrInternal__aapl__pxrReserved__::SdfValueTypeName::_IsEmpty((pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&TypeName))
    {
      TypeName = "usd/stage.cpp";
      v74 = (unint64_t)"_CopyProperty";
      v75 = 5391;
      v76 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_CopyProperty(const UsdProperty &, const SdfPr"
            "imSpecHandle &, const TfToken &, const _PathRemapping &, const SdfLayerOffset &)";
      v77 = 0;
      sub_20C348EEC((uint64_t)v65, (int *)&p_TypeName);
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&p_TypeName);
      pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&TypeName, (pxrInternal__aapl__pxrReserved__ *)"Attribute <%s> has unknown value type. It will be omitted from the flattened result.", v11, Text);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&p_TypeName + 1);
      sub_20BFD265C(&p_TypeName);
    }
    else
    {
      v14 = (uint64_t **)sub_20C0B0CA4(a2);
      Attributes = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfPrimSpec::GetAttributes(v14, (uint64_t)&TypeName);
      if ((*a3 & 0xFFFFFFFFFFFFFFF8) == 0)
        pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(Attributes);
      sub_20C453170((uint64_t *)&TypeName, &v64);
      sub_20C453220((uint64_t)&TypeName);
      v18 = (pxrInternal__aapl__pxrReserved__::TfToken *)pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64);
      if ((_DWORD)v18
        && ((*a3 & 0xFFFFFFFFFFFFFFF8) == 0
          ? (v19 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v18))
          : (v19 = (uint64_t *)((*a3 & 0xFFFFFFFFFFFFFFF8) + 16)),
            p_TypeName = (char **)pxrInternal__aapl__pxrReserved__::UsdAttribute::GetTypeName((pxrInternal__aapl__pxrReserved__::UsdAttribute *)v65),
            pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New(a2, (uint64_t)v19, (pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&p_TypeName, 0, 0, (unsigned int **)&TypeName), pxrInternal__aapl__pxrReserved__::SdfSpec::operator=(&v64, (unsigned int **)&TypeName), pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v35, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&TypeName), pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64)))
      {
        TypeName = "usd/stage.cpp";
        v74 = (unint64_t)"_CopyProperty";
        v75 = 5400;
        v76 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_CopyProperty(const UsdProperty &, const Sdf"
              "PrimSpecHandle &, const TfToken &, const _PathRemapping &, const SdfLayerOffset &)";
        v77 = 0;
        v36 = *a3 & 0xFFFFFFFFFFFFFFF8;
        if (v36)
        {
          v37 = (const char *)(v36 + 16);
          if (*(char *)(v36 + 39) < 0)
            v37 = *(const char **)v37;
        }
        else
        {
          v37 = "";
        }
        pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&TypeName, 1, (pxrInternal__aapl__pxrReserved__ *)"Unable to create new attribute with destination name: %s", v37);
      }
      else
      {
        v38 = v64;
        TypeName = (char *)v64;
        if (v64)
        {
          do
            v39 = __ldaxr(v38);
          while (__stlxr(v39 + 1, v38));
        }
        sub_20C452568((pxrInternal__aapl__pxrReserved__::UsdObject *)v65, (pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&TypeName);
        pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec((pxrInternal__aapl__pxrReserved__::SdfSpec *)&TypeName);
        v62 = 0.0;
        v63 = 0.0;
        v61 = 0;
        BracketingTimeSamples = pxrInternal__aapl__pxrReserved__::UsdAttribute::GetBracketingTimeSamples((pxrInternal__aapl__pxrReserved__::UsdAttribute *)v65, 0.0, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v63, &v62, &v61);
        if (v61 && BracketingTimeSamples)
        {
          v74 = 0;
          v75 = 0;
          TypeName = (char *)&v74;
          if (sub_20C452C88((pxrInternal__aapl__pxrReserved__::UsdAttribute *)v65, a5, (uint64_t **)&TypeName))
          {
            v42 = sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64);
            v43 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v43)
              v43 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            sub_20C0E68EC((uint64_t)&TypeName, (pxrInternal__aapl__pxrReserved__::VtValue *)&p_TypeName);
            pxrInternal__aapl__pxrReserved__::SdfSpec::SetInfo(v42, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v43 + 432), (const pxrInternal__aapl__pxrReserved__::VtValue *)&p_TypeName);
            sub_20BF4C2D8((uint64_t)&p_TypeName);
          }
          sub_20BFED2B4((uint64_t)&TypeName, (_QWORD *)v74);
        }
        v44 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v44)
          v44 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (pxrInternal__aapl__pxrReserved__::UsdObject::HasAuthoredMetadata((pxrInternal__aapl__pxrReserved__::UsdObject *)v65, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v44 + 88)))
        {
          v74 = 0;
          if (pxrInternal__aapl__pxrReserved__::UsdAttribute::Get((uint64_t)v65, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&TypeName, NAN))
          {
            sub_20C452E84((pxrInternal__aapl__pxrReserved__::UsdObject *)v65, a5, (__int128 **)&TypeName, NAN);
          }
          else
          {
            if (v74 && (v74 & 3) != 3)
              (*(void (**)(char **))((v74 & 0xFFFFFFFFFFFFFFF8) + 32))(&TypeName);
            v74 = (unint64_t)&off_24C52AE00 + 3;
          }
          v45 = sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64);
          v46 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v46)
            v46 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          pxrInternal__aapl__pxrReserved__::SdfSpec::SetInfo(v45, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v46 + 88), (const pxrInternal__aapl__pxrReserved__::VtValue *)&TypeName);
          sub_20BF4C2D8((uint64_t)&TypeName);
        }
        TypeName = 0;
        v74 = 0;
        v75 = 0;
        pxrInternal__aapl__pxrReserved__::UsdAttribute::GetConnections((uint64_t)v65, (uint64_t *)&TypeName);
        if (TypeName != (char *)v74)
        {
          sub_20C452F44((int **)&TypeName, a4);
          sub_20C453004(a1, (int **)&TypeName);
          v47 = (unsigned int **)sub_20C0AEAB8((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v64);
          pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::GetConnectionPathList(v47, &v59);
          p_TypeName = (char **)v59;
          v71 = v60;
          if (v60)
          {
            v48 = (unint64_t *)&v60->__shared_owners_;
            do
              v49 = __ldxr(v48);
            while (__stxr(v49 + 1, v48));
          }
          v72 = 0;
          sub_20C3619E0((unsigned int *)&p_TypeName, &TypeName);
          v50 = v71;
          if (v71)
          {
            v51 = (unint64_t *)&v71->__shared_owners_;
            do
              v52 = __ldaxr(v51);
            while (__stlxr(v52 - 1, v51));
            if (!v52)
            {
              ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
          v53 = v60;
          if (v60)
          {
            v54 = (unint64_t *)&v60->__shared_owners_;
            do
              v55 = __ldaxr(v54);
            while (__stlxr(v55 - 1, v54));
            if (!v55)
            {
              ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
              std::__shared_weak_count::__release_weak(v53);
            }
          }
        }
        p_TypeName = &TypeName;
        sub_20BFD6F90((void ***)&p_TypeName);
      }
      pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v56, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v64);
    }
    if ((v69 & 7) != 0)
    {
      v57 = (unsigned int *)(v69 & 0xFFFFFFFFFFFFFFF8);
      do
        v58 = __ldxr(v57);
      while (__stlxr(v58 - 2, v57));
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v68);
  sub_20BFD265C(&v67);
  if (v66)
    sub_20C35C614(v66);
}

void sub_20C443EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,_QWORD *a26)
{
  void *v27;

  sub_20BF4C2D8((uint64_t)&a22);
  sub_20BFED2B4((uint64_t)&a25, a26);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v27, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a16);
  sub_20C372B54((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_20C444044(uint64_t *a1@<X0>, unsigned int **a2@<X8>)
{
  uint64_t v4;

  v4 = pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::Find((uint64_t)a1);
  if (v4 == pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_PropertyChildPolicy>::GetSize((uint64_t)a1))
    *a2 = 0;
  else
    sub_20BFE5588(a1, v4, a2);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdStage::_GetPcpPrimIndex(uint64_t a1, unsigned int *a2)
{
  return pxrInternal__aapl__pxrReserved__::PcpCache::FindPrimIndex(*(_QWORD *)(a1 + 128), a2);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetSpecifier(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  int v7;
  _QWORD *v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  int HasField;
  int v12;
  int *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  uint64_t v18;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v19;
  int v20;
  int v21;
  uint64_t v22;
  char v23;
  _QWORD v24[3];
  __int16 v25;
  unsigned int v26;
  int v27;
  int v28;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v29;
  uint64_t (**v30)(_QWORD, uint64_t);
  int *v31;
  uint64_t (**v32)(_QWORD, uint64_t);
  int *v33;
  uint64_t *v34;
  uint64_t (**ParentNode)(_QWORD, uint64_t);
  int *v36;
  std::type_info *v37;
  __int16 v38;

  v26 = 1;
  v24[2] = &stru_24C527CB0;
  v25 = 0;
  v24[0] = &unk_24C539DB8;
  v24[1] = &v26;
  v28 = 0;
  v29 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v30);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v30 + 1);
  v31 = 0;
  sub_20C4535E0((uint64_t)&v18, (uint64_t)v24, (uint64_t)&v28);
  if ((v31 & 7) != 0)
  {
    v3 = (unsigned int *)((unint64_t)v31 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v30 + 1);
  sub_20BFD265C(&v30);
  if (v29)
    sub_20C35C614(v29);
  if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 16))
    || (*((_BYTE *)this + 57) & 0x10) != 0
    && pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::UsdStage *)((char *)this + 16)))
  {
LABEL_7:
    v5 = v18;
    if (strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(v18 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      goto LABEL_36;
    }
    **(_DWORD **)(v5 + 8) = 0;
    goto LABEL_37;
  }
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(this);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v28, PrimIndex, 1);
  if (v30 == v32)
  {
    v7 = 1;
    if (v31 == v33)
    {
LABEL_13:
      v5 = v18;
      if (strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(v18 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL)))
      {
        goto LABEL_36;
      }
      **(_DWORD **)(v5 + 8) = v7;
      goto LABEL_37;
    }
  }
  v7 = 1;
  while (1)
  {
    v27 = 1;
    v8 = (_QWORD *)sub_20C0EEAF8(v34);
    ParentNode = v30;
    v36 = v31;
    Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&ParentNode);
    v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v10)
      v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v36 = &v27;
    v37 = &stru_24C527CB0;
    v38 = 0;
    ParentNode = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539DB8;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, Path, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v10 + 312), &ParentNode);
    v12 = (_BYTE)v38 ? 0 : HasField;
    if (v12 == 1 && v27 != 1)
      break;
LABEL_32:
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v28);
    if (v30 == v32 && v31 == v33)
      goto LABEL_13;
  }
  if (!v27)
    goto LABEL_7;
  ParentNode = v30;
  v36 = v31;
  if (v30 && v31 != (int *)-1)
  {
    while (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&ParentNode) != 1
         || pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsDueToAncestor((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&ParentNode))
    {
      ParentNode = (uint64_t (**)(_QWORD, uint64_t))pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetParentNode((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&ParentNode);
      v36 = v13;
      if (!ParentNode || v13 == (int *)-1)
        goto LABEL_35;
    }
    v7 = 2;
    goto LABEL_32;
  }
LABEL_35:
  v5 = v18;
  if (!strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(v18 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL)))**(_DWORD **)(v5 + 8) = 2;
  else
LABEL_36:
    *(_BYTE *)(v5 + 25) = 1;
LABEL_37:
  v23 = 1;
  v14 = v26;
  if ((v22 & 7) != 0)
  {
    v15 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  if (v19)
    sub_20C35C614(v19);
  return v14;
}

void sub_20C444414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C444430((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C444430(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetKind(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  int v8;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t (***v13[2])(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  int v15;
  int v16;
  uint64_t v17;
  _QWORD v18[3];
  __int16 v19;

  *a2 = 0;
  v18[2] = &stru_24C51BCE0;
  v19 = 0;
  v18[0] = &unk_24C5286B0;
  v18[1] = a2;
  v8 = 0;
  v9 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v10);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v11);
  v12 = 0;
  sub_20C4535E0((uint64_t)v13, (uint64_t)v18, (uint64_t)&v8);
  if ((v12 & 7) != 0)
  {
    v4 = (unsigned int *)(v12 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v11);
  sub_20BFD265C(&v10);
  if (v9)
    sub_20C35C614(v9);
  sub_20C4445EC(this, 0, v13);
  if ((v17 & 7) != 0)
  {
    v6 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_20BFD265C(&v15);
  if (v14)
    sub_20C35C614(v14);
}

void sub_20C4445B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  _QWORD *v5;
  unsigned int *v7;
  unsigned int v8;
  va_list va;

  va_start(va, a5);
  sub_20C444704((uint64_t)va);
  if ((*v5 & 7) != 0)
  {
    v7 = (unsigned int *)(*v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stlxr(v8 - 2, v7));
  }
  _Unwind_Resume(a1);
}

BOOL sub_20C4445EC(pxrInternal__aapl__pxrReserved__::Usd_PrimData *a1, int a2, uint64_t (****a3)(_QWORD, uint64_t))
{
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v7;
  _BOOL8 result;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[72];

  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(a1);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15, PrimIndex, 1);
  v14 = 0;
  v7 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v7)
    v7 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  v13 = 0;
  result = sub_20C45A4AC((uint64_t)a1, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v14, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v7 + 208), &v13, a2, (uint64_t)v15, a3);
  if ((v13 & 7) != 0)
  {
    v9 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((v14 & 7) != 0)
  {
    v11 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  return result;
}

void sub_20C4446BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unsigned int *v11;
  unsigned int v12;

  if ((a11 & 7) != 0)
  {
    v11 = (unsigned int *)(a11 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C444704(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsActive(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  unsigned int *v3;
  unsigned int v4;
  int v5;
  unsigned int *v6;
  unsigned int v7;
  int v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t (***v14[2])(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  int v16;
  int v17;
  uint64_t v18;
  _QWORD v19[3];
  __int16 v20;
  unsigned __int8 v21;

  v21 = 1;
  v19[2] = MEMORY[0x24BEDB770];
  v20 = 0;
  v19[0] = &unk_24C52B6E8;
  v19[1] = &v21;
  v9 = 0;
  v10 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v11);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v12);
  v13 = 0;
  sub_20C4535E0((uint64_t)v14, (uint64_t)v19, (uint64_t)&v9);
  if ((v13 & 7) != 0)
  {
    v3 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  sub_20C4448B0(this, 0, v14);
  v5 = v21;
  if ((v18 & 7) != 0)
  {
    v6 = (unsigned int *)(v18 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  sub_20BFD265C(&v16);
  if (v15)
    sub_20C35C614(v15);
  return v5 != 0;
}

void sub_20C444898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20C4449C8((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C4448B0(pxrInternal__aapl__pxrReserved__::Usd_PrimData *a1, int a2, uint64_t (****a3)(_QWORD, uint64_t))
{
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v7;
  _BOOL8 result;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[72];

  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(a1);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15, PrimIndex, 1);
  v14 = 0;
  v7 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v7)
    v7 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  v13 = 0;
  result = sub_20C464098((uint64_t)a1, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v14, v7, &v13, a2, (uint64_t)v15, a3);
  if ((v13 & 7) != 0)
  {
    v9 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  if ((v14 & 7) != 0)
  {
    v11 = (unsigned int *)(v14 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  return result;
}

void sub_20C444980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unsigned int *v11;
  unsigned int v12;

  if ((a11 & 7) != 0)
  {
    v11 = (unsigned int *)(a11 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stlxr(v12 - 2, v11));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C4449C8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_IsCustom(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdProperty *a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t *v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  char *v13;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v15;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *FieldDefinition;
  pxrInternal__aapl__pxrReserved__::VtValue *FallbackValue;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v35;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **Layers;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  _QWORD *v40;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v41;
  BOOL v42;
  char v45;
  int v46;
  int v47;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty(a2, (uint64_t)&v52);
  v3 = *((_QWORD *)&v52 + 1);
  if ((v52 & 7) != 0)
  {
    v4 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  if (v3)
    return 0;
  v7 = sub_20C398E78(a2);
  sub_20C35C4F8((uint64_t)&v48, (uint64_t *)a2 + 1, (_DWORD *)a2 + 4);
  v9 = (uint64_t *)sub_20C368FF0((uint64_t)&v48, v8);
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v9, 6u, (uint64_t *)&v58);
  v56 = v58;
  v57 = v59;
  v52 = v59;
  v53 = v59;
  v54 = v58;
  v55 = v58;
  if ((v51 & 7) != 0)
  {
    v10 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
    do
      v11 = __ldxr(v10);
    while (__stlxr(v11 - 2, v10));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v50 + 1);
  sub_20BFD265C(&v50);
  if (v49)
    sub_20C35C614(v49);
  if (v53 != v55)
  {
    v18 = MEMORY[0x24BEDB770];
    do
    {
      v19 = sub_20C444D70(&v52, v12, v13);
      v20 = v19[3] - 1;
      *(_QWORD *)&v58 = v19[2];
      *((_QWORD *)&v58 + 1) = v20;
      if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v58) & 1) == 0)
      {
        v23 = sub_20C444D70(&v52, v21, v22);
        v24 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v23[3] - 1);
        v48 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v23[2];
        v49 = v24;
        if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v48) & 1) != 0)
        {
          v27 = sub_20C444D70(&v52, v25, v26);
          v28 = v27[3] - 1;
          *(_QWORD *)&v58 = v27[2];
          *((_QWORD *)&v58 + 1) = v28;
          Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v58);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v7, &v46);
          v32 = sub_20C444D70(&v52, v30, v31);
          v33 = v32[3] - 1;
          *(_QWORD *)&v58 = v32[2];
          *((_QWORD *)&v58 + 1) = v33;
          LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v58);
          v35 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
          Layers = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v35);
          v48 = Layers[1];
          v49 = v48;
          v50 = *Layers;
          v51 = (unint64_t)v50;
          while (v49 != (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v51)
          {
            v45 = 0;
            v39 = (uint64_t *)sub_20C22F36C((uint64_t)&v48, v37, v38);
            v40 = (_QWORD *)sub_20C0EEAF8(v39);
            v41 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v41)
              v41 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            *((_QWORD *)&v58 + 1) = &v45;
            *(_QWORD *)&v59 = v18;
            WORD4(v59) = 0;
            *(_QWORD *)&v58 = &unk_24C52B6E8;
            if (pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v40, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v41 + 64), (uint64_t (***)(_QWORD, uint64_t))&v58))v42 = BYTE8(v59) == 0;
            else
              v42 = 0;
            if (v42 && v45 != 0)
            {
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
              sub_20BFD265C(&v46);
              return 1;
            }
            sub_20C22F508((uint64_t)&v48);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
          sub_20BFD265C(&v46);
        }
      }
      sub_20C444E44(&v52);
    }
    while ((_QWORD)v53 != (_QWORD)v55 || *((_QWORD *)&v53 + 1) != *((_QWORD *)&v55 + 1));
  }
  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  v15 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v15)
    v15 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  FieldDefinition = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFieldDefinition(Instance, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v15 + 64));
  FallbackValue = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::GetFallbackValue(FieldDefinition);
  return *(_BYTE *)sub_20BFB0910(FallbackValue) != 0;
}

void sub_20C444D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C444D70(_QWORD *result, uint64_t a2, char *a3)
{
  _QWORD v4[4];
  char v5;
  int v6;

  if (result[2] == result[6] && result[3] == result[7])
  {
    v4[0] = "tf/iterator.h";
    v4[1] = "operator->";
    v4[2] = 287;
    v4[3] = "Iterator &pxrInternal__aapl__pxrReserved__::TfIterator<std::pair<pxrInternal__aapl__pxrReserved__::PcpNodeIt"
            "erator, pxrInternal__aapl__pxrReserved__::PcpNodeIterator>, true>::operator->() [T = std::pair<pxrInternal__"
            "aapl__pxrReserved__::PcpNodeIterator, pxrInternal__aapl__pxrReserved__::PcpNodeIterator>, Reverse = true]";
    v5 = 0;
    v6 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v4, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

uint64_t sub_20C444DF0(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))MEMORY[0x24BEDB770];
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52B6E8;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C444E44(_QWORD *a1)
{
  uint64_t v2;
  _QWORD v5[4];
  char v6;

  v2 = a1[3];
  if (a1[2] == a1[6] && v2 == a1[7])
  {
    v5[0] = "tf/iterator.h";
    v5[1] = "operator++";
    v5[2] = 250;
    v5[3] = "TfIterator<T, Reverse> &pxrInternal__aapl__pxrReserved__::TfIterator<std::pair<pxrInternal__aapl__pxrReserve"
            "d__::PcpNodeIterator, pxrInternal__aapl__pxrReserved__::PcpNodeIterator>, true>::operator++() [T = std::pair"
            "<pxrInternal__aapl__pxrReserved__::PcpNodeIterator, pxrInternal__aapl__pxrReserved__::PcpNodeIterator>, Reverse = true]";
    v6 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v5, 1, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted");
  }
  else
  {
    a1[3] = v2 - 1;
  }
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdProperty *a2)
{
  uint64_t Variability;
  _BOOL4 IsAttribute;
  BOOL v4;
  unsigned int *v5;
  unsigned int v6;
  int v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t *v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  char *v13;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData **Layers;
  uint64_t v33;
  char *v34;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v35;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v36;
  uint64_t *v37;
  _QWORD *v38;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v39;
  char HasField;
  char v41;
  unsigned int *v42;
  unsigned int v43;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v45;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *FieldDefinition;
  pxrInternal__aapl__pxrReserved__::VtValue *FallbackValue;
  pxrInternal__aapl__pxrReserved__::TfToken *v49;
  unsigned int v50;
  int v51;
  int v52;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v54;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v55;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  int v63;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v64;
  int v65;
  int v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;

  if (*(_DWORD *)a2 != 3)
    goto LABEL_40;
  sub_20C3AD760((uint64_t)a2, (uint64_t)&v63);
  pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaAttribute((const pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v63, &v57);
  IsAttribute = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::IsAttribute((pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)&v57);
  v4 = IsAttribute;
  if (IsAttribute)
    Variability = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property::GetVariability((pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::Property *)&v57);
  if ((v57 & 7) != 0)
  {
    v5 = (unsigned int *)(v57 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  if (v4)
  {
    v7 = 1;
  }
  else
  {
    v49 = sub_20C398E78(&v63);
    sub_20C35C4F8((uint64_t)&v53, (uint64_t *)&v64, &v65);
    v9 = (uint64_t *)sub_20C368FF0((uint64_t)&v53, v8);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v9, 6u, (uint64_t *)&v68);
    v62 = v69;
    v61 = v68;
    v57 = v69;
    v58 = v69;
    v59 = v68;
    v60 = v68;
    if ((v56 & 7) != 0)
    {
      v10 = (unsigned int *)(v56 & 0xFFFFFFFFFFFFFFF8);
      do
        v11 = __ldxr(v10);
      while (__stlxr(v11 - 2, v10));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v55 + 1);
    sub_20BFD265C(&v55);
    if (v54)
      sub_20C35C614(v54);
    while ((_QWORD)v58 != (_QWORD)v60 || *((_QWORD *)&v58 + 1) != *((_QWORD *)&v60 + 1))
    {
      v15 = sub_20C444D70(&v57, v12, v13);
      v16 = v15[3] - 1;
      *(_QWORD *)&v68 = v15[2];
      *((_QWORD *)&v68 + 1) = v16;
      if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v68) & 1) == 0)
      {
        v19 = sub_20C444D70(&v57, v17, v18);
        v20 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v19[3] - 1);
        v53 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v19[2];
        v54 = v20;
        if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v53) & 1) != 0)
        {
          v23 = sub_20C444D70(&v57, v21, v22);
          v24 = v23[3] - 1;
          *(_QWORD *)&v68 = v23[2];
          *((_QWORD *)&v68 + 1) = v24;
          Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v68);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v49, &v51);
          v28 = sub_20C444D70(&v57, v26, v27);
          v29 = v28[3] - 1;
          *(_QWORD *)&v68 = v28[2];
          *((_QWORD *)&v68 + 1) = v29;
          LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v68);
          v31 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
          Layers = (pxrInternal__aapl__pxrReserved__::Usd_PrimData **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v31);
          v53 = Layers[1];
          v54 = v53;
          v55 = *Layers;
          v56 = (unint64_t)v55;
          while (1)
          {
            v35 = v54;
            v36 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v56;
            if (v54 == (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v56)
            {
              v7 = 0;
              goto LABEL_31;
            }
            v50 = 0;
            v37 = (uint64_t *)sub_20C22F36C((uint64_t)&v53, v33, v34);
            v38 = (_QWORD *)sub_20C0EEAF8(v37);
            v39 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v39)
              v39 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            *((_QWORD *)&v68 + 1) = &v50;
            *(_QWORD *)&v69 = &stru_24C5269D8;
            WORD4(v69) = 0;
            *(_QWORD *)&v68 = &unk_24C52E3D0;
            HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v38, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v51, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v39 + 464), (uint64_t (***)(_QWORD, uint64_t))&v68);
            v41 = BYTE8(v69) ? 0 : HasField;
            if ((v41 & 1) != 0)
              break;
            sub_20C22F508((uint64_t)&v53);
          }
          Variability = v50;
          v7 = 1;
LABEL_31:
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v52);
          sub_20BFD265C(&v51);
          if (v35 != v36)
            goto LABEL_34;
        }
      }
      sub_20C444E44(&v57);
    }
    v7 = 0;
  }
LABEL_34:
  if ((v67 & 7) != 0)
  {
    v42 = (unsigned int *)(v67 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stlxr(v43 - 2, v42));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v66);
  sub_20BFD265C(&v65);
  if (v64)
    sub_20C35C614(v64);
  if (!v7)
  {
LABEL_40:
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
    if (!Instance)
      Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
    v45 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v45)
      v45 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    FieldDefinition = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFieldDefinition(Instance, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v45 + 464));
    FallbackValue = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::GetFallbackValue(FieldDefinition);
    return *(unsigned int *)sub_20C02569C(FallbackValue);
  }
  return Variability;
}

void sub_20C44523C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  sub_20C372B54((uint64_t)&a28);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4452C0(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C5269D8;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52E3D0;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdObject *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, pxrInternal__aapl__pxrReserved__::VtValue *a6)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  const pxrInternal__aapl__pxrReserved__::VtDictionary **v19;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v20;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25[2];

  if (*(_DWORD *)a2 != 3)
    goto LABEL_5;
  v12 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v12)
    v12 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v12 + 54) & 0xFFFFFFFFFFFFFFF8))
  {
    v25[0] = 0;
    v25[1] = 0;
    v24 = (uint64_t *)v25;
    sub_20C3AD760((uint64_t)a2, (uint64_t)&v19);
    v13 = sub_20C4454E8((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v19, &v24);
    if ((v22 & 7) != 0)
    {
      v16 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
      do
        v17 = __ldxr(v16);
      while (__stlxr(v17 - 2, v16));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v21 + 1);
    sub_20BFD265C(&v21);
    if (v20)
      sub_20C35C614(v20);
    if ((_DWORD)v13)
      sub_20C0E7DF0(a6, (uint64_t)&v24);
    sub_20BFED2B4((uint64_t)&v24, v25[0]);
  }
  else
  {
LABEL_5:
    sub_20C445694((uint64_t)&v19, (uint64_t)a6, (uint64_t)a2, 0);
    v13 = sub_20C445744((uint64_t *)this, (uint64_t)a2, a3, a4, a5, &v19);
    if ((v23 & 7) != 0)
    {
      v14 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v22 + 1);
    sub_20BFD265C(&v22);
    if (v21)
      sub_20C35C614(v21);
  }
  return v13;
}

void sub_20C4454A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, _QWORD *a17)
{
  sub_20BFED2B4((uint64_t)&a16, a17);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4454E8(pxrInternal__aapl__pxrReserved__::UsdAttribute *a1, uint64_t **a2)
{
  uint64_t TimeSamples;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  void *__p;
  uint64_t *v10;
  uint64_t v11;
  _BYTE v12[127];
  uint64_t *v13;
  uint64_t *v14[2];
  _QWORD v15[3];

  v15[2] = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v12, a1);
  __p = 0;
  v10 = 0;
  v11 = 0;
  TimeSamples = pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetTimeSamples((uint64_t)v12, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&__p);
  v4 = (uint64_t *)__p;
  if ((_DWORD)TimeSamples)
  {
    v5 = v10;
    if (__p != v10)
    {
      do
      {
        v15[1] = 0;
        if (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::Get(v12, v15, *(double *)v4))
        {
          v14[0] = v4;
          v6 = sub_20C0E7D0C(a2, (double *)v4, (uint64_t)&unk_20CAC184C, v14);
          sub_20BFD3C3C(v6 + 5, v15);
        }
        else
        {
          v14[1] = (uint64_t *)((char *)&off_24C52AE00 + 3);
          v13 = v4;
          v7 = sub_20C0E7D0C(a2, (double *)v4, (uint64_t)&unk_20CAC184C, &v13);
          sub_20BF4B5D8(v7 + 5, v14);
          sub_20BF4C2D8((uint64_t)v14);
        }
        sub_20BF4C2D8((uint64_t)v15);
        ++v4;
      }
      while (v4 != v5);
      v4 = (uint64_t *)__p;
    }
  }
  if (v4)
  {
    v10 = v4;
    operator delete(v4);
  }
  sub_20C373B34((uint64_t)v12);
  return TimeSamples;
}

void sub_20C445648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, char a13)
{
  if (__p)
    operator delete(__p);
  sub_20C373B34((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_20C445694(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a3;
  v7 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 48);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 24), (_DWORD *)(a3 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 28), (_DWORD *)(a3 + 20));
  v10 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 41) = a4;
  return a1;
}

BOOL sub_20C445744(uint64_t *a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, const pxrInternal__aapl__pxrReserved__::VtDictionary ***a6)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  int v14;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v15;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v16;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  const pxrInternal__aapl__pxrReserved__::VtDictionary **v21;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v27;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v28;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v29;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v30;
  unint64_t *Instance;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v32;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v37;
  int v38;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;
  pxrInternal__aapl__pxrReserved__ *v50;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v51;
  pxrInternal__aapl__pxrReserved__ *v52;
  unint64_t *v53;
  unint64_t v54;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v55;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v56;
  unsigned int *v57;
  unsigned int v58;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v59;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v60;
  uint64_t *v61;
  unsigned int *v62;
  unsigned int v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v82;
  _QWORD *Layers;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t *v88;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v89;
  unsigned int *v90;
  unsigned int v91;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v92;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v93;
  uint64_t *v94;
  unsigned int *v95;
  unsigned int v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  _QWORD *v107;
  uint64_t v108;
  pxrInternal__aapl__pxrReserved__::SdfPath *v109;
  uint64_t v110;
  char *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t *v114;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v115;
  _QWORD *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t *v121;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v122;
  unsigned int *v123;
  unsigned int v124;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  _QWORD *v126;
  pxrInternal__aapl__pxrReserved__::SdfPath *v127;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v128;
  int HasField;
  uint64_t v130;
  BOOL v131;
  pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *v133;
  void *v134;
  uint64_t *v135;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v136;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v137;
  unsigned int *v138;
  unsigned int v139;
  unsigned int *v140;
  unsigned int v141;
  const pxrInternal__aapl__pxrReserved__::VtDictionary **v143;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v144;
  int v145;
  unsigned int *v146;
  unsigned int v147;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v148;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v149;
  unsigned int *v150;
  unsigned int v151;
  unsigned int *v152;
  unsigned int v153;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v154;
  int v155;
  const pxrInternal__aapl__pxrReserved__::VtDictionary **v156;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v157;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v158;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v159;
  unsigned int *v160;
  unsigned int v161;
  unsigned int *v162;
  unsigned int v163;
  unsigned int *v164;
  unsigned int v165;
  unsigned int *v166;
  unsigned int v167;
  _QWORD *v168;
  pxrInternal__aapl__pxrReserved__::SdfPath *v169;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v170;
  int v171;
  int v172;
  uint64_t v173;
  const pxrInternal__aapl__pxrReserved__::VtDictionary **v174;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v175;
  BOOL v176;
  unint64_t v177;
  unint64_t v178;
  _BOOL8 v179;
  unint64_t v181;
  uint64_t v182;
  pxrInternal__aapl__pxrReserved__ *v183;
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  int v189;
  __int128 v190;
  int v191;
  int v192;
  uint64_t v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;

  v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v181);
  v14 = *(_DWORD *)a2;
  if (*(int *)a2 >= 2)
  {
    if (v14 == 3)
    {
      v15 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v15)
        v15 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v15 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v194);
        v40 = *((_QWORD *)&v194 + 1);
        if (!*((_QWORD *)&v194 + 1) || (*(_BYTE *)(*((_QWORD *)&v194 + 1) + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&v194 + 1), v39);
        v41 = *(unint64_t **)(v40 + 24);
        PrimDefinition = atomic_load(v41 + 7);
        if (!PrimDefinition)
          PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v41);
        v43 = sub_20C398E78(&v194);
        *(_QWORD *)&v200 = 0;
        sub_20C465B5C(a6, PrimDefinition, v43, a3, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v200);
        if ((v200 & 7) != 0)
        {
          v44 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
          do
            v45 = __ldxr(v44);
          while (__stlxr(v45 - 2, v44));
        }
        if (!*((_BYTE *)a6 + 40))
        {
          *(_QWORD *)&v200 = 0;
          sub_20C46423C((uint64_t)&v194, a3, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v200, a5, (pxrInternal__aapl__pxrReserved__::VtValue **)a6);
          if ((v200 & 7) != 0)
          {
            v46 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
            do
              v47 = __ldxr(v46);
            while (__stlxr(v47 - 2, v46));
          }
        }
        if ((BYTE8(v195) & 7) != 0)
        {
          v48 = (unsigned int *)(*((_QWORD *)&v195 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v49 = __ldxr(v48);
          while (__stlxr(v49 - 2, v48));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v195 + 1);
        sub_20BFD265C(&v195);
        v50 = (pxrInternal__aapl__pxrReserved__ *)*((_QWORD *)&v194 + 1);
        if (!*((_QWORD *)&v194 + 1))
        {
LABEL_189:
          if (*((_BYTE *)a6 + 40))
          {
            Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
            if (Instance)
              goto LABEL_225;
            goto LABEL_224;
          }
LABEL_227:
          v179 = 0;
          goto LABEL_229;
        }
LABEL_188:
        sub_20C35C614(v50);
        goto LABEL_189;
      }
      v16 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v16)
        v16 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v16 + 58) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v182);
        v52 = v183;
        if (!v183 || (*((_BYTE *)v183 + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v183, v51);
        v53 = (unint64_t *)*((_QWORD *)v52 + 3);
        v54 = atomic_load(v53 + 7);
        if (!v54)
          v54 = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v53);
        v55 = sub_20C398E78(&v182);
        v56 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v56)
          v56 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v194 = 0;
        sub_20C465B5C(a6, v54, v55, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v56 + 464), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v194);
        if ((v194 & 7) != 0)
        {
          v57 = (unsigned int *)(v194 & 0xFFFFFFFFFFFFFFF8);
          do
            v58 = __ldxr(v57);
          while (__stlxr(v58 - 2, v57));
        }
        if (!*((_BYTE *)a6 + 40))
        {
          v59 = sub_20C398E78(&v182);
          sub_20C35C4F8((uint64_t)&v190, (uint64_t *)&v183, &v184);
          v61 = (uint64_t *)sub_20C368FF0((uint64_t)&v190, v60);
          pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v61, 6u, (uint64_t *)&v200);
          v198 = v200;
          v199 = v201;
          v194 = v201;
          v195 = v201;
          v196 = v200;
          v197 = v200;
          if ((v193 & 7) != 0)
          {
            v62 = (unsigned int *)(v193 & 0xFFFFFFFFFFFFFFF8);
            do
              v63 = __ldxr(v62);
            while (__stlxr(v63 - 2, v62));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v192);
          sub_20BFD265C(&v191);
          if (*((_QWORD *)&v190 + 1))
            sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v190 + 1));
          if (v195 != v197)
          {
            while (1)
            {
              v66 = sub_20C444D70(&v194, v64, v65);
              v67 = v66[3] - 1;
              *(_QWORD *)&v200 = v66[2];
              *((_QWORD *)&v200 + 1) = v67;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200) & 1) == 0)
              {
                v70 = sub_20C444D70(&v194, v68, v69);
                v71 = v70[3] - 1;
                *(_QWORD *)&v190 = v70[2];
                *((_QWORD *)&v190 + 1) = v71;
                if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190) & 1) != 0)
                  break;
              }
LABEL_93:
              sub_20C444E44(&v194);
              if (v195 == v197)
                goto LABEL_184;
            }
            v74 = sub_20C444D70(&v194, v72, v73);
            v75 = v74[3] - 1;
            *(_QWORD *)&v200 = v74[2];
            *((_QWORD *)&v200 + 1) = v75;
            Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200);
            pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v59, &v188);
            v79 = sub_20C444D70(&v194, v77, v78);
            v80 = v79[3] - 1;
            *(_QWORD *)&v190 = v79[2];
            *((_QWORD *)&v190 + 1) = v80;
            LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190);
            v82 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
            Layers = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v82);
            *(_QWORD *)&v200 = Layers[1];
            *((_QWORD *)&v200 + 1) = v200;
            *(_QWORD *)&v201 = *Layers;
            *((_QWORD *)&v201 + 1) = v201;
            while (1)
            {
              if (*((_QWORD *)&v200 + 1) == *((_QWORD *)&v201 + 1))
              {
                pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v189);
                sub_20BFD265C(&v188);
                goto LABEL_93;
              }
              *(_QWORD *)&v190 = sub_20C45A2E0(&v194, v84, v85);
              *((_QWORD *)&v190 + 1) = v86;
              v88 = (uint64_t *)sub_20C22F36C((uint64_t)&v200, v86, v87);
              v89 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v89)
                v89 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              v187 = 0;
              sub_20C466320(a6, a1, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190, v88, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v188, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v89 + 464), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v187);
              if ((v187 & 7) != 0)
              {
                v90 = (unsigned int *)(v187 & 0xFFFFFFFFFFFFFFF8);
                do
                  v91 = __ldxr(v90);
                while (__stlxr(v91 - 2, v90));
              }
              if (*((_BYTE *)a6 + 40))
                break;
              sub_20C22F508((uint64_t)&v200);
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v189);
            sub_20BFD265C(&v188);
          }
        }
LABEL_184:
        if ((v186 & 7) != 0)
        {
          v164 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
          do
            v165 = __ldxr(v164);
          while (__stlxr(v165 - 2, v164));
        }
LABEL_187:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v185);
        sub_20BFD265C(&v184);
        v50 = v183;
        if (!v183)
          goto LABEL_189;
        goto LABEL_188;
      }
    }
    v17 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v17)
      v17 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v17 + 8) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD664(a2, (uint64_t)&v182);
      pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v182, (uint64_t)&v194);
      v18 = *((_QWORD *)&v194 + 1);
      if ((v194 & 7) != 0)
      {
        v19 = (unsigned int *)(v194 & 0xFFFFFFFFFFFFFFF8);
        do
          v20 = __ldxr(v19);
        while (__stlxr(v20 - 2, v19));
      }
      if (v18)
      {
        v21 = *a6;
        v22 = (*a6)[1];
        if (v22)
          v23 = ((unint64_t)(*a6)[1] & 3) == 3;
        else
          v23 = 1;
        if (!v23)
          (*(void (**)(const pxrInternal__aapl__pxrReserved__::VtDictionary **))(((unint64_t)v22 & 0xFFFFFFFFFFFFFFF8)
                                                                                          + 32))(*a6);
        v21[1] = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)&unk_24C51FCF3;
        *(_BYTE *)v21 = 0;
        *((_BYTE *)a6 + 40) = 1;
      }
      else
      {
        v92 = sub_20C398E78(&v182);
        sub_20C35C4F8((uint64_t)&v190, (uint64_t *)&v183, &v184);
        v94 = (uint64_t *)sub_20C368FF0((uint64_t)&v190, v93);
        pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v94, 6u, (uint64_t *)&v200);
        v198 = v200;
        v199 = v201;
        v194 = v201;
        v195 = v201;
        v196 = v200;
        v197 = v200;
        if ((v193 & 7) != 0)
        {
          v95 = (unsigned int *)(v193 & 0xFFFFFFFFFFFFFFF8);
          do
            v96 = __ldxr(v95);
          while (__stlxr(v96 - 2, v95));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v192);
        sub_20BFD265C(&v191);
        if (*((_QWORD *)&v190 + 1))
          sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v190 + 1));
        if (v195 != v197)
        {
          while (1)
          {
            v99 = sub_20C444D70(&v194, v97, v98);
            v100 = v99[3] - 1;
            *(_QWORD *)&v200 = v99[2];
            *((_QWORD *)&v200 + 1) = v100;
            if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200) & 1) == 0)
            {
              v103 = sub_20C444D70(&v194, v101, v102);
              v104 = v103[3] - 1;
              *(_QWORD *)&v190 = v103[2];
              *((_QWORD *)&v190 + 1) = v104;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190) & 1) != 0)
                break;
            }
LABEL_113:
            sub_20C444E44(&v194);
            if (v195 == v197)
              goto LABEL_152;
          }
          v107 = sub_20C444D70(&v194, v105, v106);
          v108 = v107[3] - 1;
          *(_QWORD *)&v200 = v107[2];
          *((_QWORD *)&v200 + 1) = v108;
          v109 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v109, v92, &v188);
          v112 = sub_20C444D70(&v194, v110, v111);
          v113 = v112[3] - 1;
          *(_QWORD *)&v190 = v112[2];
          *((_QWORD *)&v190 + 1) = v113;
          v114 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190);
          v115 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v114);
          v116 = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v115);
          *(_QWORD *)&v200 = v116[1];
          *((_QWORD *)&v200 + 1) = v200;
          *(_QWORD *)&v201 = *v116;
          *((_QWORD *)&v201 + 1) = v201;
          while (1)
          {
            if (*((_QWORD *)&v200 + 1) == *((_QWORD *)&v201 + 1))
            {
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v189);
              sub_20BFD265C(&v188);
              goto LABEL_113;
            }
            *(_QWORD *)&v190 = sub_20C45A2E0(&v194, v117, v118);
            *((_QWORD *)&v190 + 1) = v119;
            v121 = (uint64_t *)sub_20C22F36C((uint64_t)&v200, v119, v120);
            v122 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v122)
              v122 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            v187 = 0;
            sub_20C466320(a6, a1, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190, v121, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v188, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v122 + 64), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v187);
            if ((v187 & 7) != 0)
            {
              v123 = (unsigned int *)(v187 & 0xFFFFFFFFFFFFFFF8);
              do
                v124 = __ldxr(v123);
              while (__stlxr(v124 - 2, v123));
            }
            if (*((_BYTE *)a6 + 40))
              break;
            sub_20C22F508((uint64_t)&v200);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v189);
          sub_20BFD265C(&v188);
        }
      }
LABEL_152:
      if ((v186 & 7) != 0)
      {
        v146 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
        do
          v147 = __ldxr(v146);
        while (__stlxr(v147 - 2, v146));
      }
      goto LABEL_187;
    }
    goto LABEL_39;
  }
  if (v14 == 1)
  {
    v24 = *(_QWORD *)(a2 + 8);
    if (!v24 || (v25 = *(_QWORD *)(v24 + 56), (v25 & 0x800) != 0))
    {
      v12 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a2 + 8), v13);
      v25 = *(_QWORD *)(v24 + 56);
    }
    v26 = *(_BYTE **)(a2 + 8);
    if ((v25 & 0x4000) == 0)
    {
      v27 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v27)
        v27 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v27 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v26);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v194, PrimIndex, 1);
        if (v195 == v196)
          goto LABEL_222;
        while (1)
        {
          v182 = 0;
          v126 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v197);
          v200 = v195;
          v127 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200);
          v128 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v128)
            v128 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v200 + 1) = &v182;
          *(_QWORD *)&v201 = &stru_24C51BCE0;
          WORD4(v201) = 0;
          *(_QWORD *)&v200 = &unk_24C5286B0;
          HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v126, v127, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v128 + 448), (uint64_t (***)(_QWORD, uint64_t))&v200);
          v130 = v182;
          v131 = HasField && BYTE8(v201) == 0;
          if (v131 && v182 != 0)
          {
            v133 = (pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            if (!v133)
              v133 = sub_20BFE0E90(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            v130 = v182;
            if ((v182 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v133 & 0xFFFFFFFFFFFFFFF8))
            {
              v134 = *(void **)v26;
              v190 = v195;
              v135 = (uint64_t *)v197;
              v200 = v195;
              v136 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200);
              v137 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v137)
                v137 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              *(_QWORD *)&v200 = 0;
              sub_20C466320(a6, v134, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190, v135, v136, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v137 + 448), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v200);
              if ((v200 & 7) != 0)
              {
                v138 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
                do
                  v139 = __ldxr(v138);
                while (__stlxr(v139 - 2, v138));
              }
              v130 = v182;
              if (*((_BYTE *)a6 + 40))
                break;
            }
          }
          if ((v130 & 7) != 0)
          {
            v140 = (unsigned int *)(v130 & 0xFFFFFFFFFFFFFFF8);
            do
              v141 = __ldxr(v140);
            while (__stlxr(v141 - 2, v140));
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v194);
          if ((_QWORD)v195 == (_QWORD)v196 && *((_QWORD *)&v195 + 1) == *((_QWORD *)&v196 + 1))
            goto LABEL_222;
        }
        if ((v182 & 7) != 0)
        {
          v166 = (unsigned int *)(v182 & 0xFFFFFFFFFFFFFFF8);
          do
            v167 = __ldxr(v166);
          while (__stlxr(v167 - 2, v166));
        }
LABEL_222:
        if (*((_BYTE *)a6 + 40))
        {
          Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (Instance)
            goto LABEL_225;
          goto LABEL_224;
        }
        goto LABEL_227;
      }
      v28 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v28)
        v28 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v28 + 39) & 0xFFFFFFFFFFFFFFF8))
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v26 + 16))
          || (v26[57] & 0x10) != 0
          && pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v26 + 16)))
        {
          v143 = *a6;
          v144 = (*a6)[1];
          if (v144 && ((unint64_t)(*a6)[1] & 3) != 3)
            goto LABEL_146;
          goto LABEL_147;
        }
        v154 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v26);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v194, v154, 1);
        if ((_QWORD)v195 == (_QWORD)v196)
        {
          v155 = 1;
          if (*((_QWORD *)&v195 + 1) == *((_QWORD *)&v196 + 1))
          {
LABEL_169:
            v156 = *a6;
            v157 = (*a6)[1];
            if (v157 && ((unint64_t)(*a6)[1] & 3) != 3)
              (*(void (**)(const pxrInternal__aapl__pxrReserved__::VtDictionary **))(((unint64_t)v157 & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 32))(*a6);
            v156[1] = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)((char *)&off_24C527CC0 + 3);
            *(_DWORD *)v156 = v155;
            goto LABEL_221;
          }
        }
        v155 = 1;
        while (1)
        {
          LODWORD(v190) = 1;
          v168 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v197);
          v200 = v195;
          v169 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200);
          v170 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v170)
            v170 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v200 + 1) = &v190;
          *(_QWORD *)&v201 = &stru_24C527CB0;
          WORD4(v201) = 0;
          *(_QWORD *)&v200 = &unk_24C539DB8;
          v171 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v168, v169, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v170 + 312), (uint64_t (***)(_QWORD, uint64_t))&v200);
          if (BYTE8(v201))
            v172 = 0;
          else
            v172 = v171;
          if (v172 == 1 && (_DWORD)v190 != 1)
          {
            if (!(_DWORD)v190)
            {
              v143 = *a6;
              v144 = (*a6)[1];
              if (!v144 || ((unint64_t)(*a6)[1] & 3) == 3)
                goto LABEL_147;
LABEL_146:
              (*(void (**)(const pxrInternal__aapl__pxrReserved__::VtDictionary **))(((unint64_t)v144 & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 32))(*a6);
LABEL_147:
              v143[1] = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)((char *)&off_24C527CC0 + 3);
              *(_DWORD *)v143 = 0;
LABEL_221:
              *((_BYTE *)a6 + 40) = 1;
              goto LABEL_222;
            }
            v200 = v195;
            if (!(_QWORD)v195 || *((_QWORD *)&v195 + 1) == -1)
            {
LABEL_215:
              v174 = *a6;
              v175 = (*a6)[1];
              if (v175)
                v176 = ((unint64_t)(*a6)[1] & 3) == 3;
              else
                v176 = 1;
              if (!v176)
                (*(void (**)(const pxrInternal__aapl__pxrReserved__::VtDictionary **))(((unint64_t)v175 & 0xFFFFFFFFFFFFFFF8)
                                                                                                + 32))(*a6);
              v174[1] = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)((char *)&off_24C527CC0 + 3);
              *(_DWORD *)v174 = 2;
              goto LABEL_221;
            }
            while (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200) != 1
                 || pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsDueToAncestor((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200))
            {
              *(_QWORD *)&v200 = pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetParentNode((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v200);
              *((_QWORD *)&v200 + 1) = v173;
              if (!(_QWORD)v200 || v173 == -1)
                goto LABEL_215;
            }
            v155 = 2;
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v194);
          if (v195 == v196)
            goto LABEL_169;
        }
      }
      v29 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v29)
        v29 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v29 + 26) & 0xFFFFFFFFFFFFFFF8))
      {
        v148 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v26);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v194, v148, 1);
        *(_QWORD *)&v200 = 0;
        v149 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v149)
          v149 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v190 = 0;
        sub_20C467C48((uint64_t)v26, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v200, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v149 + 208), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v190, a5, (uint64_t)&v194, (uint64_t)a6);
        if ((v190 & 7) != 0)
        {
          v150 = (unsigned int *)(v190 & 0xFFFFFFFFFFFFFFF8);
          do
            v151 = __ldxr(v150);
          while (__stlxr(v151 - 2, v150));
        }
        if ((v200 & 7) != 0)
        {
          v152 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
          do
            v153 = __ldxr(v152);
          while (__stlxr(v153 - 2, v152));
        }
        goto LABEL_222;
      }
      v30 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v30)
        v30 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v30 & 0xFFFFFFFFFFFFFFF8))
      {
        v158 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v26);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v194, v158, 1);
        *(_QWORD *)&v200 = 0;
        v159 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v159)
          v159 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v190 = 0;
        sub_20C467C48((uint64_t)v26, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v200, v159, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v190, a5, (uint64_t)&v194, (uint64_t)a6);
        if ((v190 & 7) != 0)
        {
          v160 = (unsigned int *)(v190 & 0xFFFFFFFFFFFFFFF8);
          do
            v161 = __ldxr(v160);
          while (__stlxr(v161 - 2, v160));
        }
        if ((v200 & 7) != 0)
        {
          v162 = (unsigned int *)(v200 & 0xFFFFFFFFFFFFFFF8);
          do
            v163 = __ldxr(v162);
          while (__stlxr(v163 - 2, v162));
        }
        goto LABEL_222;
      }
      goto LABEL_39;
    }
    v32 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v12);
    v33 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v26);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetRootNode(v33);
    *(_QWORD *)&v194 = v34;
    *((_QWORD *)&v194 + 1) = v35;
    if (a1[5]
      && (v36 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v194),
          v37 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v36),
          **(_QWORD **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v37) == a1[5]))
    {
      v145 = sub_20C466320(a6, *(void **)v26, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v194, a1 + 5, v32, a3, a4);
      if (*((_BYTE *)a6 + 40))
      {
LABEL_149:
        Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        if (Instance)
          goto LABEL_225;
        goto LABEL_224;
      }
      v38 = v145;
    }
    else
    {
      v38 = 0;
    }
    if ((v38 | sub_20C466320(a6, *(void **)v26, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v194, a1 + 4, v32, a3, a4)) != 1)goto LABEL_227;
    goto LABEL_149;
  }
LABEL_39:
  if (!sub_20C46423C(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue **)a6))
    goto LABEL_227;
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (Instance)
    goto LABEL_225;
LABEL_224:
  Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
LABEL_225:
  v177 = v181;
  v178 = atomic_load(Instance + 18);
  v179 = v177 >= v178
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v181, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
LABEL_229:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v181);
  return v179;
}

void sub_20C446778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;

  v22 = *(_QWORD *)(v20 - 120);
  if ((v22 & 7) != 0)
  {
    v23 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFF8);
    do
      v24 = __ldxr(v23);
    while (__stlxr(v24 - 2, v23));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4469FC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_GetStrongestResolvedMetadata(uint64_t a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v11;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  int v13;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v15;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v22;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v24;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v25;
  unint64_t *Instance;
  pxrInternal__aapl__pxrReserved__::SdfPath *v27;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v32;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v37;
  unsigned int v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int *v41;
  unsigned int v42;
  unsigned int *v43;
  unsigned int v44;
  pxrInternal__aapl__pxrReserved__ *v45;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v46;
  pxrInternal__aapl__pxrReserved__ *v47;
  unint64_t *v48;
  unint64_t v49;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v50;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v51;
  unsigned int v52;
  unsigned int *v53;
  unsigned int v54;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v55;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v56;
  uint64_t *v57;
  unsigned int *v58;
  unsigned int v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v76;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v78;
  _QWORD *Layers;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t *v84;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v85;
  unsigned int *v86;
  unsigned int v87;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v88;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v89;
  uint64_t *v90;
  unsigned int *v91;
  unsigned int v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v100;
  uint64_t v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  pxrInternal__aapl__pxrReserved__::SdfPath *v105;
  uint64_t v106;
  char *v107;
  _QWORD *v108;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v109;
  uint64_t *v110;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v111;
  _QWORD *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v118;
  unsigned int *v119;
  unsigned int v120;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  _QWORD *v122;
  pxrInternal__aapl__pxrReserved__::SdfPath *v123;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v124;
  int HasField;
  uint64_t v126;
  BOOL v127;
  pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *v129;
  uint64_t *v130;
  pxrInternal__aapl__pxrReserved__::SdfPath *v131;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v132;
  unsigned int *v133;
  unsigned int v134;
  unsigned int *v135;
  unsigned int v136;
  uint64_t (***v138)(_QWORD, uint64_t);
  unsigned int *v139;
  unsigned int v140;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v141;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v142;
  unsigned int *v143;
  unsigned int v144;
  unsigned int *v145;
  unsigned int v146;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v147;
  int v148;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v149;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v150;
  unsigned int *v151;
  unsigned int v152;
  unsigned int *v153;
  unsigned int v154;
  unsigned int *v155;
  unsigned int v156;
  unsigned int *v157;
  unsigned int v158;
  _QWORD *v159;
  pxrInternal__aapl__pxrReserved__::SdfPath *v160;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v161;
  int v162;
  int v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  _BOOL8 v167;
  unsigned int *v168;
  unsigned int v169;
  uint64_t (***v171[2])(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v172;
  int v173;
  int v174;
  uint64_t v175;
  unsigned __int8 v176;
  unint64_t v177;
  int v178;
  pxrInternal__aapl__pxrReserved__ *v179;
  int v180;
  int v181;
  uint64_t v182;
  int v183;
  int v184;
  uint64_t v185;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v186;
  int v187;
  int v188;
  uint64_t v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;

  sub_20C4535E0((uint64_t)v171, a6, a2);
  v11 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v177);
  v13 = *(_DWORD *)a2;
  if (*(int *)a2 >= 2)
  {
    if (v13 == 3)
    {
      v14 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v14)
        v14 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v14 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v190);
        v34 = *((_QWORD *)&v190 + 1);
        if (!*((_QWORD *)&v190 + 1) || (*(_BYTE *)(*((_QWORD *)&v190 + 1) + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&v190 + 1), v33);
        v35 = *(unint64_t **)(v34 + 24);
        PrimDefinition = atomic_load(v35 + 7);
        if (!PrimDefinition)
          PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v35);
        v37 = sub_20C398E78(&v190);
        *(_QWORD *)&v196 = 0;
        v38 = sub_20C45A220(PrimDefinition, v37, a3, &v196, v171[0]);
        v176 = v38;
        if ((v196 & 7) != 0)
        {
          v39 = (unsigned int *)(v196 & 0xFFFFFFFFFFFFFFF8);
          do
            v40 = __ldxr(v39);
          while (__stlxr(v40 - 2, v39));
          v38 = v176;
        }
        if (!v38)
        {
          *(_QWORD *)&v196 = 0;
          sub_20C468AD0((uint64_t)&v190, a3, (uint64_t *)&v196, a5, v171);
          if ((v196 & 7) != 0)
          {
            v41 = (unsigned int *)(v196 & 0xFFFFFFFFFFFFFFF8);
            do
              v42 = __ldxr(v41);
            while (__stlxr(v42 - 2, v41));
          }
        }
        if ((BYTE8(v191) & 7) != 0)
        {
          v43 = (unsigned int *)(*((_QWORD *)&v191 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v44 = __ldxr(v43);
          while (__stlxr(v44 - 2, v43));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v191 + 1);
        sub_20BFD265C(&v191);
        v45 = (pxrInternal__aapl__pxrReserved__ *)*((_QWORD *)&v190 + 1);
        if (!*((_QWORD *)&v190 + 1))
        {
LABEL_189:
          if (v176)
          {
            Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
            if (Instance)
              goto LABEL_221;
            goto LABEL_220;
          }
LABEL_223:
          v167 = 0;
          goto LABEL_225;
        }
LABEL_188:
        sub_20C35C614(v45);
        goto LABEL_189;
      }
      v15 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v15)
        v15 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v15 + 58) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v178);
        v47 = v179;
        if (!v179 || (*((_BYTE *)v179 + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v179, v46);
        v48 = (unint64_t *)*((_QWORD *)v47 + 3);
        v49 = atomic_load(v48 + 7);
        if (!v49)
          v49 = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v48);
        v50 = sub_20C398E78(&v178);
        v51 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v51)
          v51 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v190 = 0;
        v52 = sub_20C45A220(v49, v50, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v51 + 464), &v190, v171[0]);
        v176 = v52;
        if ((v190 & 7) != 0)
        {
          v53 = (unsigned int *)(v190 & 0xFFFFFFFFFFFFFFF8);
          do
            v54 = __ldxr(v53);
          while (__stlxr(v54 - 2, v53));
          v52 = v176;
        }
        if (!v52)
        {
          v55 = sub_20C398E78(&v178);
          sub_20C35C4F8((uint64_t)&v185, (uint64_t *)&v179, &v180);
          v57 = (uint64_t *)sub_20C368FF0((uint64_t)&v185, v56);
          pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v57, 6u, (uint64_t *)&v196);
          v194 = v196;
          v195 = v197;
          v190 = v197;
          v191 = v197;
          v192 = v196;
          v193 = v196;
          if ((v189 & 7) != 0)
          {
            v58 = (unsigned int *)(v189 & 0xFFFFFFFFFFFFFFF8);
            do
              v59 = __ldxr(v58);
            while (__stlxr(v59 - 2, v58));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v188);
          sub_20BFD265C(&v187);
          if (v186)
            sub_20C35C614(v186);
          if (v191 != v193)
          {
            while (1)
            {
              v62 = sub_20C444D70(&v190, v60, v61);
              v63 = v62[3] - 1;
              *(_QWORD *)&v196 = v62[2];
              *((_QWORD *)&v196 + 1) = v63;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196) & 1) == 0)
              {
                v66 = sub_20C444D70(&v190, v64, v65);
                v67 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v66[3] - 1);
                v185 = v66[2];
                v186 = v67;
                if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185) & 1) != 0)
                  break;
              }
LABEL_91:
              sub_20C444E44(&v190);
              if (v191 == v193)
                goto LABEL_184;
            }
            v70 = sub_20C444D70(&v190, v68, v69);
            v71 = v70[3] - 1;
            *(_QWORD *)&v196 = v70[2];
            *((_QWORD *)&v196 + 1) = v71;
            Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196);
            pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v55, &v183);
            v75 = sub_20C444D70(&v190, v73, v74);
            v76 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v75[3] - 1);
            v185 = v75[2];
            v186 = v76;
            LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
            v78 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
            Layers = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v78);
            *(_QWORD *)&v196 = Layers[1];
            *((_QWORD *)&v196 + 1) = v196;
            *(_QWORD *)&v197 = *Layers;
            *((_QWORD *)&v197 + 1) = v197;
            while (1)
            {
              if (*((_QWORD *)&v196 + 1) == *((_QWORD *)&v197 + 1))
              {
                pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v184);
                sub_20BFD265C(&v183);
                goto LABEL_91;
              }
              sub_20C45A2E0(&v190, v80, v81);
              v84 = (uint64_t *)sub_20C22F36C((uint64_t)&v196, v82, v83);
              v85 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v85)
                v85 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              v185 = 0;
              if (sub_20C45A368(v171, v84, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v183, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v85 + 464), &v185))v176 = 1;
              if ((v185 & 7) != 0)
              {
                v86 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
                do
                  v87 = __ldxr(v86);
                while (__stlxr(v87 - 2, v86));
              }
              if (v176)
                break;
              sub_20C22F508((uint64_t)&v196);
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v184);
            sub_20BFD265C(&v183);
          }
        }
LABEL_184:
        if ((v182 & 7) != 0)
        {
          v155 = (unsigned int *)(v182 & 0xFFFFFFFFFFFFFFF8);
          do
            v156 = __ldxr(v155);
          while (__stlxr(v156 - 2, v155));
        }
LABEL_187:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v181);
        sub_20BFD265C(&v180);
        v45 = v179;
        if (!v179)
          goto LABEL_189;
        goto LABEL_188;
      }
    }
    v16 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v16)
      v16 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v16 + 8) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD664(a2, (uint64_t)&v178);
      pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v178, (uint64_t)&v190);
      v17 = *((_QWORD *)&v190 + 1);
      if ((v190 & 7) != 0)
      {
        v18 = (unsigned int *)(v190 & 0xFFFFFFFFFFFFFFF8);
        do
          v19 = __ldxr(v18);
        while (__stlxr(v19 - 2, v18));
      }
      if (v17)
      {
        LOBYTE(v190) = 0;
        sub_20C45A3D8((uint64_t)v171[0], &v190);
        v176 = 1;
      }
      else
      {
        v88 = sub_20C398E78(&v178);
        sub_20C35C4F8((uint64_t)&v185, (uint64_t *)&v179, &v180);
        v90 = (uint64_t *)sub_20C368FF0((uint64_t)&v185, v89);
        pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v90, 6u, (uint64_t *)&v196);
        v194 = v196;
        v195 = v197;
        v190 = v197;
        v191 = v197;
        v192 = v196;
        v193 = v196;
        if ((v189 & 7) != 0)
        {
          v91 = (unsigned int *)(v189 & 0xFFFFFFFFFFFFFFF8);
          do
            v92 = __ldxr(v91);
          while (__stlxr(v92 - 2, v91));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v188);
        sub_20BFD265C(&v187);
        if (v186)
          sub_20C35C614(v186);
        if (v191 != v193)
        {
          while (1)
          {
            v95 = sub_20C444D70(&v190, v93, v94);
            v96 = v95[3] - 1;
            *(_QWORD *)&v196 = v95[2];
            *((_QWORD *)&v196 + 1) = v96;
            if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196) & 1) == 0)
            {
              v99 = sub_20C444D70(&v190, v97, v98);
              v100 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v99[3] - 1);
              v185 = v99[2];
              v186 = v100;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185) & 1) != 0)
                break;
            }
LABEL_113:
            sub_20C444E44(&v190);
            if (v191 == v193)
              goto LABEL_153;
          }
          v103 = sub_20C444D70(&v190, v101, v102);
          v104 = v103[3] - 1;
          *(_QWORD *)&v196 = v103[2];
          *((_QWORD *)&v196 + 1) = v104;
          v105 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v105, v88, &v183);
          v108 = sub_20C444D70(&v190, v106, v107);
          v109 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v108[3] - 1);
          v185 = v108[2];
          v186 = v109;
          v110 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
          v111 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v110);
          v112 = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v111);
          *(_QWORD *)&v196 = v112[1];
          *((_QWORD *)&v196 + 1) = v196;
          *(_QWORD *)&v197 = *v112;
          *((_QWORD *)&v197 + 1) = v197;
          while (1)
          {
            if (*((_QWORD *)&v196 + 1) == *((_QWORD *)&v197 + 1))
            {
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v184);
              sub_20BFD265C(&v183);
              goto LABEL_113;
            }
            sub_20C45A2E0(&v190, v113, v114);
            v117 = (uint64_t *)sub_20C22F36C((uint64_t)&v196, v115, v116);
            v118 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v118)
              v118 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            v185 = 0;
            if (sub_20C45A368(v171, v117, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v183, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v118 + 64), &v185))v176 = 1;
            if ((v185 & 7) != 0)
            {
              v119 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
              do
                v120 = __ldxr(v119);
              while (__stlxr(v120 - 2, v119));
            }
            if (v176)
              break;
            sub_20C22F508((uint64_t)&v196);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v184);
          sub_20BFD265C(&v183);
        }
      }
LABEL_153:
      if ((v182 & 7) != 0)
      {
        v139 = (unsigned int *)(v182 & 0xFFFFFFFFFFFFFFF8);
        do
          v140 = __ldxr(v139);
        while (__stlxr(v140 - 2, v139));
      }
      goto LABEL_187;
    }
    goto LABEL_34;
  }
  if (v13 == 1)
  {
    v20 = *(_QWORD *)(a2 + 8);
    if (!v20 || (v21 = *(_QWORD *)(v20 + 56), (v21 & 0x800) != 0))
    {
      v11 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a2 + 8), v12);
      v21 = *(_QWORD *)(v20 + 56);
      v20 = *(_QWORD *)(a2 + 8);
    }
    if ((v21 & 0x4000) == 0)
    {
      v22 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v22)
        v22 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v22 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v20);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v190, PrimIndex, 1);
        if (v191 == v192)
          goto LABEL_218;
        while (1)
        {
          v185 = 0;
          v122 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v193);
          v196 = v191;
          v123 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196);
          v124 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v124)
            v124 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v196 + 1) = &v185;
          *(_QWORD *)&v197 = &stru_24C51BCE0;
          WORD4(v197) = 0;
          *(_QWORD *)&v196 = &unk_24C5286B0;
          HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v122, v123, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v124 + 448), (uint64_t (***)(_QWORD, uint64_t))&v196);
          v126 = v185;
          v127 = HasField && BYTE8(v197) == 0;
          if (v127 && v185 != 0)
          {
            v129 = (pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            if (!v129)
              v129 = sub_20BFE0E90(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            v126 = v185;
            if ((v185 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v129 & 0xFFFFFFFFFFFFFFF8))
            {
              v130 = (uint64_t *)v193;
              v196 = v191;
              v131 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196);
              v132 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v132)
                v132 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              *(_QWORD *)&v196 = 0;
              if (sub_20C45A368(v171, v130, v131, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v132 + 448), (uint64_t *)&v196))v176 = 1;
              if ((v196 & 7) != 0)
              {
                v133 = (unsigned int *)(v196 & 0xFFFFFFFFFFFFFFF8);
                do
                  v134 = __ldxr(v133);
                while (__stlxr(v134 - 2, v133));
              }
              v126 = v185;
              if (v176)
                break;
            }
          }
          if ((v126 & 7) != 0)
          {
            v135 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
            do
              v136 = __ldxr(v135);
            while (__stlxr(v136 - 2, v135));
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v190);
          if ((_QWORD)v191 == (_QWORD)v192 && *((_QWORD *)&v191 + 1) == *((_QWORD *)&v192 + 1))
            goto LABEL_218;
        }
        if ((v185 & 7) != 0)
        {
          v157 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
          do
            v158 = __ldxr(v157);
          while (__stlxr(v158 - 2, v157));
        }
LABEL_218:
        if (v176)
        {
          Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (Instance)
            goto LABEL_221;
          goto LABEL_220;
        }
        goto LABEL_223;
      }
      v23 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v23)
        v23 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v23 + 39) & 0xFFFFFFFFFFFFFFF8))
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v20 + 16))
          || (*(_BYTE *)(v20 + 57) & 0x10) != 0
          && pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v20 + 16)))
        {
LABEL_146:
          v138 = v171[0];
          if (strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v171[0][2][1] & 0x7FFFFFFFFFFFFFFFLL)))
          {
            goto LABEL_216;
          }
          *(_DWORD *)v138[1] = 0;
          goto LABEL_217;
        }
        v147 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v20);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v190, v147, 1);
        if ((_QWORD)v191 == (_QWORD)v192)
        {
          v148 = 1;
          if (*((_QWORD *)&v191 + 1) == *((_QWORD *)&v192 + 1))
          {
LABEL_170:
            v138 = v171[0];
            if (strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v171[0][2][1] & 0x7FFFFFFFFFFFFFFFLL)))
            {
              goto LABEL_216;
            }
            *(_DWORD *)v138[1] = v148;
            goto LABEL_217;
          }
        }
        v148 = 1;
        while (1)
        {
          LODWORD(v185) = 1;
          v159 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v193);
          v196 = v191;
          v160 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196);
          v161 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v161)
            v161 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v196 + 1) = &v185;
          *(_QWORD *)&v197 = &stru_24C527CB0;
          WORD4(v197) = 0;
          *(_QWORD *)&v196 = &unk_24C539DB8;
          v162 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v159, v160, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v161 + 312), (uint64_t (***)(_QWORD, uint64_t))&v196);
          if (BYTE8(v197))
            v163 = 0;
          else
            v163 = v162;
          if (v163 == 1 && (_DWORD)v185 != 1)
          {
            if (!(_DWORD)v185)
              goto LABEL_146;
            v196 = v191;
            if (!(_QWORD)v191 || *((_QWORD *)&v191 + 1) == -1)
            {
LABEL_215:
              v138 = v171[0];
              if (!strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v171[0][2][1] & 0x7FFFFFFFFFFFFFFFLL)))*(_DWORD *)v138[1] = 2;
              else
LABEL_216:
                *((_BYTE *)v138 + 25) = 1;
LABEL_217:
              v176 = 1;
              goto LABEL_218;
            }
            while (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196) != 1
                 || pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsDueToAncestor((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196))
            {
              *(_QWORD *)&v196 = pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetParentNode((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v196);
              *((_QWORD *)&v196 + 1) = v164;
              if (!(_QWORD)v196 || v164 == -1)
                goto LABEL_215;
            }
            v148 = 2;
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v190);
          if (v191 == v192)
            goto LABEL_170;
        }
      }
      v24 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v24)
        v24 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v24 + 26) & 0xFFFFFFFFFFFFFFF8))
      {
        v141 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v20);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v190, v141, 1);
        *(_QWORD *)&v196 = 0;
        v142 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v142)
          v142 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v185 = 0;
        sub_20C46A3F0(v20, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v196, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v142 + 208), &v185, a5, (uint64_t)&v190, v171);
        if ((v185 & 7) != 0)
        {
          v143 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
          do
            v144 = __ldxr(v143);
          while (__stlxr(v144 - 2, v143));
        }
        if ((v196 & 7) != 0)
        {
          v145 = (unsigned int *)(v196 & 0xFFFFFFFFFFFFFFF8);
          do
            v146 = __ldxr(v145);
          while (__stlxr(v146 - 2, v145));
        }
        goto LABEL_218;
      }
      v25 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v25)
        v25 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v25 & 0xFFFFFFFFFFFFFFF8))
      {
        v149 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v20);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v190, v149, 1);
        *(_QWORD *)&v196 = 0;
        v150 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v150)
          v150 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v185 = 0;
        sub_20C46A3F0(v20, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v196, v150, &v185, a5, (uint64_t)&v190, v171);
        if ((v185 & 7) != 0)
        {
          v151 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
          do
            v152 = __ldxr(v151);
          while (__stlxr(v152 - 2, v151));
        }
        if ((v196 & 7) != 0)
        {
          v153 = (unsigned int *)(v196 & 0xFFFFFFFFFFFFFFF8);
          do
            v154 = __ldxr(v153);
          while (__stlxr(v154 - 2, v153));
        }
        goto LABEL_218;
      }
      goto LABEL_34;
    }
    v27 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v11);
    v28 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v20);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetRootNode(v28);
    *(_QWORD *)&v190 = v29;
    *((_QWORD *)&v190 + 1) = v30;
    if (*(_QWORD *)(a1 + 40))
    {
      v31 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v190);
      v32 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v31);
      if (**(_QWORD **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v32) == *(_QWORD *)(a1 + 40))
      {
        if ((sub_20C45A368(v171, (uint64_t *)(a1 + 40), v27, a3, a4) & 1) != 0)
        {
LABEL_149:
          v176 = 1;
          goto LABEL_150;
        }
        if (v176)
        {
LABEL_150:
          Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (Instance)
            goto LABEL_221;
          goto LABEL_220;
        }
      }
    }
    if (!sub_20C45A368(v171, (uint64_t *)(a1 + 32), v27, a3, a4))
      goto LABEL_223;
    goto LABEL_149;
  }
LABEL_34:
  if (!sub_20C468AD0(a2, a3, a4, a5, v171))
    goto LABEL_223;
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (Instance)
    goto LABEL_221;
LABEL_220:
  Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
LABEL_221:
  v165 = v177;
  v166 = atomic_load(Instance + 18);
  v167 = v165 >= v166
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v177, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
LABEL_225:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v177);
  if ((v175 & 7) != 0)
  {
    v168 = (unsigned int *)(v175 & 0xFFFFFFFFFFFFFFF8);
    do
      v169 = __ldxr(v168);
    while (__stlxr(v169 - 2, v168));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v174);
  sub_20BFD265C(&v173);
  if (v172)
    sub_20C35C614(v172);
  return v167;
}

void sub_20C447A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t v15;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;

  v17 = *(_QWORD *)(v15 - 112);
  if ((v17 & 7) != 0)
  {
    v18 = (unsigned int *)(v17 & 0xFFFFFFFFFFFFFFF8);
    do
      v19 = __ldxr(v18);
    while (__stlxr(v19 - 2, v18));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&a15);
  sub_20C447CFC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C447CFC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetTypeSpecificResolvedMetadata<std::map<double,pxrInternal__aapl__pxrReserved__::VtValue>>(uint64_t a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t **a6)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v12;
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  int v15;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v16;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v17;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v24;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v25;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v26;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v27;
  unint64_t *Instance;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v32;
  pxrInternal__aapl__pxrReserved__::SdfPath *v33;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v38;
  int v39;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v44;
  unsigned int v45;
  unsigned int *v46;
  unsigned int v47;
  unsigned int *v48;
  unsigned int v49;
  unsigned int *v50;
  unsigned int v51;
  pxrInternal__aapl__pxrReserved__ *v52;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v53;
  pxrInternal__aapl__pxrReserved__ *v54;
  unint64_t *v55;
  unint64_t v56;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v57;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v58;
  unsigned int v59;
  unsigned int *v60;
  unsigned int v61;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v62;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v63;
  uint64_t *v64;
  unsigned int *v65;
  unsigned int v66;
  uint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD *v77;
  uint64_t v78;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v85;
  _QWORD *Layers;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t *v91;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v92;
  unsigned int *v93;
  unsigned int v94;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v95;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v96;
  uint64_t *v97;
  unsigned int *v98;
  unsigned int v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  _QWORD *v110;
  uint64_t v111;
  pxrInternal__aapl__pxrReserved__::SdfPath *v112;
  uint64_t v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t *v117;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v118;
  _QWORD *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t *v124;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v125;
  unsigned int *v126;
  unsigned int v127;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  _QWORD *v129;
  pxrInternal__aapl__pxrReserved__::SdfPath *v130;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v131;
  int HasField;
  uint64_t v133;
  BOOL v134;
  pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *v136;
  uint64_t *v137;
  pxrInternal__aapl__pxrReserved__::SdfPath *v138;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v139;
  unsigned int *v140;
  unsigned int v141;
  unsigned int *v142;
  unsigned int v143;
  uint64_t (***v145)(_QWORD, uint64_t);
  int v146;
  unsigned int *v147;
  unsigned int v148;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v149;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v150;
  unsigned int *v151;
  unsigned int v152;
  unsigned int *v153;
  unsigned int v154;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v155;
  int v156;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v157;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v158;
  unsigned int *v159;
  unsigned int v160;
  unsigned int *v161;
  unsigned int v162;
  unsigned int *v163;
  unsigned int v164;
  unsigned int *v165;
  unsigned int v166;
  _QWORD *v167;
  pxrInternal__aapl__pxrReserved__::SdfPath *v168;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v169;
  int v170;
  int v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unsigned int *v175;
  unsigned int v176;
  uint64_t (***v178[2])(_QWORD, uint64_t);
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v179;
  int v180;
  int v181;
  uint64_t v182;
  unsigned __int8 v183;
  _QWORD v184[3];
  __int16 v185;
  unint64_t v186;
  uint64_t v187;
  pxrInternal__aapl__pxrReserved__ *v188;
  int v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  int v194;
  __int128 v195;
  int v196;
  int v197;
  uint64_t v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;

  if (*(_DWORD *)a2 == 3)
  {
    v12 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v12)
      v12 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v12 + 54) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD760(a2, (uint64_t)&v199);
      v29 = sub_20C4454E8((pxrInternal__aapl__pxrReserved__::UsdAttribute *)&v199, a6);
      if ((BYTE8(v200) & 7) != 0)
      {
        v30 = (unsigned int *)(*((_QWORD *)&v200 + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v200 + 1);
      sub_20BFD265C(&v200);
      v32 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)&v199 + 1);
      if (*((_QWORD *)&v199 + 1))
        goto LABEL_231;
      return v29;
    }
  }
  v184[2] = &stru_24C524D90;
  v185 = 0;
  v184[0] = &unk_24C539DF0;
  v184[1] = a6;
  sub_20C4535E0((uint64_t)v178, (uint64_t)v184, a2);
  v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v186);
  v15 = *(_DWORD *)a2;
  if (*(int *)a2 >= 2)
  {
    if (v15 == 3)
    {
      v16 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v16)
        v16 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v16 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v199);
        v41 = *((_QWORD *)&v199 + 1);
        if (!*((_QWORD *)&v199 + 1) || (*(_BYTE *)(*((_QWORD *)&v199 + 1) + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&v199 + 1), v40);
        v42 = *(unint64_t **)(v41 + 24);
        PrimDefinition = atomic_load(v42 + 7);
        if (!PrimDefinition)
          PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v42);
        v44 = sub_20C398E78(&v199);
        *(_QWORD *)&v205 = 0;
        v45 = sub_20C45A220(PrimDefinition, v44, a3, &v205, v178[0]);
        v183 = v45;
        if ((v205 & 7) != 0)
        {
          v46 = (unsigned int *)(v205 & 0xFFFFFFFFFFFFFFF8);
          do
            v47 = __ldxr(v46);
          while (__stlxr(v47 - 2, v46));
          v45 = v183;
        }
        if (!v45)
        {
          *(_QWORD *)&v205 = 0;
          sub_20C46B6A0((uint64_t)&v199, a3, (uint64_t *)&v205, a5, (uint64_t)v178);
          if ((v205 & 7) != 0)
          {
            v48 = (unsigned int *)(v205 & 0xFFFFFFFFFFFFFFF8);
            do
              v49 = __ldxr(v48);
            while (__stlxr(v49 - 2, v48));
          }
        }
        if ((BYTE8(v200) & 7) != 0)
        {
          v50 = (unsigned int *)(*((_QWORD *)&v200 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v51 = __ldxr(v50);
          while (__stlxr(v51 - 2, v50));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v200 + 1);
        sub_20BFD265C(&v200);
        v52 = (pxrInternal__aapl__pxrReserved__ *)*((_QWORD *)&v199 + 1);
        if (!*((_QWORD *)&v199 + 1))
        {
LABEL_191:
          if (v183)
          {
            Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
            if (Instance)
              goto LABEL_223;
            goto LABEL_222;
          }
LABEL_225:
          v29 = 0;
          goto LABEL_227;
        }
LABEL_190:
        sub_20C35C614(v52);
        goto LABEL_191;
      }
      v17 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v17)
        v17 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v17 + 58) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v187);
        v54 = v188;
        if (!v188 || (*((_BYTE *)v188 + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v188, v53);
        v55 = (unint64_t *)*((_QWORD *)v54 + 3);
        v56 = atomic_load(v55 + 7);
        if (!v56)
          v56 = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v55);
        v57 = sub_20C398E78(&v187);
        v58 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v58)
          v58 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v199 = 0;
        v59 = sub_20C45A220(v56, v57, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v58 + 464), &v199, v178[0]);
        v183 = v59;
        if ((v199 & 7) != 0)
        {
          v60 = (unsigned int *)(v199 & 0xFFFFFFFFFFFFFFF8);
          do
            v61 = __ldxr(v60);
          while (__stlxr(v61 - 2, v60));
          v59 = v183;
        }
        if (!v59)
        {
          v62 = sub_20C398E78(&v187);
          sub_20C35C4F8((uint64_t)&v195, (uint64_t *)&v188, &v189);
          v64 = (uint64_t *)sub_20C368FF0((uint64_t)&v195, v63);
          pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v64, 6u, (uint64_t *)&v205);
          v203 = v205;
          v204 = v206;
          v199 = v206;
          v200 = v206;
          v201 = v205;
          v202 = v205;
          if ((v198 & 7) != 0)
          {
            v65 = (unsigned int *)(v198 & 0xFFFFFFFFFFFFFFF8);
            do
              v66 = __ldxr(v65);
            while (__stlxr(v66 - 2, v65));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v197);
          sub_20BFD265C(&v196);
          if (*((_QWORD *)&v195 + 1))
            sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v195 + 1));
          if (v200 != v202)
          {
            while (1)
            {
              v69 = sub_20C444D70(&v199, v67, v68);
              v70 = v69[3] - 1;
              *(_QWORD *)&v205 = v69[2];
              *((_QWORD *)&v205 + 1) = v70;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205) & 1) == 0)
              {
                v73 = sub_20C444D70(&v199, v71, v72);
                v74 = v73[3] - 1;
                *(_QWORD *)&v195 = v73[2];
                *((_QWORD *)&v195 + 1) = v74;
                if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195) & 1) != 0)
                  break;
              }
LABEL_99:
              sub_20C444E44(&v199);
              if (v200 == v202)
                goto LABEL_186;
            }
            v77 = sub_20C444D70(&v199, v75, v76);
            v78 = v77[3] - 1;
            *(_QWORD *)&v205 = v77[2];
            *((_QWORD *)&v205 + 1) = v78;
            Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205);
            pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v62, &v193);
            v82 = sub_20C444D70(&v199, v80, v81);
            v83 = v82[3] - 1;
            *(_QWORD *)&v195 = v82[2];
            *((_QWORD *)&v195 + 1) = v83;
            LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195);
            v85 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
            Layers = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v85);
            *(_QWORD *)&v205 = Layers[1];
            *((_QWORD *)&v205 + 1) = v205;
            *(_QWORD *)&v206 = *Layers;
            *((_QWORD *)&v206 + 1) = v206;
            while (1)
            {
              if (*((_QWORD *)&v205 + 1) == *((_QWORD *)&v206 + 1))
              {
                pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v194);
                sub_20BFD265C(&v193);
                goto LABEL_99;
              }
              *(_QWORD *)&v195 = sub_20C45A2E0(&v199, v87, v88);
              *((_QWORD *)&v195 + 1) = v89;
              v91 = (uint64_t *)sub_20C22F36C((uint64_t)&v205, v89, v90);
              v92 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v92)
                v92 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              v192 = 0;
              sub_20C46CFC0((uint64_t)v178, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195, v91, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v193, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v92 + 464), &v192);
              if ((v192 & 7) != 0)
              {
                v93 = (unsigned int *)(v192 & 0xFFFFFFFFFFFFFFF8);
                do
                  v94 = __ldxr(v93);
                while (__stlxr(v94 - 2, v93));
              }
              if (v183)
                break;
              sub_20C22F508((uint64_t)&v205);
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v194);
            sub_20BFD265C(&v193);
          }
        }
LABEL_186:
        if ((v191 & 7) != 0)
        {
          v163 = (unsigned int *)(v191 & 0xFFFFFFFFFFFFFFF8);
          do
            v164 = __ldxr(v163);
          while (__stlxr(v164 - 2, v163));
        }
LABEL_189:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v190);
        sub_20BFD265C(&v189);
        v52 = v188;
        if (!v188)
          goto LABEL_191;
        goto LABEL_190;
      }
    }
    v18 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v18)
      v18 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v18 + 8) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD664(a2, (uint64_t)&v187);
      pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v187, (uint64_t)&v199);
      v19 = *((_QWORD *)&v199 + 1);
      if ((v199 & 7) != 0)
      {
        v20 = (unsigned int *)(v199 & 0xFFFFFFFFFFFFFFF8);
        do
          v21 = __ldxr(v20);
        while (__stlxr(v21 - 2, v20));
      }
      if (v19)
      {
        LOBYTE(v199) = 0;
        sub_20C45A3D8((uint64_t)v178[0], &v199);
        v183 = 1;
      }
      else
      {
        v95 = sub_20C398E78(&v187);
        sub_20C35C4F8((uint64_t)&v195, (uint64_t *)&v188, &v189);
        v97 = (uint64_t *)sub_20C368FF0((uint64_t)&v195, v96);
        pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v97, 6u, (uint64_t *)&v205);
        v203 = v205;
        v204 = v206;
        v199 = v206;
        v200 = v206;
        v201 = v205;
        v202 = v205;
        if ((v198 & 7) != 0)
        {
          v98 = (unsigned int *)(v198 & 0xFFFFFFFFFFFFFFF8);
          do
            v99 = __ldxr(v98);
          while (__stlxr(v99 - 2, v98));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v197);
        sub_20BFD265C(&v196);
        if (*((_QWORD *)&v195 + 1))
          sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v195 + 1));
        if (v200 != v202)
        {
          while (1)
          {
            v102 = sub_20C444D70(&v199, v100, v101);
            v103 = v102[3] - 1;
            *(_QWORD *)&v205 = v102[2];
            *((_QWORD *)&v205 + 1) = v103;
            if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205) & 1) == 0)
            {
              v106 = sub_20C444D70(&v199, v104, v105);
              v107 = v106[3] - 1;
              *(_QWORD *)&v195 = v106[2];
              *((_QWORD *)&v195 + 1) = v107;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195) & 1) != 0)
                break;
            }
LABEL_119:
            sub_20C444E44(&v199);
            if (v200 == v202)
              goto LABEL_156;
          }
          v110 = sub_20C444D70(&v199, v108, v109);
          v111 = v110[3] - 1;
          *(_QWORD *)&v205 = v110[2];
          *((_QWORD *)&v205 + 1) = v111;
          v112 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v112, v95, &v193);
          v115 = sub_20C444D70(&v199, v113, v114);
          v116 = v115[3] - 1;
          *(_QWORD *)&v195 = v115[2];
          *((_QWORD *)&v195 + 1) = v116;
          v117 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195);
          v118 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v117);
          v119 = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v118);
          *(_QWORD *)&v205 = v119[1];
          *((_QWORD *)&v205 + 1) = v205;
          *(_QWORD *)&v206 = *v119;
          *((_QWORD *)&v206 + 1) = v206;
          while (1)
          {
            if (*((_QWORD *)&v205 + 1) == *((_QWORD *)&v206 + 1))
            {
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v194);
              sub_20BFD265C(&v193);
              goto LABEL_119;
            }
            *(_QWORD *)&v195 = sub_20C45A2E0(&v199, v120, v121);
            *((_QWORD *)&v195 + 1) = v122;
            v124 = (uint64_t *)sub_20C22F36C((uint64_t)&v205, v122, v123);
            v125 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v125)
              v125 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            v192 = 0;
            sub_20C46CFC0((uint64_t)v178, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195, v124, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v193, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v125 + 64), &v192);
            if ((v192 & 7) != 0)
            {
              v126 = (unsigned int *)(v192 & 0xFFFFFFFFFFFFFFF8);
              do
                v127 = __ldxr(v126);
              while (__stlxr(v127 - 2, v126));
            }
            if (v183)
              break;
            sub_20C22F508((uint64_t)&v205);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v194);
          sub_20BFD265C(&v193);
        }
      }
LABEL_156:
      if ((v191 & 7) != 0)
      {
        v147 = (unsigned int *)(v191 & 0xFFFFFFFFFFFFFFF8);
        do
          v148 = __ldxr(v147);
        while (__stlxr(v148 - 2, v147));
      }
      goto LABEL_189;
    }
    goto LABEL_38;
  }
  if (v15 == 1)
  {
    v22 = *(_QWORD *)(a2 + 8);
    if (!v22 || (v23 = *(_QWORD *)(v22 + 56), (v23 & 0x800) != 0))
    {
      v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a2 + 8), v14);
      v23 = *(_QWORD *)(v22 + 56);
      v22 = *(_QWORD *)(a2 + 8);
    }
    if ((v23 & 0x4000) == 0)
    {
      v24 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v24)
        v24 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v24 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v22);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v199, PrimIndex, 1);
        if (v200 == v201)
          goto LABEL_220;
        while (1)
        {
          v187 = 0;
          v129 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v202);
          v205 = v200;
          v130 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205);
          v131 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v131)
            v131 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v205 + 1) = &v187;
          *(_QWORD *)&v206 = &stru_24C51BCE0;
          WORD4(v206) = 0;
          *(_QWORD *)&v205 = &unk_24C5286B0;
          HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v129, v130, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v131 + 448), (uint64_t (***)(_QWORD, uint64_t))&v205);
          v133 = v187;
          v134 = HasField && BYTE8(v206) == 0;
          if (v134 && v187 != 0)
          {
            v136 = (pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            if (!v136)
              v136 = sub_20BFE0E90(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            v133 = v187;
            if ((v187 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v136 & 0xFFFFFFFFFFFFFFF8))
            {
              v195 = v200;
              v137 = (uint64_t *)v202;
              v205 = v200;
              v138 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205);
              v139 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v139)
                v139 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              *(_QWORD *)&v205 = 0;
              sub_20C46CFC0((uint64_t)v178, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v195, v137, v138, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v139 + 448), (uint64_t *)&v205);
              if ((v205 & 7) != 0)
              {
                v140 = (unsigned int *)(v205 & 0xFFFFFFFFFFFFFFF8);
                do
                  v141 = __ldxr(v140);
                while (__stlxr(v141 - 2, v140));
              }
              v133 = v187;
              if (v183)
                break;
            }
          }
          if ((v133 & 7) != 0)
          {
            v142 = (unsigned int *)(v133 & 0xFFFFFFFFFFFFFFF8);
            do
              v143 = __ldxr(v142);
            while (__stlxr(v143 - 2, v142));
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v199);
          if ((_QWORD)v200 == (_QWORD)v201 && *((_QWORD *)&v200 + 1) == *((_QWORD *)&v201 + 1))
            goto LABEL_220;
        }
        if ((v187 & 7) != 0)
        {
          v165 = (unsigned int *)(v187 & 0xFFFFFFFFFFFFFFF8);
          do
            v166 = __ldxr(v165);
          while (__stlxr(v166 - 2, v165));
        }
LABEL_220:
        if (v183)
        {
          Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (Instance)
            goto LABEL_223;
          goto LABEL_222;
        }
        goto LABEL_225;
      }
      v25 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v25)
        v25 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v25 + 39) & 0xFFFFFFFFFFFFFFF8))
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v22 + 16))
          || (*(_BYTE *)(v22 + 57) & 0x10) != 0
          && pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v22 + 16)))
        {
LABEL_150:
          v145 = v178[0];
          if (strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v178[0][2][1] & 0x7FFFFFFFFFFFFFFFLL)))
          {
            goto LABEL_218;
          }
          *(_DWORD *)v145[1] = 0;
          goto LABEL_219;
        }
        v155 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v22);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v199, v155, 1);
        if ((_QWORD)v200 == (_QWORD)v201)
        {
          v156 = 1;
          if (*((_QWORD *)&v200 + 1) == *((_QWORD *)&v201 + 1))
          {
LABEL_173:
            v145 = v178[0];
            if (strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v178[0][2][1] & 0x7FFFFFFFFFFFFFFFLL)))
            {
              goto LABEL_218;
            }
            *(_DWORD *)v145[1] = v156;
            goto LABEL_219;
          }
        }
        v156 = 1;
        while (1)
        {
          LODWORD(v195) = 1;
          v167 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v202);
          v205 = v200;
          v168 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205);
          v169 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v169)
            v169 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v205 + 1) = &v195;
          *(_QWORD *)&v206 = &stru_24C527CB0;
          WORD4(v206) = 0;
          *(_QWORD *)&v205 = &unk_24C539DB8;
          v170 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v167, v168, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v169 + 312), (uint64_t (***)(_QWORD, uint64_t))&v205);
          if (BYTE8(v206))
            v171 = 0;
          else
            v171 = v170;
          if (v171 == 1 && (_DWORD)v195 != 1)
          {
            if (!(_DWORD)v195)
              goto LABEL_150;
            v205 = v200;
            if (!(_QWORD)v200 || *((_QWORD *)&v200 + 1) == -1)
            {
LABEL_217:
              v145 = v178[0];
              if (!strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)v178[0][2][1] & 0x7FFFFFFFFFFFFFFFLL)))*(_DWORD *)v145[1] = 2;
              else
LABEL_218:
                *((_BYTE *)v145 + 25) = 1;
LABEL_219:
              v183 = 1;
              goto LABEL_220;
            }
            while (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205) != 1
                 || pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsDueToAncestor((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205))
            {
              *(_QWORD *)&v205 = pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetParentNode((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v205);
              *((_QWORD *)&v205 + 1) = v172;
              if (!(_QWORD)v205 || v172 == -1)
                goto LABEL_217;
            }
            v156 = 2;
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v199);
          if (v200 == v201)
            goto LABEL_173;
        }
      }
      v26 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v26)
        v26 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v26 + 26) & 0xFFFFFFFFFFFFFFF8))
      {
        v149 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v22);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v199, v149, 1);
        *(_QWORD *)&v205 = 0;
        v150 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v150)
          v150 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v195 = 0;
        sub_20C46D094(v22, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v205, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v150 + 208), (uint64_t *)&v195, a5, (uint64_t)&v199, (uint64_t)v178);
        if ((v195 & 7) != 0)
        {
          v151 = (unsigned int *)(v195 & 0xFFFFFFFFFFFFFFF8);
          do
            v152 = __ldxr(v151);
          while (__stlxr(v152 - 2, v151));
        }
        if ((v205 & 7) != 0)
        {
          v153 = (unsigned int *)(v205 & 0xFFFFFFFFFFFFFFF8);
          do
            v154 = __ldxr(v153);
          while (__stlxr(v154 - 2, v153));
        }
        goto LABEL_220;
      }
      v27 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v27)
        v27 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v27 & 0xFFFFFFFFFFFFFFF8))
      {
        v157 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v22);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v199, v157, 1);
        *(_QWORD *)&v205 = 0;
        v158 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v158)
          v158 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v195 = 0;
        sub_20C46D094(v22, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v205, v158, (uint64_t *)&v195, a5, (uint64_t)&v199, (uint64_t)v178);
        if ((v195 & 7) != 0)
        {
          v159 = (unsigned int *)(v195 & 0xFFFFFFFFFFFFFFF8);
          do
            v160 = __ldxr(v159);
          while (__stlxr(v160 - 2, v159));
        }
        if ((v205 & 7) != 0)
        {
          v161 = (unsigned int *)(v205 & 0xFFFFFFFFFFFFFFF8);
          do
            v162 = __ldxr(v161);
          while (__stlxr(v162 - 2, v161));
        }
        goto LABEL_220;
      }
      goto LABEL_38;
    }
    v33 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v13);
    v34 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v22);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetRootNode(v34);
    *(_QWORD *)&v199 = v35;
    *((_QWORD *)&v199 + 1) = v36;
    if (*(_QWORD *)(a1 + 40)
      && (v37 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v199),
          v38 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v37),
          **(_QWORD **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v38) == *(_QWORD *)(a1 + 40)))
    {
      v146 = sub_20C46CFC0((uint64_t)v178, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v199, (uint64_t *)(a1 + 40), v33, a3, a4);
      if (v183)
      {
LABEL_153:
        Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        if (Instance)
          goto LABEL_223;
        goto LABEL_222;
      }
      v39 = v146;
    }
    else
    {
      v39 = 0;
    }
    if ((v39 | sub_20C46CFC0((uint64_t)v178, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v199, (uint64_t *)(a1 + 32), v33, a3, a4)) != 1)goto LABEL_225;
    goto LABEL_153;
  }
LABEL_38:
  if (!sub_20C46B6A0(a2, a3, a4, a5, (uint64_t)v178))
    goto LABEL_225;
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (Instance)
    goto LABEL_223;
LABEL_222:
  Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
LABEL_223:
  v173 = v186;
  v174 = atomic_load(Instance + 18);
  v29 = v173 >= v174
     || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v186, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
LABEL_227:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v186);
  if ((v182 & 7) != 0)
  {
    v175 = (unsigned int *)(v182 & 0xFFFFFFFFFFFFFFF8);
    do
      v176 = __ldxr(v175);
    while (__stlxr(v176 - 2, v175));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v181);
  sub_20BFD265C(&v180);
  v32 = v179;
  if (v179)
LABEL_231:
    sub_20C35C614(v32);
  return v29;
}

void sub_20C448E2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v4 = *(_QWORD *)(v2 - 112);
  if ((v4 & 7) != 0)
  {
    v5 = (unsigned int *)(v4 & 0xFFFFFFFFFFFFFFF8);
    do
      v6 = __ldxr(v5);
    while (__stlxr(v6 - 2, v5));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va1);
  sub_20C4490D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4490D8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_HasMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdObject *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  int v12;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v21;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v22;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v24;
  unint64_t *Instance;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v26;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v31;
  int v32;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v37;
  unsigned int *v38;
  unsigned int v39;
  unsigned int *v40;
  unsigned int v41;
  unsigned int *v42;
  unsigned int v43;
  pxrInternal__aapl__pxrReserved__ *v44;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v45;
  pxrInternal__aapl__pxrReserved__ *v46;
  unint64_t *v47;
  unint64_t v48;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v49;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v50;
  unsigned int *v51;
  unsigned int v52;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v53;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v54;
  uint64_t *v55;
  unsigned int *v56;
  unsigned int v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  pxrInternal__aapl__pxrReserved__::SdfPath *v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v74;
  uint64_t *v75;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v76;
  _QWORD *Layers;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t *v82;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v83;
  unsigned int *v84;
  unsigned int v85;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v86;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v87;
  uint64_t *v88;
  unsigned int *v89;
  unsigned int v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  _QWORD *v97;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v98;
  uint64_t v99;
  char *v100;
  _QWORD *v101;
  uint64_t v102;
  pxrInternal__aapl__pxrReserved__::SdfPath *v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v107;
  uint64_t *v108;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v109;
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v116;
  unsigned int *v117;
  unsigned int v118;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  _QWORD *v120;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v122;
  int HasField;
  uint64_t v124;
  BOOL v125;
  pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *v127;
  uint64_t *v128;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v129;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v130;
  unsigned int *v131;
  unsigned int v132;
  unsigned int *v133;
  unsigned int v134;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v136;
  int v137;
  unsigned int *v138;
  unsigned int v139;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v140;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v141;
  unsigned int *v142;
  unsigned int v143;
  unsigned int *v144;
  unsigned int v145;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v146;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v147;
  unsigned int *v148;
  unsigned int v149;
  unsigned int *v150;
  unsigned int v151;
  unsigned int *v152;
  unsigned int v153;
  unsigned int *v154;
  unsigned int v155;
  unint64_t v156;
  unint64_t v157;
  _QWORD *v159;
  pxrInternal__aapl__pxrReserved__::SdfPath *v160;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v161;
  int v162;
  int v163;
  uint64_t v164;
  unsigned __int8 v165[8];
  uint64_t v166;
  unint64_t v167;
  int v168;
  pxrInternal__aapl__pxrReserved__ *v169;
  int v170;
  int v171;
  uint64_t v172;
  int v173;
  int v174;
  uint64_t v175;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v176;
  int v177;
  int v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;

  v165[0] = 0;
  v166 = 0;
  v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v167);
  v12 = *(_DWORD *)a2;
  if (*(int *)a2 < 2)
  {
    if (v12 != 1)
      goto LABEL_34;
    v19 = *((_QWORD *)a2 + 1);
    if (!v19 || (v20 = *(_QWORD *)(v19 + 56), (v20 & 0x800) != 0))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)a2 + 1), v11);
      v20 = *(_QWORD *)(v19 + 56);
      v19 = *((_QWORD *)a2 + 1);
    }
    if ((v20 & 0x4000) == 0)
    {
      v21 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v21)
        v21 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v21 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v19);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v180, PrimIndex, 1);
        if (v181 != v182)
        {
          while (1)
          {
            v175 = 0;
            v120 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v183);
            v186 = v181;
            Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186);
            v122 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v122)
              v122 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            *((_QWORD *)&v186 + 1) = &v175;
            *(_QWORD *)&v187 = &stru_24C51BCE0;
            WORD4(v187) = 0;
            *(_QWORD *)&v186 = &unk_24C5286B0;
            HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v120, Path, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v122 + 448), (uint64_t (***)(_QWORD, uint64_t))&v186);
            v124 = v175;
            v125 = HasField && BYTE8(v187) == 0;
            if (v125 && v175 != 0)
            {
              v127 = (pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfTokens);
              if (!v127)
                v127 = sub_20BFE0E90(&pxrInternal__aapl__pxrReserved__::SdfTokens);
              v124 = v175;
              if ((v175 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v127 & 0xFFFFFFFFFFFFFFF8))
              {
                v128 = (uint64_t *)v183;
                v186 = v181;
                v129 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186);
                v130 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                if (!v130)
                  v130 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                *(_QWORD *)&v186 = 0;
                sub_20C46E08C((uint64_t)v165, v128, v129, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v130 + 448), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v186);
                if ((v186 & 7) != 0)
                {
                  v131 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
                  do
                    v132 = __ldxr(v131);
                  while (__stlxr(v132 - 2, v131));
                }
                v124 = v175;
                if (v165[0])
                  break;
              }
            }
            if ((v124 & 7) != 0)
            {
              v133 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
              do
                v134 = __ldxr(v133);
              while (__stlxr(v134 - 2, v133));
            }
            pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v180);
            if ((_QWORD)v181 == (_QWORD)v182 && *((_QWORD *)&v181 + 1) == *((_QWORD *)&v182 + 1))
              goto LABEL_182;
          }
          if ((v175 & 7) != 0)
          {
            v154 = (unsigned int *)(v175 & 0xFFFFFFFFFFFFFFF8);
            do
              v155 = __ldxr(v154);
            while (__stlxr(v155 - 2, v154));
          }
        }
      }
      else
      {
        v22 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v22)
          v22 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v22 + 39) & 0xFFFFFFFFFFFFFFF8))
        {
          if (!pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v19 + 16))
            && ((*(_BYTE *)(v19 + 57) & 0x10) == 0
             || !pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v19 + 16))))
          {
            v136 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v19);
            pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v180, v136, 1);
            while (v181 != v182)
            {
              LODWORD(v175) = 1;
              v159 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v183);
              v186 = v181;
              v160 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186);
              v161 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v161)
                v161 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              *((_QWORD *)&v186 + 1) = &v175;
              *(_QWORD *)&v187 = &stru_24C527CB0;
              WORD4(v187) = 0;
              *(_QWORD *)&v186 = &unk_24C539DB8;
              v162 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v159, v160, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v161 + 312), (uint64_t (***)(_QWORD, uint64_t))&v186);
              if (BYTE8(v187))
                v163 = 0;
              else
                v163 = v162;
              if (v163 == 1 && (_DWORD)v175 != 1)
              {
                if (!(_DWORD)v175)
                  break;
                v186 = v181;
                if (!(_QWORD)v181 || *((_QWORD *)&v181 + 1) == -1)
                  break;
                while (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186) != 1
                     || pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsDueToAncestor((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186))
                {
                  *(_QWORD *)&v186 = pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetParentNode((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186);
                  *((_QWORD *)&v186 + 1) = v164;
                  if (!(_QWORD)v186 || v164 == -1)
                    goto LABEL_142;
                }
              }
              pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v180);
            }
          }
LABEL_142:
          v165[0] = 1;
          goto LABEL_183;
        }
        v23 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v23)
          v23 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v23 + 26) & 0xFFFFFFFFFFFFFFF8))
        {
          v140 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v19);
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v180, v140, 1);
          *(_QWORD *)&v186 = 0;
          v141 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v141)
            v141 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          v175 = 0;
          sub_20C46E14C(v19, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v186, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v141 + 208), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v175, a5, (uint64_t)&v180, v165);
          if ((v175 & 7) != 0)
          {
            v142 = (unsigned int *)(v175 & 0xFFFFFFFFFFFFFFF8);
            do
              v143 = __ldxr(v142);
            while (__stlxr(v143 - 2, v142));
          }
          if ((v186 & 7) != 0)
          {
            v144 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
            do
              v145 = __ldxr(v144);
            while (__stlxr(v145 - 2, v144));
          }
        }
        else
        {
          v24 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v24)
            v24 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v24 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_34;
          v146 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v19);
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v180, v146, 1);
          *(_QWORD *)&v186 = 0;
          v147 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v147)
            v147 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          v175 = 0;
          sub_20C46E14C(v19, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v186, v147, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v175, a5, (uint64_t)&v180, v165);
          if ((v175 & 7) != 0)
          {
            v148 = (unsigned int *)(v175 & 0xFFFFFFFFFFFFFFF8);
            do
              v149 = __ldxr(v148);
            while (__stlxr(v149 - 2, v148));
          }
          if ((v186 & 7) != 0)
          {
            v150 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
            do
              v151 = __ldxr(v150);
            while (__stlxr(v151 - 2, v150));
          }
        }
      }
LABEL_182:
      if (!v165[0])
        goto LABEL_187;
LABEL_183:
      Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
      if (Instance)
        goto LABEL_185;
      goto LABEL_184;
    }
    v26 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v10);
    v27 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v19);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetRootNode(v27);
    *(_QWORD *)&v180 = v28;
    *((_QWORD *)&v180 + 1) = v29;
    if (*((_QWORD *)this + 5)
      && (LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v180),
          v31 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack),
          **(_QWORD **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v31) == *((_QWORD *)this + 5)))
    {
      v137 = sub_20C46E08C((uint64_t)v165, (uint64_t *)this + 5, v26, a3, a4);
      if (v165[0])
        goto LABEL_144;
      v32 = v137;
    }
    else
    {
      v32 = 0;
    }
    if ((v32 | sub_20C46E08C((uint64_t)v165, (uint64_t *)this + 4, v26, a3, a4)) != 1)
      goto LABEL_187;
LABEL_144:
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (Instance)
      goto LABEL_185;
    goto LABEL_184;
  }
  if (v12 == 3)
  {
    v13 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v13)
      v13 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v13 + 56) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD760((uint64_t)a2, (uint64_t)&v180);
      v34 = *((_QWORD *)&v180 + 1);
      if (!*((_QWORD *)&v180 + 1) || (*(_BYTE *)(*((_QWORD *)&v180 + 1) + 57) & 8) != 0)
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&v180 + 1), v33);
      v35 = *(unint64_t **)(v34 + 24);
      PrimDefinition = atomic_load(v35 + 7);
      if (!PrimDefinition)
        PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v35);
      v37 = sub_20C398E78(&v180);
      *(_QWORD *)&v186 = 0;
      sub_20C46E018((uint64_t)v165, PrimDefinition, v37, a3, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v186);
      if ((v186 & 7) != 0)
      {
        v38 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
        do
          v39 = __ldxr(v38);
        while (__stlxr(v39 - 2, v38));
      }
      if (!v165[0])
      {
        *(_QWORD *)&v186 = 0;
        sub_20C46DF1C((uint64_t)&v180, a3, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v186, a5, v165);
        if ((v186 & 7) != 0)
        {
          v40 = (unsigned int *)(v186 & 0xFFFFFFFFFFFFFFF8);
          do
            v41 = __ldxr(v40);
          while (__stlxr(v41 - 2, v40));
        }
      }
      if ((BYTE8(v181) & 7) != 0)
      {
        v42 = (unsigned int *)(*((_QWORD *)&v181 + 1) & 0xFFFFFFFFFFFFFFF8);
        do
          v43 = __ldxr(v42);
        while (__stlxr(v43 - 2, v42));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v181 + 1);
      sub_20BFD265C(&v181);
      v44 = (pxrInternal__aapl__pxrReserved__ *)*((_QWORD *)&v180 + 1);
      if (!*((_QWORD *)&v180 + 1))
      {
LABEL_176:
        if (!v165[0])
          goto LABEL_187;
        Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        if (Instance)
          goto LABEL_185;
        goto LABEL_184;
      }
LABEL_175:
      sub_20C35C614(v44);
      goto LABEL_176;
    }
    v14 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v14)
      v14 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v14 + 58) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD760((uint64_t)a2, (uint64_t)&v168);
      v46 = v169;
      if (!v169 || (*((_BYTE *)v169 + 57) & 8) != 0)
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v169, v45);
      v47 = (unint64_t *)*((_QWORD *)v46 + 3);
      v48 = atomic_load(v47 + 7);
      if (!v48)
        v48 = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v47);
      v49 = sub_20C398E78(&v168);
      v50 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v50)
        v50 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      *(_QWORD *)&v180 = 0;
      sub_20C46E018((uint64_t)v165, v48, v49, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v50 + 464), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v180);
      if ((v180 & 7) != 0)
      {
        v51 = (unsigned int *)(v180 & 0xFFFFFFFFFFFFFFF8);
        do
          v52 = __ldxr(v51);
        while (__stlxr(v52 - 2, v51));
      }
      if (!v165[0])
      {
        v53 = sub_20C398E78(&v168);
        sub_20C35C4F8((uint64_t)&v175, (uint64_t *)&v169, &v170);
        v55 = (uint64_t *)sub_20C368FF0((uint64_t)&v175, v54);
        pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v55, 6u, (uint64_t *)&v186);
        v184 = v186;
        v185 = v187;
        v180 = v187;
        v181 = v187;
        v182 = v186;
        v183 = v186;
        if ((v179 & 7) != 0)
        {
          v56 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
          do
            v57 = __ldxr(v56);
          while (__stlxr(v57 - 2, v56));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v178);
        sub_20BFD265C(&v177);
        if (v176)
          sub_20C35C614(v176);
        if (v181 != v183)
        {
          while (1)
          {
            v60 = sub_20C444D70(&v180, v58, v59);
            v61 = v60[3] - 1;
            *(_QWORD *)&v186 = v60[2];
            *((_QWORD *)&v186 + 1) = v61;
            if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186) & 1) == 0)
            {
              v64 = sub_20C444D70(&v180, v62, v63);
              v65 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v64[3] - 1);
              v175 = v64[2];
              v176 = v65;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v175) & 1) != 0)
                break;
            }
LABEL_88:
            sub_20C444E44(&v180);
            if (v181 == v183)
              goto LABEL_171;
          }
          v68 = sub_20C444D70(&v180, v66, v67);
          v69 = v68[3] - 1;
          *(_QWORD *)&v186 = v68[2];
          *((_QWORD *)&v186 + 1) = v69;
          v70 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v70, v53, &v173);
          v73 = sub_20C444D70(&v180, v71, v72);
          v74 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v73[3] - 1);
          v175 = v73[2];
          v176 = v74;
          v75 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v175);
          v76 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v75);
          Layers = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v76);
          *(_QWORD *)&v186 = Layers[1];
          *((_QWORD *)&v186 + 1) = v186;
          *(_QWORD *)&v187 = *Layers;
          *((_QWORD *)&v187 + 1) = v187;
          while (1)
          {
            if (*((_QWORD *)&v186 + 1) == *((_QWORD *)&v187 + 1))
            {
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v174);
              sub_20BFD265C(&v173);
              goto LABEL_88;
            }
            sub_20C45A2E0(&v180, v78, v79);
            v82 = (uint64_t *)sub_20C22F36C((uint64_t)&v186, v80, v81);
            v83 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v83)
              v83 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            v175 = 0;
            sub_20C46E08C((uint64_t)v165, v82, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v173, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v83 + 464), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v175);
            if ((v175 & 7) != 0)
            {
              v84 = (unsigned int *)(v175 & 0xFFFFFFFFFFFFFFF8);
              do
                v85 = __ldxr(v84);
              while (__stlxr(v85 - 2, v84));
            }
            if (v165[0])
              break;
            sub_20C22F508((uint64_t)&v186);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v174);
          sub_20BFD265C(&v173);
        }
      }
LABEL_171:
      if ((v172 & 7) != 0)
      {
        v152 = (unsigned int *)(v172 & 0xFFFFFFFFFFFFFFF8);
        do
          v153 = __ldxr(v152);
        while (__stlxr(v153 - 2, v152));
      }
LABEL_174:
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v171);
      sub_20BFD265C(&v170);
      v44 = v169;
      if (!v169)
        goto LABEL_176;
      goto LABEL_175;
    }
  }
  v15 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v15)
    v15 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v15 + 8) & 0xFFFFFFFFFFFFFFF8))
  {
    sub_20C3AD664((uint64_t)a2, (uint64_t)&v168);
    pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v168, (uint64_t)&v180);
    v16 = *((_QWORD *)&v180 + 1);
    if ((v180 & 7) != 0)
    {
      v17 = (unsigned int *)(v180 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v165[0] = 1;
    }
    else
    {
      v86 = sub_20C398E78(&v168);
      sub_20C35C4F8((uint64_t)&v175, (uint64_t *)&v169, &v170);
      v88 = (uint64_t *)sub_20C368FF0((uint64_t)&v175, v87);
      pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v88, 6u, (uint64_t *)&v186);
      v184 = v186;
      v185 = v187;
      v180 = v187;
      v181 = v187;
      v182 = v186;
      v183 = v186;
      if ((v179 & 7) != 0)
      {
        v89 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
        do
          v90 = __ldxr(v89);
        while (__stlxr(v90 - 2, v89));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v178);
      sub_20BFD265C(&v177);
      if (v176)
        sub_20C35C614(v176);
      if (v181 != v183)
      {
        while (1)
        {
          v93 = sub_20C444D70(&v180, v91, v92);
          v94 = v93[3] - 1;
          *(_QWORD *)&v186 = v93[2];
          *((_QWORD *)&v186 + 1) = v94;
          if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186) & 1) == 0)
          {
            v97 = sub_20C444D70(&v180, v95, v96);
            v98 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v97[3] - 1);
            v175 = v97[2];
            v176 = v98;
            if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v175) & 1) != 0)
              break;
          }
LABEL_108:
          sub_20C444E44(&v180);
          if (v181 == v183)
            goto LABEL_147;
        }
        v101 = sub_20C444D70(&v180, v99, v100);
        v102 = v101[3] - 1;
        *(_QWORD *)&v186 = v101[2];
        *((_QWORD *)&v186 + 1) = v102;
        v103 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v186);
        pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v103, v86, &v173);
        v106 = sub_20C444D70(&v180, v104, v105);
        v107 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v106[3] - 1);
        v175 = v106[2];
        v176 = v107;
        v108 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v175);
        v109 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v108);
        v110 = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v109);
        *(_QWORD *)&v186 = v110[1];
        *((_QWORD *)&v186 + 1) = v186;
        *(_QWORD *)&v187 = *v110;
        *((_QWORD *)&v187 + 1) = v187;
        while (1)
        {
          if (*((_QWORD *)&v186 + 1) == *((_QWORD *)&v187 + 1))
          {
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v174);
            sub_20BFD265C(&v173);
            goto LABEL_108;
          }
          sub_20C45A2E0(&v180, v111, v112);
          v115 = (uint64_t *)sub_20C22F36C((uint64_t)&v186, v113, v114);
          v116 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v116)
            v116 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          v175 = 0;
          sub_20C46E08C((uint64_t)v165, v115, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v173, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v116 + 64), (const pxrInternal__aapl__pxrReserved__::TfToken *)&v175);
          if ((v175 & 7) != 0)
          {
            v117 = (unsigned int *)(v175 & 0xFFFFFFFFFFFFFFF8);
            do
              v118 = __ldxr(v117);
            while (__stlxr(v118 - 2, v117));
          }
          if (v165[0])
            break;
          sub_20C22F508((uint64_t)&v186);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v174);
        sub_20BFD265C(&v173);
      }
    }
LABEL_147:
    if ((v172 & 7) != 0)
    {
      v138 = (unsigned int *)(v172 & 0xFFFFFFFFFFFFFFF8);
      do
        v139 = __ldxr(v138);
      while (__stlxr(v139 - 2, v138));
    }
    goto LABEL_174;
  }
LABEL_34:
  if (!sub_20C46DF1C((uint64_t)a2, a3, a4, a5, v165))
    goto LABEL_187;
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
LABEL_184:
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
LABEL_185:
  v156 = v167;
  v157 = atomic_load(Instance + 18);
  if (v156 < v157)
    pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v167, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
LABEL_187:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v167);
  return v165[0];
}

void sub_20C449FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  va_list va;

  va_start(va, a3);
  v5 = *(_QWORD *)(v3 - 96);
  if ((v5 & 7) != 0)
  {
    v6 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_ListMetadataFields(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdObject *a2@<X1>, char a3@<W2>, char **a4@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  unsigned int **v8;
  unsigned int v9;
  pxrInternal__aapl__pxrReserved__::UsdStage *v10;
  uint64_t v11;
  unsigned int *v12;
  unsigned int v13;
  unint64_t v14;
  const char *v15;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v16;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v18;
  uint64_t v19;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v21;
  pxrInternal__aapl__pxrReserved__::SdfLayer **v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  char *v29;
  pxrInternal__aapl__pxrReserved__::SdfLayer **v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  char *v37;
  unint64_t Instance;
  unint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  char *v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  const char *v52;
  uint64_t v53;
  const char *v54;
  char v55;
  _QWORD v56[2];
  void **v57;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  v7 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a2 + 1);
  if (*(int *)a2 < 2)
  {
    v10 = this;
    if (!v7 || (v11 = *((_QWORD *)v7 + 7), (v11 & 0x800) != 0))
    {
      this = (pxrInternal__aapl__pxrReserved__::UsdStage *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)a2 + 1), a2);
      v11 = *((_QWORD *)v7 + 7);
    }
    if ((v11 & 0x4000) != 0)
    {
      v16 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(this);
      PrimIndex = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v7);
      pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetRootNode(PrimIndex);
      v56[0] = v18;
      v56[1] = v19;
      if (*((_QWORD *)v10 + 5))
      {
        LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v56);
        v21 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
        if (**(_QWORD **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v21) == *((_QWORD *)v10 + 5))
        {
          v22 = (pxrInternal__aapl__pxrReserved__::SdfLayer **)sub_20C0EEAF8((uint64_t *)v10 + 5);
          pxrInternal__aapl__pxrReserved__::SdfLayer::ListFields(v22, v16, &v51);
          v23 = (uint64_t *)v51;
          v24 = (uint64_t *)v52;
          while (v23 != v24)
          {
            if ((sub_20C44AA64((const pxrInternal__aapl__pxrReserved__::TfToken *)v23) & 1) == 0)
            {
              v25 = (uint64_t *)a4[1];
              if (v25 >= (uint64_t *)a4[2])
              {
                v29 = sub_20BFCA068(a4, v23);
              }
              else
              {
                v26 = *v23;
                *v25 = *v23;
                if ((v26 & 7) != 0)
                {
                  v27 = (unsigned int *)(v26 & 0xFFFFFFFFFFFFFFF8);
                  do
                    v28 = __ldxr(v27);
                  while (__stxr(v28 + 2, v27));
                  if ((v28 & 1) == 0)
                    *v25 &= 0xFFFFFFFFFFFFFFF8;
                }
                v29 = (char *)(v25 + 1);
              }
              a4[1] = v29;
            }
            ++v23;
          }
          v57 = (void **)&v51;
          sub_20BEEB2B8(&v57);
        }
      }
      v30 = (pxrInternal__aapl__pxrReserved__::SdfLayer **)sub_20C0EEAF8((uint64_t *)v10 + 4);
      pxrInternal__aapl__pxrReserved__::SdfLayer::ListFields(v30, v16, &v51);
      v31 = (uint64_t *)v51;
      v32 = (uint64_t *)v52;
      while (v31 != v32)
      {
        if ((sub_20C44AA64((const pxrInternal__aapl__pxrReserved__::TfToken *)v31) & 1) == 0)
        {
          v33 = (uint64_t *)a4[1];
          if (v33 >= (uint64_t *)a4[2])
          {
            v37 = sub_20BFCA068(a4, v31);
          }
          else
          {
            v34 = *v31;
            *v33 = *v31;
            if ((v34 & 7) != 0)
            {
              v35 = (unsigned int *)(v34 & 0xFFFFFFFFFFFFFFF8);
              do
                v36 = __ldxr(v35);
              while (__stxr(v36 + 2, v35));
              if ((v36 & 1) == 0)
                *v33 &= 0xFFFFFFFFFFFFFFF8;
            }
            v37 = (char *)(v33 + 1);
          }
          a4[1] = v37;
        }
        ++v31;
      }
      v57 = (void **)&v51;
      sub_20BEEB2B8(&v57);
      v9 = 7;
      goto LABEL_44;
    }
    v51 = 0;
    v9 = sub_20C44A7D4(v7, (unsigned int **)&v51, a3, (uint64_t)a4);
    if ((v51 & 7) != 0)
    {
      v12 = (unsigned int *)(v51 & 0xFFFFFFFFFFFFFFF8);
      do
        v13 = __ldxr(v12);
      while (__stlxr(v13 - 2, v12));
    }
  }
  else
  {
    v8 = (unsigned int **)sub_20C398E78(a2);
    v9 = sub_20C44A7D4(v7, v8, a3, (uint64_t)a4);
  }
  if (v9 >= 0xC)
  {
    v51 = (unint64_t)"usd/stage.cpp";
    v52 = "_ListMetadataFields";
    v53 = 7685;
    v54 = "TfTokenVector pxrInternal__aapl__pxrReserved__::UsdStage::_ListMetadataFields(const UsdObject &, BOOL) const";
    v55 = 0;
    v14 = *(_QWORD *)sub_20C398E78(a2) & 0xFFFFFFFFFFFFFFF8;
    if (v14)
    {
      v15 = (const char *)(v14 + 16);
      if (*(char *)(v14 + 39) < 0)
        v15 = *(const char **)v15;
    }
    else
    {
      v15 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v51, 1, (pxrInternal__aapl__pxrReserved__ *)"Illegal SpecType int(specType)==<%i> for UsdObject: %s.", v9, v15);
    return;
  }
LABEL_44:
  Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (*(_BYTE *)(Instance + 72 * v9 + 120))
  {
    v39 = Instance + 72 * v9;
    v40 = *(uint64_t **)(v39 + 96);
    v41 = *(uint64_t **)(v39 + 104);
    while (v40 != v41)
    {
      if ((sub_20C44AA64((const pxrInternal__aapl__pxrReserved__::TfToken *)v40) & 1) == 0)
      {
        v42 = (uint64_t *)a4[1];
        if (v42 >= (uint64_t *)a4[2])
        {
          v46 = sub_20BFCA068(a4, v40);
        }
        else
        {
          v43 = *v40;
          *v42 = *v40;
          if ((v43 & 7) != 0)
          {
            v44 = (unsigned int *)(v43 & 0xFFFFFFFFFFFFFFF8);
            do
              v45 = __ldxr(v44);
            while (__stxr(v45 + 2, v44));
            if ((v45 & 1) == 0)
              *v42 &= 0xFFFFFFFFFFFFFFF8;
          }
          v46 = (char *)(v42 + 1);
        }
        a4[1] = v46;
      }
      ++v40;
    }
  }
  v47 = (uint64_t *)a4[1];
  v48 = 126 - 2 * __clz(((char *)v47 - *a4) >> 3);
  if (v47 == (uint64_t *)*a4)
    v49 = 0;
  else
    v49 = v48;
  sub_20BFE19BC((pxrInternal__aapl__pxrReserved__::TfToken *)*a4, v47, (uint64_t)&v51, v49, 1);
  v50 = sub_20C3A217C(*a4, a4[1]);
  sub_20C117D14((uint64_t)a4, v50, a4[1]);
}

void sub_20C44A764(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 56) = v1;
  sub_20BEEB2B8((void ***)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_20C44A7D4(pxrInternal__aapl__pxrReserved__::Usd_PrimData *a1, unsigned int **a2, char a3, uint64_t a4)
{
  unint64_t *v8;
  pxrInternal__aapl__pxrReserved__::UsdPrimDefinition *PrimDefinition;
  uint64_t SpecType;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  BOOL i;
  uint64_t *v14;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v15;
  pxrInternal__aapl__pxrReserved__::SdfLayer **v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  char *v23;
  uint64_t *v25;
  uint64_t *v26;
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int v33;
  int v34;
  void **v35;

  v8 = (unint64_t *)*((_QWORD *)a1 + 3);
  PrimDefinition = (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition *)atomic_load(v8 + 7);
  if (!PrimDefinition)
    PrimDefinition = (pxrInternal__aapl__pxrReserved__::UsdPrimDefinition *)pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v8);
  if (*a2)
    SpecType = pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::GetSpecType(PrimDefinition, a2);
  else
    SpecType = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v33);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v34);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(a1);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v27, PrimIndex, 1);
  for (i = 1;
        v28 != v30 || v29 != v31;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v27))
  {
    if (i)
    {
      sub_20C453680((uint64_t)v27, (const pxrInternal__aapl__pxrReserved__::TfToken *)a2, (int *)&v25);
      sub_20BFD3EBC(&v33, (int *)&v25);
      sub_20BFD3F10(&v34, (int *)&v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v25 + 1);
      sub_20BFD265C(&v25);
    }
    v14 = v32;
    if (!(_DWORD)SpecType)
    {
      v15 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v32);
      SpecType = pxrInternal__aapl__pxrReserved__::SdfLayer::GetSpecType(v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v33);
    }
    v16 = (pxrInternal__aapl__pxrReserved__::SdfLayer **)sub_20C0EEAF8(v14);
    pxrInternal__aapl__pxrReserved__::SdfLayer::ListFields(v16, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v33, &v25);
    v17 = v25;
    v18 = v26;
    while (v17 != v18)
    {
      if ((sub_20C44AA64((const pxrInternal__aapl__pxrReserved__::TfToken *)v17) & 1) == 0)
      {
        v19 = *(uint64_t **)(a4 + 8);
        if ((unint64_t)v19 >= *(_QWORD *)(a4 + 16))
        {
          v23 = sub_20BFCA068((char **)a4, v17);
        }
        else
        {
          v20 = *v17;
          *v19 = *v17;
          if ((v20 & 7) != 0)
          {
            v21 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
            do
              v22 = __ldxr(v21);
            while (__stxr(v22 + 2, v21));
            if ((v22 & 1) == 0)
              *v19 &= 0xFFFFFFFFFFFFFFF8;
          }
          v23 = (char *)(v19 + 1);
        }
        *(_QWORD *)(a4 + 8) = v23;
      }
      ++v17;
    }
    v35 = (void **)&v25;
    sub_20BEEB2B8(&v35);
  }
  if ((a3 & 1) != 0)
  {
    if (*a2)
      pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::ListPropertyMetadataFields(PrimDefinition, a2, (uint64_t)&v25);
    else
      pxrInternal__aapl__pxrReserved__::UsdPrimDefinition::ListMetadataFields(PrimDefinition, (uint64_t)&v25);
    sub_20C1292A0((uint64_t *)a4, *(_QWORD **)(a4 + 8), v25, v26, v26 - v25);
    v35 = (void **)&v25;
    sub_20BEEB2B8(&v35);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  return SpecType;
}

void sub_20C44AA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  uint64_t v21;

  *(_QWORD *)(v21 - 88) = &a9;
  sub_20BEEB2B8((void ***)(v21 - 88));
  sub_20BFD1A18(&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_20C44AA64(const pxrInternal__aapl__pxrReserved__::TfToken *a1)
{
  unsigned __int8 v2;
  unint64_t v3;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *FieldDefinition;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *v7;
  char v8;
  char **v9;
  char *v10;

  v2 = atomic_load((unsigned __int8 *)&qword_254988DB8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254988DB8))
  {
    xmmword_254988D90 = 0u;
    unk_254988DA0 = 0u;
    dword_254988DB0 = 1065353216;
    __cxa_atexit((void (*)(void *))sub_20C4536FC, &xmmword_254988D90, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988DB8);
  }
  v3 = atomic_load(&qword_254988DC0);
  if (v3 != -1)
  {
    v10 = &v8;
    v9 = &v10;
    std::__call_once(&qword_254988DC0, &v9, (void (__cdecl *)(void *))sub_20C453700);
  }
  if (sub_20BF2B388(&xmmword_254988D90, a1))
    return 1;
  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  FieldDefinition = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFieldDefinition(Instance, a1);
  if (FieldDefinition
    && ((v7 = FieldDefinition,
         (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::IsReadOnly(FieldDefinition) & 1) != 0)
     || (pxrInternal__aapl__pxrReserved__::SdfSchemaBase::FieldDefinition::HoldsChildren(v7) & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetAllMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::UsdObject *a2, int a3, uint64_t **a4, char a5)
{
  const pxrInternal__aapl__pxrReserved__::TfToken *v10;
  const pxrInternal__aapl__pxrReserved__::TfToken *v11;
  unsigned int *v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int *v15;
  unsigned int v16;
  void **v17[2];
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  int v19;
  int v20;
  uint64_t v21;
  const pxrInternal__aapl__pxrReserved__::TfToken *v22;
  char *v23;
  unint64_t v24;
  _QWORD v25[3];

  v25[2] = *MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::UsdStage::_ListMetadataFields(a1, a2, a3, (char **)&v22);
  v10 = v22;
  v11 = (const pxrInternal__aapl__pxrReserved__::TfToken *)v23;
  if (v22 != (const pxrInternal__aapl__pxrReserved__::TfToken *)v23)
  {
    do
    {
      v25[1] = 0;
      sub_20C445694((uint64_t)v17, (uint64_t)v25, (uint64_t)a2, a5);
      v24 = 0;
      sub_20C445744((uint64_t *)a1, (uint64_t)a2, v10, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v24, a3, (const pxrInternal__aapl__pxrReserved__::VtDictionary ***)v17);
      if ((v24 & 7) != 0)
      {
        v12 = (unsigned int *)(v24 & 0xFFFFFFFFFFFFFFF8);
        do
          v13 = __ldxr(v12);
        while (__stlxr(v13 - 2, v12));
      }
      v24 = (unint64_t)v10;
      v14 = sub_20C463C74(a4, v10, (uint64_t)&unk_20CAC184C, (uint64_t **)&v24);
      sub_20BF4A9BC(v14 + 5, v25);
      if ((v21 & 7) != 0)
      {
        v15 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
        do
          v16 = __ldxr(v15);
        while (__stlxr(v16 - 2, v15));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
      if (v18)
        sub_20C35C614(v18);
      sub_20BF4C2D8((uint64_t)v25);
      v10 = (const pxrInternal__aapl__pxrReserved__::TfToken *)((char *)v10 + 8);
    }
    while (v10 != v11);
  }
  v17[0] = (void **)&v22;
  sub_20BEEB2B8(v17);
}

void sub_20C44AD08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  _Unwind_Resume(exception_object);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::Usd_AttrGetValueHelper<pxrInternal__aapl__pxrReserved__::SdfAssetPath>::_ResolveValue(pxrInternal__aapl__pxrReserved__::UsdStage *a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a2, uint64_t a3, double a4)
{
  return pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedAssetPaths(a1, a2, a3, 1, 0, a4);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **pxrInternal__aapl__pxrReserved__::Usd_AttrGetValueHelper<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::SdfAssetPath>>::_ResolveValue(pxrInternal__aapl__pxrReserved__::UsdStage *a1, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a2, pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *this, double a4)
{
  sub_20C00ACF8(this, (uint64_t)a2, (char *)this);
  return pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedAssetPaths(a1, a2, *((_QWORD *)this + 4), *(_QWORD *)this, 0, a4);
}

uint64_t pxrInternal__aapl__pxrReserved__::Usd_AttrGetValueHelper<pxrInternal__aapl__pxrReserved__::SdfTimeCode>::_ResolveValue(uint64_t a1, _DWORD *a2, double *a3, double a4)
{
  return pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedTimeCodes(a1, a2, a3, 1, a4);
}

uint64_t pxrInternal__aapl__pxrReserved__::Usd_AttrGetValueHelper<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::SdfTimeCode>>::_ResolveValue(uint64_t a1, _DWORD *a2, double **this, double a4)
{
  sub_20C00783C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)this, (uint64_t)a2, (char *)this);
  return pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedTimeCodes(a1, a2, this[4], (uint64_t)*this, a4);
}

uint64_t pxrInternal__aapl__pxrReserved__::Usd_AttrGetValueHelper<pxrInternal__aapl__pxrReserved__::SdfPathExpression>::_ResolveValue(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedPathExpressions(a1, a2, a3, 1, a4);
}

uint64_t pxrInternal__aapl__pxrReserved__::Usd_AttrGetValueHelper<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::SdfPathExpression>>::_ResolveValue(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *this, double a4)
{
  sub_20C00EEBC(this, a2, (char *)this);
  return pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedPathExpressions(a1, a2, *((_QWORD *)this + 4), *(_QWORD *)this, a4);
}

uint64_t sub_20C44AE94(pxrInternal__aapl__pxrReserved__::UsdStage *this, pxrInternal__aapl__pxrReserved__::UsdObject *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3, double a4)
{
  uint64_t v8;
  char v9;
  uint64_t (**v11[4])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);

  v11[3] = *(uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))MEMORY[0x24BDAC8D0];
  v11[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C5367E8;
  v11[1] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a2;
  v11[2] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a3;
  v8 = sub_20C453954((uint64_t)this, a2, v11, a3, a4);
  v9 = v8 ^ 1;
  if (!a3)
    v9 = 1;
  if ((v9 & 1) == 0)
    pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedAttributeValue(this, a2, (uint64_t *)a3, a4);
  return v8;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetPropertyStack(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__ **a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  unint64_t *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v12;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v19;
  _OWORD v20[3];
  char v21;
  double v22;
  void **v23[2];

  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v22 = a4;
  v7 = (unint64_t *)a2[1];
  if (!v7)
    goto LABEL_5;
  v8 = v7 + 6;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  v10 = v7[7];
  if ((v10 & 0x800) != 0)
  {
LABEL_5:
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    v10 = v7[7];
  }
  if ((v10 & 0x400) != 0)
  {
    v14 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
    if ((v10 & 0x800) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v7 + 2));
    v17 = a2[1];
    if (!v17 || (*((_BYTE *)v17 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(a2[1], v15);
    PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v17);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, PrimIndex, 0);
    v19 = sub_20C398E78(a2);
    sub_20C46F324((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, v19, (uint64_t)v20, &v22, (uint64_t)ClipsForPrim);
  }
  else
  {
    v11 = a2[1];
    if (!v11 || (*((_BYTE *)v11 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(a2[1], (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    v12 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v11);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, v12, 1);
    v13 = sub_20C398E78(a2);
    sub_20C46F5B0((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, v13, (uint64_t)v20);
  }
  sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v7);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  sub_20C46F85C((char *)a3, *(unsigned int ***)&v20[0], *((unsigned int ***)&v20[0] + 1), (uint64_t)(*((_QWORD *)&v20[0] + 1) - *(_QWORD *)&v20[0]) >> 3);
  v23[0] = (void **)&v20[1] + 1;
  sub_20C21DAE8(v23);
  v23[0] = (void **)v20;
  sub_20BFE69E4(v23);
}

void sub_20C44B2A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  sub_20BFD1A18(&a19);
  sub_20C44B2FC(&a9);
  _Unwind_Resume(a1);
}

void **sub_20C44B2FC(void **a1)
{
  void **v3;

  v3 = a1 + 3;
  sub_20C21DAE8(&v3);
  v3 = a1;
  sub_20BFE69E4(&v3);
  return a1;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetPropertyStackWithLayerOffsets(uint64_t a1@<X0>, pxrInternal__aapl__pxrReserved__ **a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  unint64_t *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v12;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  double v24;
  void **v25[2];

  v21 = 0u;
  v22 = 0u;
  v20 = 0u;
  v23 = 1;
  v24 = a4;
  v7 = (unint64_t *)a2[1];
  if (!v7)
    goto LABEL_5;
  v8 = v7 + 6;
  do
    v9 = __ldxr(v8);
  while (__stxr(v9 + 1, v8));
  v10 = v7[7];
  if ((v10 & 0x800) != 0)
  {
LABEL_5:
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    v10 = v7[7];
  }
  if ((v10 & 0x400) != 0)
  {
    v14 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
    if ((v10 & 0x800) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v7, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v7 + 2));
    v17 = a2[1];
    if (!v17 || (*((_BYTE *)v17 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(a2[1], v15);
    PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v17);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v25, PrimIndex, 0);
    v19 = sub_20C398E78(a2);
    sub_20C46F324((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v25, v19, (uint64_t)&v20, &v24, (uint64_t)ClipsForPrim);
  }
  else
  {
    v11 = a2[1];
    if (!v11 || (*((_BYTE *)v11 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(a2[1], (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
    v12 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v11);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v25, v12, 1);
    v13 = sub_20C398E78(a2);
    sub_20C46F5B0((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v25, v13, (uint64_t)&v20);
  }
  sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v7);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  sub_20C46F8F0((char *)a3, *((uint64_t *)&v21 + 1), v22, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22 - *((_QWORD *)&v21 + 1)) >> 3));
  v25[0] = (void **)&v21 + 1;
  sub_20C21DAE8(v25);
  v25[0] = (void **)&v20;
  sub_20BFE69E4(v25);
}

void sub_20C44B5D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  sub_20BFD1A18(&a19);
  sub_20C44B2FC(&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimStack@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  const pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  char *v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  unsigned int *v14;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD v21[2];

  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v4 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)this + 1);
  if (!v4 || (*((_BYTE *)v4 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)this + 1), a2);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v4);
  for (result = pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15, PrimIndex, 1);
        v16 != v18 || v17 != v19;
        result = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15))
  {
    v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v20);
    v21[0] = v16;
    v21[1] = v17;
    Path = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v21);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetPrimAtPath(v8, Path, &v14);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v14) & 1) == 0)
    {
      v10 = *(char **)(a3 + 8);
      if ((unint64_t)v10 >= *(_QWORD *)(a3 + 16))
      {
        v13 = sub_20C0D7E80((unsigned int ***)a3, &v14);
      }
      else
      {
        v11 = v14;
        *(_QWORD *)v10 = v14;
        if (v11)
        {
          do
            v12 = __ldaxr(v11);
          while (__stlxr(v12 + 1, v11));
        }
        v13 = v10 + 8;
      }
      *(_QWORD *)(a3 + 8) = v13;
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v10, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v14);
  }
  return result;
}

void sub_20C44B728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFE69E4((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimStackWithLayerOffsets@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, const pxrInternal__aapl__pxrReserved__::UsdPrim *a2@<X1>, uint64_t *a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v4;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  const pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  void *v10;
  uint64_t v11;
  __int128 v12;
  unsigned int *v13;
  _BYTE v14[16];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  __int128 v19;

  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v4 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)this + 1);
  if (!v4 || (*((_BYTE *)v4 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)this + 1), a2);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v4);
  for (result = pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v14, PrimIndex, 1);
        (_QWORD)v15 != v16 || *((_QWORD *)&v15 + 1) != v17;
        result = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v14))
  {
    v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(v18);
    v19 = v15;
    Path = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v19);
    pxrInternal__aapl__pxrReserved__::SdfLayer::GetPrimAtPath(v8, Path, &v13);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v13) & 1) == 0)
    {
      v12 = v15;
      *(_QWORD *)&v19 = sub_20C44B9D4((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v12, v18);
      *((_QWORD *)&v19 + 1) = v11;
      sub_20C44B870(a3, &v13, &v19);
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v10, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v13);
  }
  return result;
}

void sub_20C44B83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20C21DAE8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C44B870(uint64_t *a1, unsigned int **a2, _OWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unsigned int **v18;
  unsigned int *v19;
  unsigned int v20;
  _QWORD v22[2];
  unsigned int **v23;
  char *v24;
  uint64_t v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD *)(v6 - 8);
  if (v9 >= v8)
  {
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *a1) >> 3);
    v14 = v13 + 1;
    if (v13 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_20BDDF694();
    v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 3);
    if (2 * v15 > v14)
      v14 = 2 * v15;
    if (v15 >= 0x555555555555555)
      v16 = 0xAAAAAAAAAAAAAAALL;
    else
      v16 = v14;
    v25 = v6;
    if (v16)
      v17 = (char *)sub_20BDE4FF4(v6, v16);
    else
      v17 = 0;
    v18 = (unsigned int **)&v17[24 * v13];
    v22[0] = v17;
    v22[1] = v18;
    v23 = v18;
    v24 = &v17[24 * v16];
    v19 = *a2;
    *v18 = *a2;
    if (v19)
    {
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 + 1, v19));
      v18 = v23;
    }
    *(_OWORD *)&v17[24 * v13 + 8] = *a3;
    v23 = v18 + 3;
    sub_20C2706EC(a1, v22);
    v12 = a1[1];
    sub_20C27077C((uint64_t)v22);
  }
  else
  {
    v10 = *a2;
    *(_QWORD *)v9 = *a2;
    if (v10)
    {
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 + 1, v10));
    }
    *(_OWORD *)(v9 + 8) = *a3;
    v12 = v9 + 24;
    a1[1] = v9 + 24;
  }
  a1[1] = v12;
  return v12 - 24;
}

void sub_20C44B9C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C27077C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_20C44B9D4(pxrInternal__aapl__pxrReserved__::PcpNodeRef *a1, _QWORD *a2)
{
  pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **MapToRoot;
  const char *v5;
  char *v6;
  uint64_t *LayerStack;
  _QWORD *v8;
  double *LayerOffsetForLayer;
  __int128 v11;

  MapToRoot = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a1);
  v11 = *(_OWORD *)((char *)pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(MapToRoot, v5, v6) + 40);
  LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a1);
  v8 = (_QWORD *)sub_20C1FE500(LayerStack);
  LayerOffsetForLayer = (double *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayerOffsetForLayer(v8, a2);
  if (LayerOffsetForLayer)
    return pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)&v11, LayerOffsetForLayer);
  else
    return *(double *)&v11;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::_GetResolveInfoWithResolveTarget(uint64_t a1, _DWORD *a2, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget *a3, _DWORD *a4, void **a5)
{
  const pxrInternal__aapl__pxrReserved__::UsdResolveTarget *v5;

  v5 = a3;
  sub_20C46F98C(a1, a2, a4, a5, 0, &v5);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetValueFromResolveInfo(pxrInternal__aapl__pxrReserved__::UsdStage *a1, uint64_t *a2, uint64_t (**a3)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), uint64_t (**a4)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), double a5)
{
  return sub_20C44BA78(a1, a3, a2, a4, a5);
}

uint64_t sub_20C44BA78(pxrInternal__aapl__pxrReserved__::UsdStage *a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), uint64_t *a3, uint64_t (**a4)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), double a5)
{
  uint64_t result;
  uint64_t (**v10[3])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double);

  v10[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double))&unk_24C5367E8;
  v10[1] = a2;
  v10[2] = a4;
  result = (uint64_t)sub_20C4554E0((uint64_t)a1, a3, (uint64_t)a2, v10, (pxrInternal__aapl__pxrReserved__::VtValue *)a4, a5);
  if ((_DWORD)result)
  {
    if (a4)
      pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedAttributeValue(a1, (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)a2, (uint64_t *)a4, a5);
    return 1;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetTimeSamplesInInterval(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _DWORD v21[3];
  _DWORD *v22;

  sub_20C361C1C((uint64_t)&v17);
  v22 = a2;
  sub_20C46E2DC(a1, a2, &v17, 0, 0, (uint64_t)&v22);
  pxrInternal__aapl__pxrReserved__::UsdStage::_GetTimeSamplesInIntervalFromResolveInfo(a1, (uint64_t)&v17, (uint64_t)a2, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v21);
  sub_20BFD265C(&v20);
  v8 = v19;
  if (v19)
  {
    v9 = (unsigned int *)(v19 + 8);
    do
    {
      v10 = __ldxr(v9);
      v11 = v10 - 1;
    }
    while (__stlxr(v11, v9));
    if (!v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
  v12 = v18;
  if (v18)
  {
    v13 = (unsigned int *)(v18 + 8);
    do
    {
      v14 = __ldxr(v13);
      v15 = v14 - 1;
    }
    while (__stlxr(v15, v13));
    if (!v15)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  }
  return 1;
}

void sub_20C44BC28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35FEE4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetTimeSamplesInIntervalFromResolveInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v5;
  BOOL v11;
  int v12;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  pxrInternal__aapl__pxrReserved__::SdfLayerOffset *v15;
  double v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v22;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v24;
  uint64_t *v25;
  uint64_t *v26;
  double Inverse;
  double v28;
  __int128 v29;
  _BOOL4 v30;
  double v31;
  int v32;
  double v33;
  int v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  void *v40;
  unsigned int *v41;
  unsigned int v42;
  _QWORD *v43;
  _QWORD *v44;
  double v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  double *v53;
  double *v54;
  __int128 v55;
  double v56;
  char v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61[2];
  int v62;
  int v63;

  v5 = *(double *)(a4 + 16);
  if (*(double *)a4 <= v5)
  {
    if (*(double *)a4 != v5 || (*(_BYTE *)(a4 + 8) ? (v11 = *(_BYTE *)(a4 + 24) == 0) : (v11 = 1), !v11))
    {
      *(_QWORD *)(a5 + 8) = *(_QWORD *)a5;
      v12 = *(_DWORD *)(a2 + 72);
      if (v12 == 4)
      {
        sub_20C35C4F8((uint64_t)&v58, (uint64_t *)(a3 + 8), (_DWORD *)(a3 + 16));
        v22 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
        sub_20C348EEC((uint64_t)&v58, (int *)&v55);
        ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v22, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v55);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v55 + 1);
        sub_20BFD265C(&v55);
        v24 = sub_20C398E78((_DWORD *)a3);
        pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64), v24, (int *)&v60);
        v25 = (uint64_t *)*ClipsForPrim;
        v26 = (uint64_t *)ClipsForPrim[1];
        while (v25 != v26)
        {
          if (sub_20C44C114((uint64_t)v25, a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64))
            && sub_20C44C164((uint64_t)v25, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v60))
          {
            pxrInternal__aapl__pxrReserved__::Usd_ClipSet::GetTimeSamplesInInterval((pxrInternal__aapl__pxrReserved__::SdfPath *)&v60, *v25, a4, (uint64_t)&v55);
            v40 = *(void **)a5;
            if (*(_QWORD *)a5)
            {
              *(_QWORD *)(a5 + 8) = v40;
              operator delete(v40);
              *(_QWORD *)a5 = 0;
              *(_QWORD *)(a5 + 8) = 0;
              *(_QWORD *)(a5 + 16) = 0;
            }
            *(_OWORD *)a5 = v55;
            *(double *)(a5 + 16) = v56;
            break;
          }
          v25 += 2;
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
        sub_20BFD265C(&v60);
        if ((BYTE8(v59) & 7) != 0)
        {
          v41 = (unsigned int *)(*((_QWORD *)&v59 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v42 = __ldxr(v41);
          while (__stlxr(v42 - 2, v41));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v59 + 1);
        sub_20BFD265C(&v59);
        if (*((_QWORD *)&v58 + 1))
          sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&v58 + 1));
      }
      else if (v12 == 3)
      {
        v13 = sub_20C398E78((_DWORD *)a3);
        pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64), v13, &v62);
        v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)(a2 + 16));
        pxrInternal__aapl__pxrReserved__::SdfLayer::ListTimeSamplesForPath(&v60, v14, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v62);
        if (!v61[1])
        {
LABEL_58:
          sub_20BE6100C((uint64_t)&v60, v61[0]);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v63);
          sub_20BFD265C(&v62);
          return 1;
        }
        v15 = (pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a2 + 48);
        if (pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity(v15))
        {
          v16 = *(double *)a4;
          v17 = v61;
          v18 = v61[0];
          if (*(_BYTE *)(a4 + 8))
          {
            if (v61[0])
            {
              v19 = v61;
              v20 = v61[0];
              do
              {
                v21 = v20 + 1;
                if (*((double *)v20 + 4) >= v16)
                {
                  v21 = v20;
                  v19 = v20;
                }
                v20 = (_QWORD *)*v21;
              }
              while (*v21);
              goto LABEL_47;
            }
          }
          else if (v61[0])
          {
            v19 = v61;
            v43 = v61[0];
            do
            {
              v44 = v43 + 1;
              if (v16 < *((double *)v43 + 4))
              {
                v44 = v43;
                v19 = v43;
              }
              v43 = (_QWORD *)*v44;
            }
            while (*v44);
            goto LABEL_47;
          }
          v19 = v61;
LABEL_47:
          v45 = *(double *)(a4 + 16);
          if (*(_BYTE *)(a4 + 24))
          {
            if (v61[0])
            {
              do
              {
                v46 = v18 + 1;
                if (v45 < *((double *)v18 + 4))
                {
                  v46 = v18;
                  v17 = v18;
                }
                v18 = (_QWORD *)*v46;
              }
              while (*v46);
            }
          }
          else
          {
            while (v18)
            {
              v47 = v18 + 1;
              if (*((double *)v18 + 4) >= v45)
              {
                v47 = v18;
                v17 = v18;
              }
              v18 = (_QWORD *)*v47;
            }
          }
          sub_20C28BEA0(a5, *(char **)(a5 + 8), v19, v17);
          goto LABEL_58;
        }
        Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse(v15);
        *(double *)&v55 = v28;
        BYTE8(v55) = fabs(v28) != INFINITY;
        v56 = v28;
        v57 = BYTE8(v55);
        v29 = *(_OWORD *)(a4 + 16);
        v58 = *(_OWORD *)a4;
        v59 = v29;
        sub_20C4558B0((uint64_t)&v58, (uint64_t)&v55);
        v30 = fabs(Inverse) != INFINITY;
        v31 = *(double *)&v58;
        v32 = BYTE8(v58);
        v33 = *(double *)&v59;
        v34 = BYTE8(v59);
        if (v30)
        {
          v31 = Inverse + *(double *)&v58;
          v33 = Inverse + *(double *)&v59;
          v32 = BYTE8(v58) & v30;
          v34 = BYTE8(v59) & v30;
        }
        v35 = v61;
        v36 = v61[0];
        if (v32)
        {
          if (v61[0])
          {
            v37 = v61;
            v38 = v61[0];
            do
            {
              v39 = v38 + 1;
              if (*((double *)v38 + 4) >= v31)
              {
                v39 = v38;
                v37 = v38;
              }
              v38 = (_QWORD *)*v39;
            }
            while (*v39);
            goto LABEL_67;
          }
        }
        else if (v61[0])
        {
          v37 = v61;
          v49 = v61[0];
          do
          {
            v50 = v49 + 1;
            if (v31 < *((double *)v49 + 4))
            {
              v50 = v49;
              v37 = v49;
            }
            v49 = (_QWORD *)*v50;
          }
          while (*v50);
          goto LABEL_67;
        }
        v37 = v61;
LABEL_67:
        if (v34)
        {
          if (v61[0])
          {
            do
            {
              v51 = v36 + 1;
              if (v33 < *((double *)v36 + 4))
              {
                v51 = v36;
                v35 = v36;
              }
              v36 = (_QWORD *)*v51;
            }
            while (*v51);
          }
        }
        else
        {
          while (v36)
          {
            v52 = v36 + 1;
            if (*((double *)v36 + 4) >= v33)
            {
              v52 = v36;
              v35 = v36;
            }
            v36 = (_QWORD *)*v52;
          }
        }
        sub_20C28BEA0(a5, *(char **)(a5 + 8), v37, v35);
        v54 = *(double **)a5;
        v53 = *(double **)(a5 + 8);
        while (v54 != v53)
        {
          *v54 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)v15, *v54);
          ++v54;
        }
        goto LABEL_58;
      }
    }
  }
  return 1;
}

void sub_20C44C098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v6;
  va_list va;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  sub_20BFD1A18(va1);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C44C114(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3)
{
  _BOOL8 result;

  result = sub_20BEB560C(a2, *(_QWORD *)a1 + 24);
  if (result)
    return pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)a1 + 40));
  return result;
}

BOOL sub_20C44C164(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v2;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;
  uint64_t (*v7)(_QWORD, uint64_t);

  v2 = *(pxrInternal__aapl__pxrReserved__::Usd_Clip **)(*(_QWORD *)a1 + 72);
  if (!v2)
    return 0;
  LODWORD(v7) = 1;
  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C455A60(v2, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 464), &v7)&& (_DWORD)v7 == 0;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetNumTimeSamples(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  uint64_t NumTimeSamplesFromResolveInfo;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _DWORD v18[3];
  const pxrInternal__aapl__pxrReserved__::UsdAttribute *v19;

  sub_20C361C1C((uint64_t)&v14);
  v19 = a2;
  sub_20C46E2DC((uint64_t)this, a2, &v14, 0, 0, (uint64_t)&v19);
  NumTimeSamplesFromResolveInfo = pxrInternal__aapl__pxrReserved__::UsdStage::_GetNumTimeSamplesFromResolveInfo((uint64_t)this, (uint64_t)&v14, a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v18);
  sub_20BFD265C(&v17);
  v5 = v16;
  if (v16)
  {
    v6 = (unsigned int *)(v16 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  v9 = v15;
  if (v15)
  {
    v10 = (unsigned int *)(v15 + 8);
    do
    {
      v11 = __ldxr(v10);
      v12 = v11 - 1;
    }
    while (__stlxr(v12, v10));
    if (!v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
  return NumTimeSamplesFromResolveInfo;
}

void sub_20C44C2D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35FEE4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::_GetNumTimeSamplesFromResolveInfo(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  int v4;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v5;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v6;
  uint64_t NumTimeSamplesForPath;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;

  v4 = *(_DWORD *)(a2 + 72);
  if (v4 == 4)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v9 = 0xFFF0000000000000;
    v10 = 0;
    v11 = 0x7FF0000000000000;
    v12 = 0;
    pxrInternal__aapl__pxrReserved__::UsdStage::_GetTimeSamplesInIntervalFromResolveInfo(a1, a2, (uint64_t)a3, (uint64_t)&v9, (uint64_t)&v13);
    NumTimeSamplesForPath = (v14 - v13) >> 3;
    if (v13)
    {
      v14 = v13;
      operator delete(v13);
    }
  }
  else if (v4 == 3)
  {
    v5 = sub_20C398E78(a3);
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64), v5, (int *)&v9);
    v6 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)(a2 + 16));
    NumTimeSamplesForPath = pxrInternal__aapl__pxrReserved__::SdfLayer::GetNumTimeSamplesForPath(v6, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v9);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v9 + 1);
    sub_20BFD265C(&v9);
  }
  else
  {
    return 0;
  }
  return NumTimeSamplesForPath;
}

void sub_20C44C3B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_GetBracketingTimeSamples(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2, double a3, char a4, double *a5, double *a6, BOOL *a7)
{
  uint64_t v14;
  uint64_t v15;
  _BOOL8 BracketingTimeSamplesFromResolveInfo;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  __int128 v29;
  _OWORD v30[2];
  std::__shared_weak_count *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  int v36;
  int v37;
  int v38;
  void *v39;

  v39 = *(void **)&a3;
  sub_20C361C1C((uint64_t)&v32);
  v31 = 0;
  memset(v30, 0, sizeof(v30));
  *(_QWORD *)&v29 = a2;
  sub_20C46E2DC((uint64_t)this, a2, &v32, &v39, v30, (uint64_t)&v29);
  if (v38 == 4)
  {
    v15 = *((_QWORD *)&v30[0] + 1);
    *a5 = *(double *)v30;
    *(_QWORD *)a6 = v15;
  }
  else
  {
    if (v38 != 3)
    {
      BracketingTimeSamplesFromResolveInfo = pxrInternal__aapl__pxrReserved__::UsdStage::_GetBracketingTimeSamplesFromResolveInfo((uint64_t)this, (uint64_t)&v32, a2, a4, a5, a6, a7, a3);
      goto LABEL_8;
    }
    v14 = *((_QWORD *)&v30[0] + 1);
    *a5 = *(double *)v30;
    *(_QWORD *)a6 = v14;
    v29 = v35;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)&v29))
    {
      *a5 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)&v29, *a5);
      *a6 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)&v29, *a6);
    }
  }
  BracketingTimeSamplesFromResolveInfo = 1;
  *a7 = 1;
LABEL_8:
  v17 = v31;
  if (v31)
  {
    p_shared_owners = (unint64_t *)&v31->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v37);
  sub_20BFD265C(&v36);
  v20 = v34;
  if (v34)
  {
    v21 = (unsigned int *)(v34 + 8);
    do
    {
      v22 = __ldxr(v21);
      v23 = v22 - 1;
    }
    while (__stlxr(v23, v21));
    if (!v23)
      (*(void (**)(uint64_t))(*(_QWORD *)v20 + 8))(v20);
  }
  v24 = v33;
  if (v33)
  {
    v25 = (unsigned int *)(v33 + 8);
    do
    {
      v26 = __ldxr(v25);
      v27 = v26 - 1;
    }
    while (__stlxr(v27, v25));
    if (!v27)
      (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  }
  return BracketingTimeSamplesFromResolveInfo;
}

void sub_20C44C5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C35FEE4((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_GetBracketingTimeSamplesFromResolveInfo(uint64_t a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::UsdAttribute *this, char a4, double *a5, double *a6, _BYTE *a7, double a8)
{
  _BOOL8 result;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v15;
  double *v16;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  double v18;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v19;
  int BracketingTimeSamplesForPath;
  char v21;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v24;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v26;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v27;
  char v28;
  unsigned int *v29;
  unsigned int v30;
  int v31;
  int v32;
  double Inverse;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;

  switch(*(_DWORD *)(a2 + 72))
  {
    case 1:
      result = 0;
      *a7 = 0;
      if ((a4 & 1) == 0)
      {
        if (!pxrInternal__aapl__pxrReserved__::UsdAttribute::HasFallbackValue(this, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2))return 0;
        goto LABEL_4;
      }
      return result;
    case 2:
LABEL_4:
      *a7 = 0;
      return 1;
    case 3:
      v15 = sub_20C398E78(this);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64), v15, &v38);
      v16 = (double *)(a2 + 48);
      Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a2 + 48));
      v34 = v17;
      v18 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(&Inverse, a8);
      v19 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650((uint64_t *)(a2 + 16));
      BracketingTimeSamplesForPath = pxrInternal__aapl__pxrReserved__::SdfLayer::GetBracketingTimeSamplesForPath(v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38, v18, a5, a6);
      v21 = BracketingTimeSamplesForPath;
      if (BracketingTimeSamplesForPath)
      {
        if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v16))
        {
          *a5 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v16, *a5);
          *a6 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v16, *a6);
        }
        *a7 = 1;
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
      sub_20BFD265C(&v38);
      return (v21 & 1) != 0;
    case 4:
      v23 = sub_20C398E78(this);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64), v23, &v38);
      sub_20C35C4F8((uint64_t)&Inverse, (uint64_t *)this + 1, (_DWORD *)this + 4);
      v24 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
      sub_20C348EEC((uint64_t)&Inverse, &v31);
      ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v24, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
      sub_20BFD265C(&v31);
      v26 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)*ClipsForPrim;
      v27 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)ClipsForPrim[1];
      break;
    default:
      return 0;
  }
  while (1)
  {
    if (v26 == v27)
    {
      v28 = 1;
      goto LABEL_18;
    }
    if (sub_20C44C114((uint64_t)v26, a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64))
      && sub_20C44C164((uint64_t)v26, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38)
      && (pxrInternal__aapl__pxrReserved__::Usd_ClipSet::GetBracketingTimeSamplesForPath(*v26, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38, a8, a5, a6) & 1) != 0)
    {
      break;
    }
    v26 += 2;
  }
  v28 = 0;
  *a7 = 1;
LABEL_18:
  if ((v37 & 7) != 0)
  {
    v29 = (unsigned int *)(v37 & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v36);
  sub_20BFD265C(&v35);
  if (v34)
    sub_20C35C614(v34);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
  sub_20BFD265C(&v38);
  return (v28 & 1) == 0;
}

void sub_20C44C864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  sub_20BFD1A18(&a9);
  sub_20C35C2E0((uint64_t)&a11);
  sub_20BFD1A18(&a15);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ValueMightBeTimeVarying(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::UsdAttribute *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v4;
  pxrInternal__aapl__pxrReserved__::Usd_Clip **v5;
  _BOOL8 v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  __int128 v19;
  __int128 v20;
  std::__shared_weak_count *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _DWORD v26[3];
  const pxrInternal__aapl__pxrReserved__::UsdAttribute *v27;

  sub_20C361C1C((uint64_t)&v22);
  v21 = 0;
  v19 = 0u;
  v20 = 0u;
  v27 = a2;
  sub_20C46E2DC((uint64_t)this, a2, &v22, 0, &v19, (uint64_t)&v27);
  if (v26[1] == 4)
  {
    v4 = sub_20C398E78(a2);
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)&v25, v4, (int *)&v27);
    v5 = *(pxrInternal__aapl__pxrReserved__::Usd_Clip ***)(*((_QWORD *)&v20 + 1) + 88);
    v6 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 96) - (_QWORD)v5 != 16
      || (unint64_t)pxrInternal__aapl__pxrReserved__::Usd_Clip::GetNumTimeSamplesForPath(*v5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v27) > 1;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v27 + 1);
    sub_20BFD265C(&v27);
  }
  else
  {
    v6 = pxrInternal__aapl__pxrReserved__::UsdStage::_ValueMightBeTimeVaryingFromResolveInfo((uint64_t)this, (uint64_t)&v22, (uint64_t)a2);
  }
  v7 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v26);
  sub_20BFD265C(&v25);
  v10 = v24;
  if (v24)
  {
    v11 = (unsigned int *)(v24 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
  v14 = v23;
  if (v23)
  {
    v15 = (unsigned int *)(v23 + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  return v6;
}

void sub_20C44CA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  uint64_t v6;
  va_list va;
  uint64_t v8;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v6 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  sub_20BFD1A18((_DWORD *)(v4 - 24));
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C35FEE4((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_ValueMightBeTimeVaryingFromResolveInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v7;
  uint64_t *ClipsForPrim;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  pxrInternal__aapl__pxrReserved__::Usd_Clip **v15;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;

  if (*(_DWORD *)(a2 + 72) != 4)
    return (unint64_t)pxrInternal__aapl__pxrReserved__::UsdStage::_GetNumTimeSamplesFromResolveInfo(a1, a2, (_DWORD *)a3) > 1;
  v6 = sub_20C398E78((_DWORD *)a3);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64), v6, &v23);
  v7 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
  sub_20C35C4F8((uint64_t)&v16, (uint64_t *)(a3 + 8), (_DWORD *)(a3 + 16));
  sub_20C348EEC((uint64_t)&v16, &v21);
  ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v7, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  if ((v20 & 7) != 0)
  {
    v9 = (unsigned int *)(v20 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
  sub_20BFD265C(&v18);
  if (v17)
    sub_20C35C614(v17);
  v12 = *ClipsForPrim;
  v11 = ClipsForPrim[1];
  while (1)
  {
    if (v12 == v11)
    {
      v13 = 0;
      goto LABEL_14;
    }
    if (sub_20C44C114(v12, a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64))
      && sub_20C44C164(v12, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v23))
    {
      break;
    }
    v12 += 16;
  }
  v15 = *(pxrInternal__aapl__pxrReserved__::Usd_Clip ***)(*(_QWORD *)v12 + 88);
  v13 = *(_QWORD *)(*(_QWORD *)v12 + 96) - (_QWORD)v15 != 16
     || (unint64_t)pxrInternal__aapl__pxrReserved__::Usd_Clip::GetNumTimeSamplesForPath(*v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v23) > 1;
LABEL_14:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
  sub_20BFD265C(&v23);
  return v13;
}

void sub_20C44CBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C44CC38(pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, double *a3, double *a4, double *a5)
{
  uint64_t result;

  result = sub_20C44C164((uint64_t)a1, a2);
  if ((_DWORD)result)
  {
    if (a3)
      return pxrInternal__aapl__pxrReserved__::Usd_ClipSet::GetBracketingTimeSamplesForPath(*a1, a2, *a3, a4, a5);
    else
      return 1;
  }
  return result;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  unint64_t Instance;
  uint64_t result;
  char Metadata;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v11;
  pxrInternal__aapl__pxrReserved__::VtValue *Fallback;
  const char **v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  const char *v17;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v18;
  _QWORD *v19;
  char *v20;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  if (a3)
  {
    Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
    if (!Instance)
      Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
    result = (uint64_t)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec(Instance, a2, 7u);
    if ((_DWORD)result)
    {
      pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v20);
      Metadata = pxrInternal__aapl__pxrReserved__::UsdObject::GetMetadata((pxrInternal__aapl__pxrReserved__::UsdObject *)&v20, a2, a3);
      if ((v23 & 7) != 0)
      {
        v9 = (unsigned int *)(v23 & 0xFFFFFFFFFFFFFFF8);
        do
          v10 = __ldxr(v9);
        while (__stlxr(v10 - 2, v9));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v22 + 1);
      sub_20BFD265C(&v22);
      if (v21)
        sub_20C35C614(v21);
      if ((Metadata & 1) != 0)
      {
        if (sub_20BF4A73C(a3))
        {
          v11 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
          if (!v11)
            v11 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
          Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(v11, a2);
          v13 = (const char **)sub_20BF4D3FC(Fallback);
          v20 = 0;
          v14 = (uint64_t *)sub_20BF4D190((const void *****)a3);
          pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
          pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v20, v13, 0);
          v15 = (uint64_t *)sub_20BF4D190((const void *****)a3);
          pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
          sub_20BF49F14((_QWORD ***)&v20, 0);
        }
      }
      else
      {
        v18 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
        if (!v18)
          v18 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
        v19 = pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(v18, a2);
        sub_20BF4A9BC(a3, v19);
      }
      return 1;
    }
  }
  else
  {
    v20 = "usd/stage.cpp";
    v21 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"GetMetadata";
    v22 = 9231;
    v23 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(const TfToken &, VtValue *) const";
    v24 = 0;
    v16 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v16)
    {
      v17 = (const char *)(v16 + 16);
      if (*(char *)(v16 + 39) < 0)
        v17 = *(const char **)v17;
    }
    else
    {
      v17 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v20, 1, (pxrInternal__aapl__pxrReserved__ *)"Null out-param 'value' for UsdStage::GetMetadata(\"%s\")", v17);
    return 0;
  }
  return result;
}

void sub_20C44CE90(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C35C2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL pxrInternal__aapl__pxrReserved__::UsdStage::HasMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  _BOOL8 v5;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;

  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec((uint64_t)Instance, a2, 7u))
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v9);
  v5 = (pxrInternal__aapl__pxrReserved__::UsdObject::HasAuthoredMetadata((pxrInternal__aapl__pxrReserved__::UsdObject *)&v9, a2) & 1) != 0|| pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(Instance, a2)[1] != 0;
  if ((v13 & 7) != 0)
  {
    v6 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  return v5;
}

void sub_20C44CFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  unint64_t Instance;
  uint64_t HasAuthoredMetadata;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;

  Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec(Instance, a2, 7u))
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v9);
  HasAuthoredMetadata = pxrInternal__aapl__pxrReserved__::UsdObject::HasAuthoredMetadata((pxrInternal__aapl__pxrReserved__::UsdObject *)&v9, a2);
  if ((v13 & 7) != 0)
  {
    v6 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  return HasAuthoredMetadata;
}

void sub_20C44D07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;

  v6 = 0;
  result = sub_20C44D0FC((uint64_t *)this, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v6, a3);
  if ((v6 & 7) != 0)
  {
    v4 = (unsigned int *)(v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  return result;
}

uint64_t sub_20C44D0FC(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::VtValue *a4)
{
  unint64_t Instance;
  uint64_t *v9;
  uint64_t v10;
  pxrInternal__aapl__pxrReserved__::SdfPath *v11;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v12;
  unint64_t v13;
  const char *v14;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v15;
  uint64_t Identifier;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v28;
  const char *v29;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v30;
  uint64_t v31;
  const char *v32;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v33;
  uint64_t v34;
  const char *v35;
  char *v36;
  const char *v37;
  uint64_t v38;
  const char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_20C1034E8(&v43, a1 + 4);
  sub_20C1034E8(&v41, a1 + 5);
  Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if ((pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec(Instance, a2, 7u) & 1) == 0)
  {
    v36 = "usd/stage.cpp";
    v37 = "_SetStageMetadataOrDictKey";
    v38 = 9316;
    v39 = "BOOL pxrInternal__aapl__pxrReserved__::_SetStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfT"
          "oken &, const VtValue &)";
    v40 = 0;
    v13 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v13)
    {
      v14 = (const char *)(v13 + 16);
      if (*(char *)(v13 + 39) < 0)
        v14 = *(const char **)v14;
    }
    else
    {
      v14 = "";
    }
    v15 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v43);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v15);
    if (*(char *)(Identifier + 23) >= 0)
      v17 = (const char *)Identifier;
    else
      v17 = *(const char **)Identifier;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v36, 1, (pxrInternal__aapl__pxrReserved__ *)"Metadata '%s' is not registered as valid Layer metadata, and cannot be set on UsdStage %s.", v14, v17);
    goto LABEL_16;
  }
  v9 = a1 + 6;
  if (!sub_20BEB560C((uint64_t)v9, (uint64_t)&v43) && !sub_20BEB560C((uint64_t)v9, (uint64_t)&v41))
  {
    v36 = "usd/stage.cpp";
    v37 = "_SetStageMetadataOrDictKey";
    v38 = 9329;
    v39 = "BOOL pxrInternal__aapl__pxrReserved__::_SetStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfT"
          "oken &, const VtValue &)";
    v40 = 0;
    v28 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v28)
    {
      v29 = (const char *)(v28 + 16);
      if (*(char *)(v28 + 39) < 0)
        v29 = *(const char **)v29;
    }
    else
    {
      v29 = "";
    }
    v30 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v9);
    v31 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v30);
    if (*(char *)(v31 + 23) >= 0)
      v32 = (const char *)v31;
    else
      v32 = *(const char **)v31;
    v33 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v43);
    v34 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v33);
    if (*(char *)(v34 + 23) >= 0)
      v35 = (const char *)v34;
    else
      v35 = *(const char **)v34;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v36, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot set layer metadata '%s' in current edit target \"%s\", as it is not the root layer or session layer of stage \"%s\".", v29, v32, v35);
LABEL_16:
    v18 = 0;
    goto LABEL_19;
  }
  v10 = *(_QWORD *)a3;
  v11 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFCF650(v9);
  v12 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v11);
  if (v10)
    pxrInternal__aapl__pxrReserved__::SdfLayer::SetFieldDictValueByKey((const char **)v11, v12, a2, a3, a4);
  else
    pxrInternal__aapl__pxrReserved__::SdfLayer::SetField(v11, v12, a2, a4);
  v18 = 1;
LABEL_19:
  v19 = v42;
  if (v42)
  {
    v20 = (unsigned int *)(v42 + 8);
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  }
  v23 = v44;
  if (v44)
  {
    v24 = (unsigned int *)(v44 + 8);
    do
    {
      v25 = __ldxr(v24);
      v26 = v25 - 1;
    }
    while (__stlxr(v26, v24));
    if (!v26)
      (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
  }
  return v18;
}

void sub_20C44D384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int *a18)
{
  uint64_t v18;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;

  if (a18)
  {
    v20 = a18 + 2;
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(unsigned int *))(*(_QWORD *)a18 + 8))(a18);
  }
  v23 = *(unsigned int **)(v18 - 56);
  if (v23)
  {
    v24 = v23 + 2;
    do
    {
      v25 = __ldxr(v24);
      v26 = v25 - 1;
    }
    while (__stlxr(v26, v24));
    if (!v26)
      (*(void (**)(unsigned int *))(*(_QWORD *)v23 + 8))(v23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::ClearMetadata(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  uint64_t result;
  unsigned int *v3;
  unsigned int v4;
  uint64_t v5;

  v5 = 0;
  result = sub_20C44D464((uint64_t *)this, a2, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v5);
  if ((v5 & 7) != 0)
  {
    v3 = (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  return result;
}

uint64_t sub_20C44D464(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  unint64_t Instance;
  uint64_t *v7;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *v9;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  unint64_t v11;
  const char *v12;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v13;
  uint64_t Identifier;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v26;
  const char *v27;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v28;
  uint64_t v29;
  const char *v30;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v31;
  uint64_t v32;
  const char *v33;
  char *v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_20C1034E8(&v41, a1 + 4);
  sub_20C1034E8(&v39, a1 + 5);
  Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if ((pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec(Instance, a2, 7u) & 1) == 0)
  {
    v34 = "usd/stage.cpp";
    v35 = "_ClearStageMetadataOrDictKey";
    v36 = 9356;
    v37 = "BOOL pxrInternal__aapl__pxrReserved__::_ClearStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfToken &)";
    v38 = 0;
    v11 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v11)
    {
      v12 = (const char *)(v11 + 16);
      if (*(char *)(v11 + 39) < 0)
        v12 = *(const char **)v12;
    }
    else
    {
      v12 = "";
    }
    v13 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v41);
    Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v13);
    if (*(char *)(Identifier + 23) >= 0)
      v15 = (const char *)Identifier;
    else
      v15 = *(const char **)Identifier;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v34, 1, (pxrInternal__aapl__pxrReserved__ *)"Metadata '%s' is not registered as valid Layer metadata, and cannot be cleared on UsdStage %s.", v12, v15);
    goto LABEL_16;
  }
  v7 = a1 + 6;
  if (!sub_20BEB560C((uint64_t)v7, (uint64_t)&v41) && !sub_20BEB560C((uint64_t)v7, (uint64_t)&v39))
  {
    v34 = "usd/stage.cpp";
    v35 = "_ClearStageMetadataOrDictKey";
    v36 = 9369;
    v37 = "BOOL pxrInternal__aapl__pxrReserved__::_ClearStageMetadataOrDictKey(const UsdStage &, const TfToken &, const TfToken &)";
    v38 = 0;
    v26 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v26)
    {
      v27 = (const char *)(v26 + 16);
      if (*(char *)(v26 + 39) < 0)
        v27 = *(const char **)v27;
    }
    else
    {
      v27 = "";
    }
    v28 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v7);
    v29 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v28);
    if (*(char *)(v29 + 23) >= 0)
      v30 = (const char *)v29;
    else
      v30 = *(const char **)v29;
    v31 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v41);
    v32 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v31);
    if (*(char *)(v32 + 23) >= 0)
      v33 = (const char *)v32;
    else
      v33 = *(const char **)v32;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v34, 1, (pxrInternal__aapl__pxrReserved__ *)"Cannot clear layer metadata '%s' in current edit target \"%s\", as it is not the root layer or session layer of stage \"%s\".", v27, v30, v33);
LABEL_16:
    v16 = 0;
    goto LABEL_19;
  }
  v8 = *(_QWORD *)a3;
  v9 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFCF650(v7);
  v10 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v9);
  if (v8)
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseFieldDictValueByKey(v9, v10, a2, a3);
  else
    pxrInternal__aapl__pxrReserved__::SdfLayer::EraseField(v9, v10, a2);
  v16 = 1;
LABEL_19:
  v17 = v40;
  if (v40)
  {
    v18 = (unsigned int *)(v40 + 8);
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  }
  v21 = v42;
  if (v42)
  {
    v22 = (unsigned int *)(v42 + 8);
    do
    {
      v23 = __ldxr(v22);
      v24 = v23 - 1;
    }
    while (__stlxr(v24, v22));
    if (!v24)
      (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
  }
  return v16;
}

void sub_20C44D6D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int *a18)
{
  uint64_t v18;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;

  if (a18)
  {
    v20 = a18 + 2;
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(unsigned int *))(*(_QWORD *)a18 + 8))(a18);
  }
  v23 = *(unsigned int **)(v18 - 40);
  if (v23)
  {
    v24 = v23 + 2;
    do
    {
      v25 = __ldxr(v24);
      v26 = v25 - 1;
    }
    while (__stlxr(v26, v24));
    if (!v26)
      (*(void (**)(unsigned int *))(*(_QWORD *)v23 + 8))(v23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadataByDictKey(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, pxrInternal__aapl__pxrReserved__::VtValue *a4)
{
  uint64_t v4;
  unint64_t Instance;
  uint64_t result;
  char MetadataByDictKey;
  unsigned int *v12;
  unsigned int v13;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v14;
  pxrInternal__aapl__pxrReserved__::VtValue *Fallback;
  pxrInternal__aapl__pxrReserved__::TfToken *v16;
  uint64_t *v17;
  std::string *EmptyString;
  unint64_t v19;
  const char *v20;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *v21;
  pxrInternal__aapl__pxrReserved__::VtValue *v22;
  pxrInternal__aapl__pxrReserved__::TfToken *v23;
  uint64_t *v24;
  std::string *v25;
  unint64_t v26;
  const char *v27;
  pxrInternal__aapl__pxrReserved__::VtValue *ValueAtPath;
  pxrInternal__aapl__pxrReserved__::VtValue *v29;
  uint64_t *v30;
  uint64_t v31;
  const char **v32;
  uint64_t *v33;
  char *v34;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;

  v4 = *(_QWORD *)a3;
  if (!*(_QWORD *)a3)
    return 0;
  if (!a4)
  {
    v34 = "usd/stage.cpp";
    v35 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)"GetMetadataByDictKey";
    v36 = 9393;
    v37 = (unint64_t)"BOOL pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadataByDictKey(const TfToken &, const"
                            " TfToken &, VtValue *) const";
    v38 = 0;
    v19 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v19)
    {
      v20 = (const char *)(v19 + 16);
      if (*(char *)(v19 + 39) < 0)
        v20 = *(const char **)v20;
    }
    else
    {
      v20 = "";
    }
    v26 = v4 & 0xFFFFFFFFFFFFFFF8;
    if ((v4 & 0xFFFFFFFFFFFFFFF8) != 0)
    {
      v27 = (const char *)(v26 + 16);
      if (*(char *)(v26 + 39) < 0)
        v27 = *(const char **)v27;
    }
    else
    {
      v27 = "";
    }
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v34, 1, (pxrInternal__aapl__pxrReserved__ *)"Null out-param 'value' for UsdStage::GetMetadataByDictKey(\"%s\", \"%s\")", v20, v27);
    return 0;
  }
  Instance = atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  result = (uint64_t)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec(Instance, a2, 7u);
  if (!(_DWORD)result)
    return result;
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v34);
  MetadataByDictKey = pxrInternal__aapl__pxrReserved__::UsdObject::GetMetadataByDictKey((pxrInternal__aapl__pxrReserved__::UsdObject *)&v34, a2, a3, a4);
  if ((v37 & 7) != 0)
  {
    v12 = (unsigned int *)(v37 & 0xFFFFFFFFFFFFFFF8);
    do
      v13 = __ldxr(v12);
    while (__stlxr(v13 - 2, v12));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v36 + 1);
  sub_20BFD265C(&v36);
  if (v35)
    sub_20C35C614(v35);
  if ((MetadataByDictKey & 1) != 0)
  {
    if (sub_20BF4A73C(a4))
    {
      v14 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
      if (!v14)
        v14 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
      Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(v14, a2);
      v16 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20BF4D3FC(Fallback);
      v17 = (uint64_t *)v16;
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) != 0)
        EmptyString = (std::string *)((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) + 16);
      else
        EmptyString = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v16);
      ValueAtPath = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::VtDictionary::GetValueAtPath(v17, EmptyString, ":");
      if (ValueAtPath)
      {
        v29 = ValueAtPath;
        if (sub_20BF4A73C(ValueAtPath))
        {
          v34 = 0;
          v30 = (uint64_t *)sub_20BF4D190((const void *****)a4);
          pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v30, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v34);
          v31 = *((_QWORD *)v29 + 1);
          if ((v31 & 4) != 0)
            v32 = (const char **)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v31 & 0xFFFFFFFFFFFFFFF8) + 168))(v29);
          else
            v32 = *(const char ***)v29;
          pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v34, v32, 0);
          v33 = (uint64_t *)sub_20BF4D190((const void *****)a4);
          pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v33, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v34);
          sub_20BF49F14((_QWORD ***)&v34, 0);
        }
      }
    }
    return 1;
  }
  v21 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!v21)
    v21 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  v22 = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(v21, a2);
  if (!*((_QWORD *)v22 + 1))
    return 0;
  v23 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20BF4D3FC(v22);
  v24 = (uint64_t *)v23;
  if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) != 0)
    v25 = (std::string *)((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    v25 = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v23);
  result = pxrInternal__aapl__pxrReserved__::VtDictionary::GetValueAtPath(v24, v25, ":");
  if (result)
  {
    sub_20BF4A9BC(a4, (_QWORD *)result);
    return 1;
  }
  return result;
}

void sub_20C44DA00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BF49F14((_QWORD ***)va, 0);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::HasMetadataDictKey(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase *Instance;
  uint64_t result;
  char HasAuthoredMetadataDictKey;
  unsigned int *v9;
  unsigned int v10;
  pxrInternal__aapl__pxrReserved__::VtValue *Fallback;
  pxrInternal__aapl__pxrReserved__::TfToken *v12;
  uint64_t *v13;
  std::string *EmptyString;
  uint64_t v15;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v16;
  int v17;
  int v18;
  uint64_t v19;

  Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!Instance)
    Instance = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::SdfSchema>::_instance);
  if (!*(_QWORD *)a3)
    return 0;
  result = (uint64_t)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::IsValidFieldForSpec((uint64_t)Instance, a2, 7u);
  if (!(_DWORD)result)
    return result;
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v15);
  HasAuthoredMetadataDictKey = pxrInternal__aapl__pxrReserved__::UsdObject::HasAuthoredMetadataDictKey((pxrInternal__aapl__pxrReserved__::UsdObject *)&v15, a2, a3);
  if ((v19 & 7) != 0)
  {
    v9 = (unsigned int *)(v19 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v18);
  sub_20BFD265C(&v17);
  if (v16)
    sub_20C35C614(v16);
  if ((HasAuthoredMetadataDictKey & 1) != 0)
    return 1;
  Fallback = (pxrInternal__aapl__pxrReserved__::VtValue *)pxrInternal__aapl__pxrReserved__::SdfSchemaBase::GetFallback(Instance, a2);
  if (!*((_QWORD *)Fallback + 1))
    return 0;
  v12 = (pxrInternal__aapl__pxrReserved__::TfToken *)sub_20BF4D3FC(Fallback);
  v13 = (uint64_t *)v12;
  if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (std::string *)((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = (std::string *)pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(v12);
  return pxrInternal__aapl__pxrReserved__::VtDictionary::GetValueAtPath(v13, EmptyString, ":") != 0;
}

void sub_20C44DB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredMetadataDictKey(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  uint64_t HasAuthoredMetadataDictKey;
  unsigned int *v6;
  unsigned int v7;
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  int v11;
  int v12;
  uint64_t v13;

  if (!*(_QWORD *)a3)
    return 0;
  pxrInternal__aapl__pxrReserved__::UsdStage::GetPseudoRoot(this, (uint64_t)&v9);
  HasAuthoredMetadataDictKey = pxrInternal__aapl__pxrReserved__::UsdObject::HasAuthoredMetadataDictKey((pxrInternal__aapl__pxrReserved__::UsdObject *)&v9, a2, a3);
  if ((v13 & 7) != 0)
  {
    v6 = (unsigned int *)(v13 & 0xFFFFFFFFFFFFFFF8);
    do
      v7 = __ldxr(v6);
    while (__stlxr(v7 - 2, v6));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v12);
  sub_20BFD265C(&v11);
  if (v10)
    sub_20C35C614(v10);
  return HasAuthoredMetadataDictKey;
}

void sub_20C44DC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadataByDictKey(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::VtValue *a4)
{
  if (*(_QWORD *)a3)
    return sub_20C44D0FC((uint64_t *)this, a2, a3, a4);
  else
    return 0;
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::ClearMetadataByDictKey(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  if (*(_QWORD *)a3)
    return sub_20C44D464((uint64_t *)this, a2, a3);
  else
    return 0;
}

double pxrInternal__aapl__pxrReserved__::UsdStage::GetStartTimeCode(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t (*v8)(uint64_t *);
  char v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase **v11;
  double StartTimeCode;
  double v13;
  uint64_t *v14;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v15;
  int HasStartTimeCode;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase **v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  BOOL v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_20C1034E8(&v41, (uint64_t *)this + 5);
  v43 = v41;
  v44 = v42;
  if (v42)
  {
    v2 = (unsigned int *)(v42 + 8);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + 1, v2));
    v4 = v42;
    if (v42)
    {
      v5 = (unsigned int *)(v42 + 8);
      do
      {
        v6 = __ldxr(v5);
        v7 = v6 - 1;
      }
      while (__stlxr(v7, v5));
      if (!v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    }
  }
  v8 = sub_20C44DF54(&v43);
  if (v9 & 1 | (unint64_t)v8)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C44DFA8(&v43);
    if (pxrInternal__aapl__pxrReserved__::SdfLayer::HasStartTimeCode(v10))
    {
      v11 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase **)sub_20C44DFA8(&v43);
      StartTimeCode = pxrInternal__aapl__pxrReserved__::SdfLayer::GetStartTimeCode(v11);
LABEL_14:
      v13 = StartTimeCode;
      goto LABEL_39;
    }
    if (sub_20C44E04C(&v43))
    {
      StartTimeCode = sub_20C44E0D4(&v43);
      goto LABEL_14;
    }
  }
  v14 = (uint64_t *)((char *)this + 32);
  sub_20C1034E8(&v41, v14);
  v15 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v41);
  HasStartTimeCode = pxrInternal__aapl__pxrReserved__::SdfLayer::HasStartTimeCode(v15);
  v17 = v42;
  if (v42)
  {
    v18 = (unsigned int *)(v42 + 8);
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  }
  if (HasStartTimeCode)
  {
    sub_20C1034E8(&v41, v14);
    v21 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase **)sub_20BFCF650(&v41);
    v13 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetStartTimeCode(v21);
    v22 = v42;
    if (!v42)
      goto LABEL_39;
    v23 = (unsigned int *)(v42 + 8);
    do
    {
      v24 = __ldxr(v23);
      v25 = --v24 == 0;
    }
    while (__stlxr(v24, v23));
    goto LABEL_36;
  }
  sub_20C1034E8(&v39, v14);
  v41 = v39;
  v42 = v40;
  if (v40)
  {
    v26 = (unsigned int *)(v40 + 8);
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }
  v13 = sub_20C44E0D4(&v41);
  v28 = v42;
  if (v42)
  {
    v29 = (unsigned int *)(v42 + 8);
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  }
  v22 = v40;
  if (v40)
  {
    v32 = (unsigned int *)(v40 + 8);
    do
    {
      v33 = __ldxr(v32);
      v25 = --v33 == 0;
    }
    while (__stlxr(v33, v32));
LABEL_36:
    if (v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  }
LABEL_39:
  v34 = v44;
  if (v44)
  {
    v35 = (unsigned int *)(v44 + 8);
    do
    {
      v36 = __ldxr(v35);
      v37 = v36 - 1;
    }
    while (__stlxr(v37, v35));
    if (!v37)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  }
  return v13;
}

void sub_20C44DE88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unsigned int *a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int *a14)
{
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;

  if (a12)
    sub_20C96B408(a12);
  if (a10)
  {
    v15 = a10 + 2;
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(unsigned int *))(*(_QWORD *)a10 + 8))(a10);
  }
  if (a14)
  {
    v18 = a14 + 2;
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(unsigned int *))(*(_QWORD *)a14 + 8))(a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t (*sub_20C44DF54(_QWORD *a1))(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  BOOL v5;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3)
    return 0;
  v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14);
  if (*a1)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
    return 0;
  else
    return sub_20C46FD68;
}

uint64_t sub_20C44DFA8(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  BOOL v6;
  char *v7;
  _QWORD v8[4];
  char v9;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3
    || ((v4 = *(unsigned __int8 *)(sub_20BEB47BC(v2) + 14), result = *a1, v4) ? (v6 = result == 0) : (v6 = 1), v6))
  {
    v7 = j__strrchr("/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", 47);
    v8[0] = sub_20BEB23F8((unint64_t)"/Library/Caches/com.apple.xbs/Sources/USDLib/USD/pxr/base/tf/weakPtrFacade.h", (uint64_t)v7, 0x2Fu);
    v8[1] = "operator->";
    v8[2] = 216;
    v8[3] = "DataType *pxrInternal__aapl__pxrReserved__::TfWeakPtrFacade<pxrInternal__aapl__pxrReserved__::TfWeakPtr, con"
            "st pxrInternal__aapl__pxrReserved__::SdfLayer>::operator->() const [PtrTemplate = pxrInternal__aapl__pxrRese"
            "rved__::TfWeakPtr, Type = const pxrInternal__aapl__pxrReserved__::SdfLayer]";
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostNullSmartPtrDereferenceFatalError((uint64_t)v8, (pxrInternal__aapl__pxrReserved__ *)(0x800000020CAE771FLL & 0x7FFFFFFFFFFFFFFFLL));
  }
  return result;
}

uint64_t sub_20C44E04C(uint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v1;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v2;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  uint64_t HasInfo;
  void *v5;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v7;

  v1 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C44DFA8(a1);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPseudoRoot(v1, &v7);
  v2 = sub_20C0B0CA4(&v7);
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  HasInfo = pxrInternal__aapl__pxrReserved__::SdfSpec::HasInfo((pxrInternal__aapl__pxrReserved__::SdfSpec *)v2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v3 + 488));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v7);
  return HasInfo;
}

void sub_20C44E0C0(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

double sub_20C44E0D4(uint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v1;
  void *v2;
  double v3;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  double *v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v1 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C44DFA8(a1);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPseudoRoot(v1, &v8);
  v3 = 0.0;
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v8) & 1) == 0)
  {
    v4 = sub_20C0B0CA4(&v8);
    v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetInfo(v4, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 488), &v9);
    if (sub_20BF78EEC((pxrInternal__aapl__pxrReserved__::VtValue *)&v9))
    {
      if ((v10 & 4) != 0)
        v6 = (double *)(*(uint64_t (**)(uint64_t *))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(&v9);
      else
        v6 = (double *)&v9;
      v3 = *v6;
    }
    sub_20BF4C2D8((uint64_t)&v9);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  return v3;
}

void sub_20C44E1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  void *v11;

  sub_20BF4C2D8((uint64_t)&a10);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v11, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetStartTimeCode(pxrInternal__aapl__pxrReserved__::UsdStage *this, double a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  double v5;

  v5 = a2;
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C44E24C(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v3 + 320), &v5);
}

uint64_t sub_20C44E24C(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD v5[3];

  v5[2] = *MEMORY[0x24BDAC8D0];
  v5[1] = &unk_24C52064B;
  v5[0] = *a3;
  v3 = pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v5);
  sub_20BF4C2D8((uint64_t)v5);
  return v3;
}

void sub_20C44E2C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

double pxrInternal__aapl__pxrReserved__::UsdStage::GetEndTimeCode(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t (*v8)(uint64_t *);
  char v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase **v11;
  double EndTimeCode;
  double v13;
  uint64_t *v14;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v15;
  int HasEndTimeCode;
  uint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  pxrInternal__aapl__pxrReserved__::SdfSchemaBase **v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  BOOL v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int *v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_20C1034E8(&v41, (uint64_t *)this + 5);
  v43 = v41;
  v44 = v42;
  if (v42)
  {
    v2 = (unsigned int *)(v42 + 8);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + 1, v2));
    v4 = v42;
    if (v42)
    {
      v5 = (unsigned int *)(v42 + 8);
      do
      {
        v6 = __ldxr(v5);
        v7 = v6 - 1;
      }
      while (__stlxr(v7, v5));
      if (!v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    }
  }
  v8 = sub_20C44DF54(&v43);
  if (v9 & 1 | (unint64_t)v8)
  {
    v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C44DFA8(&v43);
    if (pxrInternal__aapl__pxrReserved__::SdfLayer::HasEndTimeCode(v10))
    {
      v11 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase **)sub_20C44DFA8(&v43);
      EndTimeCode = pxrInternal__aapl__pxrReserved__::SdfLayer::GetEndTimeCode(v11);
LABEL_14:
      v13 = EndTimeCode;
      goto LABEL_39;
    }
    if (sub_20C44E5D8(&v43))
    {
      EndTimeCode = sub_20C44E660(&v43);
      goto LABEL_14;
    }
  }
  v14 = (uint64_t *)((char *)this + 32);
  sub_20C1034E8(&v41, v14);
  v15 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v41);
  HasEndTimeCode = pxrInternal__aapl__pxrReserved__::SdfLayer::HasEndTimeCode(v15);
  v17 = v42;
  if (v42)
  {
    v18 = (unsigned int *)(v42 + 8);
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  }
  if (HasEndTimeCode)
  {
    sub_20C1034E8(&v41, v14);
    v21 = (pxrInternal__aapl__pxrReserved__::SdfSchemaBase **)sub_20BFCF650(&v41);
    v13 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetEndTimeCode(v21);
    v22 = v42;
    if (!v42)
      goto LABEL_39;
    v23 = (unsigned int *)(v42 + 8);
    do
    {
      v24 = __ldxr(v23);
      v25 = --v24 == 0;
    }
    while (__stlxr(v24, v23));
    goto LABEL_36;
  }
  sub_20C1034E8(&v39, v14);
  v41 = v39;
  v42 = v40;
  if (v40)
  {
    v26 = (unsigned int *)(v40 + 8);
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }
  v13 = sub_20C44E660(&v41);
  v28 = v42;
  if (v42)
  {
    v29 = (unsigned int *)(v42 + 8);
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      (*(void (**)(uint64_t))(*(_QWORD *)v28 + 8))(v28);
  }
  v22 = v40;
  if (v40)
  {
    v32 = (unsigned int *)(v40 + 8);
    do
    {
      v33 = __ldxr(v32);
      v25 = --v33 == 0;
    }
    while (__stlxr(v33, v32));
LABEL_36:
    if (v25)
      (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
  }
LABEL_39:
  v34 = v44;
  if (v44)
  {
    v35 = (unsigned int *)(v44 + 8);
    do
    {
      v36 = __ldxr(v35);
      v37 = v36 - 1;
    }
    while (__stlxr(v37, v35));
    if (!v37)
      (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
  }
  return v13;
}

void sub_20C44E50C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, unsigned int *a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int *a14)
{
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;

  if (a12)
    sub_20C96B408(a12);
  if (a10)
  {
    v15 = a10 + 2;
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(unsigned int *))(*(_QWORD *)a10 + 8))(a10);
  }
  if (a14)
  {
    v18 = a14 + 2;
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(unsigned int *))(*(_QWORD *)a14 + 8))(a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C44E5D8(uint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v1;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v2;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  uint64_t HasInfo;
  void *v5;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v7;

  v1 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C44DFA8(a1);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPseudoRoot(v1, &v7);
  v2 = sub_20C0B0CA4(&v7);
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  HasInfo = pxrInternal__aapl__pxrReserved__::SdfSpec::HasInfo((pxrInternal__aapl__pxrReserved__::SdfSpec *)v2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v3 + 480));
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v5, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v7);
  return HasInfo;
}

void sub_20C44E64C(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

double sub_20C44E660(uint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v1;
  void *v2;
  double v3;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  double *v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v1 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C44DFA8(a1);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPseudoRoot(v1, &v8);
  v3 = 0.0;
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(&v8) & 1) == 0)
  {
    v4 = sub_20C0B0CA4(&v8);
    v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    pxrInternal__aapl__pxrReserved__::SdfSpec::GetInfo(v4, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 480), &v9);
    if (sub_20BF78EEC((pxrInternal__aapl__pxrReserved__::VtValue *)&v9))
    {
      if ((v10 & 4) != 0)
        v6 = (double *)(*(uint64_t (**)(uint64_t *))((v10 & 0xFFFFFFFFFFFFFFF8) + 168))(&v9);
      else
        v6 = (double *)&v9;
      v3 = *v6;
    }
    sub_20BF4C2D8((uint64_t)&v9);
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v8);
  return v3;
}

void sub_20C44E750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  void *v11;

  sub_20BF4C2D8((uint64_t)&a10);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v11, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a9);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetEndTimeCode(pxrInternal__aapl__pxrReserved__::UsdStage *this, double a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  double v5;

  v5 = a2;
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C44E24C(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v3 + 144), &v5);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::HasAuthoredTimeCodeRange(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  uint64_t (*v2)(uint64_t *);
  char v3;
  unint64_t v4;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v5;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int *v10;
  unsigned int v11;
  int v12;
  uint64_t (*v13)(uint64_t *);
  char v14;
  unint64_t v15;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v16;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int *v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  sub_20C1034E8(&v57, (uint64_t *)this + 4);
  sub_20C1034E8(&v55, (uint64_t *)this + 5);
  v2 = sub_20BFD2F78(&v55);
  v4 = v3 & 1 | (unint64_t)v2;
  if (!v4)
    goto LABEL_14;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v55);
  if (pxrInternal__aapl__pxrReserved__::SdfLayer::HasStartTimeCode(v5))
  {
    v6 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v55);
    if ((pxrInternal__aapl__pxrReserved__::SdfLayer::HasEndTimeCode(v6) & 1) != 0)
    {
      v7 = 1;
      goto LABEL_50;
    }
  }
  v53 = v55;
  v54 = v56;
  if (v56)
  {
    v8 = (unsigned int *)(v56 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  if (sub_20C44E04C(&v53))
  {
    v51 = v55;
    v52 = v56;
    if (v56)
    {
      v10 = (unsigned int *)(v56 + 8);
      do
        v11 = __ldxr(v10);
      while (__stxr(v11 + 1, v10));
    }
    v12 = 1;
    v7 = 1;
    if ((sub_20C44E5D8(&v51) & 1) != 0)
      goto LABEL_39;
  }
  else
  {
LABEL_14:
    v12 = 0;
  }
  v13 = sub_20BFD2F78(&v57);
  v15 = v14 & 1 | (unint64_t)v13;
  v7 = v15 != 0;
  if (v15)
  {
    v16 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v57);
    if (!pxrInternal__aapl__pxrReserved__::SdfLayer::HasStartTimeCode(v16)
      || (v17 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(&v57),
          (pxrInternal__aapl__pxrReserved__::SdfLayer::HasEndTimeCode(v17) & 1) == 0))
    {
      v49 = v57;
      v50 = v58;
      if (v58)
      {
        v18 = (unsigned int *)(v58 + 8);
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
      }
      if (sub_20C44E04C(&v49))
      {
        v47 = v57;
        v48 = v58;
        if (v58)
        {
          v20 = (unsigned int *)(v58 + 8);
          do
            v21 = __ldxr(v20);
          while (__stxr(v21 + 1, v20));
        }
        v7 = sub_20C44E5D8(&v47);
        v22 = v48;
        if (v48)
        {
          v23 = (unsigned int *)(v48 + 8);
          do
          {
            v24 = __ldxr(v23);
            v25 = v24 - 1;
          }
          while (__stlxr(v25, v23));
          if (!v25)
            (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
        }
      }
      else
      {
        v7 = 0;
      }
      v26 = v50;
      if (v50)
      {
        v27 = (unsigned int *)(v50 + 8);
        do
        {
          v28 = __ldxr(v27);
          v29 = v28 - 1;
        }
        while (__stlxr(v29, v27));
        if (!v29)
          (*(void (**)(uint64_t))(*(_QWORD *)v26 + 8))(v26);
      }
      if ((v12 & 1) == 0)
        goto LABEL_44;
      goto LABEL_39;
    }
  }
  if (v12)
  {
LABEL_39:
    v30 = v52;
    if (v52)
    {
      v31 = (unsigned int *)(v52 + 8);
      do
      {
        v32 = __ldxr(v31);
        v33 = v32 - 1;
      }
      while (__stlxr(v33, v31));
      if (!v33)
        (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
    }
  }
LABEL_44:
  if (v4)
  {
    v34 = v54;
    if (v54)
    {
      v35 = (unsigned int *)(v54 + 8);
      do
      {
        v36 = __ldxr(v35);
        v37 = v36 - 1;
      }
      while (__stlxr(v37, v35));
      if (!v37)
        (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
    }
  }
LABEL_50:
  v38 = v56;
  if (v56)
  {
    v39 = (unsigned int *)(v56 + 8);
    do
    {
      v40 = __ldxr(v39);
      v41 = v40 - 1;
    }
    while (__stlxr(v41, v39));
    if (!v41)
      (*(void (**)(uint64_t))(*(_QWORD *)v38 + 8))(v38);
  }
  v42 = v58;
  if (v58)
  {
    v43 = (unsigned int *)(v58 + 8);
    do
    {
      v44 = __ldxr(v43);
      v45 = v44 - 1;
    }
    while (__stlxr(v45, v43));
    if (!v45)
      (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
  }
  return v7;
}

void sub_20C44EA80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int *a12, uint64_t a13, unsigned int *a14, uint64_t a15, unsigned int *a16, uint64_t a17, unsigned int *a18)
{
  uint64_t v18;
  char v19;
  uint64_t v20;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int *v34;
  unsigned int *v35;
  unsigned int v36;
  unsigned int v37;

  if (a10)
    sub_20C96B408(a10);
  if (a12)
  {
    v22 = a12 + 2;
    do
    {
      v23 = __ldxr(v22);
      v24 = v23 - 1;
    }
    while (__stlxr(v24, v22));
    if (!v24)
      (*(void (**)(unsigned int *))(*(_QWORD *)a12 + 8))(a12);
  }
  if ((v19 & 1) != 0)
  {
    if (a14)
    {
      v25 = a14 + 2;
      do
      {
        v26 = __ldxr(v25);
        v27 = v26 - 1;
      }
      while (__stlxr(v27, v25));
      if (!v27)
        (*(void (**)(unsigned int *))(*(_QWORD *)a14 + 8))(a14);
    }
  }
  if (v18)
  {
    if (a16)
    {
      v28 = a16 + 2;
      do
      {
        v29 = __ldxr(v28);
        v30 = v29 - 1;
      }
      while (__stlxr(v30, v28));
      if (!v30)
        (*(void (**)(unsigned int *))(*(_QWORD *)a16 + 8))(a16);
    }
  }
  if (a18)
  {
    v31 = a18 + 2;
    do
    {
      v32 = __ldxr(v31);
      v33 = v32 - 1;
    }
    while (__stlxr(v33, v31));
    if (!v33)
      (*(void (**)(unsigned int *))(*(_QWORD *)a18 + 8))(a18);
  }
  v34 = *(unsigned int **)(v20 - 40);
  if (v34)
  {
    v35 = v34 + 2;
    do
    {
      v36 = __ldxr(v35);
      v37 = v36 - 1;
    }
    while (__stlxr(v37, v35));
    if (!v37)
      (*(void (**)(unsigned int *))(*(_QWORD *)v34 + 8))(v34);
  }
  _Unwind_Resume(exception_object);
}

double pxrInternal__aapl__pxrReserved__::UsdStage::GetTimeCodesPerSecond(pxrInternal__aapl__pxrReserved__::PcpCache **this)
{
  double v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v7;
  uint64_t v8;

  pxrInternal__aapl__pxrReserved__::PcpCache::GetLayerStack(this[16], &v7);
  v1 = *(double *)(sub_20C1FF3C0(&v7) + 168);
  v2 = v8;
  if (v8)
  {
    v3 = (unsigned int *)(v8 + 8);
    do
    {
      v4 = __ldxr(v3);
      v5 = v4 - 1;
    }
    while (__stlxr(v5, v3));
    if (!v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  return v1;
}

void sub_20C44EC20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetTimeCodesPerSecond(pxrInternal__aapl__pxrReserved__::UsdStage *this, double a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  double v5;

  v5 = a2;
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C44E24C(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v3 + 440), &v5);
}

double pxrInternal__aapl__pxrReserved__::UsdStage::GetFramesPerSecond(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v2;
  double v4;

  v4 = 0.0;
  v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2)
    v2 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20C44ECEC(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v2 + 168), &v4);
  return v4;
}

uint64_t sub_20C44ECEC(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  const std::type_info *v8;
  char *v9;
  unint64_t v10;
  const char *v11;
  void **v12;
  void *__p[2];
  char v15;
  void *v16[2];
  char v17;
  _QWORD v18[4];
  char v19;
  _BYTE v20[8];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v21 = 0;
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)v20) & 1) == 0)
  {
LABEL_19:
    v6 = 0;
    goto LABEL_20;
  }
  if (!sub_20BF78EEC((pxrInternal__aapl__pxrReserved__::VtValue *)v20))
  {
    v18[0] = "usd/stage.h";
    v18[1] = "GetMetadata";
    v18[2] = 2410;
    v18[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(const TfToken &, T *) const [T = double]";
    v19 = 0;
    v7 = v16;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(*(_QWORD *)(MEMORY[0x24BEDB780] + 8) & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v16);
    if (v17 < 0)
      v7 = (void **)v16[0];
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    pxrInternal__aapl__pxrReserved__::VtValue::GetTypeName((pxrInternal__aapl__pxrReserved__::VtValue *)v20, v8, v9, (uint64_t)__p);
    if (v15 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Requested type %s for stage metadatum %s does not match retrieved type %s", (const char *)v7, v11, (const char *)v12);
    if (v15 < 0)
      operator delete(__p[0]);
    if (v17 < 0)
      operator delete(v16[0]);
    goto LABEL_19;
  }
  if ((v21 & 4) != 0)
    v5 = (_QWORD *)(*(uint64_t (**)(_BYTE *))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(v20);
  else
    v5 = v20;
  *a3 = *v5;
  v6 = 1;
LABEL_20:
  sub_20BF4C2D8((uint64_t)v20);
  return v6;
}

void sub_20C44EE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  sub_20BF4C2D8(v24 - 56);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetFramesPerSecond(pxrInternal__aapl__pxrReserved__::UsdStage *this, double a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  double v5;

  v5 = a2;
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C44E24C(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v3 + 168), &v5);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetColorConfiguration(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::SdfAssetPath *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;

  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C44EF68(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 24), (__int128 *)a2);
}

uint64_t sub_20C44EF68(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, __int128 *a3)
{
  uint64_t v5;
  char *v7[3];

  v7[2] = *(char **)MEMORY[0x24BDAC8D0];
  v7[1] = (char *)&off_24C5255B8;
  sub_20C00A0DC(v7, a3);
  v5 = pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v7);
  sub_20BF4C2D8((uint64_t)v7);
  return v5;
}

void sub_20C44EFF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

void pxrInternal__aapl__pxrReserved__::UsdStage::GetColorConfiguration(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, uint64_t a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;
  std::string::size_type size;
  std::string *v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;
  std::string v10;
  void *__p;
  char v12;

  pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((pxrInternal__aapl__pxrReserved__::SdfAssetPath *)&v10);
  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20C44F138(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 24), &v10);
  size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    size = v10.__r_.__value_.__l.__size_;
  if (size)
  {
    v6 = &v10;
    if ((*((_BYTE *)&v10.__r_.__value_.__s + 23) & 0x80) == 0)
    {
LABEL_7:
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      *(_QWORD *)(a2 + 16) = *((_QWORD *)&v6->__r_.__value_.__l + 2);
      *(_OWORD *)a2 = v7;
      goto LABEL_10;
    }
  }
  else
  {
    v6 = (std::string *)sub_20C44F328();
    if ((*((_BYTE *)&v6->__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_7;
  }
  sub_20BDDBFAC((_BYTE *)a2, v6->__r_.__value_.__l.__data_, v6->__r_.__value_.__l.__size_);
LABEL_10:
  v8 = (_BYTE *)(a2 + 24);
  if (SHIBYTE(v6[1].__r_.__value_.__r.__words[2]) < 0)
  {
    sub_20BDDBFAC(v8, v6[1].__r_.__value_.__l.__data_, v6[1].__r_.__value_.__l.__size_);
  }
  else
  {
    v9 = *(_OWORD *)&v6[1].__r_.__value_.__l.__data_;
    *(_QWORD *)(a2 + 40) = *((_QWORD *)&v6[1].__r_.__value_.__l + 2);
    *(_OWORD *)v8 = v9;
  }
  if (v12 < 0)
    operator delete(__p);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v10.__r_.__value_.__l.__data_);
}

void sub_20C44F10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  if (*(char *)(v9 + 23) < 0)
    operator delete(*(void **)v9);
  sub_20BE930F8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C44F138(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, std::string *a3)
{
  const std::string *v5;
  uint64_t v6;
  void **v7;
  const std::type_info *v8;
  char *v9;
  unint64_t v10;
  const char *v11;
  void **v12;
  void *__p[2];
  char v15;
  void *v16[2];
  char v17;
  _QWORD v18[4];
  char v19;
  const std::string *v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v21 = 0;
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)&v20) & 1) == 0)
  {
LABEL_19:
    v6 = 0;
    goto LABEL_20;
  }
  if (!sub_20BFED488((pxrInternal__aapl__pxrReserved__::VtValue *)&v20))
  {
    v18[0] = "usd/stage.h";
    v18[1] = "GetMetadata";
    v18[2] = 2410;
    v18[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(const TfToken &, T *) const [T = pxrInternal__"
             "aapl__pxrReserved__::SdfAssetPath]";
    v19 = 0;
    v7 = v16;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CAC983ALL & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v16);
    if (v17 < 0)
      v7 = (void **)v16[0];
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    pxrInternal__aapl__pxrReserved__::VtValue::GetTypeName((pxrInternal__aapl__pxrReserved__::VtValue *)&v20, v8, v9, (uint64_t)__p);
    if (v15 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Requested type %s for stage metadatum %s does not match retrieved type %s", (const char *)v7, v11, (const char *)v12);
    if (v15 < 0)
      operator delete(__p[0]);
    if (v17 < 0)
      operator delete(v16[0]);
    goto LABEL_19;
  }
  if ((v21 & 4) != 0)
    v5 = (const std::string *)(*(uint64_t (**)(const std::string **))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(&v20);
  else
    v5 = v20;
  std::string::operator=(a3, v5);
  std::string::operator=(a3 + 1, v5 + 1);
  v6 = 1;
LABEL_20:
  sub_20BF4C2D8((uint64_t)&v20);
  return v6;
}

void sub_20C44F2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  sub_20BF4C2D8(v24 - 56);
  _Unwind_Resume(a1);
}

unint64_t sub_20C44F328()
{
  void **v0;
  pxrInternal__aapl__pxrReserved__::PlugRegistry *v2;
  pxrInternal__aapl__pxrReserved__::PlugRegistry *Instance;
  uint64_t *v4;
  uint64_t *v5;
  void **v6;
  const void ***v7;
  const void ***JsObject;
  _QWORD **v9;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  const char *v11;
  unint64_t String;
  __int128 v13;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  char v24;
  int v25;
  void *v26;
  void *v27;
  char v28;
  unint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  _QWORD *v32;
  _QWORD **v33;
  BOOL v34;
  uint64_t v35;
  const char *v36;
  std::__shared_weak_count *v37;
  unint64_t *p_shared_owners;
  unint64_t v39;
  unint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t *v44;
  void *__p[2];
  uint64_t v46;
  __int128 v47;
  void *v48;
  __int128 __dst;
  uint64_t v50;
  _QWORD **v51;
  _QWORD *v52[2];
  unint64_t *v53;
  std::__shared_weak_count *v54;
  uint64_t v55[3];
  uint64_t *v56;
  uint64_t *v57;

  v0 = (void **)atomic_load(&qword_254988B20);
  if (v0)
    return (unint64_t)v0;
  v0 = (void **)operator new(0x38uLL);
  pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((pxrInternal__aapl__pxrReserved__::SdfAssetPath *)v0);
  v0[6] = 0;
  Instance = (pxrInternal__aapl__pxrReserved__::PlugRegistry *)pxrInternal__aapl__pxrReserved__::PlugRegistry::GetInstance(v2);
  pxrInternal__aapl__pxrReserved__::PlugRegistry::GetAllPlugins((uint64_t *)&v56, Instance);
  v4 = v56;
  v5 = v57;
  if (v56 != v57)
  {
    v6 = v0 + 3;
    v44 = v57;
    do
    {
      v7 = (const void ***)sub_20BF444D8(v4);
      pxrInternal__aapl__pxrReserved__::PlugPlugin::GetMetadata(v7, v55);
      pxrInternal__aapl__pxrReserved__::JsValue::JsValue((pxrInternal__aapl__pxrReserved__::JsValue *)&v53);
      if (sub_20C46FDA8((uint64_t)v55, "UsdColorConfigFallbacks", &v53))
      {
        if (pxrInternal__aapl__pxrReserved__::JsValue::IsObject((pxrInternal__aapl__pxrReserved__::JsValue *)&v53))
        {
          JsObject = (const void ***)pxrInternal__aapl__pxrReserved__::JsValue::GetJsObject(&v53);
          sub_20BF1BE5C((uint64_t *)&v51, JsObject);
          v9 = v51;
          if (v51 != v52)
          {
            do
            {
              v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v10)
                v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              v11 = (const char *)(v9 + 4);
              if (pxrInternal__aapl__pxrReserved__::TfToken::operator==((pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v10 + 24), (unsigned __int8 *)v9 + 32))
              {
                if (!pxrInternal__aapl__pxrReserved__::JsValue::IsString((pxrInternal__aapl__pxrReserved__::JsValue *)(v9 + 7)))
                {
                  __p[0] = "usd/stage.cpp";
                  __p[1] = "_colorConfigurationFallbacks_Tf_StaticDataFactoryImpl";
                  v46 = 148;
                  *(_QWORD *)&v47 = "void pxrInternal__aapl__pxrReserved__::_colorConfigurationFallbacks_Tf_StaticDataFac"
                                    "toryImpl(std::remove_const_t<_ColorConfigurationFallbacks> *)";
                  BYTE8(v47) = 0;
                  v17 = sub_20BF444D8(v4);
                  v18 = (const char *)(v17 + 8);
                  if (*(char *)(v17 + 31) < 0)
                    v18 = *(const char **)v18;
                  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"'colorConfiguration' value in %s[UsdColorConfigFallbacks] must be a string.", v18);
                  goto LABEL_55;
                }
                String = pxrInternal__aapl__pxrReserved__::JsValue::GetString((pxrInternal__aapl__pxrReserved__::JsValue *)(v9 + 7));
                if (*(char *)(String + 23) < 0)
                {
                  sub_20BDDBFAC(&__dst, *(void **)String, *(_QWORD *)(String + 8));
                }
                else
                {
                  v13 = *(_OWORD *)String;
                  v50 = *(_QWORD *)(String + 16);
                  __dst = v13;
                }
                v23 = HIBYTE(v50);
                v24 = HIBYTE(v50);
                if (v50 < 0)
                  v23 = *((_QWORD *)&__dst + 1);
                if (v23)
                {
                  pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath(__p, &__dst);
                  if (*((char *)v0 + 23) < 0)
                    operator delete(*v0);
                  *(_OWORD *)v0 = *(_OWORD *)__p;
                  v0[2] = (void *)v46;
                  HIBYTE(v46) = 0;
                  LOBYTE(__p[0]) = 0;
                  if (*((char *)v0 + 47) < 0)
                  {
                    operator delete(*v6);
                    v25 = SHIBYTE(v46);
                    *(_OWORD *)v6 = v47;
                    v0[5] = v48;
                    HIBYTE(v48) = 0;
                    LOBYTE(v47) = 0;
                    if (v25 < 0)
                      operator delete(__p[0]);
                  }
                  else
                  {
                    *(_OWORD *)v6 = v47;
                    v0[5] = v48;
                  }
                  v24 = HIBYTE(v50);
                }
                if (v24 < 0)
                {
                  v26 = (void *)__dst;
LABEL_54:
                  operator delete(v26);
                }
              }
              else
              {
                v14 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                if (!v14)
                  v14 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
                if (!pxrInternal__aapl__pxrReserved__::TfToken::operator==((pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v14 + 32), (unsigned __int8 *)v9 + 32))
                {
                  __p[0] = "usd/stage.cpp";
                  __p[1] = "_colorConfigurationFallbacks_Tf_StaticDataFactoryImpl";
                  v46 = 170;
                  *(_QWORD *)&v47 = "void pxrInternal__aapl__pxrReserved__::_colorConfigurationFallbacks_Tf_StaticDataFac"
                                    "toryImpl(std::remove_const_t<_ColorConfigurationFallbacks> *)";
                  BYTE8(v47) = 0;
                  if (*((char *)v9 + 55) < 0)
                    v11 = *(const char **)v11;
                  v19 = sub_20BF444D8(v4);
                  v20 = (const char *)(v19 + 8);
                  if (*(char *)(v19 + 31) < 0)
                    v20 = *(const char **)v20;
                  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"Unknown key '%s' found in %s[UsdColorConfigFallbacks].", v11, v20);
                  goto LABEL_55;
                }
                if (!pxrInternal__aapl__pxrReserved__::JsValue::IsString((pxrInternal__aapl__pxrReserved__::JsValue *)(v9 + 7)))
                {
                  __p[0] = "usd/stage.cpp";
                  __p[1] = "_colorConfigurationFallbacks_Tf_StaticDataFactoryImpl";
                  v46 = 160;
                  *(_QWORD *)&v47 = "void pxrInternal__aapl__pxrReserved__::_colorConfigurationFallbacks_Tf_StaticDataFac"
                                    "toryImpl(std::remove_const_t<_ColorConfigurationFallbacks> *)";
                  BYTE8(v47) = 0;
                  v21 = sub_20BF444D8(v4);
                  v22 = (const char *)(v21 + 8);
                  if (*(char *)(v21 + 31) < 0)
                    v22 = *(const char **)v22;
                  pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"'colorManagementSystem' value in %s[UsdColorConfigFallbacks] must be a string.", v22);
                  goto LABEL_55;
                }
                v15 = pxrInternal__aapl__pxrReserved__::JsValue::GetString((pxrInternal__aapl__pxrReserved__::JsValue *)(v9 + 7));
                if (*(char *)(v15 + 23) < 0)
                {
                  sub_20BDDBFAC(__p, *(void **)v15, *(_QWORD *)(v15 + 8));
                }
                else
                {
                  v16 = *(_OWORD *)v15;
                  v46 = *(_QWORD *)(v15 + 16);
                  *(_OWORD *)__p = v16;
                }
                v27 = (void *)HIBYTE(v46);
                v28 = HIBYTE(v46);
                if (v46 < 0)
                  v27 = __p[1];
                if (v27)
                {
                  pxrInternal__aapl__pxrReserved__::TfToken::TfToken(&__dst);
                  v29 = (unint64_t)v0[6];
                  if ((v29 & 7) != 0)
                  {
                    v30 = (unsigned int *)(v29 & 0xFFFFFFFFFFFFFFF8);
                    do
                      v31 = __ldxr(v30);
                    while (__stlxr(v31 - 2, v30));
                  }
                  v0[6] = (void *)__dst;
                  v28 = HIBYTE(v46);
                }
                if (v28 < 0)
                {
                  v26 = __p[0];
                  goto LABEL_54;
                }
              }
LABEL_55:
              v32 = v9[1];
              if (v32)
              {
                do
                {
                  v33 = (_QWORD **)v32;
                  v32 = (_QWORD *)*v32;
                }
                while (v32);
              }
              else
              {
                do
                {
                  v33 = (_QWORD **)v9[2];
                  v34 = *v33 == v9;
                  v9 = v33;
                }
                while (!v34);
              }
              v9 = v33;
            }
            while (v33 != v52);
          }
          sub_20BE78E5C((uint64_t)&v51, v52[0]);
          v5 = v44;
        }
        else
        {
          __p[0] = "usd/stage.cpp";
          __p[1] = "_colorConfigurationFallbacks_Tf_StaticDataFactoryImpl";
          v46 = 137;
          *(_QWORD *)&v47 = "void pxrInternal__aapl__pxrReserved__::_colorConfigurationFallbacks_Tf_StaticDataFactoryImpl"
                            "(std::remove_const_t<_ColorConfigurationFallbacks> *)";
          BYTE8(v47) = 0;
          v35 = sub_20BF444D8(v4);
          v36 = (const char *)(v35 + 8);
          if (*(char *)(v35 + 31) < 0)
            v36 = *(const char **)v36;
          pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)__p, 1, (pxrInternal__aapl__pxrReserved__ *)"%s[UsdColorConfigFallbacks] was not a dictionary.", v36);
        }
      }
      v37 = v54;
      if (v54)
      {
        p_shared_owners = (unint64_t *)&v54->__shared_owners_;
        do
          v39 = __ldaxr(p_shared_owners);
        while (__stlxr(v39 - 1, p_shared_owners));
        if (!v39)
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
        }
      }
      sub_20BE78E5C((uint64_t)v55, (_QWORD *)v55[1]);
      v4 += 2;
    }
    while (v4 != v5);
  }
  __p[0] = &v56;
  sub_20BEB4844((void ***)__p);
  while (!__ldaxr(&qword_254988B20))
  {
    if (!__stlxr((unint64_t)v0, &qword_254988B20))
      return (unint64_t)v0;
  }
  __clrex();
  v41 = (unint64_t)v0[6];
  if ((v41 & 7) != 0)
  {
    v42 = (unsigned int *)(v41 & 0xFFFFFFFFFFFFFFF8);
    do
      v43 = __ldxr(v42);
    while (__stlxr(v43 - 2, v42));
  }
  if (*((char *)v0 + 47) < 0)
    operator delete(v0[3]);
  if (*((char *)v0 + 23) < 0)
    operator delete(*v0);
  operator delete(v0);
  return atomic_load(&qword_254988B20);
}

void sub_20C44F860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  void *v33;

  operator delete(v33);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::SetColorManagementSystem(pxrInternal__aapl__pxrReserved__::UsdStage *this, const pxrInternal__aapl__pxrReserved__::TfToken *a2)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;

  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C44F988(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 32), (uint64_t *)a2);
}

uint64_t sub_20C44F988(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD v8[3];

  v8[2] = *MEMORY[0x24BDAC8D0];
  v3 = *a3;
  v8[0] = v3;
  v8[1] = (char *)&off_24C5207B8 + 1;
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 2, v4));
    if ((v5 & 1) == 0)
      v8[0] = v4;
  }
  v6 = pxrInternal__aapl__pxrReserved__::UsdStage::SetMetadata(a1, a2, (const pxrInternal__aapl__pxrReserved__::VtValue *)v8);
  sub_20BF4C2D8((uint64_t)v8);
  return v6;
}

void sub_20C44FA24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF4C2D8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetColorManagementSystem@<X0>(pxrInternal__aapl__pxrReserved__::UsdStage *this@<X0>, unsigned int **a2@<X8>)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;

  v11 = 0;
  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  result = sub_20C44FB10(this, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v4 + 32), &v11);
  v6 = v11;
  if (!v11)
  {
    result = sub_20C44F328();
    v6 = *(unsigned int **)(result + 48);
  }
  *a2 = v6;
  if ((v6 & 7) != 0)
  {
    v7 = (unsigned int *)((unint64_t)v6 & 0xFFFFFFFFFFFFFFF8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 2, v7));
    if ((v8 & 1) == 0)
      *a2 = v7;
  }
  if ((v11 & 7) != 0)
  {
    v9 = (unsigned int *)((unint64_t)v11 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stlxr(v10 - 2, v9));
  }
  return result;
}

uint64_t sub_20C44FB10(pxrInternal__aapl__pxrReserved__::UsdStage *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _QWORD *a3)
{
  _QWORD *v5;
  uint64_t v6;
  void **v7;
  const std::type_info *v8;
  char *v9;
  unint64_t v10;
  const char *v11;
  void **v12;
  void *__p[2];
  char v15;
  void *v16[2];
  char v17;
  _QWORD v18[4];
  char v19;
  _BYTE v20[8];
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v21 = 0;
  if ((pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(a1, a2, (pxrInternal__aapl__pxrReserved__::VtValue *)v20) & 1) == 0)
  {
LABEL_19:
    v6 = 0;
    goto LABEL_20;
  }
  if (!sub_20BFB5E50((pxrInternal__aapl__pxrReserved__::VtValue *)v20))
  {
    v18[0] = "usd/stage.h";
    v18[1] = "GetMetadata";
    v18[2] = 2410;
    v18[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::GetMetadata(const TfToken &, T *) const [T = pxrInternal__"
             "aapl__pxrReserved__::TfToken]";
    v19 = 0;
    v7 = v16;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)(0x800000020CB09058 & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)v16);
    if (v17 < 0)
      v7 = (void **)v16[0];
    v10 = *(_QWORD *)a2 & 0xFFFFFFFFFFFFFFF8;
    if (v10)
    {
      v11 = (const char *)(v10 + 16);
      if (*(char *)(v10 + 39) < 0)
        v11 = *(const char **)v11;
    }
    else
    {
      v11 = "";
    }
    pxrInternal__aapl__pxrReserved__::VtValue::GetTypeName((pxrInternal__aapl__pxrReserved__::VtValue *)v20, v8, v9, (uint64_t)__p);
    if (v15 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v18, 1, (pxrInternal__aapl__pxrReserved__ *)"Requested type %s for stage metadatum %s does not match retrieved type %s", (const char *)v7, v11, (const char *)v12);
    if (v15 < 0)
      operator delete(__p[0]);
    if (v17 < 0)
      operator delete(v16[0]);
    goto LABEL_19;
  }
  if ((v21 & 4) != 0)
    v5 = (_QWORD *)(*(uint64_t (**)(_BYTE *))((v21 & 0xFFFFFFFFFFFFFFF8) + 168))(v20);
  else
    v5 = v20;
  sub_20BF32220(a3, v5);
  v6 = 1;
LABEL_20:
  sub_20BF4C2D8((uint64_t)v20);
  return v6;
}

void sub_20C44FCA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  if (a18 < 0)
    operator delete(__p);
  if (a24 < 0)
    operator delete(a19);
  sub_20BF4C2D8(v24 - 56);
  _Unwind_Resume(a1);
}

std::string *pxrInternal__aapl__pxrReserved__::UsdStage::GetColorConfigFallbacks(std::string *this, pxrInternal__aapl__pxrReserved__::SdfAssetPath *a2, pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  std::string *v4;
  const std::string *v5;
  _QWORD *v6;

  if (this)
  {
    v4 = this;
    v5 = (const std::string *)sub_20C44F328();
    std::string::operator=(v4, v5);
    this = std::string::operator=(v4 + 1, v5 + 1);
  }
  if (a2)
  {
    v6 = (_QWORD *)(sub_20C44F328() + 48);
    return (std::string *)sub_20BF32220(a2, v6);
  }
  return this;
}

std::string *pxrInternal__aapl__pxrReserved__::UsdStage::SetColorConfigFallbacks(std::string *this, const pxrInternal__aapl__pxrReserved__::SdfAssetPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3)
{
  std::string::size_type size;
  const std::string *v5;
  std::string *v6;
  unint64_t v7;

  size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = this->__r_.__value_.__l.__size_;
  if (size)
  {
    v5 = this;
    v6 = (std::string *)sub_20C44F328();
    std::string::operator=(v6, v5);
    this = std::string::operator=(v6 + 1, v5 + 1);
  }
  if (*(_QWORD *)a2)
  {
    v7 = sub_20C44F328();
    return (std::string *)sub_20BF32220((_QWORD *)(v7 + 48), a2);
  }
  return this;
}

void pxrInternal__aapl__pxrReserved__::UsdStage::ResolveIdentifierToEditTarget(pxrInternal__aapl__pxrReserved__::UsdStage *a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t *v3;
  uint64_t (*v6)(uint64_t *);
  char v7;
  const char *v8;
  char *v9;
  unint64_t *v10;
  uint64_t *v11;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v12;
  uint64_t Identifier;
  const char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  char *v19;
  unint64_t *v20;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  _QWORD **v28;
  _QWORD *v29[6];

  v3 = a2;
  v29[5] = *(_QWORD **)MEMORY[0x24BDAC8D0];
  if (pxrInternal__aapl__pxrReserved__::SdfLayer::IsAnonymousLayerIdentifier(a2))
  {
    v29[0] = 0;
    v29[1] = 0;
    v28 = v29;
    pxrInternal__aapl__pxrReserved__::SdfLayer::Find((uint64_t)v3, (uint64_t)&v28, &v25);
    sub_20BDE9D48((uint64_t)&v28, v29[0]);
    v6 = sub_20BFD2F78(&v25);
    if (v7 & 1 | (unint64_t)v6)
    {
      if (sub_20C286E00(7))
      {
        if (*((char *)v3 + 23) >= 0)
          v10 = v3;
        else
          v10 = (unint64_t *)*v3;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Resolved identifier %s because it was anonymous\n", v8, v9, v10);
      }
      if (*((char *)v3 + 23) < 0)
      {
        sub_20BDDBFAC((_BYTE *)a3, (void *)*v3, v3[1]);
      }
      else
      {
        *(_OWORD *)a3 = *(_OWORD *)v3;
        *(_QWORD *)(a3 + 16) = v3[2];
      }
    }
    else
    {
      if (sub_20C286E00(7))
      {
        if (*((char *)v3 + 23) >= 0)
          v20 = v3;
        else
          v20 = (unint64_t *)*v3;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Resolved identifier %s to \"\" because it was anonymous but no layer is open with that identifier\n", v18, v19, v20);
      }
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      *(_QWORD *)(a3 + 16) = 0;
    }
    v21 = v26;
    if (v26)
    {
      v22 = (unsigned int *)(v26 + 8);
      do
      {
        v23 = __ldxr(v22);
        v24 = v23 - 1;
      }
      while (__stlxr(v24, v22));
      if (!v24)
        (*(void (**)(uint64_t))(*(_QWORD *)v21 + 8))(v21);
    }
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(a1, (uint64_t)&v25);
    pxrInternal__aapl__pxrReserved__::ArResolverContextBinder::ArResolverContextBinder((pxrInternal__aapl__pxrReserved__::ArResolverContextBinder *)&v28, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)&v25);
    v11 = (uint64_t *)((char *)a1 + 48);
    v27 = (void **)&v25;
    sub_20BDE9EB0(&v27);
    sub_20C450080(v11, (uint64_t)v3, a3);
    if (sub_20C286E00(7))
    {
      if (*((char *)v3 + 23) < 0)
        v3 = (unint64_t *)*v3;
      v12 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v11);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v12);
      if (*(char *)(Identifier + 23) >= 0)
        v16 = Identifier;
      else
        v16 = *(_QWORD *)Identifier;
      if (*(char *)(a3 + 23) >= 0)
        v17 = a3;
      else
        v17 = *(_QWORD *)a3;
      pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Resolved identifier \"%s\" against layer @%s@ to: \"%s\"\n", v14, v15, v3, v16, v17);
    }
    pxrInternal__aapl__pxrReserved__::ArResolverContextBinder::~ArResolverContextBinder((pxrInternal__aapl__pxrReserved__::ArResolverContextBinder *)&v28);
  }
}

void sub_20C44FFE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;

  if (a13)
  {
    v18 = a13 + 2;
    do
    {
      v19 = __ldxr(v18);
      v20 = v19 - 1;
    }
    while (__stlxr(v20, v18));
    if (!v20)
      (*(void (**)(unsigned int *))(*(_QWORD *)a13 + 8))(a13);
  }
  _Unwind_Resume(exception_object);
}

void sub_20C450080(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  pxrInternal__aapl__pxrReserved__ *v4;
  uint64_t v5;
  uint64_t *Resolver;
  void *v7[2];
  uint64_t v8;
  void *__p[2];
  uint64_t v10;

  sub_20C45040C(a1, a2, (uint64_t)__p);
  if (SHIBYTE(v10) < 0)
  {
    if (!__p[1])
    {
      sub_20BDDBFAC((_BYTE *)a3, __p[0], 0);
      goto LABEL_8;
    }
  }
  else if (!HIBYTE(v10))
  {
    *(_OWORD *)a3 = *(_OWORD *)__p;
    v5 = v10;
LABEL_7:
    *(_QWORD *)(a3 + 16) = v5;
    goto LABEL_8;
  }
  Resolver = pxrInternal__aapl__pxrReserved__::ArGetResolver(v4);
  pxrInternal__aapl__pxrReserved__::ArResolver::Resolve((uint64_t)Resolver);
  if ((SHIBYTE(v8) & 0x80000000) == 0)
  {
    *(_OWORD *)a3 = *(_OWORD *)v7;
    v5 = v8;
    goto LABEL_7;
  }
  sub_20BDDBFAC((_BYTE *)a3, v7[0], (unint64_t)v7[1]);
  operator delete(v7[0]);
LABEL_8:
  if (SHIBYTE(v10) < 0)
    operator delete(__p[0]);
}

void sub_20C45013C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *pxrInternal__aapl__pxrReserved__::UsdStage::SetInterpolationType(_DWORD *result, int a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  _DWORD *v6[6];
  uint64_t *v7;
  _QWORD *v8[2];
  uint64_t v9;
  _DWORD *v10;

  if (result[196] != a2)
  {
    result[196] = a2;
    v2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C3A3AEC(&v9, (uint64_t)result);
    v8[0] = 0;
    v8[1] = 0;
    v7 = (uint64_t *)v8;
    v6[0] = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v2);
    sub_20C45FB70(&v7, (pxrInternal__aapl__pxrReserved__::SdfPath *)v6[0], (uint64_t)&unk_20CAC184C, v6);
    pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v6, &v9, (uint64_t)&v7);
    sub_20C4387FC(v6, &v9);
    pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged::~ObjectsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::ObjectsChanged *)v6);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageNotice::StageNotice(v6, &v9);
    v6[0] = &unk_24C538A18;
    sub_20C4387FC(v6, &v9);
    pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)v6);
    sub_20C3A2248((uint64_t)&v7, v8[0]);
    result = v10;
    if (v10)
    {
      v3 = v10 + 2;
      do
      {
        v4 = __ldxr(v3);
        v5 = v4 - 1;
      }
      while (__stlxr(v5, v3));
      if (!v5)
        return (_DWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)result + 8))(result);
    }
  }
  return result;
}

void sub_20C450278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, _QWORD *a16)
{
  uint64_t v16;
  unsigned int *v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;

  pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged::~StageContentsChanged((pxrInternal__aapl__pxrReserved__::UsdNotice::StageContentsChanged *)&a9);
  sub_20C3A2248((uint64_t)&a15, a16);
  v18 = *(unsigned int **)(v16 - 32);
  if (v18)
  {
    v19 = v18 + 2;
    do
    {
      v20 = __ldxr(v19);
      v21 = v20 - 1;
    }
    while (__stlxr(v21, v19));
    if (!v21)
      (*(void (**)(unsigned int *))(*(_QWORD *)v18 + 8))(v18);
  }
  _Unwind_Resume(a1);
}

uint64_t pxrInternal__aapl__pxrReserved__::UsdStage::GetInterpolationType(pxrInternal__aapl__pxrReserved__::UsdStage *this)
{
  return *((unsigned int *)this + 196);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdDescribe@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__ *v6;

  v5 = *(_QWORD *)(a1 + 8);
  v4 = (uint64_t *)(a1 + 8);
  if (v5)
  {
    if (*(_BYTE *)(sub_20BEB47BC(v4) + 14))
      v6 = *(pxrInternal__aapl__pxrReserved__ **)a1;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  return pxrInternal__aapl__pxrReserved__::UsdDescribe(v6, a2);
}

_QWORD *pxrInternal__aapl__pxrReserved__::UsdDescribe@<X0>(pxrInternal__aapl__pxrReserved__ **a1@<X0>, _QWORD *a2@<X8>)
{
  return pxrInternal__aapl__pxrReserved__::UsdDescribe(*a1, a2);
}

void sub_20C450340(uint64_t *a1, uint64_t **a2)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v4;
  uint64_t Identifier;
  uint64_t v6;
  const char *Text;
  const char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11[3];
  void *__p;
  char v13;
  void **v14;

  v4 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a1 + 1);
  Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v4);
  if (*(char *)(Identifier + 23) >= 0)
    v6 = Identifier;
  else
    v6 = *(_QWORD *)Identifier;
  Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a1 + 2));
  pxrInternal__aapl__pxrReserved__::TfStringPrintf((pxrInternal__aapl__pxrReserved__ *)"resolving asset path at @%s@<%s>", v8, v9, v6, Text);
  v10 = *a1;
  memset(v11, 0, sizeof(v11));
  pxrInternal__aapl__pxrReserved__::UsdStage::_ReportErrors(v10, v11, a2, (uint64_t *)&__p);
  v14 = (void **)v11;
  sub_20BDE9EB0(&v14);
  if (v13 < 0)
    operator delete(__p);
}

void sub_20C4503E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v21 - 40) = v20;
  sub_20BDE9EB0((void ***)(v21 - 40));
  if (a20 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20C45040C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;

  v5 = *(unsigned __int8 *)(a2 + 23);
  v6 = v5;
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a2 + 8);
  if (v5)
  {
    if (!pxrInternal__aapl__pxrReserved__::SdfLayer::IsAnonymousLayerIdentifier(a2))
    {
      pxrInternal__aapl__pxrReserved__::SdfComputeAssetPathRelativeToLayer(a1, a2, a3);
      return;
    }
    v6 = *(_BYTE *)(a2 + 23);
  }
  if (v6 < 0)
  {
    sub_20BDDBFAC((_BYTE *)a3, *(void **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)a3 = *(_OWORD *)a2;
    *(_QWORD *)(a3 + 16) = *(_QWORD *)(a2 + 16);
  }
}

void sub_20C4504AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  __int128 v18;
  uint64_t v19;
  void **v20;
  __int128 v21;
  _QWORD v22[5];
  __int128 v23;
  void **v24[32];
  uint64_t v25;
  _QWORD v26[10];

  v26[9] = *MEMORY[0x24BDAC8D0];
  v1 = **(_QWORD **)(a1 + 8);
  v18 = 0uLL;
  v19 = 0;
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v24);
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = v25;
  v2 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x18uLL);
  *((_BYTE *)v2 - 11) = 1;
  *v2 = &off_24C539618;
  v2[1] = v1;
  v2[2] = v26;
  (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v2 - 5))(*(v2 - 5), v2, (uint64_t)(v2 - 1));
  if (*(_QWORD *)(v1 + 24))
  {
    pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetAllPrototypes(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(v1 + 144), (uint64_t *)&v21);
    sub_20BFD7014(&v18);
    v18 = v21;
    v19 = v22[0];
    v20 = (void **)&v21;
    v22[0] = 0;
    v21 = 0uLL;
    sub_20BFD6F90(&v20);
    *(_QWORD *)&v21 = 0;
    *((_QWORD *)&v21 + 1) = v25;
    v3 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x20uLL);
    *((_BYTE *)v3 - 11) = 1;
    *v3 = &off_24C539660;
    v3[1] = v1;
    v3[2] = &v18;
    v3[3] = v26;
    (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v3 - 5))(*(v3 - 5), v3, (uint64_t)(v3 - 1));
  }
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = v25;
  v4 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x18uLL);
  *((_BYTE *)v4 - 11) = 1;
  *v4 = &off_24C5396A8;
  v4[1] = v1;
  v4[2] = v26;
  (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v4 - 5))(*(v4 - 5), v4, (uint64_t)(v4 - 1));
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = v25;
  v5 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x18uLL);
  *((_BYTE *)v5 - 11) = 1;
  *v5 = &off_24C5396F0;
  v5[1] = v1;
  v5[2] = v26;
  (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v5 - 5))(*(v5 - 5), v5, (uint64_t)(v5 - 1));
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = v25;
  v6 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x18uLL);
  *((_BYTE *)v6 - 11) = 1;
  *v6 = &off_24C539738;
  v6[1] = v1;
  v6[2] = v26;
  (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v6 - 5))(*(v6 - 5), v6, (uint64_t)(v6 - 1));
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = v25;
  v7 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x18uLL);
  *((_BYTE *)v7 - 11) = 1;
  *v7 = &off_24C539780;
  v7[1] = v1;
  v7[2] = v26;
  (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v7 - 5))(*(v7 - 5), v7, (uint64_t)(v7 - 1));
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = v25;
  v8 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v21, 0x18uLL);
  *((_BYTE *)v8 - 11) = 1;
  *v8 = &off_24C5397C8;
  v8[1] = v1;
  v8[2] = v26;
  (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v8 - 5))(*(v8 - 5), v8, (uint64_t)(v8 - 1));
  pxrInternal__aapl__pxrReserved__::UsdEditTarget::UsdEditTarget((pxrInternal__aapl__pxrReserved__::UsdEditTarget *)&v21);
  v9 = *(unsigned int **)(v1 + 56);
  *(_OWORD *)(v1 + 48) = v21;
  *((_QWORD *)&v21 + 1) = 0;
  if (v9)
  {
    v10 = v9 + 2;
    do
    {
      v11 = __ldxr(v10);
      v12 = v11 - 1;
    }
    while (__stlxr(v12, v10));
    if (!v12)
      (*(void (**)(unsigned int *))(*(_QWORD *)v9 + 8))(v9);
  }
  *(_QWORD *)&v21 = 0;
  if ((__int128 *)(v1 + 48) != &v21)
  {
    v13 = sub_20C2011B8((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)(v1 + 64));
    sub_20C201ECC(v13, (uint64_t)v22);
  }
  *(_OWORD *)(v1 + 104) = v23;
  sub_20C2011B8((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)v22);
  v14 = *((_QWORD *)&v21 + 1);
  if (*((_QWORD *)&v21 + 1))
  {
    v15 = (unsigned int *)(*((_QWORD *)&v21 + 1) + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)v24);
  v24[0] = (void **)&v18;
  sub_20BFD6F90(v24);
}

void sub_20C450804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void **a22)
{
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher((pxrInternal__aapl__pxrReserved__::WorkDispatcher *)&a22);
  a22 = (void **)&a9;
  sub_20BFD6F90(&a22);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45085C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *Instance;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v9);
  v2 = *(_QWORD **)(a1 + 8);
  v3 = v2[99];
  v4 = v2[100];
  while (v3 != v4)
  {
    pxrInternal__aapl__pxrReserved__::TfNotice::Revoke((uint64_t *)(v3 + 16));
    v3 += 32;
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::Revoke(v2 + 103);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v6 = v9;
  v7 = atomic_load(Instance + 18);
  if (v6 < v7
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v9, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v9, *(_QWORD *)(a1 + 16));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v9);
  return 0;
}

void sub_20C450914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C450934(_QWORD *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v2;
  uint64_t v3;
  uint64_t *v4;
  _DWORD *v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t *Instance;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;

  v2 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v13);
  v3 = a1[1];
  v4 = (uint64_t *)a1[2];
  v5 = (_DWORD *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v2);
  v6 = v4[1];
  if (v6 >= v4[2])
  {
    v8 = sub_20BFD7890(v4, v5);
  }
  else
  {
    sub_20BFD6E54((_DWORD *)v4[1], v5);
    sub_20BFD6EA4((_DWORD *)(v6 + 4), v5 + 1);
    v8 = v6 + 8;
  }
  v4[1] = v8;
  pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrimsInParallel(v3, a1[2], v7);
  *(_QWORD *)(v3 + 24) = 0;
  sub_20C2A4CBC((pxrInternal__aapl__pxrReserved__ *)a1[2]);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v10 = v13;
  v11 = atomic_load(Instance + 18);
  if (v10 < v11
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v13, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v13, a1[3]);
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v13);
  return 0;
}

void sub_20C450A28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C450A44(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C450AEC((pxrInternal__aapl__pxrReserved__::PcpCache **)(*(_QWORD *)(a1 + 8) + 128), 0);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 16));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C450AD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void sub_20C450AEC(pxrInternal__aapl__pxrReserved__::PcpCache **a1, pxrInternal__aapl__pxrReserved__::PcpCache *a2)
{
  pxrInternal__aapl__pxrReserved__::PcpCache *v3;
  void *v4;

  v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    pxrInternal__aapl__pxrReserved__::PcpCache::~PcpCache(v3);
    operator delete(v4);
  }
}

uint64_t sub_20C450B20(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C450BC8((pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(*(_QWORD *)(a1 + 8) + 136), 0);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 16));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C450BB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void sub_20C450BC8(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **a1, pxrInternal__aapl__pxrReserved__::Usd_ClipCache *a2)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v3;
  void *v4;

  v3 = *a1;
  *a1 = a2;
  if (v3)
  {
    pxrInternal__aapl__pxrReserved__::Usd_ClipCache::~Usd_ClipCache(v3);
    operator delete(v4);
  }
}

uint64_t sub_20C450BFC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD **v4;
  _QWORD **v5;
  unint64_t *Instance;
  unint64_t v7;
  unint64_t v8;
  unint64_t v10;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v10);
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD ***)(v2 + 144);
  v3 = (_QWORD *)(v2 + 144);
  v4 = v5;
  *v3 = 0;
  if (v5)
    sub_20C450CA8((uint64_t)v3, v4);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v7 = v10;
  v8 = atomic_load(Instance + 18);
  if (v7 < v8
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v10, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v10, *(_QWORD *)(a1 + 16));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v10);
  return 0;
}

void sub_20C450C94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void sub_20C450CA8(uint64_t a1, _QWORD **a2)
{
  if (a2)
  {
    sub_20C450D20((uint64_t)(a2 + 28));
    sub_20C450D20((uint64_t)(a2 + 23));
    sub_20BFE4CE8((uint64_t)(a2 + 20), a2[21]);
    sub_20C450D58((uint64_t)(a2 + 17), a2[18]);
    sub_20BFE4CE8((uint64_t)(a2 + 14), a2[15]);
    sub_20BFE4CE8((uint64_t)(a2 + 11), a2[12]);
    sub_20C450DA0((uint64_t)(a2 + 6));
    sub_20C450E14((uint64_t)(a2 + 1));
    operator delete(a2);
  }
}

uint64_t sub_20C450D20(uint64_t a1)
{
  void *v2;

  sub_20C33CCE8(a1, *(void ***)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C450D58(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    sub_20C450D58(a1, *a2);
    sub_20C450D58(a1, a2[1]);
    sub_20C33E3B4((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_20C450DA0(uint64_t a1)
{
  void *v2;

  sub_20C450DD8(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C450DD8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C33CDA4((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_20C450E14(uint64_t a1)
{
  void *v2;

  sub_20C450E4C(a1, *(_QWORD **)(a1 + 16));
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_20C450E4C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;

  if (a2)
  {
    v2 = a2;
    do
    {
      v3 = (_QWORD *)*v2;
      sub_20C33CE2C((uint64_t)(v2 + 2));
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_20C450E90(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C21D57C((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(*(_QWORD *)(a1 + 8) + 40));
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 16));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C450F20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C450F3C(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C21D57C((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(*(_QWORD *)(a1 + 8) + 32));
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 16));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C450FCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C450FE0(pxrInternal__aapl__pxrReserved__::ArResolverContextBinder *a1, pxrInternal__aapl__pxrReserved__::ArResolverContext *a2)
{
  uint64_t result;

  if (*((_BYTE *)a1 + 48))
  {
    pxrInternal__aapl__pxrReserved__::ArResolverContextBinder::~ArResolverContextBinder(a1);
    *((_BYTE *)a1 + 48) = 0;
  }
  result = pxrInternal__aapl__pxrReserved__::ArResolverContextBinder::ArResolverContextBinder(a1, a2);
  *(_BYTE *)(result + 48) = 1;
  return result;
}

double sub_20C45101C@<D0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, void *a3@<X3>, uint64_t a4@<X8>)
{
  _DWORD *v6;
  _DWORD *v7;
  double result;
  __int128 v9;
  _DWORD *v10;

  *(_QWORD *)&v9 = a1;
  v10 = (_DWORD *)tbb::internal::concurrent_vector_base_v3::internal_push_back((tbb::internal::concurrent_vector_base_v3 *)(a1 + 8), 8, (unint64_t *)&v9 + 1, a3);
  v6 = sub_20BFD6E54(v10, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  v7 = v10;
  result = *(double *)&v9;
  *(_OWORD *)a4 = v9;
  *(_QWORD *)(a4 + 16) = v7;
  return result;
}

double sub_20C451084@<D0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, void *a3@<X3>, uint64_t a4@<X8>)
{
  _DWORD *v6;
  _DWORD *v7;
  double result;
  __int128 v9;
  _DWORD *v10;

  *(_QWORD *)&v9 = a1;
  v10 = (_DWORD *)tbb::internal::concurrent_vector_base_v3::internal_push_back((tbb::internal::concurrent_vector_base_v3 *)(a1 + 8), 8, (unint64_t *)&v9 + 1, a3);
  v6 = sub_20BFD38A4(v10, a2);
  sub_20BFD38DC(v6 + 1, a2 + 1);
  v7 = v10;
  result = *(double *)&v9;
  *(_OWORD *)a4 = v9;
  *(_QWORD *)(a4 + 16) = v7;
  return result;
}

void sub_20C4510F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  pxrInternal__aapl__pxrReserved__::WorkDispatcher *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v10[2];
  _BYTE v11[72];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v1 = *(uint64_t **)(a1 + 8);
  v2 = *v1;
  v3 = (pxrInternal__aapl__pxrReserved__::WorkDispatcher *)(*v1 + 848);
  sub_20C451294(v3);
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache::ConcurrentPopulationContext::ConcurrentPopulationContext((pxrInternal__aapl__pxrReserved__::Usd_ClipCache::ConcurrentPopulationContext *)v11, *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(v2 + 136));
  v4 = *(_QWORD *)v1[1];
  if (*(_QWORD *)(v1[1] + 8) != v4)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(v4 + 8 * v5);
      v7 = v1[2];
      v8 = *(_QWORD *)(v2 + 1104);
      v10[0] = 0;
      v10[1] = v8;
      v9 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v10, 0x30uLL);
      *((_BYTE *)v9 - 11) = 1;
      *v9 = &off_24C539850;
      v9[1] = v2;
      v9[2] = v6;
      v9[3] = v7;
      v9[4] = v5;
      v9[5] = v2 + 1112;
      (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v9 - 5))(*(v9 - 5), v9, (uint64_t)(v9 - 1));
      ++v5;
      v4 = *(_QWORD *)v1[1];
    }
    while (v5 != (*(_QWORD *)(v1[1] + 8) - v4) >> 3);
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::Wait(v3);
  if (*(_BYTE *)(v2 + 1184))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(v3);
    *(_BYTE *)(v2 + 1184) = 0;
  }
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache::ConcurrentPopulationContext::~ConcurrentPopulationContext((pxrInternal__aapl__pxrReserved__::Usd_ClipCache::ConcurrentPopulationContext *)v11);
}

void sub_20C451220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache::ConcurrentPopulationContext::~ConcurrentPopulationContext((pxrInternal__aapl__pxrReserved__::Usd_ClipCache::ConcurrentPopulationContext *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C451294(pxrInternal__aapl__pxrReserved__::WorkDispatcher *a1)
{
  uint64_t result;

  if (*((_BYTE *)a1 + 336))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(a1);
    *((_BYTE *)a1 + 336) = 0;
  }
  result = pxrInternal__aapl__pxrReserved__::WorkDispatcher::WorkDispatcher(a1);
  *(_BYTE *)(result + 336) = 1;
  return result;
}

uint64_t sub_20C4512C8(uint64_t a1)
{
  uint64_t v2;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v3;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *Parent;
  _QWORD *v5;
  _DWORD *v6;
  unint64_t *Instance;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v11);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  Parent = (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetParent(v3);
  v5 = **(_QWORD ***)(a1 + 24);
  if (v5)
    v6 = (_DWORD *)(*v5 + 8 * *(_QWORD *)(a1 + 32));
  else
    v6 = (_DWORD *)(*(_QWORD *)(a1 + 16) + 16);
  pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreeImpl((pxrInternal__aapl__pxrReserved__ *)v2, (uint64_t)v3, Parent, (const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask *)(v2 + 1208), v6);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v8 = v11;
  v9 = atomic_load(Instance + 18);
  if (v8 < v9
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v11, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v11, *(_QWORD *)(a1 + 40));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v11);
  return 0;
}

void sub_20C451398(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

unint64_t *sub_20C4513AC(unint64_t *a1)
{
  sub_20C4514BC(a1);
  return a1;
}

uint64_t sub_20C4513D4(uint64_t a1)
{
  _OWORD *v2;
  uint64_t i;

  v2 = (_OWORD *)(a1 + 528);
  for (i = 536; i != 584; i += 24)
    *(_QWORD *)(a1 + i) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  __dmb(0xBu);
  *(_QWORD *)a1 = 0;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 520) = 0;
  *v2 = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_QWORD *)(a1 + 8) = v2;
  __dmb(0xBu);
  *(_QWORD *)a1 = 1;
  *(_QWORD *)(a1 + 584) = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::GetEmptyPrimType((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)a1);
  return a1;
}

void sub_20C4514A4(_Unwind_Exception *a1)
{
  unint64_t *v1;

  sub_20C4514BC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4514BC(unint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t result;

  v2 = *a1;
  __dmb(0xBu);
  __dmb(0xBu);
  a1[65] = 0;
  v3 = sub_20BEB4B94(v2);
  do
  {
    v4 = 0;
    v5 = v3;
    v6 = a1[v3 + 1];
    if (v3-- > 1)
      v8 = v5;
    else
      v8 = 1;
    do
    {
      v9 = v6 + 24 * v4;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = (_QWORD *)(v9 + 16);
      v10 = (_QWORD *)v12;
      if (v12 >= 0x40)
      {
        do
        {
          *v11 = *v10;
          sub_20C3583DC((uint64_t)a1, (uint64_t)v10);
          v10 = (_QWORD *)*v11;
        }
        while (*v11 > 0x3FuLL);
      }
      ++v4;
    }
    while (!(v4 >> v8));
    result = sub_20C451588((uint64_t)a1, v5);
  }
  while (v5);
  __dmb(0xBu);
  *a1 = 1;
  return result;
}

uint64_t sub_20C451588(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  v2 = a1 + 8 * a2;
  v5 = *(_QWORD *)(v2 + 8);
  v4 = (_QWORD *)(v2 + 8);
  result = v5;
  if (a2 < 8)
  {
    if (!a2)
      return result;
    if (a2 == 1)
      result = tbb::internal::deallocate_via_handler_v3(result, (void *)1);
  }
  else
  {
    result = tbb::internal::deallocate_via_handler_v3(result, (void *)a2);
  }
  *v4 = 0;
  return result;
}

uint64_t sub_20C4515D4(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  void *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t *v15;

  v2 = *a1;
  v3 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v5 = (uint64_t)(a1 + 2);
  v6 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v2) >> 3);
  if (2 * v6 > v4)
    v4 = 2 * v6;
  if (v6 >= 0xD79435E50D7943)
    v7 = 0x1AF286BCA1AF286;
  else
    v7 = v4;
  v15 = a1 + 2;
  if (v7)
    v8 = (char *)sub_20C451754(v5, v7);
  else
    v8 = 0;
  v11 = v8;
  v12 = &v8[152 * v3];
  v14 = &v8[152 * v7];
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)v12);
  v13 = v12 + 152;
  sub_20C4516E0(a1, &v11);
  v9 = a1[1];
  sub_20C451A24(&v11);
  return v9;
}

void sub_20C4516CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C451A24((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4516E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45179C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_20C451754(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1AF286BCA1AF287)
    sub_20BDDF5B4();
  return operator new(152 * a2);
}

uint64_t sub_20C45179C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 152;
      sub_20C451850(a1, v7 - 152, v9);
      v7 = *((_QWORD *)&v16 + 1) - 152;
      *((_QWORD *)&v16 + 1) -= 152;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45191C((uint64_t)v13);
  return v11;
}

__n128 sub_20C451850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;

  *(_BYTE *)a2 = *(_BYTE *)a3;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a3 + 8);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a3 + 32);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a3 + 48);
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a3 + 56);
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(a3 + 72);
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a3 + 80);
  *(_QWORD *)(a2 + 96) = *(_QWORD *)(a3 + 96);
  *(_QWORD *)(a3 + 80) = 0;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 120) = 0;
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a3 + 104);
  *(_QWORD *)(a2 + 120) = *(_QWORD *)(a3 + 120);
  *(_QWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a2 + 128) = 0;
  *(_QWORD *)(a2 + 136) = 0;
  *(_QWORD *)(a2 + 144) = 0;
  result = *(__n128 *)(a3 + 128);
  *(__n128 *)(a2 + 128) = result;
  *(_QWORD *)(a2 + 144) = *(_QWORD *)(a3 + 144);
  *(_QWORD *)(a3 + 128) = 0;
  *(_QWORD *)(a3 + 136) = 0;
  *(_QWORD *)(a3 + 144) = 0;
  return result;
}

uint64_t sub_20C45191C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C451950((uint64_t *)a1);
  return a1;
}

void sub_20C451950(uint64_t *a1)
{
  void **v1;
  void **v2;
  uint64_t v3;

  v1 = *(void ***)(a1[2] + 8);
  v2 = *(void ***)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C4519A0(v3, v1);
      v1 += 19;
    }
    while (v1 != v2);
  }
}

void sub_20C4519A0(uint64_t a1, void **a2)
{
  void **v3;

  v3 = a2 + 16;
  sub_20BEEB2B8(&v3);
  v3 = a2 + 13;
  sub_20BEEB2B8(&v3);
  v3 = a2 + 10;
  sub_20BEEB2B8(&v3);
  v3 = a2 + 7;
  sub_20BEEB2B8(&v3);
  v3 = a2 + 4;
  sub_20BEEB2B8(&v3);
  v3 = a2 + 1;
  sub_20BEEB2B8(&v3);
}

void **sub_20C451A24(void **a1)
{
  sub_20C451A54(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C451A54(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 152;
    sub_20C4519A0(v4, (void **)(i - 152));
  }
}

void sub_20C451A98(void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 19;
        sub_20C4519A0((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C451B20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  pxrInternal__aapl__pxrReserved__::WorkDispatcher *v3;
  const pxrInternal__aapl__pxrReserved__::SdfPath **v4;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v5;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v6;
  uint64_t PrimDataAtPath;
  const char *v8;
  _QWORD *v9;
  char *v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  char v14;

  v1 = *(_QWORD **)(a1 + 8);
  v2 = *v1;
  v3 = (pxrInternal__aapl__pxrReserved__::WorkDispatcher *)(*v1 + 848);
  sub_20C451294(v3);
  v4 = (const pxrInternal__aapl__pxrReserved__::SdfPath **)v1[1];
  v5 = *v4;
  v6 = v4[1];
  if (*v4 != v6)
  {
    do
    {
      PrimDataAtPath = pxrInternal__aapl__pxrReserved__::UsdStage::_GetPrimDataAtPath((pxrInternal__aapl__pxrReserved__::UsdStage *)v2, v5);
      if (PrimDataAtPath
        || (v10 = "usd/stage.cpp",
            v11 = "operator()",
            v12 = 3447,
            v13 = "auto pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrimsInParallel(const vector<SdfPath> &)::(an"
                  "onymous class)::operator()() const",
            v14 = 0,
            (pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v10, "prim", 0) & 1) != 0))
      {
        v8 = *(const char **)(v2 + 1104);
        v10 = 0;
        v11 = v8;
        v9 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)&v10, 0x20uLL);
        *((_BYTE *)v9 - 11) = 1;
        *v9 = &off_24C5398D8;
        v9[1] = v2;
        v9[2] = PrimDataAtPath;
        v9[3] = v2 + 1112;
        (**(void (***)(_QWORD, _QWORD *, uint64_t))*(v9 - 5))(*(v9 - 5), v9, (uint64_t)(v9 - 1));
      }
      v5 = (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v5 + 8);
    }
    while (v5 != v6);
  }
  pxrInternal__aapl__pxrReserved__::WorkDispatcher::Wait(v3);
  if (*(_BYTE *)(v2 + 1184))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::~WorkDispatcher(v3);
    *(_BYTE *)(v2 + 1184) = 0;
  }
}

uint64_t sub_20C451C60(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(*(pxrInternal__aapl__pxrReserved__::UsdStage **)(a1 + 8), *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16));
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 24));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C451CEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C451D00(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  *(_BYTE *)a1 = *a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(a1 + 24), (_DWORD *)(a3 + 16));
  sub_20BFD38DC((_DWORD *)(a1 + 28), (_DWORD *)(a3 + 20));
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a3 + 24) = 0;
  return a1;
}

uint64_t sub_20C451D64(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  *(_BYTE *)a1 = *a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a3;
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 48);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 24), (_DWORD *)(a3 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 28), (_DWORD *)(a3 + 20));
  v8 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  return a1;
}

uint64_t sub_20C451E04(uint64_t *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD *)(v6 - 8);
  if (v9 >= v8)
  {
    v11 = (uint64_t)(v9 - *a1) >> 5;
    if ((unint64_t)(v11 + 1) >> 59)
      sub_20BDDF694();
    v12 = v7 - *a1;
    v13 = v12 >> 4;
    if (v12 >> 4 <= (unint64_t)(v11 + 1))
      v13 = v11 + 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0)
      v14 = 0x7FFFFFFFFFFFFFFLL;
    else
      v14 = v13;
    v21 = v6;
    if (v14)
      v15 = (char *)sub_20BED2F10(v6, v14);
    else
      v15 = 0;
    v17 = v15;
    v18 = &v15[32 * v11];
    v20 = &v15[32 * v14];
    sub_20C451F24((uint64_t)v18, a2, a3);
    v19 = v18 + 32;
    sub_20C45200C(a1, &v17);
    v10 = a1[1];
    sub_20C452238(&v17);
  }
  else
  {
    sub_20C451F24(*(_QWORD *)(v6 - 8), a2, a3);
    v10 = v9 + 32;
    a1[1] = v9 + 32;
  }
  a1[1] = v10;
  return v10 - 32;
}

void sub_20C451F04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C451F24(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v6;

  v6 = sub_20BFD38A4((_DWORD *)a1, a2);
  sub_20BFD38DC(v6 + 1, a2 + 1);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  sub_20C451F94((_QWORD *)(a1 + 8), *(const void **)a3, *(_QWORD *)(a3 + 8), (uint64_t)(*(_QWORD *)(a3 + 8) - *(_QWORD *)a3) >> 3);
  return a1;
}

void sub_20C451F80(_Unwind_Exception *a1)
{
  _DWORD *v1;

  sub_20BFD1A18(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C451F94(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20C451FF0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C45200C(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C452080((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C452080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  v13 = 0;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 32;
      sub_20C452124(v7 - 32, v9);
      v7 = *((_QWORD *)&v15 + 1) - 32;
      *((_QWORD *)&v15 + 1) -= 32;
    }
    while (v9 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_20C452178((uint64_t)v12);
  return v10;
}

uint64_t sub_20C452124(uint64_t a1, uint64_t a2)
{
  _DWORD *v4;

  v4 = sub_20BFD6E54((_DWORD *)a1, (_DWORD *)a2);
  sub_20BFD6EA4(v4 + 1, (_DWORD *)(a2 + 4));
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  return a1;
}

uint64_t sub_20C452178(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C4521AC((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C4521AC(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(result[2] + 8);
  v2 = *(_QWORD *)(result[1] + 8);
  if (v1 != v2)
  {
    v3 = *result;
    do
    {
      result = (uint64_t *)sub_20C4521FC(v3, v1);
      v1 += 32;
    }
    while (v1 != v2);
  }
  return result;
}

_DWORD *sub_20C4521FC(uint64_t a1, uint64_t a2)
{
  void *v3;

  v3 = *(void **)(a2 + 8);
  if (v3)
  {
    *(_QWORD *)(a2 + 16) = v3;
    operator delete(v3);
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 4));
  return sub_20BFD265C((_DWORD *)a2);
}

void **sub_20C452238(void **a1)
{
  sub_20C452268(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

_DWORD *sub_20C452268(_DWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;

  v2 = *((_QWORD *)result + 1);
  v1 = *((_QWORD *)result + 2);
  if (v1 != v2)
  {
    v3 = result;
    do
    {
      v4 = *((_QWORD *)v3 + 4);
      *((_QWORD *)v3 + 2) = v1 - 32;
      result = sub_20C4521FC(v4, v1 - 32);
      v1 = *((_QWORD *)v3 + 2);
    }
    while (v1 != v2);
  }
  return result;
}

void sub_20C4522AC(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_20C4521FC((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *sub_20C452330(uint64_t **a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, _DWORD *a3, _DWORD *a4)
{
  void **v7;
  uint64_t *v8;
  uint64_t **v9;
  _QWORD v11[2];
  char v12;
  uint64_t v13;

  v7 = (void **)sub_20BFD74FC((uint64_t)a1, &v13, a2);
  v8 = (uint64_t *)*v7;
  if (!*v7)
  {
    v9 = (uint64_t **)v7;
    v8 = (uint64_t *)operator new(0x30uLL);
    v11[1] = a1 + 1;
    sub_20C028354((_DWORD *)v8 + 7, a3, a4);
    v12 = 1;
    sub_20BDDE1B4(a1, v13, v9, v8);
    v11[0] = 0;
    sub_20BFE4C64((uint64_t)v11, 0);
  }
  return v8;
}

uint64_t sub_20C4523E4(uint64_t a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *sub_20BFD74FC(a1, &v4, a2);
  if (!v2)
    sub_20BEB9194("map::at:  key not found");
  return v2 + 36;
}

uint64_t sub_20C452420(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  if (!v2 || (v3 = *(_QWORD *)(v2 + 56), (v3 & 0x800) != 0))
  {
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), a2);
    v3 = *(_QWORD *)(v2 + 56);
  }
  return (v3 >> 8) & 1;
}

void sub_20C452458(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  int v12;

  if (sub_20C10525C((uint64_t)a1)
    && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)*a1 + 24))(*a1) & 1) == 0)
  {
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)*a1 + 16))(*a1))
    {
      sub_20C4525D4(a1, 0, a2);
    }
    else
    {
      v4 = a1[1];
      v10 = *a1;
      v11 = (std::__shared_weak_count *)v4;
      if (v4)
      {
        v5 = (unint64_t *)(v4 + 8);
        do
          v6 = __ldxr(v5);
        while (__stxr(v6 + 1, v5));
      }
      v12 = 2;
      sub_20C3C44F8((unsigned int *)&v10, a2);
      v7 = v11;
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v9 = __ldaxr(p_shared_owners);
        while (__stlxr(v9 - 1, p_shared_owners));
        if (!v9)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      sub_20C4525D4(a1, 1, a2);
    }
  }
}

void sub_20C452554(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

void sub_20C452568(pxrInternal__aapl__pxrReserved__::UsdObject *a1, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a2)
{
  _QWORD **v3;
  _QWORD *v4[2];

  v4[0] = 0;
  v4[1] = 0;
  v3 = v4;
  sub_20C4528F0(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v3);
  sub_20C452980(a2, &v3);
  sub_20C3A3BA4((uint64_t)&v3, v4[0]);
}

void sub_20C4525BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _QWORD *a11)
{
  sub_20C3A3BA4((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_20C4525D4(uint64_t *a1, int a2, unsigned __int8 *a3)
{
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  void *v7;
  unsigned int *v8;
  char v9;
  uint64_t *v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  void *__p[2];
  char v15;
  int v16;
  int v17[5];
  _QWORD **v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  int v21;

  v4 = (std::__shared_weak_count *)a1[1];
  v19 = *a1;
  v20 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v21 = a2;
  v7 = (void *)sub_20C3C3E18((uint64_t)&v19, a3);
  if (v7 == (void *)-1)
  {
    sub_20C3C4674((unsigned int *)&v19, (__int128 *)a3);
    goto LABEL_17;
  }
  if (sub_20C3C4088((uint64_t)&v19))
    v8 = (unsigned int *)&v19;
  else
    v8 = 0;
  sub_20C4527C8(v8, (uint64_t)v7, (char *)__p);
  v9 = pxrInternal__aapl__pxrReserved__::SdfReference::operator==(a3, (unsigned __int8 *)__p);
  sub_20BF49F14(&v18, 0);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v17);
  sub_20BFD265C(&v16);
  if (v15 < 0)
  {
    operator delete(__p[0]);
    if ((v9 & 1) != 0)
      goto LABEL_17;
LABEL_13:
    if (sub_20C3C4088((uint64_t)&v19))
      v10 = &v19;
    else
      v10 = 0;
    __p[0] = v10;
    __p[1] = v7;
    sub_20C452748((uint64_t)__p, (__int128 *)a3);
    goto LABEL_17;
  }
  if ((v9 & 1) == 0)
    goto LABEL_13;
LABEL_17:
  v11 = v20;
  if (v20)
  {
    v12 = (unint64_t *)&v20->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_20C452718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C452748(uint64_t a1, __int128 *a2)
{
  unsigned int *v3;
  uint64_t v4;
  _QWORD v6[3];
  void **v7;

  v3 = *(unsigned int **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  sub_20C3C40FC(v6, 1uLL, a2);
  sub_20C3C3F20(v3, v4, 1, v6);
  v7 = (void **)v6;
  sub_20C021740(&v7);
  return a1;
}

void sub_20C4527B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20C021740((void ***)va);
  _Unwind_Resume(a1);
}

void sub_20C4527C8(unsigned int *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  _QWORD *v6;
  _QWORD **v7;
  double v8[2];
  uint64_t v9;
  void *__p[2];
  uint64_t v11;

  if ((sub_20C3C41A4((uint64_t)a1) & 1) != 0)
  {
    v6 = (_QWORD *)(*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a1 + 112))(*(_QWORD *)a1, a1[4]);
    sub_20C029E64(a3, (__int128 *)(*v6 + 56 * a2));
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    v11 = 0;
    v9 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v9);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v9 + 1);
    pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset(v8, 0.0, 1.0);
    v7 = 0;
    pxrInternal__aapl__pxrReserved__::SdfReference::SdfReference(a3, __p, &v9, v8, &v7);
    sub_20BF49F14(&v7, 0);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v9 + 1);
    sub_20BFD265C(&v9);
    if (SHIBYTE(v11) < 0)
      operator delete(__p[0]);
  }
}

void sub_20C4528B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD **a10, uint64_t a11, uint64_t a12, int a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  sub_20BF49F14(&a10, 0);
  sub_20BFD1A18(&a13);
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4528F0(pxrInternal__aapl__pxrReserved__::UsdObject *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  pxrInternal__aapl__pxrReserved__::UsdStage *v4;
  uint64_t result;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a1, a2, &v9);
  v4 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v9);
  pxrInternal__aapl__pxrReserved__::UsdStage::_GetAllMetadata(v4, a1, 0, (uint64_t **)a2, 1);
  result = v10;
  if (v10)
  {
    v6 = (unsigned int *)(v10 + 8);
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C452968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

void sub_20C452980(pxrInternal__aapl__pxrReserved__::Sdf_Identity **a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v7;
  unint64_t *Instance;
  unint64_t v9;
  unint64_t v10;
  std::string *v11;
  std::string *i;
  _QWORD *j;
  __int128 *v14;
  __int128 *v15;
  __int128 v16;
  std::string *v17;
  unint64_t *v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;
  std::string *p_p;
  _QWORD *v23;
  _QWORD *v24;
  BOOL v25;
  std::string __p;
  std::string *v27;
  std::string *v28;
  unint64_t v29;
  unint64_t v30;
  void **v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  char v35;

  if (pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant(a1))
  {
    v31 = (void **)"usd/stage.cpp";
    v32 = "_CopyMetadata";
    v33 = 5349;
    v34 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_CopyMetadata(const SdfSpecHandle &, const UsdMe"
          "tadataValueMap &)";
    v35 = 0;
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)&v31, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid destination spec, unable to copy metadata");
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v30);
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v6 = (_QWORD *)*a2;
    v4 = a2 + 1;
    v5 = v6;
    if (v6 != v4)
    {
      do
      {
        v7 = sub_20BFD5244(a1);
        pxrInternal__aapl__pxrReserved__::SdfSpec::SetInfo(v7, (const pxrInternal__aapl__pxrReserved__::TfToken *)(v5 + 4), (const pxrInternal__aapl__pxrReserved__::VtValue *)(v5 + 5));
        Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        if (!Instance)
          Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
        v9 = v30;
        v10 = atomic_load(Instance + 18);
        if (v9 < v10
          && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v30, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
        {
          v11 = v27;
          for (i = v28; i != v11; --i)
          {
            if (SHIBYTE(i[-1].__r_.__value_.__r.__words[2]) < 0)
              operator delete(i[-1].__r_.__value_.__l.__data_);
          }
          v28 = v11;
          for (j = sub_20BEC5244(&v30, 0); j != (_QWORD *)sub_20BEDAF68(); j = (_QWORD *)j[1])
          {
            v14 = (__int128 *)(j + 7);
            v15 = (__int128 *)v28;
            if ((unint64_t)v28 >= v29)
            {
              v17 = (std::string *)sub_20BE4EE50((uint64_t *)&v27, v14);
            }
            else
            {
              if (*((char *)j + 79) < 0)
              {
                sub_20BDDBFAC(v28, (void *)j[7], j[8]);
              }
              else
              {
                v16 = *v14;
                v28->__r_.__value_.__r.__words[2] = j[9];
                *v15 = v16;
              }
              v17 = (std::string *)((char *)v15 + 24);
            }
            v28 = v17;
          }
          v18 = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (!v18)
            v18 = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          v19 = sub_20BEC5244(&v30, 0);
          __p.__r_.__value_.__s.__data_[0] = 0;
          v20 = (_QWORD *)sub_20BEB5B80(v18 + 19, &__p);
          if (v20 != v19)
            pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(v18, v19, v20);
          v31 = (void **)"usd/stage.cpp";
          v32 = "_CopyMetadata";
          v33 = 5363;
          v34 = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_CopyMetadata(const SdfSpecHandle &, const"
                " UsdMetadataValueMap &)";
          v35 = 0;
          pxrInternal__aapl__pxrReserved__::TfStringJoin(" ", &v27, &__p);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)&v31, (pxrInternal__aapl__pxrReserved__ *)"Failed copying metadata: %s", v21, p_p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
        v23 = (_QWORD *)v5[1];
        if (v23)
        {
          do
          {
            v24 = v23;
            v23 = (_QWORD *)*v23;
          }
          while (v23);
        }
        else
        {
          do
          {
            v24 = (_QWORD *)v5[2];
            v25 = *v24 == (_QWORD)v5;
            v5 = v24;
          }
          while (!v25);
        }
        v5 = v24;
      }
      while (v24 != v4);
    }
    v31 = (void **)&v27;
    sub_20BDE5038(&v31);
    pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v30);
  }
}

void sub_20C452C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20,char *a21)
{
  if (a16 < 0)
    operator delete(__p);
  a21 = &a17;
  sub_20BDE5038((void ***)&a21);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_20C452C88(pxrInternal__aapl__pxrReserved__::UsdAttribute *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, uint64_t **a3)
{
  uint64_t TimeSamples;
  double *v7;
  double *v8;
  uint64_t *v9;
  uint64_t *v10;
  double v12;
  void *__p;
  double *v14;
  uint64_t v15;
  _BYTE v16[127];
  double v17;
  uint64_t *v18[2];
  __int128 *v19[4];

  v19[2] = *(__int128 **)MEMORY[0x24BDAC8D0];
  pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::UsdAttributeQuery((pxrInternal__aapl__pxrReserved__::UsdAttributeQuery *)v16, a1);
  __p = 0;
  v14 = 0;
  v15 = 0;
  TimeSamples = pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::GetTimeSamples((uint64_t)v16, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&__p);
  v7 = (double *)__p;
  if ((_DWORD)TimeSamples)
  {
    v8 = v14;
    if (__p != v14)
    {
      do
      {
        v19[1] = 0;
        if (pxrInternal__aapl__pxrReserved__::UsdAttributeQuery::Get(v16, v19, *v7))
        {
          sub_20C452E84(a1, a2, v19, *v7);
          v17 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)a2, *v7);
          v18[0] = (uint64_t *)&v17;
          v9 = sub_20C0E7D0C(a3, &v17, (uint64_t)&unk_20CAC184C, v18);
          sub_20BFD3C3C(v9 + 5, v19);
        }
        else
        {
          v18[1] = (uint64_t *)((char *)&off_24C52AE00 + 3);
          v12 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)a2, *v7);
          v17 = COERCE_DOUBLE(&v12);
          v10 = sub_20C0E7D0C(a3, &v12, (uint64_t)&unk_20CAC184C, (uint64_t **)&v17);
          sub_20BF4B5D8(v10 + 5, v18);
          sub_20BF4C2D8((uint64_t)v18);
        }
        sub_20BF4C2D8((uint64_t)v19);
        ++v7;
      }
      while (v7 != v8);
      v7 = (double *)__p;
    }
  }
  if (v7)
  {
    v14 = v7;
    operator delete(v7);
  }
  sub_20C373B34((uint64_t)v16);
  return TimeSamples;
}

void sub_20C452E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, char a14)
{
  if (__p)
    operator delete(__p);
  sub_20C373B34((uint64_t)&a14);
  _Unwind_Resume(a1);
}

void sub_20C452E84(pxrInternal__aapl__pxrReserved__::UsdObject *a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, __int128 **a3, double a4)
{
  pxrInternal__aapl__pxrReserved__::UsdStage *v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  unsigned int v12;
  const pxrInternal__aapl__pxrReserved__::SdfLayerOffset *v13;
  uint64_t v14;
  uint64_t v15;

  pxrInternal__aapl__pxrReserved__::UsdObject::GetStage(a1, a2, &v14);
  v8 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C348E08(&v14);
  pxrInternal__aapl__pxrReserved__::UsdStage::_MakeResolvedAssetPathsValue(v8, a1, a3, 1, a4);
  v9 = v15;
  if (v15)
  {
    v10 = (unsigned int *)(v15 + 8);
    do
    {
      v11 = __ldxr(v10);
      v12 = v11 - 1;
    }
    while (__stlxr(v12, v10));
    if (!v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
  if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity(a2))
    pxrInternal__aapl__pxrReserved__::Usd_ApplyLayerOffsetToValue((const void *****)a3, a2, v13);
}

void sub_20C452F2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10)
    sub_20C96B408(a10);
  _Unwind_Resume(exception_object);
}

int **sub_20C452F44(int **result, _QWORD *a2)
{
  int *v2;
  int *v3;
  int **v5;
  uint64_t v6;
  char v7;

  if (a2[2])
  {
    v2 = *result;
    v3 = result[1];
    if (*result != v3)
    {
      v5 = (int **)(a2 + 1);
      do
      {
        result = (int **)sub_20C14177C(a2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v2, 0, (uint64_t)&v7);
        if (v5 != result)
        {
          pxrInternal__aapl__pxrReserved__::SdfPath::ReplacePrefix(&v6, (pxrInternal__aapl__pxrReserved__::SdfPath *)v2, (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)result + 28), (const pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)result + 36), 1);
          sub_20BFD3EBC(v2, (int *)&v6);
          sub_20BFD3F10(v2 + 1, (int *)&v6 + 1);
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v6 + 1);
          result = (int **)sub_20BFD265C(&v6);
        }
        v2 += 2;
      }
      while (v2 != v3);
    }
  }
  return result;
}

int *sub_20C453004(int *result, int **a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v6;
  int *v7;
  int v8;
  const char *Text;
  char *v10;
  const char *v11;
  int v12;
  int v13;
  _QWORD v14[4];
  char v15;

  v3 = result;
  v4 = *a2;
  v5 = a2[1];
  if (*a2 != v5)
  {
    while (1)
    {
      result = (int *)pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPathInPrototype((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *)v4, (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2);
      if ((result & 1) != 0)
        break;
      v4 += 2;
      if (v4 == v5)
      {
        v4 = v5;
        goto LABEL_11;
      }
    }
    if (v4 != v5 && v4 + 2 != v5)
    {
      v6 = v4 + 3;
      do
      {
        result = (int *)pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPathInPrototype((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *)(v6 - 1), (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2);
        if ((result & 1) == 0)
        {
          sub_20BFD3EBC(v4, v6 - 1);
          result = sub_20BFD3F10(v4 + 1, v6);
          v4 += 2;
        }
        v7 = v6 + 1;
        v6 += 2;
      }
      while (v7 != v5);
    }
  }
LABEL_11:
  if (v4 != a2[1])
  {
    v14[0] = "usd/stage.cpp";
    v14[1] = "_RemovePrototypeTargetPaths";
    v14[2] = 5299;
    v14[3] = "void pxrInternal__aapl__pxrReserved__::(anonymous namespace)::_RemovePrototypeTargetPaths(const UsdProperty"
             " &, SdfPathVector *)";
    v15 = 0;
    v8 = *v3;
    sub_20C348EEC((uint64_t)v3, &v12);
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v12);
    v11 = "relationship target";
    if (v8 == 3)
      v11 = "attribute connection";
    pxrInternal__aapl__pxrReserved__::Tf_PostWarningHelper((uint64_t)v14, (pxrInternal__aapl__pxrReserved__ *)"Some %s paths from <%s> could not be flattened because they targeted objects within an instancing prototype.", v10, v11, Text);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v13);
    sub_20BFD265C(&v12);
    return sub_20C11D784((uint64_t)a2, v4, a2[1]);
  }
  return result;
}

void sub_20C45315C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void *sub_20C453170@<X0>(uint64_t *a1@<X0>, unsigned int **a2@<X8>)
{
  uint64_t v4;
  void *result;

  v4 = pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::Find((uint64_t)a1);
  result = (void *)pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::GetSize((uint64_t)a1);
  if ((void *)v4 != result)
    return sub_20C4531D0(a1, v4, a2);
  *a2 = 0;
  return result;
}

void *sub_20C4531D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v7;

  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_AttributeChildPolicy>::GetChild(a1, &v7, a2);
  v4 = v7;
  *a3 = v7;
  if (v4)
  {
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 + 1, v4));
  }
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v7);
}

uint64_t sub_20C453220(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  void **v10;

  v10 = (void **)(a1 + 40);
  sub_20BEEB2B8(&v10);
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(unsigned int **)(a1 + 8);
  if (v5)
  {
    v6 = v5 + 2;
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      (*(void (**)(unsigned int *))(*(_QWORD *)v5 + 8))(v5);
  }
  return a1;
}

void *sub_20C4532B8@<X0>(uint64_t *a1@<X0>, unsigned int **a2@<X8>)
{
  uint64_t v4;
  void *result;

  v4 = pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::Find((uint64_t)a1);
  result = (void *)pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::GetSize((uint64_t)a1);
  if ((void *)v4 != result)
    return sub_20C453318(a1, v4, a2);
  *a2 = 0;
  return result;
}

void *sub_20C453318@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned int **a3@<X8>)
{
  unsigned int *v4;
  unsigned int v5;
  unsigned int *v7;

  pxrInternal__aapl__pxrReserved__::Sdf_Children<pxrInternal__aapl__pxrReserved__::Sdf_RelationshipChildPolicy>::GetChild(a1, &v7, a2);
  v4 = v7;
  *a3 = v7;
  if (v4)
  {
    do
      v5 = __ldaxr(v4);
    while (__stlxr(v5 + 1, v4));
  }
  return pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v7);
}

uint64_t sub_20C453368(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  void **v10;

  v10 = (void **)(a1 + 40);
  sub_20BEEB2B8(&v10);
  v2 = *(_QWORD *)(a1 + 24);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 20));
  sub_20BFD265C((_DWORD *)(a1 + 16));
  v5 = *(unsigned int **)(a1 + 8);
  if (v5)
  {
    v6 = v5 + 2;
    do
    {
      v7 = __ldxr(v6);
      v8 = v7 - 1;
    }
    while (__stlxr(v8, v6));
    if (!v8)
      (*(void (**)(unsigned int *))(*(_QWORD *)v5 + 8))(v5);
  }
  return a1;
}

_QWORD *sub_20C453400(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD *))
{
  _QWORD *v5;
  _QWORD *i;
  unsigned int *v8;
  unsigned int v9;

  if (a1 == a2)
    return a2;
  v5 = a1;
  while ((a3(v5) & 1) == 0)
  {
    if (++v5 == a2)
      return a2;
  }
  if (v5 != a2)
  {
    for (i = v5 + 1; i != a2; ++i)
    {
      if ((a3(i) & 1) == 0)
      {
        if (i != v5)
        {
          if ((*v5 & 7) != 0)
          {
            v8 = (unsigned int *)(*v5 & 0xFFFFFFFFFFFFFFF8);
            do
              v9 = __ldxr(v8);
            while (__stlxr(v9 - 2, v8));
          }
          *v5 = *i;
          *i = 0;
        }
        ++v5;
      }
    }
  }
  return v5;
}

uint64_t sub_20C4534B4(const pxrInternal__aapl__pxrReserved__::TfToken *a1)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v2;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;

  v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2)
    v2 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if ((*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v2 + 17) & 0xFFFFFFFFFFFFFFF8))
    return 1;
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if ((*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v3 + 6) & 0xFFFFFFFFFFFFFFF8))
    return 1;
  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if ((*(_QWORD *)a1 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v4 + 11) & 0xFFFFFFFFFFFFFFF8))
    return 0;
  else
    return sub_20C44AA64(a1);
}

uint64_t sub_20C453584(uint64_t a1, pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry *this, pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  if (pxrInternal__aapl__pxrReserved__::UsdSchemaRegistry::IsDisallowedField(this, this))
    return 0;
  else
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(**(pxrInternal__aapl__pxrReserved__::SdfLayer ***)(a1 + 8), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)(a1 + 8) + 8), this, a3);
}

uint64_t sub_20C4535E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)a3;
  v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 48);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  sub_20BFD6E54((_DWORD *)(a1 + 24), (_DWORD *)(a3 + 16));
  sub_20BFD6EA4((_DWORD *)(a1 + 28), (_DWORD *)(a3 + 20));
  v8 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  if ((v8 & 7) != 0)
  {
    v9 = (unsigned int *)(v8 & 0xFFFFFFFFFFFFFFF8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 2, v9));
    if ((v10 & 1) == 0)
      *(_QWORD *)(a1 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_WORD *)(a1 + 40) = 0;
  return a1;
}

void sub_20C453680(uint64_t a1@<X0>, const pxrInternal__aapl__pxrReserved__::TfToken *a2@<X1>, int *a3@<X8>)
{
  uint64_t v5;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)a2)
  {
    v5 = *(_QWORD *)(a1 + 24);
    v9 = *(_QWORD *)(a1 + 16);
    v10 = v5;
    Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v9);
    pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, a2, a3);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 24);
    v9 = *(_QWORD *)(a1 + 16);
    v10 = v7;
    v8 = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v9);
    sub_20BFD6E54(a3, v8);
    sub_20BFD6EA4(a3 + 1, v8 + 1);
  }
}

_QWORD *sub_20C453700()
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v0;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v1;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v2;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v3;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v6;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v7;
  uint64_t *v8;
  uint64_t *i;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v11;
  uint64_t *v13;
  uint64_t *v14;
  void **v15;

  v0 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v0)
    v0 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v0 + 24, (uint64_t *)v0 + 24);
  v1 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v1)
    v1 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v1 + 30, (uint64_t *)v1 + 30);
  v2 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v2)
    v2 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v2 + 35, (uint64_t *)v2 + 35);
  v3 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v3)
    v3 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v3 + 38, (uint64_t *)v3 + 38);
  v4 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v4)
    v4 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v4 + 45, (uint64_t *)v4 + 45);
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v5)
    v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v5 + 46, (uint64_t *)v5 + 46);
  v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v6)
    v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v6 + 57, (uint64_t *)v6 + 57);
  v7 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v7)
    v7 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v7 + 59, (uint64_t *)v7 + 59);
  pxrInternal__aapl__pxrReserved__::UsdGetClipRelatedFields(&v13);
  v8 = v13;
  for (i = v14; v8 != i; ++v8)
    sub_20BF348DC((uint64_t)&xmmword_254988D90, v8, v8);
  v15 = (void **)&v13;
  sub_20BEEB2B8(&v15);
  v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v10)
    v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v10 + 11, (uint64_t *)v10 + 11);
  v11 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v11)
    v11 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20BF348DC((uint64_t)&xmmword_254988D90, (_QWORD *)v11 + 54, (uint64_t *)v11 + 54);
}

void sub_20C453938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_20BEEB2B8(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_20C453954(uint64_t a1, _DWORD *a2, uint64_t (***a3)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), pxrInternal__aapl__pxrReserved__::VtValue *a4, double a5)
{
  uint64_t IsCleanImpl;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  unint64_t *Instance;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  double v36;
  _DWORD *v37;

  v36 = a5;
  sub_20C361C1C((uint64_t)&v30);
  v27 = 0u;
  v29 = 0;
  v28 = (unint64_t)a4;
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v26);
  v37 = a2;
  sub_20C45408C(a1, a2, &v30, (void **)&v36, &v27, (uint64_t)&v37);
  if (v35 == 4)
  {
    IsCleanImpl = sub_20C453E08(a2, (uint64_t)&v30, (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)&v28 + 1, (double *)&v27, (double *)&v27 + 1, a3, a4, v36);
  }
  else if (v35 == 3)
  {
    IsCleanImpl = sub_20C453B78(a2, &v30, (double *)&v27, (double *)&v27 + 1, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double))a3, a4, v36);
  }
  else
  {
    if ((v35 - 1) > 1)
    {
      v10 = 0;
      goto LABEL_6;
    }
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v24 = v26;
    v25 = atomic_load(Instance + 18);
    if (v24 >= v25)
    {
      v10 = 1;
      goto LABEL_6;
    }
    IsCleanImpl = pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v26, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
  }
  v10 = IsCleanImpl;
LABEL_6:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v26);
  v11 = v29;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  v14 = v32;
  if (v32)
  {
    v15 = (unsigned int *)(v32 + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  v18 = v31;
  if (v31)
  {
    v19 = (unsigned int *)(v31 + 8);
    do
    {
      v20 = __ldxr(v19);
      v21 = v20 - 1;
    }
    while (__stlxr(v21, v19));
    if (!v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  return v10;
}

void sub_20C453B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C35FEE4((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C453B78(_DWORD *a1, uint64_t *a2, double *a3, double *a4, uint64_t (***a5)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), pxrInternal__aapl__pxrReserved__::VtValue *a6, double a7)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v14;
  const char *v15;
  double v16;
  uint64_t *v17;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v18;
  const char *v19;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v20;
  unint64_t v21;
  const char *v22;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v23;
  uint64_t v24;
  const char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v30;
  uint64_t Identifier;
  int v32;
  uint64_t v33;
  const char *Text;
  const char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  double Inverse;
  const char *v40;
  uint64_t v41;
  const char *v42;
  char v43;
  double v44;
  double v45;
  int v46;
  int v47;
  double v48;

  v48 = a7;
  v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8);
  v14 = sub_20C398E78(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v13, v14, &v46);
  Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a2 + 6));
  v40 = v15;
  v16 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(&Inverse, a7);
  v17 = a2 + 2;
  v45 = 0.0;
  v44 = 0.0;
  if (a3 && a4)
  {
    v44 = *a3;
    v45 = *a4;
  }
  else
  {
    v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
    if ((pxrInternal__aapl__pxrReserved__::SdfLayer::GetBracketingTimeSamplesForPath(v18, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, v16, &v44, &v45) & 1) == 0)
    {
      Inverse = COERCE_DOUBLE("usd/stage.cpp");
      v40 = "_GetTimeSampleValue";
      v41 = 8116;
      v42 = "static BOOL pxrInternal__aapl__pxrReserved__::UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, c"
            "onst UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T"
            " = pxrInternal__aapl__pxrReserved__::VtValue]";
      v43 = 0;
      v30 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v30);
      v32 = *(char *)(Identifier + 23);
      v33 = *(_QWORD *)Identifier;
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
      v37 = v32 >= 0 ? Identifier : v33;
      v38 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"No bracketing time samples for %s on <%s> for time %g between %g and %g", v35, v36, v37, Text, *(_QWORD *)&v16, *(_QWORD *)&v44, *(_QWORD *)&v45);
      if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&Inverse, "layer->GetBracketingTimeSamplesForPath( specPath, localTime, &lower, &upper)", v38) & 1) == 0)
      {
        v28 = 0;
        goto LABEL_17;
      }
    }
  }
  if (sub_20C286E00(15))
  {
    v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
    v20 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v20)
      v20 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v21 = *((_QWORD *)v20 + 54) & 0xFFFFFFFFFFFFFFF8;
    if (v21)
    {
      v22 = (const char *)(v21 + 16);
      if (*(char *)(v21 + 39) < 0)
        v22 = *(const char **)v22;
    }
    else
    {
      v22 = "";
    }
    v23 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
    v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v23);
    if (*(char *)(v24 + 23) >= 0)
      v27 = v24;
    else
      v27 = *(_QWORD *)v24;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@, with requested time = %.3f (local time = %.3f) reading from sample %.3f \n", v25, v26, v19, v22, v27, *(_QWORD *)&v48, *(_QWORD *)&v16, *(_QWORD *)&v44);
  }
  v28 = sub_20C45509C((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v17, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, a5, a6, v16, v44, v45);
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  sub_20BFD265C(&v46);
  return v28;
}

void sub_20C453DE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_20C453E08(_DWORD *a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a3, double *a4, double *a5, uint64_t (***a6)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), pxrInternal__aapl__pxrReserved__::VtValue *a7, double a8)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v14;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v15;
  double v16;
  const char *v17;
  char *v18;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v20;
  unint64_t v21;
  const char *v22;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v23;
  double v24;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v25;
  uint64_t ClipIndexForTime;
  uint64_t v27;
  double v29;
  double v30;
  double v31;
  int v32;
  int v33;
  double v34;
  _QWORD v35[3];

  v35[2] = *MEMORY[0x24BDAC8D0];
  v34 = a8;
  v14 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64);
  v15 = sub_20C398E78(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v14, v15, &v32);
  v31 = a8;
  v29 = 0.0;
  v30 = 0.0;
  if (a4 && a5)
  {
    v16 = *a5;
    v29 = *a4;
    v30 = v16;
  }
  else
  {
    sub_20C44CC38(a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, &v31, &v29, &v30);
  }
  if (sub_20C286E00(15))
  {
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v32);
    v20 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v20)
      v20 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v21 = *((_QWORD *)v20 + 54) & 0xFFFFFFFFFFFFFFF8;
    if (v21)
    {
      v22 = (const char *)(v21 + 16);
      if (*(char *)(v21 + 39) < 0)
        v22 = *(const char **)v22;
    }
    else
    {
      v22 = "";
    }
    v23 = *a3;
    if (*((char *)*a3 + 23) < 0)
      v23 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)v23;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from clip set %s, with requested time = %.3f reading from sample %.3f \n", v17, v18, Text, v22, v23, *(_QWORD *)&v31, *(_QWORD *)&v29);
  }
  v24 = v29;
  if (vabdd_f64(v29, v30) >= 0.000001)
  {
    v27 = (*a6)[1](a6, a3, (uint64_t *)&v32, v31, v29);
  }
  else
  {
    v25 = *a3;
    ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(v25, v29);
    if ((pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtValue>(*(_QWORD *)(*((_QWORD *)v25 + 11) + 16 * ClipIndexForTime), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, a6, a7, v24) & 1) != 0|| sub_20C3490F4((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v25 + 9, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, a7) == 1)
    {
      if (!a7 || !sub_20C0AA3E8(a7))
      {
        v27 = 1;
        goto LABEL_24;
      }
      v35[1] = 0;
      sub_20BF4B5D8(a7, v35);
      sub_20BF4C2D8((uint64_t)v35);
    }
    v27 = 0;
  }
LABEL_24:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v33);
  sub_20BFD265C(&v32);
  return v27;
}

void sub_20C454058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void sub_20C45408C(uint64_t a1, _DWORD *a2, _DWORD *a3, void **a4, _DWORD *a5, uint64_t a6)
{
  _DWORD *v8;
  _BOOL8 v9;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v10;
  const char *v11;
  char *v12;
  void **v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p[2];
  char v18;
  _DWORD *v19[3];
  _OWORD v20[2];
  std::__shared_weak_count *v21;

  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v8 = v20;
  if (a5)
    v8 = a5;
  v19[0] = a2;
  v19[1] = a3;
  v19[2] = v8;
  if (a4)
  {
    __p[0] = *a4;
    sub_20C45420C(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v19, (double *)__p, a6);
  }
  else
  {
    sub_20C45420C(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v19, 0, a6);
  }
  v9 = sub_20C286E00(16);
  if (v9
    && (a3[18] - 3) <= 1
    && pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability((pxrInternal__aapl__pxrReserved__::UsdStage *)v9, (const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2) == 1&& sub_20C286E00(16))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, (pxrInternal__aapl__pxrReserved__ *)a2, v10);
    v13 = v18 >= 0 ? __p : (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Warning: detected time sample value on uniform attribute <%s>\n", v11, v12, v13);
    if (v18 < 0)
      operator delete(__p[0]);
  }
  v14 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_20C4541D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a16 < 0)
    operator delete(__p);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a23);
  _Unwind_Resume(a1);
}

void sub_20C45420C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, _DWORD **a3, double *a4, uint64_t a5)
{
  unint64_t *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v14;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v16;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v17;
  BOOL i;
  void **v19;
  uint64_t *v20;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v22;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v23;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__ *v25;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v26;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v27;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v28;
  uint64_t *v29;
  void **v30;
  int *v31;
  char v32;
  BOOL Layer;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v34;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v35;
  _BYTE v36[16];
  void **v37;
  uint64_t *v38;
  void **v39;
  uint64_t *v40;
  uint64_t *v41;
  _QWORD v42[2];
  void **v43;
  uint64_t *v44;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v45;
  uint64_t *v46;
  uint64_t v47;
  int v48;
  int v49;
  void ***v50;

  v10 = (unint64_t *)*((_QWORD *)a2 + 1);
  if (!v10)
    goto LABEL_5;
  v11 = v10 + 6;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  v13 = v10[7];
  if ((v13 & 0x800) != 0)
  {
LABEL_5:
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    v13 = v10[7];
  }
  if ((v13 & 0x400) == 0)
  {
    v14 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(*(_QWORD *)a5 + 8);
    if (!v14 || (*((_BYTE *)v14 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(*(_QWORD *)a5 + 8), a2);
    PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v14);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v36, PrimIndex, 1);
    v16 = sub_20C398E78(a2);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v43);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle((_DWORD *)&v43 + 1);
    for (i = 1;
          ;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v36))
    {
      v19 = v37;
      v20 = v38;
      if (v37 == v39 && v38 == v40)
        break;
      if (i)
      {
        sub_20C453680((uint64_t)v36, v16, (int *)&v45);
        sub_20BFD3EBC((int *)&v43, (int *)&v45);
        sub_20BFD3F10((int *)&v43 + 1, (int *)&v45 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v45 + 1);
        sub_20BFD265C(&v45);
        v19 = v37;
        v20 = v38;
      }
      v45 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)v19;
      v46 = v20;
      if ((sub_20C4547F0((uint64_t)a3, v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v43, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v45, a4) & 1) != 0)goto LABEL_29;
    }
    sub_20C454C38(a3, v17);
LABEL_29:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
    v31 = (int *)&v43;
    goto LABEL_30;
  }
  v22 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
  if ((v13 & 0x800) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
  ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v22, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 2));
  v25 = *(pxrInternal__aapl__pxrReserved__ **)(*(_QWORD *)a5 + 8);
  if (!v25 || (*((_BYTE *)v25 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v25, v23);
  v26 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v25);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v36, v26, 0);
  v27 = sub_20C398E78(a2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v48);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v49);
  v45 = 0;
  v46 = 0;
  v47 = 0;
  v29 = v38;
  v30 = v37;
  if (v37 != v39 || v38 != v40)
  {
    v32 = 0;
    Layer = 1;
    do
    {
      if (Layer)
      {
        sub_20C453680((uint64_t)v36, v27, (int *)&v43);
        sub_20BFD3EBC(&v48, (int *)&v43);
        sub_20BFD3F10(&v49, (int *)&v43 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v43 + 1);
        sub_20BFD265C(&v43);
        v43 = v37;
        v44 = v38;
        if (!pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v43))
        {
          v32 = 0;
          goto LABEL_42;
        }
        v30 = v37;
        v29 = v38;
      }
      else if ((v32 & 1) == 0)
      {
        goto LABEL_45;
      }
      v43 = v30;
      v44 = v29;
      if ((sub_20C4547F0((uint64_t)a3, v41, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v48, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v43, a4) & 1) != 0)goto LABEL_27;
      v32 = 1;
      if (!Layer)
        goto LABEL_46;
LABEL_42:
      v42[0] = v37;
      v42[1] = v38;
      sub_20C454A3C((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v42, (uint64_t)ClipsForPrim, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v48, (uint64_t)&v43);
      sub_20C24A6B0((uint64_t)&v45, (uint64_t *)v43, v44, ((char *)v44 - (char *)v43) >> 4);
      v50 = &v43;
      sub_20BDE9EB0((void ***)&v50);
      if ((v32 & 1) != 0)
      {
        v32 = 1;
        goto LABEL_46;
      }
      if (v45 != (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)v46)
      {
LABEL_45:
        v32 = 0;
LABEL_46:
        v34 = v45;
        v35 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)v46;
        while (v34 != v35)
        {
          if (sub_20C1020E4((_QWORD *)*v34 + 6, v41))
          {
            v43 = v37;
            v44 = v38;
            if ((sub_20C454B00((uint64_t)a3, v34, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v48, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v43, a4) & 1) != 0)goto LABEL_27;
          }
          v34 += 2;
        }
        Layer = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v36);
        goto LABEL_52;
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextNode((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v36);
      v32 = 0;
      Layer = 1;
LABEL_52:
      v29 = v38;
      v30 = v37;
    }
    while (v37 != v39 || v38 != v40);
  }
  sub_20C454C38(a3, v28);
LABEL_27:
  v43 = (void **)&v45;
  sub_20BDE9EB0(&v43);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  v31 = &v48;
LABEL_30:
  sub_20BFD265C(v31);
  if (v10)
    sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v10);
}

void sub_20C4545F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v12;
  va_list va;

  va_start(va, a12);
  sub_20BFD1A18(va);
  if (v12)
    sub_20C35C614(v12);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C454698(uint64_t a1, _DWORD *a2, _DWORD **a3, uint64_t a4)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  BOOL i;
  uint64_t v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v15;
  _QWORD v17[2];
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;
  int v25;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  v8 = *(pxrInternal__aapl__pxrReserved__ **)(*(_QWORD *)a4 + 8);
  if (!v8 || (*((_BYTE *)v8 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v8, v7);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18))
  {
    v12 = v19;
    v13 = v20;
    if (v19 == v21 && v20 == v22)
      break;
    if (i)
    {
      v15 = sub_20C398E78(a2);
      sub_20C453680((uint64_t)v18, v15, (int *)v17);
      sub_20BFD3EBC(&v24, (int *)v17);
      sub_20BFD3F10(&v25, (int *)v17 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
      sub_20BFD265C(v17);
      v12 = v19;
      v13 = v20;
    }
    v17[0] = v12;
    v17[1] = v13;
    if ((sub_20C454EB4((uint64_t)a3, v23, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v17) & 1) != 0)goto LABEL_14;
  }
  sub_20C454C38(a3, v10);
LABEL_14:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  return sub_20BFD265C(&v24);
}

void sub_20C4547CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_20C4547F0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4, double *a5)
{
  uint64_t v10;
  uint64_t v11;
  double *v12;
  int v13;
  int v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t *LayerStack;
  uint64_t v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int v35;
  _DWORD *Path;
  uint64_t v37;
  __int128 v38;
  double v39;
  char v40;
  __int128 v41;

  *(_QWORD *)&v41 = sub_20C44B9D4(a4, a2);
  *((_QWORD *)&v41 + 1) = v10;
  LOBYTE(v39) = 0;
  v40 = 0;
  if (a5)
  {
    *(_QWORD *)&v38 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)&v41);
    *((_QWORD *)&v38 + 1) = v11;
    v39 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)&v38, *a5);
    v40 = 1;
    v12 = &v39;
  }
  else
  {
    v12 = 0;
  }
  if ((sub_20C454CB0(a2, a3, v12, *(double **)(a1 + 16), (double *)(*(_QWORD *)(a1 + 16) + 8)) & 1) != 0)
  {
    v13 = 3;
LABEL_10:
    *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72) = v13;
    goto LABEL_11;
  }
  v14 = sub_20C454D18(a2, a3, *(pxrInternal__aapl__pxrReserved__::VtValue **)(*(_QWORD *)(a1 + 16) + 16));
  if (v14 == 1)
  {
    v13 = 2;
    goto LABEL_10;
  }
  if (v14 == 2)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 8) + 76) = 1;
    return sub_20C454C38((_DWORD **)a1, v15);
  }
  if (!*(_DWORD *)(*(_QWORD *)(a1 + 8) + 72))
    return 0;
LABEL_11:
  LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
  sub_20C2033F4((uint64_t *)&v38, LayerStack);
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(unsigned int **)(v18 + 8);
  *(_OWORD *)v18 = v38;
  *((_QWORD *)&v38 + 1) = 0;
  if (v19)
  {
    v20 = v19 + 2;
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(unsigned int *))(*(_QWORD *)v19 + 8))(v19);
    v23 = *((_QWORD *)&v38 + 1);
    *(_QWORD *)&v38 = 0;
    if (*((_QWORD *)&v38 + 1))
    {
      v24 = (unsigned int *)(*((_QWORD *)&v38 + 1) + 8);
      do
      {
        v25 = __ldxr(v24);
        v26 = v25 - 1;
      }
      while (__stlxr(v26, v24));
      if (!v26)
        (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
    }
  }
  sub_20C1034E8((uint64_t *)&v38, a2);
  v27 = *(_QWORD *)(a1 + 8);
  v28 = *(unsigned int **)(v27 + 24);
  *(_OWORD *)(v27 + 16) = v38;
  *((_QWORD *)&v38 + 1) = 0;
  if (v28)
  {
    v29 = v28 + 2;
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      (*(void (**)(unsigned int *))(*(_QWORD *)v28 + 8))(v28);
    v32 = *((_QWORD *)&v38 + 1);
    *(_QWORD *)&v38 = 0;
    if (*((_QWORD *)&v38 + 1))
    {
      v33 = (unsigned int *)(*((_QWORD *)&v38 + 1) + 8);
      do
      {
        v34 = __ldxr(v33);
        v35 = v34 - 1;
      }
      while (__stlxr(v35, v33));
      if (!v35)
        (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    }
  }
  Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
  v37 = *(_QWORD *)(a1 + 8);
  sub_20C01A074((int *)(v37 + 64), Path);
  sub_20C01A0C8((int *)(v37 + 68), Path + 1);
  *(_OWORD *)(*(_QWORD *)(a1 + 8) + 48) = v41;
  *(_OWORD *)(*(_QWORD *)(a1 + 8) + 32) = *(_OWORD *)a4;
  return 1;
}

uint64_t sub_20C454A3C@<X0>(pxrInternal__aapl__pxrReserved__::PcpNodeRef *this@<X1>, uint64_t result@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a3@<X2>, uint64_t a4@<X8>)
{
  __int128 *v4;
  __int128 *v5;
  _QWORD *LayerStack;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;

  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  v4 = *(__int128 **)result;
  v5 = *(__int128 **)(result + 8);
  if (*(__int128 **)result != v5)
  {
    do
    {
      LayerStack = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(this);
      result = sub_20C1020E4((_QWORD *)(*(_QWORD *)v4 + 24), LayerStack);
      if ((_DWORD)result)
      {
        Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(this);
        result = pxrInternal__aapl__pxrReserved__::SdfPath::HasPrefix(Path, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)v4 + 40));
        if ((_DWORD)result)
        {
          result = sub_20C44C164((uint64_t)v4, a3);
          if ((_DWORD)result)
            result = sub_20BDEA72C((char **)a4, v4);
        }
      }
      ++v4;
    }
    while (v4 != v5);
  }
  return result;
}

void sub_20C454AE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BDE9EB0((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C454B00(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4, double *a5)
{
  uint64_t v8;
  uint64_t *LayerStack;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  _DWORD *Path;
  uint64_t v20;
  __int128 v22;

  v8 = sub_20C44CC38(a2, a3, a5, *(double **)(a1 + 16), (double *)(*(_QWORD *)(a1 + 16) + 8));
  if ((_DWORD)v8)
  {
    sub_20BDE881C((_QWORD *)(*(_QWORD *)(a1 + 16) + 24), (uint64_t *)a2);
    *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72) = 4;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
    sub_20C2033F4((uint64_t *)&v22, LayerStack);
    v10 = *(_QWORD *)(a1 + 8);
    v11 = *(unsigned int **)(v10 + 8);
    *(_OWORD *)v10 = v22;
    *((_QWORD *)&v22 + 1) = 0;
    if (v11)
    {
      v12 = v11 + 2;
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(unsigned int *))(*(_QWORD *)v11 + 8))(v11);
      v15 = *((_QWORD *)&v22 + 1);
      *(_QWORD *)&v22 = 0;
      if (*((_QWORD *)&v22 + 1))
      {
        v16 = (unsigned int *)(*((_QWORD *)&v22 + 1) + 8);
        do
        {
          v17 = __ldxr(v16);
          v18 = v17 - 1;
        }
        while (__stlxr(v18, v16));
        if (!v18)
          (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
      }
    }
    Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
    v20 = *(_QWORD *)(a1 + 8);
    sub_20C01A074((int *)(v20 + 64), Path);
    sub_20C01A0C8((int *)(v20 + 68), Path + 1);
    *(_OWORD *)(*(_QWORD *)(a1 + 8) + 32) = *(_OWORD *)a4;
  }
  return v8;
}

uint64_t sub_20C454C38(_DWORD **a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v6;

  v3 = *((_QWORD *)*a1 + 1);
  if (!v3 || (*(_BYTE *)(v3 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)*a1 + 1), a2);
  v4 = *(unint64_t **)(v3 + 24);
  PrimDefinition = atomic_load(v4 + 7);
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v4);
  v6 = sub_20C398E78(*a1);
  a1[1][18] = sub_20C454E58(PrimDefinition, v6, *((pxrInternal__aapl__pxrReserved__::VtValue **)a1[2] + 2));
  return 1;
}

uint64_t sub_20C454CB0(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, double *a3, double *a4, double *a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v9;

  v9 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a1);
  if (a3)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::GetBracketingTimeSamplesForPath(v9, a2, *a3, a4, a5);
  else
    return pxrInternal__aapl__pxrReserved__::SdfLayer::GetNumTimeSamplesForPath(v9, a2) != 0;
}

uint64_t sub_20C454D18(uint64_t *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  uint64_t *v5;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v6;
  uint64_t result;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];

  v11[2] = *MEMORY[0x24BDAC8D0];
  v5 = (uint64_t *)sub_20C0EEAF8(a1);
  v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v6)
      v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    result = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField((pxrInternal__aapl__pxrReserved__::SdfLayer *)v5, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 88), a3);
    if ((_DWORD)result)
    {
      if (sub_20C0AA3E8(a3))
      {
        v11[1] = 0;
        sub_20BF4B5D8(a3, v11);
        sub_20BF4C2D8((uint64_t)v11);
        return 2;
      }
      else
      {
        return 1;
      }
    }
  }
  else
  {
    if (!v6)
      v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = (char *)v6 + 88;
    v9 = sub_20C0A683C(v5 + 14);
    v10 = (*(uint64_t (**)(uint64_t, const pxrInternal__aapl__pxrReserved__::SdfPath *, char *))(*(_QWORD *)v9 + 144))(v9, a2, v8);
    if (sub_20BDE150C(v10, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v10, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
  return result;
}

_QWORD *sub_20C454E58(uint64_t a1, _QWORD *a2, pxrInternal__aapl__pxrReserved__::VtValue *a3)
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v6;

  v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v6)
    v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C3C0C6C(a1, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 88), a3);
}

uint64_t sub_20C454EB4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4)
{
  int v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t *LayerStack;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  _DWORD *Path;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;

  v7 = sub_20C454D18(a2, a3, *(pxrInternal__aapl__pxrReserved__::VtValue **)(*(_QWORD *)(a1 + 16) + 16));
  if (v7 == 2)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 8) + 76) = 1;
    return sub_20C454C38((_DWORD **)a1, v8);
  }
  else if (v7 == 1)
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72) = 2;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
    sub_20C2033F4((uint64_t *)&v34, LayerStack);
    v10 = *(_QWORD *)(a1 + 8);
    v11 = *(unsigned int **)(v10 + 8);
    *(_OWORD *)v10 = v34;
    *((_QWORD *)&v34 + 1) = 0;
    if (v11)
    {
      v12 = v11 + 2;
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(unsigned int *))(*(_QWORD *)v11 + 8))(v11);
      v15 = *((_QWORD *)&v34 + 1);
      *(_QWORD *)&v34 = 0;
      if (*((_QWORD *)&v34 + 1))
      {
        v16 = (unsigned int *)(*((_QWORD *)&v34 + 1) + 8);
        do
        {
          v17 = __ldxr(v16);
          v18 = v17 - 1;
        }
        while (__stlxr(v18, v16));
        if (!v18)
          (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
      }
    }
    sub_20C1034E8((uint64_t *)&v34, a2);
    v19 = *(_QWORD *)(a1 + 8);
    v20 = *(unsigned int **)(v19 + 24);
    *(_OWORD *)(v19 + 16) = v34;
    *((_QWORD *)&v34 + 1) = 0;
    if (v20)
    {
      v21 = v20 + 2;
      do
      {
        v22 = __ldxr(v21);
        v23 = v22 - 1;
      }
      while (__stlxr(v23, v21));
      if (!v23)
        (*(void (**)(unsigned int *))(*(_QWORD *)v20 + 8))(v20);
      v24 = *((_QWORD *)&v34 + 1);
      *(_QWORD *)&v34 = 0;
      if (*((_QWORD *)&v34 + 1))
      {
        v25 = (unsigned int *)(*((_QWORD *)&v34 + 1) + 8);
        do
        {
          v26 = __ldxr(v25);
          v27 = v26 - 1;
        }
        while (__stlxr(v27, v25));
        if (!v27)
          (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
      }
    }
    Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
    v29 = *(_QWORD *)(a1 + 8);
    sub_20C01A074((int *)(v29 + 64), Path);
    sub_20C01A0C8((int *)(v29 + 68), Path + 1);
    v30 = sub_20C44B9D4(a4, a2);
    v31 = *(_QWORD *)(a1 + 8);
    *(double *)(v31 + 48) = v30;
    *(_QWORD *)(v31 + 56) = v32;
    *(_OWORD *)(v31 + 32) = *(_OWORD *)a4;
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_20C45509C(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (***a3)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), pxrInternal__aapl__pxrReserved__::VtValue *a4, double a5, double a6, double a7)
{
  uint64_t *v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v13;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v14;
  int TimeSample;
  uint64_t v16;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v19;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v21[3];

  v21[2] = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)MEMORY[0x24BDAC8D0];
  v11 = (uint64_t *)(a1 + 1);
  if (vabdd_f64(a6, a7) >= 0.000001)
  {
    v19 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v11;
    if (*v11)
    {
      if (*(_BYTE *)(sub_20BEB47BC(v11) + 14))
        v19 = *a1;
      else
        v19 = 0;
    }
    v21[0] = v19;
    sub_20BF1DD04((uint64_t *)v21);
    v16 = (**a3)(a3, v21, a2, a5, a6, a7);
    sub_20C103234(v21);
  }
  else
  {
    v13 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v11;
    if (*v11)
    {
      if (*(_BYTE *)(sub_20BEB47BC(v11) + 14))
        v13 = *a1;
      else
        v13 = 0;
    }
    v21[0] = v13;
    sub_20BF1DD04((uint64_t *)v21);
    v14 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)v21);
    TimeSample = pxrInternal__aapl__pxrReserved__::SdfLayer::QueryTimeSample(v14, a2, a6, a4);
    sub_20C103234(v21);
    if (TimeSample)
    {
      if (!a4 || !sub_20C0AA3E8(a4))
        return 1;
      v21[1] = 0;
      sub_20BF4B5D8(a4, v21);
      sub_20BF4C2D8((uint64_t)v21);
    }
    return 0;
  }
  return v16;
}

void sub_20C455218(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C455238(uint64_t a1, uint64_t *a2, uint64_t a3, pxrInternal__aapl__pxrReserved__::VtValue *a4)
{
  int v4;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v8;
  uint64_t *v9;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v17;
  const char *v19;
  void **v20;
  uint64_t HasField;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v22;
  uint64_t Identifier;
  const char *v24;
  char *v25;
  uint64_t v26;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v27;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v28;
  void *__p[2];
  char v30;
  int v31;
  int v32;
  _QWORD v33[4];
  char v34;

  v4 = *((_DWORD *)a2 + 18);
  if (!v4)
    return 0;
  if (v4 != 1)
  {
    if (v4 == 2)
    {
      v8 = sub_20C398E78((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v8, (int *)v33);
      v9 = a2 + 2;
      if (sub_20C286E00(15))
      {
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v33);
        v11 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v11)
          v11 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v12 = *((_QWORD *)v11 + 11) & 0xFFFFFFFFFFFFFFF8;
        if (v12)
        {
          v13 = (const char *)(v12 + 16);
          if (*(char *)(v12 + 39) < 0)
            v13 = *(const char **)v13;
        }
        else
        {
          v13 = "";
        }
        v22 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v9);
        Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v22);
        if (*(char *)(Identifier + 23) >= 0)
          v26 = Identifier;
        else
          v26 = *(_QWORD *)Identifier;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@\n", v24, v25, Text, v13, v26);
      }
      v27 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v9);
      v28 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v28)
        v28 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v27, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v33, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v28 + 88), a4);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v33 + 1);
      sub_20BFD265C(v33);
      return (_QWORD *)HasField;
    }
    v33[0] = "usd/stage.cpp";
    v33[1] = "_GetDefaultValueFromResolveInfoImpl";
    v33[2] = 8884;
    v33[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_GetDefaultValueFromResolveInfoImpl(const UsdResolveInfo &"
             ", const UsdAttribute &, T *) const [T = pxrInternal__aapl__pxrReserved__::VtValue]";
    v34 = 0;
    sub_20C348EEC(a3, &v31);
    v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C539428, *((unsigned int *)a2 + 18), (uint64_t)__p);
    if (v30 >= 0)
      v20 = __p;
    else
      v20 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v33, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid resolve info used for getting the value at default time for attr '%s'. Resolve info source must be Default, Fallback, or None. Got %s", v19, (const char *)v20);
    if (v30 < 0)
      operator delete(__p[0]);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
    sub_20BFD265C(&v31);
    return 0;
  }
  v14 = *(_QWORD *)(a3 + 8);
  if (!v14 || (*(_BYTE *)(v14 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a3 + 8), (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
  v15 = *(unint64_t **)(v14 + 24);
  PrimDefinition = atomic_load(v15 + 7);
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v15);
  v17 = sub_20C398E78((_DWORD *)a3);
  return sub_20C454E58(PrimDefinition, v17, a4);
}

void sub_20C4554A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18, int a19, __int16 a20,char a21,char a22)
{
  if (a17 < 0)
    operator delete(__p);
  sub_20BFD1A18(&a18);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C4554E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (***a4)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, const pxrInternal__aapl__pxrReserved__::SdfPath *, double, double, double), pxrInternal__aapl__pxrReserved__::VtValue *a5, double a6)
{
  pxrInternal__aapl__pxrReserved__::VtValue *v6;
  uint64_t v11;
  unint64_t *v12;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v16;
  uint64_t *v17;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v19;
  unint64_t v20;
  const char *v21;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v24;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v26;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v27;
  char v28;
  unsigned int *v29;
  unsigned int v30;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v31;
  uint64_t Identifier;
  const char *v33;
  char *v34;
  uint64_t v35;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v36;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  double v48;

  v48 = a6;
  v6 = a5;
  switch(*((_DWORD *)a2 + 18))
  {
    case 1:
      v11 = *(_QWORD *)(a3 + 8);
      if (!v11 || (*(_BYTE *)(v11 + 57) & 8) != 0)
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a3 + 8), (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
      v12 = *(unint64_t **)(v11 + 24);
      PrimDefinition = atomic_load(v12 + 7);
      if (!PrimDefinition)
        PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v12);
      v14 = sub_20C398E78((_DWORD *)a3);
      return sub_20C454E58(PrimDefinition, v14, v6);
    case 2:
      v16 = sub_20C398E78((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v16, &v40);
      v17 = a2 + 2;
      if (sub_20C286E00(15))
      {
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40);
        v19 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v19)
          v19 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v20 = *((_QWORD *)v19 + 54) & 0xFFFFFFFFFFFFFFF8;
        if (v20)
        {
          v21 = (const char *)(v20 + 16);
          if (*(char *)(v20 + 39) < 0)
            v21 = *(const char **)v21;
        }
        else
        {
          v21 = "";
        }
        v31 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
        Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v31);
        if (*(char *)(Identifier + 23) >= 0)
          v35 = Identifier;
        else
          v35 = *(_QWORD *)Identifier;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@, with t = %.3f as default\n", v33, v34, Text, v21, v35, *(_QWORD *)&v48);
      }
      v36 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
      v37 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v37)
        v37 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      LOBYTE(v6) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v36, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v40, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v37 + 88), v6);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
      sub_20BFD265C(&v40);
      return (_QWORD *)(v6 & 1);
    case 3:
      return (_QWORD *)sub_20C453B78((_DWORD *)a3, a2, 0, 0, a4, a5, a6);
    case 4:
      v23 = sub_20C398E78((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v23, &v46);
      sub_20C35C4F8((uint64_t)&v40, (uint64_t *)(a3 + 8), (_DWORD *)(a3 + 16));
      v24 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
      sub_20C348EEC((uint64_t)&v40, &v38);
      ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v24, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
      sub_20BFD265C(&v38);
      v26 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)*ClipsForPrim;
      v27 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)ClipsForPrim[1];
      break;
    default:
      goto LABEL_28;
  }
  while (1)
  {
    if (v26 == v27)
    {
      v28 = 1;
      goto LABEL_22;
    }
    if (sub_20C44C114((uint64_t)v26, (uint64_t)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8))
      && sub_20C44C164((uint64_t)v26, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46))
    {
      break;
    }
    v26 += 2;
  }
  LOBYTE(v6) = sub_20C453E08((_DWORD *)a3, (uint64_t)a2, v26, 0, 0, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a4, v6, a6);
  v28 = 0;
LABEL_22:
  if ((v45 & 7) != 0)
  {
    v29 = (unsigned int *)(v45 & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v44);
  sub_20BFD265C(&v43);
  if (v42)
    sub_20C35C614(v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  sub_20BFD265C(&v46);
  if ((v28 & 1) != 0)
LABEL_28:
    LOBYTE(v6) = 0;
  return (_QWORD *)(v6 & 1);
}

void sub_20C455854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_20C35C2E0((uint64_t)va);
  sub_20BFD1A18((int *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4558B0(uint64_t result, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  unsigned int v5;
  unsigned int v6;
  double v7;
  double v8;
  double v9;
  unsigned int v10;
  uint64_t v11;
  double v12;
  double v13;
  int v14;
  double v15;
  double v16;
  double v17;
  double *v18;
  int v19;
  double *v20;
  double v21;
  int v22;
  BOOL v23;
  double *v25;
  double *v26;
  double v27;
  BOOL v28;
  double v30[2];
  double v31[2];
  _QWORD v32[2];
  double v33[2];

  v2 = *(double *)result;
  v3 = *(double *)a2;
  v4 = *(double *)result * *(double *)a2;
  v5 = *(unsigned __int8 *)(result + 8);
  v6 = *(unsigned __int8 *)(a2 + 8);
  *(_QWORD *)&v7 = (fabs(v4) != INFINITY) & v6 & v5;
  v33[0] = v4;
  v33[1] = v7;
  v8 = *(double *)(a2 + 16);
  v9 = v2 * v8;
  v10 = *(unsigned __int8 *)(a2 + 24);
  v11 = (fabs(v2 * v8) != INFINITY) & v10 & v5;
  *(double *)v32 = v9;
  v32[1] = v11;
  v12 = *(double *)(result + 16);
  v13 = v3 * v12;
  v14 = *(unsigned __int8 *)(result + 24);
  *(_QWORD *)&v15 = (fabs(v3 * v12) != INFINITY) & v14 & v6;
  v31[0] = v3 * v12;
  v31[1] = v15;
  v16 = v8 * v12;
  *(_QWORD *)&v17 = (fabs(v8 * v12) != INFINITY) & v14 & v10;
  v30[0] = v8 * v12;
  v30[1] = v17;
  v18 = (double *)v32;
  if (v4 >= v9)
  {
    v19 = v4 == v9 ? LODWORD(v7) : 1;
    if (v19 | v11 ^ 1)
      v18 = v33;
  }
  v20 = v30;
  v21 = v8 * v12;
  if (v13 >= v16)
  {
    if (v13 == v16)
      v22 = LODWORD(v15);
    else
      v22 = 1;
    if (v22 | LODWORD(v17) ^ 1)
      v20 = v31;
    v21 = *v20;
  }
  if (*v18 >= v21)
  {
    if (*((_BYTE *)v20 + 8))
      v23 = *((_BYTE *)v18 + 8) == 0;
    else
      v23 = 0;
    if (!v23 || *v18 != v21)
      v20 = v18;
    v21 = *v20;
  }
  *(double *)(result + 16) = v21;
  *(_BYTE *)(result + 24) = *((_BYTE *)v20 + 8);
  v25 = v33;
  if (v4 >= v9)
  {
    if (v4 != v9)
      LODWORD(v7) = 0;
    if ((LODWORD(v7) & (v11 ^ 1)) == 0)
      v25 = (double *)v32;
  }
  v26 = v31;
  if (v13 >= v16)
  {
    if (v13 != v16)
      LODWORD(v15) = 0;
    if ((LODWORD(v15) & (LODWORD(v17) ^ 1)) == 0)
      v26 = v30;
    v13 = *v26;
  }
  v27 = *v25;
  if (*v25 >= v13)
  {
    if (*((_BYTE *)v26 + 8))
      v28 = 1;
    else
      v28 = *((_BYTE *)v25 + 8) == 0;
    if (v28 || v27 != v13)
      v25 = v26;
    v27 = *v25;
  }
  *(double *)result = v27;
  *(_BYTE *)(result + 8) = *((_BYTE *)v25 + 8);
  return result;
}

uint64_t sub_20C455A60(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C4452C0(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C455B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C455B28(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, uint64_t (**a3)(_QWORD, uint64_t), const pxrInternal__aapl__pxrReserved__::TfToken *a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t (**v11[3])(_QWORD, uint64_t);

  v8 = *(_QWORD *)(a1 + 8);
  if (!v8 || (*(_BYTE *)(v8 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), a2);
  v9 = *(_QWORD **)v8;
  v11[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C527CB0;
  v11[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539920;
  v11[1] = a3;
  return pxrInternal__aapl__pxrReserved__::UsdStage::_SetMetadataImpl<pxrInternal__aapl__pxrReserved__::SdfAbstractDataConstValue>(v9, (int *)a1, a2, a4, v11);
}

uint64_t sub_20C455BB4(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_DWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
    v5 = (*(_QWORD *)(a2 + 8) & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *(_QWORD *)(a2 + 8) = (char *)&off_24C527CC0 + 3;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_20C455C14(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  v2 = (uint64_t)a2;
  result = sub_20C0DE26C(a2);
  if ((_DWORD)result)
  {
    v5 = *(_QWORD *)(v2 + 8);
    if ((v5 & 4) != 0)
      v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return *(_DWORD *)v2 == **(_DWORD **)(a1 + 8);
  }
  return result;
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C455C74(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1)
{
  sub_20BF1D8F4((int)a1, *a1);
  return a1;
}

BOOL sub_20C455CA0(uint64_t a1, char *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *__p[2];
  char v9;

  sub_20BDDC0E4(__p, a2);
  v5 = sub_20BDEEBA4(a1, (const void **)__p);
  if (v9 < 0)
    operator delete(__p[0]);
  v6 = a1 + 8;
  if (v6 != v5)
    sub_20BDE881C(a3, (uint64_t *)(v5 + 56));
  return v6 != v5;
}

void sub_20C455D18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20C455D34(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)sub_20BDDE084((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    sub_20C455DDC((uint64_t)a1, a4, (uint64_t)v10);
    sub_20BDDE1B4(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    sub_20C2211E0((uint64_t)v10, 0);
  }
  return v7;
}

_BYTE *sub_20C455DDC@<X0>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  _BYTE *result;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = operator new(0x50uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = v6 + 4;
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    result = sub_20BDDBFAC(result, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    v6[6] = *((_QWORD *)v8 + 2);
    *(_OWORD *)result = v9;
  }
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_20C455E58(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20C2211E0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_20C455E70(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPathExpression *a2, int a3)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void **v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  void **v15;
  __int128 v16;
  void *__p[2];
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  void *v25[2];
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void **v33;

  if ((_DWORD)a2)
  {
    if (a3 != 2)
      return;
    v5 = *(_QWORD *)(*a1 + 8);
    *(_OWORD *)v25 = *(_OWORD *)(v5 - 96);
    v26 = *(_QWORD *)(v5 - 80);
    *(_QWORD *)(v5 - 96) = 0;
    *(_QWORD *)(v5 - 88) = 0;
    *(_QWORD *)(v5 - 80) = 0;
    v27 = *(_OWORD *)(v5 - 72);
    v28 = *(_QWORD *)(v5 - 56);
    *(_QWORD *)(v5 - 72) = 0;
    *(_QWORD *)(v5 - 64) = 0;
    *(_QWORD *)(v5 - 56) = 0;
    v29 = *(_OWORD *)(v5 - 48);
    v30 = *(_QWORD *)(v5 - 32);
    *(_QWORD *)(v5 - 48) = 0;
    *(_QWORD *)(v5 - 40) = 0;
    *(_QWORD *)(v5 - 32) = 0;
    v6 = *(_OWORD *)(v5 - 24);
    v32 = *(_QWORD *)(v5 - 8);
    v31 = v6;
    *(_QWORD *)(v5 - 16) = 0;
    *(_QWORD *)(v5 - 8) = 0;
    *(_QWORD *)(v5 - 24) = 0;
    v7 = *a1;
    v8 = *(_QWORD *)(*a1 + 8) - 96;
    sub_20C14816C(*a1 + 16, v8);
    *(_QWORD *)(v7 + 8) = v8;
    pxrInternal__aapl__pxrReserved__::SdfPathExpression::MakeOp(a2, (_QWORD *)(*(_QWORD *)(*a1 + 8) - 96), (uint64_t)v25, (uint64_t)__p);
    v9 = *(_QWORD *)(*a1 + 8);
    v10 = *(void **)(v9 - 96);
    if (v10)
    {
      *(_QWORD *)(v9 - 88) = v10;
      operator delete(v10);
      *(_QWORD *)(v9 - 96) = 0;
      *(_QWORD *)(v9 - 88) = 0;
      *(_QWORD *)(v9 - 80) = 0;
    }
    *(_OWORD *)(v9 - 96) = *(_OWORD *)__p;
    *(_QWORD *)(v9 - 80) = v18;
    __p[0] = 0;
    __p[1] = 0;
    v18 = 0;
    sub_20C00BC18((void **)(v9 - 72));
    *(_OWORD *)(v9 - 72) = v19;
    *(_QWORD *)(v9 - 56) = v20;
    v19 = 0uLL;
    v20 = 0;
    sub_20C00BCC0((void **)(v9 - 48));
    *(_OWORD *)(v9 - 48) = v21;
    *(_QWORD *)(v9 - 32) = v22;
    v21 = 0uLL;
    v22 = 0;
    v11 = (void **)(v9 - 24);
    if (*(char *)(v9 - 1) < 0)
      operator delete(*v11);
    v12 = v23;
    *(_QWORD *)(v9 - 8) = v24;
    *(_OWORD *)v11 = v12;
    HIBYTE(v24) = 0;
    LOBYTE(v23) = 0;
    v33 = (void **)&v21;
    sub_20C00E25C(&v33);
    v33 = (void **)&v19;
    sub_20C00D5A8(&v33);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (SHIBYTE(v32) < 0)
      operator delete((void *)v31);
    __p[0] = &v29;
    sub_20C00E25C((void ***)__p);
    __p[0] = &v27;
  }
  else
  {
    if (a3 != 1)
      return;
    pxrInternal__aapl__pxrReserved__::SdfPathExpression::MakeComplement(*(_QWORD *)(*a1 + 8) - 96, (uint64_t)v25);
    v13 = *(_QWORD *)(*a1 + 8);
    v14 = *(void **)(v13 - 96);
    if (v14)
    {
      *(_QWORD *)(v13 - 88) = v14;
      operator delete(v14);
      *(_QWORD *)(v13 - 96) = 0;
      *(_QWORD *)(v13 - 88) = 0;
      *(_QWORD *)(v13 - 80) = 0;
    }
    *(_OWORD *)(v13 - 96) = *(_OWORD *)v25;
    *(_QWORD *)(v13 - 80) = v26;
    v25[0] = 0;
    v25[1] = 0;
    v26 = 0;
    sub_20C00BC18((void **)(v13 - 72));
    *(_OWORD *)(v13 - 72) = v27;
    *(_QWORD *)(v13 - 56) = v28;
    v27 = 0uLL;
    v28 = 0;
    sub_20C00BCC0((void **)(v13 - 48));
    *(_OWORD *)(v13 - 48) = v29;
    *(_QWORD *)(v13 - 32) = v30;
    v29 = 0uLL;
    v30 = 0;
    v15 = (void **)(v13 - 24);
    if (*(char *)(v13 - 1) < 0)
      operator delete(*v15);
    v16 = v31;
    *(_QWORD *)(v13 - 8) = v32;
    *(_OWORD *)v15 = v16;
    HIBYTE(v32) = 0;
    LOBYTE(v31) = 0;
    __p[0] = &v29;
    sub_20C00E25C((void ***)__p);
    __p[0] = &v27;
  }
  sub_20C00D5A8((void ***)__p);
  if (v25[0])
  {
    v25[1] = v25[0];
    operator delete(v25[0]);
  }
}

void sub_20C456164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0)
    operator delete(__p);
  sub_20C00E25C((void ***)&a9);
  sub_20C00D5A8((void ***)&a9);
  if (a21)
  {
    a22 = (uint64_t)a21;
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

void sub_20C4561A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  int v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void **v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  int v25;
  void *v26[2];
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  void *__p[2];
  uint64_t v33;
  void **v34;

  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a2))
  {
    sub_20C4565D8(*(_QWORD *)(a1 + 8), (const pxrInternal__aapl__pxrReserved__::SdfPath *)a2, &v24);
    v4 = pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
    if ((v4 & 1) != 0)
    {
      v5 = *(uint64_t **)a1;
      sub_20BFD6E54(&v21, &v24);
      sub_20BFD6EA4((_DWORD *)&v21 + 1, &v25);
      if (*(char *)(a2 + 31) < 0)
      {
        sub_20BDDBFAC(&v22, *(void **)(a2 + 8), *(_QWORD *)(a2 + 16));
      }
      else
      {
        v22 = *(_OWORD *)(a2 + 8);
        v23 = *(_QWORD *)(a2 + 24);
      }
      pxrInternal__aapl__pxrReserved__::SdfPathExpression::MakeAtom((uint64_t)&v21, (char **)v26);
      v13 = v5[1];
      if (v13 >= v5[2])
      {
        v15 = sub_20C1482F8(v5, (uint64_t)v26);
        v16 = SHIBYTE(v33);
        v5[1] = v15;
        if (v16 < 0)
          operator delete(__p[0]);
      }
      else
      {
        *(_QWORD *)(v13 + 16) = 0;
        *(_QWORD *)(v13 + 24) = 0;
        *(_QWORD *)v13 = 0;
        *(_QWORD *)(v13 + 8) = 0;
        *(_OWORD *)v13 = *(_OWORD *)v26;
        *(_QWORD *)(v13 + 16) = v27;
        v26[0] = 0;
        v26[1] = 0;
        *(_QWORD *)(v13 + 32) = 0;
        *(_QWORD *)(v13 + 40) = 0;
        *(_OWORD *)(v13 + 24) = v28;
        *(_QWORD *)(v13 + 40) = v29;
        *(_QWORD *)(v13 + 48) = 0;
        v27 = 0;
        v28 = 0uLL;
        v29 = 0;
        *(_QWORD *)(v13 + 56) = 0;
        *(_QWORD *)(v13 + 64) = 0;
        *(_OWORD *)(v13 + 48) = v30;
        *(_QWORD *)(v13 + 64) = v31;
        v30 = 0uLL;
        v14 = *(_OWORD *)__p;
        *(_QWORD *)(v13 + 88) = v33;
        *(_OWORD *)(v13 + 72) = v14;
        v31 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v33 = 0;
        v5[1] = v13 + 96;
      }
      v34 = (void **)&v30;
      sub_20C00E25C(&v34);
      v34 = (void **)&v28;
      sub_20C00D5A8(&v34);
      if (v26[0])
      {
        v26[1] = v26[0];
        operator delete(v26[0]);
      }
      if (SHIBYTE(v23) < 0)
        operator delete((void *)v22);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v21 + 1);
      sub_20BFD265C(&v21);
    }
    else
    {
      v11 = **(uint64_t ***)(a1 + 16);
      if (v11)
      {
        v12 = v11[1];
        if (v12 >= v11[2])
        {
          v4 = sub_20C24FADC(v11, a2);
        }
        else
        {
          sub_20C24FBC8((uint64_t)(v11 + 2), v11[1], a2);
          v4 = v12 + 32;
          v11[1] = v12 + 32;
        }
        v11[1] = v4;
      }
      v17 = *(uint64_t **)a1;
      v18 = pxrInternal__aapl__pxrReserved__::SdfPathExpression::Nothing((pxrInternal__aapl__pxrReserved__::SdfPathExpression *)v4);
      v19 = v17[1];
      if (v19 >= v17[2])
      {
        v20 = sub_20C24FC58(v17, v18);
      }
      else
      {
        sub_20C00D1F0((_QWORD *)v17[1], v18);
        v20 = v19 + 96;
        v17[1] = v19 + 96;
      }
      v17[1] = v20;
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
    sub_20BFD265C(&v24);
  }
  else
  {
    v6 = *(uint64_t **)a1;
    sub_20C1449B4(a2, (char **)v26);
    v7 = v6[1];
    if (v7 >= v6[2])
    {
      v9 = sub_20C1482F8(v6, (uint64_t)v26);
      v10 = SHIBYTE(v33);
      v6[1] = v9;
      if (v10 < 0)
        operator delete(__p[0]);
    }
    else
    {
      *(_QWORD *)(v7 + 16) = 0;
      *(_QWORD *)(v7 + 24) = 0;
      *(_QWORD *)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      *(_OWORD *)v7 = *(_OWORD *)v26;
      *(_QWORD *)(v7 + 16) = v27;
      v26[0] = 0;
      v26[1] = 0;
      *(_QWORD *)(v7 + 32) = 0;
      *(_QWORD *)(v7 + 40) = 0;
      *(_OWORD *)(v7 + 24) = v28;
      *(_QWORD *)(v7 + 40) = v29;
      *(_QWORD *)(v7 + 48) = 0;
      v27 = 0;
      v28 = 0uLL;
      v29 = 0;
      *(_QWORD *)(v7 + 56) = 0;
      *(_QWORD *)(v7 + 64) = 0;
      *(_OWORD *)(v7 + 48) = v30;
      *(_QWORD *)(v7 + 64) = v31;
      v30 = 0uLL;
      v8 = *(_OWORD *)__p;
      *(_QWORD *)(v7 + 88) = v33;
      *(_OWORD *)(v7 + 72) = v8;
      v31 = 0;
      __p[0] = 0;
      __p[1] = 0;
      v33 = 0;
      v6[1] = v7 + 96;
    }
    v21 = (void **)&v30;
    sub_20C00E25C(&v21);
    v21 = (void **)&v28;
    sub_20C00D5A8(&v21);
    if (v26[0])
    {
      v26[1] = v26[0];
      operator delete(v26[0]);
    }
  }
}

void sub_20C4564DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, int a17, int a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = v33;
  *(_QWORD *)(v35 + 8) = v34;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&a18);
  sub_20BFD265C(&a17);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C4565D8@<X0>(uint64_t a1@<X0>, const pxrInternal__aapl__pxrReserved__::SdfPath *a2@<X1>, _DWORD *a3@<X8>)
{
  int v6;
  int v7;
  int v8;
  int v9;

  pxrInternal__aapl__pxrReserved__::PcpMapFunction::MapSourceToTarget(*(pxrInternal__aapl__pxrReserved__::PcpMapFunction **)a1, a2, &v8);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v8))
  {
    pxrInternal__aapl__pxrReserved__::UsdPrim::_ProtoToInstancePathMap::MapProtoToInstance(*(char ***)(a1 + 8), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v8, &v6);
    sub_20BFD3EBC(&v8, &v6);
    sub_20BFD3F10(&v9, &v7);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v7);
    sub_20BFD265C(&v6);
  }
  sub_20BFD38A4(a3, &v8);
  sub_20BFD38DC(a3 + 1, &v9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  return sub_20BFD265C(&v8);
}

void sub_20C456698(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C4566B4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  uint64_t *v4;
  unint64_t v5;
  __int128 v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  void *v15[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void *__p[2];
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  void **v29;

  sub_20C4565D8(*(_QWORD *)(a1 + 8), a2, &v27);
  if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v27))
  {
    sub_20C00D7C4((uint64_t)&v23, (uint64_t)a2);
    sub_20C14A868((uint64_t)&v23, &v27);
    v4 = *(uint64_t **)a1;
    sub_20C1487C4((uint64_t)&v23, (char **)v15);
    v5 = v4[1];
    if (v5 >= v4[2])
    {
      v12 = sub_20C1482F8(v4, (uint64_t)v15);
      v13 = SHIBYTE(v22);
      v4[1] = v12;
      if (v13 < 0)
        operator delete(__p[0]);
    }
    else
    {
      *(_QWORD *)(v5 + 16) = 0;
      *(_QWORD *)(v5 + 24) = 0;
      *(_QWORD *)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
      *(_OWORD *)v5 = *(_OWORD *)v15;
      *(_QWORD *)(v5 + 16) = v16;
      v15[0] = 0;
      v15[1] = 0;
      *(_QWORD *)(v5 + 32) = 0;
      *(_QWORD *)(v5 + 40) = 0;
      *(_OWORD *)(v5 + 24) = v17;
      *(_QWORD *)(v5 + 40) = v18;
      *(_QWORD *)(v5 + 48) = 0;
      v16 = 0;
      v17 = 0uLL;
      v18 = 0;
      *(_QWORD *)(v5 + 56) = 0;
      *(_QWORD *)(v5 + 64) = 0;
      *(_OWORD *)(v5 + 48) = v19;
      *(_QWORD *)(v5 + 64) = v20;
      v19 = 0uLL;
      v6 = *(_OWORD *)__p;
      *(_QWORD *)(v5 + 88) = v22;
      *(_OWORD *)(v5 + 72) = v6;
      v20 = 0;
      __p[0] = 0;
      __p[1] = 0;
      v22 = 0;
      v4[1] = v5 + 96;
    }
    v29 = (void **)&v19;
    sub_20C00E25C(&v29);
    v29 = (void **)&v17;
    sub_20C00D5A8(&v29);
    if (v15[0])
    {
      v15[1] = v15[0];
      operator delete(v15[0]);
    }
    v15[0] = &v26;
    sub_20C00BD84((void ***)v15);
    v15[0] = &v25;
    sub_20BED2E10((void ***)v15);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v24);
    sub_20BFD265C(&v23);
  }
  else
  {
    v7 = **(uint64_t ***)(a1 + 16);
    if (v7)
      v7 = (uint64_t *)sub_20C25002C(v7, (uint64_t)a2);
    v8 = *(uint64_t **)a1;
    v9 = pxrInternal__aapl__pxrReserved__::SdfPathExpression::Nothing((pxrInternal__aapl__pxrReserved__::SdfPathExpression *)v7);
    v10 = v8[1];
    if (v10 >= v8[2])
    {
      v11 = sub_20C24FC58(v8, v9);
    }
    else
    {
      sub_20C00D1F0((_QWORD *)v8[1], v9);
      v11 = v10 + 96;
      v8[1] = v10 + 96;
    }
    v8[1] = v11;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v28);
  return sub_20BFD265C(&v27);
}

void sub_20C456888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v29;

  if (a23 < 0)
    operator delete(__p);
  *(_QWORD *)(v29 - 24) = &a15;
  sub_20C00E25C((void ***)(v29 - 24));
  *(_QWORD *)(v29 - 24) = &a12;
  sub_20C00D5A8((void ***)(v29 - 24));
  if (a9)
  {
    a10 = (uint64_t)a9;
    operator delete(a9);
  }
  a9 = &a29;
  sub_20C00BD84((void ***)&a9);
  a9 = &a26;
  sub_20BED2E10((void ***)&a9);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&a25);
  sub_20BFD265C(&a24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(v29 - 28));
  sub_20BFD265C((_DWORD *)(v29 - 32));
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *sub_20C45695C(unint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *result;
  void *v4;

  result = sub_20C4569A4();
  while (!__ldaxr(a1))
  {
    if (!__stlxr((unint64_t)result, a1))
      return result;
  }
  __clrex();
  if (result)
  {
    pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType::~UsdUsdFileFormatTokens_StaticTokenType(result);
    operator delete(v4);
  }
  return (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)atomic_load(a1);
}

pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *sub_20C4569A4()
{
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *v0;

  v0 = (pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType *)operator new(0x38uLL);
  pxrInternal__aapl__pxrReserved__::UsdUsdFileFormatTokens_StaticTokenType::UsdUsdFileFormatTokens_StaticTokenType(v0);
  return v0;
}

void sub_20C4569D0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4569E4(unint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t result;

  v2 = *a1;
  __dmb(0xBu);
  __dmb(0xBu);
  a1[65] = 0;
  v3 = sub_20BEB4B94(v2);
  do
  {
    v4 = 0;
    v5 = v3;
    v6 = a1[v3 + 1];
    if (v3-- > 1)
      v8 = v5;
    else
      v8 = 1;
    do
    {
      v9 = v6 + 24 * v4;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = (_QWORD *)(v9 + 16);
      v10 = (_QWORD *)v12;
      if (v12 >= 0x40)
      {
        do
        {
          *v11 = *v10;
          sub_20C456AB0((uint64_t)a1, (uint64_t)v10);
          v10 = (_QWORD *)*v11;
        }
        while (*v11 > 0x3FuLL);
      }
      ++v4;
    }
    while (!(v4 >> v8));
    result = sub_20C456AE0((uint64_t)a1, v5);
  }
  while (v5);
  __dmb(0xBu);
  *a1 = 1;
  return result;
}

uint64_t sub_20C456AB0(uint64_t a1, uint64_t a2)
{
  void *v3;

  sub_20C456B2C(a2 + 16);
  return tbb::internal::deallocate_via_handler_v3(a2, v3);
}

uint64_t sub_20C456AE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;
  uint64_t v5;

  v2 = a1 + 8 * a2;
  v5 = *(_QWORD *)(v2 + 8);
  v4 = (_QWORD *)(v2 + 8);
  result = v5;
  if (a2 < 8)
  {
    if (!a2)
      return result;
    if (a2 == 1)
      result = tbb::internal::deallocate_via_handler_v3(result, (void *)1);
  }
  else
  {
    result = tbb::internal::deallocate_via_handler_v3(result, (void *)a2);
  }
  *v4 = 0;
  return result;
}

_DWORD *sub_20C456B2C(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v2;

  v2 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  if (v2)
    sub_20C35C614(v2);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 4));
  return sub_20BFD265C((_DWORD *)a1);
}

void sub_20C456B64(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_20C456BE8((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_20C456BE8(uint64_t a1, uint64_t a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t result;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  v3 = *(unsigned int **)(a2 + 24);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  result = *(_QWORD *)(a2 + 8);
  if (result)
  {
    v8 = (unsigned int *)(result + 8);
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  }
  return result;
}

void sub_20C456C64(int a1, void **__p)
{
  if (__p)
  {
    if (*((char *)__p + 23) < 0)
      operator delete(*__p);
    operator delete(__p);
  }
}

uint64_t sub_20C456C9C(uint64_t *a1)
{
  pxrInternal__aapl__pxrReserved__ *v1;
  _BOOL8 HasConcurrency;
  uint64_t DetachedDispatcher;
  _QWORD *v4;
  pxrInternal__aapl__pxrReserved__ *v5;
  unint64_t v7[73];

  v1 = (pxrInternal__aapl__pxrReserved__ *)sub_20C456DC4((uint64_t)v7, a1);
  HasConcurrency = pxrInternal__aapl__pxrReserved__::WorkHasConcurrency(v1);
  if (HasConcurrency)
  {
    DetachedDispatcher = pxrInternal__aapl__pxrReserved__::Work_GetDetachedDispatcher((pxrInternal__aapl__pxrReserved__ *)HasConcurrency);
    v4 = sub_20C456EB4(DetachedDispatcher, (uint64_t *)v7);
    v5 = (pxrInternal__aapl__pxrReserved__ *)(**(uint64_t (***)(_QWORD, _QWORD *, uint64_t))*(v4 - 5))(*(v4 - 5), v4, (uint64_t)(v4 - 1));
    pxrInternal__aapl__pxrReserved__::Work_EnsureDetachedTaskProgress(v5);
  }
  else
  {
    sub_20C456D28();
  }
  return sub_20C4569E4(v7);
}

void sub_20C456D10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C4569E4((unint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20C456D28()
{
  unint64_t *Instance;
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  char v4;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v3);
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v1 = sub_20BEC5244(&v3, 0);
  v4 = 0;
  v2 = (_QWORD *)sub_20BEB5B80(Instance + 19, &v4);
  if (v2 != v1)
    pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr::EraseRange(Instance, v1, v2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v3);
}

void sub_20C456DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C456DC4(uint64_t a1, uint64_t *a2)
{
  _OWORD *v3;
  uint64_t i;

  v3 = (_OWORD *)(a1 + 528);
  for (i = 536; i != 584; i += 24)
    *(_QWORD *)(a1 + i) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  __dmb(0xBu);
  *(_QWORD *)a1 = 0;
  __dmb(0xBu);
  *(_QWORD *)(a1 + 520) = 0;
  *v3 = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_QWORD *)(a1 + 8) = v3;
  __dmb(0xBu);
  *(_QWORD *)a1 = 1;
  if ((uint64_t *)a1 != a2)
    sub_20BED6258((uint64_t *)a1, a2);
  return a1;
}

void sub_20C456E9C(_Unwind_Exception *a1)
{
  unint64_t *v1;

  sub_20C4569E4(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C456EB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 256);
  v7[0] = 0;
  v7[1] = v4;
  v5 = (_QWORD *)tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0x258uLL);
  *((_BYTE *)v5 - 11) = 1;
  *v5 = &unk_24C539958;
  sub_20C456DC4((uint64_t)(v5 + 1), a2);
  v5[74] = a1 + 264;
  return v5;
}

void sub_20C456F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  tbb::task *v9;

  tbb::internal::allocate_additional_child_of_proxy::free((tbb::internal::allocate_additional_child_of_proxy *)&a9, v9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C456F44(_QWORD *a1)
{
  *a1 = &unk_24C539958;
  sub_20C4569E4(a1 + 1);
  return a1;
}

void sub_20C456F7C(unint64_t *a1)
{
  *a1 = (unint64_t)&unk_24C539958;
  sub_20C4569E4(a1 + 1);
  operator delete(a1);
}

uint64_t sub_20C456FB4(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  sub_20C456D28();
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 592));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C457040(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C457054@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v4;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v5;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v6;
  uint64_t *v7;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *v9;
  _DWORD *v11[3];
  _QWORD v12[3];
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v13;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v14;
  void **v15;

  v6 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(a1 + 24);
  v4 = (uint64_t *)(a1 + 24);
  v5 = v6;
  v7 = v4 - 1;
  if (v6)
  {
    if (*(_BYTE *)(sub_20BEB47BC(v4) + 14))
      v5 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v7;
    else
      v5 = 0;
  }
  v14 = v5;
  sub_20BF1DD04((uint64_t *)&v14);
  if (*(_BYTE *)(a1 + 48))
  {
    v8 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(a1 + 40);
    if (v8)
    {
      if (*(_BYTE *)(sub_20BEB47BC((uint64_t *)(a1 + 40)) + 14))
        v8 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(a1 + 32);
      else
        v8 = 0;
    }
    v13 = v8;
    sub_20BF1DD04((uint64_t *)&v13);
  }
  else
  {
    sub_20C42EB08(v7, (uint64_t *)&v13);
  }
  if (*(_BYTE *)(a1 + 80))
  {
    memset(v12, 0, sizeof(v12));
    v9 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20BFB73DC((char *)v12, *(_QWORD **)(a1 + 56), *(_QWORD **)(a1 + 64), (uint64_t)(*(_QWORD *)(a1 + 64) - *(_QWORD *)(a1 + 56)) >> 4);
  }
  else
  {
    v9 = (pxrInternal__aapl__pxrReserved__::SdfPath *)sub_20C431728(v7);
  }
  sub_20C3407F4(v9, v11);
  pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiateStage((uint64_t *)&v14, &v13, (uint64_t)v12, v11, *(_DWORD *)(a1 + 88), a2);
  v15 = (void **)v11;
  sub_20BFD6F90(&v15);
  v11[0] = v12;
  sub_20BDE9EB0((void ***)v11);
  sub_20C103234(&v13);
  return sub_20C103234(&v14);
}

void sub_20C45717C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  void **v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;
  uint64_t v11;
  uint64_t v12;
  va_list va2;

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  v5 = va_arg(va1, void **);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v9 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  *(_QWORD *)(v3 - 40) = v2;
  sub_20BFD6F90((void ***)(v3 - 40));
  va_copy((va_list)v5, va1);
  sub_20BDE9EB0((void ***)va);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va2);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)(v3 - 48));
  _Unwind_Resume(a1);
}

void sub_20C4571D0(pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *a1)
{
  void *v1;

  sub_20C457464(a1);
  operator delete(v1);
}

uint64_t sub_20C4571E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  pxrInternal__aapl__pxrReserved__::UsdStage *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;

  v4 = a1 + 16;
  v5 = sub_20C39A7A8(a2);
  sub_20C1034E8(&v22, (uint64_t *)(v5 + 32));
  if (!sub_20BEB560C(v4, (uint64_t)&v22))
  {
    v8 = 0;
    goto LABEL_17;
  }
  v6 = *(unsigned __int8 *)(a1 + 48);
  if (!*(_BYTE *)(a1 + 48))
  {
    if (!*(_BYTE *)(a1 + 80))
    {
      v8 = 1;
      goto LABEL_17;
    }
    goto LABEL_8;
  }
  v7 = sub_20C39A7A8(a2);
  sub_20C1034E8(&v20, (uint64_t *)(v7 + 40));
  if (!sub_20BEB560C(a1 + 32, (uint64_t)&v20))
  {
    v8 = 0;
    goto LABEL_11;
  }
  if (*(_BYTE *)(a1 + 80))
  {
LABEL_8:
    v9 = (pxrInternal__aapl__pxrReserved__::UsdStage *)sub_20C39A7A8(a2);
    pxrInternal__aapl__pxrReserved__::UsdStage::GetPathResolverContext(v9, (uint64_t)v19);
    v8 = pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)(a1 + 56), v19);
    v24 = (void **)v19;
    sub_20BDE9EB0(&v24);
    if (!v6)
      goto LABEL_17;
    goto LABEL_11;
  }
  v8 = 1;
LABEL_11:
  v10 = v21;
  if (v21)
  {
    v11 = (unsigned int *)(v21 + 8);
    do
    {
      v12 = __ldxr(v11);
      v13 = v12 - 1;
    }
    while (__stlxr(v13, v11));
    if (!v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
LABEL_17:
  v14 = v23;
  if (v23)
  {
    v15 = (unsigned int *)(v23 + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  return v8;
}

void sub_20C457330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int *a13, uint64_t a14, unsigned int *a15)
{
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;

  *(_QWORD *)(v17 - 40) = v15;
  sub_20BDE9EB0((void ***)(v17 - 40));
  if (v16)
  {
    if (a13)
    {
      v19 = a13 + 2;
      do
      {
        v20 = __ldxr(v19);
        v21 = v20 - 1;
      }
      while (__stlxr(v21, v19));
      if (!v21)
        (*(void (**)(unsigned int *))(*(_QWORD *)a13 + 8))(a13);
    }
  }
  if (a15)
  {
    v22 = a15 + 2;
    do
    {
      v23 = __ldxr(v22);
      v24 = v23 - 1;
    }
    while (__stlxr(v24, v22));
    if (!v24)
      (*(void (**)(unsigned int *))(*(_QWORD *)a15 + 8))(a15);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20C4573C0(uint64_t a1, void *lpsrc)
{
  uint64_t result;
  uint64_t v4;

  if (result)
  {
    v4 = result;
    result = sub_20BEB560C(a1 + 16, result + 16);
    if ((_DWORD)result)
    {
      if (*(_BYTE *)(a1 + 48))
      {
        if (!*(_BYTE *)(v4 + 48))
          return 0;
        result = sub_20BEB560C(a1 + 32, v4 + 32);
        if (!(_DWORD)result)
          return result;
      }
      if (*(_BYTE *)(a1 + 80))
      {
        if (*(_BYTE *)(v4 + 80))
          return pxrInternal__aapl__pxrReserved__::ArResolverContext::operator==((uint64_t *)(a1 + 56), (uint64_t *)(v4 + 56));
        return 0;
      }
      return 1;
    }
  }
  return result;
}

void sub_20C457464(pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *this)
{
  unsigned int *v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int v8;
  unsigned int v9;
  void **v10;

  *(_QWORD *)this = &unk_24C5399A0;
  if (*((_BYTE *)this + 80))
  {
    v10 = (void **)((char *)this + 56);
    sub_20BDE9EB0(&v10);
  }
  if (*((_BYTE *)this + 48))
  {
    v2 = (unsigned int *)*((_QWORD *)this + 5);
    if (v2)
    {
      v3 = v2 + 2;
      do
      {
        v4 = __ldxr(v3);
        v5 = v4 - 1;
      }
      while (__stlxr(v5, v3));
      if (!v5)
        (*(void (**)(unsigned int *))(*(_QWORD *)v2 + 8))(v2);
    }
  }
  v6 = (unsigned int *)*((_QWORD *)this + 3);
  if (v6)
  {
    v7 = v6 + 2;
    do
    {
      v8 = __ldxr(v7);
      v9 = v8 - 1;
    }
    while (__stlxr(v9, v7));
    if (!v9)
      (*(void (**)(unsigned int *))(*(_QWORD *)v6 + 8))(v6);
  }
  pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::~UsdStageCacheRequest(this);
}

uint64_t sub_20C457518(uint64_t a1, int a2, _QWORD *a3, _QWORD **a4)
{
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  *(_QWORD *)a1 = &unk_24C5399A0;
  *(_QWORD *)(a1 + 8) = 0;
  v6 = a3[1];
  *(_QWORD *)(a1 + 16) = *a3;
  *(_QWORD *)(a1 + 24) = v6;
  if (v6)
  {
    v7 = (unsigned int *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BFB73DC((char *)(a1 + 56), *a4, a4[1], ((char *)a4[1] - (char *)*a4) >> 4);
  *(_BYTE *)(a1 + 80) = 1;
  *(_DWORD *)(a1 + 88) = a2;
  return a1;
}

void sub_20C4575AC(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *v1;
  uint64_t *v2;

  if (*((_BYTE *)v1 + 48))
    sub_20C96BCDC((uint64_t)v1);
  sub_20C96BCB0(v2);
  pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::~UsdStageCacheRequest(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4575D8(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4, _QWORD **a5)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;

  v7 = *a3;
  *(_QWORD *)a1 = &unk_24C5399A0;
  *(_QWORD *)(a1 + 8) = 0;
  v8 = a3[1];
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  if (v8)
  {
    v9 = (unsigned int *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  v12 = *a4;
  v11 = a4[1];
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 32) = v12;
  if (v11)
  {
    v13 = (unsigned int *)(v11 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 48) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  sub_20BFB73DC((char *)(a1 + 56), *a5, a5[1], ((char *)a5[1] - (char *)*a5) >> 4);
  *(_BYTE *)(a1 + 80) = 1;
  *(_DWORD *)(a1 + 88) = a2;
  return a1;
}

void sub_20C45769C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest *v1;
  uint64_t *v2;
  uint64_t *v3;

  if (*((_BYTE *)v1 + 48))
    sub_20C96BCB0(v3);
  sub_20C96BCB0(v2);
  pxrInternal__aapl__pxrReserved__::UsdStageCacheRequest::~UsdStageCacheRequest(v1);
  _Unwind_Resume(a1);
}

void sub_20C4576C8(pxrInternal__aapl__pxrReserved__::TfToken *a1@<X0>, _QWORD *a2@<X1>, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3@<X2>, unsigned int **a4@<X8>)
{
  uint64_t *EmptyString;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v8;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v9;
  int Variability;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v11;
  char IsCustom;
  uint64_t TypeName;

  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  v8 = sub_20C0AEAB8(a3);
  TypeName = pxrInternal__aapl__pxrReserved__::SdfPropertySpec::GetTypeName(v8);
  v9 = sub_20C0AEAB8(a3);
  Variability = pxrInternal__aapl__pxrReserved__::SdfPropertySpec::GetVariability(v9);
  v11 = sub_20C0AEAB8(a3);
  IsCustom = pxrInternal__aapl__pxrReserved__::SdfPropertySpec::IsCustom(v11);
  pxrInternal__aapl__pxrReserved__::SdfAttributeSpec::New((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)a1, (uint64_t)EmptyString, (pxrInternal__aapl__pxrReserved__::SdfValueTypeName *)&TypeName, Variability, IsCustom, a4);
}

void sub_20C457768(pxrInternal__aapl__pxrReserved__::TfToken *a1@<X0>, _QWORD *a2@<X1>, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a3@<X2>, pxrInternal__aapl__pxrReserved__::Sdf_Identity **a4@<X8>)
{
  uint64_t *EmptyString;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v8;
  unsigned __int8 IsCustom;
  pxrInternal__aapl__pxrReserved__::Sdf_Identity **v10;
  int Variability;

  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0)
    EmptyString = (uint64_t *)((*a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString(a1);
  v8 = sub_20C0B22EC(a3);
  IsCustom = pxrInternal__aapl__pxrReserved__::SdfPropertySpec::IsCustom(v8);
  v10 = sub_20C0B22EC(a3);
  Variability = pxrInternal__aapl__pxrReserved__::SdfPropertySpec::GetVariability(v10);
  pxrInternal__aapl__pxrReserved__::SdfRelationshipSpec::New((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)a1, (uint64_t)EmptyString, IsCustom, Variability, a4);
}

BOOL sub_20C4577E8(uint64_t a1, uint64_t a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t (****a5)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v10;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v11;
  int v12;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v13;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v22;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v24;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v25;
  unint64_t *Instance;
  pxrInternal__aapl__pxrReserved__::SdfPath *v27;
  pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v32;
  _BYTE *v33;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v38;
  unsigned int v39;
  unsigned int *v40;
  unsigned int v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int *v44;
  unsigned int v45;
  pxrInternal__aapl__pxrReserved__ *v46;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  pxrInternal__aapl__pxrReserved__ *v48;
  unint64_t *v49;
  unint64_t v50;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v51;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v52;
  unsigned int v53;
  unsigned int *v54;
  unsigned int v55;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v56;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v57;
  uint64_t *v58;
  unsigned int *v59;
  unsigned int v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v77;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v79;
  _QWORD *Layers;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t *v85;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v86;
  unsigned int *v87;
  unsigned int v88;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v89;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v90;
  uint64_t *v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD *v100;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  pxrInternal__aapl__pxrReserved__::SdfPath *v106;
  uint64_t v107;
  char *v108;
  _QWORD *v109;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v110;
  uint64_t *v111;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v112;
  _QWORD *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v119;
  unsigned int *v120;
  unsigned int v121;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  _QWORD *v123;
  pxrInternal__aapl__pxrReserved__::SdfPath *v124;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v125;
  int HasField;
  uint64_t v127;
  BOOL v128;
  pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *v130;
  uint64_t *v131;
  pxrInternal__aapl__pxrReserved__::SdfPath *v132;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v133;
  unsigned int *v134;
  unsigned int v135;
  unsigned int *v136;
  unsigned int v137;
  _BYTE *v139;
  int v140;
  char v141;
  unsigned int *v142;
  unsigned int v143;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v144;
  int v145;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v146;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v147;
  unsigned int *v148;
  unsigned int v149;
  unsigned int *v150;
  unsigned int v151;
  unsigned int *v152;
  unsigned int v153;
  unsigned int *v154;
  unsigned int v155;
  _QWORD *v156;
  pxrInternal__aapl__pxrReserved__::SdfPath *v157;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v158;
  int v159;
  int v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  _BOOL8 v164;
  unint64_t v166;
  int v167;
  pxrInternal__aapl__pxrReserved__ *v168;
  int v169;
  int v170;
  uint64_t v171;
  int v172;
  int v173;
  uint64_t v174;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v175;
  int v176;
  int v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;

  v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v166);
  v12 = *(_DWORD *)a2;
  if (*(int *)a2 >= 2)
  {
    if (v12 == 3)
    {
      v13 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v13)
        v13 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v13 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v179);
        v35 = *((_QWORD *)&v179 + 1);
        if (!*((_QWORD *)&v179 + 1) || (*(_BYTE *)(*((_QWORD *)&v179 + 1) + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)&v179 + 1), v34);
        v36 = *(unint64_t **)(v35 + 24);
        PrimDefinition = atomic_load(v36 + 7);
        if (!PrimDefinition)
          PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v36);
        v38 = sub_20C398E78(&v179);
        *(_QWORD *)&v185 = 0;
        v39 = sub_20C45A220(PrimDefinition, v38, a3, &v185, *a5);
        *((_BYTE *)a5 + 40) = v39;
        if ((v185 & 7) != 0)
        {
          v40 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
          do
            v41 = __ldxr(v40);
          while (__stlxr(v41 - 2, v40));
          v39 = *((unsigned __int8 *)a5 + 40);
        }
        if (!v39)
        {
          *(_QWORD *)&v185 = 0;
          sub_20C458924((uint64_t)&v179, a3, (uint64_t *)&v185, a5);
          if ((v185 & 7) != 0)
          {
            v42 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
            do
              v43 = __ldxr(v42);
            while (__stlxr(v43 - 2, v42));
          }
        }
        if ((BYTE8(v180) & 7) != 0)
        {
          v44 = (unsigned int *)(*((_QWORD *)&v180 + 1) & 0xFFFFFFFFFFFFFFF8);
          do
            v45 = __ldxr(v44);
          while (__stlxr(v45 - 2, v44));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v180 + 1);
        sub_20BFD265C(&v180);
        v46 = (pxrInternal__aapl__pxrReserved__ *)*((_QWORD *)&v179 + 1);
        if (!*((_QWORD *)&v179 + 1))
        {
LABEL_179:
          if (*((_BYTE *)a5 + 40))
          {
            Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
            if (Instance)
              goto LABEL_210;
            goto LABEL_209;
          }
LABEL_212:
          v164 = 0;
          goto LABEL_214;
        }
LABEL_178:
        sub_20C35C614(v46);
        goto LABEL_179;
      }
      v14 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v14)
        v14 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v14 + 58) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C3AD760(a2, (uint64_t)&v167);
        v48 = v168;
        if (!v168 || (*((_BYTE *)v168 + 57) & 8) != 0)
          pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v168, v47);
        v49 = (unint64_t *)*((_QWORD *)v48 + 3);
        v50 = atomic_load(v49 + 7);
        if (!v50)
          v50 = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v49);
        v51 = sub_20C398E78(&v167);
        v52 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v52)
          v52 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        *(_QWORD *)&v179 = 0;
        v53 = sub_20C45A220(v50, v51, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v52 + 464), &v179, *a5);
        *((_BYTE *)a5 + 40) = v53;
        if ((v179 & 7) != 0)
        {
          v54 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
          do
            v55 = __ldxr(v54);
          while (__stlxr(v55 - 2, v54));
          v53 = *((unsigned __int8 *)a5 + 40);
        }
        if (!v53)
        {
          v56 = sub_20C398E78(&v167);
          sub_20C35C4F8((uint64_t)&v174, (uint64_t *)&v168, &v169);
          v58 = (uint64_t *)sub_20C368FF0((uint64_t)&v174, v57);
          pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v58, 6u, (uint64_t *)&v185);
          v183 = v185;
          v184 = v186;
          v179 = v186;
          v180 = v186;
          v181 = v185;
          v182 = v185;
          if ((v178 & 7) != 0)
          {
            v59 = (unsigned int *)(v178 & 0xFFFFFFFFFFFFFFF8);
            do
              v60 = __ldxr(v59);
            while (__stlxr(v60 - 2, v59));
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v177);
          sub_20BFD265C(&v176);
          if (v175)
            sub_20C35C614(v175);
          if (v180 != v182)
          {
            while (1)
            {
              v63 = sub_20C444D70(&v179, v61, v62);
              v64 = v63[3] - 1;
              *(_QWORD *)&v185 = v63[2];
              *((_QWORD *)&v185 + 1) = v64;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185) & 1) == 0)
              {
                v67 = sub_20C444D70(&v179, v65, v66);
                v68 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v67[3] - 1);
                v174 = v67[2];
                v175 = v68;
                if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v174) & 1) != 0)
                  break;
              }
LABEL_91:
              sub_20C444E44(&v179);
              if (v180 == v182)
                goto LABEL_174;
            }
            v71 = sub_20C444D70(&v179, v69, v70);
            v72 = v71[3] - 1;
            *(_QWORD *)&v185 = v71[2];
            *((_QWORD *)&v185 + 1) = v72;
            Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
            pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(Path, v56, &v172);
            v76 = sub_20C444D70(&v179, v74, v75);
            v77 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v76[3] - 1);
            v174 = v76[2];
            v175 = v77;
            LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v174);
            v79 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
            Layers = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v79);
            *(_QWORD *)&v185 = Layers[1];
            *((_QWORD *)&v185 + 1) = v185;
            *(_QWORD *)&v186 = *Layers;
            *((_QWORD *)&v186 + 1) = v186;
            while (1)
            {
              if (*((_QWORD *)&v185 + 1) == *((_QWORD *)&v186 + 1))
              {
                pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v173);
                sub_20BFD265C(&v172);
                goto LABEL_91;
              }
              sub_20C45A2E0(&v179, v81, v82);
              v85 = (uint64_t *)sub_20C22F36C((uint64_t)&v185, v83, v84);
              v86 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v86)
                v86 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              v174 = 0;
              if (sub_20C45A368(a5, v85, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v172, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v86 + 464), &v174))*((_BYTE *)a5 + 40) = 1;
              if ((v174 & 7) != 0)
              {
                v87 = (unsigned int *)(v174 & 0xFFFFFFFFFFFFFFF8);
                do
                  v88 = __ldxr(v87);
                while (__stlxr(v88 - 2, v87));
              }
              if (*((_BYTE *)a5 + 40))
                break;
              sub_20C22F508((uint64_t)&v185);
            }
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v173);
            sub_20BFD265C(&v172);
          }
        }
LABEL_174:
        if ((v171 & 7) != 0)
        {
          v152 = (unsigned int *)(v171 & 0xFFFFFFFFFFFFFFF8);
          do
            v153 = __ldxr(v152);
          while (__stlxr(v153 - 2, v152));
        }
LABEL_177:
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v170);
        sub_20BFD265C(&v169);
        v46 = v168;
        if (!v168)
          goto LABEL_179;
        goto LABEL_178;
      }
    }
    v15 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v15)
      v15 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v15 + 8) & 0xFFFFFFFFFFFFFFF8))
    {
      sub_20C3AD664(a2, (uint64_t)&v167);
      pxrInternal__aapl__pxrReserved__::UsdStage::_GetSchemaProperty((const pxrInternal__aapl__pxrReserved__::UsdProperty *)&v167, (uint64_t)&v179);
      v16 = *((_QWORD *)&v179 + 1);
      if ((v179 & 7) != 0)
      {
        v17 = (unsigned int *)(v179 & 0xFFFFFFFFFFFFFFF8);
        do
          v18 = __ldxr(v17);
        while (__stlxr(v18 - 2, v17));
      }
      if (v16)
      {
        LOBYTE(v179) = 0;
        sub_20C45A3D8((uint64_t)*a5, &v179);
        *((_BYTE *)a5 + 40) = 1;
      }
      else
      {
        v89 = sub_20C398E78(&v167);
        sub_20C35C4F8((uint64_t)&v174, (uint64_t *)&v168, &v169);
        v91 = (uint64_t *)sub_20C368FF0((uint64_t)&v174, v90);
        pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetNodeRange(v91, 6u, (uint64_t *)&v185);
        v183 = v185;
        v184 = v186;
        v179 = v186;
        v180 = v186;
        v181 = v185;
        v182 = v185;
        if ((v178 & 7) != 0)
        {
          v92 = (unsigned int *)(v178 & 0xFFFFFFFFFFFFFFF8);
          do
            v93 = __ldxr(v92);
          while (__stlxr(v93 - 2, v92));
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v177);
        sub_20BFD265C(&v176);
        if (v175)
          sub_20C35C614(v175);
        if (v180 != v182)
        {
          while (1)
          {
            v96 = sub_20C444D70(&v179, v94, v95);
            v97 = v96[3] - 1;
            *(_QWORD *)&v185 = v96[2];
            *((_QWORD *)&v185 + 1) = v97;
            if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsInert((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185) & 1) == 0)
            {
              v100 = sub_20C444D70(&v179, v98, v99);
              v101 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v100[3] - 1);
              v174 = v100[2];
              v175 = v101;
              if ((pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v174) & 1) != 0)
                break;
            }
LABEL_113:
            sub_20C444E44(&v179);
            if (v180 == v182)
              goto LABEL_152;
          }
          v104 = sub_20C444D70(&v179, v102, v103);
          v105 = v104[3] - 1;
          *(_QWORD *)&v185 = v104[2];
          *((_QWORD *)&v185 + 1) = v105;
          v106 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
          pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v106, v89, &v172);
          v109 = sub_20C444D70(&v179, v107, v108);
          v110 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)(v109[3] - 1);
          v174 = v109[2];
          v175 = v110;
          v111 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v174);
          v112 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v111);
          v113 = (_QWORD *)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v112);
          *(_QWORD *)&v185 = v113[1];
          *((_QWORD *)&v185 + 1) = v185;
          *(_QWORD *)&v186 = *v113;
          *((_QWORD *)&v186 + 1) = v186;
          while (1)
          {
            if (*((_QWORD *)&v185 + 1) == *((_QWORD *)&v186 + 1))
            {
              pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v173);
              sub_20BFD265C(&v172);
              goto LABEL_113;
            }
            sub_20C45A2E0(&v179, v114, v115);
            v118 = (uint64_t *)sub_20C22F36C((uint64_t)&v185, v116, v117);
            v119 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            if (!v119)
              v119 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
            v174 = 0;
            if (sub_20C45A368(a5, v118, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v172, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v119 + 64), &v174))*((_BYTE *)a5 + 40) = 1;
            if ((v174 & 7) != 0)
            {
              v120 = (unsigned int *)(v174 & 0xFFFFFFFFFFFFFFF8);
              do
                v121 = __ldxr(v120);
              while (__stlxr(v121 - 2, v120));
            }
            if (*((_BYTE *)a5 + 40))
              break;
            sub_20C22F508((uint64_t)&v185);
          }
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v173);
          sub_20BFD265C(&v172);
        }
      }
LABEL_152:
      if ((v171 & 7) != 0)
      {
        v142 = (unsigned int *)(v171 & 0xFFFFFFFFFFFFFFF8);
        do
          v143 = __ldxr(v142);
        while (__stlxr(v143 - 2, v142));
      }
      goto LABEL_177;
    }
    goto LABEL_34;
  }
  if (v12 == 1)
  {
    v19 = *(_QWORD *)(a2 + 8);
    if (!v19 || (v20 = *(_QWORD *)(v19 + 56), (v20 & 0x800) != 0))
    {
      v10 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a2 + 8), v11);
      v20 = *(_QWORD *)(v19 + 56);
    }
    v21 = *(_BYTE **)(a2 + 8);
    if ((v20 & 0x4000) == 0)
    {
      v22 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v22)
        v22 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v22 + 56) & 0xFFFFFFFFFFFFFFF8))
      {
        PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v21);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v179, PrimIndex, 1);
        if (v180 == v181)
          goto LABEL_207;
        while (1)
        {
          v174 = 0;
          v123 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v182);
          v185 = v180;
          v124 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
          v125 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v125)
            v125 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v185 + 1) = &v174;
          *(_QWORD *)&v186 = &stru_24C51BCE0;
          WORD4(v186) = 0;
          *(_QWORD *)&v185 = &unk_24C5286B0;
          HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v123, v124, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v125 + 448), (uint64_t (***)(_QWORD, uint64_t))&v185);
          v127 = v174;
          v128 = HasField && BYTE8(v186) == 0;
          if (v128 && v174 != 0)
          {
            v130 = (pxrInternal__aapl__pxrReserved__::SdfTokens_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            if (!v130)
              v130 = sub_20BFE0E90(&pxrInternal__aapl__pxrReserved__::SdfTokens);
            v127 = v174;
            if ((v174 & 0xFFFFFFFFFFFFFFF8) != (*(_QWORD *)v130 & 0xFFFFFFFFFFFFFFF8))
            {
              v131 = (uint64_t *)v182;
              v185 = v180;
              v132 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
              v133 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              if (!v133)
                v133 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
              *(_QWORD *)&v185 = 0;
              if (sub_20C45A368(a5, v131, v132, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v133 + 448), (uint64_t *)&v185))*((_BYTE *)a5 + 40) = 1;
              if ((v185 & 7) != 0)
              {
                v134 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
                do
                  v135 = __ldxr(v134);
                while (__stlxr(v135 - 2, v134));
              }
              v127 = v174;
              if (*((_BYTE *)a5 + 40))
                break;
            }
          }
          if ((v127 & 7) != 0)
          {
            v136 = (unsigned int *)(v127 & 0xFFFFFFFFFFFFFFF8);
            do
              v137 = __ldxr(v136);
            while (__stlxr(v137 - 2, v136));
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v179);
          if ((_QWORD)v180 == (_QWORD)v181 && *((_QWORD *)&v180 + 1) == *((_QWORD *)&v181 + 1))
            goto LABEL_207;
        }
        if ((v174 & 7) != 0)
        {
          v154 = (unsigned int *)(v174 & 0xFFFFFFFFFFFFFFF8);
          do
            v155 = __ldxr(v154);
          while (__stlxr(v155 - 2, v154));
        }
LABEL_207:
        if (*((_BYTE *)a5 + 40))
        {
          Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (Instance)
            goto LABEL_210;
          goto LABEL_209;
        }
        goto LABEL_212;
      }
      v23 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v23)
        v23 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v23 + 39) & 0xFFFFFFFFFFFFFFF8))
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v21 + 16))
          || (v21[57] & 0x10) != 0
          && pxrInternal__aapl__pxrReserved__::SdfPath::IsRootPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v21 + 16)))
        {
LABEL_146:
          v139 = a5;
          v140 = 0;
          goto LABEL_206;
        }
        v144 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v21);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v179, v144, 1);
        if ((_QWORD)v180 == (_QWORD)v181)
        {
          v145 = 1;
          if (*((_QWORD *)&v180 + 1) == *((_QWORD *)&v181 + 1))
          {
LABEL_161:
            v139 = a5;
            v140 = v145;
            goto LABEL_206;
          }
        }
        v145 = 1;
        while (1)
        {
          LODWORD(v174) = 1;
          v156 = (_QWORD *)sub_20C0EEAF8((uint64_t *)v182);
          v185 = v180;
          v157 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
          v158 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          if (!v158)
            v158 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
          *((_QWORD *)&v185 + 1) = &v174;
          *(_QWORD *)&v186 = &stru_24C527CB0;
          WORD4(v186) = 0;
          *(_QWORD *)&v185 = &unk_24C539DB8;
          v159 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v156, v157, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v158 + 312), (uint64_t (***)(_QWORD, uint64_t))&v185);
          if (BYTE8(v186))
            v160 = 0;
          else
            v160 = v159;
          if (v160 == 1 && (_DWORD)v174 != 1)
          {
            if (!(_DWORD)v174)
              goto LABEL_146;
            v185 = v180;
            if (!(_QWORD)v180 || *((_QWORD *)&v180 + 1) == -1)
            {
LABEL_205:
              v139 = a5;
              v140 = 2;
LABEL_206:
              sub_20C45A43C(v139, v140);
              goto LABEL_207;
            }
            while (pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetArcType((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185) != 1
                 || pxrInternal__aapl__pxrReserved__::PcpNodeRef::IsDueToAncestor((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185))
            {
              *(_QWORD *)&v185 = pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetParentNode((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v185);
              *((_QWORD *)&v185 + 1) = v161;
              if (!(_QWORD)v185 || v161 == -1)
                goto LABEL_205;
            }
            v145 = 2;
          }
          pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v179);
          if (v180 == v181)
            goto LABEL_161;
        }
      }
      v24 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v24)
        v24 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*((_QWORD *)v24 + 26) & 0xFFFFFFFFFFFFFFF8))
      {
        sub_20C4445EC((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v21, 1, a5);
        goto LABEL_207;
      }
      v25 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v25)
        v25 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if ((*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF8) == (*(_QWORD *)v25 & 0xFFFFFFFFFFFFFFF8))
      {
        v146 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v21);
        pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)&v179, v146, 1);
        *(_QWORD *)&v185 = 0;
        v147 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v147)
          v147 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v174 = 0;
        sub_20C45A4AC((uint64_t)v21, (const pxrInternal__aapl__pxrReserved__::TfToken *)&v185, v147, &v174, 1, (uint64_t)&v179, a5);
        if ((v174 & 7) != 0)
        {
          v148 = (unsigned int *)(v174 & 0xFFFFFFFFFFFFFFF8);
          do
            v149 = __ldxr(v148);
          while (__stlxr(v149 - 2, v148));
        }
        if ((v185 & 7) != 0)
        {
          v150 = (unsigned int *)(v185 & 0xFFFFFFFFFFFFFFF8);
          do
            v151 = __ldxr(v150);
          while (__stlxr(v151 - 2, v150));
        }
        goto LABEL_207;
      }
      goto LABEL_34;
    }
    v27 = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v10);
    v28 = (pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v21);
    pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetRootNode(v28);
    *(_QWORD *)&v179 = v29;
    *((_QWORD *)&v179 + 1) = v30;
    if (*(_QWORD *)(a1 + 40))
    {
      v31 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v179);
      v32 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v31);
      if (**(_QWORD **)pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetLayers(v32) == *(_QWORD *)(a1 + 40))
      {
        v141 = sub_20C45A368(a5, (uint64_t *)(a1 + 40), v27, a3, a4);
        v33 = a5 + 5;
        if ((v141 & 1) != 0)
        {
LABEL_148:
          *v33 = 1;
          goto LABEL_149;
        }
        if (*v33)
        {
LABEL_149:
          Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
          if (Instance)
            goto LABEL_210;
          goto LABEL_209;
        }
      }
    }
    if (!sub_20C45A368(a5, (uint64_t *)(a1 + 32), v27, a3, a4))
      goto LABEL_212;
    v33 = a5 + 5;
    goto LABEL_148;
  }
LABEL_34:
  if (!sub_20C458924(a2, a3, a4, a5))
    goto LABEL_212;
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (Instance)
    goto LABEL_210;
LABEL_209:
  Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
LABEL_210:
  v162 = v166;
  v163 = atomic_load(Instance + 18);
  v164 = v162 >= v163
      || pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v166, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
LABEL_214:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v166);
  return v164;
}

void sub_20C458680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v21;
  unsigned int *v22;
  unsigned int v23;

  v21 = *(_QWORD *)(v19 - 112);
  if ((v21 & 7) != 0)
  {
    v22 = (unsigned int *)(v21 & 0xFFFFFFFFFFFFFFF8);
    do
      v23 = __ldxr(v22);
    while (__stlxr(v23 - 2, v22));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&a9);
  _Unwind_Resume(a1);
}

BOOL sub_20C4588B4(double *a1, pxrInternal__aapl__pxrReserved__::UsdTimeCode *this)
{
  return *a1 != *(double *)this;
}

uint64_t sub_20C458924(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988DD0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988DD0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988DC8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988DD0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988DC8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C45A4AC((uint64_t)v8, v10, a2, a3, 1, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C45A650((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C45ACB4((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C459DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C45A220(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, _QWORD *a4, uint64_t (***a5)(_QWORD, uint64_t))
{
  if (*a4)
    return sub_20C45A280(a1, a2, a3, a4, a5);
  else
    return sub_20C45A234(a1, a2, a3, a5);
}

_QWORD *sub_20C45A234(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (***a4)(_QWORD, uint64_t))
{
  _QWORD *result;

  result = sub_20BF2B2B4((_QWORD *)(a1 + 16), a2);
  if (result)
    return (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfLayer::HasField((_QWORD *)result[3], (pxrInternal__aapl__pxrReserved__::SdfPath *)(result + 4), a3, a4);
  return result;
}

_QWORD *sub_20C45A280(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, _QWORD *a4, uint64_t (***a5)(_QWORD, uint64_t))
{
  _QWORD *result;

  result = sub_20BF2B2B4((_QWORD *)(a1 + 16), a2);
  if (result)
    return (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey(result[3], (uint64_t)(result + 4), a3, a4, a5);
  return result;
}

uint64_t sub_20C45A2E0(_QWORD *a1, uint64_t a2, char *a3)
{
  uint64_t result;
  _QWORD v6[4];
  char v7;
  int v8;

  result = a1[2];
  if (result == a1[6] && a1[3] == a1[7])
  {
    v6[0] = "tf/iterator.h";
    v6[1] = "operator*";
    v6[2] = 271;
    v6[3] = "Reference pxrInternal__aapl__pxrReserved__::TfIterator<std::pair<pxrInternal__aapl__pxrReserved__::PcpNodeIt"
            "erator, pxrInternal__aapl__pxrReserved__::PcpNodeIterator>, true>::operator*() [T = std::pair<pxrInternal__a"
            "apl__pxrReserved__::PcpNodeIterator, pxrInternal__aapl__pxrReserved__::PcpNodeIterator>, Reverse = true]";
    v7 = 0;
    v8 = 4;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper *)v6, (pxrInternal__aapl__pxrReserved__ *)"iterator exhausted", a3);
  }
  return result;
}

void sub_20C45A360()
{
  JUMPOUT(0x20C45A30CLL);
}

uint64_t sub_20C45A368(uint64_t (****a1)(_QWORD, uint64_t), uint64_t *a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, uint64_t *a5)
{
  uint64_t v9;
  _QWORD *v10;

  v9 = *a5;
  v10 = (_QWORD *)sub_20C0EEAF8(a2);
  if (v9)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey((uint64_t)v10, (uint64_t)a3, a4, a5, *a1);
  else
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v10, a3, a4, *a1);
}

BOOL sub_20C45A3D8(uint64_t a1, _BYTE *a2)
{
  int v4;

  v4 = strcmp((const char *)(*(_QWORD *)(MEMORY[0x24BEDB770] + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    **(_BYTE **)(a1 + 8) = *a2;
  return v4 == 0;
}

uint64_t sub_20C45A43C(_BYTE *a1, int a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)a1;
  result = strcmp((const char *)(0x800000020CABC3EELL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if ((_DWORD)result)
    *(_BYTE *)(v4 + 25) = 1;
  else
    **(_DWORD **)(v4 + 8) = a2;
  a1[40] = 1;
  return result;
}

BOOL sub_20C45A4AC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t (****a7)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  _BOOL8 v17;
  int v19;
  int v20;
  int v21;
  int v22;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (i = 1;
        *(_QWORD *)(a6 + 16) != *(_QWORD *)(a6 + 32) || *(_QWORD *)(a6 + 24) != *(_QWORD *)(a6 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_20C453680(a6, a2, &v19);
      sub_20BFD3EBC(&v21, &v19);
      sub_20BFD3F10(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
    }
    if (sub_20C45A368(a7, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      v17 = 1;
      *((_BYTE *)a7 + 40) = 1;
      goto LABEL_19;
    }
    if (*((_BYTE *)a7 + 40))
    {
      v17 = 1;
      goto LABEL_19;
    }
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *((_BYTE *)a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *a7);
  }
  v17 = *((_BYTE *)a7 + 40) != 0;
LABEL_19:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  return v17;
}

void sub_20C45A628(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C45A650(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C45AB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C45ACB4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C45B1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C45B318(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, _QWORD *a4, uint64_t a5)
{
  unint64_t *v9;
  unint64_t PrimDefinition;
  _QWORD *result;

  v9 = *(unint64_t **)(a1 + 24);
  PrimDefinition = atomic_load(v9 + 7);
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v9);
  result = sub_20C45A220(PrimDefinition, a2, a3, a4, *(uint64_t (****)(_QWORD, uint64_t))a5);
  *(_BYTE *)(a5 + 40) = (_BYTE)result;
  return result;
}

uint64_t sub_20C45B378(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C45B3D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xD79435E50D7943)
    v9 = 0x1AF286BCA1AF286;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C451754(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[152 * v4];
  v16 = &v10[152 * v9];
  sub_20C031ADC((uint64_t)v14, a2);
  v15 = v14 + 152;
  sub_20C45B4F4(a1, &v13);
  v11 = a1[1];
  sub_20C45B724(&v13);
  return v11;
}

void sub_20C45B4E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45B724((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45B4F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45B568((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C45B568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 152;
      sub_20C451850(a1, v7 - 152, v9);
      v7 = *((_QWORD *)&v16 + 1) - 152;
      *((_QWORD *)&v16 + 1) -= 152;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45B61C((uint64_t)v13);
  return v11;
}

uint64_t sub_20C45B61C(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C45B650((uint64_t *)a1);
  return a1;
}

void sub_20C45B650(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD **)(a1[2] + 8);
  v2 = *(_QWORD **)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C45B6A0(v3, v1);
      v1 += 19;
    }
    while (v1 != v2);
  }
}

void sub_20C45B6A0(uint64_t a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = (void *)a2[16];
  if (v3)
  {
    a2[17] = v3;
    operator delete(v3);
  }
  v4 = (void *)a2[13];
  if (v4)
  {
    a2[14] = v4;
    operator delete(v4);
  }
  v5 = (void *)a2[10];
  if (v5)
  {
    a2[11] = v5;
    operator delete(v5);
  }
  v6 = (void *)a2[7];
  if (v6)
  {
    a2[8] = v6;
    operator delete(v6);
  }
  v7 = (void *)a2[4];
  if (v7)
  {
    a2[5] = v7;
    operator delete(v7);
  }
  v8 = (void *)a2[1];
  if (v8)
  {
    a2[2] = v8;
    operator delete(v8);
  }
}

void **sub_20C45B724(void **a1)
{
  sub_20C45B754(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C45B754(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 152;
    sub_20C45B6A0(v4, (_QWORD *)(i - 152));
  }
}

uint64_t sub_20C45B798(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (sub_20BFE4F24((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    v4 = a2[1];
    if ((v4 & 4) != 0)
      v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v5 = *a2;
    sub_20C31B64C(*(char **)(a1 + 8), v5);
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C45B818(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t result;
  char v12[8];
  void *v13[2];
  uint64_t v14;
  void *v15[2];
  uint64_t v16;
  void *v17[2];
  uint64_t v18;
  void *v19[2];
  uint64_t v20;
  void *__p[2];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  if (sub_20BFE4F24((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    sub_20C45BA40(a2, v12);
    v4 = *(_QWORD *)(a1 + 8);
    *(_BYTE *)v4 = v12[0];
    v5 = *(void **)(v4 + 8);
    if (v5)
    {
      *(_QWORD *)(v4 + 16) = v5;
      operator delete(v5);
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
    }
    v6 = *(void **)(v4 + 32);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)v13;
    *(_QWORD *)(v4 + 24) = v14;
    v13[0] = 0;
    v13[1] = 0;
    v14 = 0;
    if (v6)
    {
      *(_QWORD *)(v4 + 40) = v6;
      operator delete(v6);
      *(_QWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      *(_QWORD *)(v4 + 48) = 0;
    }
    v7 = *(void **)(v4 + 56);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)v15;
    *(_QWORD *)(v4 + 48) = v16;
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    if (v7)
    {
      *(_QWORD *)(v4 + 64) = v7;
      operator delete(v7);
      *(_QWORD *)(v4 + 56) = 0;
      *(_QWORD *)(v4 + 64) = 0;
      *(_QWORD *)(v4 + 72) = 0;
    }
    v8 = *(void **)(v4 + 80);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)v17;
    *(_QWORD *)(v4 + 72) = v18;
    v17[0] = 0;
    v17[1] = 0;
    v18 = 0;
    if (v8)
    {
      *(_QWORD *)(v4 + 88) = v8;
      operator delete(v8);
      *(_QWORD *)(v4 + 80) = 0;
      *(_QWORD *)(v4 + 88) = 0;
      *(_QWORD *)(v4 + 96) = 0;
    }
    v9 = *(void **)(v4 + 104);
    *(_OWORD *)(v4 + 80) = *(_OWORD *)v19;
    *(_QWORD *)(v4 + 96) = v20;
    v19[0] = 0;
    v19[1] = 0;
    v20 = 0;
    if (v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      operator delete(v9);
      *(_QWORD *)(v4 + 104) = 0;
      *(_QWORD *)(v4 + 112) = 0;
      *(_QWORD *)(v4 + 120) = 0;
    }
    v10 = *(void **)(v4 + 128);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)__p;
    *(_QWORD *)(v4 + 120) = v22;
    __p[0] = 0;
    __p[1] = 0;
    v22 = 0;
    if (v10)
    {
      *(_QWORD *)(v4 + 136) = v10;
      operator delete(v10);
      *(_QWORD *)(v4 + 128) = 0;
      *(_QWORD *)(v4 + 136) = 0;
      *(_QWORD *)(v4 + 144) = 0;
      v10 = __p[0];
    }
    *(_OWORD *)(v4 + 128) = v23;
    *(_QWORD *)(v4 + 144) = v24;
    v23 = 0uLL;
    v24 = 0;
    if (v10)
    {
      __p[1] = v10;
      operator delete(v10);
    }
    if (v19[0])
    {
      v19[1] = v19[0];
      operator delete(v19[0]);
    }
    if (v17[0])
    {
      v17[1] = v17[0];
      operator delete(v17[0]);
    }
    if (v15[0])
    {
      v15[1] = v15[0];
      operator delete(v15[0]);
    }
    if (v13[0])
    {
      v13[1] = v13[0];
      operator delete(v13[0]);
    }
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

char *sub_20C45BA40@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  char *v4;
  char *result;
  uint64_t v6;

  pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)a2);
  v4 = (char *)sub_20C032284(a1);
  result = pxrInternal__aapl__pxrReserved__::SdfListOp<int>::Swap(v4, a2);
  v6 = a1[1];
  if (v6 && (a1[1] & 3) != 3)
    result = (char *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  a1[1] = 0;
  return result;
}

void sub_20C45BAA0(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20C031968(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C45BAB4(uint64_t a1, uint64_t a2)
{
  int v4;

  v4 = strcmp((const char *)(0x800000020CAB04FALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    sub_20C31B64C(*(char **)(a1 + 8), a2);
  return v4 == 0;
}

void sub_20C45BB28(void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 19;
        sub_20C45B6A0((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_20C45BBAC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C45BC0C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xD79435E50D7943)
    v9 = 0x1AF286BCA1AF286;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C451754(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[152 * v4];
  v16 = &v10[152 * v9];
  sub_20C03298C((uint64_t)v14, a2);
  v15 = v14 + 152;
  sub_20C45BD28(a1, &v13);
  v11 = a1[1];
  sub_20C45B724(&v13);
  return v11;
}

void sub_20C45BD14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45B724((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45BD28(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45BD9C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C45BD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 152;
      sub_20C451850(a1, v7 - 152, v9);
      v7 = *((_QWORD *)&v16 + 1) - 152;
      *((_QWORD *)&v16 + 1) -= 152;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45BE50((uint64_t)v13);
  return v11;
}

uint64_t sub_20C45BE50(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C45B650((uint64_t *)a1);
  return a1;
}

uint64_t sub_20C45BE84(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (sub_20BFE4F9C((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    v4 = a2[1];
    if ((v4 & 4) != 0)
      v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v5 = *a2;
    sub_20C31D30C(*(char **)(a1 + 8), v5);
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C45BF04(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t result;
  char v12[8];
  void *v13[2];
  uint64_t v14;
  void *v15[2];
  uint64_t v16;
  void *v17[2];
  uint64_t v18;
  void *v19[2];
  uint64_t v20;
  void *__p[2];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  if (sub_20BFE4F9C((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    sub_20C45C12C(a2, v12);
    v4 = *(_QWORD *)(a1 + 8);
    *(_BYTE *)v4 = v12[0];
    v5 = *(void **)(v4 + 8);
    if (v5)
    {
      *(_QWORD *)(v4 + 16) = v5;
      operator delete(v5);
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
    }
    v6 = *(void **)(v4 + 32);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)v13;
    *(_QWORD *)(v4 + 24) = v14;
    v13[0] = 0;
    v13[1] = 0;
    v14 = 0;
    if (v6)
    {
      *(_QWORD *)(v4 + 40) = v6;
      operator delete(v6);
      *(_QWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      *(_QWORD *)(v4 + 48) = 0;
    }
    v7 = *(void **)(v4 + 56);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)v15;
    *(_QWORD *)(v4 + 48) = v16;
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    if (v7)
    {
      *(_QWORD *)(v4 + 64) = v7;
      operator delete(v7);
      *(_QWORD *)(v4 + 56) = 0;
      *(_QWORD *)(v4 + 64) = 0;
      *(_QWORD *)(v4 + 72) = 0;
    }
    v8 = *(void **)(v4 + 80);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)v17;
    *(_QWORD *)(v4 + 72) = v18;
    v17[0] = 0;
    v17[1] = 0;
    v18 = 0;
    if (v8)
    {
      *(_QWORD *)(v4 + 88) = v8;
      operator delete(v8);
      *(_QWORD *)(v4 + 80) = 0;
      *(_QWORD *)(v4 + 88) = 0;
      *(_QWORD *)(v4 + 96) = 0;
    }
    v9 = *(void **)(v4 + 104);
    *(_OWORD *)(v4 + 80) = *(_OWORD *)v19;
    *(_QWORD *)(v4 + 96) = v20;
    v19[0] = 0;
    v19[1] = 0;
    v20 = 0;
    if (v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      operator delete(v9);
      *(_QWORD *)(v4 + 104) = 0;
      *(_QWORD *)(v4 + 112) = 0;
      *(_QWORD *)(v4 + 120) = 0;
    }
    v10 = *(void **)(v4 + 128);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)__p;
    *(_QWORD *)(v4 + 120) = v22;
    __p[0] = 0;
    __p[1] = 0;
    v22 = 0;
    if (v10)
    {
      *(_QWORD *)(v4 + 136) = v10;
      operator delete(v10);
      *(_QWORD *)(v4 + 128) = 0;
      *(_QWORD *)(v4 + 136) = 0;
      *(_QWORD *)(v4 + 144) = 0;
      v10 = __p[0];
    }
    *(_OWORD *)(v4 + 128) = v23;
    *(_QWORD *)(v4 + 144) = v24;
    v23 = 0uLL;
    v24 = 0;
    if (v10)
    {
      __p[1] = v10;
      operator delete(v10);
    }
    if (v19[0])
    {
      v19[1] = v19[0];
      operator delete(v19[0]);
    }
    if (v17[0])
    {
      v17[1] = v17[0];
      operator delete(v17[0]);
    }
    if (v15[0])
    {
      v15[1] = v15[0];
      operator delete(v15[0]);
    }
    if (v13[0])
    {
      v13[1] = v13[0];
      operator delete(v13[0]);
    }
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

char *sub_20C45C12C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  char *v4;
  char *result;
  uint64_t v6;

  pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)a2);
  v4 = (char *)sub_20C032ECC(a1);
  result = pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::Swap(v4, a2);
  v6 = a1[1];
  if (v6 && (a1[1] & 3) != 3)
    result = (char *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  a1[1] = 0;
  return result;
}

void sub_20C45C18C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20C031968(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C45C1A0(uint64_t a1, uint64_t a2)
{
  int v4;

  v4 = strcmp((const char *)(0x800000020CAB1260 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    sub_20C31D30C(*(char **)(a1 + 8), a2);
  return v4 == 0;
}

uint64_t sub_20C45C214(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C45C274(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xD79435E50D7943)
    v9 = 0x1AF286BCA1AF286;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C451754(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[152 * v4];
  v16 = &v10[152 * v9];
  sub_20C033524((uint64_t)v14, a2);
  v15 = v14 + 152;
  sub_20C45C390(a1, &v13);
  v11 = a1[1];
  sub_20C45B724(&v13);
  return v11;
}

void sub_20C45C37C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45B724((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45C390(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45C404((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C45C404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 152;
      sub_20C451850(a1, v7 - 152, v9);
      v7 = *((_QWORD *)&v16 + 1) - 152;
      *((_QWORD *)&v16 + 1) -= 152;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45C4B8((uint64_t)v13);
  return v11;
}

uint64_t sub_20C45C4B8(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C45B650((uint64_t *)a1);
  return a1;
}

uint64_t sub_20C45C4EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (sub_20BFE5014((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    v4 = a2[1];
    if ((v4 & 4) != 0)
      v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v5 = *a2;
    sub_20C31B64C(*(char **)(a1 + 8), v5);
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C45C56C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t result;
  char v12[8];
  void *v13[2];
  uint64_t v14;
  void *v15[2];
  uint64_t v16;
  void *v17[2];
  uint64_t v18;
  void *v19[2];
  uint64_t v20;
  void *__p[2];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  if (sub_20BFE5014((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    sub_20C45C794(a2, v12);
    v4 = *(_QWORD *)(a1 + 8);
    *(_BYTE *)v4 = v12[0];
    v5 = *(void **)(v4 + 8);
    if (v5)
    {
      *(_QWORD *)(v4 + 16) = v5;
      operator delete(v5);
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
    }
    v6 = *(void **)(v4 + 32);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)v13;
    *(_QWORD *)(v4 + 24) = v14;
    v13[0] = 0;
    v13[1] = 0;
    v14 = 0;
    if (v6)
    {
      *(_QWORD *)(v4 + 40) = v6;
      operator delete(v6);
      *(_QWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      *(_QWORD *)(v4 + 48) = 0;
    }
    v7 = *(void **)(v4 + 56);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)v15;
    *(_QWORD *)(v4 + 48) = v16;
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    if (v7)
    {
      *(_QWORD *)(v4 + 64) = v7;
      operator delete(v7);
      *(_QWORD *)(v4 + 56) = 0;
      *(_QWORD *)(v4 + 64) = 0;
      *(_QWORD *)(v4 + 72) = 0;
    }
    v8 = *(void **)(v4 + 80);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)v17;
    *(_QWORD *)(v4 + 72) = v18;
    v17[0] = 0;
    v17[1] = 0;
    v18 = 0;
    if (v8)
    {
      *(_QWORD *)(v4 + 88) = v8;
      operator delete(v8);
      *(_QWORD *)(v4 + 80) = 0;
      *(_QWORD *)(v4 + 88) = 0;
      *(_QWORD *)(v4 + 96) = 0;
    }
    v9 = *(void **)(v4 + 104);
    *(_OWORD *)(v4 + 80) = *(_OWORD *)v19;
    *(_QWORD *)(v4 + 96) = v20;
    v19[0] = 0;
    v19[1] = 0;
    v20 = 0;
    if (v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      operator delete(v9);
      *(_QWORD *)(v4 + 104) = 0;
      *(_QWORD *)(v4 + 112) = 0;
      *(_QWORD *)(v4 + 120) = 0;
    }
    v10 = *(void **)(v4 + 128);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)__p;
    *(_QWORD *)(v4 + 120) = v22;
    __p[0] = 0;
    __p[1] = 0;
    v22 = 0;
    if (v10)
    {
      *(_QWORD *)(v4 + 136) = v10;
      operator delete(v10);
      *(_QWORD *)(v4 + 128) = 0;
      *(_QWORD *)(v4 + 136) = 0;
      *(_QWORD *)(v4 + 144) = 0;
      v10 = __p[0];
    }
    *(_OWORD *)(v4 + 128) = v23;
    *(_QWORD *)(v4 + 144) = v24;
    v23 = 0uLL;
    v24 = 0;
    if (v10)
    {
      __p[1] = v10;
      operator delete(v10);
    }
    if (v19[0])
    {
      v19[1] = v19[0];
      operator delete(v19[0]);
    }
    if (v17[0])
    {
      v17[1] = v17[0];
      operator delete(v17[0]);
    }
    if (v15[0])
    {
      v15[1] = v15[0];
      operator delete(v15[0]);
    }
    if (v13[0])
    {
      v13[1] = v13[0];
      operator delete(v13[0]);
    }
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

char *sub_20C45C794@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  char *v4;
  char *result;
  uint64_t v6;

  pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)a2);
  v4 = (char *)sub_20C033A64(a1);
  result = pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::Swap(v4, a2);
  v6 = a1[1];
  if (v6 && (a1[1] & 3) != 3)
    result = (char *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  a1[1] = 0;
  return result;
}

void sub_20C45C7F4(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20C031968(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C45C808(uint64_t a1, uint64_t a2)
{
  int v4;

  v4 = strcmp((const char *)(0x800000020CAC1688 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    sub_20C31B64C(*(char **)(a1 + 8), a2);
  return v4 == 0;
}

uint64_t sub_20C45C87C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C45C8DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xD79435E50D7943)
    v9 = 0x1AF286BCA1AF286;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C451754(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[152 * v4];
  v16 = &v10[152 * v9];
  sub_20C0340F4((uint64_t)v14, a2);
  v15 = v14 + 152;
  sub_20C45C9F8(a1, &v13);
  v11 = a1[1];
  sub_20C45B724(&v13);
  return v11;
}

void sub_20C45C9E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45B724((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45C9F8(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45CA6C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C45CA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 152;
      sub_20C451850(a1, v7 - 152, v9);
      v7 = *((_QWORD *)&v16 + 1) - 152;
      *((_QWORD *)&v16 + 1) -= 152;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45CB20((uint64_t)v13);
  return v11;
}

uint64_t sub_20C45CB20(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C45B650((uint64_t *)a1);
  return a1;
}

uint64_t sub_20C45CB54(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (sub_20BFE508C((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    v4 = a2[1];
    if ((v4 & 4) != 0)
      v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v5 = *a2;
    sub_20C31D30C(*(char **)(a1 + 8), v5);
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C45CBD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t result;
  char v12[8];
  void *v13[2];
  uint64_t v14;
  void *v15[2];
  uint64_t v16;
  void *v17[2];
  uint64_t v18;
  void *v19[2];
  uint64_t v20;
  void *__p[2];
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  if (sub_20BFE508C((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    sub_20C45CDFC(a2, v12);
    v4 = *(_QWORD *)(a1 + 8);
    *(_BYTE *)v4 = v12[0];
    v5 = *(void **)(v4 + 8);
    if (v5)
    {
      *(_QWORD *)(v4 + 16) = v5;
      operator delete(v5);
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
    }
    v6 = *(void **)(v4 + 32);
    *(_OWORD *)(v4 + 8) = *(_OWORD *)v13;
    *(_QWORD *)(v4 + 24) = v14;
    v13[0] = 0;
    v13[1] = 0;
    v14 = 0;
    if (v6)
    {
      *(_QWORD *)(v4 + 40) = v6;
      operator delete(v6);
      *(_QWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 40) = 0;
      *(_QWORD *)(v4 + 48) = 0;
    }
    v7 = *(void **)(v4 + 56);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)v15;
    *(_QWORD *)(v4 + 48) = v16;
    v15[0] = 0;
    v15[1] = 0;
    v16 = 0;
    if (v7)
    {
      *(_QWORD *)(v4 + 64) = v7;
      operator delete(v7);
      *(_QWORD *)(v4 + 56) = 0;
      *(_QWORD *)(v4 + 64) = 0;
      *(_QWORD *)(v4 + 72) = 0;
    }
    v8 = *(void **)(v4 + 80);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)v17;
    *(_QWORD *)(v4 + 72) = v18;
    v17[0] = 0;
    v17[1] = 0;
    v18 = 0;
    if (v8)
    {
      *(_QWORD *)(v4 + 88) = v8;
      operator delete(v8);
      *(_QWORD *)(v4 + 80) = 0;
      *(_QWORD *)(v4 + 88) = 0;
      *(_QWORD *)(v4 + 96) = 0;
    }
    v9 = *(void **)(v4 + 104);
    *(_OWORD *)(v4 + 80) = *(_OWORD *)v19;
    *(_QWORD *)(v4 + 96) = v20;
    v19[0] = 0;
    v19[1] = 0;
    v20 = 0;
    if (v9)
    {
      *(_QWORD *)(v4 + 112) = v9;
      operator delete(v9);
      *(_QWORD *)(v4 + 104) = 0;
      *(_QWORD *)(v4 + 112) = 0;
      *(_QWORD *)(v4 + 120) = 0;
    }
    v10 = *(void **)(v4 + 128);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)__p;
    *(_QWORD *)(v4 + 120) = v22;
    __p[0] = 0;
    __p[1] = 0;
    v22 = 0;
    if (v10)
    {
      *(_QWORD *)(v4 + 136) = v10;
      operator delete(v10);
      *(_QWORD *)(v4 + 128) = 0;
      *(_QWORD *)(v4 + 136) = 0;
      *(_QWORD *)(v4 + 144) = 0;
      v10 = __p[0];
    }
    *(_OWORD *)(v4 + 128) = v23;
    *(_QWORD *)(v4 + 144) = v24;
    v23 = 0uLL;
    v24 = 0;
    if (v10)
    {
      __p[1] = v10;
      operator delete(v10);
    }
    if (v19[0])
    {
      v19[1] = v19[0];
      operator delete(v19[0]);
    }
    if (v17[0])
    {
      v17[1] = v17[0];
      operator delete(v17[0]);
    }
    if (v15[0])
    {
      v15[1] = v15[0];
      operator delete(v15[0]);
    }
    if (v13[0])
    {
      v13[1] = v13[0];
      operator delete(v13[0]);
    }
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

char *sub_20C45CDFC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  char *v4;
  char *result;
  uint64_t v6;

  pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)a2);
  v4 = (char *)sub_20C034634(a1);
  result = pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::Swap(v4, a2);
  v6 = a1[1];
  if (v6 && (a1[1] & 3) != 3)
    result = (char *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  a1[1] = 0;
  return result;
}

void sub_20C45CE5C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20C031968(v1);
  _Unwind_Resume(a1);
}

BOOL sub_20C45CE70(uint64_t a1, uint64_t a2)
{
  int v4;

  v4 = strcmp((const char *)(0x800000020CAB12C4 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    sub_20C31D30C(*(char **)(a1 + 8), a2);
  return v4 == 0;
}

uint64_t sub_20C45CEE4(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C45CF44(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xD79435E50D7943)
    v9 = 0x1AF286BCA1AF286;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C451754(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[152 * v4];
  v16 = &v10[152 * v9];
  sub_20C02F650((uint64_t)v14, a2);
  v15 = v14 + 152;
  sub_20C45D060(a1, &v13);
  v11 = a1[1];
  sub_20C45D290(&v13);
  return v11;
}

void sub_20C45D04C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45D290((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45D060(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45D0D4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C45D0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 152;
      sub_20C451850(a1, v7 - 152, v9);
      v7 = *((_QWORD *)&v16 + 1) - 152;
      *((_QWORD *)&v16 + 1) -= 152;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45D188((uint64_t)v13);
  return v11;
}

uint64_t sub_20C45D188(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C45D1BC((uint64_t *)a1);
  return a1;
}

void sub_20C45D1BC(uint64_t *a1)
{
  void **v1;
  void **v2;
  uint64_t v3;

  v1 = *(void ***)(a1[2] + 8);
  v2 = *(void ***)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C45D20C(v3, v1);
      v1 += 19;
    }
    while (v1 != v2);
  }
}

void sub_20C45D20C(uint64_t a1, void **a2)
{
  void **v3;

  v3 = a2 + 16;
  sub_20BDE5038(&v3);
  v3 = a2 + 13;
  sub_20BDE5038(&v3);
  v3 = a2 + 10;
  sub_20BDE5038(&v3);
  v3 = a2 + 7;
  sub_20BDE5038(&v3);
  v3 = a2 + 4;
  sub_20BDE5038(&v3);
  v3 = a2 + 1;
  sub_20BDE5038(&v3);
}

void **sub_20C45D290(void **a1)
{
  sub_20C45D2C0(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C45D2C0(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 152;
    sub_20C45D20C(v4, (void **)(i - 152));
  }
}

BOOL sub_20C45D304(uint64_t a1, uint64_t a2)
{
  int v4;

  v4 = strcmp((const char *)(0x800000020CAC16ECLL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    sub_20C234000(*(_BYTE **)(a1 + 8), a2);
  return v4 == 0;
}

void sub_20C45D378(void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 19;
        sub_20C45D20C((uint64_t)(v1 + 2), v4);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_20C45D3FC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C45D45C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t *v17;

  v3 = *a1;
  v4 = 0x86BCA1AF286BCA1BLL * ((a1[1] - *a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1AF286BCA1AF286)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = 0x86BCA1AF286BCA1BLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0xD79435E50D7943)
    v9 = 0x1AF286BCA1AF286;
  else
    v9 = v5;
  v17 = a1 + 2;
  if (v9)
    v10 = (char *)sub_20C451754(v7, v9);
  else
    v10 = 0;
  v13 = v10;
  v14 = &v10[152 * v4];
  v16 = &v10[152 * v9];
  sub_20C0366AC((uint64_t)v14, a2);
  v15 = v14 + 152;
  sub_20C4516E0(a1, &v13);
  v11 = a1[1];
  sub_20C451A24(&v13);
  return v11;
}

void sub_20C45D564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C451A24((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C45D578(uint64_t a1, uint64_t a2)
{
  int v4;

  v4 = strcmp((const char *)(0x800000020CAC1760 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (v4)
    *(_BYTE *)(a1 + 25) = 1;
  else
    sub_20C313334(*(_QWORD *)(a1 + 8), a2);
  return v4 == 0;
}

uint64_t sub_20C45D5EC(uint64_t *a1, int a2, unsigned int *a3, uint64_t a4, uint64_t a5, int a6, uint64_t (*a7)(uint64_t, unsigned int *, uint64_t), _QWORD *a8)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v32;
  unint64_t v33;
  tbb::spin_rw_mutex_v3 *v35;
  char v36;
  uint64_t v37;

  v33 = 0;
  v13 = bswap64(0x9E3779B97F4A7C55* (a3[1]+ ((a3[1] + (unint64_t)*a3 + (a3[1] + (unint64_t)*a3) * (a3[1] + (unint64_t)*a3)) >> 1)));
  v14 = *a1;
  __dmb(0xBu);
  v32 = (uint64_t)(a1 + 72);
  while (1)
  {
    sub_20C45DAC0((uint64_t)&v35, (uint64_t)a1, v14 & v13, 0);
    v15 = (_QWORD *)(v37 + 16);
    do
      v15 = (_QWORD *)*v15;
    while ((unint64_t)v15 >= 0x40 && *(_QWORD *)a3 != v15[2]);
    if (a2)
      break;
    if (v15)
    {
      v16 = 1;
LABEL_10:
      v17 = (uint64_t)a8;
      if (!a5)
        goto LABEL_51;
      goto LABEL_11;
    }
    v26 = *a1;
    __dmb(0xBu);
    if (v14 == v26 || !sub_20BECF7E4((uint64_t)a1, v13, v14, v26))
    {
      sub_20BEBF29C(&v35);
      return 0;
    }
LABEL_34:
    sub_20BEBF29C(&v35);
    v14 = v26;
  }
  if (v15)
  {
LABEL_7:
    v16 = 0;
    goto LABEL_10;
  }
  if (!a8)
    a8 = (_QWORD *)a7(v32, a3, a4);
  if (!v36)
  {
    v36 = 1;
    if ((tbb::spin_rw_mutex_v3::internal_upgrade(v35) & 1) == 0)
    {
      v15 = (_QWORD *)(v37 + 16);
      while (1)
      {
        v15 = (_QWORD *)*v15;
        if ((unint64_t)v15 < 0x40)
          break;
        if (*(_QWORD *)a3 == v15[2])
        {
          if (!v36)
            goto LABEL_7;
          v27 = (unint64_t *)v35;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 + 3, v27));
          v16 = 0;
          v36 = 0;
          goto LABEL_10;
        }
      }
    }
  }
  v26 = *a1;
  __dmb(0xBu);
  if (v14 != v26)
  {
    if (!sub_20BECF7E4((uint64_t)a1, v13, v14, v26))
      goto LABEL_36;
    goto LABEL_34;
  }
  v26 = v14;
LABEL_36:
  v33 = sub_20BECF26C((uint64_t)a1, v37, a8, v26);
  v17 = 0;
  v16 = 1;
  v15 = a8;
  if (!a5)
  {
LABEL_51:
    sub_20BEBF29C(&v35);
    goto LABEL_46;
  }
LABEL_11:
  if ((sub_20BECF35C(a5, (tbb::spin_rw_mutex_v3 *)(v15 + 1), a6) & 1) == 0)
  {
    sched_yield();
    v18 = 2;
    while ((sub_20BECF35C(a5, (tbb::spin_rw_mutex_v3 *)(v15 + 1), a6) & 1) == 0)
    {
      sched_yield();
      v19 = v18 < 16;
      v18 *= 2;
      if (!v19)
      {
        v20 = (unint64_t *)v35;
        v35 = 0;
        if (v36)
        {
          while (1)
          {
            v21 = *v20;
            v22 = *v20 & 0xFFFFFFFFFFFFFFFCLL;
            do
            {
              while (1)
              {
                v23 = __ldaxr(v20);
                if (v23 != v21)
                  break;
                if (!__stlxr(v22, v20))
                  goto LABEL_25;
              }
              __clrex();
              do
                v24 = __ldxr(v20);
              while (__stxr(v24, v20));
            }
            while (v24 == v21);
            sched_yield();
          }
        }
        do
          v25 = __ldaxr(v20);
        while (__stlxr(v25 - 4, v20));
LABEL_25:
        sched_yield();
        v26 = *a1;
        __dmb(0xBu);
        a8 = (_QWORD *)v17;
        goto LABEL_34;
      }
    }
  }
  sub_20BEBF29C(&v35);
  *(_QWORD *)(a5 + 16) = v15;
  *(_QWORD *)(a5 + 24) = v13;
LABEL_46:
  if (v33)
    sub_20C45D92C(a1, v33, v32, 0);
  if (v17)
    sub_20C456AB0((uint64_t)a1, v17);
  return v16;
}

void sub_20C45D904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45D924()
{
  return 0;
}

void sub_20C45D92C(uint64_t *a1, unint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  int64x2_t v17;
  char *v18;
  uint64x2_t v19;
  uint64x2_t v20;
  int8x16_t v21;
  int64x2_t v22;
  uint64x2_t v23;
  int8x16_t v24;

  if (a2 < 8)
  {
    v9 = (char *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x17D0);
    v10 = v9;
    if ((a4 & 1) != 0)
    {
      bzero(v9, 0x17D0uLL);
    }
    else
    {
      v14 = -6096;
      do
      {
        v15 = &v9[v14];
        *((_QWORD *)v15 + 763) = 0;
        *((_QWORD *)v15 + 764) = 3;
        v14 += 24;
      }
      while (v14);
    }
    v16 = 0;
    v17 = (int64x2_t)xmmword_20CA59F60;
    v18 = v10 - 48;
    v19 = (uint64x2_t)vdupq_n_s64(7uLL);
    v20 = (uint64x2_t)vdupq_n_s64(1uLL);
    v21 = (int8x16_t)vdupq_n_s64(0x7FFFFFFFFFFFFFFEuLL);
    v22 = vdupq_n_s64(2uLL);
    v13 = 255;
    do
    {
      v23 = (uint64x2_t)vorrq_s8((int8x16_t)vdupq_n_s64(v16), (int8x16_t)xmmword_20CA59F70);
      v24 = vandq_s8((int8x16_t)vshlq_u64(v20, (uint64x2_t)v17), v21);
      if ((vmovn_s64((int64x2_t)vcgtq_u64(v19, v23)).u8[0] & 1) != 0)
        a1[v16 + 2] = (uint64_t)&v18[24 * v24.i64[0]];
      if ((vmovn_s64((int64x2_t)vcgtq_u64((uint64x2_t)vdupq_n_s64(7uLL), v23)).i32[1] & 1) != 0)
        a1[v16 + 3] = (uint64_t)&v18[24 * v24.i64[1]];
      v16 += 2;
      v17 = vaddq_s64(v17, v22);
    }
    while (v16 != 8);
  }
  else
  {
    v7 = (_QWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)(24 << a2));
    v8 = v7;
    if ((a4 & 1) != 0)
    {
      bzero(v7, 24 << a2);
    }
    else
    {
      v11 = 1 << a2;
      v12 = v7 + 2;
      do
      {
        *(v12 - 1) = 0;
        *v12 = 3;
        v12 += 3;
        --v11;
      }
      while (v11);
    }
    a1[a2 + 1] = (uint64_t)v8;
    v13 = (2 << a2) - 1;
  }
  __dmb(0xBu);
  *a1 = v13;
}

void sub_20C45DAB0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8 * v2 + 8) = 0;
  _Unwind_Resume(a1);
}

uint64_t sub_20C45DAC0(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  unint64_t v8;
  uint64_t v9;
  tbb::spin_rw_mutex_v3 *v10;
  uint64_t v11;
  tbb::spin_rw_mutex_v3 *v12;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 0;
  v8 = sub_20BECF614(a2, a3);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(v8 + 16);
  __dmb(0xBu);
  if (v9 == 3
    && (v10 = (tbb::spin_rw_mutex_v3 *)(*(_QWORD *)(a1 + 16) + 8),
        *(_BYTE *)(a1 + 8) = 1,
        tbb::spin_rw_mutex_v3::internal_try_acquire_writer(v10)))
  {
    *(_QWORD *)a1 = v10;
    v11 = *(_QWORD *)(a1 + 16);
    if (*(_QWORD *)(v11 + 16) == 3)
      sub_20C45DB98(a2, v11, a3);
  }
  else
  {
    v12 = (tbb::spin_rw_mutex_v3 *)(*(_QWORD *)(a1 + 16) + 8);
    *(_BYTE *)(a1 + 8) = a4;
    *(_QWORD *)a1 = v12;
    if (a4)
      tbb::spin_rw_mutex_v3::internal_acquire_writer(v12);
    else
      tbb::spin_rw_mutex_v3::internal_acquire_reader((unint64_t *)v12);
  }
  return a1;
}

void sub_20C45DB84(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_20BEBF29C(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C45DB98(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  char v6;
  BOOL v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  tbb::spin_rw_mutex_v3 *v15;
  char v16;
  uint64_t v17;

  __dmb(0xBu);
  *(_QWORD *)(a2 + 16) = 0;
  if (a3)
  {
    v5 = HIDWORD(a3);
    if (!HIDWORD(a3))
      v5 = a3;
    v6 = 32 * (HIDWORD(a3) != 0);
    if (v5 >= 0x10000)
    {
      v5 >>= 16;
      v6 = (32 * (HIDWORD(a3) != 0)) | 0x10;
    }
    if (v5 >= 0x100)
    {
      v5 >>= 8;
      v6 |= 8u;
    }
    if (v5 >= 0x10)
    {
      v5 >>= 4;
      v6 |= 4u;
    }
    v7 = v5 >= 4;
    if (v5 >= 4)
      LODWORD(v5) = v5 >> 2;
    v8 = (v5 >> 1) & 1;
    if (v7)
      v6 += 2;
    v9 = v8 + v6;
  }
  else
  {
    v9 = -1;
  }
  v10 = ~(-1 << v9);
  sub_20C45DAC0(&v15, a1, v10 & a3, 0);
  v11 = (unint64_t *)(v17 + 16);
  v12 = *(_QWORD *)(v17 + 16);
  __dmb(0xBu);
  if (v12 >= 0x40)
  {
    v13 = (2 * v10) | 1;
    while ((bswap64(0x9E3779B97F4A7C55* (*(unsigned int *)(v12 + 20)+ ((*(unsigned int *)(v12 + 20)+ (unint64_t)*(unsigned int *)(v12 + 16)+ (*(unsigned int *)(v12 + 20) + (unint64_t)*(unsigned int *)(v12 + 16))* (*(unsigned int *)(v12 + 20) + (unint64_t)*(unsigned int *)(v12 + 16))) >> 1))) & v13) == a3)
    {
      if (v16 || (v16 = 1, (tbb::spin_rw_mutex_v3::internal_upgrade(v15) & 1) != 0))
      {
        *v11 = *(_QWORD *)v12;
        *(_QWORD *)v12 = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a2 + 16) = v12;
LABEL_24:
        v12 = *v11;
        if (*v11 <= 0x3F)
          return sub_20BEBF29C(&v15);
      }
      else
      {
        v11 = (unint64_t *)(v17 + 16);
        v12 = *(_QWORD *)(v17 + 16);
        __dmb(0xBu);
        if (v12 < 0x40)
          return sub_20BEBF29C(&v15);
      }
    }
    v11 = (unint64_t *)v12;
    goto LABEL_24;
  }
  return sub_20BEBF29C(&v15);
}

void sub_20C45DD2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BEBF29C((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45DD40(int a1, tbb::internal *this, uint64_t a3, void *a4)
{
  return tbb::internal::NFS_Allocate((unint64_t)this, 8, 0, a4);
}

unint64_t *sub_20C45DD50(unint64_t *a1)
{
  tbb::internal::concurrent_vector_base_v3 *v2;
  _QWORD *v3;
  unint64_t v4;
  void *v5;

  v2 = (tbb::internal::concurrent_vector_base_v3 *)(a1 + 1);
  v3 = (_QWORD *)a1[4];
  v4 = tbb::internal::concurrent_vector_base_v3::internal_clear((tbb::internal::concurrent_vector_base_v3 *)(a1 + 1), (void (*)(void *, unint64_t))tbb::concurrent_vector<pxrInternal__aapl__pxrReserved__::SdfPath,tbb::cache_aligned_allocator<pxrInternal__aapl__pxrReserved__::SdfPath>>::destroy_array);
  sub_20BEB4AD0((uint64_t)a1, v3, v4, a1[2]);
  tbb::internal::concurrent_vector_base_v3::~concurrent_vector_base_v3(v2, v5);
  return a1;
}

_DWORD *tbb::concurrent_vector<pxrInternal__aapl__pxrReserved__::SdfPath,tbb::cache_aligned_allocator<pxrInternal__aapl__pxrReserved__::SdfPath>>::destroy_array(_DWORD *result, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;

  if (a2)
  {
    v2 = a2;
    v3 = &result[2 * a2 - 1];
    do
    {
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v3);
      --v2;
      result = sub_20BFD265C(v3 - 1);
      v3 -= 2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_20C45DDF8(uint64_t a1, tbb::task *a2)
{
  *(_QWORD *)a1 = off_24C539AD0;
  tbb::interface5::internal::task_base::destroy(*(tbb::interface5::internal::task_base **)(a1 + 16), a2);
  return a1;
}

void sub_20C45DE30(uint64_t a1, tbb::task *a2)
{
  void *v2;

  v2 = (void *)sub_20C45DDF8(a1, a2);
  operator delete(v2);
}

uint64_t sub_20C45DE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD v14[2];

  v4 = *(_QWORD *)(a1 + 16);
  v14[0] = 0;
  v14[1] = v4;
  v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v14, 0x30uLL);
  v6 = v5;
  *(_BYTE *)(v5 - 11) = 1;
  *(_QWORD *)v5 = off_24C539B18;
  *(_DWORD *)(v5 + 8) = *(_DWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(v5 + 16) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 48);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  sub_20BFD6E54((_DWORD *)(v5 + 24), (_DWORD *)(a2 + 16));
  sub_20BFD6EA4((_DWORD *)(v6 + 28), (_DWORD *)(a2 + 20));
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v6 + 32) = v10;
  if ((v10 & 7) != 0)
  {
    v11 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 2, v11));
    if ((v12 & 1) == 0)
      *(_QWORD *)(v6 + 32) &= 0xFFFFFFFFFFFFFFF8;
  }
  *(_QWORD *)(v6 + 40) = a1;
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v6 - 40))(*(_QWORD *)(v6 - 40), v6, v6 - 8);
}

uint64_t sub_20C45DF30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 16);
  v7[0] = 0;
  v7[1] = v4;
  v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v7, 0x30uLL);
  *(_BYTE *)(v5 - 11) = 1;
  *(_QWORD *)v5 = off_24C539B18;
  *(_DWORD *)(v5 + 8) = *(_DWORD *)a2;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  sub_20BFD38A4((_DWORD *)(v5 + 24), (_DWORD *)(a2 + 16));
  sub_20BFD38DC((_DWORD *)(v5 + 28), (_DWORD *)(a2 + 20));
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(v5 + 40) = a1;
  return (***(uint64_t (****)(_QWORD, unint64_t, uint64_t))(v5 - 40))(*(_QWORD *)(v5 - 40), v5, v5 - 8);
}

uint64_t sub_20C45DFE0(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  *(_QWORD *)a1 = off_24C539B18;
  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

void sub_20C45E04C(void *a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  *(_QWORD *)a1 = off_24C539B18;
  v2 = *((_QWORD *)a1 + 4);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)a1 + 7);
  sub_20BFD265C((_DWORD *)a1 + 6);
  v5 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a1 + 2);
  if (v5)
    sub_20C35C614(v5);
  operator delete(a1);
}

uint64_t sub_20C45E0B8(uint64_t a1)
{
  sub_20C45E0E0(*(uint64_t ***)(*(_QWORD *)(a1 + 40) + 8), (int *)(a1 + 8));
  return 0;
}

void sub_20C45E0E0(uint64_t **a1, int *a2)
{
  unsigned int *v4;
  unsigned int v5;
  int v6;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  int v8;
  int v9;
  uint64_t v10;

  v6 = *a2;
  v7 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)*((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 1) = 0;
  v8 = a2[4];
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator=(a2 + 4);
  v9 = a2[5];
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator=(a2 + 5);
  v10 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a2 + 3) = 0;
  sub_20C4375C8(*a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&v6);
  if ((v10 & 7) != 0)
  {
    v4 = (unsigned int *)(v10 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v9);
  sub_20BFD265C(&v8);
  if (v7)
    sub_20C35C614(v7);
}

void sub_20C45E1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, pxrInternal__aapl__pxrReserved__::Usd_PrimData *a10, uint64_t a11, uint64_t a12)
{
  _DWORD *v12;
  _DWORD *v13;
  unsigned int *v15;
  unsigned int v16;

  if ((a12 & 7) != 0)
  {
    v15 = (unsigned int *)(a12 & 0xFFFFFFFFFFFFFFF8);
    do
      v16 = __ldxr(v15);
    while (__stlxr(v16 - 2, v15));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v13);
  sub_20BFD265C(v12);
  if (a10)
    sub_20C35C614(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45E204(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C539B60;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 60));
  sub_20BFD265C((_DWORD *)(a1 + 56));
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  return a1;
}

void sub_20C45E254(_DWORD *a1)
{
  *(_QWORD *)a1 = off_24C539B60;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 15);
  sub_20BFD265C(a1 + 14);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 7);
  sub_20BFD265C(a1 + 6);
  operator delete(a1);
}

unint64_t sub_20C45E2A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v8;
  int v9;
  int v10;
  int v11;
  __int16 v12;
  _QWORD v13[2];
  __int128 v14;
  int v15;
  int v16;
  int v17;
  __int16 v18;

  v2 = a1 + 8;
  v14 = *(_OWORD *)(a1 + 8);
  sub_20BFD6E54(&v15, (_DWORD *)(a1 + 24));
  sub_20BFD6EA4(&v16, (_DWORD *)(a1 + 28));
  v3 = 0;
  v17 = *(_DWORD *)(a1 + 32);
  v18 = *(_WORD *)(a1 + 36);
  while (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a1 + 48)
       || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a1 + 40)
       || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a1 + 56)
       || *(_DWORD *)(a1 + 32) != *(_DWORD *)(a1 + 64)
       || *(unsigned __int8 *)(a1 + 36) != *(unsigned __int8 *)(a1 + 68)
       || *(unsigned __int8 *)(a1 + 37) != *(unsigned __int8 *)(a1 + 69))
  {
    pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment(v2);
    if (++v3 == 4)
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a1 + 48)
        || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a1 + 40)
        || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a1 + 56)
        || *(_DWORD *)(a1 + 32) != *(_DWORD *)(a1 + 64)
        || *(unsigned __int8 *)(a1 + 36) != *(unsigned __int8 *)(a1 + 68)
        || *(unsigned __int8 *)(a1 + 37) != *(unsigned __int8 *)(a1 + 69))
      {
        *(_BYTE *)(a1 - 12) = 1;
      }
      v3 = 4;
      goto LABEL_17;
    }
  }
  if (v3)
  {
LABEL_17:
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 16);
    v13[0] = 0;
    v13[1] = v4;
    v5 = tbb::internal::allocate_additional_child_of_proxy::allocate((tbb::internal::allocate_additional_child_of_proxy *)v13, 0x38uLL);
    v8 = v14;
    sub_20BFD6E54(&v9, &v15);
    sub_20BFD6EA4(&v10, &v16);
    v12 = v18;
    v11 = v17;
    v6 = *(_QWORD *)(a1 + 72);
    *(_BYTE *)(v5 - 11) = 1;
    *(_QWORD *)v5 = off_24C539BA8;
    *(_QWORD *)(v5 + 8) = v6;
    *(_OWORD *)(v5 + 16) = v8;
    sub_20BFD6E54((_DWORD *)(v5 + 32), &v9);
    sub_20BFD6EA4((_DWORD *)(v5 + 36), &v10);
    *(_DWORD *)(v5 + 40) = v11;
    *(_WORD *)(v5 + 44) = v12;
    *(_QWORD *)(v5 + 48) = v3;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v10);
    sub_20BFD265C(&v9);
    goto LABEL_18;
  }
  v5 = 0;
LABEL_18:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v16);
  sub_20BFD265C(&v15);
  return v5;
}

void sub_20C45E4E4(_Unwind_Exception *a1)
{
  _DWORD *v1;
  _DWORD *v2;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(v2);
  sub_20BFD265C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45E508(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C539BA8;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 36));
  sub_20BFD265C((_DWORD *)(a1 + 32));
  return a1;
}

void sub_20C45E544(_DWORD *a1)
{
  *(_QWORD *)a1 = off_24C539BA8;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 9);
  sub_20BFD265C(a1 + 8);
  operator delete(a1);
}

uint64_t sub_20C45E580(tbb::internal::allocate_child_proxy *this)
{
  _OWORD *v2;
  _DWORD *v3;
  _DWORD *v4;
  char *v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t i;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  unint64_t *v14;

  v2 = (_OWORD *)((char *)this + 16);
  v13 = 0;
  v3 = (_DWORD *)((char *)this + 32);
  v4 = (_DWORD *)((char *)this + 36);
  v5 = (char *)this + 40;
  v6 = (unint64_t *)&v13;
  v7 = 0x200000000;
  for (i = 1; ; ++i)
  {
    v14 = v6;
    v9 = tbb::internal::allocate_child_proxy::allocate(this, 0x30uLL);
    v10 = *((_QWORD *)this + 1);
    *(_BYTE *)(v9 - 11) = 1;
    *(_QWORD *)v9 = off_24C539BF0;
    *(_OWORD *)(v9 + 8) = *v2;
    sub_20BFD6E54((_DWORD *)(v9 + 24), v3);
    sub_20BFD6EA4((_DWORD *)(v9 + 28), v4);
    v11 = *(_DWORD *)v5;
    *(_WORD *)(v9 + 36) = *((_WORD *)v5 + 2);
    *(_DWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v10;
    pxrInternal__aapl__pxrReserved__::UsdPrimRange::iterator::increment((uint64_t)v2);
    if (i == *((_QWORD *)this + 6))
      break;
    *(_QWORD *)(v9 - 8) = 0;
    v6 = (unint64_t *)(v9 - 8);
    *v14 = v9;
    v7 += 0x100000000;
  }
  *((_QWORD *)this - 3) = v7 >> 32;
  if (v13)
  {
    (***(void (****)(_QWORD, uint64_t, unint64_t *))(v13 - 40))(*(_QWORD *)(v13 - 40), v13, v14);
    v13 = 0;
    v14 = (unint64_t *)&v13;
  }
  (*(void (**)(_QWORD, tbb::internal::allocate_child_proxy *, unint64_t))(**((_QWORD **)this - 5) + 8))(*((_QWORD *)this - 5), this, v9);
  return 0;
}

uint64_t sub_20C45E6C0(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C539BF0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  return a1;
}

void sub_20C45E6FC(_DWORD *a1)
{
  *(_QWORD *)a1 = off_24C539BF0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 7);
  sub_20BFD265C(a1 + 6);
  operator delete(a1);
}

uint64_t sub_20C45E738(uint64_t a1)
{
  uint64_t **v1;
  unsigned int *v2;
  unsigned int v3;
  int v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;
  int v7;
  int v8;
  uint64_t v9;

  v1 = *(uint64_t ***)(*(_QWORD *)(a1 + 40) + 8);
  sub_20C37ED84(a1 + 8, (uint64_t)&v5);
  sub_20C45E0E0(v1, &v5);
  if ((v9 & 7) != 0)
  {
    v2 = (unsigned int *)(v9 & 0xFFFFFFFFFFFFFFF8);
    do
      v3 = __ldxr(v2);
    while (__stlxr(v3 - 2, v2));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v8);
  sub_20BFD265C(&v7);
  if (v6)
    sub_20C35C614(v6);
  return 0;
}

void sub_20C45E7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C35C2E0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45E7D4(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  result = a1[2];
  if (!result)
  {
    v4 = *a1;
    v3 = a1[1];
    v5 = sub_20BEB4B94(v3);
    v6 = *(_QWORD *)(v4 + 32);
    __dmb(0xBu);
    result = *(_QWORD *)(v6 + 8 * v5) + 8 * (v3 - ((1 << v5) & 0x1FFFFFFFFFFFFFFELL));
    a1[2] = result;
  }
  return result;
}

uint64_t sub_20C45E830(uint64_t a1, char *a2, char *a3)
{
  unsigned __int8 v4;
  int v5;
  _QWORD *v7;
  char *v8;

  v4 = atomic_load(pxrInternal__aapl__pxrReserved__::TfMallocTag::_isInitialized);
  if ((v4 & 1) != 0)
  {
    v7 = pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin(a2, 0, a3);
    *(_QWORD *)a1 = v7;
    if (v7)
    {
      pxrInternal__aapl__pxrReserved__::TfMallocTag::_Begin(*(char **)a3, v7, v8);
      v5 = 2;
    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    v5 = 0;
    *(_QWORD *)a1 = 0;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return a1;
}

uint64_t sub_20C45E8A0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  _QWORD *v6;

  *(_QWORD *)(a1 + 8) = 0;
  v4 = (_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      sub_20BFD72BC((uint64_t **)a1, v4, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v6 + 2), (_DWORD *)v6 + 4);
      v6 = (_QWORD *)*v6;
    }
    while (v6 != a3);
  }
  return a1;
}

void sub_20C45E908(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD7C28(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

_QWORD *sub_20C45E920(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;

  sub_20BDDC1C8(a1, (uint64_t)"( ", 2);
  v6 = (_QWORD *)*a2;
  v4 = a2 + 1;
  v5 = v6;
  if (v6 != v4)
  {
    do
    {
      v7 = pxrInternal__aapl__pxrReserved__::operator<<(a1, (pxrInternal__aapl__pxrReserved__::SdfPath *)((char *)v5 + 28));
      sub_20BDDC1C8(v7, (uint64_t)" ", 1);
      v8 = (_QWORD *)v5[1];
      if (v8)
      {
        do
        {
          v9 = v8;
          v8 = (_QWORD *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (_QWORD *)v5[2];
          v10 = *v9 == (_QWORD)v5;
          v5 = v9;
        }
        while (!v10);
      }
      v5 = v9;
    }
    while (v9 != v4);
  }
  sub_20BDDC1C8(a1, (uint64_t)")", 1);
  return a1;
}

void sub_20C45E9D4(uint64_t a1, uint64_t a2)
{
  char *v4;
  _QWORD *v5;
  unsigned int *j;
  unsigned int *v7;
  unsigned int *v8;
  BOOL v9;
  uint64_t v10;
  char *v11;
  _DWORD *v12;
  _DWORD *v13;
  unsigned int *v14;
  unsigned int *v15;
  const char *Text;
  const char *v17;
  char *v18;
  pxrInternal__aapl__pxrReserved__::SdfPath *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  void **i;
  char *v29;
  int *v30;
  void **v31;
  char *v32;
  int *v33;
  unsigned int *v34;
  unsigned int *v35;
  char *v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  char *v47;
  char *v48;
  char **v49;
  char **v50;
  char *v51;
  const char *v52;
  char *v53;
  char *v54;
  char *k;
  uint64_t v56;
  uint64_t v57;
  uint64_t (**v58)();
  char **v59;
  unint64_t v60;
  void *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  void **v65;
  uint64_t v66;
  const char *v67;
  char v68;
  void *__p[2];
  __int128 v70;
  int v71;
  void **v72[6];
  _QWORD v73[6];
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  _DWORD *v77;
  unint64_t v78;
  void **v79[2];
  uint64_t (***v80)();
  uint64_t (**v81[3])(_QWORD);
  _BYTE v82[16];
  uint64_t v83;

  v83 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    sub_20C440C6C((uint64_t *)a2);
    pxrInternal__aapl__pxrReserved__::Usd_ClipCache::Lifeboat::Lifeboat((pxrInternal__aapl__pxrReserved__::Usd_ClipCache::Lifeboat *)v79, *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136));
    j = (unsigned int *)(a2 + 8);
    v5 = *(_QWORD **)a2;
    if (*(_QWORD *)a2 != a2 + 8)
    {
      do
      {
        pxrInternal__aapl__pxrReserved__::Usd_ClipCache::InvalidateClipsForPrim(*(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v5 + 4), v4);
        v7 = (unsigned int *)v5[1];
        if (v7)
        {
          do
          {
            v8 = v7;
            v7 = *(unsigned int **)v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            v8 = (unsigned int *)v5[2];
            v9 = *(_QWORD *)v8 == (_QWORD)v5;
            v5 = v8;
          }
          while (!v9);
        }
        v5 = v8;
      }
      while (v8 != j);
    }
    v76 = 0;
    v77 = 0;
    v78 = 0;
    sub_20C0B8D74(&v76, *(_QWORD *)(a2 + 16));
    v10 = *(_QWORD *)a2;
    if (*(unsigned int **)a2 != j)
    {
      do
      {
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 32))
          && (pxrInternal__aapl__pxrReserved__::SdfPath::ContainsPrimVariantSelection((pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 32)) & 1) == 0)
        {
          if (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPathDescendantToAnInstance(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(a1 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 32))&& (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::PrototypeUsesPrimIndexPath(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(a1 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 32)) & 1) == 0)
          {
            if (sub_20C286E00(1))
            {
              Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 32));
              pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Ignoring elided prim <%s>\n", v17, v18, Text);
            }
          }
          else
          {
            pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::UnregisterInstancePrimIndexesUnder(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(a1 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 32), v11);
            v12 = v77;
            if ((unint64_t)v77 >= v78)
            {
              v13 = (_DWORD *)sub_20BFD7890(&v76, (_DWORD *)(v10 + 32));
            }
            else
            {
              sub_20BFD6E54(v77, (_DWORD *)(v10 + 32));
              sub_20BFD6EA4(v12 + 1, (_DWORD *)(v10 + 36));
              v13 = v12 + 2;
            }
            v77 = v13;
          }
        }
        v14 = *(unsigned int **)(v10 + 8);
        if (v14)
        {
          do
          {
            v15 = v14;
            v14 = *(unsigned int **)v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            v15 = *(unsigned int **)(v10 + 16);
            v9 = *(_QWORD *)v15 == v10;
            v10 = (uint64_t)v15;
          }
          while (!v9);
        }
        v10 = (uint64_t)v15;
      }
      while (v15 != j);
    }
    pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v82);
    v75 = 0;
    v74 = 0u;
    memset(v73, 0, sizeof(v73));
    memset(v72, 0, sizeof(v72));
    sub_20BDDC0E4(__p, "recomposing stage");
    pxrInternal__aapl__pxrReserved__::UsdStage::_ComposePrimIndexesInParallel(a1, (uint64_t)&v76, (uint64_t *)__p, (uint64_t)v72);
    if (SBYTE7(v70) < 0)
      operator delete(__p[0]);
    *(_OWORD *)__p = 0u;
    v70 = 0u;
    v71 = 1065353216;
    v20 = *(_QWORD *)a2;
    v21 = (uint64_t *)pxrInternal__aapl__pxrReserved__::SdfPath::AbsoluteRootPath(v19);
    v22 = *(_QWORD *)(v20 + 32);
    v23 = *v21;
    v24 = *(_QWORD *)(a2 + 16);
    if (v22 == *v21 && v24 != 1)
    {
      v64 = "usd/stage.cpp";
      v65 = (void **)"_RecomposePrims";
      v66 = 4831;
      v67 = "void pxrInternal__aapl__pxrReserved__::UsdStage::_RecomposePrims(T *) [T = std::map<pxrInternal__aapl__pxrRe"
            "served__::SdfPath, std::vector<const pxrInternal__aapl__pxrReserved__::SdfChangeList::Entry *>>]";
      v68 = 0;
      pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v64, "!pathsContainsAbsRoot || pathsToRecompose->size() == 1", 0);
      v24 = *(_QWORD *)(a2 + 16);
    }
    v56 = v24;
    v57 = v22;
    v25 = *(_QWORD *)a2;
    if (*(unsigned int **)a2 != j)
    {
      do
      {
        v26 = j;
        v27 = a1;
        pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetPrimsInPrototypesUsingPrimIndexPath(*(pxrInternal__aapl__pxrReserved__::Usd_InstanceCache **)(a1 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v25 + 32), (uint64_t *)&v64);
        v29 = v64;
        for (i = v65; v29 != (char *)i; v29 += 8)
        {
          v58 = (uint64_t (**)())v29;
          v30 = (int *)sub_20C33FD3C((uint64_t)__p, (unsigned int *)v29, (uint64_t)&unk_20CAC184C, (_DWORD **)&v58);
          sub_20C01A074(v30 + 6, (_DWORD *)(v25 + 32));
          sub_20C01A0C8(v30 + 7, (_DWORD *)(v25 + 36));
          v58 = (uint64_t (**)())v29;
          sub_20C45FB70((uint64_t **)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)v29, (uint64_t)&unk_20CAC184C, (_DWORD **)&v58);
        }
        v61 = &v64;
        sub_20BFD6F90((void ***)&v61);
        a1 = v27;
        pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::GetPrototypesUsingPrimIndexPathOrDescendents(*(_QWORD *)(v27 + 144), (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v25 + 32), (uint64_t *)&v64);
        v32 = v64;
        v31 = v65;
        for (j = v26; v32 != (char *)v31; v32 += 16)
        {
          v58 = (uint64_t (**)())v32;
          v33 = (int *)sub_20C33FD3C((uint64_t)__p, (unsigned int *)v32, (uint64_t)&unk_20CAC184C, (_DWORD **)&v58);
          sub_20C01A074(v33 + 6, (_DWORD *)v32 + 2);
          sub_20C01A0C8(v33 + 7, (_DWORD *)v32 + 3);
          v58 = (uint64_t (**)())v32;
          sub_20C45FB70((uint64_t **)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)v32, (uint64_t)&unk_20CAC184C, (_DWORD **)&v58);
        }
        v61 = &v64;
        sub_20C22D004((void ***)&v61);
        v34 = *(unsigned int **)(v25 + 8);
        if (v34)
        {
          do
          {
            v35 = v34;
            v34 = *(unsigned int **)v34;
          }
          while (v34);
        }
        else
        {
          do
          {
            v35 = *(unsigned int **)(v25 + 16);
            v9 = *(_QWORD *)v35 == v25;
            v25 = (uint64_t)v35;
          }
          while (!v9);
        }
        v25 = (uint64_t)v35;
      }
      while (v35 != v26);
    }
    v36 = (char *)a1;
    v37 = v72[0];
    if (v72[1] != v72[0])
    {
      v38 = 0;
      v39 = 0;
      do
      {
        v40 = v72[3];
        v64 = (char *)&v37[v38];
        v41 = (int *)sub_20C33FD3C((uint64_t)__p, (unsigned int *)&v37[v38], (uint64_t)&unk_20CAC184C, (_DWORD **)&v64);
        sub_20C01A074(v41 + 6, &v40[v38]);
        sub_20C01A0C8(v41 + 7, (_DWORD *)&v40[v38] + 1);
        v64 = (char *)&v72[0][v38];
        sub_20C45FB70((uint64_t **)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v72[0][v38], (uint64_t)&unk_20CAC184C, (_DWORD **)&v64);
        ++v39;
        v37 = v72[0];
        ++v38;
      }
      while (v39 != v72[1] - v72[0]);
    }
    v42 = v73[0];
    if (v73[1] != v73[0])
    {
      v43 = 0;
      v44 = 0;
      do
      {
        v45 = v73[3];
        v64 = (char *)(v42 + v43);
        v46 = (int *)sub_20C33FD3C((uint64_t)__p, (unsigned int *)(v42 + v43), (uint64_t)&unk_20CAC184C, (_DWORD **)&v64);
        sub_20C01A074(v46 + 6, (_DWORD *)(v45 + v43));
        sub_20C01A0C8(v46 + 7, (_DWORD *)(v45 + v43 + 4));
        v64 = (char *)(v73[0] + v43);
        sub_20C45FB70((uint64_t **)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(v73[0] + v43), (uint64_t)&unk_20CAC184C, (_DWORD **)&v64);
        ++v44;
        v42 = v73[0];
        v43 += 8;
      }
      while (v44 != (uint64_t)(v73[1] - v73[0]) >> 3);
    }
    if (v57 != v23 && *(_QWORD *)(a2 + 16) != v56)
      sub_20C440C6C((uint64_t *)a2);
    v61 = 0;
    v62 = 0;
    v63 = 0;
    sub_20C45F2E8(v36, *(unsigned int **)a2, j, &v61);
    if (*((_QWORD *)&v70 + 1))
    {
      v58 = 0;
      v59 = 0;
      v60 = 0;
      sub_20C0B8D74((uint64_t *)&v58, (v62 - (_BYTE *)v61) >> 3);
      v47 = (char *)v61;
      v48 = v62;
      if (v61 != v62)
      {
        do
        {
          sub_20C45FB10(__p, (unsigned int *)(*(_QWORD *)v47 + 16), (_DWORD *)(*(_QWORD *)v47 + 16), &v64);
          v49 = v59;
          if ((unint64_t)v59 >= v60)
          {
            v50 = (char **)sub_20BFD7890((uint64_t *)&v58, &v64);
          }
          else
          {
            sub_20BFD6E54(v59, &v64);
            sub_20BFD6EA4((_DWORD *)v49 + 1, (_DWORD *)&v64 + 1);
            v50 = v49 + 1;
          }
          v59 = v50;
          pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v64 + 1);
          sub_20BFD265C(&v64);
          v47 += 8;
        }
        while (v47 != v48);
      }
      v64 = v36;
      v65 = &v61;
      v66 = (uint64_t)&v80;
      v80 = &v58;
      v81[0] = (uint64_t (**)(_QWORD))off_24C539810;
      v81[1] = (uint64_t (**)(_QWORD))&v64;
      tbb::interface7::internal::isolate_within_arena(v81, 0);
      v64 = (char *)&v58;
      sub_20BFD6F90((void ***)&v64);
    }
    else
    {
      v81[0] = 0;
      v64 = v36;
      v65 = &v61;
      v66 = (uint64_t)v81;
      v58 = off_24C539810;
      v59 = &v64;
      tbb::interface7::internal::isolate_within_arena((uint64_t (***)(_QWORD))&v58, 0);
    }
    v54 = (char *)*((_QWORD *)&v74 + 1);
    for (k = (char *)v74; k != v54; k += 8)
    {
      v64 = k;
      sub_20C45FB70((uint64_t **)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)k, (uint64_t)&unk_20CAC184C, (_DWORD **)&v64);
    }
    pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrimsInParallel((uint64_t)v36, (uint64_t)&v74, v51);
    if (v61)
    {
      v62 = (char *)v61;
      operator delete(v61);
    }
    sub_20C33E850((uint64_t)__p);
    __p[0] = &v74;
    sub_20BFD6F90((void ***)__p);
    __p[0] = &v73[3];
    sub_20BFD6F90((void ***)__p);
    __p[0] = v73;
    sub_20BFD6F90((void ***)__p);
    __p[0] = &v72[3];
    sub_20BFD6F90((void ***)__p);
    __p[0] = v72;
    sub_20BFD6F90((void ***)__p);
    pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)v82);
    v72[0] = (void **)&v76;
    sub_20BFD6F90(v72);
    pxrInternal__aapl__pxrReserved__::Usd_ClipCache::Lifeboat::~Lifeboat(v79);
  }
  else if (sub_20C286E00(1))
  {
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Nothing to recompose in cache changes\n", v52, v53);
  }
}

void sub_20C45F1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;

  sub_20C33E850((uint64_t)&__p);
  sub_20C42E504((void **)&a34);
  pxrInternal__aapl__pxrReserved__::ArResolverScopedCache::~ArResolverScopedCache((pxrInternal__aapl__pxrReserved__::ArResolverScopedCache *)(v34 - 120));
  a34 = v34 - 192;
  sub_20BFD6F90((void ***)&a34);
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache::Lifeboat::~Lifeboat((void ***)(v34 - 168));
  _Unwind_Resume(a1);
}

void sub_20C45F2E8(_QWORD *a1, unsigned int *a2, unsigned int *a3, void **a4)
{
  unint64_t v6;
  uint64_t v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int *v12;
  BOOL v13;
  const char *Text;
  const char *v15;
  char *v16;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v17;
  const char *v18;
  const char *v19;
  char *v20;
  unsigned int *v21;
  unsigned int *v22;
  char *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  pxrInternal__aapl__pxrReserved__::SdfPath **v38;
  const pxrInternal__aapl__pxrReserved__::SdfPath *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unsigned int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  unsigned int *v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unsigned int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unsigned int *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t *v107;
  char v108;
  uint64_t v109;

  v6 = ((_BYTE *)a4[1] - (_BYTE *)*a4) >> 3;
  if (a2 == a3)
  {
    sub_20BE8BBC4(a4, v6);
  }
  else
  {
    v9 = 0;
    v10 = a2;
    do
    {
      v11 = (unsigned int *)*((_QWORD *)v10 + 1);
      if (v11)
      {
        do
        {
          v12 = v11;
          v11 = *(unsigned int **)v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          v12 = (unsigned int *)*((_QWORD *)v10 + 2);
          v13 = *(_QWORD *)v12 == (_QWORD)v10;
          v10 = v12;
        }
        while (!v13);
      }
      ++v9;
      v10 = v12;
    }
    while (v12 != a3);
    sub_20BE8BBC4(a4, v9 + v6);
    if (a2 != a3)
    {
      do
      {
        if (sub_20C286E00(1))
        {
          Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8));
          pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Recomposing: %s\n", v15, v16, Text);
        }
        if (pxrInternal__aapl__pxrReserved__::SdfPath::IsAbsoluteRootOrPrimPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8))
          && !pxrInternal__aapl__pxrReserved__::SdfPath::ContainsPrimVariantSelection((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8)))
        {
          v107 = 0;
          v108 = 0;
          v109 = 0;
          if (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPrototypePath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *)(a2 + 8), v17))
          {
            if (sub_20C436648(a1 + 25, (uint64_t)&v107, a2 + 8))
            {
              v24 = *(_QWORD *)(v109 + 24);
              v25 = v107;
              v107 = 0;
              if (v108)
              {
                while (1)
                {
                  v26 = *v25;
                  v27 = *v25 & 0xFFFFFFFFFFFFFFFCLL;
                  do
                  {
                    while (1)
                    {
                      v28 = __ldaxr(v25);
                      if (v28 != v26)
                        break;
                      if (!__stlxr(v27, v25))
                        goto LABEL_34;
                    }
                    __clrex();
                    do
                      v29 = __ldxr(v25);
                    while (__stxr(v29, v25));
                  }
                  while (v29 == v26);
                  sched_yield();
                }
              }
              do
                v30 = __ldaxr(v25);
              while (__stlxr(v30 - 4, v25));
LABEL_34:
              v109 = 0;
            }
            else
            {
              v77 = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v23);
              v24 = v77;
              if (v77)
                *(_QWORD *)(v77 + 40) = a1[3] | 1;
            }
            v79 = (uint64_t *)a4[1];
            v78 = (unint64_t)a4[2];
            if ((unint64_t)v79 >= v78)
            {
              v81 = ((char *)v79 - (_BYTE *)*a4) >> 3;
              if ((unint64_t)(v81 + 1) >> 61)
                sub_20BDDF694();
              v82 = v78 - (_QWORD)*a4;
              v83 = v82 >> 2;
              if (v82 >> 2 <= (unint64_t)(v81 + 1))
                v83 = v81 + 1;
              if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFF8)
                v84 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v84 = v83;
              if (v84)
                v85 = (char *)sub_20BDDF6A8((uint64_t)(a4 + 2), v84);
              else
                v85 = 0;
              v90 = (uint64_t *)&v85[8 * v81];
              *v90 = v24;
              v80 = (char *)(v90 + 1);
              v92 = (char *)*a4;
              v91 = (char *)a4[1];
              if (v91 != *a4)
              {
                do
                {
                  v93 = *((_QWORD *)v91 - 1);
                  v91 -= 8;
                  *--v90 = v93;
                }
                while (v91 != v92);
                v91 = (char *)*a4;
              }
              *a4 = v90;
              a4[1] = v80;
              a4[2] = &v85[8 * v84];
              if (v91)
                operator delete(v91);
            }
            else
            {
              *v79 = v24;
              v80 = (char *)(v79 + 1);
            }
            a4[1] = v80;
            v94 = (unsigned int *)*((_QWORD *)a2 + 1);
            if (v94)
            {
              do
              {
                v22 = v94;
                v94 = *(unsigned int **)v94;
              }
              while (v94);
            }
            else
            {
              do
              {
                v22 = (unsigned int *)*((_QWORD *)a2 + 2);
                v13 = *(_QWORD *)v22 == (_QWORD)a2;
                a2 = v22;
              }
              while (!v13);
            }
          }
          else
          {
            pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), &v106);
            if (sub_20C436648(a1 + 25, (uint64_t)&v107, (unsigned int *)&v106))
            {
              v31 = *(_QWORD *)(v109 + 24);
              v32 = v107;
              v107 = 0;
              if (v108)
              {
                while (1)
                {
                  v33 = *v32;
                  v34 = *v32 & 0xFFFFFFFFFFFFFFFCLL;
                  do
                  {
                    while (1)
                    {
                      v35 = __ldaxr(v32);
                      if (v35 != v33)
                        break;
                      if (!__stlxr(v34, v32))
                        goto LABEL_46;
                    }
                    __clrex();
                    do
                      v36 = __ldxr(v32);
                    while (__stxr(v36, v32));
                  }
                  while (v36 == v33);
                  sched_yield();
                }
              }
              do
                v37 = __ldaxr(v32);
              while (__stlxr(v37 - 4, v32));
LABEL_46:
              v109 = 0;
              if ((*(_QWORD *)(v31 + 56) & 0x1000) != 0)
                v38 = 0;
              else
                v38 = (pxrInternal__aapl__pxrReserved__::SdfPath **)(a1 + 151);
              pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeChildren((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, v31, v38, 0);
              while (1)
              {
                if (sub_20C436648(a1 + 25, (uint64_t)&v107, a2 + 8))
                {
                  v40 = *(_QWORD *)(v109 + 24);
                  v42 = (char *)a4[1];
                  v41 = (unint64_t)a4[2];
                  if ((unint64_t)v42 >= v41)
                  {
                    v50 = (v42 - (_BYTE *)*a4) >> 3;
                    if ((unint64_t)(v50 + 1) >> 61)
                      sub_20BDDF694();
                    v51 = v41 - (_QWORD)*a4;
                    v52 = v51 >> 2;
                    if (v51 >> 2 <= (unint64_t)(v50 + 1))
                      v52 = v50 + 1;
                    if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFF8)
                      v53 = 0x1FFFFFFFFFFFFFFFLL;
                    else
                      v53 = v52;
                    if (v53)
                      v54 = (char *)sub_20BDDF6A8((uint64_t)(a4 + 2), v53);
                    else
                      v54 = 0;
                    v60 = &v54[8 * v50];
                    *(_QWORD *)v60 = v40;
                    v43 = v60 + 8;
                    v62 = (char *)*a4;
                    v61 = (char *)a4[1];
                    if (v61 != *a4)
                    {
                      do
                      {
                        v63 = *((_QWORD *)v61 - 1);
                        v61 -= 8;
                        *((_QWORD *)v60 - 1) = v63;
                        v60 -= 8;
                      }
                      while (v61 != v62);
                      v61 = (char *)*a4;
                    }
                    *a4 = v60;
                    a4[1] = v43;
                    a4[2] = &v54[8 * v53];
                    if (v61)
                      operator delete(v61);
                  }
                  else
                  {
                    *(_QWORD *)v42 = v40;
                    v43 = v42 + 8;
                  }
                  a4[1] = v43;
                  if (v109)
                  {
                    v64 = v107;
                    v107 = 0;
                    if (v108)
                    {
                      while (1)
                      {
                        v65 = *v64;
                        v66 = *v64 & 0xFFFFFFFFFFFFFFFCLL;
                        do
                        {
                          while (1)
                          {
                            v67 = __ldaxr(v64);
                            if (v67 != v65)
                              break;
                            if (!__stlxr(v66, v64))
                              goto LABEL_91;
                          }
                          __clrex();
                          do
                            v68 = __ldxr(v64);
                          while (__stxr(v68, v64));
                        }
                        while (v68 == v65);
                        sched_yield();
                      }
                    }
                    do
                      v69 = __ldaxr(v64);
                    while (__stlxr(v69 - 4, v64));
LABEL_91:
                    v109 = 0;
                  }
                }
                else if (pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::IsPrototypePath((pxrInternal__aapl__pxrReserved__::Usd_InstanceCache *)(a2 + 8), v39))
                {
                  v45 = pxrInternal__aapl__pxrReserved__::UsdStage::_InstantiatePrim((pxrInternal__aapl__pxrReserved__::UsdStage *)a1, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v44);
                  v46 = v45;
                  if (v45)
                    *(_QWORD *)(v45 + 40) = a1[3] | 1;
                  v48 = (uint64_t *)a4[1];
                  v47 = (unint64_t)a4[2];
                  if ((unint64_t)v48 >= v47)
                  {
                    v55 = ((char *)v48 - (_BYTE *)*a4) >> 3;
                    if ((unint64_t)(v55 + 1) >> 61)
                      sub_20BDDF694();
                    v56 = v47 - (_QWORD)*a4;
                    v57 = v56 >> 2;
                    if (v56 >> 2 <= (unint64_t)(v55 + 1))
                      v57 = v55 + 1;
                    if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFF8)
                      v58 = 0x1FFFFFFFFFFFFFFFLL;
                    else
                      v58 = v57;
                    if (v58)
                      v59 = (char *)sub_20BDDF6A8((uint64_t)(a4 + 2), v58);
                    else
                      v59 = 0;
                    v70 = (uint64_t *)&v59[8 * v55];
                    *v70 = v46;
                    v49 = (char *)(v70 + 1);
                    v72 = (char *)*a4;
                    v71 = (char *)a4[1];
                    if (v71 != *a4)
                    {
                      do
                      {
                        v73 = *((_QWORD *)v71 - 1);
                        v71 -= 8;
                        *--v70 = v73;
                      }
                      while (v71 != v72);
                      v71 = (char *)*a4;
                    }
                    *a4 = v70;
                    a4[1] = v49;
                    a4[2] = &v59[8 * v58];
                    if (v71)
                      operator delete(v71);
                  }
                  else
                  {
                    *v48 = v45;
                    v49 = (char *)(v48 + 1);
                  }
                  a4[1] = v49;
                }
                v74 = (unsigned int *)*((_QWORD *)a2 + 1);
                if (v74)
                {
                  do
                  {
                    v22 = v74;
                    v74 = *(unsigned int **)v74;
                  }
                  while (v74);
                }
                else
                {
                  do
                  {
                    v22 = (unsigned int *)*((_QWORD *)a2 + 2);
                    v13 = *(_QWORD *)v22 == (_QWORD)a2;
                    a2 = v22;
                  }
                  while (!v13);
                }
                if (v22 == a3)
                  break;
                pxrInternal__aapl__pxrReserved__::SdfPath::GetParentPath((pxrInternal__aapl__pxrReserved__::SdfPath *)(v22 + 8), &v105);
                v76 = v105;
                v75 = v106;
                pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v105 + 1);
                sub_20BFD265C(&v105);
                a2 = v22;
                if (v76 != v75)
                  goto LABEL_160;
              }
              v22 = a3;
            }
            else if (pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::operator BOOL(&v106))
            {
              v86 = (unsigned int *)*((_QWORD *)a2 + 1);
              if (v86)
              {
                do
                {
                  v22 = v86;
                  v86 = *(unsigned int **)v86;
                }
                while (v86);
              }
              else
              {
                do
                {
                  v22 = (unsigned int *)*((_QWORD *)a2 + 2);
                  v13 = *(_QWORD *)v22 == (_QWORD)a2;
                  a2 = v22;
                }
                while (!v13);
              }
            }
            else
            {
              v88 = (char *)a4[1];
              v87 = (unint64_t)a4[2];
              if ((unint64_t)v88 >= v87)
              {
                v95 = (v88 - (_BYTE *)*a4) >> 3;
                if ((unint64_t)(v95 + 1) >> 61)
                  sub_20BDDF694();
                v96 = v87 - (_QWORD)*a4;
                v97 = v96 >> 2;
                if (v96 >> 2 <= (unint64_t)(v95 + 1))
                  v97 = v95 + 1;
                if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFF8)
                  v98 = 0x1FFFFFFFFFFFFFFFLL;
                else
                  v98 = v97;
                if (v98)
                  v99 = (char *)sub_20BDDF6A8((uint64_t)(a4 + 2), v98);
                else
                  v99 = 0;
                v100 = &v99[8 * v95];
                *(_QWORD *)v100 = a1[3];
                v89 = v100 + 8;
                v102 = (char *)*a4;
                v101 = (char *)a4[1];
                if (v101 != *a4)
                {
                  do
                  {
                    v103 = *((_QWORD *)v101 - 1);
                    v101 -= 8;
                    *((_QWORD *)v100 - 1) = v103;
                    v100 -= 8;
                  }
                  while (v101 != v102);
                  v101 = (char *)*a4;
                }
                *a4 = v100;
                a4[1] = v89;
                a4[2] = &v99[8 * v98];
                if (v101)
                  operator delete(v101);
              }
              else
              {
                *(_QWORD *)v88 = a1[3];
                v89 = v88 + 8;
              }
              a4[1] = v89;
              v104 = (unsigned int *)*((_QWORD *)a2 + 1);
              if (v104)
              {
                do
                {
                  v22 = v104;
                  v104 = *(unsigned int **)v104;
                }
                while (v104);
              }
              else
              {
                do
                {
                  v22 = (unsigned int *)*((_QWORD *)a2 + 2);
                  v13 = *(_QWORD *)v22 == (_QWORD)a2;
                  a2 = v22;
                }
                while (!v13);
              }
            }
LABEL_160:
            pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v106 + 1);
            sub_20BFD265C(&v106);
          }
          v109 = 0;
          sub_20BEBF29C(&v107);
        }
        else
        {
          if (sub_20C286E00(1))
          {
            v18 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8));
            pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Skipping non-prim: %s\n", v19, v20, v18);
          }
          v21 = (unsigned int *)*((_QWORD *)a2 + 1);
          if (v21)
          {
            do
            {
              v22 = v21;
              v21 = *(unsigned int **)v21;
            }
            while (v21);
          }
          else
          {
            do
            {
              v22 = (unsigned int *)*((_QWORD *)a2 + 2);
              v13 = *(_QWORD *)v22 == (_QWORD)a2;
              a2 = v22;
            }
            while (!v13);
          }
        }
        a2 = v22;
      }
      while (v22 != a3);
    }
  }
}

void sub_20C45FAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  sub_20BFD1A18(&a14);
  a17 = 0;
  sub_20BEBF29C(&a15);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C45FB10@<X0>(_QWORD *a1@<X0>, unsigned int *a2@<X1>, _DWORD *a3@<X2>, _DWORD *a4@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  _DWORD *v8;
  _DWORD *v9;

  v6 = sub_20C0E70D0(a1, a2);
  if (v6)
  {
    v7 = v6;
    sub_20BFD6E54(a4, (_DWORD *)v6 + 6);
    v8 = a4 + 1;
    v9 = (_DWORD *)v7 + 7;
  }
  else
  {
    sub_20BFD6E54(a4, a3);
    v8 = a4 + 1;
    v9 = a3 + 1;
  }
  return sub_20BFD6EA4(v8, v9);
}

_DWORD *sub_20C45FB70(uint64_t **a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3, _DWORD **a4)
{
  void **v6;
  _DWORD *v7;
  uint64_t **v8;
  _DWORD *v9;
  _QWORD v11[2];
  char v12;
  uint64_t v13;

  v6 = (void **)sub_20C137858((uint64_t)a1, &v13, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = (uint64_t **)v6;
    v7 = operator new(0x40uLL);
    v11[1] = a1 + 1;
    v9 = *a4;
    sub_20BFD6E54(v7 + 8, v9);
    sub_20BFD6EA4(v7 + 9, v9 + 1);
    *((_QWORD *)v7 + 5) = 0;
    *((_QWORD *)v7 + 6) = 0;
    *((_QWORD *)v7 + 7) = 0;
    v12 = 1;
    sub_20BDDE1B4(a1, v13, v8, (uint64_t *)v7);
    v11[0] = 0;
    sub_20C45FC34((uint64_t)v11, 0);
  }
  return v7;
}

void sub_20C45FC34(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      sub_20C3A2290((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

void sub_20C45FC78(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 32;
        sub_20C45FCFC((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_20C45FCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v6;

  v3 = *(_QWORD *)(a2 + 24);
  if ((v3 & 7) != 0)
  {
    v4 = (unsigned int *)(v3 & 0xFFFFFFFFFFFFFFF8);
    do
      v5 = __ldxr(v4);
    while (__stlxr(v5 - 2, v4));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a2 + 20));
  sub_20BFD265C((_DWORD *)(a2 + 16));
  v6 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a2 + 8);
  if (v6)
    sub_20C35C614(v6);
}

uint64_t sub_20C45FD60(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  void *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t *v15;

  v3 = (a1[1] - *a1) >> 5;
  v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59)
    sub_20BDDF694();
  v6 = a1[2] - *a1;
  if (v6 >> 4 > v4)
    v4 = v6 >> 4;
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0)
    v7 = 0x7FFFFFFFFFFFFFFLL;
  else
    v7 = v4;
  v15 = a1 + 2;
  if (v7)
    v8 = (char *)sub_20BED2F10((uint64_t)(a1 + 2), v7);
  else
    v8 = 0;
  v11 = v8;
  v12 = &v8[32 * v3];
  v14 = &v8[32 * v7];
  sub_20C37F2BC((uint64_t)(a1 + 2), (uint64_t)v12, a2);
  v13 = v12 + 32;
  sub_20C45FE4C(a1, &v11);
  v9 = a1[1];
  sub_20C45FFF8(&v11);
  return v9;
}

void sub_20C45FE38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C45FFF8((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C45FE4C(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C45FEC0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C45FEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  v14 = 0;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v9 = a3;
    do
    {
      v9 -= 32;
      sub_20C3AE790(a1, v7 - 32, v9);
      v7 = *((_QWORD *)&v16 + 1) - 32;
      *((_QWORD *)&v16 + 1) -= 32;
    }
    while (v9 != a5);
    v11 = v16;
  }
  v14 = 1;
  sub_20C45FF74((uint64_t)v13);
  return v11;
}

uint64_t sub_20C45FF74(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C45FFA8((uint64_t *)a1);
  return a1;
}

void sub_20C45FFA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1[2] + 8);
  v2 = *(_QWORD *)(a1[1] + 8);
  if (v1 != v2)
  {
    v3 = *a1;
    do
    {
      sub_20C45FCFC(v3, v1);
      v1 += 32;
    }
    while (v1 != v2);
  }
}

void **sub_20C45FFF8(void **a1)
{
  sub_20C460028(a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

void sub_20C460028(_QWORD *a1)
{
  uint64_t i;
  uint64_t v2;
  uint64_t v4;

  v2 = a1[1];
  for (i = a1[2]; i != v2; i = a1[2])
  {
    v4 = a1[4];
    a1[2] = i - 32;
    sub_20C45FCFC(v4, i - 32);
  }
}

_OWORD *sub_20C46006C(uint64_t a1, _DWORD *a2, uint64_t *a3)
{
  _OWORD *v6;
  void *v7;
  uint64_t v9[2];

  v6 = (_OWORD *)tbb::internal::allocate_via_handler_v3((tbb::internal *)0x20);
  v9[1] = a1;
  *v6 = 0u;
  v6[1] = 0u;
  sub_20C4600EC((uint64_t)(v6 + 1), a2, a3);
  v9[0] = 0;
  sub_20C46014C(v9, v7);
  return v6;
}

void sub_20C4600D8(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20C46014C(&a9, a2);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4600EC(uint64_t a1, _DWORD *a2, uint64_t *a3)
{
  _DWORD *v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  v6 = sub_20BFD6E54((_DWORD *)a1, a2);
  sub_20BFD6EA4(v6 + 1, a2 + 1);
  v7 = *a3;
  *(_QWORD *)(a1 + 8) = *a3;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 48);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return a1;
}

uint64_t *sub_20C46014C(uint64_t *a1, void *a2)
{
  uint64_t v3;

  v3 = *a1;
  if (v3)
    tbb::internal::deallocate_via_handler_v3(v3, a2);
  return a1;
}

_QWORD *sub_20C46017C(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_20BDDF654(a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 8 * a2);
    a1[1] = &v4[8 * a2];
  }
  return a1;
}

void sub_20C4601D4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C4601F0(uint64_t result, uint64_t **a2, uint64_t a3, char a4)
{
  uint64_t **v7;
  uint64_t **v8;
  uint64_t **v9;
  uint64_t **v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t **v17;
  uint64_t **v18;
  uint64_t **v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t **v22;
  BOOL v23;
  uint64_t **v24;
  uint64_t **v25;
  uint64_t *v26;
  uint64_t **v27;
  uint64_t *v28;
  uint64_t **v29;
  uint64_t **v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t **v36;
  BOOL v37;
  char v38;
  uint64_t v39;
  uint64_t **v40;
  uint64_t **v41;
  uint64_t v42;
  uint64_t **v43;
  int64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t **v48;
  uint64_t **v49;
  uint64_t **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t **v57;
  uint64_t **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t **v63;
  uint64_t **v64;
  uint64_t **v66;
  uint64_t **v67;
  uint64_t **v68;
  uint64_t **v69;
  uint64_t **v70;
  uint64_t *v71;

  v7 = (uint64_t **)result;
LABEL_2:
  v8 = a2 - 1;
  v69 = a2 - 2;
  v70 = a2;
  v9 = a2 - 3;
  v10 = v7;
  while (2)
  {
    v7 = v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = a2 - v10;
    switch(v12)
    {
      case 0:
      case 1:
        return result;
      case 2:
        result = sub_20C460948(v8, v7);
        if ((_DWORD)result)
        {
          v28 = *v7;
          *v7 = *v8;
          *v8 = v28;
        }
        return result;
      case 3:
        return sub_20C460A18(v7, v7 + 1, v8);
      case 4:
        return sub_20C460CE4(v7, v7 + 1, v7 + 2, v8);
      case 5:
        v29 = v7 + 2;
        v30 = v7 + 3;
        sub_20C460CE4(v7, v7 + 1, v7 + 2, v7 + 3);
        result = sub_20C460948(v8, v7 + 3);
        if ((_DWORD)result)
        {
          v31 = *v30;
          *v30 = *v8;
          *v8 = v31;
          result = sub_20C460948(v7 + 3, v7 + 2);
          if ((_DWORD)result)
          {
            v32 = *v29;
            v33 = *v30;
            *v29 = *v30;
            *v30 = v32;
            result = sub_20C460948(v7 + 2, v7 + 1);
            if ((_DWORD)result)
            {
              v34 = v7[1];
              v7[1] = v33;
              v7[2] = v34;
              result = sub_20C460948(v7 + 1, v7);
              if ((_DWORD)result)
              {
                v35 = *v7;
                *v7 = v33;
                v7[1] = v35;
              }
            }
          }
        }
        return result;
      default:
        if (v11 <= 191)
        {
          v36 = v7 + 1;
          v37 = v7 == a2 || v36 == a2;
          v38 = v37;
          if ((a4 & 1) != 0)
          {
            if ((v38 & 1) == 0)
            {
              v39 = 0;
              v40 = v7;
              do
              {
                v41 = v40;
                v40 = v36;
                result = sub_20C460948(v36, v41);
                if ((_DWORD)result)
                {
                  v71 = *v40;
                  v42 = v39;
                  while (1)
                  {
                    *(uint64_t **)((char *)v7 + v42 + 8) = *(uint64_t **)((char *)v7 + v42);
                    if (!v42)
                      break;
                    v42 -= 8;
                    result = sub_20C460948(&v71, (uint64_t **)((char *)v7 + v42));
                    if ((result & 1) == 0)
                    {
                      v43 = (uint64_t **)((char *)v7 + v42 + 8);
                      goto LABEL_78;
                    }
                  }
                  v43 = v7;
LABEL_78:
                  a2 = v70;
                  *v43 = v71;
                }
                v36 = v40 + 1;
                v39 += 8;
              }
              while (v40 + 1 != a2);
            }
          }
          else if ((v38 & 1) == 0)
          {
            v66 = v7 - 1;
            do
            {
              v67 = v7;
              v7 = v36;
              result = sub_20C460948(v36, v67);
              if ((_DWORD)result)
              {
                v71 = *v7;
                v68 = v66;
                do
                {
                  v68[2] = v68[1];
                  result = sub_20C460948(&v71, v68--);
                }
                while ((result & 1) != 0);
                v68[2] = v71;
              }
              v36 = v7 + 1;
              ++v66;
            }
            while (v7 + 1 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v7 != a2)
          {
            v44 = (unint64_t)(v12 - 2) >> 1;
            v45 = v44;
            do
            {
              v46 = v45;
              if (v44 >= v45)
              {
                v47 = (2 * v45) | 1;
                v48 = &v7[v47];
                if (2 * v45 + 2 < v12 && sub_20C460948(&v7[v47], v48 + 1))
                {
                  ++v48;
                  v47 = 2 * v46 + 2;
                }
                v49 = &v7[v46];
                result = sub_20C460948(v48, v49);
                if ((result & 1) == 0)
                {
                  v71 = *v49;
                  do
                  {
                    v50 = v48;
                    *v49 = *v48;
                    if (v44 < v47)
                      break;
                    v51 = (2 * v47) | 1;
                    v48 = &v7[v51];
                    v52 = 2 * v47 + 2;
                    if (v52 < v12 && sub_20C460948(&v7[v51], v48 + 1))
                    {
                      ++v48;
                      v51 = v52;
                    }
                    result = sub_20C460948(v48, &v71);
                    v49 = v50;
                    v47 = v51;
                  }
                  while (!(_DWORD)result);
                  *v50 = v71;
                }
              }
              v45 = v46 - 1;
            }
            while (v46);
            v53 = (unint64_t)v11 >> 3;
            v54 = v70;
            do
            {
              v55 = 0;
              v56 = *v7;
              v57 = v7;
              do
              {
                v58 = &v57[v55 + 1];
                v59 = (2 * v55) | 1;
                v60 = 2 * v55 + 2;
                if (v60 < v53)
                {
                  result = sub_20C460948(&v57[v55 + 1], &v57[v55 + 2]);
                  if ((_DWORD)result)
                  {
                    ++v58;
                    v59 = v60;
                  }
                }
                *v57 = *v58;
                v57 = v58;
                v55 = v59;
              }
              while (v59 <= (uint64_t)((unint64_t)(v53 - 2) >> 1));
              if (v58 == --v54)
              {
                *v58 = v56;
              }
              else
              {
                *v58 = *v54;
                *v54 = v56;
                v61 = (char *)v58 - (char *)v7 + 8;
                if (v61 >= 9)
                {
                  v62 = (((unint64_t)v61 >> 3) - 2) >> 1;
                  v63 = &v7[v62];
                  result = sub_20C460948(v63, v58);
                  if ((_DWORD)result)
                  {
                    v71 = *v58;
                    do
                    {
                      v64 = v63;
                      *v58 = *v63;
                      if (!v62)
                        break;
                      v62 = (v62 - 1) >> 1;
                      v63 = &v7[v62];
                      result = sub_20C460948(v63, &v71);
                      v58 = v64;
                    }
                    while ((result & 1) != 0);
                    *v64 = v71;
                  }
                }
              }
            }
            while (v53-- > 2);
          }
          return result;
        }
        v13 = (unint64_t)v12 >> 1;
        v14 = &v7[(unint64_t)v12 >> 1];
        if ((unint64_t)v11 < 0x401)
        {
          sub_20C460A18(v14, v7, v8);
        }
        else
        {
          sub_20C460A18(v7, v14, v8);
          sub_20C460A18(v7 + 1, v14 - 1, v69);
          sub_20C460A18(v7 + 2, &v7[v13 + 1], v9);
          sub_20C460A18(v14 - 1, v14, &v7[v13 + 1]);
          v15 = *v7;
          *v7 = *v14;
          *v14 = v15;
        }
        a2 = v70;
        --a3;
        if ((a4 & 1) == 0 && (sub_20C460948(v7 - 1, v7) & 1) == 0)
        {
          v71 = *v7;
          result = sub_20C460948(&v71, v8);
          if ((result & 1) != 0)
          {
            v10 = v7;
            do
              result = sub_20C460948(&v71, ++v10);
            while ((result & 1) == 0);
          }
          else
          {
            v24 = v7 + 1;
            do
            {
              v10 = v24;
              if (v24 >= v70)
                break;
              result = sub_20C460948(&v71, v24);
              v24 = v10 + 1;
            }
            while (!(_DWORD)result);
          }
          v25 = v70;
          if (v10 < v70)
          {
            v25 = v70;
            do
              result = sub_20C460948(&v71, --v25);
            while ((result & 1) != 0);
          }
          while (v10 < v25)
          {
            v26 = *v10;
            *v10 = *v25;
            *v25 = v26;
            do
              ++v10;
            while (!sub_20C460948(&v71, v10));
            do
              result = sub_20C460948(&v71, --v25);
            while ((result & 1) != 0);
          }
          v27 = v10 - 1;
          if (v10 - 1 != v7)
            *v7 = *v27;
          a4 = 0;
          *v27 = v71;
          continue;
        }
        v16 = 0;
        v71 = *v7;
        do
          ++v16;
        while ((sub_20C460948(&v7[v16], &v71) & 1) != 0);
        v17 = &v7[v16];
        v18 = v70;
        v37 = v16 == 1;
        a2 = v70;
        if (v37)
        {
          v18 = v70;
          do
          {
            if (v17 >= v18)
              break;
            --v18;
          }
          while ((sub_20C460948(v18, &v71) & 1) == 0);
        }
        else
        {
          do
            --v18;
          while (!sub_20C460948(v18, &v71));
        }
        if (v17 >= v18)
        {
          v22 = v17 - 1;
        }
        else
        {
          v19 = v17;
          v20 = v18;
          do
          {
            v21 = *v19;
            *v19 = *v20;
            *v20 = v21;
            do
              ++v19;
            while ((sub_20C460948(v19, &v71) & 1) != 0);
            do
              --v20;
            while (!sub_20C460948(v20, &v71));
          }
          while (v19 < v20);
          v22 = v19 - 1;
        }
        if (v22 != v7)
          *v7 = *v22;
        *v22 = v71;
        if (v17 < v18)
        {
LABEL_32:
          result = sub_20C4601F0(v7, v22, a3, a4 & 1);
          a4 = 0;
          v10 = v22 + 1;
          continue;
        }
        v23 = sub_20C460AD8(v7, v22);
        v10 = v22 + 1;
        result = sub_20C460AD8(v22 + 1, v70);
        if (!(_DWORD)result)
        {
          if (v23)
            continue;
          goto LABEL_32;
        }
        a2 = v22;
        if (!v23)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t sub_20C460948(uint64_t **a1, uint64_t **a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  const void *v13;
  int v14;
  unint64_t v15;
  const void *v16;
  const void *v17;
  int v18;
  size_t v19;
  const void *v20;
  size_t v21;
  const void *v22;
  size_t v23;
  int v24;

  v2 = **a1;
  v3 = **a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
  {
    if (v2)
      v5 = 1;
    else
      v5 = v3 == 0;
    return !v5;
  }
  else
  {
    if (v2 == v3)
      return 0;
    v7 = v2 & 0xFFFFFFFFFFFFFFF8;
    v8 = v3 & 0xFFFFFFFFFFFFFFF8;
    v9 = *(_QWORD *)(v7 + 8);
    v10 = *(_QWORD *)(v8 + 8);
    if (v9 < v10)
      return 1;
    if (v9 != v10)
    {
      return 0;
    }
    else
    {
      v13 = *(const void **)(v8 + 16);
      v11 = v8 + 16;
      v12 = v13;
      v14 = *(char *)(v11 + 23);
      v17 = *(const void **)(v7 + 16);
      v15 = v7 + 16;
      v16 = v17;
      v18 = *(char *)(v15 + 23);
      if (v18 >= 0)
        v19 = *(unsigned __int8 *)(v15 + 23);
      else
        v19 = *(_QWORD *)(v15 + 8);
      if (v18 >= 0)
        v20 = (const void *)v15;
      else
        v20 = v16;
      if (v14 >= 0)
        v21 = *(unsigned __int8 *)(v11 + 23);
      else
        v21 = *(_QWORD *)(v11 + 8);
      if (v14 >= 0)
        v22 = (const void *)v11;
      else
        v22 = v12;
      if (v21 >= v19)
        v23 = v19;
      else
        v23 = v21;
      v24 = memcmp(v20, v22, v23);
      if (v24)
        return v24 < 0;
      else
        return v19 < v21;
    }
  }
}

uint64_t sub_20C460A18(uint64_t **a1, uint64_t **a2, uint64_t **a3)
{
  char v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;

  v6 = sub_20C460948(a2, a1);
  result = sub_20C460948(a3, a2);
  if ((v6 & 1) != 0)
  {
    v8 = *a1;
    if ((_DWORD)result)
    {
      *a1 = *a3;
    }
    else
    {
      *a1 = *a2;
      *a2 = v8;
      result = sub_20C460948(a3, a2);
      if (!(_DWORD)result)
        return result;
      *a2 = *a3;
    }
    *a3 = v8;
  }
  else if ((_DWORD)result)
  {
    v9 = *a2;
    *a2 = *a3;
    *a3 = v9;
    result = sub_20C460948(a2, a1);
    if ((_DWORD)result)
    {
      v10 = *a1;
      *a1 = *a2;
      *a2 = v10;
    }
  }
  return result;
}

BOOL sub_20C460AD8(uint64_t **a1, uint64_t **a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t **v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t **v13;
  uint64_t **v14;
  uint64_t **v15;
  uint64_t **v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = a2 - 1;
      if (sub_20C460948(a2 - 1, a1))
      {
        v7 = *a1;
        *a1 = *v6;
        *v6 = v7;
      }
      return 1;
    case 3:
      sub_20C460A18(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_20C460CE4(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      v15 = a1 + 2;
      v16 = a1 + 3;
      v17 = a2 - 1;
      sub_20C460CE4(a1, a1 + 1, a1 + 2, a1 + 3);
      if (sub_20C460948(v17, a1 + 3))
      {
        v18 = *v16;
        *v16 = *v17;
        *v17 = v18;
        if (sub_20C460948(a1 + 3, a1 + 2))
        {
          v19 = *v15;
          v20 = *v16;
          *v15 = *v16;
          *v16 = v19;
          if (sub_20C460948(a1 + 2, a1 + 1))
          {
            v21 = a1[1];
            a1[1] = v20;
            a1[2] = v21;
            if (sub_20C460948(a1 + 1, a1))
            {
              v22 = *a1;
              *a1 = v20;
              a1[1] = v22;
            }
          }
        }
      }
      return 1;
    default:
      v8 = a1 + 2;
      sub_20C460A18(a1, a1 + 1, a1 + 2);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    if (sub_20C460948(v9, v8))
    {
      v23 = *v9;
      v12 = v10;
      while (1)
      {
        v13 = (uint64_t **)((char *)a1 + v12);
        *(uint64_t **)((char *)a1 + v12 + 24) = *(uint64_t **)((char *)a1 + v12 + 16);
        if (v12 == -16)
          break;
        v12 -= 8;
        if ((sub_20C460948(&v23, v13 + 1) & 1) == 0)
        {
          v14 = (uint64_t **)((char *)a1 + v12 + 24);
          goto LABEL_13;
        }
      }
      v14 = a1;
LABEL_13:
      *v14 = v23;
      if (++v11 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v10 += 8;
    if (++v9 == a2)
      return 1;
  }
}

uint64_t sub_20C460CE4(uint64_t **a1, uint64_t **a2, uint64_t **a3, uint64_t **a4)
{
  uint64_t result;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;

  sub_20C460A18(a1, a2, a3);
  result = sub_20C460948(a4, a3);
  if ((_DWORD)result)
  {
    v9 = *a3;
    *a3 = *a4;
    *a4 = v9;
    result = sub_20C460948(a3, a2);
    if ((_DWORD)result)
    {
      v10 = *a2;
      *a2 = *a3;
      *a3 = v10;
      result = sub_20C460948(a2, a1);
      if ((_DWORD)result)
      {
        v11 = *a1;
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_20C460D78(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  if (a2 == a3)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = a2;
    do
    {
      ++v4;
      v6 = *(_QWORD *)(v5 + 40);
      if ((v6 & 7) != 0)
        v5 = 0;
      else
        v5 = v6 & 0xFFFFFFFFFFFFFFF8;
    }
    while (v5 != a3);
  }
  sub_20C460DDC((char *)a1, a2, a3, v4);
  return a1;
}

char *sub_20C460DDC(char *result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  char *v6;
  unint64_t *v7;
  uint64_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = (unint64_t *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      *v7++ = a2;
      v8 = *(_QWORD *)(a2 + 40);
      if ((v8 & 7) != 0)
        a2 = 0;
      else
        a2 = v8 & 0xFFFFFFFFFFFFFFF8;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_20C460E3C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C460E58(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  BOOL v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int64_t v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;

  v7 = result;
LABEL_2:
  v8 = a2 - 1;
  v64 = a2 - 2;
  v65 = a2;
  v9 = a2 - 3;
  v10 = (uint64_t *)v7;
  while (2)
  {
    v7 = (uint64_t)v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = a2 - v10;
    switch(v12)
    {
      case 0:
      case 1:
        return result;
      case 2:
        result = sub_20C4615B4((uint64_t)v8, v7);
        if ((_DWORD)result)
        {
          v28 = *(_QWORD *)v7;
          *(_QWORD *)v7 = *v8;
          *v8 = v28;
        }
        return result;
      case 3:
        return sub_20C46169C((uint64_t *)v7, (uint64_t *)(v7 + 8), v8);
      case 4:
        return sub_20C461970((uint64_t *)v7, (uint64_t *)(v7 + 8), (uint64_t *)(v7 + 16), v8);
      case 5:
        v29 = (uint64_t *)(v7 + 24);
        sub_20C461970((uint64_t *)v7, (uint64_t *)(v7 + 8), (uint64_t *)(v7 + 16), (uint64_t *)(v7 + 24));
        result = sub_20C4615B4((uint64_t)v8, v7 + 24);
        if ((_DWORD)result)
        {
          v30 = *v29;
          *v29 = *v8;
          *v8 = v30;
          result = sub_20C4615B4(v7 + 24, v7 + 16);
          if ((_DWORD)result)
          {
            *(int8x16_t *)(v7 + 16) = vextq_s8(*(int8x16_t *)(v7 + 16), *(int8x16_t *)(v7 + 16), 8uLL);
            result = sub_20C4615B4(v7 + 16, v7 + 8);
            if ((_DWORD)result)
            {
              *(int8x16_t *)(v7 + 8) = vextq_s8(*(int8x16_t *)(v7 + 8), *(int8x16_t *)(v7 + 8), 8uLL);
              result = sub_20C4615B4(v7 + 8, v7);
              if ((_DWORD)result)
                *(int8x16_t *)v7 = vextq_s8(*(int8x16_t *)v7, *(int8x16_t *)v7, 8uLL);
            }
          }
        }
        return result;
      default:
        if (v11 <= 191)
        {
          v31 = v7 + 8;
          v32 = (uint64_t *)v7 == a2 || v31 == (_QWORD)a2;
          v33 = v32;
          if ((a4 & 1) != 0)
          {
            if ((v33 & 1) == 0)
            {
              v34 = 0;
              v35 = (uint64_t *)v7;
              do
              {
                v36 = (uint64_t)v35;
                v35 = (uint64_t *)v31;
                result = sub_20C4615B4(v31, v36);
                if ((_DWORD)result)
                {
                  v66 = *v35;
                  v37 = v34;
                  while (1)
                  {
                    *(_QWORD *)(v7 + v37 + 8) = *(_QWORD *)(v7 + v37);
                    if (!v37)
                      break;
                    v37 -= 8;
                    result = sub_20C4615B4((uint64_t)&v66, v37 + v7);
                    if ((result & 1) == 0)
                    {
                      v38 = (_QWORD *)(v7 + v37 + 8);
                      goto LABEL_78;
                    }
                  }
                  v38 = (_QWORD *)v7;
LABEL_78:
                  a2 = v65;
                  *v38 = v66;
                }
                v31 = (uint64_t)(v35 + 1);
                v34 += 8;
              }
              while (v35 + 1 != a2);
            }
          }
          else if ((v33 & 1) == 0)
          {
            v61 = v7 - 8;
            do
            {
              v62 = v7;
              v7 = v31;
              result = sub_20C4615B4(v31, v62);
              if ((_DWORD)result)
              {
                v66 = *(_QWORD *)v7;
                v63 = v61;
                do
                {
                  *(_QWORD *)(v63 + 16) = *(_QWORD *)(v63 + 8);
                  result = sub_20C4615B4((uint64_t)&v66, v63);
                  v63 -= 8;
                }
                while ((result & 1) != 0);
                *(_QWORD *)(v63 + 16) = v66;
              }
              v31 = v7 + 8;
              v61 += 8;
            }
            while ((uint64_t *)(v7 + 8) != a2);
          }
          return result;
        }
        if (!a3)
        {
          if ((uint64_t *)v7 != a2)
          {
            v39 = (unint64_t)(v12 - 2) >> 1;
            v40 = v39;
            do
            {
              v41 = v40;
              if (v39 >= v40)
              {
                v42 = (2 * v40) | 1;
                v43 = (uint64_t *)(v7 + 8 * v42);
                if (2 * v40 + 2 < v12 && sub_20C4615B4(v7 + 8 * v42, (uint64_t)(v43 + 1)))
                {
                  ++v43;
                  v42 = 2 * v41 + 2;
                }
                v44 = (uint64_t *)(v7 + 8 * v41);
                result = sub_20C4615B4((uint64_t)v43, (uint64_t)v44);
                if ((result & 1) == 0)
                {
                  v66 = *v44;
                  do
                  {
                    v45 = v43;
                    *v44 = *v43;
                    if (v39 < v42)
                      break;
                    v46 = (2 * v42) | 1;
                    v43 = (uint64_t *)(v7 + 8 * v46);
                    v47 = 2 * v42 + 2;
                    if (v47 < v12 && sub_20C4615B4(v7 + 8 * v46, (uint64_t)(v43 + 1)))
                    {
                      ++v43;
                      v46 = v47;
                    }
                    result = sub_20C4615B4((uint64_t)v43, (uint64_t)&v66);
                    v44 = v45;
                    v42 = v46;
                  }
                  while (!(_DWORD)result);
                  *v45 = v66;
                }
              }
              v40 = v41 - 1;
            }
            while (v41);
            v48 = (unint64_t)v11 >> 3;
            v49 = v65;
            do
            {
              v50 = 0;
              v51 = *(_QWORD *)v7;
              v52 = (_QWORD *)v7;
              do
              {
                v53 = &v52[v50 + 1];
                v54 = (2 * v50) | 1;
                v55 = 2 * v50 + 2;
                if (v55 < v48)
                {
                  result = sub_20C4615B4((uint64_t)&v52[v50 + 1], (uint64_t)&v52[v50 + 2]);
                  if ((_DWORD)result)
                  {
                    ++v53;
                    v54 = v55;
                  }
                }
                *v52 = *v53;
                v52 = v53;
                v50 = v54;
              }
              while (v54 <= (uint64_t)((unint64_t)(v48 - 2) >> 1));
              if (v53 == --v49)
              {
                *v53 = v51;
              }
              else
              {
                *v53 = *v49;
                *v49 = v51;
                v56 = (uint64_t)v53 - v7 + 8;
                if (v56 >= 9)
                {
                  v57 = (((unint64_t)v56 >> 3) - 2) >> 1;
                  v58 = (uint64_t *)(v7 + 8 * v57);
                  result = sub_20C4615B4((uint64_t)v58, (uint64_t)v53);
                  if ((_DWORD)result)
                  {
                    v66 = *v53;
                    do
                    {
                      v59 = v58;
                      *v53 = *v58;
                      if (!v57)
                        break;
                      v57 = (v57 - 1) >> 1;
                      v58 = (uint64_t *)(v7 + 8 * v57);
                      result = sub_20C4615B4((uint64_t)v58, (uint64_t)&v66);
                      v53 = v59;
                    }
                    while ((result & 1) != 0);
                    *v59 = v66;
                  }
                }
              }
            }
            while (v48-- > 2);
          }
          return result;
        }
        v13 = (unint64_t)v12 >> 1;
        v14 = (uint64_t *)(v7 + 8 * ((unint64_t)v12 >> 1));
        if ((unint64_t)v11 < 0x401)
        {
          sub_20C46169C(v14, (uint64_t *)v7, v8);
        }
        else
        {
          sub_20C46169C((uint64_t *)v7, v14, v8);
          sub_20C46169C((uint64_t *)(v7 + 8), v14 - 1, v64);
          sub_20C46169C((uint64_t *)(v7 + 16), (uint64_t *)(v7 + 8 + 8 * v13), v9);
          sub_20C46169C(v14 - 1, v14, (uint64_t *)(v7 + 8 + 8 * v13));
          v15 = *(_QWORD *)v7;
          *(_QWORD *)v7 = *v14;
          *v14 = v15;
        }
        a2 = v65;
        --a3;
        if ((a4 & 1) == 0 && (sub_20C4615B4(v7 - 8, v7) & 1) == 0)
        {
          v66 = *(_QWORD *)v7;
          result = sub_20C4615B4((uint64_t)&v66, (uint64_t)v8);
          if ((result & 1) != 0)
          {
            v10 = (uint64_t *)v7;
            do
              result = sub_20C4615B4((uint64_t)&v66, (uint64_t)++v10);
            while ((result & 1) == 0);
          }
          else
          {
            v24 = v7 + 8;
            do
            {
              v10 = (uint64_t *)v24;
              if (v24 >= (unint64_t)v65)
                break;
              result = sub_20C4615B4((uint64_t)&v66, v24);
              v24 = (unint64_t)(v10 + 1);
            }
            while (!(_DWORD)result);
          }
          v25 = v65;
          if (v10 < v65)
          {
            v25 = v65;
            do
              result = sub_20C4615B4((uint64_t)&v66, (uint64_t)--v25);
            while ((result & 1) != 0);
          }
          while (v10 < v25)
          {
            v26 = *v10;
            *v10 = *v25;
            *v25 = v26;
            do
              ++v10;
            while (!sub_20C4615B4((uint64_t)&v66, (uint64_t)v10));
            do
              result = sub_20C4615B4((uint64_t)&v66, (uint64_t)--v25);
            while ((result & 1) != 0);
          }
          v27 = v10 - 1;
          if (v10 - 1 != (uint64_t *)v7)
            *(_QWORD *)v7 = *v27;
          a4 = 0;
          *v27 = v66;
          continue;
        }
        v16 = 0;
        v66 = *(_QWORD *)v7;
        do
          v16 += 8;
        while ((sub_20C4615B4(v16 + v7, (uint64_t)&v66) & 1) != 0);
        v17 = (uint64_t *)(v7 + v16);
        v18 = (unint64_t)v65;
        v32 = v16 == 8;
        a2 = v65;
        if (v32)
        {
          v18 = (unint64_t)v65;
          do
          {
            if ((unint64_t)v17 >= v18)
              break;
            v18 -= 8;
          }
          while ((sub_20C4615B4(v18, (uint64_t)&v66) & 1) == 0);
        }
        else
        {
          do
            v18 -= 8;
          while (!sub_20C4615B4(v18, (uint64_t)&v66));
        }
        if ((unint64_t)v17 >= v18)
        {
          v22 = v17 - 1;
        }
        else
        {
          v19 = v17;
          v20 = (uint64_t *)v18;
          do
          {
            v21 = *v19;
            *v19 = *v20;
            *v20 = v21;
            do
              ++v19;
            while ((sub_20C4615B4((uint64_t)v19, (uint64_t)&v66) & 1) != 0);
            do
              --v20;
            while (!sub_20C4615B4((uint64_t)v20, (uint64_t)&v66));
          }
          while (v19 < v20);
          v22 = v19 - 1;
        }
        if (v22 != (uint64_t *)v7)
          *(_QWORD *)v7 = *v22;
        *v22 = v66;
        if ((unint64_t)v17 < v18)
        {
LABEL_32:
          result = sub_20C460E58(v7, v22, a3, a4 & 1);
          a4 = 0;
          v10 = v22 + 1;
          continue;
        }
        v23 = sub_20C461760(v7, v22);
        v10 = v22 + 1;
        result = sub_20C461760((uint64_t)(v22 + 1), v65);
        if (!(_DWORD)result)
        {
          if (v23)
            continue;
          goto LABEL_32;
        }
        a2 = v22;
        if (!v23)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t sub_20C4615B4(uint64_t a1, uint64_t a2)
{
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *NameToken;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  const void *v15;
  const void *v16;
  int v17;
  unint64_t v18;
  const void *v19;
  const void *v20;
  int v21;
  size_t v22;
  const void *v23;
  size_t v24;
  const void *v25;
  size_t v26;
  int v27;

  NameToken = pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)a1 + 16));
  v4 = pxrInternal__aapl__pxrReserved__::SdfPath::GetNameToken((pxrInternal__aapl__pxrReserved__::SdfPath *)(*(_QWORD *)a2 + 16));
  v5 = *(_QWORD *)NameToken;
  v6 = *(_QWORD *)v4;
  if (*(_QWORD *)NameToken)
    v7 = v6 == 0;
  else
    v7 = 1;
  if (v7)
  {
    if (v5)
      v8 = 1;
    else
      v8 = v6 == 0;
    return !v8;
  }
  else
  {
    if (v5 == v6)
      return 0;
    v10 = v5 & 0xFFFFFFFFFFFFFFF8;
    v11 = v6 & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v10 + 8);
    v13 = *(_QWORD *)(v11 + 8);
    if (v12 < v13)
      return 1;
    if (v12 != v13)
    {
      return 0;
    }
    else
    {
      v16 = *(const void **)(v11 + 16);
      v14 = v11 + 16;
      v15 = v16;
      v17 = *(char *)(v14 + 23);
      v20 = *(const void **)(v10 + 16);
      v18 = v10 + 16;
      v19 = v20;
      v21 = *(char *)(v18 + 23);
      if (v21 >= 0)
        v22 = *(unsigned __int8 *)(v18 + 23);
      else
        v22 = *(_QWORD *)(v18 + 8);
      if (v21 >= 0)
        v23 = (const void *)v18;
      else
        v23 = v19;
      if (v17 >= 0)
        v24 = *(unsigned __int8 *)(v14 + 23);
      else
        v24 = *(_QWORD *)(v14 + 8);
      if (v17 >= 0)
        v25 = (const void *)v14;
      else
        v25 = v15;
      if (v24 >= v22)
        v26 = v22;
      else
        v26 = v24;
      v27 = memcmp(v23, v25, v26);
      if (v27)
        return v27 < 0;
      else
        return v22 < v24;
    }
  }
}

uint64_t sub_20C46169C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20C4615B4((uint64_t)a2, (uint64_t)a1);
  result = sub_20C4615B4((uint64_t)a3, (uint64_t)a2);
  if ((v6 & 1) != 0)
  {
    v8 = *a1;
    if ((_DWORD)result)
    {
      *a1 = *a3;
    }
    else
    {
      *a1 = *a2;
      *a2 = v8;
      result = sub_20C4615B4((uint64_t)a3, (uint64_t)a2);
      if (!(_DWORD)result)
        return result;
      v8 = *a2;
      *a2 = *a3;
    }
    *a3 = v8;
  }
  else if ((_DWORD)result)
  {
    v9 = *a2;
    *a2 = *a3;
    *a3 = v9;
    result = sub_20C4615B4((uint64_t)a2, (uint64_t)a1);
    if ((_DWORD)result)
    {
      v10 = *a1;
      *a1 = *a2;
      *a2 = v10;
    }
  }
  return result;
}

BOOL sub_20C461760(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = ((uint64_t)a2 - a1) >> 3;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = a2 - 1;
      if (sub_20C4615B4((uint64_t)(a2 - 1), a1))
      {
        v7 = *(_QWORD *)a1;
        *(_QWORD *)a1 = *v6;
        *v6 = v7;
      }
      return 1;
    case 3:
      sub_20C46169C((uint64_t *)a1, (uint64_t *)(a1 + 8), a2 - 1);
      return 1;
    case 4:
      sub_20C461970((uint64_t *)a1, (uint64_t *)(a1 + 8), (uint64_t *)(a1 + 16), a2 - 1);
      return 1;
    case 5:
      v15 = (uint64_t *)(a1 + 24);
      v16 = a2 - 1;
      sub_20C461970((uint64_t *)a1, (uint64_t *)(a1 + 8), (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 24));
      if (sub_20C4615B4((uint64_t)v16, a1 + 24))
      {
        v17 = *v15;
        *v15 = *v16;
        *v16 = v17;
        if (sub_20C4615B4(a1 + 24, a1 + 16))
        {
          *(int8x16_t *)(a1 + 16) = vextq_s8(*(int8x16_t *)(a1 + 16), *(int8x16_t *)(a1 + 16), 8uLL);
          if (sub_20C4615B4(a1 + 16, a1 + 8))
          {
            *(int8x16_t *)(a1 + 8) = vextq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 8), 8uLL);
            if (sub_20C4615B4(a1 + 8, a1))
              *(int8x16_t *)a1 = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
          }
        }
      }
      return 1;
    default:
      v8 = a1 + 16;
      sub_20C46169C((uint64_t *)a1, (uint64_t *)(a1 + 8), (uint64_t *)(a1 + 16));
      v9 = (uint64_t *)(a1 + 24);
      if ((uint64_t *)(a1 + 24) == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    if (sub_20C4615B4((uint64_t)v9, v8))
    {
      v18 = *v9;
      v12 = v10;
      while (1)
      {
        v13 = a1 + v12;
        *(_QWORD *)(a1 + v12 + 24) = *(_QWORD *)(a1 + v12 + 16);
        if (v12 == -16)
          break;
        v12 -= 8;
        if ((sub_20C4615B4((uint64_t)&v18, v13 + 8) & 1) == 0)
        {
          v14 = (_QWORD *)(a1 + v12 + 24);
          goto LABEL_13;
        }
      }
      v14 = (_QWORD *)a1;
LABEL_13:
      *v14 = v18;
      if (++v11 == 8)
        return v9 + 1 == a2;
    }
    v8 = (uint64_t)v9;
    v10 += 8;
    if (++v9 == a2)
      return 1;
  }
}

uint64_t sub_20C461970(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_20C46169C(a1, a2, a3);
  result = sub_20C4615B4((uint64_t)a4, (uint64_t)a3);
  if ((_DWORD)result)
  {
    v9 = *a3;
    *a3 = *a4;
    *a4 = v9;
    result = sub_20C4615B4((uint64_t)a3, (uint64_t)a2);
    if ((_DWORD)result)
    {
      v10 = *a2;
      *a2 = *a3;
      *a3 = v10;
      result = sub_20C4615B4((uint64_t)a2, (uint64_t)a1);
      if ((_DWORD)result)
      {
        v11 = *a1;
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t *sub_20C461A04(uint64_t *result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  BOOL v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t *v66;
  int64_t v67;
  int64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;

  v7 = result;
LABEL_2:
  v8 = v7;
  while (2)
  {
    v7 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = ((char *)a2 - (char *)v8) >> 4;
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
        return result;
      case 2uLL:
        if (*(a2 - 1) < (unint64_t)v8[1])
        {
          v43 = *v8;
          *v8 = *(a2 - 2);
          *(a2 - 2) = v43;
          v44 = v8[1];
          v8[1] = *(a2 - 1);
          *(a2 - 1) = v44;
        }
        return result;
      case 3uLL:
        return sub_20C462158(v8, v8 + 2, a2 - 2);
      case 4uLL:
        return sub_20C462428(v8, v8 + 2, v8 + 4, a2 - 2);
      case 5uLL:
        result = sub_20C462428(v8, v8 + 2, v8 + 4, v8 + 6);
        if (*(a2 - 1) < (unint64_t)v8[7])
        {
          v45 = v8[6];
          v8[6] = *(a2 - 2);
          *(a2 - 2) = v45;
          v46 = v8[7];
          v8[7] = *(a2 - 1);
          *(a2 - 1) = v46;
          v47 = v8[7];
          v48 = v8[5];
          if (v47 < v48)
          {
            v49 = v8[6];
            v50 = v8[3];
            v51 = v8[4];
            v8[4] = v49;
            v8[5] = v47;
            v8[6] = v51;
            v8[7] = v48;
            if (v50 > v47)
            {
              v52 = v8[1];
              v53 = v8[2];
              v8[2] = v49;
              v8[3] = v47;
              v8[4] = v53;
              v8[5] = v50;
              if (v52 > v47)
              {
                v54 = *v8;
                *v8 = v49;
                v8[1] = v47;
                v8[2] = v54;
                v8[3] = v52;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 383)
        {
          v55 = v8 + 2;
          v57 = v8 == a2 || v55 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v57)
            {
              v58 = 0;
              v59 = v8;
              do
              {
                v60 = v59[3];
                v61 = v59[1];
                v59 = v55;
                if (v60 < v61)
                {
                  v62 = *v55;
                  v63 = v58;
                  while (1)
                  {
                    v64 = (char *)v8 + v63;
                    v65 = *(uint64_t *)((char *)v8 + v63 + 8);
                    *((_QWORD *)v64 + 2) = *(uint64_t *)((char *)v8 + v63);
                    *((_QWORD *)v64 + 3) = v65;
                    if (!v63)
                      break;
                    v63 -= 16;
                    if (v60 >= *((_QWORD *)v64 - 1))
                    {
                      v66 = (uint64_t *)((char *)v8 + v63 + 16);
                      goto LABEL_80;
                    }
                  }
                  v66 = v8;
LABEL_80:
                  *v66 = v62;
                  v66[1] = v60;
                }
                v55 = v59 + 2;
                v58 += 16;
              }
              while (v59 + 2 != a2);
            }
          }
          else if (!v57)
          {
            v98 = v8 + 3;
            do
            {
              v99 = v7[3];
              v100 = v7[1];
              v7 = v55;
              if (v99 < v100)
              {
                v101 = *v55;
                v102 = v98;
                do
                {
                  v103 = v102;
                  v104 = *(v102 - 4);
                  *(v102 - 1) = *(v102 - 3);
                  v105 = *(v102 - 2);
                  v102 -= 2;
                  *v103 = v105;
                }
                while (v99 < v104);
                *(v102 - 1) = v101;
                *v102 = v99;
              }
              v55 = v7 + 2;
              v98 += 2;
            }
            while (v7 + 2 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v8 != a2)
          {
            v67 = (v10 - 2) >> 1;
            v68 = v67;
            do
            {
              v69 = v68;
              if (v67 >= v68)
              {
                v70 = (2 * v68) | 1;
                v71 = &v8[2 * v70];
                if (2 * v69 + 2 < (uint64_t)v10)
                {
                  v72 = v71[1];
                  v73 = v71[3];
                  v71 += 2 * (v72 < v73);
                  if (v72 < v73)
                    v70 = 2 * v69 + 2;
                }
                v74 = v8[2 * v69 + 1];
                if (v71[1] >= v74)
                {
                  v75 = &v8[2 * v69];
                  v76 = *v75;
                  do
                  {
                    v77 = v75;
                    v75 = v71;
                    *v77 = *v71;
                    v77[1] = v71[1];
                    if (v67 < v70)
                      break;
                    v78 = (2 * v70) | 1;
                    v71 = &v8[2 * v78];
                    v79 = 2 * v70 + 2;
                    if (v79 < (uint64_t)v10)
                    {
                      v80 = v71[1];
                      v81 = v71[3];
                      v71 += 2 * (v80 < v81);
                      if (v80 < v81)
                        v78 = v79;
                    }
                    result = (uint64_t *)v71[1];
                    v70 = v78;
                  }
                  while ((unint64_t)result >= v74);
                  *v75 = v76;
                  v75[1] = v74;
                }
              }
              v68 = v69 - 1;
            }
            while (v69);
            v82 = (unint64_t)v9 >> 4;
            do
            {
              v83 = 0;
              v84 = *v8;
              v85 = v8[1];
              v86 = v8;
              do
              {
                v87 = &v86[2 * v83 + 2];
                v88 = (2 * v83) | 1;
                v89 = 2 * v83 + 2;
                if (v89 < v82)
                {
                  v90 = v87[1];
                  v91 = v87[3];
                  v87 += 2 * (v90 < v91);
                  if (v90 < v91)
                    v88 = v89;
                }
                *v86 = *v87;
                v86[1] = v87[1];
                v86 = v87;
                v83 = v88;
              }
              while (v88 <= (uint64_t)((unint64_t)(v82 - 2) >> 1));
              if (v87 == a2 - 2)
              {
                *v87 = v84;
                v87[1] = v85;
              }
              else
              {
                *v87 = *(a2 - 2);
                v87[1] = *(a2 - 1);
                *(a2 - 2) = v84;
                *(a2 - 1) = v85;
                v92 = (char *)v87 - (char *)v8 + 16;
                if (v92 >= 17)
                {
                  v93 = (((unint64_t)v92 >> 4) - 2) >> 1;
                  v94 = v87[1];
                  if (v8[2 * v93 + 1] < v94)
                  {
                    v95 = *v87;
                    do
                    {
                      v96 = v87;
                      v87 = &v8[2 * v93];
                      *v96 = *v87;
                      v96[1] = v87[1];
                      if (!v93)
                        break;
                      v93 = (v93 - 1) >> 1;
                    }
                    while (v8[2 * v93 + 1] < v94);
                    *v87 = v95;
                    v87[1] = v94;
                  }
                }
              }
              a2 -= 2;
            }
            while (v82-- > 2);
          }
          return result;
        }
        v11 = v10 >> 1;
        v12 = &v8[2 * (v10 >> 1)];
        if ((unint64_t)v9 < 0x801)
        {
          result = sub_20C462158(&v7[2 * (v10 >> 1)], v7, a2 - 2);
        }
        else
        {
          sub_20C462158(v7, &v7[2 * (v10 >> 1)], a2 - 2);
          sub_20C462158(v7 + 2, v12 - 2, a2 - 4);
          sub_20C462158(v7 + 4, &v7[2 * v11 + 2], a2 - 6);
          result = sub_20C462158(v12 - 2, v12, &v7[2 * v11 + 2]);
          v13 = v12[1];
          v14 = *(_OWORD *)v7;
          *v7 = *v12;
          v7[1] = v13;
          *(_OWORD *)v12 = v14;
        }
        --a3;
        if ((a4 & 1) == 0)
        {
          v15 = v7[1];
          if (*(v7 - 1) < v15)
            goto LABEL_12;
          if (v15 >= *(a2 - 1))
          {
            v33 = v7 + 2;
            do
            {
              v8 = v33;
              if (v33 >= a2)
                break;
              v34 = v33[1];
              v33 += 2;
            }
            while (v15 >= v34);
          }
          else
          {
            v31 = v7;
            do
            {
              v8 = v31 + 2;
              v32 = v31[3];
              v31 += 2;
            }
            while (v15 >= v32);
          }
          v35 = a2;
          if (v8 < a2)
          {
            v36 = a2;
            do
            {
              v35 = v36 - 2;
              v37 = *(v36 - 1);
              v36 -= 2;
            }
            while (v15 < v37);
          }
          v38 = *v7;
          while (v8 < v35)
          {
            v39 = *v8;
            *v8 = *v35;
            *v35 = v39;
            v40 = v8[1];
            v8[1] = v35[1];
            v35[1] = v40;
            do
            {
              v41 = v8[3];
              v8 += 2;
            }
            while (v15 >= v41);
            do
            {
              v42 = *(v35 - 1);
              v35 -= 2;
            }
            while (v15 < v42);
          }
          if (v8 - 2 != v7)
          {
            *v7 = *(v8 - 2);
            v7[1] = *(v8 - 1);
          }
          a4 = 0;
          *(v8 - 2) = v38;
          *(v8 - 1) = v15;
          continue;
        }
        v15 = v7[1];
LABEL_12:
        v16 = 0;
        v17 = *v7;
        do
        {
          v18 = v7[v16 + 3];
          v16 += 2;
        }
        while (v18 < v15);
        v19 = &v7[v16];
        v20 = a2;
        if (v16 == 2)
        {
          v23 = a2;
          while (v19 < v23)
          {
            v21 = v23 - 2;
            v24 = *(v23 - 1);
            v23 -= 2;
            if (v24 < v15)
              goto LABEL_22;
          }
          v21 = v23;
        }
        else
        {
          do
          {
            v21 = v20 - 2;
            v22 = *(v20 - 1);
            v20 -= 2;
          }
          while (v22 >= v15);
        }
LABEL_22:
        v8 = v19;
        if (v19 < v21)
        {
          v25 = v21;
          do
          {
            v26 = *v8;
            *v8 = *v25;
            *v25 = v26;
            v27 = v8[1];
            v8[1] = v25[1];
            v25[1] = v27;
            do
            {
              v28 = v8[3];
              v8 += 2;
            }
            while (v28 < v15);
            do
            {
              v29 = *(v25 - 1);
              v25 -= 2;
            }
            while (v29 >= v15);
          }
          while (v8 < v25);
        }
        if (v8 - 2 != v7)
        {
          *v7 = *(v8 - 2);
          v7[1] = *(v8 - 1);
        }
        *(v8 - 2) = v17;
        *(v8 - 1) = v15;
        if (v19 < v21)
        {
LABEL_33:
          result = (uint64_t *)sub_20C461A04(v7, v8 - 2, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v30 = sub_20C462234(v7, v8 - 2);
        result = (uint64_t *)sub_20C462234(v8, a2);
        if (!(_DWORD)result)
        {
          if (v30)
            continue;
          goto LABEL_33;
        }
        a2 = v8 - 2;
        if (!v30)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t *sub_20C462158(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a2 + 1;
  v4 = a2[1];
  v5 = result + 1;
  v6 = a3[1];
  if (v4 < result[1])
  {
    v7 = *result;
    if (v6 >= v4)
    {
      *result = *a2;
      *a2 = v7;
      v11 = result[1];
      result[1] = a2[1];
      a2[1] = v11;
      if (a3[1] >= v11)
        return result;
      v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      v5 = a2 + 1;
    }
    else
    {
      *result = *a3;
      *a3 = v7;
    }
    v3 = a3 + 1;
    goto LABEL_10;
  }
  if (v6 < v4)
  {
    v8 = *a2;
    *a2 = *a3;
    *a3 = v8;
    v9 = a2[1];
    a2[1] = a3[1];
    a3[1] = v9;
    if (a2[1] < (unint64_t)*v5)
    {
      v10 = *result;
      *result = *a2;
      *a2 = v10;
LABEL_10:
      v13 = *v5;
      *v5 = *v3;
      *v3 = v13;
    }
  }
  return result;
}

BOOL sub_20C462234(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = ((char *)a2 - (char *)a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*(a2 - 1) < (unint64_t)a1[1])
      {
        v6 = *a1;
        *a1 = *(a2 - 2);
        *(a2 - 2) = v6;
        v7 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v7;
      }
      return result;
    case 3:
      sub_20C462158(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_20C462428(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      sub_20C462428(a1, a1 + 2, a1 + 4, a1 + 6);
      if (*(a2 - 1) < (unint64_t)a1[7])
      {
        v18 = a1[6];
        a1[6] = *(a2 - 2);
        *(a2 - 2) = v18;
        v19 = a1[7];
        a1[7] = *(a2 - 1);
        *(a2 - 1) = v19;
        v20 = a1[7];
        v21 = a1[5];
        if (v20 < v21)
        {
          v22 = a1[6];
          v23 = a1[3];
          v24 = a1[4];
          a1[4] = v22;
          a1[5] = v20;
          a1[6] = v24;
          a1[7] = v21;
          if (v23 > v20)
          {
            v25 = a1[1];
            v26 = a1[2];
            a1[2] = v22;
            a1[3] = v20;
            a1[4] = v26;
            a1[5] = v23;
            if (v25 > v20)
            {
              v27 = *a1;
              *a1 = v22;
              a1[1] = v20;
              a1[2] = v27;
              a1[3] = v25;
            }
          }
        }
      }
      return 1;
    default:
      v8 = a1 + 4;
      sub_20C462158(a1, a1 + 2, a1 + 4);
      v9 = a1 + 6;
      if (a1 + 6 == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = v9[1];
    if (v12 < v8[1])
    {
      v13 = *v9;
      v14 = v10;
      while (1)
      {
        v15 = (uint64_t *)((char *)a1 + v14);
        v16 = *(uint64_t *)((char *)a1 + v14 + 40);
        v15[6] = *(uint64_t *)((char *)a1 + v14 + 32);
        v15[7] = v16;
        if (v14 == -32)
          break;
        v14 -= 16;
        if (v12 >= v15[3])
        {
          v17 = (uint64_t *)((char *)a1 + v14 + 48);
          goto LABEL_13;
        }
      }
      v17 = a1;
LABEL_13:
      *v17 = v13;
      v17[1] = v12;
      if (++v11 == 8)
        return v9 + 2 == a2;
    }
    v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2)
      return 1;
  }
}

uint64_t *sub_20C462428(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_20C462158(a1, a2, a3);
  if (a4[1] < (unint64_t)a3[1])
  {
    v9 = *a3;
    *a3 = *a4;
    *a4 = v9;
    v10 = a3[1];
    a3[1] = a4[1];
    a4[1] = v10;
    if (a3[1] < (unint64_t)a2[1])
    {
      v11 = *a2;
      *a2 = *a3;
      *a3 = v11;
      v12 = a2[1];
      a2[1] = a3[1];
      a3[1] = v12;
      if (a2[1] < (unint64_t)a1[1])
      {
        v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
        v14 = a1[1];
        a1[1] = a2[1];
        a2[1] = v14;
      }
    }
  }
  return result;
}

uint64_t sub_20C4624EC(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C539C38;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 44));
  sub_20BFD265C((_DWORD *)(a1 + 40));
  return a1;
}

void sub_20C462528(_DWORD *a1)
{
  *(_QWORD *)a1 = off_24C539C38;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(a1 + 11);
  sub_20BFD265C(a1 + 10);
  operator delete(a1);
}

uint64_t sub_20C462564(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_ComposeSubtreeImpl(*(pxrInternal__aapl__pxrReserved__ **)(a1 + 8), *(_QWORD *)(a1 + 16), *(const pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 24), *(const pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask **)(a1 + 32), (_DWORD *)(a1 + 40));
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 48));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C4625F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

void sub_20C46260C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20BFC9CC0(a1, *(_QWORD **)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

uint64_t sub_20C462668(uint64_t a1)
{
  unint64_t *Instance;
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;

  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  pxrInternal__aapl__pxrReserved__::UsdStage::_DestroyPrim(*(pxrInternal__aapl__pxrReserved__::UsdStage **)(a1 + 8), *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16));
  Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  if (!Instance)
    Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
  v3 = v6;
  v4 = atomic_load(Instance + 18);
  if (v3 < v4
    && !pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance))
  {
    pxrInternal__aapl__pxrReserved__::WorkDispatcher::_TransportErrors(&v6, *(_QWORD *)(a1 + 24));
  }
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v6);
  return 0;
}

void sub_20C4626F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C462708(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 == a3)
  {
    v4 = 0;
  }
  else
  {
    v4 = 0;
    v5 = a2;
    do
    {
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      ++v4;
      v5 = v7;
    }
    while (v7 != a3);
  }
  sub_20C46278C(a1, a2, a3, v4);
  return a1;
}

_QWORD *sub_20C46278C(_QWORD *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BE90F0C(result, a4);
    result = sub_20C462810((uint64_t)(v6 + 2), a2, a3, (_QWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C4627F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20BEB4844(&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C462810(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  unsigned int *v6;
  unsigned int v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;
  _QWORD v12[3];
  char v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = a4;
  v15 = a4;
  v14 = a4;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a2 != a3)
  {
    do
    {
      *v4 = a2[4];
      v5 = a2[5];
      v4[1] = v5;
      if (v5)
      {
        v6 = (unsigned int *)(v5 + 8);
        do
          v7 = __ldxr(v6);
        while (__stxr(v7 + 1, v6));
      }
      v8 = (_QWORD *)a2[1];
      if (v8)
      {
        do
        {
          v9 = v8;
          v8 = (_QWORD *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (_QWORD *)a2[2];
          v10 = *v9 == (_QWORD)a2;
          a2 = v9;
        }
        while (!v10);
      }
      v4 += 2;
      v15 = v4;
      a2 = v9;
    }
    while (v9 != a3);
  }
  v13 = 1;
  sub_20C20E6BC((uint64_t)v12);
  return v4;
}

void sub_20C4628D0(uint64_t **a1, _DWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _DWORD *v19;

  v19 = a2;
  v4 = sub_20C45FB70(a1, (pxrInternal__aapl__pxrReserved__::SdfPath *)a2, (uint64_t)&unk_20CAC184C, &v19);
  v5 = (_QWORD *)v4[6];
  v6 = v4[7];
  if ((unint64_t)v5 >= v6)
  {
    v8 = v4[5];
    v9 = ((uint64_t)v5 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61)
      sub_20BDDF694();
    v10 = v6 - v8;
    v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1))
      v11 = v9 + 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    if (v12)
      v13 = (char *)sub_20BDDF6A8((uint64_t)(v4 + 7), v12);
    else
      v13 = 0;
    v14 = &v13[8 * v9];
    v15 = &v13[8 * v12];
    *(_QWORD *)v14 = *a3;
    v7 = v14 + 8;
    v17 = (char *)v4[5];
    v16 = (char *)v4[6];
    if (v16 != v17)
    {
      do
      {
        v18 = *((_QWORD *)v16 - 1);
        v16 -= 8;
        *((_QWORD *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      v16 = (char *)v4[5];
    }
    v4[5] = v14;
    v4[6] = v7;
    v4[7] = v15;
    if (v16)
      operator delete(v16);
  }
  else
  {
    *v5 = *a3;
    v7 = v5 + 1;
  }
  v4[6] = v7;
}

void sub_20C4629D0(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  BOOL v7;
  pxrInternal__aapl__pxrReserved__::SdfPath *v8[3];
  pxrInternal__aapl__pxrReserved__::SdfPath **v9;

  sub_20C019C58(v8, a1[2]);
  v2 = (_QWORD *)*a1;
  v3 = a1 + 1;
  if ((_QWORD *)*a1 != a1 + 1)
  {
    v4 = (int *)v8[0];
    do
    {
      sub_20C01A074(v4, (_DWORD *)v2 + 8);
      sub_20C01A0C8(v4 + 1, (_DWORD *)v2 + 9);
      v5 = (_QWORD *)v2[1];
      if (v5)
      {
        do
        {
          v6 = v5;
          v5 = (_QWORD *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          v6 = (_QWORD *)v2[2];
          v7 = *v6 == (_QWORD)v2;
          v2 = v6;
        }
        while (!v7);
      }
      v4 += 2;
      v2 = v6;
    }
    while (v6 != v3);
  }
  sub_20C39C4D0(v8);
  v9 = v8;
  sub_20BFD6F90((void ***)&v9);
}

void sub_20C462A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD6F90((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C462AA8(uint64_t *a1, _DWORD *a2)
{
  unint64_t v4;
  uint64_t result;

  v4 = a1[1];
  if (v4 >= a1[2])
  {
    result = sub_20BFD7890(a1, a2);
  }
  else
  {
    sub_20BFD6E54((_DWORD *)a1[1], a2);
    sub_20BFD6EA4((_DWORD *)(v4 + 4), a2 + 1);
    result = v4 + 8;
  }
  a1[1] = result;
  return result;
}

uint64_t *sub_20C462B0C(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v4;
  uint64_t *v6;

  if (a2 != a3)
  {
    v4 = a2;
    do
    {
      v6 = sub_20BE10B80(a1, v4);
      sub_20C3A2290((uint64_t)(v4 + 4));
      operator delete(v4);
      v4 = v6;
    }
    while (v6 != a3);
  }
  return a3;
}

_QWORD *sub_20C462B70(_QWORD *result, _DWORD *a2, _DWORD *a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    sub_20BDDF654(result, a4);
    result = sub_20BFD6DBC((uint64_t)(v6 + 2), a2, a3, (_DWORD *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_20C462BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  sub_20BFD6F90(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C462BF4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *a2, uint64_t a3)
{
  uint64_t v7;
  _QWORD *v8;
  pxrInternal__aapl__pxrReserved__::SdfPath *Path;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v10;
  unsigned __int8 HasField;
  int v12;
  int v13;
  char *v15;
  uint64_t *v16;
  char v17;
  _BYTE v18[16];
  uint64_t (**v19)(_QWORD, uint64_t);
  char *v20;
  uint64_t (**v21)(_QWORD, uint64_t);
  char *v22;
  uint64_t *v23;
  uint64_t (**v24)(_QWORD, uint64_t);
  char *v25;
  uint64_t v26;
  __int16 v27;

  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, a2, 1);
  if (v19 != v21 || v20 != v22)
  {
    v7 = MEMORY[0x24BEDB770];
    while (1)
    {
      v17 = 1;
      v8 = (_QWORD *)sub_20C0EEAF8(v23);
      v24 = v19;
      v25 = v20;
      Path = (pxrInternal__aapl__pxrReserved__::SdfPath *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24);
      v10 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v10)
        v10 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      v25 = &v17;
      v26 = v7;
      v27 = 0;
      v24 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52B6E8;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, Path, v10, &v24);
      v12 = v17 ? 2 : 1;
      v13 = (HasField & ((_BYTE)v27 == 0)) != 0 ? v12 : 0;
      if (v13)
        break;
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18);
      if (v19 == v21 && v20 == v22)
        goto LABEL_19;
    }
    if (v13 != 2)
      return 0;
  }
LABEL_19:
  if (pxrInternal__aapl__pxrReserved__::PcpPrimIndex::IsInstanceable(a2))
    return pxrInternal__aapl__pxrReserved__::Usd_InstanceCache::RegisterInstancePrimIndex(*(_QWORD *)(a1 + 16), a2, *(char **)a1, *(const pxrInternal__aapl__pxrReserved__::UsdStageLoadRules **)(a1 + 8));
  v15 = *(char **)a1;
  if (!v15)
    return 1;
  v16 = pxrInternal__aapl__pxrReserved__::PcpPrimIndex::GetPath(a2);
  return pxrInternal__aapl__pxrReserved__::UsdStagePopulationMask::GetIncludedChildNames((uint64_t)v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)v16, a3);
}

BOOL sub_20C462D84(uint64_t a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2)
{
  return pxrInternal__aapl__pxrReserved__::UsdStageLoadRules::IsLoaded((char **)(*(_QWORD *)a1 + 1232), a2);
}

uint64_t sub_20C462D90(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_20C462E04((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_20C462E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v12[3];
  char v13;
  __int128 v14;
  __int128 v15;

  v7 = a7;
  *(_QWORD *)&v15 = a6;
  *((_QWORD *)&v15 + 1) = a7;
  v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    v10 = a6;
  }
  else
  {
    v8 = (_OWORD *)(a7 - 32);
    do
    {
      v9 = *(_OWORD *)(a3 - 32);
      a3 -= 32;
      *v8 = v9;
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v8[1] = *(_OWORD *)(a3 + 16);
      *(_QWORD *)(a3 + 16) = 0;
      *(_QWORD *)(a3 + 24) = 0;
      *((_QWORD *)&v15 + 1) = v8;
      v7 -= 32;
      v8 -= 2;
    }
    while (a3 != a5);
    v10 = v15;
  }
  v13 = 1;
  sub_20C462EA0((uint64_t)v12);
  return v10;
}

uint64_t sub_20C462EA0(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    sub_20C462ED4((uint64_t *)a1);
  return a1;
}

uint64_t *sub_20C462ED4(uint64_t *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(result[2] + 8);
  v2 = *(_QWORD *)(result[1] + 8);
  if (v1 != v2)
  {
    v3 = *result;
    do
    {
      result = (uint64_t *)sub_20C456BE8(v3, v1);
      v1 += 32;
    }
    while (v1 != v2);
  }
  return result;
}

void **sub_20C462F24(void **a1)
{
  sub_20C462F54((uint64_t)a1);
  if (*a1)
    operator delete(*a1);
  return a1;
}

uint64_t sub_20C462F54(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 8);
  v1 = *(_QWORD *)(result + 16);
  if (v1 != v2)
  {
    v3 = result;
    do
    {
      v4 = *(_QWORD *)(v3 + 32);
      *(_QWORD *)(v3 + 16) = v1 - 32;
      result = sub_20C456BE8(v4, v1 - 32);
      v1 = *(_QWORD *)(v3 + 16);
    }
    while (v1 != v2);
  }
  return result;
}

_QWORD *sub_20C462F98(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v8;
  uint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  _BYTE v16[8];

  v8 = operator new(0x58uLL);
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v16);
  v8[2] = 0;
  v8[3] = 0;
  *((_WORD *)v8 + 16) = 1;
  *v8 = &unk_24C539CC8;
  v8[1] = 0;
  v9 = a1[1];
  v8[5] = *a1;
  v8[6] = v9;
  if (v9)
  {
    v10 = (unsigned int *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  v12 = a4[1];
  v8[7] = *a4;
  v8[8] = v12;
  if (v12)
  {
    v13 = (unsigned int *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  v8[9] = a2;
  v8[10] = a3;
  return v8;
}

void sub_20C463050(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_20C463064(uint64_t a1, _QWORD *a2, __n128 *a3, _QWORD *a4)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;
  __n128 result;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(_QWORD *)a1 = &unk_24C539CC8;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = a2[1];
  *(_QWORD *)(a1 + 40) = *a2;
  *(_QWORD *)(a1 + 48) = v4;
  if (v4)
  {
    v5 = (unsigned int *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a4[1];
  *(_QWORD *)(a1 + 56) = *a4;
  *(_QWORD *)(a1 + 64) = v7;
  if (v7)
  {
    v8 = (unsigned int *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  result = *a3;
  *(__n128 *)(a1 + 72) = *a3;
  return result;
}

void sub_20C4630CC(pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *this, const void *a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;

  *(_QWORD *)this = &unk_24C539CC8;
  v3 = (unsigned int *)*((_QWORD *)this + 8);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  v7 = (unsigned int *)*((_QWORD *)this + 6);
  if (v7)
  {
    v8 = v7 + 2;
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      (*(void (**)(unsigned int *))(*(_QWORD *)v7 + 8))(v7);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)this, a2);
}

void sub_20C463154(pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase *this, const void *a2)
{
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int v9;
  unsigned int v10;
  void *v11;

  *(_QWORD *)this = &unk_24C539CC8;
  v3 = (unsigned int *)*((_QWORD *)this + 8);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  v7 = (unsigned int *)*((_QWORD *)this + 6);
  if (v7)
  {
    v8 = v7 + 2;
    do
    {
      v9 = __ldxr(v8);
      v10 = v9 - 1;
    }
    while (__stlxr(v10, v8));
    if (!v10)
      (*(void (**)(unsigned int *))(*(_QWORD *)v7 + 8))(v7);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)this, a2);
  operator delete(v11);
}

uint64_t sub_20C4631E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  void (*v18)(_QWORD *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v9 = a1[6];
  v8 = a1 + 6;
  if (!v9)
    return 0;
  v13 = v8 - 1;
  v14 = sub_20BEB47BC(v8);
  v15 = *v13;
  v16 = !*(_BYTE *)(v14 + 14) || v15 == 0;
  if (v16 || a1[8] && !*(_BYTE *)(sub_20BEB47BC(a1 + 8) + 14))
    return 0;
  if (*a7 != a7[1])
  {
    v21 = (*(uint64_t (**)(uint64_t *))(*a1 + 40))(a1);
    v22 = sub_20C348E08(v13) + 16;
    if (v21)
      v23 = a6;
    else
      v23 = MEMORY[0x24BEDB7C8];
  }
  v18 = (void (*)(_QWORD *, uint64_t))a1[9];
  v19 = a1[10];
  v20 = (_QWORD *)(v15 + (v19 >> 1));
  if ((v19 & 1) != 0)
    v18 = *(void (**)(_QWORD *, uint64_t))(*v20 + v18);
  v18(v20, a2);
  if (*a7 != a7[1])
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_EndDelivery((uint64_t)a1, a7);
  return 1;
}

uint64_t sub_20C4632FC(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string v9;
  std::string v10;
  void *__p[2];
  std::string::size_type v12;
  _QWORD v13[4];
  char v14;
  int v15;

  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v13);
  if (v13[0] == v3)
  {
    v13[0] = "tf/notice.h";
    v13[1] = "GetNoticeType";
    v13[2] = 563;
    v13[3] = "virtual TfType pxrInternal__aapl__pxrReserved__::TfNotice::_StandardDeliverer<pxrInternal__aapl__pxrReserve"
             "d__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::Usd"
             "Stage>, pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::SdfLayer>, void (pxrI"
             "nternal__aapl__pxrReserved__::UsdStage::*)(const pxrInternal__aapl__pxrReserved__::SdfNotice::LayersDidChan"
             "geSentPerLayer &), pxrInternal__aapl__pxrReserved__::SdfNotice::LayersDidChangeSentPerLayer>>::GetNoticeTyp"
             "e() const [Derived = pxrInternal__aapl__pxrReserved__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved_"
             "_::TfWeakPtr<pxrInternal__aapl__pxrReserved__::UsdStage>, pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrIn"
             "ternal__aapl__pxrReserved__::SdfLayer>, void (pxrInternal__aapl__pxrReserved__::UsdStage::*)(const pxrInter"
             "nal__aapl__pxrReserved__::SdfNotice::LayersDidChangeSentPerLayer &), pxrInternal__aapl__pxrReserved__::SdfN"
             "otice::LayersDidChangeSentPerLayer>]";
    v14 = 0;
    v15 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__9SdfNotice27LayersDidChangeSentPerLayerE" & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v9);
    v4 = std::string::insert(&v9, 0, "notice type ");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v10, " undefined in the TfType system");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v12 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((uint64_t)v13, (uint64_t)__p);
    if (SHIBYTE(v12) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v10.__r_.__value_.__l.__data_);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_20C463418(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C463464(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t result;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;

  v6 = (*(uint64_t (**)(uint64_t *))(*a1 + 24))(a1);
  result = pxrInternal__aapl__pxrReserved__::TfType::IsA(a2, v6, v7);
  if ((_DWORD)result)
  {
    v11 = a1[8];
    v10 = a1 + 8;
    v9 = v11;
    if (v11)
      v9 = *(_BYTE *)(sub_20BEB47BC(v10) + 14) == 0;
    result = 0;
    if (a3)
    {
      if (!v9)
        return sub_20BFCF650(v10 - 1) + 16 == a3;
    }
  }
  return result;
}

uint64_t sub_20C4634E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t (*v2)(uint64_t *);
  char v3;

  v1 = (uint64_t *)(a1 + 56);
  v2 = sub_20BFD2F78((_QWORD *)(a1 + 56));
  if (v3 & 1 | (unint64_t)v2)
    return sub_20BFCF650(v1) + 16;
  else
    return 0;
}

void *sub_20C46352C(uint64_t a1)
{
  void *v2;

  v2 = operator new(0x58uLL);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  sub_20C463064((uint64_t)v2, (_QWORD *)(a1 + 40), (__n128 *)(a1 + 72), (_QWORD *)(a1 + 56));
  return v2;
}

void sub_20C46358C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4635A0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  uint64_t v18;
  void *v20[5];

  v3 = *a1;
  v4 = (a1[1] - *a1) >> 5;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59)
    sub_20BDDF694();
  v7 = (uint64_t)(a1 + 2);
  v8 = a1[2] - v3;
  if (v8 >> 4 > v5)
    v5 = v8 >> 4;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0)
    v9 = 0x7FFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  v20[4] = a1 + 2;
  if (v9)
    v10 = (char *)sub_20BED2F10(v7, v9);
  else
    v10 = 0;
  v11 = &v10[32 * v4];
  v20[0] = v10;
  v20[1] = v11;
  v20[3] = &v10[32 * v9];
  *(_QWORD *)v11 = *a2;
  v12 = a2[1];
  *((_QWORD *)v11 + 1) = v12;
  if (v12)
  {
    v13 = (unsigned int *)(v12 + 8);
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
  }
  *((_QWORD *)v11 + 2) = a2[2];
  v15 = a2[3];
  *((_QWORD *)v11 + 3) = v15;
  if (v15)
  {
    v16 = (unsigned int *)(v15 + 8);
    do
      v17 = __ldxr(v16);
    while (__stxr(v17 + 1, v16));
  }
  v20[2] = v11 + 32;
  sub_20C462D90(a1, v20);
  v18 = a1[1];
  sub_20C462F24(v20);
  return v18;
}

void sub_20C4636B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C462F24((void **)va);
  _Unwind_Resume(a1);
}

void *sub_20C4636C4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  _BYTE v6[8];
  _QWORD v7[4];
  __int128 v8;

  *(_QWORD *)&v8 = a2;
  *((_QWORD *)&v8 + 1) = a3;
  v4 = operator new(0x68uLL);
  v7[0] = off_24C51AF48;
  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v6);
  sub_20C463760((uint64_t)v4, a1, &v8, (uint64_t)v7);
  (*(void (**)(pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::_EmptyHolder *__hidden))v7[0])((pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::_EmptyHolder *)v7);
  return v4;
}

void sub_20C46373C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (**a11)(_QWORD))
{
  void *v11;

  (*a11)(&a11);
  operator delete(v11);
  _Unwind_Resume(a1);
}

uint64_t sub_20C463760(uint64_t a1, _QWORD *a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  *(_QWORD *)a1 = &unk_24C539D40;
  *(_QWORD *)(a1 + 8) = 0;
  v6 = a2[1];
  *(_QWORD *)(a1 + 40) = *a2;
  *(_QWORD *)(a1 + 48) = v6;
  if (v6)
  {
    v7 = (unsigned int *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a4 + 16))(a4, a1 + 56);
  *(_OWORD *)(a1 + 88) = *a3;
  return a1;
}

void sub_20C4637DC(_Unwind_Exception *a1, const void *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 + 48);
  if (v4)
    sub_20C96BD08(v4);
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)v2, a2);
  _Unwind_Resume(a1);
}

void sub_20C4637FC(uint64_t a1)
{
  const void *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;

  *(_QWORD *)a1 = &unk_24C539D40;
  (**(void (***)(uint64_t))(a1 + 56))(a1 + 56);
  v3 = *(unsigned int **)(a1 + 48);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)a1, v2);
}

void sub_20C463864(uint64_t a1)
{
  const void *v2;
  unsigned int *v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  void *v7;

  *(_QWORD *)a1 = &unk_24C539D40;
  (**(void (***)(uint64_t))(a1 + 56))(a1 + 56);
  v3 = *(unsigned int **)(a1 + 48);
  if (v3)
  {
    v4 = v3 + 2;
    do
    {
      v5 = __ldxr(v4);
      v6 = v5 - 1;
    }
    while (__stlxr(v6, v4));
    if (!v6)
      (*(void (**)(unsigned int *))(*(_QWORD *)v3 + 8))(v3);
  }
  pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::~_DelivererBase((unsigned int **)a1, v2);
  operator delete(v7);
}

uint64_t sub_20C4638D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  void (*v18)(_QWORD *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v9 = a1[6];
  v8 = a1 + 6;
  if (!v9)
    return 0;
  v13 = v8 - 1;
  v14 = sub_20BEB47BC(v8);
  v15 = *v13;
  v16 = !*(_BYTE *)(v14 + 14) || v15 == 0;
  if (v16
    || (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid((pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 7)) & 1) != 0)
  {
    return 0;
  }
  if (*a7 != a7[1])
  {
    v25 = v15;
    v21 = (*(uint64_t (**)(uint64_t *))(*a1 + 40))(a1);
    v22 = sub_20C348E08(v13) + 16;
    if (v21)
      v23 = a6;
    else
      v23 = MEMORY[0x24BEDB7C8];
    v24 = v21;
    v15 = v25;
  }
  v18 = (void (*)(_QWORD *, uint64_t))a1[11];
  v19 = a1[12];
  v20 = (_QWORD *)(v15 + (v19 >> 1));
  if ((v19 & 1) != 0)
    v18 = *(void (**)(_QWORD *, uint64_t))(*v20 + v18);
  v18(v20, a2);
  if (*a7 != a7[1])
    pxrInternal__aapl__pxrReserved__::TfNotice::_DelivererBase::_EndDelivery((uint64_t)a1, a7);
  return 1;
}

uint64_t sub_20C4639E8(uint64_t a1, const std::type_info *a2, char *a3)
{
  uint64_t v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string v9;
  std::string v10;
  void *__p[2];
  std::string::size_type v12;
  _QWORD v13[4];
  char v14;
  int v15;

  pxrInternal__aapl__pxrReserved__::TfType::TfType((pxrInternal__aapl__pxrReserved__::TfType *)v13);
  if (v13[0] == v3)
  {
    v13[0] = "tf/notice.h";
    v13[1] = "GetNoticeType";
    v13[2] = 563;
    v13[3] = "virtual TfType pxrInternal__aapl__pxrReserved__::TfNotice::_StandardDeliverer<pxrInternal__aapl__pxrReserve"
             "d__::TfNotice::_Deliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::Usd"
             "Stage>, pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__aapl__pxrReserved__::UsdStage::*"
             ")(const pxrInternal__aapl__pxrReserved__::ArNotice::ResolverChanged &), pxrInternal__aapl__pxrReserved__::A"
             "rNotice::ResolverChanged>>::GetNoticeType() const [Derived = pxrInternal__aapl__pxrReserved__::TfNotice::_D"
             "eliverer<pxrInternal__aapl__pxrReserved__::TfWeakPtr<pxrInternal__aapl__pxrReserved__::UsdStage>, pxrIntern"
             "al__aapl__pxrReserved__::TfAnyWeakPtr, void (pxrInternal__aapl__pxrReserved__::UsdStage::*)(const pxrIntern"
             "al__aapl__pxrReserved__::ArNotice::ResolverChanged &), pxrInternal__aapl__pxrReserved__::ArNotice::ResolverChanged>]";
    v14 = 0;
    v15 = 4;
    pxrInternal__aapl__pxrReserved__::ArchGetDemangled((pxrInternal__aapl__pxrReserved__ *)((unint64_t)"N32pxrInternal__aapl__pxrReserved__8ArNotice15ResolverChangedE" & 0x7FFFFFFFFFFFFFFFLL), (uint64_t)&v9);
    v4 = std::string::insert(&v9, 0, "notice type ");
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v10.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    v6 = std::string::append(&v10, " undefined in the TfType system");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v12 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    pxrInternal__aapl__pxrReserved__::Tf_DiagnosticHelper::IssueFatalError((uint64_t)v13, (uint64_t)__p);
    if (SHIBYTE(v12) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v10.__r_.__value_.__l.__data_);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_20C463B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C463B50(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  uint64_t result;
  pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *v9;
  char IsInvalid;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  result = pxrInternal__aapl__pxrReserved__::TfType::IsA(a2, v6, v7);
  if ((_DWORD)result)
  {
    v9 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
    IsInvalid = pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::IsInvalid(v9);
    result = 0;
    if (a3)
    {
      if ((IsInvalid & 1) == 0)
        return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v9) == a3;
    }
  }
  return result;
}

uint64_t sub_20C463BC4(uint64_t a1)
{
  pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *v1;

  v1 = (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr *)(a1 + 56);
  if (pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::operator BOOL(a1 + 56))
    return pxrInternal__aapl__pxrReserved__::TfAnyWeakPtr::GetWeakBase(v1);
  else
    return 0;
}

void *sub_20C463C00(uint64_t a1)
{
  void *v2;

  v2 = operator new(0x68uLL);
  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
  sub_20C463760((uint64_t)v2, (_QWORD *)(a1 + 40), (_OWORD *)(a1 + 88), a1 + 56);
  return v2;
}

void sub_20C463C60(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_20C463C74(uint64_t **a1, _QWORD *a2, uint64_t a3, uint64_t **a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)sub_20C463D08((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    sub_20C463DA4((uint64_t)a1, a4, (uint64_t)&v8);
    sub_20BDDE1B4(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

_QWORD *sub_20C463D08(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    v7 = (uint64_t *)(a1 + 16);
    do
    {
      while (1)
      {
        v8 = v4;
        v9 = v4 + 4;
        if (!sub_20C463E20(v7, a3, v4 + 4))
          break;
        v4 = (_QWORD *)*v8;
        v5 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (!sub_20C463E20(v7, v9, a3))
        break;
      v5 = v8 + 1;
      v4 = (_QWORD *)v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = (_QWORD *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

_QWORD *sub_20C463DA4@<X0>(uint64_t a1@<X0>, uint64_t **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  v5 = a1 + 8;
  result = operator new(0x38uLL);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v5;
  v7 = **a2;
  result[4] = v7;
  if ((v7 & 7) != 0)
  {
    v8 = (unsigned int *)(v7 & 0xFFFFFFFFFFFFFFF8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 2, v8));
    if ((v9 & 1) == 0)
      result[4] &= 0xFFFFFFFFFFFFFFF8;
  }
  result[6] = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_20C463E20(uint64_t *EmptyString, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char *v7;
  int v8;
  char *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  BOOL v14;

  v4 = (uint64_t)EmptyString;
  if ((*a2 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    v5 = (*a2 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else
  {
    EmptyString = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyString);
    v5 = (uint64_t)EmptyString;
  }
  if ((*a3 & 0xFFFFFFFFFFFFFFF8) != 0)
    v6 = (uint64_t *)((*a3 & 0xFFFFFFFFFFFFFFF8) + 16);
  else
    v6 = pxrInternal__aapl__pxrReserved__::TfToken::_GetEmptyString((pxrInternal__aapl__pxrReserved__::TfToken *)EmptyString);
  if (*(char *)(v5 + 23) >= 0)
    v7 = (char *)v5;
  else
    v7 = *(char **)v5;
  v8 = *v7;
  if (*((char *)v6 + 23) >= 0)
    v9 = (char *)v6;
  else
    v9 = (char *)*v6;
  if (v8 < 0)
    return pxrInternal__aapl__pxrReserved__::TfDictionaryLessThan::_LessImpl(v4, v5, (uint64_t)v6);
  v10 = *v9;
  if (v10 < 0)
    return pxrInternal__aapl__pxrReserved__::TfDictionaryLessThan::_LessImpl(v4, v5, (uint64_t)v6);
  v11 = v8;
  v12 = v10;
  v13 = (v10 ^ v11) & 0xFFFFFFDF;
  v14 = v11 < 0x40 || v13 == 0;
  if (v14 || v12 < 0x40)
    return pxrInternal__aapl__pxrReserved__::TfDictionaryLessThan::_LessImpl(v4, v5, (uint64_t)v6);
  else
    return (((_BYTE)v11 + 5) & 0x1Fu) < (((_BYTE)v12 + 5) & 0x1Fu);
}

void sub_20C463F04(void **a1)
{
  char *v1;
  char *v3;
  void *v4;

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = v1;
    if (v3 != v1)
    {
      do
        v3 = (char *)pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v4, (pxrInternal__aapl__pxrReserved__::SdfSpec *)(v3 - 8));
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_20C463F60(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  pxrInternal__aapl__pxrReserved__::VtValue *v2;
  uint64_t v4;
  uint64_t result;

  v2 = a2;
  if (sub_20C0DE26C(a2))
  {
    v4 = *((_QWORD *)v2 + 1);
    if ((v4 & 4) != 0)
      v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    **(_DWORD **)(a1 + 8) = *(_DWORD *)v2;
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8(v2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C463FE0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;

  if (sub_20C0DE26C(a2))
  {
    **(_DWORD **)(a1 + 8) = sub_20C464044(a2);
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8(a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C464044(_QWORD *a1)
{
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v2 = sub_20C323ACC(a1);
  v3 = *v2;
  *v2 = 0;
  v4 = a1[1];
  if (v4)
    v5 = (a1[1] & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(_QWORD *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  a1[1] = 0;
  return v3;
}

BOOL sub_20C464098(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t (****a7)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  _BOOL8 v17;
  int v19;
  int v20;
  int v21;
  int v22;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (i = 1;
        *(_QWORD *)(a6 + 16) != *(_QWORD *)(a6 + 32) || *(_QWORD *)(a6 + 24) != *(_QWORD *)(a6 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_20C453680(a6, a2, &v19);
      sub_20BFD3EBC(&v21, &v19);
      sub_20BFD3F10(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
    }
    if (sub_20C45A368(a7, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      v17 = 1;
      *((_BYTE *)a7 + 40) = 1;
      goto LABEL_19;
    }
    if (*((_BYTE *)a7 + 40))
    {
      v17 = 1;
      goto LABEL_19;
    }
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *((_BYTE *)a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *a7);
  }
  v17 = *((_BYTE *)a7 + 40) != 0;
LABEL_19:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  return v17;
}

void sub_20C464214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46423C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, int a4, pxrInternal__aapl__pxrReserved__::VtValue **a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t Typeid;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  pxrInternal__aapl__pxrReserved__::VtValue **v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254988DE0);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254988DE0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988DD8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988DE0);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988DD8;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C467C48((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, (uint64_t)a5))
    return 0;
  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(*a5);
  v102 = a5;
  if (sub_20BDE150C(Typeid, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C031D24((uint64_t)*v102, (uint64_t)&v109);
        *((_BYTE *)v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(Typeid, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C032BD4((uint64_t)*v102, (uint64_t)&v109);
        *((_BYTE *)v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(Typeid, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C03376C((uint64_t)*v102, (uint64_t)&v109);
        *((_BYTE *)v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(Typeid, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C03433C((uint64_t)*v102, (uint64_t)&v109);
          *((_BYTE *)v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(Typeid, (uint64_t)&stru_24C524D30))
      return sub_20C467DE8((uint64_t)v10, v12, a2, a4, (uint64_t)v103, (uint64_t)a5);
    if (!sub_20BDE150C(Typeid, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C46845C((uint64_t)v10, v12, a2, a4, (uint64_t)v103, (uint64_t)a5);
  }
  return v22;
}

void sub_20C465714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

void sub_20C465B5C(const pxrInternal__aapl__pxrReserved__::VtDictionary ***a1, uint64_t a2, _QWORD *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  uint64_t Typeid;
  uint64_t v11;
  int v12;
  pxrInternal__aapl__pxrReserved__::VtValue *v13;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v14;
  __int128 *v15;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v16;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v17;
  uint64_t v18;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v19;
  const char **v20;
  uint64_t *v21;
  const std::string *v22;
  uint64_t v23;
  char *v24;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void **v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v53;
  const std::string *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  void *v62[2];
  _OWORD v63[2];
  std::string v64[2];
  void *__p[2];
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  std::string v69;
  std::string v70;
  void **v71[7];

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
  if (!strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    v16 = (*a1)[1];
    if ((v16 & 4) != 0)
      v17 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(void))(((unint64_t)v16 & 0xFFFFFFFFFFFFFFF8)
                                                                                         + 168))();
    else
      v17 = **a1;
    pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)__p, v17);
    if (sub_20C4662AC(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue *)*a1))
    {
      *((_BYTE *)a1 + 40) = 1;
      v18 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
      if (!strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v18 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
      {
        v19 = (*a1)[1];
        if ((v19 & 4) != 0)
          v20 = (const char **)(*(uint64_t (**)(void))(((unint64_t)v19 & 0xFFFFFFFFFFFFFFF8) + 168))();
        else
          v20 = (const char **)**a1;
        pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)__p, v20, 0);
        v21 = (uint64_t *)sub_20BF4D190((const void *****)*a1);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v21, (pxrInternal__aapl__pxrReserved__::VtDictionary *)__p);
      }
    }
    sub_20BF49F14((_QWORD ***)__p, 0);
  }
  else if (sub_20C466194((pxrInternal__aapl__pxrReserved__::VtValue **)a1))
  {
    memset(v64, 0, sizeof(v64));
    *(_OWORD *)v62 = 0u;
    memset(v63, 0, sizeof(v63));
    v61 = 0;
    v59 = 0u;
    v60 = 0u;
    v11 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
    v12 = strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v11 + 8) & 0x7FFFFFFFFFFFFFFFLL));
    v13 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
    v14 = (*a1)[1];
    if (v12)
    {
      if ((v14 & 4) != 0)
        v15 = (__int128 *)(*(uint64_t (**)(void))(((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8) + 168))();
      else
        v15 = *(__int128 **)v13;
      sub_20C281C04((uint64_t)&v59, v15);
    }
    else
    {
      if ((v14 & 4) != 0)
        v22 = (const std::string *)(*(uint64_t (**)(void))(((unint64_t)v14 & 0xFFFFFFFFFFFFFFF8) + 168))();
      else
        v22 = *(const std::string **)v13;
      if (v62 != (void **)v22)
      {
        sub_20BE8B37C((char *)v62, v22->__r_.__value_.__l.__data_, v22->__r_.__value_.__l.__size_, (uint64_t)(v22->__r_.__value_.__l.__size_ - v22->__r_.__value_.__r.__words[0]) >> 2);
        sub_20C147074((uint64_t)v63 + 8, (uint64_t)v22[1].__r_.__value_.__l.__data_, v22[1].__r_.__value_.__l.__size_, (uint64_t)(v22[1].__r_.__value_.__l.__size_ - v22[1].__r_.__value_.__r.__words[0]) >> 5);
        sub_20C14723C((uint64_t)v64, (uint64_t)v22[2].__r_.__value_.__l.__data_, v22[2].__r_.__value_.__l.__size_, (uint64_t)(v22[2].__r_.__value_.__l.__size_ - v22[2].__r_.__value_.__r.__words[0]) >> 6);
      }
      std::string::operator=(&v64[1], v22 + 3);
    }
    if (sub_20C4662AC(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue *)*a1))
    {
      *((_BYTE *)a1 + 40) = 1;
      if (v12)
      {
        v25 = (*a1)[1];
        if ((v25 & 4) != 0)
          v26 = (*(uint64_t (**)(void))(((unint64_t)v25 & 0xFFFFFFFFFFFFFFF8) + 168))();
        else
          v26 = (uint64_t)**a1;
        v27 = *(_OWORD *)(v26 + 16);
        v56 = *(_OWORD *)v26;
        v57 = v27;
        v28 = *(_QWORD *)(v26 + 32);
        v58 = v28;
        if (v28)
        {
          v29 = (unint64_t *)(v28 - 16);
          if (*((_QWORD *)&v57 + 1))
            v29 = (unint64_t *)*((_QWORD *)&v57 + 1);
          do
            v30 = __ldxr(v29);
          while (__stxr(v30 + 1, v29));
        }
        if ((_QWORD)v56 == (_QWORD)v59)
        {
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v59, v23, v24);
          v31 = v61;
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v59, v32, v33);
          v34 = v61;
          v35 = v59;
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v56, v36, v37);
          v55 = v58;
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v59, v38, v39);
          v40 = v34 + 96 * v35;
          if (v31 != v40)
          {
            v41 = 0;
            v42 = v61;
            do
            {
              sub_20C466210(v31 + v41, (const std::string *)(v55 + v41), (uint64_t)__p);
              v43 = *(void **)(v42 + v41);
              if (v43)
              {
                *(_QWORD *)(v42 + v41 + 8) = v43;
                operator delete(v43);
              }
              v44 = v42 + v41;
              *(_OWORD *)v44 = *(_OWORD *)__p;
              *(_QWORD *)(v44 + 16) = v66;
              __p[0] = 0;
              __p[1] = 0;
              v66 = 0;
              sub_20C00BC18((void **)(v42 + v41 + 24));
              *(_OWORD *)(v44 + 24) = v67;
              *(_QWORD *)(v44 + 40) = v68;
              v67 = 0uLL;
              v68 = 0;
              sub_20C00BCC0((void **)(v42 + v41 + 48));
              *(std::string *)(v44 + 48) = v69;
              memset(&v69, 0, sizeof(v69));
              v45 = (void **)(v42 + v41 + 72);
              if (*(char *)(v42 + v41 + 95) < 0)
                operator delete(*v45);
              v46 = *(_OWORD *)&v70.__r_.__value_.__l.__data_;
              *(_QWORD *)(v44 + 88) = *((_QWORD *)&v70.__r_.__value_.__l + 2);
              *(_OWORD *)v45 = v46;
              *((_BYTE *)&v70.__r_.__value_.__s + 23) = 0;
              v70.__r_.__value_.__s.__data_[0] = 0;
              v71[0] = (void **)&v69;
              sub_20C00E25C(v71);
              v71[0] = (void **)&v67;
              sub_20C00D5A8(v71);
              if (__p[0])
              {
                __p[1] = __p[0];
                operator delete(__p[0]);
              }
              v41 += 96;
            }
            while (v31 + v41 != v40);
          }
        }
        v47 = sub_20C1939F0(*a1);
        v48 = *(_QWORD *)(v47 + 32);
        v49 = v60;
        *(_QWORD *)(v47 + 32) = v61;
        v61 = v48;
        v50 = *(_OWORD *)v47;
        *(_OWORD *)v47 = v59;
        v51 = *(_QWORD *)(v47 + 16);
        v52 = *(_QWORD *)(v47 + 24);
        *(_OWORD *)(v47 + 16) = __PAIR128__(*((unint64_t *)&v60 + 1), v49);
        v59 = v50;
        *(_QWORD *)&v60 = v51;
        *((_QWORD *)&v60 + 1) = v52;
        sub_20C00E910(&v56);
      }
      else
      {
        v53 = (*a1)[1];
        if ((v53 & 4) != 0)
          v54 = (const std::string *)(*(uint64_t (**)(void))(((unint64_t)v53 & 0xFFFFFFFFFFFFFFF8) + 168))();
        else
          v54 = (const std::string *)**a1;
        pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v62, v54, (uint64_t)__p);
        if (v62[0])
        {
          v62[1] = v62[0];
          operator delete(v62[0]);
        }
        *(_OWORD *)v62 = *(_OWORD *)__p;
        *(_QWORD *)&v63[0] = v66;
        __p[1] = 0;
        v66 = 0;
        __p[0] = 0;
        sub_20C00BC18((void **)v63 + 1);
        *(_OWORD *)((char *)v63 + 8) = v67;
        *((_QWORD *)&v63[1] + 1) = v68;
        v68 = 0;
        v67 = 0uLL;
        sub_20C00BCC0((void **)&v64[0].__r_.__value_.__l.__data_);
        v64[0] = v69;
        memset(&v69, 0, sizeof(v69));
        if (SHIBYTE(v64[1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v64[1].__r_.__value_.__l.__data_);
        v64[1] = v70;
        *((_BYTE *)&v70.__r_.__value_.__s + 23) = 0;
        v70.__r_.__value_.__s.__data_[0] = 0;
        *(_QWORD *)&v56 = &v69;
        sub_20C00E25C((void ***)&v56);
        *(_QWORD *)&v56 = &v67;
        sub_20C00D5A8((void ***)&v56);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        sub_20C1D25C4((uint64_t *)*a1, (uint64_t)v62);
      }
    }
    sub_20C00E910(&v59);
    if (SHIBYTE(v64[1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v64[1].__r_.__value_.__l.__data_);
    __p[0] = v64;
    sub_20C00E25C((void ***)__p);
    __p[0] = (char *)v63 + 8;
    sub_20C00D5A8((void ***)__p);
    if (v62[0])
    {
      v62[1] = v62[0];
      operator delete(v62[0]);
    }
  }
  else
  {
    *((_BYTE *)a1 + 40) = sub_20C4662AC(a2, a3, a4, a5, (pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
  }
}

void sub_20C466134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  sub_20C00E910((uint64_t *)va);
  sub_20C96BD2C((uint64_t)va, (uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_20C466194(pxrInternal__aapl__pxrReserved__::VtValue **a1)
{
  uint64_t Typeid;
  uint64_t v3;

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(*a1);
  if (!strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))return 1;
  v3 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(*a1);
  return strcmp((const char *)(0x800000020CAC1888 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v3 + 8) & 0x7FFFFFFFFFFFFFFFLL)) == 0;
}

void sub_20C466210(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X8>)
{
  void *v5[3];
  uint64_t v6;
  uint64_t v7;
  void *__p;
  char v9;
  void **v10;

  sub_20C00D1F0(v5, a1);
  pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v5, a2, a3);
  if (v9 < 0)
    operator delete(__p);
  v10 = (void **)&v7;
  sub_20C00E25C(&v10);
  v10 = (void **)&v6;
  sub_20C00D5A8(&v10);
  if (v5[0])
  {
    v5[1] = v5[0];
    operator delete(v5[0]);
  }
}

void sub_20C466298(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C00BBB0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C4662AC(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  if (*(_QWORD *)a4)
    return sub_20C4662C0(a1, a2, a3, a4, a5);
  else
    return sub_20C3C0C6C(a1, a2, a3, a5);
}

_QWORD *sub_20C4662C0(uint64_t a1, _QWORD *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, pxrInternal__aapl__pxrReserved__::VtValue *a5)
{
  _QWORD *result;

  result = sub_20BF2B2B4((_QWORD *)(a1 + 16), a2);
  if (result)
    return (_QWORD *)pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey((pxrInternal__aapl__pxrReserved__::SdfLayer *)result[3], (const pxrInternal__aapl__pxrReserved__::SdfPath *)(result + 4), a3, a4, a5);
  return result;
}

uint64_t sub_20C466320(_QWORD **a1, void *a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3, uint64_t *a4, const pxrInternal__aapl__pxrReserved__::SdfPath *a5, const pxrInternal__aapl__pxrReserved__::TfToken *a6, const pxrInternal__aapl__pxrReserved__::TfToken *a7)
{
  uint64_t Typeid;
  uint64_t v15;
  int v16;
  pxrInternal__aapl__pxrReserved__::VtValue *v17;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  const pxrInternal__aapl__pxrReserved__::VtDictionary *v21;
  uint64_t v22;
  uint64_t *LayerStack;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v24;
  uint64_t Identifier;
  void *v26;
  unsigned int *v27;
  unsigned int v28;
  unsigned int v29;
  pxrInternal__aapl__pxrReserved__::VtValue *v30;
  void *v31;
  _BOOL4 v32;
  uint64_t v33;
  const char **v34;
  uint64_t *v35;
  uint64_t v36;
  unsigned int *v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t *v41;
  pxrInternal__aapl__pxrReserved__::PcpLayerStack *v42;
  uint64_t v43;
  void *v44;
  unsigned int *v45;
  unsigned int v46;
  unsigned int v47;
  void *v48;
  BOOL v49;
  pxrInternal__aapl__pxrReserved__::VtValue *v50;
  uint64_t v51;
  pxrInternal__aapl__pxrReserved__::VtValue *v52;
  void *v53;
  const std::string *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void **v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const std::string *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  unsigned int *v91;
  unsigned int v92;
  unsigned int v93;
  pxrInternal__aapl__pxrReserved__::VtValue *v95;
  unsigned int v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  void *v104[2];
  _OWORD v105[2];
  std::string v106[2];
  void *__p[2];
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  std::string v111;
  std::string v112;
  void **v113[7];

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
  if (!strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    v20 = (*a1)[1];
    if ((v20 & 4) != 0)
      v21 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)(*(uint64_t (**)(void))((v20 & 0xFFFFFFFFFFFFFFF8)
                                                                                         + 168))();
    else
      v21 = (const pxrInternal__aapl__pxrReserved__::VtDictionary *)**a1;
    pxrInternal__aapl__pxrReserved__::VtDictionary::VtDictionary((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v101, v21);
    v22 = sub_20C466E2C((pxrInternal__aapl__pxrReserved__::VtValue **)a1, a4, a5, a6, a7);
    if ((_DWORD)v22)
    {
      LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
      v24 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(LayerStack);
      Identifier = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v24);
      sub_20C1034E8((uint64_t *)v104, a4);
      sub_20C466E9C((uint64_t)__p, a3, v104);
      v26 = v104[1];
      if (v104[1])
      {
        v27 = (unsigned int *)((char *)v104[1] + 8);
        do
        {
          v28 = __ldxr(v27);
          v29 = v28 - 1;
        }
        while (__stlxr(v29, v27));
        if (!v29)
          (*(void (**)(void *))(*(_QWORD *)v26 + 8))(v26);
      }
      v30 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
      v31 = (void *)*a4;
      v104[0] = a2;
      v104[1] = v31;
      sub_20BF1DD04((uint64_t *)&v104[1]);
      sub_20BFD6E54(v105, a5);
      sub_20BFD6EA4((_DWORD *)v105 + 1, (_DWORD *)a5 + 1);
      *(_OWORD *)((char *)v105 + 8) = *(_OWORD *)a3;
      v32 = sub_20C466F10(a1 + 1, v30, (uint64_t)v104, Identifier + 32, (uint64_t)__p, *((_BYTE *)a1 + 41));
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v105 + 1);
      sub_20BFD265C(v105);
      sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v104[1]);
      v22 = v22;
      if (v32)
      {
        v33 = (*a1)[1];
        if ((v33 & 4) != 0)
          v34 = (const char **)(*(uint64_t (**)(void))((v33 & 0xFFFFFFFFFFFFFFF8) + 168))();
        else
          v34 = (const char **)**a1;
        pxrInternal__aapl__pxrReserved__::VtDictionaryOverRecursive((pxrInternal__aapl__pxrReserved__ *)&v101, v34, 0);
        v35 = (uint64_t *)sub_20BF4D190((const void *****)*a1);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v35, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v101);
      }
      v36 = v109;
      if ((_QWORD)v109)
      {
        v37 = (unsigned int *)(v109 + 8);
        do
        {
          v38 = __ldxr(v37);
          v39 = v38 - 1;
        }
        while (__stlxr(v39, v37));
        if (!v39)
          (*(void (**)(uint64_t))(*(_QWORD *)v36 + 8))(v36);
      }
    }
    sub_20BF49F14((_QWORD ***)&v101, 0);
  }
  else if (sub_20C466194((pxrInternal__aapl__pxrReserved__::VtValue **)a1))
  {
    memset(v106, 0, sizeof(v106));
    *(_OWORD *)v104 = 0u;
    memset(v105, 0, sizeof(v105));
    v103 = 0;
    v101 = 0u;
    v102 = 0u;
    v15 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
    v16 = strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v15 + 8) & 0x7FFFFFFFFFFFFFFFLL));
    v17 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
    v18 = (*a1)[1];
    if (v16)
    {
      if ((v18 & 4) != 0)
        v19 = (__int128 *)(*(uint64_t (**)(void))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))();
      else
        v19 = *(__int128 **)v17;
      sub_20C281C04((uint64_t)&v101, v19);
    }
    else
    {
      if ((v18 & 4) != 0)
        v54 = (const std::string *)(*(uint64_t (**)(void))((v18 & 0xFFFFFFFFFFFFFFF8) + 168))();
      else
        v54 = *(const std::string **)v17;
      if (v104 != (void **)v54)
      {
        sub_20BE8B37C((char *)v104, v54->__r_.__value_.__l.__data_, v54->__r_.__value_.__l.__size_, (uint64_t)(v54->__r_.__value_.__l.__size_ - v54->__r_.__value_.__r.__words[0]) >> 2);
        sub_20C147074((uint64_t)v105 + 8, (uint64_t)v54[1].__r_.__value_.__l.__data_, v54[1].__r_.__value_.__l.__size_, (uint64_t)(v54[1].__r_.__value_.__l.__size_ - v54[1].__r_.__value_.__r.__words[0]) >> 5);
        sub_20C14723C((uint64_t)v106, (uint64_t)v54[2].__r_.__value_.__l.__data_, v54[2].__r_.__value_.__l.__size_, (uint64_t)(v54[2].__r_.__value_.__l.__size_ - v54[2].__r_.__value_.__r.__words[0]) >> 6);
      }
      std::string::operator=(&v106[1], v54 + 3);
    }
    v22 = sub_20C466E2C((pxrInternal__aapl__pxrReserved__::VtValue **)a1, a4, a5, a6, a7);
    if ((_DWORD)v22
      && sub_20C467708((pxrInternal__aapl__pxrReserved__::VtValue *)*a1, (uint64_t)(a1 + 1), a3))
    {
      if (v16)
      {
        v57 = (*a1)[1];
        if ((v57 & 4) != 0)
          v58 = (*(uint64_t (**)(void))((v57 & 0xFFFFFFFFFFFFFFF8) + 168))();
        else
          v58 = **a1;
        v96 = v22;
        v59 = *(_OWORD *)(v58 + 16);
        v98 = *(_OWORD *)v58;
        v99 = v59;
        v60 = *(_QWORD *)(v58 + 32);
        v100 = v60;
        if (v60)
        {
          v61 = (unint64_t *)(v60 - 16);
          if (*((_QWORD *)&v99 + 1))
            v61 = (unint64_t *)*((_QWORD *)&v99 + 1);
          do
            v62 = __ldxr(v61);
          while (__stxr(v62 + 1, v61));
        }
        if ((_QWORD)v98 == (_QWORD)v101)
        {
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v101, v55, v56);
          v63 = v103;
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v101, v64, v65);
          v66 = v103;
          v67 = v101;
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v98, v68, v69);
          v97 = v100;
          sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v101, v70, v71);
          v72 = v66 + 96 * v67;
          if (v63 != v72)
          {
            v73 = 0;
            v74 = v103;
            do
            {
              sub_20C466210(v63 + v73, (const std::string *)(v97 + v73), (uint64_t)__p);
              v75 = *(void **)(v74 + v73);
              if (v75)
              {
                *(_QWORD *)(v74 + v73 + 8) = v75;
                operator delete(v75);
              }
              v76 = v74 + v73;
              *(_OWORD *)v76 = *(_OWORD *)__p;
              *(_QWORD *)(v76 + 16) = v108;
              __p[0] = 0;
              __p[1] = 0;
              v108 = 0;
              sub_20C00BC18((void **)(v74 + v73 + 24));
              *(_OWORD *)(v76 + 24) = v109;
              *(_QWORD *)(v76 + 40) = v110;
              v109 = 0uLL;
              v110 = 0;
              sub_20C00BCC0((void **)(v74 + v73 + 48));
              *(std::string *)(v76 + 48) = v111;
              memset(&v111, 0, sizeof(v111));
              v77 = (void **)(v74 + v73 + 72);
              if (*(char *)(v74 + v73 + 95) < 0)
                operator delete(*v77);
              v78 = *(_OWORD *)&v112.__r_.__value_.__l.__data_;
              *(_QWORD *)(v76 + 88) = *((_QWORD *)&v112.__r_.__value_.__l + 2);
              *(_OWORD *)v77 = v78;
              *((_BYTE *)&v112.__r_.__value_.__s + 23) = 0;
              v112.__r_.__value_.__s.__data_[0] = 0;
              v113[0] = (void **)&v111;
              sub_20C00E25C(v113);
              v113[0] = (void **)&v109;
              sub_20C00D5A8(v113);
              if (__p[0])
              {
                __p[1] = __p[0];
                operator delete(__p[0]);
              }
              v73 += 96;
            }
            while (v63 + v73 != v72);
          }
        }
        v79 = sub_20C1939F0(*a1);
        v80 = *(_QWORD *)(v79 + 32);
        v81 = v102;
        *(_QWORD *)(v79 + 32) = v103;
        v103 = v80;
        v82 = *(_OWORD *)v79;
        *(_OWORD *)v79 = v101;
        v83 = *(_QWORD *)(v79 + 16);
        v84 = *(_QWORD *)(v79 + 24);
        *(_OWORD *)(v79 + 16) = __PAIR128__(*((unint64_t *)&v102 + 1), v81);
        v101 = v82;
        *(_QWORD *)&v102 = v83;
        *((_QWORD *)&v102 + 1) = v84;
        sub_20C00E910(&v98);
        v22 = v96;
      }
      else
      {
        v85 = (*a1)[1];
        if ((v85 & 4) != 0)
          v86 = (const std::string *)(*(uint64_t (**)(void))((v85 & 0xFFFFFFFFFFFFFFF8) + 168))();
        else
          v86 = (const std::string *)**a1;
        pxrInternal__aapl__pxrReserved__::SdfPathExpression::ComposeOver((uint64_t)v104, v86, (uint64_t)__p);
        if (v104[0])
        {
          v104[1] = v104[0];
          operator delete(v104[0]);
        }
        *(_OWORD *)v104 = *(_OWORD *)__p;
        *(_QWORD *)&v105[0] = v108;
        __p[1] = 0;
        v108 = 0;
        __p[0] = 0;
        sub_20C00BC18((void **)v105 + 1);
        *(_OWORD *)((char *)v105 + 8) = v109;
        *((_QWORD *)&v105[1] + 1) = v110;
        v110 = 0;
        v109 = 0uLL;
        sub_20C00BCC0((void **)&v106[0].__r_.__value_.__l.__data_);
        v106[0] = v111;
        memset(&v111, 0, sizeof(v111));
        if (SHIBYTE(v106[1].__r_.__value_.__r.__words[2]) < 0)
          operator delete(v106[1].__r_.__value_.__l.__data_);
        v106[1] = v112;
        *((_BYTE *)&v112.__r_.__value_.__s + 23) = 0;
        v112.__r_.__value_.__s.__data_[0] = 0;
        *(_QWORD *)&v98 = &v111;
        sub_20C00E25C((void ***)&v98);
        *(_QWORD *)&v98 = &v109;
        sub_20C00D5A8((void ***)&v98);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        sub_20C1D25C4(*a1, (uint64_t)v104);
      }
    }
    sub_20C00E910(&v101);
    if (SHIBYTE(v106[1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v106[1].__r_.__value_.__l.__data_);
    __p[0] = v106;
    sub_20C00E25C((void ***)__p);
    __p[0] = (char *)v105 + 8;
    sub_20C00D5A8((void ***)__p);
    if (v104[0])
    {
      v104[1] = v104[0];
      operator delete(v104[0]);
    }
  }
  else if (sub_20C466E2C((pxrInternal__aapl__pxrReserved__::VtValue **)a1, a4, a5, a6, a7))
  {
    v40 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
    if (strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v40 + 8) & 0x7FFFFFFFFFFFFFFFLL))&& !sub_20C466194((pxrInternal__aapl__pxrReserved__::VtValue **)a1))
    {
      *((_BYTE *)a1 + 40) = 1;
    }
    v41 = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a3);
    v42 = (pxrInternal__aapl__pxrReserved__::PcpLayerStack *)sub_20C1FE500(v41);
    v43 = pxrInternal__aapl__pxrReserved__::PcpLayerStack::GetIdentifier(v42);
    sub_20C1034E8((uint64_t *)v104, a4);
    sub_20C466E9C((uint64_t)__p, a3, v104);
    v44 = v104[1];
    if (v104[1])
    {
      v45 = (unsigned int *)((char *)v104[1] + 8);
      do
      {
        v46 = __ldxr(v45);
        v47 = v46 - 1;
      }
      while (__stlxr(v47, v45));
      if (!v47)
        (*(void (**)(void *))(*(_QWORD *)v44 + 8))(v44);
    }
    v95 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
    v48 = (void *)*a4;
    v104[0] = a2;
    v104[1] = v48;
    sub_20BF1DD04((uint64_t *)&v104[1]);
    sub_20BFD6E54(v105, a5);
    sub_20BFD6EA4((_DWORD *)v105 + 1, (_DWORD *)a5 + 1);
    *(_OWORD *)((char *)v105 + 8) = *(_OWORD *)a3;
    v49 = sub_20C466F10(a1 + 1, v95, (uint64_t)v104, v43 + 32, (uint64_t)__p, *((_BYTE *)a1 + 41));
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v105 + 1);
    sub_20BFD265C(v105);
    sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v104[1]);
    if (!v49)
    {
      v50 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
      v51 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid((pxrInternal__aapl__pxrReserved__::VtValue *)*a1);
      if (!strcmp((const char *)(0x800000020CAC1980 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v51 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
      {
        if (!v111.__r_.__value_.__s.__data_[0])
        {
          v111.__r_.__value_.__s.__data_[0] = 1;
          *((_QWORD *)&v109 + 1) = sub_20C291030((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)__p, &v108);
          v110 = v87;
        }
        if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)((char *)&v109 + 8)))
        {
          v104[1] = 0;
          *(_QWORD *)&v105[0] = 0;
          v104[0] = &v104[1];
          v88 = (uint64_t *)sub_20C0E7B94((uint64_t *)v50);
          sub_20BF07C64(v88, (uint64_t)v104);
          sub_20C35BB00((uint64_t)v104, (double *)&v109 + 1);
          v89 = (uint64_t *)sub_20C0E7B94((uint64_t *)v50);
          sub_20BF07C64(v89, (uint64_t)v104);
          sub_20BFED2B4((uint64_t)v104, (_QWORD *)v104[1]);
        }
      }
      else
      {
        v52 = (pxrInternal__aapl__pxrReserved__::VtValue *)*a1;
        v53 = (void *)*a4;
        v104[0] = a2;
        v104[1] = v53;
        sub_20BF1DD04((uint64_t *)&v104[1]);
        sub_20BFD6E54(v105, a5);
        sub_20BFD6EA4((_DWORD *)v105 + 1, (_DWORD *)a5 + 1);
        *(_OWORD *)((char *)v105 + 8) = *(_OWORD *)a3;
        if ((sub_20C46728C(v52, (const pxrInternal__aapl__pxrReserved__::ArResolverContext *)(v43 + 32), (uint64_t *)v104, *((unsigned __int8 *)a1 + 41)) & 1) == 0&& (sub_20C4674F4((pxrInternal__aapl__pxrReserved__::VtValue *)*a1, (uint64_t)__p) & 1) == 0)
        {
          sub_20C467708((pxrInternal__aapl__pxrReserved__::VtValue *)*a1, (uint64_t)(a1 + 1), a3);
        }
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v105 + 1);
        sub_20BFD265C(v105);
        sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)&v104[1]);
      }
    }
    v90 = v109;
    if ((_QWORD)v109)
    {
      v91 = (unsigned int *)(v109 + 8);
      do
      {
        v92 = __ldxr(v91);
        v93 = v92 - 1;
      }
      while (__stlxr(v93, v91));
      if (!v93)
        (*(void (**)(uint64_t))(*(_QWORD *)v90 + 8))(v90);
    }
    return 1;
  }
  else
  {
    return 0;
  }
  return v22;
}

void sub_20C466CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  sub_20C00E910((uint64_t *)va);
  sub_20C00BBB0((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_20C466E2C(pxrInternal__aapl__pxrReserved__::VtValue **a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  uint64_t v9;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v10;

  v9 = *(_QWORD *)a5;
  v10 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  if (v9)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey(v10, a3, a4, a5, *a1);
  else
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v10, a3, a4, *a1);
}

uint64_t sub_20C466E9C(uint64_t a1, _OWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  *(_OWORD *)a1 = *a2;
  v4 = a3[1];
  *(_QWORD *)(a1 + 16) = *a3;
  *(_QWORD *)(a1 + 24) = v4;
  if (v4)
  {
    v5 = (unsigned int *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  pxrInternal__aapl__pxrReserved__::SdfLayerOffset::SdfLayerOffset((double *)(a1 + 32), 0.0, 1.0);
  *(_BYTE *)(a1 + 48) = 0;
  return a1;
}

void sub_20C466EF8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
    sub_20C96BD08(v3);
  _Unwind_Resume(exception_object);
}

BOOL sub_20C466F10(_QWORD *a1, pxrInternal__aapl__pxrReserved__::VtValue *this, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t Typeid;
  int v13;
  uint64_t *v14;
  uint64_t *v15;
  _QWORD **v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(this);
  v13 = strcmp((const char *)(0x800000020CAC17A0 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL));
  if (!v13)
  {
    v17 = 0;
    v14 = (uint64_t *)sub_20BF4D190((const void *****)this);
    pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17);
    v24 = a5;
    v23 = a6;
    if (a5)
    {
      v18 = a4;
      v19 = a3;
      v20 = &v23;
      v21 = &v24;
      v22 = a1;
      sub_20C467028((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17, (uint64_t)&v18);
    }
    else
    {
      v18 = a4;
      v19 = a3;
      v20 = &v23;
      v21 = a1;
      sub_20C467164((pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17, (uint64_t)&v18);
    }
    v15 = (uint64_t *)sub_20BF4D190((const void *****)this);
    pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v17);
    sub_20BF49F14(&v17, 0);
  }
  return v13 == 0;
}

void sub_20C467010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD **a9)
{
  sub_20BF49F14(&a9, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C467028(pxrInternal__aapl__pxrReserved__::VtDictionary *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  const void *****v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  char v19;
  _QWORD **v20;
  uint64_t v21;
  uint64_t v22;

  v4 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(a1);
  v6 = v5;
  v21 = v4;
  v22 = v5;
  result = (_QWORD *)pxrInternal__aapl__pxrReserved__::VtDictionary::end(a1);
  v9 = result;
  v10 = v8;
  if (v8)
    v11 = v4 == (_QWORD)result;
  else
    v11 = 1;
  v12 = v11;
  if (v6 != v8 || (v12 & 1) == 0)
  {
    do
    {
      v13 = (const void *****)(v4 + 56);
      if (sub_20BF4A73C((pxrInternal__aapl__pxrReserved__::VtValue *)v13))
      {
        v20 = 0;
        v14 = (uint64_t *)sub_20BF4D190(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_20C467028(&v20, a2);
        v15 = (uint64_t *)sub_20BF4D190(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_20BF49F14(&v20, 0);
      }
      else if ((sub_20C46728C((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(const pxrInternal__aapl__pxrReserved__::ArResolverContext **)a2, *(uint64_t **)(a2 + 8), **(unsigned __int8 **)(a2 + 16)) & 1) == 0&& (sub_20C4674F4((pxrInternal__aapl__pxrReserved__::VtValue *)v13, **(_QWORD **)(a2 + 24)) & 1) == 0)
      {
        sub_20C467708((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(_QWORD *)(a2 + 32), (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)(*(_QWORD *)(a2 + 8) + 24));
      }
      result = sub_20BF4D354(&v21, v16, v17);
      v4 = v21;
      if (v10)
        v18 = v21 == (_QWORD)v9;
      else
        v18 = 1;
      v19 = v18;
    }
    while (v22 != v10 || (v19 & 1) == 0);
  }
  return result;
}

void sub_20C46714C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF49F14((_QWORD ***)va, 0);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C467164(pxrInternal__aapl__pxrReserved__::VtDictionary *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  const void *****v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  char v19;
  _QWORD **v20;
  uint64_t v21;
  uint64_t v22;

  v4 = pxrInternal__aapl__pxrReserved__::VtDictionary::begin(a1);
  v6 = v5;
  v21 = v4;
  v22 = v5;
  result = (_QWORD *)pxrInternal__aapl__pxrReserved__::VtDictionary::end(a1);
  v9 = result;
  v10 = v8;
  if (v8)
    v11 = v4 == (_QWORD)result;
  else
    v11 = 1;
  v12 = v11;
  if (v6 != v8 || (v12 & 1) == 0)
  {
    do
    {
      v13 = (const void *****)(v4 + 56);
      if (sub_20BF4A73C((pxrInternal__aapl__pxrReserved__::VtValue *)v13))
      {
        v20 = 0;
        v14 = (uint64_t *)sub_20BF4D190(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v14, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_20C467164(&v20, a2);
        v15 = (uint64_t *)sub_20BF4D190(v13);
        pxrInternal__aapl__pxrReserved__::VtDictionary::swap(v15, (pxrInternal__aapl__pxrReserved__::VtDictionary *)&v20);
        sub_20BF49F14(&v20, 0);
      }
      else if ((sub_20C46728C((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(const pxrInternal__aapl__pxrReserved__::ArResolverContext **)a2, *(uint64_t **)(a2 + 8), **(unsigned __int8 **)(a2 + 16)) & 1) == 0)
      {
        sub_20C467708((pxrInternal__aapl__pxrReserved__::VtValue *)v13, *(_QWORD *)(a2 + 24), (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)(*(_QWORD *)(a2 + 8) + 24));
      }
      result = sub_20BF4D354(&v21, v16, v17);
      v4 = v21;
      if (v10)
        v18 = v21 == (_QWORD)v9;
      else
        v18 = 1;
      v19 = v18;
    }
    while (v22 != v10 || (v19 & 1) == 0);
  }
  return result;
}

void sub_20C467274(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BF49F14((_QWORD ***)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46728C(pxrInternal__aapl__pxrReserved__::VtValue *a1, const pxrInternal__aapl__pxrReserved__::ArResolverContext *a2, uint64_t *a3, int a4)
{
  uint64_t Typeid;
  uint64_t v9;
  __int128 *v11;
  void *v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 *v18;
  void *v19;
  __int128 v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  __int128 v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  __int128 v35;
  void *v36;
  void *v37;
  void *v38[2];
  void *__p[3];
  uint64_t v40;

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
  if (!strcmp((const char *)(0x800000020CAC983ALL & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    pxrInternal__aapl__pxrReserved__::SdfAssetPath::SdfAssetPath((pxrInternal__aapl__pxrReserved__::SdfAssetPath *)v38);
    v11 = sub_20C1D1C98((__int128 **)a1);
    v12 = (void *)*((_QWORD *)v11 + 2);
    v13 = *v11;
    v14 = __p[0];
    *v11 = *(_OWORD *)v38;
    *((_QWORD *)v11 + 2) = v14;
    *(_OWORD *)v38 = v13;
    __p[0] = v12;
    v15 = *((_QWORD *)v11 + 5);
    v16 = *(__int128 *)((char *)v11 + 24);
    v17 = v40;
    *(__int128 *)((char *)v11 + 24) = *(_OWORD *)&__p[1];
    *((_QWORD *)v11 + 5) = v17;
    *(_OWORD *)&__p[1] = v16;
    v40 = v15;
    sub_20C42B5F8(a3, a2, (uint64_t)v38, 1, a4);
    v18 = sub_20C1D1C98((__int128 **)a1);
    v19 = (void *)*((_QWORD *)v18 + 2);
    v20 = *v18;
    v21 = __p[0];
    *v18 = *(_OWORD *)v38;
    *((_QWORD *)v18 + 2) = v21;
    *(_OWORD *)v38 = v20;
    __p[0] = v19;
    v22 = *((_QWORD *)v18 + 5);
    v23 = *(__int128 *)((char *)v18 + 24);
    v24 = v40;
    *(__int128 *)((char *)v18 + 24) = *(_OWORD *)&__p[1];
    *((_QWORD *)v18 + 5) = v24;
    *(_OWORD *)&__p[1] = v23;
    v40 = v22;
    if (SHIBYTE(v22) < 0)
      operator delete(__p[1]);
    if (SHIBYTE(__p[0]) < 0)
      operator delete(v38[0]);
  }
  else
  {
    v9 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
    if (strcmp((const char *)(0x800000020CAC97F8 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v9 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      return 0;
    }
    *(_OWORD *)v38 = 0u;
    memset(__p, 0, sizeof(__p));
    v25 = sub_20C1D1DF4(a1);
    v26 = *(void **)(v25 + 32);
    *(_QWORD *)(v25 + 32) = 0;
    __p[2] = v26;
    v27 = *(_OWORD *)v25;
    *(_OWORD *)v25 = *(_OWORD *)v38;
    v28 = *(void **)(v25 + 16);
    v29 = *(void **)(v25 + 24);
    *(_QWORD *)(v25 + 16) = 0;
    *(void **)(v25 + 24) = __p[1];
    *(_OWORD *)v38 = v27;
    __p[0] = v28;
    __p[1] = v29;
    sub_20C00ACF8((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v38, v30, v31);
    sub_20C42B5F8(a3, a2, (uint64_t)__p[2], (uint64_t)v38[0], a4);
    v32 = sub_20C1D1DF4(a1);
    v33 = *(void **)(v32 + 32);
    v34 = __p[0];
    *(void **)(v32 + 32) = __p[2];
    __p[2] = v33;
    v35 = *(_OWORD *)v32;
    *(_OWORD *)v32 = *(_OWORD *)v38;
    v36 = *(void **)(v32 + 16);
    v37 = *(void **)(v32 + 24);
    *(_QWORD *)(v32 + 16) = v34;
    *(void **)(v32 + 24) = __p[1];
    *(_OWORD *)v38 = v35;
    __p[0] = v36;
    __p[1] = v37;
    sub_20C00A724(v38);
  }
  return 1;
}

void sub_20C4674BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  sub_20C00A724(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4674F4(pxrInternal__aapl__pxrReserved__::VtValue *a1, uint64_t a2)
{
  uint64_t Typeid;
  uint64_t v5;
  uint64_t v7;
  double *v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  double *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double *v21;
  uint64_t v22;
  char *v23;
  double *v24;
  uint64_t v25;
  double *v26;
  unint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double *v33;

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
  if (!strcmp((const char *)(0x800000020CACA312 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    if (!*(_BYTE *)(a2 + 48))
    {
      *(_BYTE *)(a2 + 48) = 1;
      *(double *)(a2 + 32) = sub_20C291030((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)a2, (_QWORD *)(a2 + 16));
      *(_QWORD *)(a2 + 40) = v7;
    }
    v8 = (double *)(a2 + 32);
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v8))
    {
      v9 = sub_20C1D1088(a1);
      v10 = *v9;
      *v9 = 0;
      *(_QWORD *)&v31 = v10;
      *(_QWORD *)&v31 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v8, (double *)&v31);
      v11 = sub_20C1D1088(a1);
      *v11 = v31;
    }
  }
  else
  {
    v5 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
    if (strcmp((const char *)(0x800000020CACA2D2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v5 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      return 0;
    }
    if (!*(_BYTE *)(a2 + 48))
    {
      *(_BYTE *)(a2 + 48) = 1;
      *(double *)(a2 + 32) = sub_20C291030((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)a2, (_QWORD *)(a2 + 16));
      *(_QWORD *)(a2 + 40) = v12;
    }
    v13 = (double *)(a2 + 32);
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v13))
    {
      v33 = 0;
      v31 = 0u;
      v32 = 0u;
      v14 = sub_20C1D1258(a1);
      v15 = *(double **)(v14 + 32);
      *(_QWORD *)(v14 + 32) = 0;
      v33 = v15;
      v16 = *(_OWORD *)v14;
      *(_OWORD *)v14 = v31;
      v17 = *(_QWORD *)(v14 + 16);
      v18 = *(_QWORD *)(v14 + 24);
      *(_OWORD *)(v14 + 16) = __PAIR128__(*((unint64_t *)&v32 + 1), 0);
      v31 = v16;
      *(_QWORD *)&v32 = v17;
      *((_QWORD *)&v32 + 1) = v18;
      sub_20C00783C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v31, v19, v20);
      v21 = v33;
      sub_20C00783C((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)&v31, v22, v23);
      v24 = &v33[v31];
      while (v21 != v24)
      {
        *v21 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(v13, v21);
        ++v21;
      }
      v25 = sub_20C1D1258(a1);
      v26 = *(double **)(v25 + 32);
      v27 = v32;
      *(_QWORD *)(v25 + 32) = v33;
      v33 = v26;
      v28 = *(_OWORD *)v25;
      *(_OWORD *)v25 = v31;
      v29 = *(_QWORD *)(v25 + 16);
      v30 = *(_QWORD *)(v25 + 24);
      *(_OWORD *)(v25 + 16) = __PAIR128__(*((unint64_t *)&v32 + 1), v27);
      v31 = v28;
      *(_QWORD *)&v32 = v29;
      *((_QWORD *)&v32 + 1) = v30;
      sub_20BF5618C((uint64_t)&v31);
    }
  }
  return 1;
}

void sub_20C4676EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20BF5618C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20C467708(pxrInternal__aapl__pxrReserved__::VtValue *a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a3)
{
  uint64_t Typeid;
  uint64_t v7;
  pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **MapToRoot;
  const char *v10;
  char *v11;
  void *v12;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v21;
  unsigned int *v22;
  unsigned int v23;
  pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **v24;
  const char *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t i;
  void *v34;
  void **v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v44;
  int v45;
  int v46;
  uint64_t v47;
  void **v48[3];
  void *v49[2];
  _BYTE v50[24];
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 __p;
  _QWORD v57[4];
  _OWORD v58[3];
  void **v59[9];

  Typeid = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
  if (!strcmp((const char *)(0x800000020CAC1850 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(Typeid + 8) & 0x7FFFFFFFFFFFFFFFLL)))
  {
    memset(v58, 0, sizeof(v58));
    __p = 0u;
    memset(v57, 0, sizeof(v57));
    sub_20C1D25C4((uint64_t *)a1, (uint64_t)&__p);
    MapToRoot = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a3);
    v12 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(MapToRoot, v10, v11);
    sub_20C35C4F8((uint64_t)&v43, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap((pxrInternal__aapl__pxrReserved__::UsdPrim *)&v43, v13, (uint64_t *)v48);
    sub_20C42C3A8(&__p, (uint64_t)v12, (uint64_t)v48, (uint64_t)v49);
    if ((_QWORD)__p)
    {
      *((_QWORD *)&__p + 1) = __p;
      operator delete((void *)__p);
    }
    __p = *(_OWORD *)v49;
    v57[0] = *(_QWORD *)v50;
    v49[1] = 0;
    *(_QWORD *)v50 = 0;
    v49[0] = 0;
    sub_20C00BC18((void **)&v57[1]);
    *(_OWORD *)&v57[1] = *(_OWORD *)&v50[8];
    v57[3] = v51;
    *(_QWORD *)&v50[16] = 0;
    v51 = 0;
    *(_QWORD *)&v50[8] = 0;
    sub_20C00BCC0((void **)v58);
    v58[0] = v52;
    *(_QWORD *)&v58[1] = v53;
    v53 = 0;
    v52 = 0uLL;
    if (SHIBYTE(v58[2]) < 0)
      operator delete(*((void **)&v58[1] + 1));
    *(_OWORD *)((char *)&v58[1] + 8) = v54;
    *((_QWORD *)&v58[2] + 1) = v55;
    HIBYTE(v55) = 0;
    LOBYTE(v54) = 0;
    v59[0] = (void **)&v52;
    sub_20C00E25C(v59);
    v59[0] = (void **)&v50[8];
    sub_20C00D5A8(v59);
    if (v49[0])
    {
      v49[1] = v49[0];
      operator delete(v49[0]);
    }
    v59[0] = (void **)v48;
    sub_20C22D004(v59);
    if ((v47 & 7) != 0)
    {
      v14 = (unsigned int *)(v47 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v46);
    sub_20BFD265C(&v45);
    if (v44)
      sub_20C35C614(v44);
    sub_20C1D25C4((uint64_t *)a1, (uint64_t)&__p);
    if (SHIBYTE(v58[2]) < 0)
      operator delete(*((void **)&v58[1] + 1));
    v49[0] = v58;
    sub_20C00E25C((void ***)v49);
    v49[0] = &v57[1];
    sub_20C00D5A8((void ***)v49);
    if ((_QWORD)__p)
    {
      *((_QWORD *)&__p + 1) = __p;
      operator delete((void *)__p);
    }
  }
  else
  {
    v7 = pxrInternal__aapl__pxrReserved__::VtValue::GetTypeid(a1);
    if (strcmp((const char *)(0x800000020CAC1888 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(_QWORD *)(v7 + 8) & 0x7FFFFFFFFFFFFFFFLL)))
    {
      return 0;
    }
    *(_OWORD *)v49 = 0u;
    memset(v50, 0, sizeof(v50));
    v16 = sub_20C1939F0(a1);
    v17 = *(_QWORD *)(v16 + 32);
    *(_QWORD *)(v16 + 32) = 0;
    *(_QWORD *)&v50[16] = v17;
    v18 = *(_OWORD *)v16;
    *(_OWORD *)v16 = *(_OWORD *)v49;
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    *(_OWORD *)(v16 + 16) = __PAIR128__(*(unint64_t *)&v50[8], 0);
    *(_OWORD *)v49 = v18;
    *(_QWORD *)v50 = v19;
    *(_QWORD *)&v50[8] = v20;
    sub_20C35C4F8((uint64_t)&__p, (uint64_t *)(a2 + 8), (_DWORD *)(a2 + 16));
    pxrInternal__aapl__pxrReserved__::UsdPrim::_GetProtoToInstancePathMap((pxrInternal__aapl__pxrReserved__::UsdPrim *)&__p, v21, &v43);
    if ((v57[1] & 7) != 0)
    {
      v22 = (unsigned int *)(v57[1] & 0xFFFFFFFFFFFFFFF8);
      do
        v23 = __ldxr(v22);
      while (__stlxr(v23 - 2, v22));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v57 + 1);
    sub_20BFD265C(v57);
    if (*((_QWORD *)&__p + 1))
      sub_20C35C614(*((pxrInternal__aapl__pxrReserved__::Usd_PrimData **)&__p + 1));
    v24 = (pxrInternal__aapl__pxrReserved__::PcpMapExpression::_Node **)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetMapToRoot(a3);
    v27 = pxrInternal__aapl__pxrReserved__::PcpMapExpression::Evaluate(v24, v25, v26);
    sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v49, v28, v29);
    v30 = *(_QWORD *)&v50[16];
    sub_20C00EEBC((pxrInternal__aapl__pxrReserved__::Vt_ArrayBase *)v49, v31, v32);
    for (i = *(_QWORD *)&v50[16] + 96 * (uint64_t)v49[0]; v30 != i; v30 += 96)
    {
      sub_20C42C3A8((_QWORD *)v30, (uint64_t)v27, (uint64_t)&v43, (uint64_t)&__p);
      v34 = *(void **)v30;
      if (*(_QWORD *)v30)
      {
        *(_QWORD *)(v30 + 8) = v34;
        operator delete(v34);
        *(_QWORD *)v30 = 0;
        *(_QWORD *)(v30 + 8) = 0;
        *(_QWORD *)(v30 + 16) = 0;
      }
      *(_OWORD *)v30 = __p;
      *(_QWORD *)(v30 + 16) = v57[0];
      __p = 0uLL;
      v57[0] = 0;
      sub_20C00BC18((void **)(v30 + 24));
      *(_OWORD *)(v30 + 24) = *(_OWORD *)&v57[1];
      *(_QWORD *)(v30 + 40) = v57[3];
      memset(&v57[1], 0, 24);
      sub_20C00BCC0((void **)(v30 + 48));
      *(_OWORD *)(v30 + 48) = v58[0];
      *(_QWORD *)(v30 + 64) = *(_QWORD *)&v58[1];
      memset(v58, 0, 24);
      v35 = (void **)(v30 + 72);
      if (*(char *)(v30 + 95) < 0)
        operator delete(*v35);
      v36 = *(_OWORD *)((char *)&v58[1] + 8);
      *(_QWORD *)(v30 + 88) = *((_QWORD *)&v58[2] + 1);
      *(_OWORD *)v35 = v36;
      HIBYTE(v58[2]) = 0;
      BYTE8(v58[1]) = 0;
      v48[0] = (void **)v58;
      sub_20C00E25C(v48);
      v48[0] = (void **)&v57[1];
      sub_20C00D5A8(v48);
      if ((_QWORD)__p)
      {
        *((_QWORD *)&__p + 1) = __p;
        operator delete((void *)__p);
      }
    }
    v37 = sub_20C1939F0(a1);
    v38 = *(_QWORD *)(v37 + 32);
    v39 = *(_QWORD *)v50;
    *(_QWORD *)(v37 + 32) = *(_QWORD *)&v50[16];
    *(_QWORD *)&v50[16] = v38;
    v40 = *(_OWORD *)v37;
    *(_OWORD *)v37 = *(_OWORD *)v49;
    v41 = *(_QWORD *)(v37 + 16);
    v42 = *(_QWORD *)(v37 + 24);
    *(_OWORD *)(v37 + 16) = __PAIR128__(*(unint64_t *)&v50[8], v39);
    *(_OWORD *)v49 = v40;
    *(_QWORD *)v50 = v41;
    *(_QWORD *)&v50[8] = v42;
    *(_QWORD *)&__p = &v43;
    sub_20C22D004((void ***)&__p);
    sub_20C00E910(v49);
  }
  return 1;
}

void sub_20C467BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void **a29)
{
  a29 = (void **)&a10;
  sub_20C22D004(&a29);
  sub_20C00E910(&a17);
  _Unwind_Resume(a1);
}

BOOL sub_20C467C48(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  char v20;
  unint64_t *v21;
  unint64_t PrimDefinition;
  _BOOL8 v23;
  _QWORD v25[2];
  int v26;
  int v27;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v26);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v27);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v25);
      sub_20BFD3EBC(&v26, (int *)v25);
      sub_20BFD3F10(&v27, (int *)v25 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v25 + 1);
      sub_20BFD265C(v25);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v19 = *(void **)a1;
    v25[0] = v16;
    v25[1] = v17;
    v20 = sub_20C466320((_QWORD **)a7, v19, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v25, *(uint64_t **)(a6 + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v26, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v20;
  }
  if (a5)
  {
    v21 = *(unint64_t **)(a1 + 24);
    PrimDefinition = atomic_load(v21 + 7);
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v21);
    sub_20C465B5C((const pxrInternal__aapl__pxrReserved__::VtDictionary ***)a7, PrimDefinition, a2, a3, a4);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v23 = 1;
    goto LABEL_17;
  }
  v23 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v27);
  sub_20BFD265C(&v26);
  return v23;
}

void sub_20C467DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C467DE8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C02F8C8(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C468340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C46845C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C0368F4(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C4689B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C468AD0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t (****a5)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (****v102)(_QWORD, uint64_t);
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254988DF0);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254988DF0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988DE8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988DF0);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988DE8;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C46A3F0((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = (uint64_t)(*a5)[2];
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4((uint64_t)*v102, (uint64_t)&v109);
        *((_BYTE *)v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0((uint64_t)*v102, (uint64_t)&v109);
        *((_BYTE *)v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808((uint64_t)*v102, (uint64_t)&v109);
        *((_BYTE *)v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70((uint64_t)*v102, (uint64_t)&v109);
          *((_BYTE *)v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C46A594((uint64_t)v10, v12, a2, a4, (uint64_t)v103, (uint64_t)a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C46AC08((uint64_t)v10, v12, a2, a4, (uint64_t)v103, (uint64_t)a5);
  }
  return v22;
}

void sub_20C469FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C46A3F0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t (****a7)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  _BOOL8 v17;
  int v19;
  int v20;
  int v21;
  int v22;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  for (i = 1;
        *(_QWORD *)(a6 + 16) != *(_QWORD *)(a6 + 32) || *(_QWORD *)(a6 + 24) != *(_QWORD *)(a6 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_20C453680(a6, a2, &v19);
      sub_20BFD3EBC(&v21, &v19);
      sub_20BFD3F10(&v22, &v20);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v20);
      sub_20BFD265C(&v19);
    }
    if (sub_20C45A368(a7, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, a3, a4))
    {
      v17 = 1;
      *((_BYTE *)a7 + 40) = 1;
      goto LABEL_19;
    }
    if (*((_BYTE *)a7 + 40))
    {
      v17 = 1;
      goto LABEL_19;
    }
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *((_BYTE *)a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *a7);
  }
  v17 = *((_BYTE *)a7 + 40) != 0;
LABEL_19:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  sub_20BFD265C(&v21);
  return v17;
}

void sub_20C46A56C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C46A594(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C46AAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C46AC08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C46B160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C46B27C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t **v6;
  uint64_t result;

  if (sub_20BFEB19C((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    v4 = a2[1];
    if ((v4 & 4) != 0)
      v5 = (*(uint64_t (**)(uint64_t *))((v4 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v5 = *a2;
    v6 = *(uint64_t ***)(a1 + 8);
    if (v6 != (uint64_t **)v5)
      sub_20C46B3D4(v6, *(_QWORD **)v5, (_QWORD *)(v5 + 8));
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t sub_20C46B308(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  if (sub_20BFEB19C((pxrInternal__aapl__pxrReserved__::VtValue *)a2))
  {
    sub_20C46B628(a2, &v10);
    v4 = *(_QWORD *)(a1 + 8);
    v5 = v4 + 8;
    sub_20BFED2B4(v4, *(_QWORD **)(v4 + 8));
    *(_QWORD *)v4 = v10;
    v6 = v11;
    *(_QWORD *)(v4 + 8) = v11;
    v7 = v12;
    *(_QWORD *)(v4 + 16) = v12;
    if (v7)
    {
      v8 = 0;
      v6[2] = v5;
      v10 = &v11;
      v11 = 0;
      v12 = 0;
    }
    else
    {
      *(_QWORD *)v4 = v5;
      v8 = v11;
    }
    sub_20BFED2B4((uint64_t)&v10, v8);
    return 1;
  }
  else
  {
    result = sub_20C0AA3E8((pxrInternal__aapl__pxrReserved__::VtValue *)a2);
    if ((_DWORD)result)
    {
      result = 1;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      *(_BYTE *)(a1 + 25) = 1;
    }
  }
  return result;
}

uint64_t **sub_20C46B3D4(uint64_t **result, _QWORD *a2, _QWORD *a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  _QWORD *v10;
  BOOL v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t *v16;

  v5 = result;
  if (result[2])
  {
    v6 = *result;
    v7 = result[1];
    *result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1])
      v8 = (uint64_t *)v6[1];
    else
      v8 = v6;
    v14 = result;
    v15 = v8;
    v16 = v8;
    if (v8)
    {
      v15 = sub_20BDFC6B0((uint64_t)v8);
      if (a2 != a3)
      {
        v9 = a2;
        do
        {
          v8[4] = v9[4];
          sub_20BF4A9BC(v8 + 5, v9 + 5);
          sub_20BF93290(v5, (uint64_t)v16);
          v8 = v15;
          v16 = v15;
          if (v15)
            v15 = sub_20BDFC6B0((uint64_t)v15);
          v10 = (_QWORD *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              v10 = (_QWORD *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (_QWORD *)v9[2];
              v11 = *a2 == (_QWORD)v9;
              v9 = a2;
            }
            while (!v11);
          }
          if (!v8)
            break;
          v9 = a2;
        }
        while (a2 != a3);
      }
    }
    result = (uint64_t **)sub_20C46B540((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      result = (uint64_t **)sub_20C46B594((uint64_t)v5, a2 + 4);
      v12 = (_QWORD *)a2[1];
      if (v12)
      {
        do
        {
          v13 = v12;
          v12 = (_QWORD *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (_QWORD *)a2[2];
          v11 = *v13 == (_QWORD)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_20C46B52C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C46B540((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46B540(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  sub_20BFED2B4(*(_QWORD *)a1, *(_QWORD **)(a1 + 16));
  v2 = *(_QWORD **)(a1 + 8);
  if (v2)
  {
    v3 = (_QWORD *)v2[2];
    if (v3)
    {
      do
      {
        v2 = v3;
        v3 = (_QWORD *)v3[2];
      }
      while (v3);
      *(_QWORD *)(a1 + 8) = v2;
    }
    sub_20BFED2B4(*(_QWORD *)a1, v2);
  }
  return a1;
}

uint64_t *sub_20C46B594(uint64_t a1, _QWORD *a2)
{
  uint64_t **v3;
  uint64_t *v4;
  uint64_t **v5;
  uint64_t *v6;
  uint64_t *v8[3];

  sub_20BFED200(a1, a2, (uint64_t)v8);
  v3 = (uint64_t **)(a1 + 8);
  v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v3 = (uint64_t **)v4;
        if (*((double *)v8[0] + 4) >= *((double *)v4 + 4))
          break;
        v4 = (uint64_t *)*v4;
        v5 = v3;
        if (!*v3)
          goto LABEL_8;
      }
      v4 = (uint64_t *)v4[1];
    }
    while (v4);
    v5 = v3 + 1;
  }
  else
  {
    v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_20BDDE1B4((uint64_t **)a1, (uint64_t)v3, v5, v8[0]);
  v6 = v8[0];
  v8[0] = 0;
  sub_20BFED270((uint64_t)v8, 0);
  return v6;
}

uint64_t *sub_20C46B628@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v4;
  uint64_t *result;
  uint64_t v6;
  BOOL v7;

  a2[2] = 0;
  a2[1] = 0;
  *a2 = a2 + 1;
  v4 = (uint64_t *)sub_20C0E7B94(a1);
  result = sub_20BF07C64(v4, (uint64_t)a2);
  v6 = a1[1];
  if (v6)
    v7 = (a1[1] & 3) == 3;
  else
    v7 = 1;
  if (!v7)
    result = (uint64_t *)(*(uint64_t (**)(uint64_t *))((v6 & 0xFFFFFFFFFFFFFFF8) + 32))(a1);
  a1[1] = 0;
  return result;
}

void sub_20C46B688(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFED2B4(v1, *(_QWORD **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20C46B6A0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, int a4, uint64_t a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  unsigned __int8 v11;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  BOOL i;
  _QWORD *v17;
  int HasField;
  int v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  BOOL j;
  _QWORD *v25;
  int v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int *v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  BOOL k;
  _QWORD *v39;
  int v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int *v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  BOOL m;
  _QWORD *v53;
  int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int *v61;
  unsigned int v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int *v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int *v69;
  unsigned int v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int *v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  void ***v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int *v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  void ***v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int *v87;
  unsigned int v88;
  uint64_t v89;
  _QWORD *v90;
  void ***v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int *v94;
  unsigned int v95;
  uint64_t v96;
  _QWORD *v97;
  void ***v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  _BYTE v103[16];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t (**v109)(_QWORD, uint64_t);
  void *v110;
  std::type_info *v111;
  int v112;
  int v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *__p;
  void *v123;
  uint64_t v124;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void ***v130;
  std::type_info *v131;
  __int16 v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  void *v139;
  void *v140;
  void ***v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  v10 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v11 = atomic_load((unsigned __int8 *)&qword_254988E00);
  if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254988E00))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988DF8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E00);
  }
  if (*(int *)a1 < 2)
    v12 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988DF8;
  else
    v12 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v10);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103, PrimIndex, 1);
  if (!sub_20C46D094((uint64_t)v10, v12, a2, a3, a4, (uint64_t)v103, a5))
    return 0;
  v14 = *(_QWORD *)(*(_QWORD *)a5 + 16);
  v102 = a5;
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524CF0))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (i = 1;
          v104 != v106 || v105 != v107;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v17 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524CF0;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v17, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v19 = 0;
      else
        v19 = HasField;
      if (v19 == 1)
      {
        v20 = v136;
        if (v136 >= v137)
        {
          v21 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v21 = v20 + 152;
        }
        v136 = v21;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524CF0;
      v132 = 0;
      v129 = &unk_24C5399F0;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v30 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v31 = __ldxr(v30);
        while (__stlxr(v31 - 2, v30));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v32 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v33 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v34 = __ldxr(v33);
        while (__stlxr(v34 - 2, v33));
      }
      if (v32)
      {
        v35 = v136;
        if (v136 >= v137)
        {
          v36 = sub_20C45B3D8(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C031ADC(v136, (uint64_t)&v138);
          v36 = v35 + 152;
        }
        v136 = v36;
      }
      if ((v114 & 7) != 0)
      {
        v73 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v74 = __ldxr(v73);
        while (__stlxr(v74 - 2, v73));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v75 = v135;
    v76 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v76 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v76, (int **)&v129, (uint64_t)&v138);
      v77 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v78 = 5;
LABEL_198:
        ((void (*)(void))(*v77)[v78])();
      }
      if (v76 == (_QWORD *)v75)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v79, (uint64_t)&v129);
        sub_20C031ADC((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45BAB4(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v77 = &v138;
    v78 = 4;
    goto LABEL_198;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D00))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (j = 1;
          v104 != v106 || v105 != v107;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v25 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D00;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v26 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v25, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v27 = 0;
      else
        v27 = v26;
      if (v27 == 1)
      {
        v28 = v136;
        if (v136 >= v137)
        {
          v29 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v29 = v28 + 152;
        }
        v136 = v29;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D00;
      v132 = 0;
      v129 = &unk_24C539A28;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v44 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v45 = __ldxr(v44);
        while (__stlxr(v45 - 2, v44));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v46 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v47 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v48 = __ldxr(v47);
        while (__stlxr(v48 - 2, v47));
      }
      if (v46)
      {
        v49 = v136;
        if (v136 >= v137)
        {
          v50 = sub_20C45BC0C(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C03298C(v136, (uint64_t)&v138);
          v50 = v49 + 152;
        }
        v136 = v50;
      }
      if ((v114 & 7) != 0)
      {
        v80 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v81 = __ldxr(v80);
        while (__stlxr(v81 - 2, v80));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v82 = v135;
    v83 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v83 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v83, (uint64_t **)&v129, (uint64_t)&v138);
      v84 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v85 = 5;
LABEL_255:
        ((void (*)(void))(*v84)[v85])();
      }
      if (v83 == (_QWORD *)v82)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v86, (uint64_t)&v129);
        sub_20C03298C((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C1A0(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v84 = &v138;
    v85 = 4;
    goto LABEL_255;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D10))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (k = 1;
          v104 != v106 || v105 != v107;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v39 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D10;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v40 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v39, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v41 = 0;
      else
        v41 = v40;
      if (v41 == 1)
      {
        v42 = v136;
        if (v136 >= v137)
        {
          v43 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v43 = v42 + 152;
        }
        v136 = v43;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D10;
      v132 = 0;
      v129 = &unk_24C539A60;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v58 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v59 = __ldxr(v58);
        while (__stlxr(v59 - 2, v58));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v60 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v61 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v62 = __ldxr(v61);
        while (__stlxr(v62 - 2, v61));
      }
      if (v60)
      {
        v63 = v136;
        if (v136 >= v137)
        {
          v64 = sub_20C45C274(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C033524(v136, (uint64_t)&v138);
          v64 = v63 + 152;
        }
        v136 = v64;
      }
      if ((v114 & 7) != 0)
      {
        v87 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v88 = __ldxr(v87);
        while (__stlxr(v88 - 2, v87));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v89 = v135;
    v90 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 == v136)
      goto LABEL_392;
    v129 = 0;
    v130 = 0;
    v131 = 0;
    while (1)
    {
      v90 -= 19;
      v141 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v90, (int **)&v129, (uint64_t)&v138);
      v91 = v141;
      if (v141 == &v138)
        break;
      if (v141)
      {
        v92 = 5;
LABEL_310:
        ((void (*)(void))(*v91)[v92])();
      }
      if (v90 == (_QWORD *)v89)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v138);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v93, (uint64_t)&v129);
        sub_20C033524((uint64_t)&v109, (uint64_t)&v138);
        sub_20C45C808(*(_QWORD *)v102, (uint64_t)&v109);
        *(_BYTE *)(v102 + 40) = 1;
        if (__p)
        {
          v123 = __p;
          operator delete(__p);
        }
        if (v120)
        {
          v121 = v120;
          operator delete(v120);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v110)
        {
          v111 = (std::type_info *)v110;
          operator delete(v110);
        }
        if (v150)
        {
          v151 = v150;
          operator delete(v150);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v139)
        {
          v140 = v139;
          operator delete(v139);
        }
        if (v129)
        {
          v130 = (void ***)v129;
          operator delete(v129);
        }
        goto LABEL_392;
      }
    }
    v91 = &v138;
    v92 = 4;
    goto LABEL_310;
  }
  if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D20))
  {
    v135 = 0;
    v136 = 0;
    v137 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v133);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v134);
    for (m = 1;
          v104 != v106 || v105 != v107;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v103))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v103, v12, (int *)&v138);
        sub_20BFD3EBC(&v133, (int *)&v138);
        sub_20BFD3F10(&v134, (int *)&v138 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v138 + 1);
        sub_20BFD265C(&v138);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v53 = (_QWORD *)sub_20C0EEAF8(v108);
      v110 = &v138;
      v111 = &stru_24C524D20;
      LOWORD(v112) = 0;
      v109 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v54 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v53, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v133, a2, &v109);
      if ((_BYTE)v112)
        v55 = 0;
      else
        v55 = v54;
      if (v55 == 1)
      {
        v56 = v136;
        if (v136 >= v137)
        {
          v57 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v57 = v56 + 152;
        }
        v136 = v57;
      }
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    if ((a4 & 1) != 0)
    {
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
      v131 = &stru_24C524D20;
      v132 = 0;
      v129 = &unk_24C539A98;
      v130 = &v138;
      LODWORD(v124) = 0;
      v125 = 0;
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v126);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v127);
      v128 = 0;
      sub_20C4535E0((uint64_t)&v109, (uint64_t)&v129, (uint64_t)&v124);
      if ((v128 & 7) != 0)
      {
        v66 = (unsigned int *)(v128 & 0xFFFFFFFFFFFFFFF8);
        do
          v67 = __ldxr(v66);
        while (__stlxr(v67 - 2, v66));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v127);
      sub_20BFD265C(&v126);
      if (v125)
        sub_20C35C614(v125);
      v124 = 0;
      v68 = sub_20C45B318((uint64_t)v10, v12, a2, &v124, (uint64_t)&v109);
      if ((v124 & 7) != 0)
      {
        v69 = (unsigned int *)(v124 & 0xFFFFFFFFFFFFFFF8);
        do
          v70 = __ldxr(v69);
        while (__stlxr(v70 - 2, v69));
      }
      if (v68)
      {
        v71 = v136;
        if (v136 >= v137)
        {
          v72 = sub_20C45C8DC(&v135, (uint64_t)&v138);
        }
        else
        {
          sub_20C0340F4(v136, (uint64_t)&v138);
          v72 = v71 + 152;
        }
        v136 = v72;
      }
      if ((v114 & 7) != 0)
      {
        v94 = (unsigned int *)((unint64_t)v114 & 0xFFFFFFFFFFFFFFF8);
        do
          v95 = __ldxr(v94);
        while (__stlxr(v95 - 2, v94));
      }
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v113);
      sub_20BFD265C(&v112);
      if (v111)
        sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v111);
      if (v150)
      {
        v151 = v150;
        operator delete(v150);
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v139)
      {
        v140 = v139;
        operator delete(v139);
      }
    }
    v96 = v135;
    v97 = (_QWORD *)v136;
    v22 = v135 != v136;
    if (v135 != v136)
    {
      v129 = 0;
      v130 = 0;
      v131 = 0;
      while (1)
      {
        v97 -= 19;
        v141 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v97, (uint64_t **)&v129, (uint64_t)&v138);
        v98 = v141;
        if (v141 == &v138)
          break;
        if (v141)
        {
          v99 = 5;
LABEL_364:
          ((void (*)(void))(*v98)[v99])();
        }
        if (v97 == (_QWORD *)v96)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v138);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v100, (uint64_t)&v129);
          sub_20C0340F4((uint64_t)&v109, (uint64_t)&v138);
          sub_20C45CE70(*(_QWORD *)v102, (uint64_t)&v109);
          *(_BYTE *)(v102 + 40) = 1;
          if (__p)
          {
            v123 = __p;
            operator delete(__p);
          }
          if (v120)
          {
            v121 = v120;
            operator delete(v120);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v110)
          {
            v111 = (std::type_info *)v110;
            operator delete(v110);
          }
          if (v150)
          {
            v151 = v150;
            operator delete(v150);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v139)
          {
            v140 = v139;
            operator delete(v139);
          }
          if (v129)
          {
            v130 = (void ***)v129;
            operator delete(v129);
          }
          goto LABEL_392;
        }
      }
      v98 = &v138;
      v99 = 4;
      goto LABEL_364;
    }
LABEL_392:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v134);
    sub_20BFD265C(&v133);
    v138 = (void **)&v135;
    sub_20C45BB28(&v138);
  }
  else
  {
    if (sub_20BDE150C(v14, (uint64_t)&stru_24C524D30))
      return sub_20C46D234((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
    if (!sub_20BDE150C(v14, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C46D8A8((uint64_t)v10, v12, a2, a4, (uint64_t)v103, a5);
  }
  return v22;
}

void sub_20C46CB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C46CFC0(uint64_t a1, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a2, uint64_t *a3, pxrInternal__aapl__pxrReserved__::SdfPath *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5, uint64_t *a6)
{
  uint64_t v9;
  double v10;
  uint64_t (***v11)(_QWORD, uint64_t);
  double v13[2];
  _QWORD **v14;
  _QWORD *v15[2];

  v9 = sub_20C45A368((uint64_t (****)(_QWORD, uint64_t))a1, a3, a4, a5, a6);
  if ((_DWORD)v9)
  {
    *(_BYTE *)(a1 + 40) = 1;
    v13[0] = sub_20C44B9D4(a2, a3);
    v13[1] = v10;
    v11 = *(uint64_t (****)(_QWORD, uint64_t))a1;
    if (!pxrInternal__aapl__pxrReserved__::SdfLayerOffset::IsIdentity((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)v13))
    {
      v15[0] = 0;
      v15[1] = 0;
      v14 = v15;
      sub_20BF07C64((uint64_t *)v11[1], (uint64_t)&v14);
      sub_20C35BB00((uint64_t)&v14, v13);
      sub_20BF07C64((uint64_t *)v11[1], (uint64_t)&v14);
      sub_20BFED2B4((uint64_t)&v14, v15[0]);
    }
  }
  return v9;
}

void sub_20C46D07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, _QWORD *a13)
{
  sub_20BFED2B4((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

BOOL sub_20C46D094(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7)
{
  char v14;
  BOOL i;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t PrimDefinition;
  _BOOL8 v21;
  _QWORD v23[2];
  int v24;
  int v25;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  v14 = 0;
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    v16 = *(_QWORD *)(a6 + 16);
    v17 = *(_QWORD *)(a6 + 24);
    if (v16 == *(_QWORD *)(a6 + 32) && v17 == *(_QWORD *)(a6 + 40))
      break;
    if (i)
    {
      sub_20C453680(a6, a2, (int *)v23);
      sub_20BFD3EBC(&v24, (int *)v23);
      sub_20BFD3F10(&v25, (int *)v23 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v23 + 1);
      sub_20BFD265C(v23);
      v16 = *(_QWORD *)(a6 + 16);
      v17 = *(_QWORD *)(a6 + 24);
    }
    v23[0] = v16;
    v23[1] = v17;
    v19 = sub_20C46CFC0(a7, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v23, *(uint64_t **)(a6 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, a3, a4);
    if (*(_BYTE *)(a7 + 40))
      goto LABEL_15;
    v14 |= v19;
  }
  if (a5)
  {
    PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
    *(_BYTE *)(a7 + 40) = sub_20C45A220(PrimDefinition, a2, a3, a4, *(uint64_t (****)(_QWORD, uint64_t))a7);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v21 = 1;
    goto LABEL_17;
  }
  v21 = *(_BYTE *)(a7 + 40) != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  sub_20BFD265C(&v24);
  return v21;
}

void sub_20C46D20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C46D234(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void ***v26;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  void **v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v47 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D30;
    v54 = 0;
    v53[0] = (void **)&unk_24C52BEB0;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45CF44(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C02F650(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = (void **)v67;
    sub_20BDE5038(&v47);
    v47 = (void **)v66;
    sub_20BDE5038(&v47);
    v47 = (void **)v65;
    sub_20BDE5038(&v47);
    v47 = (void **)v64;
    sub_20BDE5038(&v47);
    v47 = (void **)v63;
    sub_20BDE5038(&v47);
    v47 = (void **)v61;
    sub_20BDE5038(&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = v58;
    v49 = 0;
    while (1)
    {
      v25 -= 152;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v25, (uint64_t *)&v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v28, (uint64_t)&v47);
        sub_20C02F650((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D304(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v40;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v39;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v38;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v37;
        sub_20BDE5038(v53);
        v53[0] = (void **)&v36;
        sub_20BDE5038(v53);
        v53[0] = (void **)v67;
        sub_20BDE5038(v53);
        v53[0] = (void **)v66;
        sub_20BDE5038(v53);
        v53[0] = (void **)v65;
        sub_20BDE5038(v53);
        v53[0] = (void **)v64;
        sub_20BDE5038(v53);
        v53[0] = (void **)v63;
        sub_20BDE5038(v53);
        v53[0] = (void **)v61;
        sub_20BDE5038(v53);
        v60 = (void **)&v47;
        sub_20BDE5038(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C45D378(&v60);
  return v23 != v24;
}

void sub_20C46D78C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C46D8A8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, char a4, uint64_t a5, uint64_t a6)
{
  BOOL i;
  _QWORD *v9;
  int HasField;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void ***v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  void ***v48;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v49;
  int v50;
  int v51;
  uint64_t v52;
  void **v53[3];
  __int16 v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  _BYTE v61[16];
  void ***v62;
  _BYTE v63[24];
  _BYTE v64[24];
  _BYTE v65[24];
  _BYTE v66[24];
  _QWORD v67[5];

  v67[3] = *MEMORY[0x24BDAC8D0];
  v57 = 0;
  v58 = 0;
  v59 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v55);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v56);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, (int *)&v60);
      sub_20BFD3EBC(&v55, (int *)&v60);
      sub_20BFD3F10(&v56, (int *)&v60 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v60 + 1);
      sub_20BFD265C(&v60);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v9 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a5 + 48));
    LOWORD(v50) = 0;
    v48 = &v60;
    v49 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v47 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v9, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v55, a3, (uint64_t (***)(_QWORD, uint64_t))&v47);
    if ((_BYTE)v50)
      v11 = 0;
    else
      v11 = HasField;
    if (v11 == 1)
    {
      v12 = v58;
      if (v58 >= v59)
      {
        v13 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v13 = v12 + 152;
      }
      v58 = v13;
    }
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  if ((a4 & 1) != 0)
  {
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
    v53[2] = (void **)&stru_24C524D40;
    v54 = 0;
    v53[0] = (void **)&unk_24C539538;
    v53[1] = (void **)&v60;
    LODWORD(v42) = 0;
    v43 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v44);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v45);
    v46 = 0;
    sub_20C4535E0((uint64_t)&v47, (uint64_t)v53, (uint64_t)&v42);
    if ((v46 & 7) != 0)
    {
      v14 = (unsigned int *)(v46 & 0xFFFFFFFFFFFFFFF8);
      do
        v15 = __ldxr(v14);
      while (__stlxr(v15 - 2, v14));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v45);
    sub_20BFD265C(&v44);
    if (v43)
      sub_20C35C614(v43);
    v42 = 0;
    v16 = sub_20C45B318(a1, a2, a3, &v42, (uint64_t)&v47);
    if ((v42 & 7) != 0)
    {
      v17 = (unsigned int *)(v42 & 0xFFFFFFFFFFFFFFF8);
      do
        v18 = __ldxr(v17);
      while (__stlxr(v18 - 2, v17));
    }
    if (v16)
    {
      v19 = v58;
      if (v58 >= v59)
      {
        v20 = sub_20C45D45C(&v57, (uint64_t)&v60);
      }
      else
      {
        sub_20C0366AC(v58, (uint64_t)&v60);
        v20 = v19 + 152;
      }
      v58 = v20;
    }
    if ((v52 & 7) != 0)
    {
      v21 = (unsigned int *)(v52 & 0xFFFFFFFFFFFFFFF8);
      do
        v22 = __ldxr(v21);
      while (__stlxr(v22 - 2, v21));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v51);
    sub_20BFD265C(&v50);
    if (v49)
      sub_20C35C614(v49);
    v47 = v67;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v66;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v65;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v47);
    v47 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v47);
  }
  v23 = v57;
  v24 = v58;
  if (v57 != v58)
  {
    v47 = 0;
    v48 = 0;
    v25 = (_QWORD *)v58;
    v49 = 0;
    while (1)
    {
      v25 -= 19;
      v62 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v25, &v47, (uint64_t)&v60);
      v26 = v62;
      if (v62 == &v60)
        break;
      if (v62)
      {
        v27 = 5;
LABEL_43:
        ((void (*)(void))(*v26)[v27])();
      }
      if (v25 == (_QWORD *)v23)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v60);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v28, &v47);
        sub_20C0366AC((uint64_t)v35, (uint64_t)&v60);
        sub_20C45D578(*(_QWORD *)a6, (uint64_t)v35);
        *(_BYTE *)(a6 + 40) = 1;
        v53[0] = (void **)&v41;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v40;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v39;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v38;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v37;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)&v36;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v67;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v66;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v65;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v64;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v63;
        sub_20BEEB2B8(v53);
        v53[0] = (void **)v61;
        sub_20BEEB2B8(v53);
        v60 = (void **)&v47;
        sub_20BEEB2B8(&v60);
        goto LABEL_46;
      }
    }
    v26 = &v60;
    v27 = 4;
    goto LABEL_43;
  }
LABEL_46:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v56);
  sub_20BFD265C(&v55);
  v60 = (void **)&v57;
  sub_20C451A98(&v60);
  return v23 != v24;
}

void sub_20C46DE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C46DF1C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, int a4, _BYTE *a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v9;
  unsigned __int8 v10;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v11;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v14;
  int v15;
  _BYTE v16[72];

  v9 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v10 = atomic_load((unsigned __int8 *)&qword_254988E10);
  if ((v10 & 1) == 0)
  {
    v14 = a1;
    v15 = __cxa_guard_acquire(&qword_254988E10);
    a1 = v14;
    if (v15)
    {
      __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E08, &dword_20BDBC000);
      __cxa_guard_release(&qword_254988E10);
      a1 = v14;
    }
  }
  if (*(int *)a1 < 2)
    v11 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E08;
  else
    v11 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v9);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v16, PrimIndex, 1);
  return sub_20C46E14C((uint64_t)v9, v11, a2, a3, a4, (uint64_t)v16, a5);
}

pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **sub_20C46E018(uint64_t a1, uint64_t a2, _QWORD *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **result;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v7;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v8;

  *(_BYTE *)a1 = sub_20C4662AC(a2, a3, a4, a5, 0);
  result = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 8);
  if (result)
  {
    v7 = *result;
    *result = 0;
    v8 = 0;
    sub_20BF1D8F4((int)result, v7);
    return sub_20C103234(&v8);
  }
  return result;
}

void sub_20C46E078(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46E08C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, const pxrInternal__aapl__pxrReserved__::TfToken *a5)
{
  uint64_t v10;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v11;
  uint64_t result;
  char HasField;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **v14;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v15;

  v10 = *(_QWORD *)a5;
  v11 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  if (v10)
  {
    result = pxrInternal__aapl__pxrReserved__::SdfLayer::HasFieldDictKey(v11, a3, a4, a5, 0);
    *(_BYTE *)a1 = result;
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v11, a3, a4, 0);
    *(_BYTE *)a1 = HasField;
    if ((HasField & 1) == 0)
      return 0;
  }
  v14 = *(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter ***)(a1 + 8);
  if (!v14)
    return 1;
  v15 = *v14;
  *v14 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*a2;
  sub_20BF1DD04(a2);
  sub_20BF1D8F4((int)v14, v15);
  return *(_BYTE *)a1 != 0;
}

BOOL sub_20C46E14C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, const pxrInternal__aapl__pxrReserved__::TfToken *a4, int a5, uint64_t a6, _BYTE *a7)
{
  char v14;
  BOOL i;
  char v17;
  unint64_t *v18;
  unint64_t PrimDefinition;
  _BOOL8 v20;
  int v22;
  int v23;
  int v24;
  int v25;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  v14 = 0;
  for (i = 1;
        *(_QWORD *)(a6 + 16) != *(_QWORD *)(a6 + 32) || *(_QWORD *)(a6 + 24) != *(_QWORD *)(a6 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a6))
  {
    if (i)
    {
      sub_20C453680(a6, a2, &v22);
      sub_20BFD3EBC(&v24, &v22);
      sub_20BFD3F10(&v25, &v23);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v23);
      sub_20BFD265C(&v22);
    }
    v17 = sub_20C46E08C((uint64_t)a7, *(uint64_t **)(a6 + 48), (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, a3, a4);
    if (*a7)
      goto LABEL_15;
    v14 |= v17;
  }
  if (a5)
  {
    v18 = *(unint64_t **)(a1 + 24);
    PrimDefinition = atomic_load(v18 + 7);
    if (!PrimDefinition)
      PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v18);
    sub_20C46E018((uint64_t)a7, PrimDefinition, a2, a3, a4);
  }
  if ((v14 & 1) != 0)
  {
LABEL_15:
    v20 = 1;
    goto LABEL_17;
  }
  v20 = *a7 != 0;
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  sub_20BFD265C(&v24);
  return v20;
}

void sub_20C46E2B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

void sub_20C46E2DC(uint64_t a1, _DWORD *a2, _DWORD *a3, void **a4, _DWORD *a5, uint64_t a6)
{
  _DWORD *v8;
  _BOOL8 v9;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v10;
  const char *v11;
  char *v12;
  void **v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p[2];
  char v18;
  _DWORD *v19[3];
  _OWORD v20[2];
  std::__shared_weak_count *v21;

  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v8 = v20;
  if (a5)
    v8 = a5;
  v19[0] = a2;
  v19[1] = a3;
  v19[2] = v8;
  if (a4)
  {
    __p[0] = *a4;
    sub_20C46E45C(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v19, (double *)__p, a6);
  }
  else
  {
    sub_20C46E45C(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v19, 0, a6);
  }
  v9 = sub_20C286E00(16);
  if (v9
    && (a3[18] - 3) <= 1
    && pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability((pxrInternal__aapl__pxrReserved__::UsdStage *)v9, (const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2) == 1&& sub_20C286E00(16))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, (pxrInternal__aapl__pxrReserved__ *)a2, v10);
    v13 = v18 >= 0 ? __p : (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Warning: detected time sample value on uniform attribute <%s>\n", v11, v12, v13);
    if (v18 < 0)
      operator delete(__p[0]);
  }
  v14 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_20C46E424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a16 < 0)
    operator delete(__p);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a23);
  _Unwind_Resume(a1);
}

void sub_20C46E45C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, _DWORD **a3, double *a4, uint64_t a5)
{
  unint64_t *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__ *v14;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *v15;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v16;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v17;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v18;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__ *v20;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v22;
  _BYTE v23[72];

  v10 = (unint64_t *)*((_QWORD *)a2 + 1);
  if (!v10)
    goto LABEL_5;
  v11 = v10 + 6;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  v13 = v10[7];
  if ((v13 & 0x800) != 0)
  {
LABEL_5:
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    v13 = v10[7];
  }
  if ((v13 & 0x400) != 0)
  {
    v17 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
    if ((v13 & 0x800) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v17, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 2));
    v20 = *(pxrInternal__aapl__pxrReserved__ **)(*(_QWORD *)a5 + 8);
    if (!v20 || (*((_BYTE *)v20 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v20, v18);
    PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v20);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, PrimIndex, 0);
    v22 = sub_20C398E78(a2);
    sub_20C46E724((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, v22, a3, a4, (uint64_t)ClipsForPrim);
  }
  else
  {
    v14 = *(pxrInternal__aapl__pxrReserved__ **)(*(_QWORD *)a5 + 8);
    if (!v14 || (*((_BYTE *)v14 + 57) & 8) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v14, a2);
    v15 = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v14);
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, v15, 1);
    v16 = sub_20C398E78(a2);
    sub_20C46E9C0((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v23, v16, a3, a4);
  }
  sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v10);
}

void sub_20C46E5A4(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v1;

  sub_20C35C614(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C46E5CC(uint64_t a1, _DWORD *a2, _DWORD **a3, uint64_t a4)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  pxrInternal__aapl__pxrReserved__ *v8;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  BOOL i;
  uint64_t v12;
  uint64_t v13;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v15;
  _QWORD v17[2];
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;
  int v25;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v25);
  v8 = *(pxrInternal__aapl__pxrReserved__ **)(*(_QWORD *)a4 + 8);
  if (!v8 || (*((_BYTE *)v8 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(v8, v7);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, PrimIndex, 1);
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18))
  {
    v12 = v19;
    v13 = v20;
    if (v19 == v21 && v20 == v22)
      break;
    if (i)
    {
      v15 = sub_20C398E78(a2);
      sub_20C453680((uint64_t)v18, v15, (int *)v17);
      sub_20BFD3EBC(&v24, (int *)v17);
      sub_20BFD3F10(&v25, (int *)v17 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v17 + 1);
      sub_20BFD265C(v17);
      v12 = v19;
      v13 = v20;
    }
    v17[0] = v12;
    v17[1] = v13;
    if ((sub_20C46EEF0((uint64_t)a3, v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v24, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v17) & 1) != 0)goto LABEL_14;
  }
  sub_20C46ED38(a3, v10);
LABEL_14:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v25);
  return sub_20BFD265C(&v24);
}

void sub_20C46E700(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

_DWORD *sub_20C46E724(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _DWORD **a3, double *a4, uint64_t a5)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v10;
  void **v11;
  uint64_t *v12;
  char v14;
  BOOL Layer;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v19;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v20;
  uint64_t *v21;
  _QWORD v23[2];
  void **v24;
  uint64_t *v25;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v26;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v27;
  uint64_t v28;
  int v29;
  int v30;
  void ***v31;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v29);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v30);
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v11 = (void **)*((_QWORD *)a1 + 2);
  v12 = (uint64_t *)*((_QWORD *)a1 + 3);
  if (v11 != *((void ***)a1 + 4) || v12 != *((uint64_t **)a1 + 5))
  {
    v14 = 0;
    Layer = 1;
    do
    {
      if (Layer)
      {
        sub_20C453680((uint64_t)a1, a2, (int *)&v24);
        sub_20BFD3EBC(&v29, (int *)&v24);
        sub_20BFD3F10(&v30, (int *)&v24 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v24 + 1);
        sub_20BFD265C(&v24);
        v16 = (uint64_t *)*((_QWORD *)a1 + 3);
        v24 = (void **)*((_QWORD *)a1 + 2);
        v25 = v16;
        if (!pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24))
        {
          v14 = 0;
          goto LABEL_14;
        }
        v11 = (void **)*((_QWORD *)a1 + 2);
        v12 = (uint64_t *)*((_QWORD *)a1 + 3);
      }
      else if ((v14 & 1) == 0)
      {
        goto LABEL_17;
      }
      v17 = (uint64_t *)*((_QWORD *)a1 + 6);
      v24 = v11;
      v25 = v12;
      if ((sub_20C46EAEC((uint64_t)a3, v17, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24, a4) & 1) != 0)goto LABEL_29;
      v14 = 1;
      if (!Layer)
        goto LABEL_18;
LABEL_14:
      v18 = *((_QWORD *)a1 + 3);
      v23[0] = *((_QWORD *)a1 + 2);
      v23[1] = v18;
      sub_20C454A3C((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v23, a5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29, (uint64_t)&v24);
      sub_20C24A6B0((uint64_t)&v26, (uint64_t *)v24, v25, ((char *)v25 - (char *)v24) >> 4);
      v31 = &v24;
      sub_20BDE9EB0((void ***)&v31);
      if ((v14 & 1) != 0)
      {
        v14 = 1;
        goto LABEL_18;
      }
      if (v26 != v27)
      {
LABEL_17:
        v14 = 0;
LABEL_18:
        v19 = v26;
        v20 = v27;
        while (v19 != v20)
        {
          if (sub_20C1020E4((_QWORD *)*v19 + 6, *((_QWORD **)a1 + 6)))
          {
            v21 = (uint64_t *)*((_QWORD *)a1 + 3);
            v24 = (void **)*((_QWORD *)a1 + 2);
            v25 = v21;
            if ((sub_20C454B00((uint64_t)a3, v19, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v29, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v24, a4) & 1) != 0)goto LABEL_29;
          }
          v19 += 2;
        }
        Layer = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1);
        goto LABEL_24;
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextNode(a1);
      v14 = 0;
      Layer = 1;
LABEL_24:
      v12 = (uint64_t *)*((_QWORD *)a1 + 3);
      v11 = (void **)*((_QWORD *)a1 + 2);
    }
    while (v11 != *((void ***)a1 + 4) || v12 != *((uint64_t **)a1 + 5));
  }
  sub_20C46ED38(a3, v10);
LABEL_29:
  v24 = (void **)&v26;
  sub_20BDE9EB0(&v24);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v30);
  return sub_20BFD265C(&v29);
}

void sub_20C46E960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  void **v4;
  va_list va;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;
  uint64_t v10;
  uint64_t v11;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v8 = va_arg(va2, _QWORD);
  v10 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  va_copy((va_list)v4, va1);
  sub_20BDE9EB0((void ***)va);
  sub_20BFD1A18(va2);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C46E9C0(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, _DWORD **a3, double *a4)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  BOOL i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v13;
  _QWORD v15[2];
  int v16;
  int v17;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v16);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v17);
  for (i = 1; ; i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1))
  {
    v10 = *((_QWORD *)a1 + 2);
    v11 = *((_QWORD *)a1 + 3);
    if (v10 == *((_QWORD *)a1 + 4) && v11 == *((_QWORD *)a1 + 5))
      break;
    if (i)
    {
      sub_20C453680((uint64_t)a1, a2, (int *)v15);
      sub_20BFD3EBC(&v16, (int *)v15);
      sub_20BFD3F10(&v17, (int *)v15 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v15 + 1);
      sub_20BFD265C(v15);
      v10 = *((_QWORD *)a1 + 2);
      v11 = *((_QWORD *)a1 + 3);
    }
    v13 = (uint64_t *)*((_QWORD *)a1 + 6);
    v15[0] = v10;
    v15[1] = v11;
    if ((sub_20C46EAEC((uint64_t)a3, v13, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v16, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v15, a4) & 1) != 0)goto LABEL_11;
  }
  sub_20C46ED38(a3, v8);
LABEL_11:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v17);
  return sub_20BFD265C(&v16);
}

void sub_20C46EAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46EAEC(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4, double *a5)
{
  uint64_t v10;
  uint64_t v11;
  double *v12;
  int v13;
  int v14;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v15;
  uint64_t *LayerStack;
  uint64_t v18;
  unsigned int *v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int *v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int *v33;
  unsigned int v34;
  unsigned int v35;
  _DWORD *Path;
  uint64_t v37;
  __int128 v38;
  double v39;
  char v40;
  __int128 v41;

  *(_QWORD *)&v41 = sub_20C44B9D4(a4, a2);
  *((_QWORD *)&v41 + 1) = v10;
  LOBYTE(v39) = 0;
  v40 = 0;
  if (a5)
  {
    *(_QWORD *)&v38 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)&v41);
    *((_QWORD *)&v38 + 1) = v11;
    v39 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*((double *)&v38, *a5);
    v40 = 1;
    v12 = &v39;
  }
  else
  {
    v12 = 0;
  }
  if ((sub_20C454CB0(a2, a3, v12, *(double **)(a1 + 16), (double *)(*(_QWORD *)(a1 + 16) + 8)) & 1) != 0)
  {
    v13 = 3;
LABEL_10:
    *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72) = v13;
    goto LABEL_11;
  }
  v14 = sub_20C46EDB0(a2, a3, *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16));
  if (v14 == 1)
  {
    v13 = 2;
    goto LABEL_10;
  }
  if (v14 == 2)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 8) + 76) = 1;
    return sub_20C46ED38((_DWORD **)a1, v15);
  }
  if (!*(_DWORD *)(*(_QWORD *)(a1 + 8) + 72))
    return 0;
LABEL_11:
  LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
  sub_20C2033F4((uint64_t *)&v38, LayerStack);
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(unsigned int **)(v18 + 8);
  *(_OWORD *)v18 = v38;
  *((_QWORD *)&v38 + 1) = 0;
  if (v19)
  {
    v20 = v19 + 2;
    do
    {
      v21 = __ldxr(v20);
      v22 = v21 - 1;
    }
    while (__stlxr(v22, v20));
    if (!v22)
      (*(void (**)(unsigned int *))(*(_QWORD *)v19 + 8))(v19);
    v23 = *((_QWORD *)&v38 + 1);
    *(_QWORD *)&v38 = 0;
    if (*((_QWORD *)&v38 + 1))
    {
      v24 = (unsigned int *)(*((_QWORD *)&v38 + 1) + 8);
      do
      {
        v25 = __ldxr(v24);
        v26 = v25 - 1;
      }
      while (__stlxr(v26, v24));
      if (!v26)
        (*(void (**)(uint64_t))(*(_QWORD *)v23 + 8))(v23);
    }
  }
  sub_20C1034E8((uint64_t *)&v38, a2);
  v27 = *(_QWORD *)(a1 + 8);
  v28 = *(unsigned int **)(v27 + 24);
  *(_OWORD *)(v27 + 16) = v38;
  *((_QWORD *)&v38 + 1) = 0;
  if (v28)
  {
    v29 = v28 + 2;
    do
    {
      v30 = __ldxr(v29);
      v31 = v30 - 1;
    }
    while (__stlxr(v31, v29));
    if (!v31)
      (*(void (**)(unsigned int *))(*(_QWORD *)v28 + 8))(v28);
    v32 = *((_QWORD *)&v38 + 1);
    *(_QWORD *)&v38 = 0;
    if (*((_QWORD *)&v38 + 1))
    {
      v33 = (unsigned int *)(*((_QWORD *)&v38 + 1) + 8);
      do
      {
        v34 = __ldxr(v33);
        v35 = v34 - 1;
      }
      while (__stlxr(v35, v33));
      if (!v35)
        (*(void (**)(uint64_t))(*(_QWORD *)v32 + 8))(v32);
    }
  }
  Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
  v37 = *(_QWORD *)(a1 + 8);
  sub_20C01A074((int *)(v37 + 64), Path);
  sub_20C01A0C8((int *)(v37 + 68), Path + 1);
  *(_OWORD *)(*(_QWORD *)(a1 + 8) + 48) = v41;
  *(_OWORD *)(*(_QWORD *)(a1 + 8) + 32) = *(_OWORD *)a4;
  return 1;
}

uint64_t sub_20C46ED38(_DWORD **a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v6;

  v3 = *((_QWORD *)*a1 + 1);
  if (!v3 || (*(_BYTE *)(v3 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*((pxrInternal__aapl__pxrReserved__ **)*a1 + 1), a2);
  v4 = *(unint64_t **)(v3 + 24);
  PrimDefinition = atomic_load(v4 + 7);
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v4);
  v6 = sub_20C398E78(*a1);
  a1[1][18] = sub_20C46EE94(PrimDefinition, v6, *((uint64_t (****)(_QWORD, uint64_t))a1[2] + 2));
  return 1;
}

uint64_t sub_20C46EDB0(uint64_t *a1, pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3)
{
  _QWORD *v5;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v6;
  uint64_t result;
  BOOL v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = (_QWORD *)sub_20C0EEAF8(a1);
  v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!a3)
  {
    if (!v6)
      v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v9 = (char *)v6 + 88;
    v10 = sub_20C0A683C(v5 + 14);
    v11 = (*(uint64_t (**)(uint64_t, pxrInternal__aapl__pxrReserved__::SdfPath *, char *))(*(_QWORD *)v10
                                                                                                  + 144))(v10, a2, v9);
    if (sub_20BDE150C(v11, MEMORY[0x24BEDB7C8]))
      return 0;
    v8 = !sub_20BDE150C(v11, (uint64_t)&stru_24C527B78);
    goto LABEL_11;
  }
  if (!v6)
    v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  result = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v5, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 88), (uint64_t (***)(_QWORD, uint64_t))a3);
  if ((_DWORD)result)
  {
    v8 = *(_BYTE *)(a3 + 24) == 0;
LABEL_11:
    if (v8)
      return 1;
    else
      return 2;
  }
  return result;
}

_QWORD *sub_20C46EE94(uint64_t a1, _QWORD *a2, uint64_t (***a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v6;

  v6 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!v6)
    v6 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  return sub_20C45A234(a1, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v6 + 88), a3);
}

uint64_t sub_20C46EEF0(uint64_t a1, uint64_t *a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4)
{
  int v7;
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  uint64_t *LayerStack;
  uint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unsigned int v27;
  _DWORD *Path;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;

  v7 = sub_20C46EDB0(a2, a3, *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16));
  if (v7 == 2)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 8) + 76) = 1;
    return sub_20C46ED38((_DWORD **)a1, v8);
  }
  else if (v7 == 1)
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 8) + 72) = 2;
    LayerStack = (uint64_t *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetLayerStack(a4);
    sub_20C2033F4((uint64_t *)&v34, LayerStack);
    v10 = *(_QWORD *)(a1 + 8);
    v11 = *(unsigned int **)(v10 + 8);
    *(_OWORD *)v10 = v34;
    *((_QWORD *)&v34 + 1) = 0;
    if (v11)
    {
      v12 = v11 + 2;
      do
      {
        v13 = __ldxr(v12);
        v14 = v13 - 1;
      }
      while (__stlxr(v14, v12));
      if (!v14)
        (*(void (**)(unsigned int *))(*(_QWORD *)v11 + 8))(v11);
      v15 = *((_QWORD *)&v34 + 1);
      *(_QWORD *)&v34 = 0;
      if (*((_QWORD *)&v34 + 1))
      {
        v16 = (unsigned int *)(*((_QWORD *)&v34 + 1) + 8);
        do
        {
          v17 = __ldxr(v16);
          v18 = v17 - 1;
        }
        while (__stlxr(v18, v16));
        if (!v18)
          (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
      }
    }
    sub_20C1034E8((uint64_t *)&v34, a2);
    v19 = *(_QWORD *)(a1 + 8);
    v20 = *(unsigned int **)(v19 + 24);
    *(_OWORD *)(v19 + 16) = v34;
    *((_QWORD *)&v34 + 1) = 0;
    if (v20)
    {
      v21 = v20 + 2;
      do
      {
        v22 = __ldxr(v21);
        v23 = v22 - 1;
      }
      while (__stlxr(v23, v21));
      if (!v23)
        (*(void (**)(unsigned int *))(*(_QWORD *)v20 + 8))(v20);
      v24 = *((_QWORD *)&v34 + 1);
      *(_QWORD *)&v34 = 0;
      if (*((_QWORD *)&v34 + 1))
      {
        v25 = (unsigned int *)(*((_QWORD *)&v34 + 1) + 8);
        do
        {
          v26 = __ldxr(v25);
          v27 = v26 - 1;
        }
        while (__stlxr(v27, v25));
        if (!v27)
          (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
      }
    }
    Path = (_DWORD *)pxrInternal__aapl__pxrReserved__::PcpNodeRef::GetPath(a4);
    v29 = *(_QWORD *)(a1 + 8);
    sub_20C01A074((int *)(v29 + 64), Path);
    sub_20C01A0C8((int *)(v29 + 68), Path + 1);
    v30 = sub_20C44B9D4(a4, a2);
    v31 = *(_QWORD *)(a1 + 8);
    *(double *)(v31 + 48) = v30;
    *(_QWORD *)(v31 + 56) = v32;
    *(_OWORD *)(v31 + 32) = *(_OWORD *)a4;
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_20C46F0D8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  char *v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  __int128 v15;
  unsigned int *v16;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  pxrInternal__aapl__pxrReserved__::SdfLayer::GetPropertyAtPath((uint64_t *)&v16, v8, a3);
  if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v16) & 1) == 0)
  {
    if (*(_BYTE *)(a1 + 48))
    {
      *(_QWORD *)&v15 = sub_20C44B9D4(a4, a2);
      *((_QWORD *)&v15 + 1) = v10;
      sub_20C46F1C0((uint64_t *)(a1 + 24), &v16, &v15);
    }
    else
    {
      v9 = *(char **)(a1 + 8);
      if ((unint64_t)v9 >= *(_QWORD *)(a1 + 16))
      {
        v13 = sub_20C0D7E80((unsigned int ***)a1, &v16);
      }
      else
      {
        v11 = v16;
        *(_QWORD *)v9 = v16;
        if (v11)
        {
          do
            v12 = __ldaxr(v11);
          while (__stlxr(v12 + 1, v11));
        }
        v13 = v9 + 8;
      }
      *(_QWORD *)(a1 + 8) = v13;
    }
  }
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v9, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v16);
  return 0;
}

void sub_20C46F1A8(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46F1C0(uint64_t *a1, unsigned int **a2, _OWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int *v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unsigned int **v18;
  unsigned int *v19;
  unsigned int v20;
  _QWORD v22[2];
  unsigned int **v23;
  char *v24;
  uint64_t v25;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(_QWORD *)(v6 - 8);
  if (v9 >= v8)
  {
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *a1) >> 3);
    v14 = v13 + 1;
    if (v13 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_20BDDF694();
    v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 3);
    if (2 * v15 > v14)
      v14 = 2 * v15;
    if (v15 >= 0x555555555555555)
      v16 = 0xAAAAAAAAAAAAAAALL;
    else
      v16 = v14;
    v25 = v6;
    if (v16)
      v17 = (char *)sub_20BDE4FF4(v6, v16);
    else
      v17 = 0;
    v18 = (unsigned int **)&v17[24 * v13];
    v22[0] = v17;
    v22[1] = v18;
    v23 = v18;
    v24 = &v17[24 * v16];
    v19 = *a2;
    *v18 = *a2;
    if (v19)
    {
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20 + 1, v19));
      v18 = v23;
    }
    *(_OWORD *)&v17[24 * v13 + 8] = *a3;
    v23 = v18 + 3;
    sub_20C2706EC(a1, v22);
    v12 = a1[1];
    sub_20C27077C((uint64_t)v22);
  }
  else
  {
    v10 = *a2;
    *(_QWORD *)v9 = *a2;
    if (v10)
    {
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 + 1, v10));
    }
    *(_OWORD *)(v9 + 8) = *a3;
    v12 = v9 + 24;
    a1[1] = v9 + 24;
  }
  a1[1] = v12;
  return v12 - 24;
}

void sub_20C46F310(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C27077C((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C46F324(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3, double *a4, uint64_t a5)
{
  void **v10;
  uint64_t *v11;
  char v13;
  BOOL Layer;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v18;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v19;
  uint64_t *v20;
  _QWORD v22[2];
  void **v23;
  uint64_t *v24;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v25;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v26;
  uint64_t v27;
  int v28;
  int v29;
  void ***v30;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v28);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v29);
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v10 = (void **)*((_QWORD *)a1 + 2);
  v11 = (uint64_t *)*((_QWORD *)a1 + 3);
  if (v10 != *((void ***)a1 + 4) || v11 != *((uint64_t **)a1 + 5))
  {
    v13 = 0;
    Layer = 1;
    do
    {
      if (Layer)
      {
        sub_20C453680((uint64_t)a1, a2, (int *)&v23);
        sub_20BFD3EBC(&v28, (int *)&v23);
        sub_20BFD3F10(&v29, (int *)&v23 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v23 + 1);
        sub_20BFD265C(&v23);
        v15 = (uint64_t *)*((_QWORD *)a1 + 3);
        v23 = (void **)*((_QWORD *)a1 + 2);
        v24 = v15;
        if (!pxrInternal__aapl__pxrReserved__::PcpNodeRef::HasSpecs((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v23))
        {
          v13 = 0;
          goto LABEL_14;
        }
        v10 = (void **)*((_QWORD *)a1 + 2);
        v11 = (uint64_t *)*((_QWORD *)a1 + 3);
      }
      else if ((v13 & 1) == 0)
      {
        goto LABEL_17;
      }
      v16 = (uint64_t *)*((_QWORD *)a1 + 6);
      v23 = v10;
      v24 = v11;
      if ((sub_20C46F0D8(a3, v16, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v23) & 1) != 0)break;
      v13 = 1;
      if (!Layer)
        goto LABEL_18;
LABEL_14:
      v17 = *((_QWORD *)a1 + 3);
      v22[0] = *((_QWORD *)a1 + 2);
      v22[1] = v17;
      sub_20C454A3C((pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v22, a5, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28, (uint64_t)&v23);
      sub_20C24A6B0((uint64_t)&v25, (uint64_t *)v23, v24, ((char *)v24 - (char *)v23) >> 4);
      v30 = &v23;
      sub_20BDE9EB0((void ***)&v30);
      if ((v13 & 1) != 0)
      {
        v13 = 1;
        goto LABEL_18;
      }
      if (v25 != v26)
      {
LABEL_17:
        v13 = 0;
LABEL_18:
        v18 = v25;
        v19 = v26;
        while (v18 != v19)
        {
          if (sub_20C1020E4((_QWORD *)*v18 + 6, *((_QWORD **)a1 + 6)))
          {
            v20 = (uint64_t *)*((_QWORD *)a1 + 3);
            v23 = (void **)*((_QWORD *)a1 + 2);
            v24 = v20;
            if ((sub_20C46F6C8(a3, v18, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v28, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)&v23, a4) & 1) != 0)goto LABEL_28;
          }
          v18 += 2;
        }
        Layer = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1);
        goto LABEL_24;
      }
      pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextNode(a1);
      v13 = 0;
      Layer = 1;
LABEL_24:
      v11 = (uint64_t *)*((_QWORD *)a1 + 3);
      v10 = (void **)*((_QWORD *)a1 + 2);
    }
    while (v10 != *((void ***)a1 + 4) || v11 != *((uint64_t **)a1 + 5));
  }
LABEL_28:
  v23 = (void **)&v25;
  sub_20BDE9EB0(&v23);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v29);
  return sub_20BFD265C(&v28);
}

void sub_20C46F558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, int a17, void ***a18)
{
  a18 = &a11;
  sub_20BDE9EB0((void ***)&a18);
  a11 = (void **)&a14;
  sub_20BDE9EB0(&a11);
  sub_20BFD1A18(&a17);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C46F5B0(pxrInternal__aapl__pxrReserved__::Usd_Resolver *a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t a3)
{
  BOOL i;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v10;
  _QWORD v12[2];
  int v13;
  int v14;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v13);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v14);
  for (i = 1; ; i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer(a1))
  {
    v7 = *((_QWORD *)a1 + 2);
    v8 = *((_QWORD *)a1 + 3);
    if (v7 == *((_QWORD *)a1 + 4) && v8 == *((_QWORD *)a1 + 5))
      break;
    if (i)
    {
      sub_20C453680((uint64_t)a1, a2, (int *)v12);
      sub_20BFD3EBC(&v13, (int *)v12);
      sub_20BFD3F10(&v14, (int *)v12 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v12 + 1);
      sub_20BFD265C(v12);
      v7 = *((_QWORD *)a1 + 2);
      v8 = *((_QWORD *)a1 + 3);
    }
    v10 = (uint64_t *)*((_QWORD *)a1 + 6);
    v12[0] = v7;
    v12[1] = v8;
    if ((sub_20C46F0D8(a3, v10, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v13, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v12) & 1) != 0)break;
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v14);
  return sub_20BFD265C(&v13);
}

void sub_20C46F6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C46F6C8(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, pxrInternal__aapl__pxrReserved__::PcpNodeRef *a4, double *a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v10;
  pxrInternal__aapl__pxrReserved__::Usd_Clip **v11;
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v12;
  char *v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  char *v17;
  unsigned int *v19;
  __int128 v20;
  uint64_t v21;
  const char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v24 = 0;
  v25 = 0;
  if (sub_20C44CC38(a2, a3, a5, (double *)&v25, (double *)&v24))
  {
    v10 = *a2;
    v11 = (pxrInternal__aapl__pxrReserved__::Usd_Clip **)(*((_QWORD *)v10 + 11)
                                                        + 16
                                                        * pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, *a5));
    if (!pxrInternal__aapl__pxrReserved__::Usd_Clip::HasAuthoredTimeSamples(*v11, a3))
      v11 = (pxrInternal__aapl__pxrReserved__::Usd_Clip **)((char *)*a2 + 72);
    v12 = *v11;
    if (!*v11)
    {
      *(_QWORD *)&v20 = "usd/stage.cpp";
      *((_QWORD *)&v20 + 1) = "ProcessClips";
      v21 = 8344;
      v22 = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_PropertyStackResolver::ProcessClips(const Usd_ClipSetRefPt"
            "r &, const SdfPath &, const PcpNodeRef &, const double *)";
      v23 = 0;
      if (!pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&v20, "sourceClip", 0))
        return 0;
      v12 = *v11;
    }
    pxrInternal__aapl__pxrReserved__::Usd_Clip::GetPropertyAtPath(v12, a3, (uint64_t *)&v19);
    if ((pxrInternal__aapl__pxrReserved__::SdfSpec::IsDormant((pxrInternal__aapl__pxrReserved__::Sdf_Identity **)&v19) & 1) == 0)
    {
      if (*(_BYTE *)(a1 + 48))
      {
        *(_QWORD *)&v20 = sub_20C291030(a4, (_QWORD *)*a2 + 6);
        *((_QWORD *)&v20 + 1) = v14;
        sub_20C46F1C0((uint64_t *)(a1 + 24), &v19, &v20);
      }
      else
      {
        v13 = *(char **)(a1 + 8);
        if ((unint64_t)v13 >= *(_QWORD *)(a1 + 16))
        {
          v17 = sub_20C0D7E80((unsigned int ***)a1, &v19);
        }
        else
        {
          v15 = v19;
          *(_QWORD *)v13 = v19;
          if (v15)
          {
            do
              v16 = __ldaxr(v15);
            while (__stlxr(v16 + 1, v15));
          }
          v17 = v13 + 8;
        }
        *(_QWORD *)(a1 + 8) = v17;
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(v13, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&v19);
  }
  return 0;
}

void sub_20C46F844(_Unwind_Exception *a1@<X0>, void *a2@<X8>, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::SdfSpec::~SdfSpec(a2, (pxrInternal__aapl__pxrReserved__::SdfSpec *)&a3);
  _Unwind_Resume(a1);
}

char *sub_20C46F85C(char *result, unsigned int **a2, unsigned int **a3, unint64_t a4)
{
  char *v6;
  unsigned int **v7;
  unsigned int *v8;
  unsigned int v9;

  if (a4)
  {
    v6 = result;
    result = sub_20BDDF654(result, a4);
    v7 = (unsigned int **)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *a2;
      *v7 = *a2;
      if (v8)
      {
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 + 1, v8));
      }
      ++a2;
      ++v7;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_20C46F8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20BFE69E4(&a9);
  _Unwind_Resume(a1);
}

char *sub_20C46F8F0(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char *v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned int v9;

  if (a4)
  {
    v6 = result;
    result = sub_20BDE4FA4(result, a4);
    v7 = *((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *(unsigned int **)a2;
      *(_QWORD *)v7 = *(_QWORD *)a2;
      if (v8)
      {
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 + 1, v8));
      }
      *(_OWORD *)(v7 + 8) = *(_OWORD *)(a2 + 8);
      a2 += 24;
      v7 += 24;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_20C46F978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  sub_20C21DAE8(&a9);
  _Unwind_Resume(a1);
}

void sub_20C46F98C(uint64_t a1, _DWORD *a2, _DWORD *a3, void **a4, _DWORD *a5, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget **a6)
{
  _DWORD *v8;
  _BOOL8 v9;
  const pxrInternal__aapl__pxrReserved__::UsdObject *v10;
  const char *v11;
  char *v12;
  void **v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p[2];
  char v18;
  _DWORD *v19[3];
  _OWORD v20[2];
  std::__shared_weak_count *v21;

  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v8 = v20;
  if (a5)
    v8 = a5;
  v19[0] = a2;
  v19[1] = a3;
  v19[2] = v8;
  if (a4)
  {
    __p[0] = *a4;
    sub_20C46FB0C(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v19, (double *)__p, a6);
  }
  else
  {
    sub_20C46FB0C(a1, (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2, v19, 0, a6);
  }
  v9 = sub_20C286E00(16);
  if (v9
    && (a3[18] - 3) <= 1
    && pxrInternal__aapl__pxrReserved__::UsdStage::_GetVariability((pxrInternal__aapl__pxrReserved__::UsdStage *)v9, (const pxrInternal__aapl__pxrReserved__::UsdProperty *)a2) == 1&& sub_20C286E00(16))
  {
    pxrInternal__aapl__pxrReserved__::UsdDescribe((uint64_t *)__p, (pxrInternal__aapl__pxrReserved__ *)a2, v10);
    v13 = v18 >= 0 ? __p : (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"Warning: detected time sample value on uniform attribute <%s>\n", v11, v12, v13);
    if (v18 < 0)
      operator delete(__p[0]);
  }
  v14 = v21;
  if (v21)
  {
    p_shared_owners = (unint64_t *)&v21->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_20C46FAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a16 < 0)
    operator delete(__p);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)&a23);
  _Unwind_Resume(a1);
}

void sub_20C46FB0C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::Usd_PrimData *a2, _DWORD **a3, double *a4, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget **a5)
{
  unint64_t *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v15;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v17;
  _BYTE v18[72];

  v10 = (unint64_t *)*((_QWORD *)a2 + 1);
  if (!v10)
    goto LABEL_5;
  v11 = v10 + 6;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
  v13 = v10[7];
  if ((v13 & 0x800) != 0)
  {
LABEL_5:
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    v13 = v10[7];
  }
  if ((v13 & 0x400) != 0)
  {
    v15 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
    if ((v13 & 0x800) != 0)
      pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError((pxrInternal__aapl__pxrReserved__ *)v10, a2);
    ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v15, (const pxrInternal__aapl__pxrReserved__::SdfPath *)(v10 + 2));
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, *a5, 0);
    v17 = sub_20C398E78(a2);
    sub_20C46E724((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, v17, a3, a4, (uint64_t)ClipsForPrim);
  }
  else
  {
    pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, *a5, 1);
    v14 = sub_20C398E78(a2);
    sub_20C46E9C0((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v18, v14, a3, a4);
  }
  sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v10);
}

void sub_20C46FC0C(_Unwind_Exception *a1)
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v1;

  sub_20C35C614(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_20C46FC34(uint64_t a1, _DWORD *a2, _DWORD **a3, const pxrInternal__aapl__pxrReserved__::UsdResolveTarget **a4)
{
  const pxrInternal__aapl__pxrReserved__::Usd_PrimData *v7;
  BOOL i;
  uint64_t v9;
  uint64_t v10;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v12;
  _QWORD v14[2];
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  int v22;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v21);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v22);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15, *a4, 1);
  for (i = 1;
        ;
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v15))
  {
    v9 = v16;
    v10 = v17;
    if (v16 == v18 && v17 == v19)
      break;
    if (i)
    {
      v12 = sub_20C398E78(a2);
      sub_20C453680((uint64_t)v15, v12, (int *)v14);
      sub_20BFD3EBC(&v21, (int *)v14);
      sub_20BFD3F10(&v22, (int *)v14 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v14 + 1);
      sub_20BFD265C(v14);
      v9 = v16;
      v10 = v17;
    }
    v14[0] = v9;
    v14[1] = v10;
    if ((sub_20C46EEF0((uint64_t)a3, v20, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v21, (pxrInternal__aapl__pxrReserved__::PcpNodeRef *)v14) & 1) != 0)goto LABEL_11;
  }
  sub_20C46ED38(a3, v7);
LABEL_11:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v22);
  return sub_20BFD265C(&v21);
}

void sub_20C46FD44(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_20C46FD68(uint64_t *a1)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = a1[1];
  v2 = a1 + 1;
  if (!v3)
    return 0;
  if (*(_BYTE *)(sub_20BEB47BC(v2) + 14))
    return *a1;
  return 0;
}

BOOL sub_20C46FDA8(uint64_t a1, char *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *__p[2];
  char v9;

  sub_20BDDC0E4(__p, a2);
  v5 = sub_20BDEEBA4(a1, (const void **)__p);
  if (v9 < 0)
    operator delete(__p[0]);
  v6 = a1 + 8;
  if (v6 != v5)
    sub_20BDE881C(a3, (uint64_t *)(v5 + 56));
  return v6 != v5;
}

void sub_20C46FE20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20C46FE3C(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB770];
  v6 = 0;
  v5[0] = &unk_24C52B6E8;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C539E28;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C46FEA4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E20);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E20))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E18, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E20);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E18;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C464098((uint64_t)v8, v10, a2, a3, 1, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C4717A0((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C471E04((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C471358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C4717A0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C471CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C471E04(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C47234C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C472468(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C274F18(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C4724A8(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<BOOL>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C472534((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C472534(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C4725F8(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C4725F8(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C444DF0(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C472698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4726C0(uint64_t a1, _DWORD *a2, uint64_t (***a3)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a4, double a5)
{
  uint64_t IsCleanImpl;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  unint64_t *Instance;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  std::__shared_weak_count *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  double v36;
  _DWORD *v37;

  v36 = a5;
  sub_20C361C1C((uint64_t)&v30);
  v27 = 0u;
  v29 = 0;
  v28 = (unint64_t)a4;
  pxrInternal__aapl__pxrReserved__::TfErrorMark::TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v26);
  v37 = a2;
  sub_20C46E2DC(a1, a2, &v30, (void **)&v36, &v27, (uint64_t)&v37);
  if (v35 == 4)
  {
    IsCleanImpl = sub_20C472B74(a2, (uint64_t)&v30, (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)&v28 + 1, (double *)&v27, (double *)&v27 + 1, a3, a4, v36);
  }
  else if (v35 == 3)
  {
    IsCleanImpl = sub_20C4728E4(a2, &v30, (double *)&v27, (double *)&v27 + 1, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))a3, a4, v36);
  }
  else
  {
    if ((v35 - 1) > 1)
    {
      v10 = 0;
      goto LABEL_6;
    }
    Instance = (unint64_t *)atomic_load(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    if (!Instance)
      Instance = (unint64_t *)pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_CreateInstance(&pxrInternal__aapl__pxrReserved__::TfSingleton<pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr>::_instance);
    v24 = v26;
    v25 = atomic_load(Instance + 18);
    if (v24 >= v25)
    {
      v10 = 1;
      goto LABEL_6;
    }
    IsCleanImpl = pxrInternal__aapl__pxrReserved__::TfErrorMark::_IsCleanImpl((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v26, (pxrInternal__aapl__pxrReserved__::TfDiagnosticMgr *)Instance);
  }
  v10 = IsCleanImpl;
LABEL_6:
  pxrInternal__aapl__pxrReserved__::TfErrorMark::~TfErrorMark((pxrInternal__aapl__pxrReserved__::TfErrorMark *)&v26);
  v11 = v29;
  if (v29)
  {
    p_shared_owners = (unint64_t *)&v29->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v34);
  sub_20BFD265C(&v33);
  v14 = v32;
  if (v32)
  {
    v15 = (unsigned int *)(v32 + 8);
    do
    {
      v16 = __ldxr(v15);
      v17 = v16 - 1;
    }
    while (__stlxr(v17, v15));
    if (!v17)
      (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  }
  v18 = v31;
  if (v31)
  {
    v19 = (unsigned int *)(v31 + 8);
    do
    {
      v20 = __ldxr(v19);
      v21 = v20 - 1;
    }
    while (__stlxr(v21, v19));
    if (!v21)
      (*(void (**)(uint64_t))(*(_QWORD *)v18 + 8))(v18);
  }
  return v10;
}

void sub_20C4728B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  va_list va1;

  va_start(va1, a6);
  va_start(va, a6);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource::~PcpExpressionVariablesSource((pxrInternal__aapl__pxrReserved__::PcpExpressionVariablesSource *)va);
  sub_20C35FEE4((uint64_t)va1);
  _Unwind_Resume(a1);
}

BOOL sub_20C4728E4(_DWORD *a1, uint64_t *a2, double *a3, double *a4, uint64_t (***a5)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a6, double a7)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v13;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v14;
  const char *v15;
  double v16;
  uint64_t *v17;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v18;
  const char *v19;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v20;
  unint64_t v21;
  const char *v22;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v23;
  uint64_t v24;
  const char *v25;
  char *v26;
  uint64_t v27;
  _BOOL8 v28;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v30;
  uint64_t Identifier;
  int v32;
  uint64_t v33;
  const char *Text;
  const char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  double Inverse;
  const char *v40;
  uint64_t v41;
  const char *v42;
  char v43;
  double v44;
  double v45;
  int v46;
  int v47;
  double v48;

  v48 = a7;
  v13 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8);
  v14 = sub_20C398E78(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v13, v14, &v46);
  Inverse = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::GetInverse((pxrInternal__aapl__pxrReserved__::SdfLayerOffset *)(a2 + 6));
  v40 = v15;
  v16 = pxrInternal__aapl__pxrReserved__::SdfLayerOffset::operator*(&Inverse, a7);
  v17 = a2 + 2;
  v45 = 0.0;
  v44 = 0.0;
  if (a3 && a4)
  {
    v44 = *a3;
    v45 = *a4;
  }
  else
  {
    v18 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
    if ((pxrInternal__aapl__pxrReserved__::SdfLayer::GetBracketingTimeSamplesForPath(v18, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46, v16, &v44, &v45) & 1) == 0)
    {
      Inverse = COERCE_DOUBLE("usd/stage.cpp");
      v40 = "_GetTimeSampleValue";
      v41 = 8116;
      v42 = "static BOOL pxrInternal__aapl__pxrReserved__::UsdStage_ResolveInfoAccess::_GetTimeSampleValue(UsdTimeCode, c"
            "onst UsdAttribute &, const UsdResolveInfo &, const double *, const double *, Usd_InterpolatorBase *, T *) [T"
            " = pxrInternal__aapl__pxrReserved__::SdfAbstractDataValue]";
      v43 = 0;
      v30 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
      Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v30);
      v32 = *(char *)(Identifier + 23);
      v33 = *(_QWORD *)Identifier;
      Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
      v37 = v32 >= 0 ? Identifier : v33;
      v38 = pxrInternal__aapl__pxrReserved__::Tf_VerifyStringFormat((pxrInternal__aapl__pxrReserved__ *)"No bracketing time samples for %s on <%s> for time %g between %g and %g", v35, v36, v37, Text, *(_QWORD *)&v16, *(_QWORD *)&v44, *(_QWORD *)&v45);
      if ((pxrInternal__aapl__pxrReserved__::Tf_FailedVerifyHelper((uint64_t)&Inverse, "layer->GetBracketingTimeSamplesForPath( specPath, localTime, &lower, &upper)", v38) & 1) == 0)
      {
        v28 = 0;
        goto LABEL_17;
      }
    }
  }
  if (sub_20C286E00(15))
  {
    v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v46);
    v20 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v20)
      v20 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v21 = *((_QWORD *)v20 + 54) & 0xFFFFFFFFFFFFFFF8;
    if (v21)
    {
      v22 = (const char *)(v21 + 16);
      if (*(char *)(v21 + 39) < 0)
        v22 = *(const char **)v22;
    }
    else
    {
      v22 = "";
    }
    v23 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
    v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v23);
    if (*(char *)(v24 + 23) >= 0)
      v27 = v24;
    else
      v27 = *(_QWORD *)v24;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@, with requested time = %.3f (local time = %.3f) reading from sample %.3f \n", v25, v26, v19, v22, v27, *(_QWORD *)&v48, *(_QWORD *)&v16, *(_QWORD *)&v44);
  }
  v28 = sub_20C472DA4((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)v17, (uint64_t)&v46, a5, a6, v16, v44, v45);
LABEL_17:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  sub_20BFD265C(&v46);
  return v28;
}

void sub_20C472B50(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20BFD1A18((_DWORD *)(v1 - 80));
  _Unwind_Resume(a1);
}

uint64_t sub_20C472B74(_DWORD *a1, uint64_t a2, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a3, double *a4, double *a5, uint64_t (***a6)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a7, double a8)
{
  pxrInternal__aapl__pxrReserved__::SdfPath *v14;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v15;
  double v16;
  const char *v17;
  char *v18;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v20;
  unint64_t v21;
  const char *v22;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v23;
  double v24;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v25;
  uint64_t ClipIndexForTime;
  uint64_t v27;
  double v29;
  double v30;
  double v31;
  int v32;
  int v33;
  double v34;

  v34 = a8;
  v14 = (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 64);
  v15 = sub_20C398E78(a1);
  pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty(v14, v15, &v32);
  v31 = a8;
  v29 = 0.0;
  v30 = 0.0;
  if (a4 && a5)
  {
    v16 = *a5;
    v29 = *a4;
    v30 = v16;
  }
  else
  {
    sub_20C44CC38(a3, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, &v31, &v29, &v30);
  }
  if (sub_20C286E00(15))
  {
    Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v32);
    v20 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    if (!v20)
      v20 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v21 = *((_QWORD *)v20 + 54) & 0xFFFFFFFFFFFFFFF8;
    if (v21)
    {
      v22 = (const char *)(v21 + 16);
      if (*(char *)(v21 + 39) < 0)
        v22 = *(const char **)v22;
    }
    else
    {
      v22 = "";
    }
    v23 = *a3;
    if (*((char *)*a3 + 23) < 0)
      v23 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)v23;
    pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from clip set %s, with requested time = %.3f reading from sample %.3f \n", v17, v18, Text, v22, v23, *(_QWORD *)&v31, *(_QWORD *)&v29);
  }
  v24 = v29;
  if (vabdd_f64(v29, v30) >= 0.000001)
  {
    v27 = (*a6)[1](a6, a3, (uint64_t *)&v32, v31, v29);
  }
  else
  {
    v25 = *a3;
    ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(v25, v29);
    if ((pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::SdfAbstractDataValue>(*(_QWORD *)(*((_QWORD *)v25 + 11) + 16 * ClipIndexForTime), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, a6, a7, v24) & 1) != 0|| sub_20C472EF0((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v25 + 9, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v32, a7) == 1)
    {
      if (a7)
        v27 = *(_BYTE *)(a7 + 24) == 0;
      else
        v27 = 1;
    }
    else
    {
      v27 = 0;
    }
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v33);
  sub_20BFD265C(&v32);
  return v27;
}

void sub_20C472D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C472DA4(pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **a1, uint64_t a2, uint64_t (***a3)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a4, double a5, double a6, double a7)
{
  uint64_t *v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v13;
  uint64_t v14;
  uint64_t TimeSample;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v18;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v20;

  v11 = (uint64_t *)(a1 + 1);
  if (vabdd_f64(a6, a7) >= 0.000001)
  {
    v18 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v11;
    if (*v11)
    {
      if (*(_BYTE *)(sub_20BEB47BC(v11) + 14))
        v18 = *a1;
      else
        v18 = 0;
    }
    v20 = v18;
    sub_20BF1DD04((uint64_t *)&v20);
    TimeSample = (**a3)(a3, &v20, a2, a5, a6, a7);
    sub_20C103234(&v20);
  }
  else
  {
    v13 = (pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *)*v11;
    if (*v11)
    {
      if (*(_BYTE *)(sub_20BEB47BC(v11) + 14))
        v13 = *a1;
      else
        v13 = 0;
    }
    v20 = v13;
    sub_20BF1DD04((uint64_t *)&v20);
    v14 = sub_20C0EEAF8((uint64_t *)&v20);
    TimeSample = pxrInternal__aapl__pxrReserved__::SdfLayer::QueryTimeSample(v14, a2, a4, a6);
    sub_20C103234(&v20);
    if ((_DWORD)TimeSample)
      return !a4 || *(_BYTE *)(a4 + 24) == 0;
  }
  return TimeSample;
}

void sub_20C472ED8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20C103234((pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20C472EF0(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t a3)
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t result;
  BOOL v8;
  uint64_t v9;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (!a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v9 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v9, MEMORY[0x24BEDB7C8]))
      return 0;
    v8 = !sub_20BDE150C(v9, (uint64_t)&stru_24C527B78);
    goto LABEL_11;
  }
  if (!v5)
    v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  result = sub_20C472FC0(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), (uint64_t (***)(_QWORD, uint64_t))a3);
  if ((_DWORD)result)
  {
    v8 = *(_BYTE *)(a3 + 24) == 0;
LABEL_11:
    if (v8)
      return 1;
    else
      return 2;
  }
  return result;
}

uint64_t sub_20C472FC0(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (***a4)(_QWORD, uint64_t))
{
  _QWORD *v8;
  uint64_t HasField;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (_QWORD *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return HasField;
}

void sub_20C473060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C473088(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C4730E8(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DCA8;
  v6 = 0;
  v5[0] = &unk_24C52D530;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C539E60;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C473150(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E30);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E30))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E28, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E30);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E28;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C474A48((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C474BD8((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C47523C((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C474600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C474A48(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C474BB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C474BD8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C475120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C47523C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C475784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C4758A0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C2750D4(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C4758E0(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<BOOL>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C47596C((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C47596C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C475A30(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C475A30(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C475AF8(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C475AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C475AF8(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C51DCA8;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D530;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C475B4C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (***a4)(_QWORD, uint64_t))
{
  int v4;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v8;
  uint64_t *v9;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v11;
  unint64_t v12;
  const char *v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v17;
  const char *v19;
  void **v20;
  uint64_t HasField;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v22;
  uint64_t Identifier;
  const char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v28;
  void *__p[2];
  char v30;
  int v31;
  int v32;
  _QWORD v33[4];
  char v34;

  v4 = *((_DWORD *)a2 + 18);
  if (!v4)
    return 0;
  if (v4 != 1)
  {
    if (v4 == 2)
    {
      v8 = sub_20C398E78((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v8, (int *)v33);
      v9 = a2 + 2;
      if (sub_20C286E00(15))
      {
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)v33);
        v11 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v11)
          v11 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v12 = *((_QWORD *)v11 + 11) & 0xFFFFFFFFFFFFFFF8;
        if (v12)
        {
          v13 = (const char *)(v12 + 16);
          if (*(char *)(v12 + 39) < 0)
            v13 = *(const char **)v13;
        }
        else
        {
          v13 = "";
        }
        v22 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v9);
        Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v22);
        if (*(char *)(Identifier + 23) >= 0)
          v26 = Identifier;
        else
          v26 = *(_QWORD *)Identifier;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@\n", v24, v25, Text, v13, v26);
      }
      v27 = (_QWORD *)sub_20BFCF650(v9);
      v28 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v28)
        v28 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v27, (pxrInternal__aapl__pxrReserved__::SdfPath *)v33, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v28 + 88), a4);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)v33 + 1);
      sub_20BFD265C(v33);
      return (_QWORD *)HasField;
    }
    v33[0] = "usd/stage.cpp";
    v33[1] = "_GetDefaultValueFromResolveInfoImpl";
    v33[2] = 8884;
    v33[3] = "BOOL pxrInternal__aapl__pxrReserved__::UsdStage::_GetDefaultValueFromResolveInfoImpl(const UsdResolveInfo &"
             ", const UsdAttribute &, T *) const [T = pxrInternal__aapl__pxrReserved__::SdfAbstractDataValue]";
    v34 = 0;
    sub_20C348EEC(a3, &v31);
    v19 = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v31);
    pxrInternal__aapl__pxrReserved__::TfEnum::GetName((uint64_t)&unk_24C539428, *((unsigned int *)a2 + 18), (uint64_t)__p);
    if (v30 >= 0)
      v20 = __p;
    else
      v20 = (void **)__p[0];
    pxrInternal__aapl__pxrReserved__::Tf_PostErrorHelper((uint64_t)v33, 1, (pxrInternal__aapl__pxrReserved__ *)"Invalid resolve info used for getting the value at default time for attr '%s'. Resolve info source must be Default, Fallback, or None. Got %s", v19, (const char *)v20);
    if (v30 < 0)
      operator delete(__p[0]);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v32);
    sub_20BFD265C(&v31);
    return 0;
  }
  v14 = *(_QWORD *)(a3 + 8);
  if (!v14 || (*(_BYTE *)(v14 + 57) & 8) != 0)
    pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a3 + 8), (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
  v15 = *(unint64_t **)(v14 + 24);
  PrimDefinition = atomic_load(v15 + 7);
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v15);
  v17 = sub_20C398E78((_DWORD *)a3);
  return sub_20C46EE94(PrimDefinition, v17, a4);
}

void sub_20C475DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18, int a19, __int16 a20,char a21,char a22)
{
  if (a17 < 0)
    operator delete(__p);
  sub_20BFD1A18(&a18);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C475DF4(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB770];
  v6 = 0;
  v5[0] = &unk_24C52B6E8;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C539E28;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

_QWORD *sub_20C475E5C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (***a4)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v11;
  unint64_t *v12;
  unint64_t PrimDefinition;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v14;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v16;
  uint64_t *v17;
  const char *Text;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v19;
  unint64_t v20;
  const char *v21;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v23;
  pxrInternal__aapl__pxrReserved__::Usd_ClipCache *v24;
  uint64_t *ClipsForPrim;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v26;
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet **v27;
  char v28;
  unsigned int *v29;
  unsigned int v30;
  pxrInternal__aapl__pxrReserved__::SdfLayer *v31;
  uint64_t Identifier;
  const char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v42;
  int v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  double v48;

  v48 = a6;
  v6 = a5;
  switch(*((_DWORD *)a2 + 18))
  {
    case 1:
      v11 = *(_QWORD *)(a3 + 8);
      if (!v11 || (*(_BYTE *)(v11 + 57) & 8) != 0)
        pxrInternal__aapl__pxrReserved__::Usd_ThrowExpiredPrimAccessError(*(pxrInternal__aapl__pxrReserved__ **)(a3 + 8), (const pxrInternal__aapl__pxrReserved__::Usd_PrimData *)a2);
      v12 = *(unint64_t **)(v11 + 24);
      PrimDefinition = atomic_load(v12 + 7);
      if (!PrimDefinition)
        PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition((pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo *)v12);
      v14 = sub_20C398E78((_DWORD *)a3);
      return sub_20C46EE94(PrimDefinition, v14, (uint64_t (***)(_QWORD, uint64_t))v6);
    case 2:
      v16 = sub_20C398E78((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v16, &v40);
      v17 = a2 + 2;
      if (sub_20C286E00(15))
      {
        Text = pxrInternal__aapl__pxrReserved__::SdfPath::GetText((pxrInternal__aapl__pxrReserved__::SdfPath *)&v40);
        v19 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        if (!v19)
          v19 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
        v20 = *((_QWORD *)v19 + 54) & 0xFFFFFFFFFFFFFFF8;
        if (v20)
        {
          v21 = (const char *)(v20 + 16);
          if (*(char *)(v20 + 39) < 0)
            v21 = *(const char **)v21;
        }
        else
        {
          v21 = "";
        }
        v31 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20BFCF650(v17);
        Identifier = pxrInternal__aapl__pxrReserved__::SdfLayer::GetIdentifier(v31);
        if (*(char *)(Identifier + 23) >= 0)
          v35 = Identifier;
        else
          v35 = *(_QWORD *)Identifier;
        pxrInternal__aapl__pxrReserved__::TfDebug::Helper::Msg((pxrInternal__aapl__pxrReserved__::TfDebug::Helper *)"RESOLVE: reading field %s:%s from @%s@, with t = %.3f as default\n", v33, v34, Text, v21, v35, *(_QWORD *)&v48);
      }
      v36 = (_QWORD *)sub_20BFCF650(v17);
      v37 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      if (!v37)
        v37 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
      LOBYTE(v6) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v36, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v40, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v37 + 88), (uint64_t (***)(_QWORD, uint64_t))v6);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v41);
      sub_20BFD265C(&v40);
      return (_QWORD *)(v6 & 1);
    case 3:
      return (_QWORD *)sub_20C4728E4((_DWORD *)a3, a2, 0, 0, a4, a5, a6);
    case 4:
      v23 = sub_20C398E78((_DWORD *)a3);
      pxrInternal__aapl__pxrReserved__::SdfPath::AppendProperty((pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8), v23, &v46);
      sub_20C35C4F8((uint64_t)&v40, (uint64_t *)(a3 + 8), (_DWORD *)(a3 + 16));
      v24 = *(pxrInternal__aapl__pxrReserved__::Usd_ClipCache **)(a1 + 136);
      sub_20C348EEC((uint64_t)&v40, &v38);
      ClipsForPrim = pxrInternal__aapl__pxrReserved__::Usd_ClipCache::GetClipsForPrim(v24, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v38);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v39);
      sub_20BFD265C(&v38);
      v26 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)*ClipsForPrim;
      v27 = (pxrInternal__aapl__pxrReserved__::Usd_ClipSet **)ClipsForPrim[1];
      break;
    default:
      goto LABEL_28;
  }
  while (1)
  {
    if (v26 == v27)
    {
      v28 = 1;
      goto LABEL_22;
    }
    if (sub_20C44C114((uint64_t)v26, (uint64_t)a2, (pxrInternal__aapl__pxrReserved__::SdfPath *)(a2 + 8))
      && sub_20C44C164((uint64_t)v26, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v46))
    {
      break;
    }
    v26 += 2;
  }
  LOBYTE(v6) = sub_20C472B74((_DWORD *)a3, (uint64_t)a2, v26, 0, 0, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a4, v6, a6);
  v28 = 0;
LABEL_22:
  if ((v45 & 7) != 0)
  {
    v29 = (unsigned int *)(v45 & 0xFFFFFFFFFFFFFFF8);
    do
      v30 = __ldxr(v29);
    while (__stlxr(v30 - 2, v29));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v44);
  sub_20BFD265C(&v43);
  if (v42)
    sub_20C35C614(v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v47);
  sub_20BFD265C(&v46);
  if ((v28 & 1) != 0)
LABEL_28:
    LOBYTE(v6) = 0;
  return (_QWORD *)(v6 & 1);
}

void sub_20C4761D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  sub_20C35C2E0((uint64_t)va);
  sub_20BFD1A18((int *)va1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20C47622C(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DCA8;
  v6 = 0;
  v5[0] = &unk_24C52D530;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C539E60;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_20C476294(uint64_t a1, _QWORD *a2)
{
  sub_20C07FDF0(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C4762B8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20C07FEB8(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v6 = *(_QWORD *)a2;
    return sub_20BF65D90(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C476314(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C476374(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB790];
  v6 = 0;
  v5[0] = &unk_24C52D568;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C539ED0;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C4763DC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E40);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E40))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E38, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E40);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E38;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C477CD4((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C477E64((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C4784C8((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C47788C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C477CD4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C477E3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C477E64(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C4783AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C4784C8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C478A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C478B2C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C275290(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C478B6C(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<unsigned char>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C478BF8((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C478BF8(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C478CBC(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C478CBC(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C478D84(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C478D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C478D84(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))MEMORY[0x24BEDB790];
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D568;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

uint64_t sub_20C478DD8(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C478E38(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DCD8;
  v6 = 0;
  v5[0] = &unk_24C52D5A0;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C539F08;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C478EA0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E50);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E50))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E48, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E50);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E48;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C47A798((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C47A928((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C47AF8C((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C47A350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C47A798(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C47A900(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C47A928(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C47AE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C47AF8C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C47B4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C47B5F0(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C27544C(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C47B630(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<unsigned char>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C47B6BC((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C47B6BC(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C47B780(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C47B780(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C47B848(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C47B820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C47B848(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C51DCD8;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D5A0;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C47B89C(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB790];
  v6 = 0;
  v5[0] = &unk_24C52D568;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C539ED0;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

_QWORD *sub_20C47B904(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DCD8;
  v6 = 0;
  v5[0] = &unk_24C52D5A0;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C539F08;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_20C47B96C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_BYTE **)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
    v5 = (*(_QWORD *)(a2 + 8) & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *(_QWORD *)(a2 + 8) = &unk_24C51FE63;
  *(_BYTE *)a2 = v3;
  return 1;
}

uint64_t sub_20C47B9CC(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  pxrInternal__aapl__pxrReserved__::VtValue *v2;
  uint64_t result;
  uint64_t v5;

  v2 = a2;
  result = sub_20BFECAA0(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)v2 + 1);
    if ((v5 & 4) != 0)
      v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return *(unsigned __int8 *)v2 == **(unsigned __int8 **)(a1 + 8);
  }
  return result;
}

uint64_t sub_20C47BA2C(uint64_t a1, _QWORD *a2)
{
  sub_20BF65AB4(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C47BA50(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20BF65A7C(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v6 = *(_QWORD *)a2;
    return sub_20BF65D90(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C47BAAC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C47BB0C(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB798];
  v6 = 0;
  v5[0] = off_24C5420E8;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C539FB0;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C47BB74(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E60);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E60))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E58, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E60);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E58;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C47D46C((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C47D5FC((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C47DC60((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C47D024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C47D46C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C47D5D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C47D5FC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C47DB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C47DC60(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C47E1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C47E2C4(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C275608(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C47E304(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<int>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C28B228((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C47E390(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C47E3F0(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD20;
  v6 = 0;
  v5[0] = &unk_24C52D5F0;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C539FE8;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C47E458(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E70);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E70))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E68, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E70);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E68;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C47FD50((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C47FEE0((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C480544((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C47F908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C47FD50(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C47FEB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C47FEE0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C480428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C480544(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C480A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C480BA8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C2757C4(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C480BE8(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<int>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C480C74((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C480C74(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C480D38(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C480D38(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C480E00(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C480DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C480E00(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C51DD20;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D5F0;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C480E54(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB798];
  v6 = 0;
  v5[0] = off_24C5420E8;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C539FB0;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

_QWORD *sub_20C480EBC(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD20;
  v6 = 0;
  v5[0] = &unk_24C52D5F0;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C539FE8;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_20C480F24(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_DWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
    v5 = (*(_QWORD *)(a2 + 8) & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *(_QWORD *)(a2 + 8) = &unk_24C52008B;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_20C480F84(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  v2 = (uint64_t)a2;
  result = sub_20BFB2CEC(a2);
  if ((_DWORD)result)
  {
    v5 = *(_QWORD *)(v2 + 8);
    if ((v5 & 4) != 0)
      v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return *(_DWORD *)v2 == **(_DWORD **)(a1 + 8);
  }
  return result;
}

uint64_t sub_20C480FE4(uint64_t a1, _QWORD *a2)
{
  sub_20BF6510C(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C481008(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20BF64C0C(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v6 = *(_QWORD *)a2;
    return pxrInternal__aapl__pxrReserved__::UsdSkelTopology::operator==(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C481064(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C4810C4(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB7A0];
  v6 = 0;
  v5[0] = &unk_24C52D628;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C53A090;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C48112C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E80);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E80))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E78, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E80);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E78;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C482A24((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C482BB4((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C483218((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C4825DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C482A24(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C482B8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C482BB4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C4830FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C483218(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C483760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C48387C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C275980(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C4838BC(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<unsigned int>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C483948((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C483948(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C483A0C(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C483A0C(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C483AD4(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C483AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C483AD4(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))MEMORY[0x24BEDB7A0];
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D628;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

uint64_t sub_20C483B28(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C483B88(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD38;
  v6 = 0;
  v5[0] = &unk_24C52D660;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C53A0C8;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C483BF0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988E90);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988E90))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E88, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988E90);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E88;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C4854E8((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C485678((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C485CDC((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C4850A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C4854E8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C485650(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C485678(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C485BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C485CDC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C486224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C486340(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C275B3C(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C486380(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<unsigned int>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C48640C((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C48640C(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C4864D0(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C4864D0(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C486598(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C486570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C486598(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C51DD38;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D660;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C4865EC(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB7A0];
  v6 = 0;
  v5[0] = &unk_24C52D628;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C53A090;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

_QWORD *sub_20C486654(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD38;
  v6 = 0;
  v5[0] = &unk_24C52D660;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C53A0C8;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_20C4866BC(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_DWORD **)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
    v5 = (*(_QWORD *)(a2 + 8) & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *(_QWORD *)(a2 + 8) = &unk_24C520143;
  *(_DWORD *)a2 = v3;
  return 1;
}

uint64_t sub_20C48671C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  v2 = (uint64_t)a2;
  result = sub_20C1D02C8(a2);
  if ((_DWORD)result)
  {
    v5 = *(_QWORD *)(v2 + 8);
    if ((v5 & 4) != 0)
      v2 = (*(uint64_t (**)(uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return *(_DWORD *)v2 == **(_DWORD **)(a1 + 8);
  }
  return result;
}

uint64_t sub_20C48677C(uint64_t a1, _QWORD *a2)
{
  sub_20BF645B8(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C4867A0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20BF6374C(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v6 = *(_QWORD *)a2;
    return pxrInternal__aapl__pxrReserved__::UsdSkelTopology::operator==(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C4867FC(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C48685C(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB7D0];
  v6 = 0;
  v5[0] = &unk_24C52D698;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C53A170;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C4868C4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988EA0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988EA0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988E98, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988EA0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988E98;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C4881BC((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C48834C((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C4889B0((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C487D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C4881BC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C488324(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C48834C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C488894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C4889B0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C488EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C489014(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C275CF8(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C489054(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<long long>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C4890E0((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C4890E0(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C4891A4(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C4891A4(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C48926C(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C489244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C48926C(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))MEMORY[0x24BEDB7D0];
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D698;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

uint64_t sub_20C4892C0(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C489320(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD50;
  v6 = 0;
  v5[0] = &unk_24C52D6D0;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C53A1A8;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C489388(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988EB0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988EB0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988EA8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988EB0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988EA8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C48AC80((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C48AE10((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C48B474((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C48A838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C48AC80(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C48ADE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C48AE10(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C48B358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C48B474(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C48B9BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C48BAD8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C275EB4(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C48BB18(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<long long>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C48BBA4((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C48BBA4(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C48BC68(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C48BC68(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C48BD30(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C48BD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C48BD30(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C51DD50;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D6D0;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C48BD84(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB7D0];
  v6 = 0;
  v5[0] = &unk_24C52D698;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C53A170;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

_QWORD *sub_20C48BDEC(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD50;
  v6 = 0;
  v5[0] = &unk_24C52D6D0;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C53A1A8;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_20C48BE54(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_QWORD **)(a1 + 8);
  v4 = a2[1];
  if (v4)
    v5 = (a2[1] & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(_QWORD *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *a2 = v3;
  a2[1] = &unk_24C52036B;
  return 1;
}

uint64_t sub_20C48BEB0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  pxrInternal__aapl__pxrReserved__::VtValue *v2;
  uint64_t result;
  uint64_t v5;

  v2 = a2;
  result = sub_20C0495EC(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)v2 + 1);
    if ((v5 & 4) != 0)
      v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return *(_QWORD *)v2 == **(_QWORD **)(a1 + 8);
  }
  return result;
}

uint64_t sub_20C48BF10(uint64_t a1, _QWORD *a2)
{
  sub_20C080298(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C48BF34(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20C032314(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v6 = *(_QWORD *)a2;
    return sub_20C004340(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C48BF90(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C48BFF0(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB7D8];
  v6 = 0;
  v5[0] = &unk_24C52D708;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C53A250;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C48C058(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988EC0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988EC0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988EB8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988EC0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988EB8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C48D950((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C48DAE0((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C48E144((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C48D508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C48D950(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C48DAB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C48DAE0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C48E028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C48E144(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C48E68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C48E7A8(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C276070(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C48E7E8(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<unsigned long long>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C48E874((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C48E874(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C48E938(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C48E938(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C48EA00(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C48E9D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C48EA00(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))MEMORY[0x24BEDB7D8];
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D708;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

uint64_t sub_20C48EA54(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C48EAB4(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD68;
  v6 = 0;
  v5[0] = &unk_24C52D740;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))&unk_24C53A288;
  v4[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v4, (uint64_t)v5, **(double **)(a3 + 8));
}

uint64_t sub_20C48EB1C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988ED0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988ED0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988EC8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988ED0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988EC8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C490414((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C4905A4((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C490C08((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C48FFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C490414(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C49057C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C4905A4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C490AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C490C08(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C491150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C49126C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C27622C(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C4912AC(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<unsigned long long>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C491338((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C491338(pxrInternal__aapl__pxrReserved__::Usd_Clip **a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, uint64_t (**a3)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_Clip *v4;
  pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *v5;
  uint64_t v8;

  v4 = *a1;
  v5 = (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)atomic_load(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
  if (a3)
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    return sub_20C4913FC(v4, a2, (pxrInternal__aapl__pxrReserved__::SdfFieldKeys_StaticTokenType *)((char *)v5 + 88), a3);
  }
  else
  {
    if (!v5)
      v5 = sub_20BFD40E4(&pxrInternal__aapl__pxrReserved__::SdfFieldKeys);
    v8 = sub_20C28E170(v4, a2, (uint64_t)v5 + 88);
    if (sub_20BDE150C(v8, MEMORY[0x24BEDB7C8]))
    {
      return 0;
    }
    else if (sub_20BDE150C(v8, (uint64_t)&stru_24C527B78))
    {
      return 2;
    }
    else
    {
      return 1;
    }
  }
}

uint64_t sub_20C4913FC(pxrInternal__aapl__pxrReserved__::Usd_Clip *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;
  uint64_t v9;
  uint64_t v11;
  pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *v12;

  pxrInternal__aapl__pxrReserved__::Usd_Clip::_GetLayerForClip(a1, (uint64_t *)&v12);
  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8((uint64_t *)&v12);
  pxrInternal__aapl__pxrReserved__::Usd_Clip::_TranslatePathToClip(a1, a2, &v11);
  v9 = sub_20C4914C4(v8, (const pxrInternal__aapl__pxrReserved__::SdfPath *)&v11, a3, a4);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v11 + 1);
  sub_20BFD265C(&v11);
  sub_20C103234(&v12);
  return v9;
}

void sub_20C49149C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter *a10)
{
  sub_20BFD1A18(&a9);
  sub_20C103234(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20C4914C4(pxrInternal__aapl__pxrReserved__::SdfLayer *a1, const pxrInternal__aapl__pxrReserved__::SdfPath *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t (**a4)(_QWORD, uint64_t))
{
  uint64_t result;
  uint64_t (**v5[3])(_QWORD, uint64_t);
  __int16 v6;

  if (!a4)
    return pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, 0);
  v5[2] = (uint64_t (**)(_QWORD, uint64_t))&stru_24C51DD68;
  v6 = 0;
  v5[0] = (uint64_t (**)(_QWORD, uint64_t))&unk_24C52D740;
  v5[1] = a4;
  LODWORD(result) = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(a1, a2, a3, v5);
  if ((_BYTE)v6)
    return 0;
  else
    return result;
}

_QWORD *sub_20C491518(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = MEMORY[0x24BEDB7D8];
  v6 = 0;
  v5[0] = &unk_24C52D708;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C53A250;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

_QWORD *sub_20C491580(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  uint64_t (**v4[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v5[3];
  __int16 v6;

  v5[2] = &stru_24C51DD68;
  v6 = 0;
  v5[0] = &unk_24C52D740;
  v5[1] = a2;
  v4[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))&unk_24C53A288;
  v4[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v4, (uint64_t)v5, **(double **)(a3 + 16));
}

uint64_t sub_20C4915E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_QWORD **)(a1 + 8);
  v4 = a2[1];
  if (v4)
    v5 = (a2[1] & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(_QWORD *))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *a2 = v3;
  a2[1] = &unk_24C520423;
  return 1;
}

uint64_t sub_20C491644(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  pxrInternal__aapl__pxrReserved__::VtValue *v2;
  uint64_t result;
  uint64_t v5;

  v2 = a2;
  result = sub_20C1D0800(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)v2 + 1);
    if ((v5 & 4) != 0)
      v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return *(_QWORD *)v2 == **(_QWORD **)(a1 + 8);
  }
  return result;
}

uint64_t sub_20C4916A4(uint64_t a1, _QWORD *a2)
{
  sub_20C1D08C4(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C4916C8(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_20C033AF4(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(a2);
    else
      v6 = *(_QWORD *)a2;
    return sub_20C004340(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C491724(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C491784(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  char *v3;
  uint64_t (**v5[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v6[3];
  __int16 v7;

  v6[2] = &stru_24C51BF30;
  v7 = 0;
  v6[0] = &unk_24C52D778;
  v6[1] = a2;
  if (*(_DWORD *)(a1 + 784) == 1)
    v3 = (char *)&unk_24C536858;
  else
    v3 = (char *)&unk_24C53A320;
  v5[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))(v3 + 16);
  v5[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_20C4917FC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988EE0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988EE0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988ED8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988EE0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988ED8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C4930F4((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C493284((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C4938E8((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C492CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C4930F4(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C49325C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C493284(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C4937CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C4938E8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C493E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C493F4C(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C2763E8(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C493F8C(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::pxr_half::half>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C349498((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C494018(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C494078(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  char *v3;
  uint64_t (**v5[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v6[3];
  __int16 v7;

  v6[2] = &stru_24C51DDB0;
  v7 = 0;
  v6[0] = &unk_24C52D7B0;
  v6[1] = a2;
  if (*(_DWORD *)(a1 + 784) == 1)
    v3 = (char *)&unk_24C536890;
  else
    v3 = (char *)&unk_24C53A358;
  v5[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))(v3 + 16);
  v5[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_20C4940F0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988EF0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988EF0))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988EE8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988EF0);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988EE8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C4959E8((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C495B78((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C4961DC((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C4955A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C4959E8(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C495B50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C495B78(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C4960C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C4961DC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C496724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C496840(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C2765A4(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C496880(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<pxrInternal__aapl__pxrReserved__::VtArray<pxrInternal__aapl__pxrReserved__::pxr_half::half>>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C349AFC((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

_QWORD *sub_20C49690C(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  char *v3;
  uint64_t (**v5[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v6[3];
  __int16 v7;

  v6[2] = &stru_24C51BF30;
  v7 = 0;
  v6[0] = &unk_24C52D778;
  v6[1] = a2;
  if (*(_DWORD *)(a1 + 784) == 1)
    v3 = (char *)&unk_24C536858;
  else
    v3 = (char *)&unk_24C53A320;
  v5[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))(v3 + 16);
  v5[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

_QWORD *sub_20C496984(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double), uint64_t a3)
{
  char *v3;
  uint64_t (**v5[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double);
  _QWORD v6[3];
  __int16 v7;

  v6[2] = &stru_24C51DDB0;
  v7 = 0;
  v6[0] = &unk_24C52D7B0;
  v6[1] = a2;
  if (*(_DWORD *)(a1 + 784) == 1)
    v3 = (char *)&unk_24C536890;
  else
    v3 = (char *)&unk_24C53A358;
  v5[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t, double, double, double))(v3 + 16);
  v5[1] = a2;
  return sub_20C475E5C(*(_QWORD *)a3, *(uint64_t **)(a3 + 8), *(_QWORD *)(a3 + 24), v5, (uint64_t)v6, **(double **)(a3 + 16));
}

uint64_t sub_20C4969FC(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  BOOL v5;

  v3 = **(_WORD **)(a1 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
    v5 = (*(_QWORD *)(a2 + 8) & 3) == 3;
  else
    v5 = 1;
  if (!v5)
    (*(void (**)(uint64_t))((v4 & 0xFFFFFFFFFFFFFFF8) + 32))(a2);
  *(_QWORD *)(a2 + 8) = (char *)&off_24C5204D8 + 3;
  *(_WORD *)a2 = v3;
  return 1;
}

uint64_t sub_20C496A5C(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  pxrInternal__aapl__pxrReserved__::VtValue *v2;
  uint64_t result;
  uint64_t v5;

  v2 = a2;
  result = sub_20C1D0B64(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)v2 + 1);
    if ((v5 & 4) != 0)
      v2 = (pxrInternal__aapl__pxrReserved__::VtValue *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8) + 168))(v2);
    return pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[*(unsigned __int16 *)v2] == pxrInternal__aapl__pxrReserved__::pxr_half::half::_toFloat[**(unsigned __int16 **)(a1 + 8)];
  }
  return result;
}

uint64_t sub_20C496ACC(uint64_t a1, _QWORD *a2)
{
  sub_20BF57178(a2, *(_QWORD *)(a1 + 8));
  return 1;
}

uint64_t sub_20C496AF0(uint64_t a1, pxrInternal__aapl__pxrReserved__::VtValue *a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;

  result = sub_20BF560D4(a2);
  if ((_DWORD)result)
  {
    v5 = *((_QWORD *)a2 + 1);
    if ((v5 & 4) != 0)
      v6 = (_QWORD *)(*(uint64_t (**)(pxrInternal__aapl__pxrReserved__::VtValue *))((v5 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + 168))(a2);
    else
      v6 = *(_QWORD **)a2;
    return sub_20BF57448(v6, *(_QWORD *)(a1 + 8));
  }
  return result;
}

uint64_t sub_20C496B4C(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C496BAC(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  char *v3;
  uint64_t (**v5[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v6[3];
  __int16 v7;

  v6[2] = MEMORY[0x24BEDB788];
  v7 = 0;
  v6[0] = &unk_24C52D7E8;
  v6[1] = a2;
  if (*(_DWORD *)(a1 + 784) == 1)
    v3 = (char *)&unk_24C5368C8;
  else
    v3 = (char *)&unk_24C53A400;
  v5[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))(v3 + 16);
  v5[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_20C496C24(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988F00);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988F00))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988EF8, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988F00);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988EF8;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C49851C((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C4986AC((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C498D10((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C4980D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C49851C(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C498684(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C4986AC(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

void sub_20C498BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45CEE4((uint64_t)&a38);
  sub_20C020EAC((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C45D378((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

BOOL sub_20C498D10(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t *v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D40;
    v45 = (uint64_t *)&unk_24C539538;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45D45C(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C0366AC(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = v65;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v64;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v63;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v62;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v61;
    sub_20BEEB2B8((void ***)&v45);
    v45 = (uint64_t *)v59;
    sub_20BEEB2B8((void ***)&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D40;
  v52 = 0;
  v51[0] = (void **)&unk_24C539538;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45D45C(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C0366AC(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = v65;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v64;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v63;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v62;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v61;
  sub_20BEEB2B8((void ***)&v45);
  v45 = (uint64_t *)v59;
  sub_20BEEB2B8((void ***)&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = (_QWORD *)v56;
    v47 = 0;
    while (1)
    {
      v24 -= 19;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::ApplyOperations(v24, &v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == (_QWORD *)v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<pxrInternal__aapl__pxrReserved__::TfToken>::SetExplicitItems(v27, &v45);
        sub_20C0366AC((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D578(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v38;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v37;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v36;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v35;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)&v34;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v65;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v64;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v63;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v62;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v61;
        sub_20BEEB2B8(v51);
        v51[0] = (void **)v59;
        sub_20BEEB2B8(v51);
        v58 = (void **)&v45;
        sub_20BEEB2B8(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C451A98(&v58);
  return v22 != v23;
}

void sub_20C499258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,char a50)
{
  uint64_t v50;

  sub_20C45D3FC((uint64_t)&a38);
  sub_20C03507C((void **)(v50 - 248));
  sub_20BFD1A18(&a48);
  *(_QWORD *)(v50 - 248) = &a50;
  sub_20C451A98((void ***)(v50 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C499374(uint64_t a1, uint64_t *a2, const pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::SdfLayer *v8;

  v8 = (pxrInternal__aapl__pxrReserved__::SdfLayer *)sub_20C0EEAF8(a2);
  return sub_20C276760(v8, a3, *(_QWORD *)(a1 + 8), a5);
}

BOOL sub_20C4993B4(uint64_t a1, pxrInternal__aapl__pxrReserved__::Usd_ClipSet **a2, pxrInternal__aapl__pxrReserved__::SdfPath *a3, double a4, double a5)
{
  pxrInternal__aapl__pxrReserved__::Usd_ClipSet *v8;
  uint64_t (**v9)(_QWORD, uint64_t);
  uint64_t ClipIndexForTime;

  v8 = *a2;
  v9 = *(uint64_t (***)(_QWORD, uint64_t))(a1 + 8);
  ClipIndexForTime = pxrInternal__aapl__pxrReserved__::Usd_ClipSet::_FindClipIndexForTime(*a2, a5);
  return pxrInternal__aapl__pxrReserved__::Usd_Clip::QueryTimeSample<float>(*(_QWORD *)(*((_QWORD *)v8 + 11) + 16 * ClipIndexForTime), a3, (uint64_t (***)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))a1, (uint64_t)v9, a5)|| sub_20C34A0BC((pxrInternal__aapl__pxrReserved__::Usd_Clip **)v8 + 9, a3, v9) == 1;
}

uint64_t sub_20C499440(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v5;

  v2 = *(_QWORD *)(a1 + 32);
  if ((v2 & 7) != 0)
  {
    v3 = (unsigned int *)(v2 & 0xFFFFFFFFFFFFFFF8);
    do
      v4 = __ldxr(v3);
    while (__stlxr(v4 - 2, v3));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)(a1 + 28));
  sub_20BFD265C((_DWORD *)(a1 + 24));
  v5 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 16);
  if (v5)
    sub_20C35C614(v5);
  return a1;
}

uint64_t sub_20C4994A0(uint64_t a1, uint64_t (**a2)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double), uint64_t a3)
{
  char *v3;
  uint64_t (**v5[2])(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double);
  _QWORD v6[3];
  __int16 v7;

  v6[2] = &stru_24C51DD98;
  v7 = 0;
  v6[0] = &unk_24C52D820;
  v6[1] = a2;
  if (*(_DWORD *)(a1 + 784) == 1)
    v3 = (char *)&unk_24C536900;
  else
    v3 = (char *)&unk_24C53A438;
  v5[0] = (uint64_t (**)(_QWORD, pxrInternal__aapl__pxrReserved__::Tf_RefPtr_UniqueChangedCounter **, uint64_t *, double, double))(v3 + 16);
  v5[1] = a2;
  return sub_20C4726C0(*(_QWORD *)a3, *(_DWORD **)(a3 + 16), v5, (uint64_t)v6, **(double **)(a3 + 8));
}

uint64_t sub_20C499518(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, uint64_t *a3, uint64_t (****a4)(_QWORD, uint64_t))
{
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v8;
  unsigned __int8 v9;
  pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *v10;
  const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *PrimIndex;
  uint64_t v12;
  BOOL i;
  _QWORD *v15;
  int HasField;
  int v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  BOOL j;
  _QWORD *v23;
  int v24;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  BOOL k;
  _QWORD *v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  BOOL m;
  _QWORD *v51;
  int v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int *v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  void ***v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  unsigned int v79;
  uint64_t v80;
  _QWORD *v81;
  void ***v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int *v85;
  unsigned int v86;
  uint64_t v87;
  _QWORD *v88;
  void ***v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int *v92;
  unsigned int v93;
  uint64_t v94;
  _QWORD *v95;
  void ***v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (****v100)(_QWORD, uint64_t);
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t (**v107)(_QWORD, uint64_t);
  void *v108;
  std::type_info *v109;
  int v110;
  int v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *__p;
  void *v121;
  uint64_t v122;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v123;
  int v124;
  int v125;
  uint64_t v126;
  void *v127;
  void ***v128;
  std::type_info *v129;
  __int16 v130;
  int v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  void **v136;
  void *v137;
  void *v138;
  void ***v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  uint64_t v150;

  v150 = *MEMORY[0x24BDAC8D0];
  v8 = *(pxrInternal__aapl__pxrReserved__::Usd_PrimData **)(a1 + 8);
  v9 = atomic_load((unsigned __int8 *)&qword_254988F10);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254988F10))
  {
    __cxa_atexit((void (*)(void *))sub_20C20ACA4, &unk_254988F08, &dword_20BDBC000);
    __cxa_guard_release(&qword_254988F10);
  }
  if (*(int *)a1 < 2)
    v10 = (pxrInternal__aapl__pxrReserved__::SdfPathTokens_StaticTokenType *)&unk_254988F08;
  else
    v10 = sub_20C398E78((_DWORD *)a1);
  PrimIndex = (const pxrInternal__aapl__pxrReserved__::PcpPrimIndex *)pxrInternal__aapl__pxrReserved__::Usd_PrimData::GetPrimIndex(v8);
  pxrInternal__aapl__pxrReserved__::Usd_Resolver::Usd_Resolver((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101, PrimIndex, 1);
  if (!sub_20C49AE10((uint64_t)v8, v10, a2, a3, (uint64_t)v101, a4))
    return 0;
  v12 = (uint64_t)(*a4)[2];
  v100 = a4;
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524CF0))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (i = 1;
          v102 != v104 || v103 != v105;
          i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (i)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
      v15 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524CF0;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C5399F0;
      HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v15, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v17 = 0;
      else
        v17 = HasField;
      if (v17 == 1)
      {
        v18 = v134;
        if (v134 >= v135)
        {
          v19 = sub_20C45B3D8(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C031ADC(v134, (uint64_t)&v136);
          v19 = v18 + 152;
        }
        v134 = v19;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
    v128 = &v136;
    v129 = &stru_24C524CF0;
    v130 = 0;
    v127 = &unk_24C5399F0;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v28 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v29 = __ldxr(v28);
      while (__stlxr(v29 - 2, v28));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v30 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v31 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v32 = __ldxr(v31);
      while (__stlxr(v32 - 2, v31));
    }
    if (v30)
    {
      v33 = v134;
      if (v134 >= v135)
      {
        v34 = sub_20C45B3D8(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C031ADC(v134, (uint64_t)&v136);
        v34 = v33 + 152;
      }
      v134 = v34;
    }
    if ((v112 & 7) != 0)
    {
      v63 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v64 = __ldxr(v63);
      while (__stlxr(v64 - 2, v63));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v65 = v133;
    v66 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v66 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<int>::ApplyOperations(v66, (int **)&v127, (uint64_t)&v136);
      v67 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v68 = 5;
LABEL_181:
        ((void (*)(void))(*v67)[v68])();
      }
      if (v66 == (_QWORD *)v65)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<int>::SetExplicitItems(v69, (uint64_t)&v127);
        sub_20C031ADC((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45BAB4((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v67 = &v136;
    v68 = 4;
    goto LABEL_181;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D00))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (j = 1;
          v102 != v104 || v103 != v105;
          j = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (j)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
      v23 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D00;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A28;
      v24 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v23, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v25 = 0;
      else
        v25 = v24;
      if (v25 == 1)
      {
        v26 = v134;
        if (v134 >= v135)
        {
          v27 = sub_20C45BC0C(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C03298C(v134, (uint64_t)&v136);
          v27 = v26 + 152;
        }
        v134 = v27;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D00;
    v130 = 0;
    v127 = &unk_24C539A28;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v42 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v43 = __ldxr(v42);
      while (__stlxr(v43 - 2, v42));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v44 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v45 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v46 = __ldxr(v45);
      while (__stlxr(v46 - 2, v45));
    }
    if (v44)
    {
      v47 = v134;
      if (v134 >= v135)
      {
        v48 = sub_20C45BC0C(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C03298C(v134, (uint64_t)&v136);
        v48 = v47 + 152;
      }
      v134 = v48;
    }
    if ((v112 & 7) != 0)
    {
      v78 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v79 = __ldxr(v78);
      while (__stlxr(v79 - 2, v78));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v80 = v133;
    v81 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v81 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::ApplyOperations(v81, (uint64_t **)&v127, (uint64_t)&v136);
      v82 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v83 = 5;
LABEL_248:
        ((void (*)(void))(*v82)[v83])();
      }
      if (v81 == (_QWORD *)v80)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<long long>::SetExplicitItems(v84, (uint64_t)&v127);
        sub_20C03298C((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C1A0((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v82 = &v136;
    v83 = 4;
    goto LABEL_248;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D10))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (k = 1;
          v102 != v104 || v103 != v105;
          k = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (k)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
      v37 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D10;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A60;
      v38 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v37, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v39 = 0;
      else
        v39 = v38;
      if (v39 == 1)
      {
        v40 = v134;
        if (v134 >= v135)
        {
          v41 = sub_20C45C274(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C033524(v134, (uint64_t)&v136);
          v41 = v40 + 152;
        }
        v134 = v41;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D10;
    v130 = 0;
    v127 = &unk_24C539A60;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v56 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v57 = __ldxr(v56);
      while (__stlxr(v57 - 2, v56));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v58 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v59 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v60 = __ldxr(v59);
      while (__stlxr(v60 - 2, v59));
    }
    if (v58)
    {
      v61 = v134;
      if (v134 >= v135)
      {
        v62 = sub_20C45C274(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C033524(v134, (uint64_t)&v136);
        v62 = v61 + 152;
      }
      v134 = v62;
    }
    if ((v112 & 7) != 0)
    {
      v85 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v86 = __ldxr(v85);
      while (__stlxr(v86 - 2, v85));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v87 = v133;
    v88 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 == v134)
      goto LABEL_388;
    v127 = 0;
    v128 = 0;
    v129 = 0;
    while (1)
    {
      v88 -= 19;
      v139 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::ApplyOperations(v88, (int **)&v127, (uint64_t)&v136);
      v89 = v139;
      if (v139 == &v136)
        break;
      if (v139)
      {
        v90 = 5;
LABEL_305:
        ((void (*)(void))(*v89)[v90])();
      }
      if (v88 == (_QWORD *)v87)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SdfListOp((uint64_t)&v136);
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned int>::SetExplicitItems(v91, (uint64_t)&v127);
        sub_20C033524((uint64_t)&v107, (uint64_t)&v136);
        sub_20C45C808((uint64_t)*v100, (uint64_t)&v107);
        *((_BYTE *)v100 + 40) = 1;
        if (__p)
        {
          v121 = __p;
          operator delete(__p);
        }
        if (v118)
        {
          v119 = v118;
          operator delete(v118);
        }
        if (v116)
        {
          v117 = v116;
          operator delete(v116);
        }
        if (v114)
        {
          v115 = v114;
          operator delete(v114);
        }
        if (v112)
        {
          v113 = v112;
          operator delete(v112);
        }
        if (v108)
        {
          v109 = (std::type_info *)v108;
          operator delete(v108);
        }
        if (v148)
        {
          v149 = v148;
          operator delete(v148);
        }
        if (v146)
        {
          v147 = v146;
          operator delete(v146);
        }
        if (v144)
        {
          v145 = v144;
          operator delete(v144);
        }
        if (v142)
        {
          v143 = v142;
          operator delete(v142);
        }
        if (v140)
        {
          v141 = v140;
          operator delete(v140);
        }
        if (v137)
        {
          v138 = v137;
          operator delete(v137);
        }
        if (v127)
        {
          v128 = (void ***)v127;
          operator delete(v127);
        }
        goto LABEL_388;
      }
    }
    v89 = &v136;
    v90 = 4;
    goto LABEL_305;
  }
  if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D20))
  {
    v133 = 0;
    v134 = 0;
    v135 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v131);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v132);
    for (m = 1;
          v102 != v104 || v103 != v105;
          m = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)v101))
    {
      if (m)
      {
        sub_20C453680((uint64_t)v101, v10, (int *)&v136);
        sub_20BFD3EBC(&v131, (int *)&v136);
        sub_20BFD3F10(&v132, (int *)&v136 + 1);
        pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v136 + 1);
        sub_20BFD265C(&v136);
      }
      pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
      v51 = (_QWORD *)sub_20C0EEAF8(v106);
      v108 = &v136;
      v109 = &stru_24C524D20;
      LOWORD(v110) = 0;
      v107 = (uint64_t (**)(_QWORD, uint64_t))&unk_24C539A98;
      v52 = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v51, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v131, a2, &v107);
      if ((_BYTE)v110)
        v53 = 0;
      else
        v53 = v52;
      if (v53 == 1)
      {
        v54 = v134;
        if (v134 >= v135)
        {
          v55 = sub_20C45C8DC(&v133, (uint64_t)&v136);
        }
        else
        {
          sub_20C0340F4(v134, (uint64_t)&v136);
          v55 = v54 + 152;
        }
        v134 = v55;
      }
      if (v148)
      {
        v149 = v148;
        operator delete(v148);
      }
      if (v146)
      {
        v147 = v146;
        operator delete(v146);
      }
      if (v144)
      {
        v145 = v144;
        operator delete(v144);
      }
      if (v142)
      {
        v143 = v142;
        operator delete(v142);
      }
      if (v140)
      {
        v141 = v140;
        operator delete(v140);
      }
      if (v137)
      {
        v138 = v137;
        operator delete(v137);
      }
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
    v129 = &stru_24C524D20;
    v130 = 0;
    v127 = &unk_24C539A98;
    v128 = &v136;
    LODWORD(v122) = 0;
    v123 = 0;
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v124);
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v125);
    v126 = 0;
    sub_20C4535E0((uint64_t)&v107, (uint64_t)&v127, (uint64_t)&v122);
    if ((v126 & 7) != 0)
    {
      v71 = (unsigned int *)(v126 & 0xFFFFFFFFFFFFFFF8);
      do
        v72 = __ldxr(v71);
      while (__stlxr(v72 - 2, v71));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v125);
    sub_20BFD265C(&v124);
    if (v123)
      sub_20C35C614(v123);
    v122 = 0;
    v73 = sub_20C45B318((uint64_t)v8, v10, a2, &v122, (uint64_t)&v107);
    if ((v122 & 7) != 0)
    {
      v74 = (unsigned int *)(v122 & 0xFFFFFFFFFFFFFFF8);
      do
        v75 = __ldxr(v74);
      while (__stlxr(v75 - 2, v74));
    }
    if (v73)
    {
      v76 = v134;
      if (v134 >= v135)
      {
        v77 = sub_20C45C8DC(&v133, (uint64_t)&v136);
      }
      else
      {
        sub_20C0340F4(v134, (uint64_t)&v136);
        v77 = v76 + 152;
      }
      v134 = v77;
    }
    if ((v112 & 7) != 0)
    {
      v92 = (unsigned int *)((unint64_t)v112 & 0xFFFFFFFFFFFFFFF8);
      do
        v93 = __ldxr(v92);
      while (__stlxr(v93 - 2, v92));
    }
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v111);
    sub_20BFD265C(&v110);
    if (v109)
      sub_20C35C614((pxrInternal__aapl__pxrReserved__::Usd_PrimData *)v109);
    if (v148)
    {
      v149 = v148;
      operator delete(v148);
    }
    if (v146)
    {
      v147 = v146;
      operator delete(v146);
    }
    if (v144)
    {
      v145 = v144;
      operator delete(v144);
    }
    if (v142)
    {
      v143 = v142;
      operator delete(v142);
    }
    if (v140)
    {
      v141 = v140;
      operator delete(v140);
    }
    if (v137)
    {
      v138 = v137;
      operator delete(v137);
    }
    v94 = v133;
    v95 = (_QWORD *)v134;
    v20 = v133 != v134;
    if (v133 != v134)
    {
      v127 = 0;
      v128 = 0;
      v129 = 0;
      while (1)
      {
        v95 -= 19;
        v139 = 0;
        pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::ApplyOperations(v95, (uint64_t **)&v127, (uint64_t)&v136);
        v96 = v139;
        if (v139 == &v136)
          break;
        if (v139)
        {
          v97 = 5;
LABEL_360:
          ((void (*)(void))(*v96)[v97])();
        }
        if (v95 == (_QWORD *)v94)
        {
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SdfListOp((uint64_t)&v136);
          pxrInternal__aapl__pxrReserved__::SdfListOp<unsigned long long>::SetExplicitItems(v98, (uint64_t)&v127);
          sub_20C0340F4((uint64_t)&v107, (uint64_t)&v136);
          sub_20C45CE70((uint64_t)*v100, (uint64_t)&v107);
          *((_BYTE *)v100 + 40) = 1;
          if (__p)
          {
            v121 = __p;
            operator delete(__p);
          }
          if (v118)
          {
            v119 = v118;
            operator delete(v118);
          }
          if (v116)
          {
            v117 = v116;
            operator delete(v116);
          }
          if (v114)
          {
            v115 = v114;
            operator delete(v114);
          }
          if (v112)
          {
            v113 = v112;
            operator delete(v112);
          }
          if (v108)
          {
            v109 = (std::type_info *)v108;
            operator delete(v108);
          }
          if (v148)
          {
            v149 = v148;
            operator delete(v148);
          }
          if (v146)
          {
            v147 = v146;
            operator delete(v146);
          }
          if (v144)
          {
            v145 = v144;
            operator delete(v144);
          }
          if (v142)
          {
            v143 = v142;
            operator delete(v142);
          }
          if (v140)
          {
            v141 = v140;
            operator delete(v140);
          }
          if (v137)
          {
            v138 = v137;
            operator delete(v137);
          }
          if (v127)
          {
            v128 = (void ***)v127;
            operator delete(v127);
          }
          goto LABEL_388;
        }
      }
      v96 = &v136;
      v97 = 4;
      goto LABEL_360;
    }
LABEL_388:
    pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v132);
    sub_20BFD265C(&v131);
    v136 = (void **)&v133;
    sub_20C45BB28(&v136);
  }
  else
  {
    if (sub_20BDE150C(v12, (uint64_t)&stru_24C524D30))
      return sub_20C49AFA0((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
    if (!sub_20BDE150C(v12, (uint64_t)&stru_24C524D40))
      return 1;
    return sub_20C49B604((uint64_t)v8, v10, a2, (uint64_t)v101, (uint64_t)a4);
  }
  return v20;
}

void sub_20C49A9C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  uint64_t v51;

  sub_20C45C87C((uint64_t)&a19);
  sub_20C031968((_QWORD *)(v51 - 248));
  sub_20BFD1A18(&a46);
  *(_QWORD *)(v51 - 248) = &a48;
  sub_20C45BB28((void ***)(v51 - 248));
  _Unwind_Resume(a1);
}

uint64_t sub_20C49AE10(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t *a4, uint64_t a5, uint64_t (****a6)(_QWORD, uint64_t))
{
  BOOL i;
  unint64_t PrimDefinition;
  unsigned __int8 v15;
  char v16;
  int v18;
  int v19;
  int v20;
  int v21;

  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v20);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v21);
  for (i = 1;
        *(_QWORD *)(a5 + 16) != *(_QWORD *)(a5 + 32) || *(_QWORD *)(a5 + 24) != *(_QWORD *)(a5 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a5))
  {
    if (i)
    {
      sub_20C453680(a5, a2, &v18);
      sub_20BFD3EBC(&v20, &v18);
      sub_20BFD3F10(&v21, &v19);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v19);
      sub_20BFD265C(&v18);
    }
    if (sub_20C45A368(a6, *(uint64_t **)(a5 + 48), (pxrInternal__aapl__pxrReserved__::SdfPath *)&v20, a3, a4))
    {
      v16 = 1;
      *((_BYTE *)a6 + 40) = 1;
      goto LABEL_16;
    }
    if (*((_BYTE *)a6 + 40))
    {
      v16 = 1;
      goto LABEL_16;
    }
  }
  PrimDefinition = atomic_load((unint64_t *)(*(_QWORD *)(a1 + 24) + 56));
  if (!PrimDefinition)
    PrimDefinition = pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo::_FindOrCreatePrimDefinition(*(pxrInternal__aapl__pxrReserved__::UsdPrimTypeInfo **)(a1 + 24));
  v15 = sub_20C45A220(PrimDefinition, a2, a3, a4, *a6);
  *((_BYTE *)a6 + 40) = v15;
  v16 = v15;
LABEL_16:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v21);
  sub_20BFD265C(&v20);
  return v16 & 1;
}

void sub_20C49AF78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20BFD1A18((int *)va);
  _Unwind_Resume(a1);
}

BOOL sub_20C49AFA0(uint64_t a1, const pxrInternal__aapl__pxrReserved__::TfToken *a2, const pxrInternal__aapl__pxrReserved__::TfToken *a3, uint64_t a4, uint64_t a5)
{
  BOOL i;
  _QWORD *v8;
  int HasField;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void ***v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE v33[8];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v41;
  int v42;
  int v43;
  uint64_t v44;
  void **v45;
  void ***v46;
  pxrInternal__aapl__pxrReserved__::Usd_PrimData *v47;
  int v48;
  int v49;
  uint64_t v50;
  void **v51[3];
  __int16 v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void **v58;
  _BYTE v59[16];
  void ***v60;
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[24];
  _QWORD v65[5];

  v65[3] = *MEMORY[0x24BDAC8D0];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v53);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v54);
  for (i = 1;
        *(_QWORD *)(a4 + 16) != *(_QWORD *)(a4 + 32) || *(_QWORD *)(a4 + 24) != *(_QWORD *)(a4 + 40);
        i = pxrInternal__aapl__pxrReserved__::Usd_Resolver::NextLayer((pxrInternal__aapl__pxrReserved__::Usd_Resolver *)a4))
  {
    if (i)
    {
      sub_20C453680(a4, a2, (int *)&v58);
      sub_20BFD3EBC(&v53, (int *)&v58);
      sub_20BFD3F10(&v54, (int *)&v58 + 1);
      pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL((_DWORD *)&v58 + 1);
      sub_20BFD265C(&v58);
    }
    pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
    v8 = (_QWORD *)sub_20C0EEAF8(*(uint64_t **)(a4 + 48));
    LOWORD(v48) = 0;
    v46 = &v58;
    v47 = (pxrInternal__aapl__pxrReserved__::Usd_PrimData *)&stru_24C524D30;
    v45 = (void **)&unk_24C52BEB0;
    HasField = pxrInternal__aapl__pxrReserved__::SdfLayer::HasField(v8, (pxrInternal__aapl__pxrReserved__::SdfPath *)&v53, a3, (uint64_t (***)(_QWORD, uint64_t))&v45);
    if ((_BYTE)v48)
      v10 = 0;
    else
      v10 = HasField;
    if (v10 == 1)
    {
      v11 = v56;
      if (v56 >= v57)
      {
        v12 = sub_20C45CF44(&v55, (uint64_t)&v58);
      }
      else
      {
        sub_20C02F650(v56, (uint64_t)&v58);
        v12 = v11 + 152;
      }
      v56 = v12;
    }
    v45 = (void **)v65;
    sub_20BDE5038(&v45);
    v45 = (void **)v64;
    sub_20BDE5038(&v45);
    v45 = (void **)v63;
    sub_20BDE5038(&v45);
    v45 = (void **)v62;
    sub_20BDE5038(&v45);
    v45 = (void **)v61;
    sub_20BDE5038(&v45);
    v45 = (void **)v59;
    sub_20BDE5038(&v45);
  }
  pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
  v51[2] = (void **)&stru_24C524D30;
  v52 = 0;
  v51[0] = (void **)&unk_24C52BEB0;
  v51[1] = (void **)&v58;
  LODWORD(v40) = 0;
  v41 = 0;
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPrimTag,24u,8u,16384u>::Handle::Handle(&v42);
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::Handle(&v43);
  v44 = 0;
  sub_20C4535E0((uint64_t)&v45, (uint64_t)v51, (uint64_t)&v40);
  if ((v44 & 7) != 0)
  {
    v13 = (unsigned int *)(v44 & 0xFFFFFFFFFFFFFFF8);
    do
      v14 = __ldxr(v13);
    while (__stlxr(v14 - 2, v13));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v43);
  sub_20BFD265C(&v42);
  if (v41)
    sub_20C35C614(v41);
  v40 = 0;
  v15 = sub_20C45B318(a1, a2, a3, &v40, (uint64_t)&v45);
  if ((v40 & 7) != 0)
  {
    v16 = (unsigned int *)(v40 & 0xFFFFFFFFFFFFFFF8);
    do
      v17 = __ldxr(v16);
    while (__stlxr(v17 - 2, v16));
  }
  if (v15)
  {
    v18 = v56;
    if (v56 >= v57)
    {
      v19 = sub_20C45CF44(&v55, (uint64_t)&v58);
    }
    else
    {
      sub_20C02F650(v56, (uint64_t)&v58);
      v19 = v18 + 152;
    }
    v56 = v19;
  }
  if ((v50 & 7) != 0)
  {
    v20 = (unsigned int *)(v50 & 0xFFFFFFFFFFFFFFF8);
    do
      v21 = __ldxr(v20);
    while (__stlxr(v21 - 2, v20));
  }
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v49);
  sub_20BFD265C(&v48);
  if (v47)
    sub_20C35C614(v47);
  v45 = (void **)v65;
  sub_20BDE5038(&v45);
  v45 = (void **)v64;
  sub_20BDE5038(&v45);
  v45 = (void **)v63;
  sub_20BDE5038(&v45);
  v45 = (void **)v62;
  sub_20BDE5038(&v45);
  v45 = (void **)v61;
  sub_20BDE5038(&v45);
  v45 = (void **)v59;
  sub_20BDE5038(&v45);
  v22 = v55;
  v23 = v56;
  if (v55 != v56)
  {
    v45 = 0;
    v46 = 0;
    v24 = v56;
    v47 = 0;
    while (1)
    {
      v24 -= 152;
      v60 = 0;
      pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::ApplyOperations(v24, (uint64_t *)&v45, (uint64_t)&v58);
      v25 = v60;
      if (v60 == &v58)
        break;
      if (v60)
      {
        v26 = 5;
LABEL_41:
        ((void (*)(void))(*v25)[v26])();
      }
      if (v24 == v22)
      {
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SdfListOp((uint64_t)&v58);
        pxrInternal__aapl__pxrReserved__::SdfListOp<std::string>::SetExplicitItems(v27, (uint64_t)&v45);
        sub_20C02F650((uint64_t)v33, (uint64_t)&v58);
        sub_20C45D304(*(_QWORD *)a5, (uint64_t)v33);
        *(_BYTE *)(a5 + 40) = 1;
        v51[0] = (void **)&v39;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v38;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v37;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v36;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v35;
        sub_20BDE5038(v51);
        v51[0] = (void **)&v34;
        sub_20BDE5038(v51);
        v51[0] = (void **)v65;
        sub_20BDE5038(v51);
        v51[0] = (void **)v64;
        sub_20BDE5038(v51);
        v51[0] = (void **)v63;
        sub_20BDE5038(v51);
        v51[0] = (void **)v62;
        sub_20BDE5038(v51);
        v51[0] = (void **)v61;
        sub_20BDE5038(v51);
        v51[0] = (void **)v59;
        sub_20BDE5038(v51);
        v58 = (void **)&v45;
        sub_20BDE5038(&v58);
        goto LABEL_44;
      }
    }
    v25 = &v58;
    v26 = 4;
    goto LABEL_41;
  }
LABEL_44:
  pxrInternal__aapl__pxrReserved__::Sdf_Pool<pxrInternal__aapl__pxrReserved__::Sdf_PathPropTag,24u,8u,16384u>::Handle::operator BOOL(&v54);
  sub_20BFD265C(&v53);
  v58 = (void **)&v55;
  sub_20C45D378(&v58);
  return v22 != v23;
}

