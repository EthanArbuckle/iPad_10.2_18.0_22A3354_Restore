BOOL sub_1C575B32C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v12;

  if (llvm::sampleprof::FunctionSamples::ProfileIsCSFlat)
  {
    v2 = a1[8];
    if (v2)
      return v2;
  }
  if (a1[11])
  {
    v3 = a1[9];
    if (!a1[14]
      || (v4 = a1[12], v5 = *(_DWORD *)(v3 + 32), v6 = *(_DWORD *)(v4 + 32), v5 < v6)
      || v5 == v6 && *(_DWORD *)(v3 + 36) < *(_DWORD *)(v4 + 36))
    {
      v2 = *(_QWORD *)(v3 + 40);
      goto LABEL_19;
    }
  }
  else
  {
    if (!a1[14])
      return a1[7] != 0;
    v4 = a1[12];
  }
  v7 = *(_QWORD **)(v4 + 40);
  v8 = (_QWORD *)(v4 + 48);
  if (v7 == (_QWORD *)(v4 + 48))
    return a1[7] != 0;
  v2 = 0;
  do
  {
    v9 = sub_1C575B32C(v7 + 7);
    v10 = (_QWORD *)v7[1];
    if (v10)
    {
      do
      {
        v11 = v10;
        v10 = (_QWORD *)*v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        v11 = (_QWORD *)v7[2];
        v12 = *v11 == (_QWORD)v7;
        v7 = v11;
      }
      while (!v12);
    }
    v2 += v9;
    v7 = v11;
  }
  while (v11 != v8);
LABEL_19:
  if (!v2)
    return a1[7] != 0;
  return v2;
}

BOOL sub_1C575B428(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  size_t v4;
  int v5;
  int v6;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v3 >= v2)
    v4 = *(_QWORD *)(a1 + 8);
  else
    v4 = *(_QWORD *)(a2 + 8);
  if (v4 && (v5 = memcmp(*(const void **)a1, *(const void **)a2, v4)) != 0)
  {
    v6 = (v5 >> 31) | 1;
  }
  else
  {
    if (v2 < v3)
      v6 = -1;
    else
      v6 = 1;
    if (v2 == v3)
      v6 = 0;
  }
  return v6 == -1;
}

_QWORD *sub_1C575B488(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v8;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = v4[5];
        if (!sub_1C575B428(a3, v8))
          break;
        v4 = (_QWORD *)*v7;
        v5 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (!sub_1C575B428(v8, a3))
        break;
      v5 = v7 + 1;
      v4 = (_QWORD *)v7[1];
    }
    while (v4);
  }
  else
  {
    v7 = (_QWORD *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

uint64_t *sub_1C575B518(uint64_t *result, uint64_t a2)
{
  uint64_t v2;

  v2 = *result;
  *result = a2;
  if (v2)
  {
    sub_1C62A2CDC(v2 + 40);
    sub_1C6143384(*(_QWORD **)(v2 + 24));
    JUMPOUT(0x1CAA32FC0);
  }
  return result;
}

void sub_1C575B56C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  size_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *i;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;
  BOOL v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  int v21;
  unsigned __int8 *v22;
  size_t v23;
  size_t v24;
  unsigned __int8 *v25;
  size_t v26;
  size_t v27;
  char v28;
  BOOL v29;
  unsigned __int8 *v30;
  size_t v31;
  size_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;

  v4 = (unsigned __int8 *)sub_1C575B7F4((uint64_t *)a2, *(char **)(a2 + 16));
  sub_1C62A273C(a1, v4, v5);
  v6 = *(_QWORD **)(a2 + 72);
  if (v6 != (_QWORD *)(a2 + 80))
  {
    do
    {
      v7 = *((unsigned int *)v6 + 14);
      if ((_DWORD)v7)
      {
        for (i = (uint64_t *)v6[6]; ; ++i)
        {
          v9 = !*i || *i == -8;
          if (!v9)
            break;
        }
      }
      else
      {
        i = (uint64_t *)v6[6];
      }
      v10 = v6[6] + 8 * v7;
      if (i != (uint64_t *)v10)
      {
        v11 = *i;
        do
        {
          sub_1C62A273C(a1, (unsigned __int8 *)(v11 + 16), *(_QWORD *)v11);
          v12 = (unsigned __int8 *)sub_1C575B7F4((uint64_t *)a2, *(char **)(a2 + 16));
          sub_1C62A28BC(a1, v12, v13, (unsigned __int8 *)(v11 + 16), *(_QWORD *)v11, *(_QWORD *)(v11 + 8));
          do
          {
            v14 = i[1];
            ++i;
            v11 = v14;
            if (v14)
              v15 = v11 == -8;
            else
              v15 = 1;
          }
          while (v15);
        }
        while (i != (uint64_t *)v10);
      }
      v16 = (_QWORD *)v6[1];
      if (v16)
      {
        do
        {
          v17 = v16;
          v16 = (_QWORD *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          v17 = (_QWORD *)v6[2];
          v9 = *v17 == (_QWORD)v6;
          v6 = v17;
        }
        while (!v9);
      }
      v6 = v17;
    }
    while (v17 != (_QWORD *)(a2 + 80));
  }
  v18 = *(_QWORD **)(a2 + 96);
  if (v18 != (_QWORD *)(a2 + 104))
  {
    do
    {
      v19 = (_QWORD *)v18[5];
      if (v19 != v18 + 6)
      {
        do
        {
          v20 = *((_BYTE *)v19 + 55);
          v21 = v20;
          if (v20 >= 0)
            v22 = (unsigned __int8 *)(v19 + 4);
          else
            v22 = (unsigned __int8 *)v19[4];
          v23 = v20 & 0x7F;
          if (v21 >= 0)
            v24 = v23;
          else
            v24 = v19[5];
          sub_1C62A273C(a1, v22, v24);
          v25 = (unsigned __int8 *)sub_1C575B7F4((uint64_t *)a2, *(char **)(a2 + 16));
          v27 = v26;
          v28 = *((_BYTE *)v19 + 55);
          v29 = v28 < 0;
          if (v28 >= 0)
            v30 = (unsigned __int8 *)(v19 + 4);
          else
            v30 = (unsigned __int8 *)v19[4];
          v31 = v28 & 0x7F;
          if (v29)
            v32 = v19[5];
          else
            v32 = v31;
          v33 = sub_1C575B32C(v19 + 7);
          sub_1C62A28BC(a1, v25, v27, v30, v32, v33);
          sub_1C575B56C(a1, v19 + 7);
          v34 = (_QWORD *)v19[1];
          if (v34)
          {
            do
            {
              v35 = v34;
              v34 = (_QWORD *)*v34;
            }
            while (v34);
          }
          else
          {
            do
            {
              v35 = (_QWORD *)v19[2];
              v9 = *v35 == (_QWORD)v19;
              v19 = v35;
            }
            while (!v9);
          }
          v19 = v35;
        }
        while (v35 != v18 + 6);
      }
      v36 = (_QWORD *)v18[1];
      if (v36)
      {
        do
        {
          v37 = v36;
          v36 = (_QWORD *)*v36;
        }
        while (v36);
      }
      else
      {
        do
        {
          v37 = (_QWORD *)v18[2];
          v9 = *v37 == (_QWORD)v18;
          v18 = v37;
        }
        while (!v9);
      }
      v18 = v37;
    }
    while (v37 != (_QWORD *)(a2 + 104));
  }
}

char *sub_1C575B7F4(uint64_t *a1, char *__s)
{
  char *v2;
  uint64_t v3;
  size_t v4;
  std::string::size_type v5;
  std::string *p_dst;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  std::string __dst;

  v2 = __s;
  if (!llvm::sampleprof::FunctionSamples::UseMD5)
    return v2;
  v3 = *a1;
  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    abort();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    p_dst = (std::string *)operator new(v7 + 1);
    __dst.__r_.__value_.__l.__size_ = v5;
    __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_10;
  }
  *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v4;
  p_dst = &__dst;
  if (v4)
LABEL_10:
    memmove(p_dst, v2, v5);
  p_dst->__r_.__value_.__s.__data_[v5] = 0;
  v9 = std::stoull(&__dst, 0, 10);
  v10 = *(_DWORD *)(v3 + 16);
  if (v10)
  {
    v11 = v10 - 1;
    v12 = v11 & (37 * v9);
    v13 = (uint64_t *)(*(_QWORD *)v3 + 24 * v12);
    v14 = *v13;
    if (v9 == *v13)
    {
LABEL_13:
      v2 = (char *)v13[1];
      goto LABEL_19;
    }
    v15 = 1;
    while (v14 != -1)
    {
      v16 = v12 + v15++;
      v12 = v16 & v11;
      v13 = (uint64_t *)(*(_QWORD *)v3 + 24 * v12);
      v14 = *v13;
      if (v9 == *v13)
        goto LABEL_13;
    }
  }
  v2 = 0;
LABEL_19:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  return v2;
}

_QWORD *sub_1C575B950(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  result[8] = result[7];
  v2 = result[10];
  v1 = result[11];
  if (v2 != v1)
  {
    v3 = result;
    v4 = (uint64_t)(result + 1);
    while (1)
    {
      v5 = (_QWORD *)(v1 - 16);
      v6 = *(_QWORD **)(v1 - 16);
      if (v6 != (_QWORD *)(*(_QWORD *)(v1 - 24) + 24))
      {
        do
        {
          v7 = (_QWORD *)v6[1];
          v8 = v6;
          if (v7)
          {
            do
            {
              v9 = v7;
              v7 = (_QWORD *)*v7;
            }
            while (v7);
          }
          else
          {
            do
            {
              v9 = (_QWORD *)v8[2];
              v11 = *v9 == (_QWORD)v8;
              v8 = v9;
            }
            while (!v11);
          }
          *v5 = v9;
          v10 = v6[5];
          v26 = 0;
          if (sub_1C6144BDC(v3[1], *((_DWORD *)v3 + 6), v10, &v26))
            v11 = v26 == v3[1] + 16 * *((unsigned int *)v3 + 6);
          else
            v11 = 1;
          if (v11)
          {
            sub_1C62A2E28((int *)v3, v10);
            v1 = v3[11];
          }
          else
          {
            v12 = *(_DWORD *)(v26 + 8);
            v1 = v3[11];
            if (*(_DWORD *)(v1 - 8) > v12)
              *(_DWORD *)(v1 - 8) = v12;
          }
          v5 = (_QWORD *)(v1 - 16);
          v6 = *(_QWORD **)(v1 - 16);
        }
        while (v6 != (_QWORD *)(*(_QWORD *)(v1 - 24) + 24));
        v2 = v3[10];
      }
      v26 = 0;
      v26 = *(_QWORD *)(v1 - 24);
      v13 = *(_DWORD *)(v1 - 8);
      v3[11] = v1 - 24;
      if (v2 != v1 - 24 && *(_DWORD *)(v1 - 32) > v13)
        *(_DWORD *)(v1 - 32) = v13;
      result = sub_1C6144C70(v4, &v26);
      if (v13 == *((_DWORD *)result + 2))
        break;
      v2 = v3[10];
      v1 = v3[11];
      if (v2 == v1)
        return result;
    }
    v14 = (_QWORD *)v3[8];
    do
    {
      v15 = v3[5];
      v16 = v3[9];
      if ((unint64_t)v14 >= v16)
      {
        v18 = (_QWORD *)v3[7];
        v19 = v14 - v18;
        v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 61)
          abort();
        v21 = v16 - (_QWORD)v18;
        if (v21 >> 2 > v20)
          v20 = v21 >> 2;
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8)
          v22 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v22 = v20;
        if (v22)
        {
          if (v22 >> 61)
            sub_1C4764EE4();
          v23 = (char *)operator new(8 * v22);
        }
        else
        {
          v23 = 0;
        }
        v24 = &v23[8 * v19];
        *(_QWORD *)v24 = *(_QWORD *)(v15 - 8);
        v17 = v24 + 8;
        if (v14 != v18)
        {
          do
          {
            v25 = *--v14;
            *((_QWORD *)v24 - 1) = v25;
            v24 -= 8;
          }
          while (v14 != v18);
          v14 = (_QWORD *)v3[7];
        }
        v3[7] = v24;
        v3[8] = v17;
        v3[9] = &v23[8 * v22];
        if (v14)
          operator delete(v14);
      }
      else
      {
        *v14 = *(_QWORD *)(v15 - 8);
        v17 = v14 + 1;
      }
      v3[8] = v17;
      v3[5] -= 8;
      result = sub_1C6144C70(v4, v17 - 1);
      *((_DWORD *)result + 2) = -1;
      v14 = (_QWORD *)v3[8];
    }
    while (*(v14 - 1) != v26);
  }
  return result;
}

char *sub_1C575BBCC(void **a1, uint64_t a2)
{
  char *v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;

  v3 = (char *)*a1;
  v2 = (char *)a1[1];
  v4 = 0xAAAAAAAAAAAAAAABLL * ((v2 - (_BYTE *)*a1) >> 3);
  v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL)
    abort();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - v3) >> 3) > v5)
    v5 = 0x5555555555555556 * (((_BYTE *)a1[2] - v3) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - v3) >> 3) >= 0x555555555555555)
    v8 = 0xAAAAAAAAAAAAAAALL;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL)
      sub_1C4764EE4();
    v9 = (char *)operator new(24 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[24 * v4];
  *(_OWORD *)v10 = *(_OWORD *)a2;
  *((_QWORD *)v10 + 2) = *(_QWORD *)(a2 + 16);
  v11 = v10 + 24;
  if (v2 != v3)
  {
    do
    {
      v12 = *(_OWORD *)(v2 - 24);
      *((_DWORD *)v10 - 2) = *((_DWORD *)v2 - 2);
      *(_OWORD *)(v10 - 24) = v12;
      v10 -= 24;
      v2 -= 24;
    }
    while (v2 != v3);
    v2 = (char *)*a1;
  }
  *a1 = v10;
  a1[1] = v11;
  a1[2] = &v9[24 * v8];
  if (v2)
    operator delete(v2);
  return v11;
}

_QWORD *sub_1C575BCE4(float *a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  _QWORD **v11;
  _QWORD *i;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  _BOOL8 v17;
  unint64_t v18;
  unint64_t v19;
  int8x8_t prime;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint8x8_t v26;
  unint64_t v27;
  uint8x8_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v36;

  v6 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  v7 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v6 >> 47) ^ v6);
  v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  v9 = *((_QWORD *)a1 + 1);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9)
        v3 = v8 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
    v11 = *(_QWORD ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (_QWORD *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == a2)
            return i;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x28uLL);
  *i = 0;
  i[1] = v8;
  v14 = *a3;
  i[3] = i + 3;
  i[4] = 0x100000000;
  i[2] = v14;
  v15 = (float)(unint64_t)(*((_QWORD *)a1 + 3) + 1);
  v16 = a1[8];
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    v17 = 1;
    if (v9 >= 3)
      v17 = (v9 & (v9 - 1)) != 0;
    v18 = v17 | (2 * v9);
    v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19)
      prime = (int8x8_t)v19;
    else
      prime = (int8x8_t)v18;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v9 = *((_QWORD *)a1 + 1);
    }
    if (*(_QWORD *)&prime > v9)
      goto LABEL_30;
    if (*(_QWORD *)&prime < v9)
    {
      v27 = vcvtps_u32_f32((float)*((unint64_t *)a1 + 3) / a1[8]);
      if (v9 < 3 || (v28 = (uint8x8_t)vcnt_s8((int8x8_t)v9), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        v27 = std::__next_prime(v27);
      }
      else
      {
        v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2)
          v27 = v29;
      }
      if (*(_QWORD *)&prime <= v27)
        prime = (int8x8_t)v27;
      if (*(_QWORD *)&prime >= v9)
      {
        v9 = *((_QWORD *)a1 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_30:
          if (*(_QWORD *)&prime >> 61)
            sub_1C4764EE4();
          v21 = operator new(8 * *(_QWORD *)&prime);
          v22 = *(_QWORD **)a1;
          *(_QWORD *)a1 = v21;
          if (v22)
            operator delete(v22);
          v23 = 0;
          *((int8x8_t *)a1 + 1) = prime;
          do
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v23++) = 0;
          while (*(_QWORD *)&prime != v23);
          v24 = (_QWORD *)*((_QWORD *)a1 + 2);
          if (v24)
          {
            v25 = v24[1];
            v26 = (uint8x8_t)vcnt_s8(prime);
            v26.i16[0] = vaddlv_u8(v26);
            if (v26.u32[0] > 1uLL)
            {
              if (v25 >= *(_QWORD *)&prime)
                v25 %= *(_QWORD *)&prime;
            }
            else
            {
              v25 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v25) = a1 + 4;
            v30 = (_QWORD *)*v24;
            if (*v24)
            {
              do
              {
                v31 = v30[1];
                if (v26.u32[0] > 1uLL)
                {
                  if (v31 >= *(_QWORD *)&prime)
                    v31 %= *(_QWORD *)&prime;
                }
                else
                {
                  v31 &= *(_QWORD *)&prime - 1;
                }
                if (v31 != v25)
                {
                  if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v31))
                  {
                    *(_QWORD *)(*(_QWORD *)a1 + 8 * v31) = v24;
                    goto LABEL_55;
                  }
                  *v24 = *v30;
                  *v30 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v31);
                  **(_QWORD **)(*(_QWORD *)a1 + 8 * v31) = v30;
                  v30 = v24;
                }
                v31 = v25;
LABEL_55:
                v24 = v30;
                v30 = (_QWORD *)*v30;
                v25 = v31;
              }
              while (v30);
            }
          }
          v9 = (unint64_t)prime;
          goto LABEL_59;
        }
        v36 = *(_QWORD **)a1;
        *(_QWORD *)a1 = 0;
        if (v36)
          operator delete(v36);
        v9 = 0;
        *((_QWORD *)a1 + 1) = 0;
      }
    }
LABEL_59:
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v32 = *(_QWORD **)a1;
  v33 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v33)
  {
    *i = *v33;
LABEL_72:
    *v33 = i;
    goto LABEL_73;
  }
  *i = *((_QWORD *)a1 + 2);
  *((_QWORD *)a1 + 2) = i;
  v32[v3] = a1 + 4;
  if (*i)
  {
    v34 = *(_QWORD *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v34 >= v9)
        v34 %= v9;
    }
    else
    {
      v34 &= v9 - 1;
    }
    v33 = (_QWORD *)(*(_QWORD *)a1 + 8 * v34);
    goto LABEL_72;
  }
LABEL_73:
  ++*((_QWORD *)a1 + 3);
  return i;
}

BOOL sub_1C575C0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _BOOL8 result;
  float v9;
  unint64_t v10;
  _BYTE v11[12];
  float v12;
  char v13;

  if (*(_BYTE *)(a3 + 16) == 84)
  {
    v6 = *(_QWORD *)(a3 - 32);
    if (v6)
    {
      if (!*(_BYTE *)(v6 + 16) && *(_QWORD *)(v6 + 24) == *(_QWORD *)(a3 + 72) && (*(_BYTE *)(v6 + 33) & 0x20) != 0)
        return 0;
    }
  }
  v7 = sub_1C575AF70(a1, (llvm *)a3);
  if (v7 || (result = sub_1C575E3DC(*(_QWORD *)(a1 + 1392), a3)))
  {
    llvm::extractProbe((llvm *)a3, (uint64_t)v11);
    if (v13)
      v9 = v12;
    else
      v9 = 1.0;
    if (v7)
      v10 = (unint64_t)(float)(v9 * (float)sub_1C575B32C(v7));
    else
      v10 = 0;
    *(_QWORD *)a2 = a3;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v10;
    result = 1;
    *(float *)(a2 + 24) = v9;
  }
  return result;
}

void sub_1C575C1E0(unint64_t *a1, uint64_t a2, llvm *this, _QWORD *a4)
{
  const llvm::DILocation *v4;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unint64_t v27;
  char v28;
  char *i;
  BOOL v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v4 = (const llvm::DILocation *)*((_QWORD *)this + 6);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  if (v4)
  {
    if (*(_BYTE *)(a2 + 1280))
    {
      llvm::SampleContextTracker::getIndirectCalleeContextSamplesFor(*(llvm::SampleContextTracker **)(a2 + 1272), v4, &v61);
      v7 = v61;
      v8 = v62;
      if (v61 != v62)
      {
        v9 = 0;
        *a4 = 0;
        do
        {
          v10 = *(_QWORD *)v7;
          *a4 += sub_1C575B32C(*(_QWORD **)v7);
          v11 = a1[2];
          if ((unint64_t)v9 >= v11)
          {
            v12 = (_QWORD *)*a1;
            v13 = (uint64_t)((uint64_t)v9 - *a1) >> 3;
            v14 = v13 + 1;
            if ((unint64_t)(v13 + 1) >> 61)
              goto LABEL_99;
            v15 = v11 - (_QWORD)v12;
            if (v15 >> 2 > v14)
              v14 = v15 >> 2;
            if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8)
              v16 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v16 = v14;
            if (v16)
            {
              if (v16 >> 61)
                goto LABEL_100;
              v17 = (char *)operator new(8 * v16);
            }
            else
            {
              v17 = 0;
            }
            v18 = &v17[8 * v13];
            *(_QWORD *)v18 = v10;
            v19 = v18 + 8;
            if (v9 != v12)
            {
              do
              {
                v20 = *--v9;
                *((_QWORD *)v18 - 1) = v20;
                v18 -= 8;
              }
              while (v9 != v12);
              v9 = (_QWORD *)*a1;
            }
            *a1 = (unint64_t)v18;
            a1[1] = (unint64_t)v19;
            a1[2] = (unint64_t)&v17[8 * v16];
            if (v9)
              operator delete(v9);
            v9 = v19;
          }
          else
          {
            *v9++ = v10;
          }
          a1[1] = (unint64_t)v9;
          v7 += 8;
        }
        while (v7 != v8);
        v21 = 126 - 2 * __clz((uint64_t)((uint64_t)v9 - *a1) >> 3);
        if (v9 == (_QWORD *)*a1)
          v22 = 0;
        else
          v22 = v21;
        sub_1C575E6B8(*a1, v9, v22, 1);
        v7 = v61;
      }
      if (v7)
        operator delete(v7);
    }
    else
    {
      v23 = sub_1C575AA78(a2, this);
      if (v23)
      {
        v24 = (uint64_t)v23;
        v25 = llvm::sampleprof::FunctionSamples::getCallSiteIdentifier((uint64_t)v4, 0);
        v26 = v25;
        v27 = HIDWORD(v25);
        sub_1C62A284C((uint64_t)&v61, v24, v25, HIDWORD(v25));
        *a4 = 0;
        v28 = v63;
        if ((v63 & 1) == 0)
        {
          if ((_DWORD)v62)
          {
            for (i = v61; ; i += 8)
            {
              v30 = !*(_QWORD *)i || *(_QWORD *)i == -8;
              if (!v30)
                break;
            }
          }
          else
          {
            i = v61;
          }
          v31 = &v61[8 * v62];
          if (i != v31)
          {
            v32 = 0;
            v33 = *(_QWORD *)i;
            do
            {
              v32 += *(_QWORD *)(v33 + 8);
              *a4 = v32;
              do
              {
                v34 = *((_QWORD *)i + 1);
                i += 8;
                v33 = v34;
                if (v34)
                  v35 = v33 == -8;
                else
                  v35 = 1;
              }
              while (v35);
            }
            while (i != v31);
          }
        }
        v38 = *(uint64_t **)(v24 + 104);
        v37 = v24 + 104;
        v36 = v38;
        if (v38)
        {
          v39 = v37;
          do
          {
            v40 = *((_DWORD *)v36 + 8);
            if (v40 >= v26)
            {
              if (v40 == v26)
              {
                if (*((_DWORD *)v36 + 9) < v27)
                  ++v36;
                else
                  v39 = (uint64_t)v36;
              }
              else
              {
                v39 = (uint64_t)v36;
              }
            }
            else
            {
              ++v36;
            }
            v36 = (uint64_t *)*v36;
          }
          while (v36);
          if (v39 != v37)
          {
            v41 = *(_DWORD *)(v39 + 32);
            if (v41 <= v26 && (v41 != v26 || *(_DWORD *)(v39 + 36) <= v27))
            {
              if (*(_QWORD *)(v39 + 56))
              {
                v42 = *(_QWORD **)(v39 + 40);
                v43 = (_QWORD *)(v39 + 48);
                if (v42 == (_QWORD *)(v39 + 48))
                {
                  v44 = 0;
                  v58 = 0;
                }
                else
                {
                  v44 = 0;
                  do
                  {
                    v45 = v42 + 7;
                    *a4 += sub_1C575B32C(v42 + 7);
                    v46 = a1[2];
                    if ((unint64_t)v44 >= v46)
                    {
                      v47 = *a1;
                      v48 = (uint64_t)((uint64_t)v44 - *a1) >> 3;
                      v49 = v48 + 1;
                      if ((unint64_t)(v48 + 1) >> 61)
LABEL_99:
                        abort();
                      v50 = v46 - v47;
                      if (v50 >> 2 > v49)
                        v49 = v50 >> 2;
                      if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFF8)
                        v51 = 0x1FFFFFFFFFFFFFFFLL;
                      else
                        v51 = v49;
                      if (v51)
                      {
                        if (v51 >> 61)
LABEL_100:
                          sub_1C4764EE4();
                        v52 = (char *)operator new(8 * v51);
                      }
                      else
                      {
                        v52 = 0;
                      }
                      v53 = &v52[8 * v48];
                      *(_QWORD *)v53 = v45;
                      v54 = v53 + 8;
                      if (v44 != (_QWORD *)v47)
                      {
                        do
                        {
                          v55 = *--v44;
                          *((_QWORD *)v53 - 1) = v55;
                          v53 -= 8;
                        }
                        while (v44 != (_QWORD *)v47);
                        v44 = (_QWORD *)*a1;
                      }
                      *a1 = (unint64_t)v53;
                      a1[2] = (unint64_t)&v52[8 * v51];
                      if (v44)
                        operator delete(v44);
                      v44 = v54;
                    }
                    else
                    {
                      *v44++ = v45;
                    }
                    a1[1] = (unint64_t)v44;
                    v56 = (_QWORD *)v42[1];
                    if (v56)
                    {
                      do
                      {
                        v57 = v56;
                        v56 = (_QWORD *)*v56;
                      }
                      while (v56);
                    }
                    else
                    {
                      do
                      {
                        v57 = (_QWORD *)v42[2];
                        v30 = *v57 == (_QWORD)v42;
                        v42 = v57;
                      }
                      while (!v30);
                    }
                    v42 = v57;
                  }
                  while (v57 != v43);
                  v58 = *a1;
                }
                v59 = 126 - 2 * __clz((uint64_t)((uint64_t)v44 - v58) >> 3);
                if (v44 == (_QWORD *)v58)
                  v60 = 0;
                else
                  v60 = v59;
                sub_1C575E6B8(v58, v44, v60, 1);
                v28 = v63;
              }
            }
          }
        }
        if ((v28 & 1) == 0)
          sub_1C61A8A20((uint64_t)&v61);
      }
    }
  }
}

_QWORD *sub_1C575C634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  size_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  size_t v18;
  size_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t *v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  size_t v36;
  int v37;
  size_t v38;
  size_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t ***v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t ****v63;
  uint64_t ***v64;
  int v65;
  int v66;
  uint64_t ***v67;
  int *v68;
  size_t v69;
  size_t v70;
  _QWORD *v71;
  _QWORD *v72;
  int v74[2];
  uint64_t v77;
  uint64_t v78;
  char *__s1;
  unint64_t v80;
  _OWORD v81[2];
  __int128 v82;
  _QWORD *ContextFor;
  uint64_t v84[3];

  if (!a2 || !sub_1C575E3DC(*(_QWORD *)(a1 + 1392), a2))
    goto LABEL_5;
  if (a3)
  {
    a6 = 0;
LABEL_5:
    if (!*(_BYTE *)(a1 + 1280))
      return (_QWORD *)sub_1C575FB6C(a3, a4, (uint64_t *)a5, a6);
    ContextFor = llvm::SampleContextTracker::getContextFor(*(_QWORD *)(a1 + 1272), a3 + 16);
    v82 = 0u;
    memset(v81, 0, sizeof(v81));
    sub_1C48410F0(v81, &ContextFor);
    while (1)
    {
      while (1)
      {
        if (!*((_QWORD *)&v82 + 1))
          return (_QWORD *)sub_1C484143C((uint64_t)v81);
        v10 = *(_QWORD **)(*(_QWORD *)(*((_QWORD *)&v81[0] + 1) + (((unint64_t)v82 >> 6) & 0x3FFFFFFFFFFFFF8))
                         + 8 * (v82 & 0x1FF));
        *(_QWORD *)&v82 = v82 + 1;
        --*((_QWORD *)&v82 + 1);
        if ((unint64_t)v82 >= 0x400)
        {
          operator delete(**((void ***)&v81[0] + 1));
          *((_QWORD *)&v81[0] + 1) += 8;
          *(_QWORD *)&v82 = v82 - 512;
        }
        v11 = v10[6];
        if (v11)
        {
          *(_QWORD *)v74 = v10[6];
          if (byte_1ED80F908)
          {
            if ((*(_BYTE *)(v11 + 52) & 2) != 0)
              break;
          }
          v12 = sub_1C575B32C((_QWORD *)v11);
          v11 = *(_QWORD *)v74;
          if (v12 >= a6)
            break;
        }
      }
      v71 = v10;
      v13 = sub_1C575B7F4((uint64_t *)v11, *(char **)(v11 + 16));
      v15 = *(unsigned int *)(a5 + 8);
      if (!(_DWORD)v15)
        break;
      v16 = v13;
      v17 = 0;
      v18 = v14;
      if (v14)
      {
        v19 = v14;
        v20 = v13;
        do
        {
          v21 = *v20++;
          v17 = 33 * v17 + v21;
          --v19;
        }
        while (v19);
      }
      v22 = *(_QWORD *)a5;
      v23 = *(_QWORD *)a5 + 8 * v15 + 8;
      v24 = *(unsigned int *)(a5 + 20);
      v25 = 1;
      v26 = v17;
      while (1)
      {
        v27 = v26 & (v15 - 1);
        v28 = *(_QWORD **)(v22 + 8 * v27);
        if (v28 != (_QWORD *)-8)
        {
          if (!v28)
            goto LABEL_36;
          if (*(_DWORD *)(v23 + 4 * v27) == v17 && v18 == *v28 && (!v18 || !memcmp(v16, (char *)v28 + v24, v18)))
            break;
        }
        v26 = v25 + v27;
        ++v25;
      }
      if ((_DWORD)v27 == -1)
        break;
      if ((int)v27 == v15)
        break;
      v29 = *(_QWORD *)(*(_QWORD *)(v22 + 8 * (int)v27) + 8);
      if (!v29)
        break;
      if (*(_BYTE *)(v29 + 16))
      {
        if (*(_BYTE *)(v29 + 16) == 3 && (*(_DWORD *)(v29 + 20) & 0x7FFFFFF) == 0)
          break;
      }
      else if (*(_QWORD *)(v29 + 72) == v29 + 72 && (*(_BYTE *)(v29 + 34) & 0x80) == 0)
      {
        break;
      }
LABEL_37:
      v30 = *(_QWORD **)(*(_QWORD *)v74 + 72);
      if (v30 != (_QWORD *)(*(_QWORD *)v74 + 80))
      {
        while (1)
        {
          v31 = *((unsigned int *)v30 + 14);
          v72 = v30;
          v32 = (uint64_t *)v30[6];
          if ((_DWORD)v31)
          {
            while (1)
            {
              v33 = !*v32 || *v32 == -8;
              if (!v33)
                break;
              ++v32;
            }
          }
          v77 = v30[6] + 8 * v31;
          if (v32 != (uint64_t *)v77)
            break;
LABEL_75:
          v52 = v72;
          v53 = (_QWORD *)v72[1];
          if (v53)
          {
            do
            {
              v54 = v53;
              v53 = (_QWORD *)*v53;
            }
            while (v53);
          }
          else
          {
            do
            {
              v54 = (_QWORD *)v52[2];
              v33 = *v54 == (_QWORD)v52;
              v52 = v54;
            }
            while (!v33);
          }
          v30 = v54;
          if (v54 == (_QWORD *)(*(_QWORD *)v74 + 80))
            goto LABEL_81;
        }
        v34 = *v32;
        while (2)
        {
          if (*(_QWORD *)(v34 + 8) <= a6)
            goto LABEL_70;
          v35 = sub_1C575B7F4(*(uint64_t **)v74, (char *)(v34 + 16));
          v78 = *(unsigned int *)(a5 + 8);
          __s1 = v35;
          if ((_DWORD)v78)
          {
            v37 = 0;
            v38 = v36;
            if (v36)
            {
              v39 = v36;
              v40 = v35;
              do
              {
                v41 = *v40++;
                v37 = 33 * v37 + v41;
                --v39;
              }
              while (v39);
            }
            v42 = *(_QWORD *)a5;
            v43 = *(_QWORD *)a5 + 8 * v78 + 8;
            v44 = *(unsigned int *)(a5 + 20);
            v45 = 1;
            v46 = v37;
            while (1)
            {
              v47 = v46 & (v78 - 1);
              v48 = *(_QWORD **)(v42 + 8 * v47);
              if (v48 != (_QWORD *)-8)
              {
                if (!v48)
                  goto LABEL_69;
                if (*(_DWORD *)(v43 + 4 * v47) == v37 && v38 == *v48 && (!v38 || !memcmp(__s1, (char *)v48 + v44, v38)))
                  break;
              }
              v46 = v45 + v47;
              ++v45;
            }
            if ((_DWORD)v47 != -1 && (int)v47 != v78)
            {
              v49 = *(_QWORD *)(*(_QWORD *)(v42 + 8 * (int)v47) + 8);
              if (v49)
              {
                if (*(_BYTE *)(v49 + 16))
                {
                  if (*(_BYTE *)(v49 + 16) == 3 && (*(_DWORD *)(v49 + 20) & 0x7FFFFFF) == 0)
                    break;
                  do
                  {
LABEL_70:
                    v50 = v32[1];
                    ++v32;
                    v34 = v50;
                    if (v50)
                      v51 = v34 == -8;
                    else
                      v51 = 1;
                  }
                  while (v51);
                  if (v32 == (uint64_t *)v77)
                    goto LABEL_75;
                  continue;
                }
                if (*(_QWORD *)(v49 + 72) != v49 + 72 || (*(_BYTE *)(v49 + 34) & 0x80) != 0)
                  goto LABEL_70;
              }
            }
          }
          break;
        }
LABEL_69:
        v80 = sub_1C575E2A0((int *)(v34 + 16), *(_QWORD *)v34);
        sub_1C61A7854(a4, (uint64_t *)&v80, (uint64_t)v84);
        goto LABEL_70;
      }
LABEL_81:
      v55 = (_QWORD *)*v71;
      if ((_QWORD *)*v71 != v71 + 1)
      {
        do
        {
          v84[0] = (uint64_t)(v55 + 5);
          sub_1C48410F0(v81, v84);
          v56 = (_QWORD *)v55[1];
          if (v56)
          {
            do
            {
              v57 = v56;
              v56 = (_QWORD *)*v56;
            }
            while (v56);
          }
          else
          {
            do
            {
              v57 = (_QWORD *)v55[2];
              v33 = *v57 == (_QWORD)v55;
              v55 = v57;
            }
            while (!v33);
          }
          v55 = v57;
        }
        while (v57 != v71 + 1);
      }
    }
LABEL_36:
    v80 = sub_1C575E2A0(*(int **)(*(_QWORD *)v74 + 16), *(_QWORD *)(*(_QWORD *)v74 + 24));
    sub_1C61A7854(a4, (uint64_t *)&v80, (uint64_t)v84);
    goto LABEL_37;
  }
  v58 = *(uint64_t ****)(a2 - 32);
  if (!v58 || *((_BYTE *)v58 + 16) || v58[3] != *(uint64_t ***)(a2 + 72))
    v58 = 0;
  if ((*((_BYTE *)v58 + 23) & 0x10) == 0)
  {
    v69 = 0;
    v68 = (int *)&byte_1C871356D;
    goto LABEL_103;
  }
  v59 = ***v58;
  v60 = *(_QWORD *)(v59 + 152);
  v61 = *(unsigned int *)(v59 + 168);
  if (!(_DWORD)v61)
    goto LABEL_101;
  LODWORD(v62) = (v61 - 1) & ((v58 >> 4) ^ (v58 >> 9));
  v63 = (uint64_t ****)(v60 + 16 * v62);
  v64 = *v63;
  if (*v63 != v58)
  {
    v65 = 1;
    while (v64 != (uint64_t ***)-4096)
    {
      v66 = v62 + v65++;
      v62 = v66 & (v61 - 1);
      v64 = *(uint64_t ****)(v60 + 16 * v62);
      if (v64 == v58)
      {
        v63 = (uint64_t ****)(v60 + 16 * v62);
        goto LABEL_102;
      }
    }
LABEL_101:
    v63 = (uint64_t ****)(v60 + 16 * v61);
  }
LABEL_102:
  v67 = v63[1];
  v70 = (size_t)*v67;
  v68 = (int *)(v67 + 2);
  v69 = v70;
LABEL_103:
  v84[0] = sub_1C575E2A0(v68, v69);
  return sub_1C61A7854(a4, v84, (uint64_t)v81);
}

uint64_t sub_1C575CBFC(uint64_t a1, const llvm::CallBase *a2, uint64_t a3, unint64_t a4, unint64_t *a5, uint64_t a6)
{
  BOOL v6;
  char v7;
  char *v15;
  size_t v16;
  uint64_t v17;
  char *v18;
  size_t v19;
  int v20;
  size_t v21;
  char *v22;
  int v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t ***v30;
  llvm::Type **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ****v36;
  uint64_t ***v37;
  int v38;
  int v39;
  uint64_t ***v40;
  size_t v41;
  int *v42;
  size_t v43;
  size_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  _QWORD *v49;
  uint64_t v50;
  const char **v51;
  uint64_t ***v52;
  BOOL v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  unsigned int v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  int v62;
  BOOL v63;
  unsigned int v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  unint64_t v74;
  unsigned int v75;
  int i;
  unsigned int v77;
  uint64_t *v78;
  uint64_t v79;
  BOOL v80;
  const llvm::CallBase *v82;
  uint64_t ***v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t ****v88;
  uint64_t ***v89;
  int v90;
  int v91;
  _QWORD *v92;
  void *v93;
  uint64_t ***v94;
  int *v95;
  size_t v96;
  size_t v97;
  uint64_t v98;
  llvm::OptimizationRemarkEmitter *v99;
  unsigned __int8 *v100;
  int v101;
  llvm::Instruction *v102;
  int v103;
  unint64_t v104;
  llvm *v105;
  _QWORD *v106;
  unint64_t v107;
  uint64_t v108;
  const llvm::CallBase *v109;
  unsigned __int8 **v110;
  uint64_t v111;
  unsigned int v112;
  int v113[4];
  void *v114[2];
  _QWORD v115[20];

  v115[18] = *MEMORY[0x1E0C80C00];
  if (byte_1ED80F608)
    v6 = 1;
  else
    v6 = dword_1ED80FA88 == 0;
  if (v6)
    goto LABEL_6;
  v15 = sub_1C575B7F4(*(uint64_t **)(a3 + 8), *(char **)(*(_QWORD *)(a3 + 8) + 16));
  v17 = *(unsigned int *)(a1 + 1152);
  if (!(_DWORD)v17)
    goto LABEL_6;
  v18 = v15;
  v19 = v16;
  v109 = a2;
  v110 = (unsigned __int8 **)a3;
  v107 = a4;
  v108 = a6;
  v20 = 0;
  if (v16)
  {
    v21 = v16;
    v22 = v15;
    do
    {
      v23 = *v22++;
      v20 = 33 * v20 + v23;
      --v21;
    }
    while (v21);
  }
  v24 = *(_QWORD *)(a1 + 1144);
  v25 = 1;
  v26 = v20;
  while (1)
  {
    v27 = v26 & (v17 - 1);
    v28 = *(_QWORD **)(v24 + 8 * v27);
    if (v28 != (_QWORD *)-8)
    {
      if (!v28)
        goto LABEL_6;
      if (*(_DWORD *)(v24 + 8 * v17 + 8 + 4 * v27) == v20
        && v19 == *v28
        && (!v19 || !memcmp(v18, (char *)v28 + *(unsigned int *)(a1 + 1164), v19)))
      {
        break;
      }
    }
    v26 = v25 + v27;
    ++v25;
  }
  if ((_DWORD)v27 == -1)
    goto LABEL_6;
  v29 = (int)v27;
  if ((int)v27 == v17)
    goto LABEL_6;
  v30 = *(uint64_t ****)(*(_QWORD *)(v24 + 8 * (int)v27) + 8);
  if (!v30)
    goto LABEL_6;
  v31 = (llvm::Type **)*v110;
  if ((*((_BYTE *)v30 + 23) & 0x10) != 0)
  {
    v32 = ***v30;
    v33 = *(_QWORD *)(v32 + 152);
    v34 = *(unsigned int *)(v32 + 168);
    if ((_DWORD)v34)
    {
      LODWORD(v35) = (v34 - 1) & ((v30 >> 4) ^ (v30 >> 9));
      v36 = (uint64_t ****)(v33 + 16 * v35);
      v37 = *v36;
      if (*v36 == v30)
      {
LABEL_31:
        v40 = v36[1];
        v43 = (size_t)*v40;
        v42 = (int *)(v40 + 2);
        v41 = v43;
        goto LABEL_32;
      }
      v38 = 1;
      while (v37 != (uint64_t ***)-4096)
      {
        v39 = v35 + v38++;
        v35 = v39 & (v34 - 1);
        v37 = *(uint64_t ****)(v33 + 16 * v35);
        if (v37 == v30)
        {
          v36 = (uint64_t ****)(v33 + 16 * v35);
          goto LABEL_31;
        }
      }
    }
    v36 = (uint64_t ****)(v33 + 16 * v34);
    goto LABEL_31;
  }
  v41 = 0;
  v42 = (int *)&byte_1C871356D;
LABEL_32:
  v112 = 0;
  v111 = 0;
  v44 = 16 * dword_1ED80FA88;
  v45 = (_QWORD *)operator new[]();
  bzero(v45, v44);
  if (llvm::getValueProfDataFromInst((uint64_t)v31, 0, dword_1ED80FA88, (uint64_t)v45, &v112, &v111, 1))
  {
    v105 = (llvm *)v31;
    v106 = v45;
    v46 = v112;
    if (v112)
    {
      v47 = 0;
      v48 = 0;
      v49 = v45 + 1;
      do
      {
        if (*v49 == -1)
        {
          v50 = *(v49 - 1);
          *(_OWORD *)v114 = xmmword_1C85F4BB0;
          v115[0] = 0;
          llvm::MD5::update((int *)v114, v42, v41);
          llvm::MD5::final((int *)v114, v113);
          if (v50 == *(_QWORD *)v113 || (++v48, v48 == dword_1ED80FA88))
          {
            MEMORY[0x1CAA32F9C](v106, 0x1000C80451B5BE8);
            goto LABEL_6;
          }
          v46 = v112;
        }
        ++v47;
        v49 += 2;
      }
      while (v47 < v46);
    }
    MEMORY[0x1CAA32F9C](v106, 0x1000C80451B5BE8);
    v31 = (llvm::Type **)v105;
  }
  else
  {
    MEMORY[0x1CAA32F9C](v45, 0x1000C80451B5BE8);
  }
  *(_QWORD *)v113 = "Callee function not available";
  v52 = *(uint64_t ****)(*(_QWORD *)(v24 + 8 * v29) + 8);
  if (v52)
    v53 = *((_BYTE *)v52 + 16) == 3;
  else
    v53 = 0;
  if (v53)
  {
    if ((*((_DWORD *)v52 + 5) & 0x7FFFFFF) == 0)
      goto LABEL_6;
  }
  else if (!*((_BYTE *)v52 + 16) && v52[9] == (uint64_t **)(v52 + 9) && (*((_BYTE *)v52 + 34) & 0x80) == 0)
  {
    goto LABEL_6;
  }
  if ((*((_BYTE *)v52 + 23) & 0x20) == 0)
    goto LABEL_6;
  v54 = ***v52;
  v114[0] = *(void **)(*(_QWORD *)(v24 + 8 * v29) + 8);
  v55 = *(_DWORD *)(v54 + 2496);
  if (!v55)
  {
    v92 = 0;
LABEL_104:
    v59 = sub_1C541AB24(v54 + 2480, (uint64_t)v114, (uint64_t *)v114, v92);
    v93 = v114[0];
    v59[3] = 0;
    v59[4] = 0;
    *v59 = v93;
    v59[1] = v59 + 3;
    v59[2] = 0x100000000;
    goto LABEL_62;
  }
  v56 = *(_QWORD *)(v54 + 2480);
  v57 = v55 - 1;
  v58 = v57 & ((v52 >> 4) ^ (v52 >> 9));
  v59 = (_QWORD *)(v56 + 40 * v58);
  v60 = *v59;
  if ((uint64_t ***)*v59 != v52)
  {
    v61 = 0;
    v62 = 1;
    while (v60 != -4096)
    {
      if (v61)
        v63 = 0;
      else
        v63 = v60 == -8192;
      if (v63)
        v61 = v59;
      v64 = v58 + v62++;
      v58 = v64 & v57;
      v59 = (_QWORD *)(v56 + 40 * v58);
      v60 = *v59;
      if ((uint64_t ***)*v59 == v52)
        goto LABEL_62;
    }
    if (v61)
      v92 = v61;
    else
      v92 = v59;
    goto LABEL_104;
  }
LABEL_62:
  v65 = *((unsigned int *)v59 + 4);
  if (!(_DWORD)v65)
    goto LABEL_6;
  v66 = (_QWORD *)(v59[1] + 8);
  v67 = 16 * v65;
  while (*((_DWORD *)v66 - 2))
  {
    v66 += 2;
    v67 -= 16;
    if (!v67)
      goto LABEL_6;
  }
  if (!*v66
    || (v68 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 8 * v29) + 8) + 112)) == 0
    || !*(_DWORD *)(v68 + 8)
    || (v69 = *(_QWORD *)(v68 + 40)) == 0
    || (v70 = *(_DWORD *)(v69 + 40)) == 0)
  {
LABEL_6:
    v7 = 0;
    return v7 & 1;
  }
  v71 = *(_QWORD *)(v69 + 24);
  v72 = atomic_load((unsigned __int8 *)&qword_1ED7EAC88);
  if ((v72 & 1) == 0 && __cxa_guard_acquire(&qword_1ED7EAC88))
  {
    v104 = llvm::hashing::detail::fixed_seed_override;
    if (!llvm::hashing::detail::fixed_seed_override)
      v104 = 0xFF51AFD7ED558CCDLL;
    qword_1ED7EAC80 = v104;
    __cxa_guard_release(&qword_1ED7EAC88);
  }
  v73 = __ROR8__(qword_1ED7EAC80 ^ 0x3A4251CF5CABDDE3, 30);
  v74 = 0x9DDFEA08EB382D69
      * ((qword_1ED7EAC80 + 0x20E38D834E0EEBC9) ^ ((0x9DDFEA08EB382D69
                                                    * ((v73 - 0x3222A10545348927) ^ (qword_1ED7EAC80
                                                                                     + 0x20E38D834E0EEBC9))) >> 47) ^ (0x9DDFEA08EB382D69 * ((v73 - 0x3222A10545348927) ^ (qword_1ED7EAC80 + 0x20E38D834E0EEBC9))));
  v75 = -348639895 * ((v74 >> 47) ^ v74);
  for (i = 1; ; ++i)
  {
    v77 = v75 & (v70 - 1);
    v78 = (uint64_t *)(v71 + 24 * v77);
    v79 = *v78;
    if (*v78 == -1)
    {
      if ("use-sample-profile" == (char *)-1)
        goto LABEL_91;
      goto LABEL_77;
    }
    if (v79 != -2)
      break;
    if ("use-sample-profile" == (char *)-2)
      goto LABEL_91;
LABEL_77:
    if (v79 == -1)
      goto LABEL_6;
    v75 = i + v77;
  }
  if (v78[1] != 18)
    goto LABEL_77;
  v80 = *(_QWORD *)v79 == 0x706D61732D657375 && *(_QWORD *)(v79 + 8) == 0x69666F72702D656CLL;
  if (!v80 || *(_WORD *)(v79 + 16) != 25964)
    goto LABEL_77;
LABEL_91:
  v82 = *(const llvm::CallBase **)(*(_QWORD *)(v24 + 8 * v29) + 8);
  if (v82 == v109 || !llvm::isLegalToPromote(v31, v82, (llvm::Function *)v113, v51))
    goto LABEL_6;
  v83 = *(uint64_t ****)(*(_QWORD *)(v24 + 8 * v29) + 8);
  if ((*((_BYTE *)v83 + 23) & 0x10) != 0)
  {
    v84 = ***v83;
    v85 = *(_QWORD *)(v84 + 152);
    v86 = *(unsigned int *)(v84 + 168);
    if (!(_DWORD)v86)
      goto LABEL_106;
    LODWORD(v87) = (v86 - 1) & ((v83 >> 4) ^ (v83 >> 9));
    v88 = (uint64_t ****)(v85 + 16 * v87);
    v89 = *v88;
    if (*v88 != v83)
    {
      v90 = 1;
      while (v89 != (uint64_t ***)-4096)
      {
        v91 = v87 + v90++;
        v87 = v91 & (v86 - 1);
        v89 = *(uint64_t ****)(v85 + 16 * v87);
        if (v89 == v83)
        {
          v88 = (uint64_t ****)(v85 + 16 * v87);
          goto LABEL_107;
        }
      }
LABEL_106:
      v88 = (uint64_t ****)(v85 + 16 * v86);
    }
LABEL_107:
    v94 = v88[1];
    v97 = (size_t)*v94;
    v95 = (int *)(v94 + 2);
    v96 = v97;
  }
  else
  {
    v96 = 0;
    v95 = (int *)&byte_1C871356D;
  }
  v98 = sub_1C4FC938C(v95, v96);
  v114[0] = v115;
  v115[0] = v98;
  v115[1] = -1;
  v114[1] = (void *)0x100000001;
  sub_1C575FFAC((uint64_t)v31, (unsigned int *)v114, 0);
  v7 = (char)v110;
  v100 = (unsigned __int8 *)llvm::pgo::promoteIndirectCall((uint64_t ***)v31, *(llvm::CallBase **)(*(_QWORD *)(v24 + 8 * v29) + 8), (unint64_t)v110[2], *a5, 0, *(llvm::OptimizationRemarkEmitter **)(a1 + 1136), v99);
  *a5 -= (unint64_t)v110[2];
  *v110 = v100;
  v101 = v100[16];
  if (v101 == 84 || v101 == 33)
  {
    if ((sub_1C575D3E8(a1, (uint64_t)v110, v108) & 1) != 0)
    {
      v103 = 0;
      v7 = 1;
    }
    else
    {
      llvm::setProbeDistributionFactor((llvm *)v100, v102, (float)(unint64_t)v110[2] / (float)v107);
      v103 = 0;
      v7 = 0;
    }
  }
  else
  {
    v103 = 1;
  }
  if (v114[0] != v115)
    free(v114[0]);
  if (v103)
    goto LABEL_6;
  return v7 & 1;
}

uint64_t sub_1C575D3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v3;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  llvm::BasicBlock *v19;
  uint64_t v20;
  const char *v21;
  const llvm::Function *v22;
  llvm::OptimizationRemarkEmitter *v23;
  unsigned int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  llvm **v29;
  uint64_t v30;
  llvm::Instruction *v31;
  llvm::OptimizationRemarkEmitter *v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  char **v37;
  unint64_t v38;
  void **v39;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  __int128 v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  char v49;
  unsigned __int8 *v50;
  _BYTE v51[32];
  char v52;
  __int128 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  const char *v63;
  void *v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  void *v69;
  uint64_t v70;
  char *v71[2];
  uint64_t v72;
  void *v73;
  uint64_t v74;
  _BYTE v75[36];
  int v76;
  uint64_t v77;
  char v78;
  uint64_t v79;

  v79 = *MEMORY[0x1E0C80C00];
  if (byte_1ED80F608)
    return 0;
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(*(_QWORD *)a2 - 32);
  if (!v8 || *(_BYTE *)(v8 + 16) || *(_QWORD *)(v8 + 24) != *(_QWORD *)(v7 + 72))
    v8 = 0;
  v9 = *(unsigned __int8 **)(v7 + 48);
  v50 = v9;
  v10 = v7;
  if (v9)
  {
    llvm::MetadataTracking::track((uint64_t)&v50, v9, 2);
    v10 = *(_QWORD *)a2;
  }
  v11 = *(_QWORD *)(v7 + 40);
  sub_1C575E448(&v59, *(_QWORD *)(a1 + 1392), v10);
  if ((_BYTE)v65)
  {
    v44 = v59;
    LOBYTE(v45) = 0;
    v49 = 0;
    if ((_BYTE)v64)
    {
      sub_1C6199A28((llvm::APInt *)&v45, (llvm::APInt *)&v60);
      v49 = 1;
      if ((_BYTE)v65)
      {
        if ((_BYTE)v64)
        {
          v12 = &v60;
LABEL_91:
          sub_1C61996A0((uint64_t)v12);
          goto LABEL_42;
        }
      }
    }
    goto LABEL_42;
  }
  v13 = dword_1ED8333D8;
  if (byte_1ED80F848)
  {
    v14 = *(_QWORD *)(a1 + 1128);
    if (*(_BYTE *)(v14 + 24))
      v15 = *(_QWORD *)(v14 + 16);
    else
      v15 = 0;
    if (*(_QWORD *)(a2 + 16) <= v15)
    {
      if (!byte_1ED80F548)
      {
        LOBYTE(v59) = 0;
        LOBYTE(v62) = 0;
        sub_1C4E55798((llvm::APInt *)"cold callsite", (llvm::APInt *)&v59, (uint64_t)&v44);
        if (!(_BYTE)v62)
          goto LABEL_42;
        v12 = (uint64_t *)&v59;
        goto LABEL_91;
      }
    }
    else
    {
      v13 = dword_1ED833318;
    }
  }
  v16 = *(_QWORD *)a2;
  v17 = *(_QWORD *)(*(_QWORD *)a2 - 32);
  if (!v17 || *(_BYTE *)(v17 + 16) || *(_QWORD *)(v17 + 24) != *(_QWORD *)(v16 + 72))
    v17 = 0;
  llvm::getInlineParams(dword_1ED82D9C0, (uint64_t)&v59);
  if (!BYTE5(v65))
    BYTE5(v65) = 1;
  BYTE4(v65) = 1;
  if (!v67)
    v67 = 1;
  v66 = byte_1ED80F9C8;
  v18 = *(_QWORD *)(a1 + 1232);
  if (v18)
  {
    v19 = (llvm::BasicBlock *)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v18 + 48))(v18, v17);
    llvm::getInlineCost(v16, (llvm::Function *)v17, (int *)&v59, v19, (uint64_t)sub_1C4E5E070, a1 + 1176, (uint64_t (*)(uint64_t, llvm *))sub_1C5598CFC, a1 + 1240, (uint64_t)&v53, 0, v41, 0, 0);
    if ((v53 - 0x7FFFFFFF) > 1)
    {
      if (byte_1ED80F908
        && (v20 = *(_QWORD *)(a2 + 8)) != 0
        && (*(_BYTE *)(v20 + 48) & 2) == 0
        && (*(_BYTE *)(v20 + 52) & 2) != 0)
      {
        v51[0] = 0;
        v52 = 0;
        sub_1C4E556F4((llvm::APInt *)"preinliner", (llvm::APInt *)v51, (uint64_t)&v44);
        if (v52)
        {
          sub_1C61996A0((uint64_t)v51);
          v52 = 0;
        }
      }
      else
      {
        LODWORD(v44) = v53;
        if (byte_1ED80F848)
          DWORD1(v44) = v13;
        else
          DWORD1(v44) = 0x7FFFFFFF;
        *((_QWORD *)&v44 + 1) = 0;
        LOBYTE(v45) = 0;
        v49 = 0;
      }
    }
    else
    {
      v44 = v53;
      LOBYTE(v45) = 0;
      v49 = 0;
      if (v58)
      {
        v46 = v55;
        v45 = v54;
        v48 = v57;
        v47 = v56;
        v55 = 0;
        v57 = 0;
        v49 = 1;
      }
    }
    if (v58)
    {
      v12 = &v54;
      goto LABEL_91;
    }
LABEL_42:
    if ((_DWORD)v44 == 0x7FFFFFFF)
    {
      v32 = *(llvm::OptimizationRemarkEmitter **)(a1 + 1136);
      v33 = v50;
      if (v50)
      {
        v34 = *(_QWORD *)&v50[-8 * *((unsigned int *)v50 + 2)];
        if (*(_BYTE *)v34 != 15)
          v34 = *(_QWORD *)(v34 - 8 * *(unsigned int *)(v34 + 8));
        v35 = *((_DWORD *)v50 + 1);
        v33 = *((unsigned __int16 *)v50 + 1);
      }
      else
      {
        v34 = 0;
        v35 = 0;
      }
      v36 = *(_QWORD *)(v11 + 56);
      DWORD2(v59) = 11;
      BYTE12(v59) = 2;
      v60 = v36;
      v61 = v34;
      v62 = __PAIR64__(v33, v35);
      v63 = "sample-profile-inline";
      v64 = "InlineFail";
      v65 = 10;
      v66 = 0;
      v68 = 0;
      v69 = v71;
      v70 = 0x400000000;
      v75[32] = 0;
      v76 = -1;
      v77 = v11;
      *(_QWORD *)&v59 = &off_1E814E570;
      *(_QWORD *)&v53 = "incompatible inlining";
      *((_QWORD *)&v53 + 1) = 21;
      sub_1C53B17B4((uint64_t)&v69, (const void **)&v53);
      llvm::OptimizationRemarkEmitter::emit(v32, (llvm::DiagnosticInfoOptimizationBase *)&v59);
      *(_QWORD *)&v59 = &off_1E814E790;
      v37 = (char **)v69;
      if ((_DWORD)v70)
      {
        v38 = (unint64_t)v70 << 6;
        do
        {
          v39 = (void **)((char *)v37 + v38);
          if (*((char *)v37 + v38 - 17) < 0)
            operator delete(*(v39 - 5));
          if (*((char *)v39 - 41) < 0)
            operator delete(*(v39 - 8));
          v38 -= 64;
        }
        while (v38);
        v37 = (char **)v69;
      }
      if (v37 != v71)
        free(v37);
    }
    else if ((int)v44 < SDWORD1(v44))
    {
      *(_QWORD *)&v59 = 0;
      *((_QWORD *)&v59 + 1) = sub_1C4E5E070;
      v60 = a1 + 1176;
      v61 = 0;
      v62 = 0;
      v63 = 0;
      v64 = &v66;
      v65 = 0x400000000;
      v71[0] = (char *)&v72;
      v71[1] = (char *)0x800000000;
      v73 = v75;
      v74 = 0x800000000;
      v78 = 0;
      v21 = llvm::InlineFunction((uint64_t ***)v7, (uint64_t)&v59, 0, 1, 0);
      v3 = v21 == 0;
      if (!v21)
      {
        llvm::AttributeFuncs::mergeAttributesForOutlining(*(llvm::AttributeFuncs **)(v11 + 56), (llvm::Function *)v8, v22);
        v23 = *(llvm::OptimizationRemarkEmitter **)(a1 + 1136);
        v43 = v50;
        if (v50)
          llvm::MetadataTracking::track((uint64_t)&v43, v50, 2);
        llvm::emitInlinedIntoBasedOnCost(v23, &v43, v11, (_BYTE *)v8, *(_BYTE **)(v11 + 56), &v44, 1, "sample-profile-inline");
        if (v43)
          llvm::MetadataTracking::untrack((uint64_t)&v43, v43);
        if (a3)
        {
          *(_DWORD *)(a3 + 8) = 0;
          if ((_DWORD)v74)
          {
            v24 = 0;
            v25 = (uint64_t *)v73;
            v26 = a3 + 16;
            v27 = 8 * v74;
            do
            {
              v28 = *v25;
              if (v24 >= *(_DWORD *)(a3 + 12))
              {
                v42 = v26;
                llvm::SmallVectorBase<unsigned int>::grow_pod(a3, v26, v24 + 1, 8);
                v26 = v42;
                v24 = *(_DWORD *)(a3 + 8);
              }
              *(_QWORD *)(*(_QWORD *)a3 + 8 * v24) = v28;
              v24 = *(_DWORD *)(a3 + 8) + 1;
              *(_DWORD *)(a3 + 8) = v24;
              ++v25;
              v27 -= 8;
            }
            while (v27);
          }
        }
        if (*(_BYTE *)(a1 + 1280))
          *(_DWORD *)(*(_QWORD *)(a2 + 8) + 48) |= 4u;
        if (*(float *)(a2 + 24) < 1.0 && (_DWORD)v74)
        {
          v29 = (llvm **)v73;
          v30 = 8 * v74;
          do
          {
            llvm::extractProbe(*v29, (uint64_t)&v53);
            if ((_BYTE)v54)
              llvm::setProbeDistributionFactor(*v29, v31, *((float *)&v53 + 3) * *(float *)(a2 + 24));
            ++v29;
            v30 -= 8;
          }
          while (v30);
        }
      }
      if (v73 != v75)
        free(v73);
      sub_1C52768FC(v71);
      if (v64 != &v66)
        free(v64);
      goto LABEL_85;
    }
    v3 = 0;
LABEL_85:
    if (v49)
      sub_1C61996A0((uint64_t)&v45);
    if (v50)
      llvm::MetadataTracking::untrack((uint64_t)&v50, v50);
    return v3;
  }
  sub_1C485C2F0();
  return sub_1C575DAD8();
}

void sub_1C575DAD8(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void **v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  llvm::OptimizationRemarkEmitter *v18;
  uint64_t v19;
  std::string::size_type v20;
  uint64_t v21;
  llvm::DiagnosticInfoOptimizationBase *v22;
  char *v23;
  _BYTE *v24;
  void **v25;
  unint64_t v26;
  void **v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  size_t v31;
  size_t v32;
  char v33;
  std::string::size_type size;
  std::string *v35;
  char v36;
  __int128 *v37;
  int v38;
  unsigned int v39;
  int v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  std::string::size_type v45;
  uint64_t v46;
  std::string::size_type v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  unsigned int v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  std::string::size_type v67;
  uint64_t v68;
  uint64_t v69;
  void **v70;
  std::string::size_type v71;
  _BYTE *v72;
  int *__src;
  std::string *__srca;
  void *__srcb;
  char *v76;
  void *v77[2];
  char v78;
  void *__p;
  char v80;
  void *v81[2];
  char v82;
  void *v83;
  char v84;
  std::string v85;
  std::string v86;
  uint64_t v87;
  unint64_t v88;
  const char *v89;
  const char *v90;
  uint64_t v91;
  char v92;
  char v93;
  void *v94;
  uint64_t v95;
  _BYTE v96[260];
  int v97;
  uint64_t v98;
  __int128 *v99[4];

  v99[2] = *(__int128 **)MEMORY[0x1E0C80C00];
  v5 = *(unsigned int *)(a2 + 16);
  v6 = *(_QWORD *)a2 + 16 * v5;
  if (*(_DWORD *)(a2 + 8))
  {
    if ((_DWORD)v5)
    {
      v7 = 16 * v5;
      v8 = *(_QWORD **)a2;
      while ((*v8 | 0x1000) == 0xFFFFFFFFFFFFF000)
      {
        v8 += 2;
        v7 -= 16;
        if (!v7)
          goto LABEL_6;
      }
    }
    else
    {
      v8 = *(_QWORD **)a2;
    }
  }
  else
  {
LABEL_6:
    v8 = (_QWORD *)(*(_QWORD *)a2 + 16 * v5);
  }
  v9 = *(_QWORD *)a2 + 16 * v5;
  if (v8 != (_QWORD *)v9)
  {
    v10 = &v94;
    v11 = v96;
    while (1)
    {
      v12 = (_QWORD *)*v8;
      v13 = *(_QWORD *)(*v8 - 32);
      if (!v13
        || *(_BYTE *)(v13 + 16)
        || *(_QWORD *)(v13 + 24) != v12[9]
        || *(_QWORD *)(v13 + 72) == v13 + 72 && (*(_BYTE *)(v13 + 34) & 0x80) == 0)
      {
        goto LABEL_15;
      }
      v15 = v12[6];
      if (v15)
      {
        v16 = *(_QWORD *)(v15 - 8 * *(unsigned int *)(v15 + 8));
        if (*(_BYTE *)v16 != 15)
          v16 = *(_QWORD *)(v16 - 8 * *(unsigned int *)(v16 + 8));
        v17 = *(_DWORD *)(v15 + 4);
        LODWORD(v15) = *(unsigned __int16 *)(v15 + 2);
      }
      else
      {
        v16 = 0;
        v17 = 0;
      }
      v18 = *(llvm::OptimizationRemarkEmitter **)(a1 + 1136);
      v19 = v12[5];
      v20 = *(_QWORD *)(v19 + 56);
      LODWORD(v86.__r_.__value_.__r.__words[1]) = 11;
      v86.__r_.__value_.__s.__data_[12] = 2;
      v86.__r_.__value_.__r.__words[2] = v20;
      v87 = v16;
      v88 = __PAIR64__(v15, v17);
      v89 = "sample-profile-inline";
      v90 = "NotInline";
      v91 = 9;
      v92 = 0;
      v93 = 0;
      v76 = v11;
      v94 = v11;
      v95 = 0x400000000;
      v96[256] = 0;
      v97 = -1;
      v98 = v19;
      v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E814E570;
      v85.__r_.__value_.__r.__words[0] = (std::string::size_type)"previous inlining not repeated: '";
      v85.__r_.__value_.__l.__size_ = 33;
      sub_1C53B17B4((uint64_t)v10, (const void **)&v85.__r_.__value_.__l.__data_);
      llvm::DiagnosticInfoOptimizationBase::Argument::Argument((uint64_t)v81, "Callee", 6uLL, (_BYTE *)v13);
      v21 = sub_1C47E3888((uint64_t)&v86, (uint64_t)v81);
      v85.__r_.__value_.__r.__words[0] = (std::string::size_type)"' into '";
      v85.__r_.__value_.__l.__size_ = 8;
      sub_1C53B17B4(v21 + 80, (const void **)&v85.__r_.__value_.__l.__data_);
      llvm::DiagnosticInfoOptimizationBase::Argument::Argument((uint64_t)v77, "Caller", 6uLL, a3);
      v22 = (llvm::DiagnosticInfoOptimizationBase *)sub_1C47E3888(v21, (uint64_t)v77);
      v85.__r_.__value_.__r.__words[0] = (std::string::size_type)"'";
      v85.__r_.__value_.__l.__size_ = 1;
      sub_1C53B17B4((uint64_t)v22 + 80, (const void **)&v85.__r_.__value_.__l.__data_);
      llvm::OptimizationRemarkEmitter::emit(v18, v22);
      if (v80 < 0)
        operator delete(__p);
      if (v78 < 0)
        operator delete(v77[0]);
      if (v84 < 0)
        operator delete(v83);
      if (v82 < 0)
        operator delete(v81[0]);
      v86.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E814E790;
      v23 = (char *)v94;
      if ((_DWORD)v95)
      {
        v24 = a3;
        v25 = v10;
        v26 = (unint64_t)v95 << 6;
        do
        {
          v27 = (void **)&v23[v26];
          if (v23[v26 - 17] < 0)
            operator delete(*(v27 - 5));
          if (*((char *)v27 - 41) < 0)
            operator delete(*(v27 - 8));
          v26 -= 64;
        }
        while (v26);
        v23 = (char *)v94;
        v10 = v25;
        a3 = v24;
      }
      v11 = v76;
      if (v23 != v76)
        free(v23);
      v28 = v8[1];
      if (!*(_QWORD *)(v28 + 56) && !sub_1C575B32C((_QWORD *)v8[1]))
        goto LABEL_15;
      if ((*(_BYTE *)(v28 + 52) & 4) != 0)
        goto LABEL_15;
      if (!byte_1ED80F308)
        break;
      if (!*(_QWORD *)(v28 + 64))
      {
        v29 = sub_1C575B32C((_QWORD *)v28);
        sub_1C5753D6C(v28, v29, 1uLL);
        v30 = *(_QWORD **)(a1 + 1056);
        memset(&v85, 0, sizeof(v85));
        __src = (int *)sub_1C6200B8C((llvm::Value *)v13);
        v32 = v31;
        v33 = (*(uint64_t (**)(_QWORD *))(*v30 + 72))(v30);
        size = v32;
        if (v32 && (v33 & 1) != 0)
        {
          *(_OWORD *)&v86.__r_.__value_.__l.__data_ = xmmword_1C85F4BB0;
          v86.__r_.__value_.__r.__words[2] = 0;
          llvm::MD5::update((int *)&v86, __src, v32);
          llvm::MD5::final((int *)&v86, (int *)v99);
          std::to_string(&v86, (unint64_t)v99[0]);
          if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v85.__r_.__value_.__l.__data_);
          v85 = v86;
          v35 = (std::string *)v86.__r_.__value_.__r.__words[0];
          if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            size = v86.__r_.__value_.__l.__size_;
          }
          else
          {
            v35 = &v85;
            size = *((_BYTE *)&v86.__r_.__value_.__s + 23) & 0x7F;
          }
        }
        else
        {
          v35 = (std::string *)__src;
        }
        v71 = size;
        __srca = v35;
        v41 = (uint64_t)(v30 + 1);
        v86.__r_.__value_.__r.__words[0] = (std::string::size_type)v35;
        *(_OWORD *)&v86.__r_.__value_.__r.__words[1] = size;
        v87 = 0;
        v88 = 0;
        v42 = (char *)sub_1C62A3414(v30 + 1, (uint64_t)&v86);
        v43 = v30;
        v44 = v42;
        if (!v42)
        {
          v45 = *((_BYTE *)&v85.__r_.__value_.__s + 23) & 0x7F;
          if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v45 = v85.__r_.__value_.__l.__size_;
          v46 = v71;
          v47 = (std::string::size_type)__srca;
          if (v45)
          {
            v48 = sub_1C542BF9C((uint64_t)(v43 + 8), (uint64_t)&v85, (uint64_t)&v85);
            v51 = v48[2];
            v49 = v48 + 2;
            v50 = (uint64_t *)v51;
            v52 = *((_BYTE *)v49 + 23);
            v53 = v52 < 0;
            v47 = (std::string::size_type)(v52 >= 0 ? v49 : v50);
            v46 = v52 & 0x7F;
            if (v53)
              v46 = v49[1];
          }
          v86.__r_.__value_.__r.__words[0] = v47;
          *(_OWORD *)&v86.__r_.__value_.__r.__words[1] = (unint64_t)v46;
          v87 = 0;
          v88 = 0;
          v99[0] = (__int128 *)&v86;
          v44 = sub_1C57611EC(v41, (uint64_t)&v86, (uint64_t)&std::piecewise_construct, v99);
        }
        if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v85.__r_.__value_.__l.__data_);
        sub_1C5753498((uint64_t)(v44 + 56), v28, 1uLL);
        sub_1C5761128((uint64_t)(v44 + 56));
        goto LABEL_64;
      }
LABEL_15:
      v14 = v8 + 2;
      v8 = (_QWORD *)v6;
      if (v14 != (_QWORD *)v6)
      {
        v8 = v14;
        while ((*v8 | 0x1000) == 0xFFFFFFFFFFFFF000)
        {
          v8 += 2;
          if (v8 == (_QWORD *)v6)
          {
            v8 = (_QWORD *)v6;
            break;
          }
        }
      }
      if (v8 == (_QWORD *)v9)
        return;
    }
    v99[0] = 0;
    v36 = sub_1C49F21C0(*(_QWORD *)(a1 + 1304), *(_DWORD *)(a1 + 1320), v13, v99);
    v37 = v99[0];
    if ((v36 & 1) != 0)
    {
LABEL_63:
      *((_QWORD *)v37 + 1) += sub_1C575B32C((_QWORD *)v28);
LABEL_64:
      v11 = v76;
      goto LABEL_15;
    }
    v85.__r_.__value_.__l.__data_ = (std::string::pointer)v99[0];
    v38 = *(_DWORD *)(a1 + 1312);
    v39 = *(_DWORD *)(a1 + 1320);
    if (4 * v38 + 4 >= 3 * v39)
    {
      v40 = 2 * v39;
    }
    else
    {
      v40 = *(_DWORD *)(a1 + 1320);
      if (v39 + ~v38 - *(_DWORD *)(a1 + 1316) > v39 >> 3)
      {
LABEL_60:
        *(_DWORD *)(a1 + 1312) = v38 + 1;
        if (*(_QWORD *)v37 != -4096)
          --*(_DWORD *)(a1 + 1316);
        *(_QWORD *)v37 = v13;
        *((_QWORD *)v37 + 1) = 0;
        goto LABEL_63;
      }
    }
    v54 = *(unsigned int *)(a1 + 1320);
    v70 = v10;
    v72 = a3;
    v55 = *(_QWORD **)(a1 + 1304);
    v56 = (v40 - 1) | ((unint64_t)(v40 - 1) >> 1);
    v57 = v56 | (v56 >> 2) | ((v56 | (v56 >> 2)) >> 4);
    v58 = ((v57 | (v57 >> 8)) >> 16) | v57 | (v57 >> 8);
    if ((v58 + 1) > 0x40)
      v59 = v58 + 1;
    else
      v59 = 64;
    *(_DWORD *)(a1 + 1320) = v59;
    v60 = operator new(16 * v59, (std::align_val_t)8uLL);
    *(_QWORD *)(a1 + 1304) = v60;
    __srcb = v55;
    if (v55)
    {
      *(_QWORD *)(a1 + 1312) = 0;
      v61 = *(unsigned int *)(a1 + 1320);
      if ((_DWORD)v61)
      {
        v62 = 16 * v61;
        do
        {
          *v60 = -4096;
          v60 += 2;
          v62 -= 16;
        }
        while (v62);
      }
      if ((_DWORD)v54)
      {
        v63 = 0;
        v64 = v55 + 1;
        v65 = 16 * v54;
        do
        {
          v66 = *(v64 - 1);
          if ((v66 | 0x1000) != 0xFFFFFFFFFFFFF000)
          {
            v86.__r_.__value_.__r.__words[0] = 0;
            sub_1C49F21C0(*(_QWORD *)(a1 + 1304), *(_DWORD *)(a1 + 1320), v66, &v86);
            v67 = v86.__r_.__value_.__r.__words[0];
            *(_QWORD *)v86.__r_.__value_.__l.__data_ = v66;
            *(_QWORD *)(v67 + 8) = *v64;
            *(_DWORD *)(a1 + 1312) = ++v63;
          }
          v64 += 2;
          v65 -= 16;
        }
        while (v65);
      }
      MEMORY[0x1CAA32FB4](__srcb, 8);
      v60 = *(_QWORD **)(a1 + 1304);
      LODWORD(v68) = *(_DWORD *)(a1 + 1320);
    }
    else
    {
      *(_QWORD *)(a1 + 1312) = 0;
      v68 = *(unsigned int *)(a1 + 1320);
      if ((_DWORD)v68)
      {
        v69 = 0;
        do
        {
          v60[v69] = -4096;
          v69 += 2;
        }
        while (2 * v68 != v69);
      }
    }
    sub_1C49F21C0((uint64_t)v60, v68, v13, &v85);
    v38 = *(_DWORD *)(a1 + 1312);
    v37 = (__int128 *)v85.__r_.__value_.__r.__words[0];
    v10 = v70;
    a3 = v72;
    goto LABEL_60;
  }
}

BOOL sub_1C575E23C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  if (a2 != a4)
    return a2 < a4;
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a3 + 88);
  if (v5 != v6)
    return v5 > v6;
  v7 = sub_1C575E2A0(*(int **)(a1 + 16), *(_QWORD *)(a1 + 24));
  return v7 < sub_1C575E2A0(*(int **)(a3 + 16), *(_QWORD *)(a3 + 24));
}

unint64_t sub_1C575E2A0(int *__src, size_t __n)
{
  size_t v3;
  std::string::size_type v4;
  std::string *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10[4];
  std::string __dst[6];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (!llvm::sampleprof::FunctionSamples::UseMD5)
  {
    *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = xmmword_1C85F4BB0;
    __dst[0].__r_.__value_.__r.__words[2] = 0;
    llvm::MD5::update((int *)__dst, __src, __n);
    llvm::MD5::final((int *)__dst, v10);
    return *(_QWORD *)v10;
  }
  v3 = strlen((const char *)__src);
  if (v3 >= 0x7FFFFFFFFFFFFFF8)
    abort();
  v4 = v3;
  if (v3 >= 0x17)
  {
    v7 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v7 = v3 | 7;
    v8 = v7 + 1;
    v5 = (std::string *)operator new(v7 + 1);
    __dst[0].__r_.__value_.__l.__size_ = v4;
    __dst[0].__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v5;
    goto LABEL_10;
  }
  *((_BYTE *)&__dst[0].__r_.__value_.__s + 23) = v3;
  v5 = __dst;
  if (v3)
LABEL_10:
    memmove(v5, __src, v4);
  v5->__r_.__value_.__s.__data_[v4] = 0;
  v6 = std::stoull(__dst, 0, 10);
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  return v6;
}

BOOL sub_1C575E3DC(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  uint64_t v8;
  _BYTE v9[40];
  unsigned __int8 v10;

  sub_1C575E448(&v8, a1, a2);
  v2 = v10;
  v3 = v8;
  v4 = HIDWORD(v8);
  if (v10)
    v5 = v9[32] == 0;
  else
    v5 = 1;
  if (!v5)
    sub_1C61996A0((uint64_t)v9);
  return v2 && v3 < v4;
}

_QWORD *sub_1C575E448(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  llvm::InlineAdvice *v4;
  _BYTE v5[32];
  char v6;
  _BYTE v7[32];
  char v8;
  llvm::InlineAdvice *v9[2];
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;

  v3 = result;
  if (a2
    && (result = (*(_QWORD *(**)(llvm::InlineAdvice **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)a2 + 40))(v9, a2, a3), (v4 = v9[0]) != 0))
  {
    if (*((_BYTE *)v9[0] + 56))
    {
      llvm::InlineAdvice::recordInlining(v9[0]);
      v5[0] = 0;
      v6 = 0;
      sub_1C4E556F4((llvm::APInt *)"previously inlined", (llvm::APInt *)v5, (uint64_t)v9);
      *(_OWORD *)v3 = *(_OWORD *)v9;
      *((_BYTE *)v3 + 16) = 0;
      *((_BYTE *)v3 + 48) = 0;
      if (v14)
      {
        *((_DWORD *)v3 + 6) = v11;
        v3[2] = v10;
        *((_DWORD *)v3 + 10) = v13;
        v3[4] = v12;
        v11 = 0;
        v13 = 0;
        *((_BYTE *)v3 + 48) = 1;
        sub_1C61996A0((uint64_t)&v10);
        v14 = 0;
      }
      *((_BYTE *)v3 + 56) = 1;
      if (v6)
      {
        sub_1C61996A0((uint64_t)v5);
        v6 = 0;
      }
    }
    else
    {
      *((_BYTE *)v9[0] + 57) = 1;
      (*(void (**)(llvm::InlineAdvice *))(*(_QWORD *)v4 + 40))(v4);
      v7[0] = 0;
      v8 = 0;
      sub_1C4E55798((llvm::APInt *)"not previously inlined", (llvm::APInt *)v7, (uint64_t)v9);
      *(_OWORD *)v3 = *(_OWORD *)v9;
      *((_BYTE *)v3 + 16) = 0;
      *((_BYTE *)v3 + 48) = 0;
      if (v14)
      {
        *((_DWORD *)v3 + 6) = v11;
        v3[2] = v10;
        *((_DWORD *)v3 + 10) = v13;
        v3[4] = v12;
        v11 = 0;
        v13 = 0;
        *((_BYTE *)v3 + 48) = 1;
        sub_1C61996A0((uint64_t)&v10);
        v14 = 0;
      }
      *((_BYTE *)v3 + 56) = 1;
      if (v8)
      {
        sub_1C61996A0((uint64_t)v7);
        v8 = 0;
      }
    }
    return (_QWORD *)(*(uint64_t (**)(llvm::InlineAdvice *))(*(_QWORD *)v4 + 8))(v4);
  }
  else
  {
    *((_OWORD *)v3 + 2) = 0u;
    *((_OWORD *)v3 + 3) = 0u;
    *(_OWORD *)v3 = 0u;
    *((_OWORD *)v3 + 1) = 0u;
  }
  return result;
}

__n128 sub_1C575E608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  __n128 *v7;
  __n128 result;
  __n128 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 *v13;
  __n128 v14;
  __n128 v15;

  v3 = a3 - 2;
  if (a3 >= 2)
  {
    v6 = v3 >> 1;
    v7 = (__n128 *)(a1 + 32 * (v3 >> 1));
    if (sub_1C575E23C(v7->n128_i64[1], v7[1].n128_u64[0], *(_QWORD *)(a2 - 24), *(_QWORD *)(a2 - 16)))
    {
      v11 = *(_QWORD *)(a2 - 32);
      v10 = *(_QWORD *)(a2 - 24);
      v9 = (__n128 *)(a2 - 32);
      v15 = v9[1];
      v12 = v9[1].n128_u64[0];
      do
      {
        v13 = v7;
        v14 = v7[1];
        *v9 = *v7;
        v9[1] = v14;
        if (!v6)
          break;
        v6 = (v6 - 1) >> 1;
        v7 = (__n128 *)(a1 + 32 * v6);
        v9 = v13;
      }
      while (sub_1C575E23C(v7->n128_i64[1], v7[1].n128_u64[0], v10, v12));
      v13->n128_u64[0] = v11;
      v13->n128_u64[1] = v10;
      result = v15;
      v13[1] = v15;
    }
  }
  return result;
}

unint64_t sub_1C575E6B8(unint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t k;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t *m;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  BOOL v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t *j;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  _QWORD *v77;
  _QWORD **v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t *v83;
  BOOL v84;
  char v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  int64_t v99;
  int64_t v100;
  uint64_t *v101;
  int64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  _BOOL4 v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  _BOOL4 v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  _BOOL4 v137;
  uint64_t *v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  _QWORD *v153;
  _QWORD *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t *v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  uint64_t *v163;
  _QWORD *v164;
  _QWORD *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  int64_t v174;
  uint64_t *v175;
  _QWORD *v176;
  uint64_t *v178;

  v178 = (uint64_t *)result;
LABEL_2:
  v6 = a2;
  i = v178;
  v175 = a2 - 1;
  while (2)
  {
    v8 = (char *)v6 - (char *)i;
    v9 = v6 - i;
    v178 = i;
    switch(v9)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v72 = *(a2 - 1);
        v73 = *i;
        v74 = sub_1C575B32C((_QWORD *)v72);
        result = sub_1C575B32C((_QWORD *)v73);
        if (v74 == result)
        {
          v75 = sub_1C575E2A0(*(int **)(v72 + 16), *(_QWORD *)(v72 + 24));
          result = sub_1C575E2A0(*(int **)(v73 + 16), *(_QWORD *)(v73 + 24));
          if (v75 >= result)
            return result;
          v73 = *i;
          v72 = *(a2 - 1);
        }
        else if (v74 <= result)
        {
          return result;
        }
        *i = v72;
        *(a2 - 1) = v73;
        return result;
      case 3:
        return sub_1C575F4A0(i, (_QWORD **)i + 1, (_QWORD **)v175);
      case 4:
        return sub_1C575FA20(i, (_QWORD **)i + 1, (_QWORD **)i + 2, (_QWORD **)v175);
      case 5:
        v76 = i + 1;
        v77 = i + 2;
        v78 = (_QWORD **)(i + 3);
        sub_1C575FA20(i, (_QWORD **)i + 1, (_QWORD **)i + 2, (_QWORD **)i + 3);
        v79 = *(a2 - 1);
        v80 = (_QWORD *)i[3];
        v81 = sub_1C575B32C((_QWORD *)v79);
        result = sub_1C575B32C(v80);
        if (v81 == result)
        {
          v82 = sub_1C575E2A0(*(int **)(v79 + 16), *(_QWORD *)(v79 + 24));
          result = sub_1C575E2A0((int *)v80[2], v80[3]);
          if (v82 >= result)
            return result;
          v80 = *v78;
          v79 = *(a2 - 1);
        }
        else if (v81 <= result)
        {
          return result;
        }
        *v78 = (_QWORD *)v79;
        *(a2 - 1) = (uint64_t)v80;
        v153 = *v78;
        v154 = (_QWORD *)*v77;
        v155 = sub_1C575B32C(*v78);
        result = sub_1C575B32C(v154);
        if (v155 == result)
        {
          v156 = sub_1C575E2A0((int *)v153[2], v153[3]);
          result = sub_1C575E2A0((int *)v154[2], v154[3]);
          if (v156 >= result)
            return result;
          v154 = (_QWORD *)*v77;
          v153 = *v78;
        }
        else if (v155 <= result)
        {
          return result;
        }
        *v77 = v153;
        *v78 = v154;
        v168 = *v76;
        v169 = sub_1C575B32C(v153);
        result = sub_1C575B32C((_QWORD *)v168);
        if (v169 == result)
        {
          v170 = sub_1C575E2A0((int *)v153[2], v153[3]);
          result = sub_1C575E2A0(*(int **)(v168 + 16), *(_QWORD *)(v168 + 24));
          if (v170 >= result)
            return result;
          v168 = *v76;
          v153 = (_QWORD *)*v77;
        }
        else if (v169 <= result)
        {
          return result;
        }
        i[1] = (uint64_t)v153;
        i[2] = v168;
        v171 = *i;
        v172 = sub_1C575B32C(v153);
        result = sub_1C575B32C((_QWORD *)v171);
        if (v172 == result)
        {
          v173 = sub_1C575E2A0((int *)v153[2], v153[3]);
          result = sub_1C575E2A0(*(int **)(v171 + 16), *(_QWORD *)(v171 + 24));
          if (v173 >= result)
            return result;
          v171 = *i;
          v153 = (_QWORD *)i[1];
        }
        else if (v172 <= result)
        {
          return result;
        }
        *i = (uint64_t)v153;
        i[1] = v171;
        return result;
      default:
        v10 = i;
        if (v8 <= 191)
        {
          v83 = i + 1;
          v84 = i == v6 || v83 == v6;
          v85 = v84;
          if ((a4 & 1) == 0)
          {
            if ((v85 & 1) != 0)
              return result;
            while (1)
            {
              v157 = v178;
              v158 = v83;
              v160 = *v178;
              v159 = v178[1];
              v161 = sub_1C575B32C((_QWORD *)v159);
              result = sub_1C575B32C((_QWORD *)v160);
              if (v161 == result)
              {
                v162 = sub_1C575E2A0(*(int **)(v159 + 16), *(_QWORD *)(v159 + 24));
                result = sub_1C575E2A0(*(int **)(v160 + 16), *(_QWORD *)(v160 + 24));
                if (v162 < result)
                {
                  v159 = *v158;
                  goto LABEL_193;
                }
              }
              else if (v161 > result)
              {
                do
                {
LABEL_193:
                  while (1)
                  {
                    v163 = v157;
                    v157[1] = *v157;
                    v165 = (_QWORD *)*--v157;
                    v164 = v165;
                    v166 = sub_1C575B32C((_QWORD *)v159);
                    result = sub_1C575B32C(v165);
                    if (v166 != result)
                      break;
                    v167 = sub_1C575E2A0(*(int **)(v159 + 16), *(_QWORD *)(v159 + 24));
                    result = sub_1C575E2A0((int *)v164[2], v164[3]);
                    if (v167 >= result)
                      goto LABEL_197;
                  }
                }
                while (v166 > result);
LABEL_197:
                *v163 = v159;
              }
              v178 = v158;
              v83 = v158 + 1;
              if (v158 + 1 == a2)
                return result;
            }
          }
          if ((v85 & 1) != 0)
            return result;
          v86 = 0;
          v87 = i;
LABEL_108:
          v88 = v87;
          v87 = v83;
          v90 = *v88;
          v89 = v88[1];
          v91 = sub_1C575B32C((_QWORD *)v89);
          result = sub_1C575B32C((_QWORD *)v90);
          if (v91 == result)
          {
            v92 = sub_1C575E2A0(*(int **)(v89 + 16), *(_QWORD *)(v89 + 24));
            result = sub_1C575E2A0(*(int **)(v90 + 16), *(_QWORD *)(v90 + 24));
            if (v92 >= result)
              goto LABEL_123;
            v89 = *v87;
            v90 = *v88;
          }
          else if (v91 <= result)
          {
            goto LABEL_123;
          }
          v88[1] = v90;
          v93 = v178;
          if (v88 == v178)
            goto LABEL_122;
          v94 = v86;
          while (1)
          {
            v95 = (uint64_t *)((char *)v178 + v94);
            v96 = *(uint64_t *)((char *)v178 + v94 - 8);
            v97 = sub_1C575B32C((_QWORD *)v89);
            result = sub_1C575B32C((_QWORD *)v96);
            if (v97 == result)
            {
              v98 = sub_1C575E2A0(*(int **)(v89 + 16), *(_QWORD *)(v89 + 24));
              result = sub_1C575E2A0(*(int **)(v96 + 16), *(_QWORD *)(v96 + 24));
              if (v98 >= result)
              {
                v93 = v88;
LABEL_122:
                *v93 = v89;
LABEL_123:
                v83 = v87 + 1;
                v86 += 8;
                if (v87 + 1 == a2)
                  return result;
                goto LABEL_108;
              }
              v96 = *(v95 - 1);
            }
            else if (v97 <= result)
            {
              v93 = (uint64_t *)((char *)v178 + v94);
              goto LABEL_122;
            }
            --v88;
            *v95 = v96;
            v94 -= 8;
            if (!v94)
            {
              v93 = v178;
              goto LABEL_122;
            }
          }
        }
        if (!a3)
        {
          if (i == v6)
            return result;
          v99 = (unint64_t)(v9 - 2) >> 1;
          v100 = v99;
          v101 = i;
          while (2)
          {
            v102 = v100;
            if (v99 >= v100)
            {
              v103 = (2 * v100) | 1;
              v104 = &v101[v103];
              if (2 * v100 + 2 >= v9)
              {
                v101 = v178;
              }
              else
              {
                v105 = *v104;
                v106 = (_QWORD *)v104[1];
                v107 = sub_1C575B32C((_QWORD *)*v104);
                v108 = sub_1C575B32C(v106);
                if (v107 == v108)
                {
                  v109 = sub_1C575E2A0(*(int **)(v105 + 16), *(_QWORD *)(v105 + 24));
                  v110 = v109 < sub_1C575E2A0((int *)v106[2], v106[3]);
                }
                else
                {
                  v110 = v107 > v108;
                }
                if (v110)
                {
                  ++v104;
                  v103 = 2 * v102 + 2;
                }
                v101 = v178;
                v99 = (unint64_t)(v9 - 2) >> 1;
              }
              v111 = *v104;
              v112 = v101[v102];
              v113 = sub_1C575B32C((_QWORD *)*v104);
              result = sub_1C575B32C((_QWORD *)v112);
              if (v113 == result)
              {
                v114 = sub_1C575E2A0(*(int **)(v111 + 16), *(_QWORD *)(v111 + 24));
                result = sub_1C575E2A0(*(int **)(v112 + 16), *(_QWORD *)(v112 + 24));
                if (v114 >= result)
                {
                  v112 = v101[v102];
                  v111 = *v104;
                  goto LABEL_140;
                }
              }
              else if (v113 <= result)
              {
LABEL_140:
                v174 = v102;
                v101[v102] = v111;
                if (v99 >= v103)
                {
                  do
                  {
                    v116 = 2 * v103;
                    v103 = (2 * v103) | 1;
                    v115 = &v101[v103];
                    v117 = v116 + 2;
                    if (v116 + 2 < v9)
                    {
                      v118 = v112;
                      v119 = *v115;
                      v120 = (_QWORD *)v115[1];
                      v121 = sub_1C575B32C((_QWORD *)*v115);
                      v122 = sub_1C575B32C(v120);
                      if (v121 == v122)
                      {
                        v123 = sub_1C575E2A0(*(int **)(v119 + 16), *(_QWORD *)(v119 + 24));
                        v124 = v123 < sub_1C575E2A0((int *)v120[2], v120[3]);
                      }
                      else
                      {
                        v124 = v121 > v122;
                      }
                      v112 = v118;
                      v101 = v178;
                      if (v124)
                      {
                        ++v115;
                        v103 = v117;
                      }
                      v99 = (unint64_t)(v9 - 2) >> 1;
                    }
                    v125 = *v115;
                    v126 = sub_1C575B32C((_QWORD *)*v115);
                    result = sub_1C575B32C((_QWORD *)v112);
                    if (v126 == result)
                    {
                      v127 = sub_1C575E2A0(*(int **)(v125 + 16), *(_QWORD *)(v125 + 24));
                      result = sub_1C575E2A0(*(int **)(v112 + 16), *(_QWORD *)(v112 + 24));
                      if (v127 < result)
                        goto LABEL_141;
                      v125 = *v115;
                    }
                    else if (v126 > result)
                    {
                      goto LABEL_141;
                    }
                    *v104 = v125;
                    v104 = v115;
                  }
                  while (v99 >= v103);
                }
                else
                {
LABEL_141:
                  v115 = v104;
                }
                *v115 = v112;
                v102 = v174;
              }
            }
            v100 = v102 - 1;
            if (v102)
              continue;
            break;
          }
          while (2)
          {
            v128 = 0;
            v129 = v178;
            v176 = (_QWORD *)*v178;
            do
            {
              v130 = &v129[v128 + 1];
              v131 = (2 * v128) | 1;
              v132 = 2 * v128 + 2;
              if (v132 < v9)
              {
                v133 = *v130;
                v134 = v129[v128 + 2];
                v135 = sub_1C575B32C((_QWORD *)*v130);
                result = sub_1C575B32C((_QWORD *)v134);
                if (v135 == result)
                {
                  v136 = sub_1C575E2A0(*(int **)(v133 + 16), *(_QWORD *)(v133 + 24));
                  result = sub_1C575E2A0(*(int **)(v134 + 16), *(_QWORD *)(v134 + 24));
                  v137 = v136 < result;
                }
                else
                {
                  v137 = v135 > result;
                }
                if (v137)
                {
                  ++v130;
                  v131 = v132;
                }
              }
              *v129 = *v130;
              v129 = v130;
              v128 = v131;
            }
            while (v131 <= (uint64_t)((unint64_t)(v9 - 2) >> 1));
            v138 = a2 - 1;
            v84 = v130 == --a2;
            if (v84)
            {
              *v130 = (uint64_t)v176;
            }
            else
            {
              *v130 = *v138;
              *v138 = (uint64_t)v176;
              v139 = (char *)v130 - (char *)v178 + 8;
              if (v139 >= 9)
              {
                v140 = ((unint64_t)v139 >> 3) - 2;
                v141 = v140 >> 1;
                v142 = &v178[v140 >> 1];
                v143 = *v142;
                v144 = *v130;
                v145 = sub_1C575B32C((_QWORD *)*v142);
                result = sub_1C575B32C((_QWORD *)v144);
                if (v145 == result)
                {
                  v146 = sub_1C575E2A0(*(int **)(v143 + 16), *(_QWORD *)(v143 + 24));
                  result = sub_1C575E2A0(*(int **)(v144 + 16), *(_QWORD *)(v144 + 24));
                  if (v146 < result)
                  {
                    v144 = *v130;
                    v143 = *v142;
                    goto LABEL_171;
                  }
                }
                else if (v145 > result)
                {
LABEL_171:
                  *v130 = v143;
                  if (v140 >= 2)
                  {
                    do
                    {
                      v148 = v141 - 1;
                      v141 = (v141 - 1) >> 1;
                      v147 = &v178[v141];
                      v149 = *v147;
                      v150 = sub_1C575B32C((_QWORD *)*v147);
                      result = sub_1C575B32C((_QWORD *)v144);
                      if (v150 == result)
                      {
                        v151 = sub_1C575E2A0(*(int **)(v149 + 16), *(_QWORD *)(v149 + 24));
                        result = sub_1C575E2A0(*(int **)(v144 + 16), *(_QWORD *)(v144 + 24));
                        if (v151 >= result)
                          goto LABEL_172;
                        v149 = *v147;
                      }
                      else if (v150 <= result)
                      {
                        goto LABEL_172;
                      }
                      *v142 = v149;
                      v142 = &v178[v141];
                    }
                    while (v148 > 1);
                  }
                  else
                  {
LABEL_172:
                    v147 = v142;
                  }
                  *v147 = v144;
                }
              }
            }
            if (v9-- <= 2)
              return result;
            continue;
          }
        }
        v11 = (unint64_t)v9 >> 1;
        v12 = &i[(unint64_t)v9 >> 1];
        if ((unint64_t)v8 < 0x401)
        {
          sub_1C575F4A0(v12, (_QWORD **)i, (_QWORD **)v175);
        }
        else
        {
          sub_1C575F4A0(i, (_QWORD **)v12, (_QWORD **)v175);
          sub_1C575F4A0(i + 1, (_QWORD **)v12 - 1, (_QWORD **)a2 - 2);
          sub_1C575F4A0(i + 2, (_QWORD **)&i[v11 + 1], (_QWORD **)a2 - 3);
          sub_1C575F4A0(v12 - 1, (_QWORD **)v12, (_QWORD **)&i[v11 + 1]);
          v13 = *i;
          *i = *v12;
          *v12 = v13;
        }
        --a3;
        v14 = *i;
        if ((a4 & 1) == 0)
        {
          v15 = *(i - 1);
          v16 = sub_1C575B32C((_QWORD *)*(v10 - 1));
          v17 = sub_1C575B32C((_QWORD *)v14);
          if (v16 == v17)
          {
            v18 = sub_1C575E2A0(*(int **)(v15 + 16), *(_QWORD *)(v15 + 24));
            v19 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
            v14 = *v10;
            if (v18 < v19)
              goto LABEL_22;
          }
          else if (v16 > v17)
          {
            goto LABEL_22;
          }
          v20 = (_QWORD *)*v175;
          v21 = sub_1C575B32C((_QWORD *)v14);
          result = sub_1C575B32C(v20);
          if (v21 == result)
          {
            v22 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
            result = sub_1C575E2A0((int *)v20[2], v20[3]);
            if (v22 < result)
              goto LABEL_62;
          }
          else if (v21 > result)
          {
LABEL_62:
            for (i = v10 + 1; ; ++i)
            {
              v55 = *i;
              v56 = sub_1C575B32C((_QWORD *)v14);
              result = sub_1C575B32C((_QWORD *)v55);
              if (v56 == result)
              {
                v57 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
                result = sub_1C575E2A0(*(int **)(v55 + 16), *(_QWORD *)(v55 + 24));
                if (v57 < result)
                  goto LABEL_68;
              }
              else if (v56 > result)
              {
                goto LABEL_68;
              }
            }
          }
          for (i = v10 + 1; i < v6; ++i)
          {
            v23 = *i;
            v24 = sub_1C575B32C((_QWORD *)v14);
            result = sub_1C575B32C((_QWORD *)v23);
            if (v24 == result)
            {
              v25 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
              result = sub_1C575E2A0(*(int **)(v23 + 16), *(_QWORD *)(v23 + 24));
              if (v25 < result)
                break;
            }
            else if (v24 > result)
            {
              break;
            }
          }
LABEL_68:
          j = v6;
          if (i >= v6)
            goto LABEL_84;
          for (j = a2 - 1; ; --j)
          {
            v59 = (_QWORD *)*j;
            v60 = sub_1C575B32C((_QWORD *)v14);
            result = sub_1C575B32C(v59);
            if (v60 == result)
              break;
            if (v60 <= result)
              goto LABEL_84;
LABEL_74:
            ;
          }
          v61 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
          result = sub_1C575E2A0((int *)v59[2], v59[3]);
          if (v61 < result)
            goto LABEL_74;
LABEL_84:
          while (i < j)
          {
            v62 = *i;
            *i++ = *j;
            *j = v62;
            while (1)
            {
              v63 = *i;
              v64 = sub_1C575B32C((_QWORD *)v14);
              v65 = sub_1C575B32C((_QWORD *)v63);
              if (v64 == v65)
                break;
              if (v64 > v65)
                goto LABEL_82;
LABEL_80:
              ++i;
            }
            v66 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
            if (v66 >= sub_1C575E2A0(*(int **)(v63 + 16), *(_QWORD *)(v63 + 24)))
              goto LABEL_80;
            do
            {
LABEL_82:
              while (1)
              {
                v68 = (_QWORD *)*--j;
                v67 = v68;
                v69 = sub_1C575B32C((_QWORD *)v14);
                result = sub_1C575B32C(v68);
                if (v69 == result)
                  break;
                if (v69 <= result)
                  goto LABEL_84;
              }
              v70 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
              result = sub_1C575E2A0((int *)v67[2], v67[3]);
            }
            while (v70 < result);
          }
          v71 = i - 1;
          if (i - 1 != v10)
            *v10 = *v71;
          a4 = 0;
          *v71 = v14;
          continue;
        }
LABEL_22:
        for (k = 1; ; ++k)
        {
          v27 = v10[k];
          v28 = sub_1C575B32C((_QWORD *)v27);
          v29 = sub_1C575B32C((_QWORD *)v14);
          if (v28 != v29)
            break;
          v30 = sub_1C575E2A0(*(int **)(v27 + 16), *(_QWORD *)(v27 + 24));
          if (v30 >= sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24)))
            goto LABEL_28;
LABEL_27:
          ;
        }
        if (v28 > v29)
          goto LABEL_27;
LABEL_28:
        v31 = &v10[k];
        m = a2 - 1;
        if (k != 1)
        {
          while (1)
          {
            v33 = *m;
            v34 = sub_1C575B32C((_QWORD *)*m);
            v35 = sub_1C575B32C((_QWORD *)v14);
            if (v34 == v35)
            {
              v36 = sub_1C575E2A0(*(int **)(v33 + 16), *(_QWORD *)(v33 + 24));
              if (v36 < sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24)))
                goto LABEL_43;
            }
            else if (v34 > v35)
            {
              goto LABEL_43;
            }
            --m;
          }
        }
        m = a2;
        if (v31 < a2)
        {
          for (m = a2 - 1; ; --m)
          {
            v37 = *m;
            v38 = sub_1C575B32C((_QWORD *)*m);
            v39 = sub_1C575B32C((_QWORD *)v14);
            if (v38 == v39)
            {
              v40 = sub_1C575E2A0(*(int **)(v37 + 16), *(_QWORD *)(v37 + 24));
              v41 = sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24));
              if (v31 >= m || v40 < v41)
                break;
            }
            else if (v31 >= m || v38 > v39)
            {
              break;
            }
          }
        }
LABEL_43:
        i = v31;
        if (v31 >= m)
          goto LABEL_55;
        v42 = m;
        while (2)
        {
          v43 = *i;
          *i++ = *v42;
          *v42 = v43;
          while (2)
          {
            v44 = *i;
            v45 = sub_1C575B32C((_QWORD *)*i);
            v46 = sub_1C575B32C((_QWORD *)v14);
            if (v45 != v46)
            {
              if (v45 <= v46)
                goto LABEL_52;
LABEL_50:
              ++i;
              continue;
            }
            break;
          }
          v47 = sub_1C575E2A0(*(int **)(v44 + 16), *(_QWORD *)(v44 + 24));
          if (v47 < sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24)))
            goto LABEL_50;
          do
          {
LABEL_52:
            while (1)
            {
              v49 = (_QWORD *)*--v42;
              v48 = v49;
              v50 = sub_1C575B32C(v49);
              v51 = sub_1C575B32C((_QWORD *)v14);
              if (v50 == v51)
                break;
              if (v50 > v51)
                goto LABEL_54;
            }
            v52 = sub_1C575E2A0((int *)v48[2], v48[3]);
          }
          while (v52 >= sub_1C575E2A0(*(int **)(v14 + 16), *(_QWORD *)(v14 + 24)));
LABEL_54:
          if (i < v42)
            continue;
          break;
        }
LABEL_55:
        v53 = i - 1;
        if (i - 1 != v178)
          *v178 = *v53;
        *v53 = v14;
        v6 = a2;
        if (v31 < m)
        {
LABEL_60:
          result = sub_1C575E6B8(v178, i - 1, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v54 = sub_1C575F66C(v178, i - 1);
        result = sub_1C575F66C(i, a2);
        if (!(_DWORD)result)
        {
          if (v54)
            continue;
          goto LABEL_60;
        }
        a2 = i - 1;
        if (!v54)
          goto LABEL_2;
        return result;
    }
  }
}

unint64_t sub_1C575F4A0(_QWORD *a1, _QWORD **a2, _QWORD **a3)
{
  _QWORD **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t result;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  BOOL v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;

  v4 = a2;
  v5 = a1;
  v6 = *a2;
  v7 = *a1;
  v8 = sub_1C575B32C(*a2);
  v9 = sub_1C575B32C((_QWORD *)v7);
  if (v8 == v9)
  {
    v10 = sub_1C575E2A0((int *)v6[2], v6[3]);
    v11 = sub_1C575E2A0(*(int **)(v7 + 16), *(_QWORD *)(v7 + 24));
    v6 = *v4;
    if (v10 >= v11)
      goto LABEL_3;
  }
  else if (v8 <= v9)
  {
LABEL_3:
    v12 = (uint64_t)*a3;
    v13 = sub_1C575B32C(*a3);
    result = sub_1C575B32C(v6);
    if (v13 == result)
    {
      v15 = sub_1C575E2A0(*(int **)(v12 + 16), *(_QWORD *)(v12 + 24));
      result = sub_1C575E2A0((int *)v6[2], v6[3]);
      if (v15 >= result)
        return result;
      v6 = *v4;
      v12 = (uint64_t)*a3;
    }
    else if (v13 <= result)
    {
      return result;
    }
    *v4 = (_QWORD *)v12;
    *a3 = v6;
    v19 = *v4;
    v20 = (_QWORD *)*v5;
    v21 = sub_1C575B32C(*v4);
    result = sub_1C575B32C(v20);
    v22 = v21 > result;
    if (v21 == result)
    {
      v23 = sub_1C575E2A0((int *)v19[2], v19[3]);
      result = sub_1C575E2A0((int *)v20[2], v20[3]);
      goto LABEL_17;
    }
    goto LABEL_20;
  }
  v16 = (uint64_t)*a3;
  v17 = sub_1C575B32C(*a3);
  result = sub_1C575B32C(v6);
  if (v17 != result)
  {
    if (v17 <= result)
      goto LABEL_15;
LABEL_14:
    v4 = a3;
    goto LABEL_22;
  }
  v18 = sub_1C575E2A0(*(int **)(v16 + 16), *(_QWORD *)(v16 + 24));
  result = sub_1C575E2A0((int *)v6[2], v6[3]);
  if (v18 < result)
    goto LABEL_14;
  v6 = *v4;
LABEL_15:
  v24 = (_QWORD *)*v5;
  *v5 = v6;
  *v4 = v24;
  v25 = *a3;
  v26 = sub_1C575B32C(*a3);
  result = sub_1C575B32C(v24);
  v22 = v26 > result;
  if (v26 == result)
  {
    v23 = sub_1C575E2A0((int *)v25[2], v25[3]);
    result = sub_1C575E2A0((int *)v24[2], v24[3]);
    v5 = v4;
    v4 = a3;
LABEL_17:
    if (v23 >= result)
      return result;
LABEL_22:
    v27 = (_QWORD *)*v5;
    *v5 = *v4;
    *v4 = v27;
    return result;
  }
  v5 = v4;
  v4 = a3;
LABEL_20:
  if (v22)
    goto LABEL_22;
  return result;
}

BOOL sub_1C575F66C(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  _QWORD **v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t *v48;

  v2 = a2;
  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = (_QWORD *)*a1;
      v8 = sub_1C575B32C((_QWORD *)v6);
      v9 = sub_1C575B32C(v7);
      if (v8 == v9)
      {
        v10 = sub_1C575E2A0(*(int **)(v6 + 16), *(_QWORD *)(v6 + 24));
        if (v10 >= sub_1C575E2A0((int *)v7[2], v7[3]))
          return 1;
        v7 = (_QWORD *)*a1;
        v6 = *(v2 - 1);
      }
      else if (v8 <= v9)
      {
        return 1;
      }
      *a1 = v6;
      *(v2 - 1) = (uint64_t)v7;
      return 1;
    case 3:
      sub_1C575F4A0(a1, (_QWORD **)a1 + 1, (_QWORD **)a2 - 1);
      return 1;
    case 4:
      sub_1C575FA20(a1, (_QWORD **)a1 + 1, (_QWORD **)a1 + 2, (_QWORD **)a2 - 1);
      return 1;
    case 5:
      v27 = a1 + 1;
      v28 = a1 + 2;
      v29 = (_QWORD **)(a1 + 3);
      sub_1C575FA20(a1, (_QWORD **)a1 + 1, (_QWORD **)a1 + 2, (_QWORD **)a1 + 3);
      v30 = *(v2 - 1);
      v31 = a1[3];
      v32 = sub_1C575B32C((_QWORD *)v30);
      v33 = sub_1C575B32C((_QWORD *)v31);
      if (v32 == v33)
      {
        v34 = sub_1C575E2A0(*(int **)(v30 + 16), *(_QWORD *)(v30 + 24));
        if (v34 >= sub_1C575E2A0(*(int **)(v31 + 16), *(_QWORD *)(v31 + 24)))
          return 1;
        v31 = (uint64_t)*v29;
        v30 = *(v2 - 1);
      }
      else if (v32 <= v33)
      {
        return 1;
      }
      *v29 = (_QWORD *)v30;
      *(v2 - 1) = v31;
      v35 = (uint64_t)*v29;
      v36 = *v28;
      v37 = sub_1C575B32C(*v29);
      v38 = sub_1C575B32C((_QWORD *)v36);
      if (v37 == v38)
      {
        v39 = sub_1C575E2A0(*(int **)(v35 + 16), *(_QWORD *)(v35 + 24));
        if (v39 >= sub_1C575E2A0(*(int **)(v36 + 16), *(_QWORD *)(v36 + 24)))
          return 1;
        v36 = *v28;
        v35 = (uint64_t)*v29;
      }
      else if (v37 <= v38)
      {
        return 1;
      }
      *v28 = v35;
      *v29 = (_QWORD *)v36;
      v40 = *v27;
      v41 = sub_1C575B32C((_QWORD *)v35);
      v42 = sub_1C575B32C((_QWORD *)v40);
      if (v41 == v42)
      {
        v43 = sub_1C575E2A0(*(int **)(v35 + 16), *(_QWORD *)(v35 + 24));
        if (v43 >= sub_1C575E2A0(*(int **)(v40 + 16), *(_QWORD *)(v40 + 24)))
          return 1;
        v40 = *v27;
        v35 = *v28;
      }
      else if (v41 <= v42)
      {
        return 1;
      }
      a1[1] = v35;
      a1[2] = v40;
      v44 = (_QWORD *)*a1;
      v45 = sub_1C575B32C((_QWORD *)v35);
      v46 = sub_1C575B32C(v44);
      if (v45 == v46)
      {
        v47 = sub_1C575E2A0(*(int **)(v35 + 16), *(_QWORD *)(v35 + 24));
        if (v47 >= sub_1C575E2A0((int *)v44[2], v44[3]))
          return 1;
        v44 = (_QWORD *)*a1;
        v35 = a1[1];
      }
      else if (v45 <= v46)
      {
        return 1;
      }
      *a1 = v35;
      a1[1] = (uint64_t)v44;
      return 1;
    default:
      v11 = a1 + 2;
      sub_1C575F4A0(a1, (_QWORD **)a1 + 1, (_QWORD **)a1 + 2);
      v12 = a1 + 3;
      if (a1 + 3 == v2)
        return 1;
      v13 = 0;
      v14 = 0;
      v48 = v2;
      break;
  }
  do
  {
    v15 = *v12;
    v16 = *v11;
    v17 = sub_1C575B32C((_QWORD *)*v12);
    v18 = sub_1C575B32C((_QWORD *)v16);
    if (v17 == v18)
    {
      v19 = sub_1C575E2A0(*(int **)(v15 + 16), *(_QWORD *)(v15 + 24));
      if (v19 >= sub_1C575E2A0(*(int **)(v16 + 16), *(_QWORD *)(v16 + 24)))
        goto LABEL_24;
      v15 = *v12;
      v16 = *v11;
    }
    else if (v17 <= v18)
    {
      goto LABEL_24;
    }
    *v12 = v16;
    v20 = a1;
    if (v11 == a1)
      goto LABEL_23;
    v21 = v13;
    while (1)
    {
      v22 = (uint64_t)a1 + v21;
      v23 = *(uint64_t *)((char *)a1 + v21 + 8);
      v24 = sub_1C575B32C((_QWORD *)v15);
      v25 = sub_1C575B32C((_QWORD *)v23);
      if (v24 != v25)
      {
        if (v24 <= v25)
        {
          v20 = (uint64_t *)((char *)a1 + v21 + 16);
          goto LABEL_22;
        }
        goto LABEL_19;
      }
      v26 = sub_1C575E2A0(*(int **)(v15 + 16), *(_QWORD *)(v15 + 24));
      if (v26 >= sub_1C575E2A0(*(int **)(v23 + 16), *(_QWORD *)(v23 + 24)))
        break;
      v23 = *(_QWORD *)(v22 + 8);
LABEL_19:
      --v11;
      *(_QWORD *)(v22 + 16) = v23;
      v21 -= 8;
      if (v21 == -16)
      {
        v20 = a1;
        goto LABEL_22;
      }
    }
    v20 = v11;
LABEL_22:
    v2 = v48;
LABEL_23:
    *v20 = v15;
    if (++v14 == 8)
      return v12 + 1 == v2;
LABEL_24:
    v11 = v12;
    v13 += 8;
    ++v12;
  }
  while (v12 != v2);
  return 1;
}

unint64_t sub_1C575FA20(uint64_t *a1, _QWORD **a2, _QWORD **a3, _QWORD **a4)
{
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t result;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;

  sub_1C575F4A0(a1, a2, a3);
  v8 = (uint64_t)*a4;
  v9 = *a3;
  v10 = sub_1C575B32C(*a4);
  result = sub_1C575B32C(v9);
  if (v10 == result)
  {
    v12 = sub_1C575E2A0(*(int **)(v8 + 16), *(_QWORD *)(v8 + 24));
    result = sub_1C575E2A0((int *)v9[2], v9[3]);
    if (v12 >= result)
      return result;
    v9 = *a3;
    v8 = (uint64_t)*a4;
  }
  else if (v10 <= result)
  {
    return result;
  }
  *a3 = (_QWORD *)v8;
  *a4 = v9;
  v13 = *a3;
  v14 = *a2;
  v15 = sub_1C575B32C(*a3);
  result = sub_1C575B32C(v14);
  if (v15 == result)
  {
    v16 = sub_1C575E2A0((int *)v13[2], v13[3]);
    result = sub_1C575E2A0((int *)v14[2], v14[3]);
    if (v16 >= result)
      return result;
    v14 = *a2;
    v13 = *a3;
  }
  else if (v15 <= result)
  {
    return result;
  }
  *a2 = v13;
  *a3 = v14;
  v17 = *a2;
  v18 = *a1;
  v19 = sub_1C575B32C(*a2);
  result = sub_1C575B32C((_QWORD *)v18);
  if (v19 == result)
  {
    v20 = sub_1C575E2A0((int *)v17[2], v17[3]);
    result = sub_1C575E2A0(*(int **)(v18 + 16), *(_QWORD *)(v18 + 24));
    if (v20 >= result)
      return result;
    v18 = *a1;
    v17 = *a2;
  }
  else if (v19 <= result)
  {
    return result;
  }
  *a1 = (uint64_t)v17;
  *a2 = (_QWORD *)v18;
  return result;
}

uint64_t sub_1C575FB6C(uint64_t result, uint64_t a2, uint64_t *a3, unint64_t a4)
{
  size_t v5;
  uint64_t v6;
  const void *v7;
  int v8;
  size_t v9;
  size_t v10;
  unsigned __int8 *v11;
  uint64_t *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  BOOL v26;
  uint64_t v27;
  size_t v28;
  int v29;
  size_t v30;
  size_t v31;
  unsigned __int8 *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  int v55[2];
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  void *__s1;
  unint64_t v61;
  _BYTE v62[31];

  if (*(_QWORD *)(result + 56) <= a4)
    return result;
  *(_QWORD *)v55 = result;
  result = (uint64_t)sub_1C575B7F4((uint64_t *)result, *(char **)(result + 16));
  v57 = a3;
  v6 = *((unsigned int *)a3 + 2);
  if ((_DWORD)v6)
  {
    v7 = (const void *)result;
    v8 = 0;
    v9 = v5;
    if (v5)
    {
      v10 = v5;
      v11 = (unsigned __int8 *)result;
      v12 = a3;
      do
      {
        v13 = *v11++;
        v8 = 33 * v8 + v13;
        --v10;
      }
      while (v10);
    }
    else
    {
      v12 = a3;
    }
    v14 = *v12;
    v15 = *v12 + 8 * v6 + 8;
    v16 = *((unsigned int *)v12 + 5);
    v17 = 1;
    v18 = v8;
    while (1)
    {
      v19 = v18 & (v6 - 1);
      v20 = *(_QWORD **)(v14 + 8 * v19);
      if (v20 != (_QWORD *)-8)
      {
        if (!v20)
          goto LABEL_24;
        if (*(_DWORD *)(v15 + 4 * v19) == v8 && v9 == *v20)
        {
          if (!v9)
            break;
          result = memcmp(v7, (char *)v20 + v16, v9);
          if (!(_DWORD)result)
            break;
        }
      }
      v18 = v17 + v19;
      ++v17;
    }
    if ((_DWORD)v19 != -1 && (int)v19 != v6)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v14 + 8 * (int)v19) + 8);
      if (v21)
      {
        if (*(_BYTE *)(v21 + 16))
        {
          if (*(_BYTE *)(v21 + 16) != 3 || (*(_DWORD *)(v21 + 20) & 0x7FFFFFF) != 0)
            goto LABEL_25;
        }
        else if (*(_QWORD *)(v21 + 72) != v21 + 72 || (*(_BYTE *)(v21 + 34) & 0x80) != 0)
        {
          goto LABEL_25;
        }
      }
    }
  }
LABEL_24:
  v61 = sub_1C575E2A0(*(int **)(*(_QWORD *)v55 + 16), *(_QWORD *)(*(_QWORD *)v55 + 24));
  result = (uint64_t)sub_1C61A7854(a2, (uint64_t *)&v61, (uint64_t)v62);
LABEL_25:
  v22 = *(_QWORD **)(*(_QWORD *)v55 + 72);
  v23 = a4;
  if (v22 != (_QWORD *)(*(_QWORD *)v55 + 80))
  {
    while (1)
    {
      v24 = *((unsigned int *)v22 + 14);
      v53 = v22;
      v25 = (uint64_t *)v22[6];
      if ((_DWORD)v24)
      {
        while (1)
        {
          v26 = !*v25 || *v25 == -8;
          if (!v26)
            break;
          ++v25;
        }
      }
      v58 = v22[6] + 8 * v24;
      if (v25 != (uint64_t *)v58)
        break;
LABEL_63:
      v44 = v53;
      v45 = (_QWORD *)v53[1];
      if (v45)
      {
        do
        {
          v46 = v45;
          v45 = (_QWORD *)*v45;
        }
        while (v45);
      }
      else
      {
        do
        {
          v46 = (_QWORD *)v44[2];
          v26 = *v46 == (_QWORD)v44;
          v44 = v46;
        }
        while (!v26);
      }
      v22 = v46;
      if (v46 == (_QWORD *)(*(_QWORD *)v55 + 80))
        goto LABEL_69;
    }
    v27 = *v25;
    while (1)
    {
      if (*(_QWORD *)(v27 + 8) > v23)
      {
        result = (uint64_t)sub_1C575B7F4(*(uint64_t **)v55, (char *)(v27 + 16));
        v59 = *((unsigned int *)v57 + 2);
        __s1 = (void *)result;
        if (!(_DWORD)v59)
          goto LABEL_57;
        v29 = 0;
        v30 = v28;
        if (v28)
        {
          v31 = v28;
          v32 = (unsigned __int8 *)result;
          do
          {
            v33 = *v32++;
            v29 = 33 * v29 + v33;
            --v31;
          }
          while (v31);
        }
        v34 = *v57;
        v35 = *v57 + 8 * v59 + 8;
        v36 = *((unsigned int *)v57 + 5);
        v37 = 1;
        v38 = v29;
        while (1)
        {
          v39 = v38 & (v59 - 1);
          v40 = *(_QWORD **)(v34 + 8 * v39);
          if (v40 != (_QWORD *)-8)
          {
            if (!v40)
              goto LABEL_57;
            if (*(_DWORD *)(v35 + 4 * v39) == v29 && v30 == *v40)
            {
              if (!v30)
                break;
              result = memcmp(__s1, (char *)v40 + v36, v30);
              if (!(_DWORD)result)
                break;
            }
          }
          v38 = v37 + v39;
          ++v37;
        }
        if ((_DWORD)v39 == -1 || (int)v39 == v59 || (v41 = *(_QWORD *)(*(_QWORD *)(v34 + 8 * (int)v39) + 8)) == 0)
        {
LABEL_57:
          v61 = sub_1C575E2A0((int *)(v27 + 16), *(_QWORD *)v27);
          result = (uint64_t)sub_1C61A7854(a2, (uint64_t *)&v61, (uint64_t)v62);
          goto LABEL_58;
        }
        if (*(_BYTE *)(v41 + 16))
        {
          if (*(_BYTE *)(v41 + 16) == 3 && (*(_DWORD *)(v41 + 20) & 0x7FFFFFF) == 0)
            goto LABEL_57;
        }
        else if (*(_QWORD *)(v41 + 72) == v41 + 72 && (*(_BYTE *)(v41 + 34) & 0x80) == 0)
        {
          goto LABEL_57;
        }
      }
      do
      {
LABEL_58:
        v42 = v25[1];
        ++v25;
        v27 = v42;
        if (v42)
          v43 = v27 == -8;
        else
          v43 = 1;
      }
      while (v43);
      v23 = a4;
      if (v25 == (uint64_t *)v58)
        goto LABEL_63;
    }
  }
LABEL_69:
  v47 = *(_QWORD **)(*(_QWORD *)v55 + 96);
  if (v47 != (_QWORD *)(*(_QWORD *)v55 + 104))
  {
    do
    {
      v48 = (_QWORD *)v47[5];
      if (v48 != v47 + 6)
      {
        do
        {
          result = sub_1C575FB6C(v48 + 7, a2, v57, v23);
          v49 = (_QWORD *)v48[1];
          if (v49)
          {
            do
            {
              v50 = v49;
              v49 = (_QWORD *)*v49;
            }
            while (v49);
          }
          else
          {
            do
            {
              v50 = (_QWORD *)v48[2];
              v26 = *v50 == (_QWORD)v48;
              v48 = v50;
            }
            while (!v26);
          }
          v48 = v50;
        }
        while (v50 != v47 + 6);
      }
      v51 = (_QWORD *)v47[1];
      if (v51)
      {
        do
        {
          v52 = v51;
          v51 = (_QWORD *)*v51;
        }
        while (v51);
      }
      else
      {
        do
        {
          v52 = (_QWORD *)v47[2];
          v26 = *v52 == (_QWORD)v47;
          v47 = v52;
        }
        while (!v26);
      }
      v47 = v52;
    }
    while (v52 != (_QWORD *)(*(_QWORD *)v55 + 104));
  }
  return result;
}

uint64_t sub_1C575FFAC(uint64_t result, unsigned int *a2, uint64_t a3)
{
  uint64_t v5;
  size_t v6;
  void *v7;
  int ValueProfDataFromInst;
  unint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t *v26;
  unint64_t *v27;
  unint64_t v28;
  __n128 *v29;
  __n128 *v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  void *v38;
  uint64_t v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  if (!dword_1ED80FA88)
    return result;
  v5 = result;
  v37 = 0;
  v36 = 0;
  v6 = 16 * dword_1ED80FA88;
  v7 = (void *)operator new[]();
  bzero(v7, v6);
  ValueProfDataFromInst = llvm::getValueProfDataFromInst(v5, 0, dword_1ED80FA88, (uint64_t)v7, &v37, &v36, 1);
  v33 = 0;
  v34 = 0;
  v35 = 0;
  v9 = v37;
  if (v37)
    v10 = ValueProfDataFromInst;
  else
    v10 = 0;
  if (a3)
  {
    if (v10)
    {
      v11 = 0;
      v12 = (uint64_t *)v7;
      do
      {
        if (v12[1] == -1)
        {
          sub_1C54BFAD4((uint64_t)&v33, v12)[1] = -1;
          v9 = v37;
        }
        ++v11;
        v12 += 2;
      }
      while (v11 < v9);
    }
    v13 = a2[2];
    if ((_DWORD)v13)
    {
      v14 = 16 * v13;
      v15 = (_QWORD *)(*(_QWORD *)a2 + 8);
      do
      {
        sub_1C57602EC((uint64_t)&v38, (uint64_t)&v33, v15 - 1, v15);
        if (!v40[0])
          a3 -= *v15;
        v15 += 2;
        v14 -= 16;
      }
      while (v14);
    }
  }
  else
  {
    if (v10)
    {
      v16 = 0;
      v17 = (uint64_t *)v7;
      do
      {
        v18 = v17[1];
        sub_1C54BFAD4((uint64_t)&v33, v17)[1] = v18;
        ++v16;
        v17 += 2;
      }
      while (v16 < v37);
    }
    sub_1C57602EC((uint64_t)&v38, (uint64_t)&v33, *(uint64_t **)a2, (_QWORD *)(*(_QWORD *)a2 + 8));
    a3 = v36;
    if (!v40[0])
    {
      a3 = v36 - *((_QWORD *)v38 + 1);
      v36 = a3;
      *((_QWORD *)v38 + 1) = -1;
    }
  }
  v38 = v40;
  v39 = 0x800000000;
  v19 = &v33[2 * v35];
  if ((_DWORD)v34)
  {
    if (v35)
    {
      v20 = 16 * v35;
      v21 = v33;
      while ((unint64_t)*v21 >= 0xFFFFFFFFFFFFFFFELL)
      {
        v21 += 2;
        v20 -= 16;
        if (!v20)
          goto LABEL_27;
      }
    }
    else
    {
      v21 = v33;
    }
  }
  else
  {
LABEL_27:
    v21 = &v33[2 * v35];
  }
  v22 = &v33[2 * v35];
  if (v21 == v22)
  {
    v30 = (__n128 *)v40;
    v29 = (__n128 *)v40;
LABEL_43:
    v31 = 0;
    goto LABEL_44;
  }
  do
  {
    v23 = *v21;
    v24 = v21[1];
    v25 = v39;
    if (v39 >= HIDWORD(v39))
    {
      sub_1C4F76720(&v38, v23, v24);
    }
    else
    {
      v26 = (uint64_t *)((char *)v38 + 16 * v39);
      *v26 = v23;
      v26[1] = v24;
      LODWORD(v39) = v25 + 1;
    }
    v27 = (unint64_t *)(v21 + 2);
    while (v27 != (unint64_t *)v19)
    {
      v28 = *v27;
      v27 += 2;
      if (v28 <= 0xFFFFFFFFFFFFFFFDLL)
      {
        v21 = (uint64_t *)(v27 - 2);
        goto LABEL_37;
      }
    }
    v21 = v19;
LABEL_37:
    ;
  }
  while (v21 != v22);
  v29 = (__n128 *)v38;
  v30 = (__n128 *)((char *)v38 + 16 * v39);
  if (!(_DWORD)v39)
    goto LABEL_43;
  v31 = 126 - 2 * __clz(v39);
LABEL_44:
  sub_1C57603DC(v29, v30, v31, 1);
  if (dword_1ED80FA88 >= v39)
    v32 = v39;
  else
    v32 = dword_1ED80FA88;
  llvm::annotateValueSite(*(uint64_t ***)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 56) + 40), (unsigned __int8 **)v5, (uint64_t *)v38, v39, a3, 0, v32);
  if (v38 != v40)
    free(v38);
  MEMORY[0x1CAA32FB4](v33, 8);
  return MEMORY[0x1CAA32F9C](v7, 0x1000C80451B5BE8);
}

_QWORD *sub_1C57602EC(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  _QWORD *result;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  int v16;
  BOOL v17;
  unsigned int v18;

  v8 = *(_DWORD *)(a2 + 16);
  if (!v8)
  {
    v14 = 0;
LABEL_5:
    result = sub_1C54BFB8C(a2, (uint64_t)a3, a3, v14);
    *result = *a3;
    result[1] = *a4;
    v9 = *(_QWORD *)a2;
    v8 = *(_DWORD *)(a2 + 16);
    v13 = 1;
    goto LABEL_6;
  }
  v9 = *(_QWORD *)a2;
  v10 = (37 * *a3) & (v8 - 1);
  result = (_QWORD *)(*(_QWORD *)a2 + 16 * v10);
  v12 = *result;
  if (*a3 != *result)
  {
    v15 = 0;
    v16 = 1;
    while (v12 != -1)
    {
      if (v15)
        v17 = 0;
      else
        v17 = v12 == -2;
      if (v17)
        v15 = result;
      v18 = v10 + v16++;
      v10 = v18 & (v8 - 1);
      result = (_QWORD *)(v9 + 16 * v10);
      v12 = *result;
      if (*a3 == *result)
        goto LABEL_3;
    }
    if (v15)
      v14 = v15;
    else
      v14 = result;
    goto LABEL_5;
  }
LABEL_3:
  v13 = 0;
LABEL_6:
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v9 + 16 * v8;
  *(_BYTE *)(a1 + 16) = v13;
  return result;
}

void sub_1C57603DC(__n128 *a1, __n128 *a2, uint64_t a3, char a4)
{
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;
  BOOL v20;
  __n128 *v21;
  __n128 *v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v25;
  _BOOL4 v26;
  unint64_t v27;
  unint64_t v28;
  BOOL v29;
  BOOL v30;
  __n128 *v31;
  unint64_t v32;
  unint64_t v33;
  BOOL v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  _BOOL4 v38;
  _BOOL4 v39;
  BOOL v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  BOOL v46;
  __n128 *v47;
  unint64_t v48;
  _BOOL4 v49;
  _BOOL4 v50;
  __n128 *v51;
  unint64_t v52;
  unint64_t v53;
  BOOL v54;
  BOOL v55;
  unint64_t v56;
  unint64_t v57;
  _BOOL4 v58;
  _BOOL4 v59;
  unint64_t v60;
  unint64_t v61;
  BOOL v62;
  BOOL v63;
  unint64_t v64;
  unint64_t v65;
  __n128 *v66;
  unint64_t v67;
  _BOOL4 v68;
  _BOOL4 v69;
  __n128 *v70;
  __n128 *v71;
  __n128 *v72;
  unint64_t v73;
  unint64_t v74;
  __n128 *v75;
  unint64_t v76;
  _BOOL4 v77;
  _BOOL4 v78;
  __n128 v79;
  unint64_t v80;
  unint64_t v81;
  _BOOL4 v82;
  __n128 v83;
  unint64_t v84;
  unint64_t v85;
  _BOOL4 v86;
  __n128 v87;
  unint64_t v88;
  unint64_t v89;
  _BOOL4 v90;
  __n128 *v91;
  BOOL v92;
  char v93;
  uint64_t v94;
  __n128 *v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _BOOL4 v100;
  _BOOL4 v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  BOOL v105;
  BOOL v106;
  __n128 *v107;
  int64_t v108;
  int64_t v109;
  int64_t v110;
  uint64_t v111;
  __n128 *v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _BOOL4 v116;
  __n128 *v117;
  unint64_t v118;
  __n128 v119;
  unint64_t v120;
  unint64_t v121;
  BOOL v122;
  BOOL v123;
  __n128 *v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  _BOOL4 v128;
  BOOL v129;
  unint64_t v130;
  unint64_t v131;
  _BOOL4 v132;
  _BOOL4 v133;
  uint64_t v134;
  __n128 *v135;
  __n128 *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  _BOOL4 v141;
  uint64_t v142;
  unint64_t v143;
  __n128 *v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  _BOOL4 v148;
  __n128 *v149;
  unint64_t v150;
  BOOL v151;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  _BOOL4 v157;
  _BOOL4 v158;
  __n128 *v159;
  unint64_t v160;
  unint64_t v161;
  BOOL v162;
  BOOL v163;
  __n128 v164;
  __n128 v165;
  __n128 v166;
  __n128 v167;
  __n128 v168;
  __n128 v169;

_QWORD *sub_1C5760CDC(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  unint64_t v7;
  _BOOL4 v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  unint64_t v12;
  _BOOL4 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v18;

  v3 = a2[1];
  v4 = result[1];
  v5 = v3 == v4;
  v6 = v3 > v4;
  if (v5)
    v6 = *a2 > *result;
  v7 = a3[1];
  v5 = v7 == v3;
  v8 = v7 > v3;
  if (v5)
    v8 = *a3 > *a2;
  if (v6)
  {
    if (v8)
    {
      v9 = *(_OWORD *)result;
      *(_OWORD *)result = *(_OWORD *)a3;
LABEL_17:
      *(_OWORD *)a3 = v9;
      return result;
    }
    v15 = *(_OWORD *)result;
    *(_OWORD *)result = *(_OWORD *)a2;
    *(_OWORD *)a2 = v15;
    v16 = a3[1];
    v17 = a2[1];
    v5 = v16 == v17;
    v18 = v16 > v17;
    if (v5)
      v18 = *a3 > *a2;
    if (v18)
    {
      v9 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      goto LABEL_17;
    }
  }
  else if (v8)
  {
    v10 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)a3 = v10;
    v11 = a2[1];
    v12 = result[1];
    v5 = v11 == v12;
    v13 = v11 > v12;
    if (v5)
      v13 = *a2 > *result;
    if (v13)
    {
      v14 = *(_OWORD *)result;
      *(_OWORD *)result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v14;
    }
  }
  return result;
}

BOOL sub_1C5760DC4(__n128 *a1, __n128 *a2)
{
  uint64_t v4;
  _BOOL8 result;
  unint64_t v6;
  __n128 *v7;
  unint64_t v8;
  _BOOL4 v9;
  BOOL v10;
  _BOOL4 v11;
  __n128 v12;
  __n128 *v13;
  __n128 *v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  BOOL v24;
  BOOL v25;
  __n128 *v26;
  __n128 *v27;
  __n128 *v28;
  __n128 *v29;
  unint64_t v30;
  unint64_t v31;
  __n128 *v32;
  unint64_t v33;
  _BOOL4 v34;
  _BOOL4 v35;
  __n128 v36;
  unint64_t v37;
  unint64_t v38;
  _BOOL4 v39;
  __n128 v40;
  unint64_t v41;
  unint64_t v42;
  _BOOL4 v43;
  __n128 v44;
  unint64_t v45;
  unint64_t v46;
  _BOOL4 v47;
  __n128 v48;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = a2[-1].n128_u64[1];
      v7 = a2 - 1;
      v8 = a1->n128_u64[1];
      v9 = a2[-1].n128_u64[0] > a1->n128_u64[0];
      v10 = v6 == v8;
      v11 = v6 > v8;
      if (!v10)
        v9 = v11;
      if (v9)
      {
        v12 = *a1;
        *a1 = *v7;
        *v7 = v12;
      }
      return result;
    case 3:
      sub_1C5760CDC(a1, (__n128 *)a1[1].n128_u64, (__n128 *)a2[-1].n128_u64);
      return 1;
    case 4:
      sub_1C5761050(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      v27 = a1 + 1;
      v28 = a1 + 2;
      v29 = a1 + 3;
      sub_1C5761050(a1, a1 + 1, a1 + 2, a1 + 3);
      v30 = a2[-1].n128_u64[0];
      v31 = a2[-1].n128_u64[1];
      v32 = a2 - 1;
      v33 = a1[3].n128_u64[1];
      v34 = v30 > a1[3].n128_u64[0];
      v10 = v31 == v33;
      v35 = v31 > v33;
      if (!v10)
        v34 = v35;
      if (v34)
      {
        v36 = *v29;
        *v29 = *v32;
        *v32 = v36;
        v37 = a1[3].n128_u64[1];
        v38 = a1[2].n128_u64[1];
        v10 = v37 == v38;
        v39 = v37 > v38;
        if (v10)
          v39 = a1[3].n128_u64[0] > a1[2].n128_u64[0];
        if (v39)
        {
          v40 = *v28;
          *v28 = *v29;
          *v29 = v40;
          v41 = a1[2].n128_u64[1];
          v42 = a1[1].n128_u64[1];
          v10 = v41 == v42;
          v43 = v41 > v42;
          if (v10)
            v43 = a1[2].n128_u64[0] > a1[1].n128_u64[0];
          if (v43)
          {
            v44 = *v27;
            *v27 = *v28;
            *v28 = v44;
            v45 = a1[1].n128_u64[1];
            v46 = a1->n128_u64[1];
            v10 = v45 == v46;
            v47 = v45 > v46;
            if (v10)
              v47 = a1[1].n128_u64[0] > a1->n128_u64[0];
            if (v47)
            {
              v48 = *a1;
              *a1 = *v27;
              *v27 = v48;
            }
          }
        }
      }
      return 1;
    default:
      v13 = a1 + 2;
      sub_1C5760CDC(a1, (__n128 *)a1[1].n128_u64, (__n128 *)a1[2].n128_u64);
      v14 = a1 + 3;
      if (&a1[3] == a2)
        return 1;
      v15 = 0;
      v16 = 0;
      break;
  }
  while (1)
  {
    v18 = v14->n128_u64[0];
    v17 = v14->n128_u64[1];
    v19 = v13->n128_u64[1];
    v10 = v17 == v19;
    v20 = v17 > v19;
    if (v10)
      v20 = v14->n128_u64[0] > v13->n128_u64[0];
    if (v20)
    {
      v21 = v15;
      while (1)
      {
        v22 = (char *)a1 + v21;
        *(__n128 *)((char *)a1 + v21 + 48) = *(__n128 *)((char *)a1 + v21 + 32);
        if (v21 == -32)
          break;
        v23 = *((_QWORD *)v22 + 3);
        v24 = v18 > *((_QWORD *)v22 + 2);
        v10 = v17 == v23;
        v25 = v17 > v23;
        if (!v10)
          v24 = v25;
        v21 -= 16;
        if (!v24)
        {
          v26 = (__n128 *)((char *)a1 + v21 + 48);
          goto LABEL_19;
        }
      }
      v26 = a1;
LABEL_19:
      v26->n128_u64[0] = v18;
      v26->n128_u64[1] = v17;
      if (++v16 == 8)
        return &v14[1] == a2;
    }
    v13 = v14;
    v15 += 16;
    if (++v14 == a2)
      return 1;
  }
}

__n128 sub_1C5761050(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4)
{
  __n128 result;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  _BOOL4 v12;
  unint64_t v13;
  unint64_t v14;
  _BOOL4 v15;
  unint64_t v16;
  unint64_t v17;
  _BOOL4 v18;

  sub_1C5760CDC(a1, a2, a3);
  v9 = a4->n128_u64[1];
  v10 = a3->n128_u64[1];
  v11 = v9 == v10;
  v12 = v9 > v10;
  if (v11)
    v12 = a4->n128_u64[0] > a3->n128_u64[0];
  if (v12)
  {
    result = *a3;
    *a3 = *a4;
    *a4 = result;
    v13 = a3->n128_u64[1];
    v14 = a2->n128_u64[1];
    v11 = v13 == v14;
    v15 = v13 > v14;
    if (v11)
      v15 = a3->n128_u64[0] > a2->n128_u64[0];
    if (v15)
    {
      result = *a2;
      *a2 = *a3;
      *a3 = result;
      v16 = a2->n128_u64[1];
      v17 = a1->n128_u64[1];
      v11 = v16 == v17;
      v18 = v16 > v17;
      if (v11)
        v18 = a2->n128_u64[0] > a1->n128_u64[0];
      if (v18)
      {
        result = *a1;
        *a1 = *a2;
        *a2 = result;
      }
    }
  }
  return result;
}

uint64_t sub_1C5761128(uint64_t result)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;
  _QWORD *v7;
  _QWORD *v8;

  *(_DWORD *)(result + 48) |= 2u;
  v1 = *(_QWORD **)(result + 96);
  v2 = (_QWORD *)(result + 104);
  if (v1 != (_QWORD *)(result + 104))
  {
    do
    {
      v3 = (_QWORD *)v1[5];
      if (v3 != v1 + 6)
      {
        do
        {
          result = sub_1C5761128(v3 + 7);
          v4 = (_QWORD *)v3[1];
          if (v4)
          {
            do
            {
              v5 = v4;
              v4 = (_QWORD *)*v4;
            }
            while (v4);
          }
          else
          {
            do
            {
              v5 = (_QWORD *)v3[2];
              v6 = *v5 == (_QWORD)v3;
              v3 = v5;
            }
            while (!v6);
          }
          v3 = v5;
        }
        while (v5 != v1 + 6);
      }
      v7 = (_QWORD *)v1[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v1[2];
          v6 = *v8 == (_QWORD)v1;
          v1 = v8;
        }
        while (!v6);
      }
      v1 = v8;
    }
    while (v8 != v2);
  }
  return result;
}

char *sub_1C57611EC(uint64_t a1, uint64_t a2, uint64_t a3, __int128 **a4)
{
  unint64_t v4;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  void **v13;
  char *v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  float v18;
  float v19;
  _BOOL8 v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;

  v8 = sub_1C62A350C(a2);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      v4 = v8;
      if (v8 >= v10)
        v4 = v8 % v10;
    }
    else
    {
      v4 = (v10 - 1) & v8;
    }
    v13 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v13)
    {
      v14 = (char *)*v13;
      if (*v13)
      {
        do
        {
          v15 = *((_QWORD *)v14 + 1);
          if (v15 == v9)
          {
            if (sub_1C62A37D8((uint64_t)(v14 + 16), a2))
              return v14;
          }
          else
          {
            if (v12 > 1)
            {
              if (v15 >= v10)
                v15 %= v10;
            }
            else
            {
              v15 &= v10 - 1;
            }
            if (v15 != v4)
              break;
          }
          v14 = *(char **)v14;
        }
        while (v14);
      }
    }
  }
  v14 = (char *)operator new(0xB0uLL);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = v9;
  v17 = **a4;
  v16 = (*a4)[1];
  *((_QWORD *)v14 + 6) = *((_QWORD *)*a4 + 4);
  *((_OWORD *)v14 + 1) = v17;
  *((_OWORD *)v14 + 2) = v16;
  *(_OWORD *)(v14 + 120) = 0u;
  *(_OWORD *)(v14 + 104) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 136) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *((_QWORD *)v14 + 16) = v14 + 136;
  *((_QWORD *)v14 + 21) = 0;
  *((_QWORD *)v14 + 20) = 0;
  *((_QWORD *)v14 + 19) = v14 + 160;
  v18 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    v20 = 1;
    if (v10 >= 3)
      v20 = (v10 & (v10 - 1)) != 0;
    v21 = v20 | (2 * v10);
    v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22)
      v23 = v22;
    else
      v23 = v21;
    sub_1C542C2D4(a1, v23);
    v10 = *(_QWORD *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v4 = v9 % v10;
      else
        v4 = v9;
    }
    else
    {
      v4 = (v10 - 1) & v9;
    }
  }
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v25)
  {
    *(_QWORD *)v14 = *v25;
LABEL_39:
    *v25 = v14;
    goto LABEL_40;
  }
  *(_QWORD *)v14 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v14;
  *(_QWORD *)(v24 + 8 * v4) = a1 + 16;
  if (*(_QWORD *)v14)
  {
    v26 = *(_QWORD *)(*(_QWORD *)v14 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v26 >= v10)
        v26 %= v10;
    }
    else
    {
      v26 &= v10 - 1;
    }
    v25 = (_QWORD *)(*(_QWORD *)a1 + 8 * v26);
    goto LABEL_39;
  }
LABEL_40:
  ++*(_QWORD *)(a1 + 24);
  return v14;
}

void sub_1C5761450(uint64_t a1, _QWORD *a2, int a3, _BYTE *a4, int a5)
{
  _QWORD *v6;
  _QWORD *v8;
  uint64_t v9;
  const char *v10;
  void **v11;
  uint64_t (**v12)(llvm::DiagnosticInfoWithLocationBase *__hidden);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  llvm::OptimizationRemarkEmitter *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  llvm::DiagnosticInfoOptimizationBase *v22;
  char *v23;
  _BYTE *v24;
  void **v25;
  const char *v26;
  uint64_t v27;
  unint64_t v28;
  void **v29;
  uint64_t v30;
  uint64_t (**v31)(llvm::DiagnosticInfoWithLocationBase *__hidden);
  void *v32[2];
  char v33;
  void *__p;
  char v35;
  void *v36[2];
  char v37;
  void *v38;
  char v39;
  const char *v40;
  uint64_t v41;
  uint64_t (**v42)(llvm::DiagnosticInfoIROptimization *__hidden);
  int v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  const char *v49;
  const char *v50;
  uint64_t v51;
  char v52;
  char v53;
  void *v54;
  uint64_t v55;
  _BYTE v56[260];
  int v57;
  uint64_t v58;
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  if (a3)
  {
    v6 = a2;
    v8 = &a2[a3];
    if (a5)
      v9 = 10;
    else
      v9 = 7;
    if (a5)
      v10 = "hotness: '";
    else
      v10 = "size: '";
    v11 = &v54;
    v12 = &off_1E814E790;
    do
    {
      v13 = (_QWORD *)*v6;
      v14 = *(_QWORD *)(*v6 - 32);
      if (v14 && !*(_BYTE *)(v14 + 16) && *(_QWORD *)(v14 + 24) == v13[9])
      {
        v15 = v13[6];
        v31 = v12;
        if (v15)
        {
          v16 = *(_QWORD *)(v15 - 8 * *(unsigned int *)(v15 + 8));
          if (*(_BYTE *)v16 != 15)
            v16 = *(_QWORD *)(v16 - 8 * *(unsigned int *)(v16 + 8));
          v17 = *(_DWORD *)(v15 + 4);
          LODWORD(v15) = *(unsigned __int16 *)(v15 + 2);
        }
        else
        {
          v16 = 0;
          v17 = 0;
        }
        v18 = *(llvm::OptimizationRemarkEmitter **)(a1 + 1136);
        v19 = v13[5];
        v20 = *(_QWORD *)(v19 + 56);
        v43 = 11;
        v44 = 2;
        v45 = v20;
        v46 = v16;
        v47 = v17;
        v48 = v15;
        v49 = "sample-profile-inline";
        v50 = "InlineAttempt";
        v51 = 13;
        v52 = 0;
        v53 = 0;
        v54 = v56;
        v55 = 0x400000000;
        v56[256] = 0;
        v57 = -1;
        v58 = v19;
        v40 = "previous inlining reattempted for ";
        v41 = 34;
        v42 = &off_1E814E570;
        sub_1C53B17B4((uint64_t)v11, (const void **)&v40);
        v40 = v10;
        v41 = v9;
        sub_1C53B17B4((uint64_t)v11, (const void **)&v40);
        llvm::DiagnosticInfoOptimizationBase::Argument::Argument((uint64_t)v36, "Callee", 6uLL, (_BYTE *)v14);
        v21 = sub_1C47E3888((uint64_t)&v42, (uint64_t)v36);
        v40 = "' into '";
        v41 = 8;
        sub_1C53B17B4(v21 + 80, (const void **)&v40);
        llvm::DiagnosticInfoOptimizationBase::Argument::Argument((uint64_t)v32, "Caller", 6uLL, a4);
        v22 = (llvm::DiagnosticInfoOptimizationBase *)sub_1C47E3888(v21, (uint64_t)v32);
        v40 = "'";
        v41 = 1;
        sub_1C53B17B4((uint64_t)v22 + 80, (const void **)&v40);
        llvm::OptimizationRemarkEmitter::emit(v18, v22);
        if (v35 < 0)
          operator delete(__p);
        v12 = v31;
        if (v33 < 0)
          operator delete(v32[0]);
        if (v39 < 0)
          operator delete(v38);
        if (v37 < 0)
          operator delete(v36[0]);
        v42 = v31;
        v23 = (char *)v54;
        if ((_DWORD)v55)
        {
          v30 = a1;
          v24 = a4;
          v25 = v11;
          v26 = v10;
          v27 = v9;
          v28 = (unint64_t)v55 << 6;
          do
          {
            v29 = (void **)&v23[v28];
            if (v23[v28 - 17] < 0)
              operator delete(*(v29 - 5));
            if (*((char *)v29 - 41) < 0)
              operator delete(*(v29 - 8));
            v28 -= 64;
          }
          while (v28);
          v23 = (char *)v54;
          v9 = v27;
          v10 = v26;
          v11 = v25;
          a4 = v24;
          a1 = v30;
          v12 = v31;
        }
        if (v23 != v56)
          free(v23);
      }
      ++v6;
    }
    while (v6 != v8);
  }
}

uint64_t sub_1C5761794(_QWORD *(***a1)(unint64_t *__return_ptr, _QWORD, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  llvm::SmallPtrSetImplBase *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v2 = a2 + 72;
  v3 = *(_QWORD *)(a2 + 80);
  if (v3 == a2 + 72)
  {
    v5 = 0;
  }
  else
  {
    v5 = 0;
    v6 = (uint64_t)(a1 + 4);
    v7 = (llvm::SmallPtrSetImplBase *)(a1 + 10);
    do
    {
      if (v3)
        v8 = v3 - 24;
      else
        v8 = 0;
      sub_1C5762850((uint64_t)&v12, a1, v8);
      if ((v13 & 1) == 0)
      {
        v9 = v12;
        v11 = v8;
        sub_1C617C470(v6, &v11)[1] = v9;
        sub_1C4774094(v7, v8);
        v5 = 1;
      }
      v3 = *(_QWORD *)(v3 + 8);
    }
    while (v3 != v2);
  }
  return v5 & 1;
}

void sub_1C5761880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  unint64_t v30;
  uint64_t i;
  uint64_t j;
  llvm::SmallPtrSetImplBase **v33;
  llvm::SmallPtrSetImplBase **v34;
  char v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  llvm::SmallPtrSetImplBase *v44;
  _BYTE *v45;
  llvm::SmallPtrSetImplBase *v46;
  uint64_t v47;
  char *v48;
  int v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  BOOL v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  BOOL v60;
  uint64_t v62;
  char v63;
  llvm::SmallPtrSetImplBase *v64;
  llvm::SmallPtrSetImplBase *v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  llvm::SmallPtrSetImplBase *v71;
  __int128 v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t *v76;
  _QWORD *v77;
  unsigned int *v78;
  uint64_t v79;
  uint64_t *v80;
  llvm::SmallPtrSetImplBase **v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  llvm::SmallPtrSetImplBase *v98;
  __int128 v99;
  __int128 v100;
  _QWORD *v101;
  llvm::SmallPtrSetImplBase *v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  __int128 v125;
  _QWORD *v126;
  int v127;
  unsigned int v128;
  char *v129;
  unint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  _QWORD *v133;
  char *v134;
  _QWORD *v135;
  char *v136;
  char **v137;
  char *v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  _QWORD *v150;
  unint64_t v151;
  _QWORD *v152;
  char *v153;
  _QWORD *v154;
  char *v155;
  char **v156;
  char *v157;
  char *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  _QWORD *v168;
  uint64_t *v169;
  uint64_t *v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184[2];
  unsigned int v185;
  __int128 v186;
  __int128 v187;
  __int128 *v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  llvm::SmallPtrSetImplBase *v193[2];
  __int128 __p;
  __int128 v195;
  uint64_t v196;
  uint64_t *v197;
  llvm::SmallPtrSetImplBase **v198;
  char *v199;
  __int128 *v200;
  char *v201;
  char *v202;
  uint64_t v203;
  __int128 v204;
  __int128 v205;
  _QWORD v206[8];
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  int v211;
  _QWORD v212[11];

  v212[8] = *MEMORY[0x1E0C80C00];
  if (byte_1ED837B98)
  {
    v11 = a2 + 72;
    v184[0] = 0;
    v184[1] = 0;
    v185 = 0;
    v12 = *(_QWORD *)(a2 + 80);
    v13 = a2 + 72;
    if (v12 != a2 + 72)
    {
      do
      {
        if (v12)
          v14 = v12 - 24;
        else
          v14 = 0;
        sub_1C5762850((uint64_t)&v208, (_QWORD *(***)(unint64_t *__return_ptr, _QWORD, uint64_t))a1, v14);
        if ((v210 & 1) == 0)
        {
          v15 = (uint64_t)v208;
          *(_QWORD *)&v204 = v14;
          sub_1C617C470((uint64_t)v184, (uint64_t *)&v204)[1] = v15;
        }
        v12 = *(_QWORD *)(v12 + 8);
      }
      while (v12 != v11);
      v13 = *(_QWORD *)(a2 + 80);
    }
    v208 = (char *)v212;
    v209 = (char *)v212;
    v210 = 8;
    v211 = 0;
    sub_1C62A3D5C(&v186, v13, (llvm::SmallPtrSetImplBase *)&v208);
    v28 = (_BYTE *)*((_QWORD *)&v186 + 1);
    v204 = v186;
    v205 = v187;
    v206[0] = &v208;
    memset(&v206[1], 0, 24);
    v29 = (_BYTE *)v187;
    v30 = (uint64_t)(v187 - *((_QWORD *)&v186 + 1)) >> 5;
    v186 = (unint64_t)v186;
    v187 = 0uLL;
    sub_1C4E19D7C((_QWORD *)&v186 + 1, v28, v29, v30);
    while ((_QWORD)v187 != *((_QWORD *)&v186 + 1))
      sub_1C62A3DC8((uint64_t)&v186);
    if ((_QWORD)v187)
      operator delete((void *)v187);
    sub_1C618F0A8(&v204);
    *(_QWORD *)&v204 = v206;
    *((_QWORD *)&v204 + 1) = v206;
    *(_QWORD *)&v205 = 8;
    DWORD2(v205) = 0;
    v179 = a2;
    for (i = *(_QWORD *)(a2 + 80); i != v11; i = *(_QWORD *)(i + 8))
    {
      if (i)
        v41 = i - 24;
      else
        v41 = 0;
      v42 = *(_QWORD *)(v41 + 40);
      if (v42 == v41 + 40)
      {
LABEL_73:
        sub_1C61E5F20(v193, v41, (llvm::SmallPtrSetImplBase *)&v204);
        v44 = v193[1];
        v186 = *(_OWORD *)v193;
        v187 = __p;
        v45 = (_BYTE *)__p;
        v188 = &v204;
        *(_QWORD *)&v190 = 0;
        v189 = 0uLL;
        __p = 0uLL;
        v193[1] = 0;
        sub_1C4D6CDA0(&v193[1], v44, v45, 0xAAAAAAAAAAAAAAABLL * ((v45 - (_BYTE *)v44) >> 3));
        v200 = v188;
        v202 = 0;
        v203 = 0;
        v201 = 0;
        sub_1C4D6CDA0(&v201, (_BYTE *)v189, *((_BYTE **)&v189 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&v189 + 1) - v189) >> 3));
        v46 = (llvm::SmallPtrSetImplBase *)__p;
        while (1)
        {
LABEL_74:
          if (v46 - v193[1] == v202 - v201)
          {
            if (v193[1] == v46)
            {
LABEL_131:
              if (v201)
              {
                v202 = v201;
                operator delete(v201);
                v46 = v193[1];
              }
              if (v46)
              {
                *(_QWORD *)&__p = v46;
                operator delete(v46);
              }
              sub_1C618F0A8(&v186);
              goto LABEL_70;
            }
            v47 = 0;
            while (1)
            {
              v48 = (char *)v193[1] + v47;
              if (*(_QWORD *)((char *)v193[1] + v47) != *(_QWORD *)&v201[v47])
                break;
              v49 = v201[v47 + 16];
              if (v48[16])
                v50 = v49 == 0;
              else
                v50 = 1;
              if (v50)
              {
                if ((v48[16] == 0) == (v49 != 0))
                  break;
              }
              else if (*(_QWORD *)((char *)v193[1] + v47 + 8) != *(_QWORD *)&v201[v47 + 8])
              {
                break;
              }
              v47 += 24;
              if (v48 + 24 == (char *)v46)
              {
                v46 = v193[1];
                goto LABEL_131;
              }
            }
          }
          while (2)
          {
            if (!*((_BYTE *)v46 - 8))
            {
              v51 = *((_QWORD *)v46 - 3);
              do
              {
                v51 = *(_QWORD *)(v51 + 8);
                if (!v51)
                  break;
                v52 = *(_QWORD *)(v51 + 24);
                v53 = *(unsigned __int8 *)(v52 + 16);
                v54 = v52 && v53 >= 0x1C;
              }
              while (!v54 || v53 - 29 >= 0xB);
              *((_QWORD *)v46 - 2) = v51;
              *((_BYTE *)v46 - 8) = 1;
            }
            while (1)
            {
              v56 = *((_QWORD *)v46 - 2);
              if (!v56)
                break;
              v57 = *((_QWORD *)v46 - 2);
              do
              {
                v57 = *(_QWORD *)(v57 + 8);
                if (!v57)
                  break;
                v58 = *(_QWORD *)(v57 + 24);
                v59 = *(unsigned __int8 *)(v58 + 16);
                v60 = v58 && v59 >= 0x1C;
              }
              while (!v60 || v59 - 29 > 0xA);
              *((_QWORD *)v46 - 2) = v57;
              v62 = *(_QWORD *)(*(_QWORD *)(v56 + 24) + 40);
              sub_1C4774094(v193[0], v62);
              if (v63)
              {
                v64 = (llvm::SmallPtrSetImplBase *)__p;
                if ((unint64_t)__p >= *((_QWORD *)&__p + 1))
                {
                  v65 = v193[1];
                  v66 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(__p - (unint64_t)v193[1]) >> 3);
                  v67 = v66 + 1;
                  if (v66 + 1 > 0xAAAAAAAAAAAAAAALL)
LABEL_269:
                    abort();
                  if (0x5555555555555556 * ((uint64_t)(*((_QWORD *)&__p + 1) - (unint64_t)v193[1]) >> 3) > v67)
                    v67 = 0x5555555555555556 * ((uint64_t)(*((_QWORD *)&__p + 1) - (unint64_t)v193[1]) >> 3);
                  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((_QWORD *)&__p + 1) - (unint64_t)v193[1]) >> 3) >= 0x555555555555555)
                    v68 = 0xAAAAAAAAAAAAAAALL;
                  else
                    v68 = v67;
                  if (v68)
                  {
                    if (v68 > 0xAAAAAAAAAAAAAAALL)
LABEL_270:
                      sub_1C4764EE4();
                    v69 = (char *)operator new(24 * v68);
                  }
                  else
                  {
                    v69 = 0;
                  }
                  v70 = &v69[24 * v66];
                  *(_QWORD *)v70 = v62;
                  v70[8] = 0;
                  v70[16] = 0;
                  v71 = (llvm::SmallPtrSetImplBase *)v70;
                  if (v64 != v65)
                  {
                    do
                    {
                      v72 = *(_OWORD *)((char *)v64 - 24);
                      *((_QWORD *)v71 - 1) = *((_QWORD *)v64 - 1);
                      *(_OWORD *)((char *)v71 - 24) = v72;
                      v71 = (llvm::SmallPtrSetImplBase *)((char *)v71 - 24);
                      v64 = (llvm::SmallPtrSetImplBase *)((char *)v64 - 24);
                    }
                    while (v64 != v65);
                    v64 = v193[1];
                  }
                  v46 = (llvm::SmallPtrSetImplBase *)(v70 + 24);
                  v193[1] = v71;
                  *(_QWORD *)&__p = v70 + 24;
                  *((_QWORD *)&__p + 1) = &v69[24 * v68];
                  if (v64)
                    operator delete(v64);
                }
                else
                {
                  *(_QWORD *)__p = v62;
                  *((_BYTE *)v64 + 8) = 0;
                  v46 = (llvm::SmallPtrSetImplBase *)((char *)v64 + 24);
                  *((_BYTE *)v64 + 16) = 0;
                }
                *(_QWORD *)&__p = v46;
                goto LABEL_74;
              }
            }
            v46 = (llvm::SmallPtrSetImplBase *)(__p - 24);
            *(_QWORD *)&__p = v46;
            if (v193[1] != v46)
              continue;
            break;
          }
        }
      }
      if (v42)
        v43 = v42 - 24;
      else
        v43 = 0;
      if (*(_BYTE *)(v43 + 16) != 30)
      {
        switch(*(_BYTE *)(v43 + 16))
        {
          case 0x1E:
            __break(1u);
            return;
          case 0x1F:
            v73 = (*(_DWORD *)(v43 + 20) >> 1) & 0x3FFFFFF;
            goto LABEL_137;
          case 0x20:
          case 0x26:
            v73 = (*(_DWORD *)(v43 + 20) & 0x7FFFFFF) - 1;
            goto LABEL_137;
          case 0x21:
          case 0x25:
            continue;
          case 0x24:
            v73 = *(_WORD *)(v43 + 18) & 1;
            goto LABEL_137;
          case 0x27:
            v73 = *(_DWORD *)(v43 + 80) + 1;
LABEL_137:
            if (!v73)
              goto LABEL_73;
            continue;
          default:
            goto LABEL_73;
        }
      }
LABEL_70:
      ;
    }
    v200 = 0;
    v201 = 0;
    LODWORD(v202) = 0;
    v197 = 0;
    v198 = 0;
    v199 = 0;
    sub_1C62A3BBC(&v200, HIDWORD(v210) - v211);
    sub_1C4DB1D18((uint64_t)&v197, (HIDWORD(v210) - v211));
    for (j = *(_QWORD *)(v179 + 80); j != v11; j = *(_QWORD *)(j + 8))
    {
      if (j)
        v74 = j - 24;
      else
        v74 = 0;
      v75 = (char *)sub_1C477672C((uint64_t)&v208, v74);
      if (v209 == v208)
        v76 = (uint64_t *)((char *)&v210 + 4);
      else
        v76 = &v210;
      if (v75 != &v209[8 * *(unsigned int *)v76])
      {
        v77 = sub_1C477672C((uint64_t)&v204, v74);
        v78 = *((_QWORD *)&v204 + 1) == (_QWORD)v204 ? (unsigned int *)((char *)&v205 + 4) : (unsigned int *)&v205;
        if (v77 != (_QWORD *)(*((_QWORD *)&v204 + 1) + 8 * *v78))
        {
          v79 = ((char *)v198 - (char *)v197) >> 3;
          *(_QWORD *)&v186 = v74;
          sub_1C617C470((uint64_t)&v200, (uint64_t *)&v186)[1] = v79;
          v80 = (uint64_t *)v198;
          if (v198 >= (llvm::SmallPtrSetImplBase **)v199)
          {
            v82 = v197;
            v83 = ((char *)v198 - (char *)v197) >> 3;
            v84 = v83 + 1;
            if ((unint64_t)(v83 + 1) >> 61)
              goto LABEL_269;
            v85 = v199 - (char *)v197;
            if ((v199 - (char *)v197) >> 2 > v84)
              v84 = v85 >> 2;
            if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8)
              v86 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v86 = v84;
            if (v86)
            {
              if (v86 >> 61)
                goto LABEL_270;
              v87 = (char *)operator new(8 * v86);
            }
            else
            {
              v87 = 0;
            }
            v88 = (uint64_t *)&v87[8 * v83];
            *v88 = v74;
            v81 = (llvm::SmallPtrSetImplBase **)(v88 + 1);
            if (v80 != v82)
            {
              do
              {
                v89 = *--v80;
                *--v88 = v89;
              }
              while (v80 != v82);
              v80 = v197;
            }
            v197 = v88;
            v198 = v81;
            v199 = &v87[8 * v86];
            if (v80)
              operator delete(v80);
          }
          else
          {
            *v198 = (llvm::SmallPtrSetImplBase *)v74;
            v81 = (llvm::SmallPtrSetImplBase **)(v80 + 1);
          }
          v198 = v81;
        }
      }
    }
    sub_1C61446F0((unsigned int *)(a1 + 32));
    sub_1C6201058((unsigned int *)(a1 + 56));
    v34 = (llvm::SmallPtrSetImplBase **)v197;
    v33 = v198;
    if (v197 == (uint64_t *)v198)
      goto LABEL_54;
    v181 = a1 + 56;
    v182 = a1 + 32;
    v35 = 0;
    v183 = a1 + 992;
    v36 = v184[0];
    v37 = v185;
    v38 = v184[0] + 16 * v185;
    do
    {
      v193[0] = *v34;
      *(_QWORD *)&v186 = 0;
      if (sub_1C6144BDC(v36, v37, (uint64_t)v193[0], &v186))
        v39 = (_QWORD)v186 == v38;
      else
        v39 = 1;
      if (!v39)
      {
        v40 = *(_QWORD *)(v186 + 8);
        if (v40)
        {
          sub_1C617C470(v182, (uint64_t *)v193)[1] = v40;
          v35 = 1;
        }
      }
      ++v34;
    }
    while (v34 != v33);
    v34 = (llvm::SmallPtrSetImplBase **)v197;
    if ((((unint64_t)((char *)v198 - (char *)v197) > 0xF) & v35) != 0)
    {
      __p = 0u;
      v195 = 0u;
      *(_OWORD *)v193 = 0u;
      sub_1C51D6ED4((uint64_t *)v193, ((char *)v198 - (char *)v197) >> 3);
      v90 = v197;
      v91 = (uint64_t *)v198;
      if (v197 != (uint64_t *)v198)
      {
        do
        {
          v192 = *v90;
          *((_QWORD *)&v186 + 1) = 0;
          LOBYTE(v187) = 0;
          *((_QWORD *)&v187 + 1) = 0;
          LOBYTE(v188) = 0;
          v189 = 0u;
          v190 = 0u;
          v191 = 0u;
          v207 = 0;
          v95 = v184[0];
          v96 = v185;
          if (!sub_1C6144BDC(v184[0], v185, v192, &v207) || v207 == v95 + 16 * v96)
          {
            v97 = 0;
            LOBYTE(v187) = 1;
          }
          else
          {
            LOBYTE(v187) = 0;
            v97 = sub_1C617C470((uint64_t)v184, &v192)[1];
          }
          v98 = v193[1];
          *(_QWORD *)&v186 = 0x2E8BA2E8BA2E8BA3 * ((v193[1] - v193[0]) >> 3);
          *((_QWORD *)&v186 + 1) = v97;
          if (v193[1] >= (llvm::SmallPtrSetImplBase *)__p)
          {
            v102 = (llvm::SmallPtrSetImplBase *)sub_1C51D7054((uint64_t *)v193, (uint64_t)&v186);
          }
          else
          {
            v99 = v186;
            v100 = v187;
            *((_BYTE *)v193[1] + 32) = (_BYTE)v188;
            *(_OWORD *)v98 = v99;
            *((_OWORD *)v98 + 1) = v100;
            *((_QWORD *)v98 + 6) = 0;
            *((_QWORD *)v98 + 7) = 0;
            *((_QWORD *)v98 + 5) = 0;
            sub_1C4DFE394((_QWORD *)v98 + 5, (const void *)v189, *((uint64_t *)&v189 + 1), (uint64_t)(*((_QWORD *)&v189 + 1) - v189) >> 3);
            *((_QWORD *)v98 + 8) = 0;
            *((_QWORD *)v98 + 9) = 0;
            v101 = (_QWORD *)((char *)v98 + 64);
            v101[2] = 0;
            sub_1C4DFE394(v101, *((const void **)&v190 + 1), v191, (uint64_t)(v191 - *((_QWORD *)&v190 + 1)) >> 3);
            v102 = (llvm::SmallPtrSetImplBase *)(v101 + 3);
          }
          v193[1] = v102;
          sub_1C620185C(&v186);
          ++v90;
        }
        while (v90 != v91);
        v103 = v197;
        v104 = (uint64_t *)v198;
        v178 = (uint64_t *)v198;
        while (v103 != v104)
        {
          v180 = v103;
          v105 = *v103;
          *(_QWORD *)&v186 = *v103;
          v106 = sub_1C6201558(v183, (uint64_t *)&v186);
          v107 = *((unsigned int *)v106 + 4);
          if ((_DWORD)v107)
          {
            v108 = (uint64_t *)v106[1];
            v109 = &v108[v107];
            do
            {
              v110 = *v108;
              v207 = *v108;
              if ((_DWORD)v202)
              {
                v111 = ((v110 >> 4) ^ (v110 >> 9)) & ((_DWORD)v202 - 1);
                v112 = *(_QWORD *)&v200[v111];
                if (v110 == v112)
                {
LABEL_191:
                  v113 = sub_1C617C470((uint64_t)&v200, (uint64_t *)&v186)[1];
                  v114 = sub_1C617C470((uint64_t)&v200, &v207)[1];
                  v115 = v195;
                  if ((unint64_t)v195 >= *((_QWORD *)&v195 + 1))
                  {
                    v117 = *((_QWORD *)&__p + 1);
                    v118 = (uint64_t)(v195 - *((_QWORD *)&__p + 1)) >> 5;
                    v119 = v118 + 1;
                    if ((unint64_t)(v118 + 1) >> 59)
                      goto LABEL_269;
                    v120 = *((_QWORD *)&v195 + 1) - *((_QWORD *)&__p + 1);
                    if ((uint64_t)(*((_QWORD *)&v195 + 1) - *((_QWORD *)&__p + 1)) >> 4 > v119)
                      v119 = v120 >> 4;
                    if ((unint64_t)v120 >= 0x7FFFFFFFFFFFFFE0)
                      v121 = 0x7FFFFFFFFFFFFFFLL;
                    else
                      v121 = v119;
                    if (v121)
                    {
                      if (v121 >> 59)
                        goto LABEL_270;
                      v122 = (char *)operator new(32 * v121);
                    }
                    else
                    {
                      v122 = 0;
                    }
                    v123 = &v122[32 * v118];
                    *(_QWORD *)v123 = v113;
                    *((_QWORD *)v123 + 1) = v114;
                    *((_QWORD *)v123 + 2) = 0;
                    v123[24] = 0;
                    v124 = v123;
                    if (v115 != v117)
                    {
                      do
                      {
                        v125 = *(_OWORD *)(v115 - 32);
                        *(_OWORD *)(v124 - 23) = *(_OWORD *)(v115 - 23);
                        *((_OWORD *)v124 - 2) = v125;
                        v124 -= 32;
                        v115 -= 32;
                      }
                      while (v115 != v117);
                      v115 = *((_QWORD *)&__p + 1);
                    }
                    v116 = v123 + 32;
                    *((_QWORD *)&__p + 1) = v124;
                    *(_QWORD *)&v195 = v123 + 32;
                    *((_QWORD *)&v195 + 1) = &v122[32 * v121];
                    if (v115)
                      operator delete((void *)v115);
                  }
                  else
                  {
                    *(_QWORD *)v195 = v113;
                    *(_QWORD *)(v115 + 8) = v114;
                    *(_QWORD *)(v115 + 16) = 0;
                    v116 = (char *)(v115 + 32);
                    *(_BYTE *)(v115 + 24) = 0;
                  }
                  *(_QWORD *)&v195 = v116;
                  if (v105 == v110)
                  {
                    v126 = sub_1C617C470((uint64_t)&v200, (uint64_t *)&v186);
                    *((_BYTE *)v193[0] + 88 * v126[1] + 32) = 1;
                  }
                }
                else
                {
                  v127 = 1;
                  while (v112 != -4096)
                  {
                    v128 = v111 + v127++;
                    v111 = v128 & ((_DWORD)v202 - 1);
                    v112 = *(_QWORD *)&v200[v111];
                    if (v110 == v112)
                      goto LABEL_191;
                  }
                }
              }
              ++v108;
            }
            while (v108 != v109);
          }
          v104 = v178;
          v103 = v180 + 1;
        }
      }
      v92 = *((_QWORD *)&__p + 1);
      v93 = v195;
      if (*((_QWORD *)&__p + 1) == (_QWORD)v195)
      {
        v94 = (_BYTE *)*((_QWORD *)&__p + 1);
      }
      else
      {
        do
        {
          v129 = (char *)v193[0] + 88 * *(_QWORD *)v92;
          v132 = *((_QWORD *)v129 + 7);
          v131 = v129 + 56;
          v130 = v132;
          v133 = v131 - 1;
          v134 = (char *)*(v131 - 1);
          if ((unint64_t)v134 >= v132)
          {
            v136 = (char *)v193[0] + 88 * *(_QWORD *)v92;
            v139 = (char *)*((_QWORD *)v136 + 5);
            v137 = (char **)(v136 + 40);
            v138 = v139;
            v140 = (v134 - v139) >> 3;
            v141 = v140 + 1;
            if ((unint64_t)(v140 + 1) >> 61)
              goto LABEL_269;
            v142 = v130 - (_QWORD)v138;
            if (v142 >> 2 > v141)
              v141 = v142 >> 2;
            if ((unint64_t)v142 >= 0x7FFFFFFFFFFFFFF8)
              v143 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v143 = v141;
            if (v143)
            {
              if (v143 >> 61)
                goto LABEL_270;
              v144 = (char *)operator new(8 * v143);
            }
            else
            {
              v144 = 0;
            }
            v145 = &v144[8 * v140];
            *(_QWORD *)v145 = v92;
            v135 = v145 + 8;
            if (v134 != v138)
            {
              do
              {
                v146 = *((_QWORD *)v134 - 1);
                v134 -= 8;
                *((_QWORD *)v145 - 1) = v146;
                v145 -= 8;
              }
              while (v134 != v138);
              v134 = *v137;
            }
            *v137 = v145;
            *v133 = v135;
            *v131 = &v144[8 * v143];
            if (v134)
              operator delete(v134);
          }
          else
          {
            *(_QWORD *)v134 = v92;
            v135 = v134 + 8;
          }
          *v133 = v135;
          v147 = *(_QWORD *)(v92 + 8);
          v148 = (char *)v193[0] + 88 * v147;
          v151 = *((_QWORD *)v148 + 10);
          v150 = v148 + 80;
          v149 = v151;
          v152 = v150 - 1;
          v153 = (char *)*(v150 - 1);
          if ((unint64_t)v153 >= v151)
          {
            v155 = (char *)v193[0] + 88 * v147;
            v158 = (char *)*((_QWORD *)v155 + 8);
            v156 = (char **)(v155 + 64);
            v157 = v158;
            v159 = (v153 - v158) >> 3;
            v160 = v159 + 1;
            if ((unint64_t)(v159 + 1) >> 61)
              goto LABEL_269;
            v161 = v149 - (_QWORD)v157;
            if (v161 >> 2 > v160)
              v160 = v161 >> 2;
            if ((unint64_t)v161 >= 0x7FFFFFFFFFFFFFF8)
              v162 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v162 = v160;
            if (v162)
            {
              if (v162 >> 61)
                goto LABEL_270;
              v163 = (char *)operator new(8 * v162);
            }
            else
            {
              v163 = 0;
            }
            v164 = &v163[8 * v159];
            *(_QWORD *)v164 = v92;
            v154 = v164 + 8;
            if (v153 != v157)
            {
              do
              {
                v165 = *((_QWORD *)v153 - 1);
                v153 -= 8;
                *((_QWORD *)v164 - 1) = v165;
                v164 -= 8;
              }
              while (v153 != v157);
              v153 = *v156;
            }
            *v156 = v164;
            *v152 = v154;
            *v150 = &v163[8 * v162];
            if (v153)
              operator delete(v153);
          }
          else
          {
            *(_QWORD *)v153 = v92;
            v154 = v153 + 8;
          }
          *v152 = v154;
          v92 += 32;
        }
        while (v92 != v93);
        v94 = (_BYTE *)*((_QWORD *)&__p + 1);
        v92 = v195;
      }
      sub_1C62A3C08((uint64_t)&v197, v183, v94, (_BYTE *)v92);
      if (v193[1] != v193[0])
      {
        v166 = 0;
        v167 = (v193[1] - v193[0]) / 88;
        if (v167 <= 1)
          v167 = 1;
        v168 = (_QWORD *)((char *)v193[0] + 72);
        while (*(v168 - 1) != *v168)
        {
          ++v166;
          v168 += 11;
          if (v167 == v166)
            goto LABEL_260;
        }
        v196 = v166;
      }
LABEL_260:
      llvm::applyFlowInference((uint64_t *)v193);
      v169 = v197;
      v170 = (uint64_t *)v198;
      if (v197 != (uint64_t *)v198)
      {
        do
        {
          v171 = *v169++;
          *(_QWORD *)&v186 = v171;
          v172 = sub_1C617C470((uint64_t)&v200, (uint64_t *)&v186);
          v173 = *((_QWORD *)v193[0] + 11 * v172[1] + 3);
          sub_1C617C470(v182, (uint64_t *)&v186)[1] = v173;
        }
        while (v169 != v170);
      }
      v174 = (_QWORD *)*((_QWORD *)&__p + 1);
      v175 = (_QWORD *)v195;
      if (*((_QWORD *)&__p + 1) != (_QWORD)v195)
      {
        do
        {
          v176 = v197[v174[1]];
          *(_QWORD *)&v186 = v197[*v174];
          *((_QWORD *)&v186 + 1) = v176;
          v177 = v174[2];
          sub_1C6200D70(v181, (uint64_t *)&v186)[2] = v177;
          v174 += 4;
        }
        while (v174 != v175);
        v174 = (_QWORD *)*((_QWORD *)&__p + 1);
      }
      if (v174)
      {
        *(_QWORD *)&v195 = v174;
        operator delete(v174);
      }
      *(_QWORD *)&v186 = v193;
      sub_1C51D71C4((void ***)&v186);
      v34 = (llvm::SmallPtrSetImplBase **)v197;
      if (!v197)
        goto LABEL_56;
    }
    else
    {
LABEL_54:
      if (!v34)
      {
LABEL_56:
        MEMORY[0x1CAA32FB4](v200, 8);
        if (*((_QWORD *)&v204 + 1) != (_QWORD)v204)
          free(*((void **)&v204 + 1));
        if (v209 != v208)
          free(v209);
        MEMORY[0x1CAA32FB4](v184[0], 8);
        return;
      }
    }
    v198 = v34;
    operator delete(v34);
    goto LABEL_56;
  }
  v4 = a2 + 72;
  v5 = *(_QWORD *)(a2 + 80);
  if (v5 != a2 + 72)
  {
    do
    {
      if (v5)
        v16 = v5 - 24;
      else
        v16 = 0;
      v208 = (char *)v16;
      v17 = *(uint64_t **)(a1 + 960);
      v18 = *((_DWORD *)v17 + 4);
      if (v18)
      {
        v19 = *v17;
        v20 = v18 - 1;
        v21 = (v18 - 1) & ((v16 >> 4) ^ (v16 >> 9));
        v22 = *(_QWORD *)(v19 + 16 * v21);
        if (v16 == v22)
        {
LABEL_31:
          v25 = *(_QWORD *)(v19 + 16 * v21 + 8);
          if (v25)
          {
            *(_QWORD *)&v204 = **(_QWORD **)(v25 + 32);
            if ((_QWORD)v204)
            {
              v26 = sub_1C617C470(a1 + 32, (uint64_t *)&v208)[1];
              if (v26 > sub_1C617C470(a1 + 32, (uint64_t *)&v204)[1])
              {
                v27 = sub_1C617C470(a1 + 32, (uint64_t *)&v208)[1];
                sub_1C617C470(a1 + 32, (uint64_t *)&v204)[1] = v27;
              }
            }
          }
        }
        else
        {
          v23 = 1;
          while (v22 != -4096)
          {
            v24 = v21 + v23++;
            v21 = v24 & v20;
            v22 = *(_QWORD *)(v19 + 16 * v21);
            if (v16 == v22)
              goto LABEL_31;
          }
        }
      }
      v5 = *(_QWORD *)(v5 + 8);
    }
    while (v5 != v4);
  }
  v6 = 3;
  do
  {
    v7 = v6;
    if (v6 - 3 >= dword_1ED837898)
      break;
    v8 = sub_1C5763030(a1, a2, 0);
    v6 = v7 + 1;
  }
  while ((v8 & 1) != 0);
  *(_DWORD *)(a1 + 376) = 0;
  sub_1C6143384(*(_QWORD **)(a1 + 904));
  *(_QWORD *)(a1 + 896) = a1 + 904;
  *(_QWORD *)(a1 + 912) = 0;
  *(_QWORD *)(a1 + 904) = 0;
  while (1)
  {
    v9 = v7;
    v10 = dword_1ED837898;
    if (v7 - 2 >= dword_1ED837898)
      break;
    ++v7;
    if ((sub_1C5763030(a1, a2, 0) & 1) == 0)
    {
      v10 = dword_1ED837898;
      break;
    }
  }
  if (v9 - 1 < v10)
  {
    do
    {
      if (!sub_1C5763030(a1, a2, 1))
        break;
      v54 = v9++ >= dword_1ED837898;
    }
    while (!v54);
  }
}

const std::error_category *sub_1C5762850(uint64_t a1, _QWORD *(***a2)(unint64_t *__return_ptr, _QWORD, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  unint64_t v8;
  uint64_t v9;
  const std::error_category *result;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v4 = a3 + 40;
  v5 = *(_QWORD *)(a3 + 48);
  if (v5 == a3 + 40)
    goto LABEL_13;
  v7 = 0;
  v8 = 0;
  do
  {
    if (v5)
      v9 = v5 - 24;
    else
      v9 = 0;
    result = (const std::error_category *)(**a2)(&v12, a2, v9);
    v11 = v12;
    if (v8 > v12)
      v11 = v8;
    if ((v13 & 1) == 0)
      v8 = v11;
    v7 |= (v13 & 1) == 0;
    v5 = *(_QWORD *)(v5 + 8);
  }
  while (v5 != v4);
  if ((v7 & 1) == 0)
  {
LABEL_13:
    result = std::system_category();
    v8 = 0;
    *(_BYTE *)(a1 + 16) |= 1u;
    *(_QWORD *)(a1 + 8) = result;
  }
  else
  {
    *(_BYTE *)(a1 + 16) &= ~1u;
  }
  *(_QWORD *)a1 = v8;
  return result;
}

void sub_1C5762948(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _BOOL4 v18;
  uint64_t *v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t i;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  llvm::SmallPtrSetImplBase *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD v51[10];

  v51[8] = *MEMORY[0x1E0C80C00];
  v2 = v51;
  v49 = v51;
  v50 = 0x800000000;
  v3 = a2 + 72;
  v4 = *(_QWORD *)(a2 + 80);
  if (v4 == a2 + 72)
    goto LABEL_50;
  v5 = a2;
  v7 = a1 + 920;
  v42 = a1 + 32;
  v44 = (llvm::SmallPtrSetImplBase *)(a1 + 80);
  do
  {
    if (v4)
      v8 = v4 - 24;
    else
      v8 = 0;
    v45 = v8;
    v48 = 0;
    if ((sub_1C6144BDC(*(_QWORD *)(a1 + 920), *(_DWORD *)(a1 + 936), v8, &v48) & 1) != 0)
      goto LABEL_7;
    v40 = v5;
    v41 = v2;
    v9 = v45;
    sub_1C6180A54(v7, &v45)[1] = v9;
    LODWORD(v50) = 0;
    llvm::DominatorTreeBase<llvm::BasicBlock,false>::getDescendants(*(_QWORD *)(a1 + 944), v9, (uint64_t)&v49);
    v10 = (uint64_t *)v49;
    v11 = v50;
    v12 = *(_QWORD *)(a1 + 952);
    v48 = v9;
    v43 = sub_1C6180A54(v7, &v48)[1];
    v47 = v43;
    v13 = sub_1C617C470(v42, &v47)[1];
    if ((_DWORD)v11)
    {
      v16 = &v10[v11];
      do
      {
        v17 = *v10;
        v46 = v17;
        v18 = llvm::DominatorTreeBase<llvm::BasicBlock,true>::dominates(v12, v17, v9);
        v19 = *(uint64_t **)(a1 + 960);
        v20 = *((_DWORD *)v19 + 4);
        if (v20)
        {
          v21 = *v19;
          v22 = v20 - 1;
          v23 = v22 & ((v9 >> 4) ^ (v9 >> 9));
          v24 = *(_QWORD *)(v21 + 16 * v23);
          if (v24 == v9)
          {
LABEL_22:
            v27 = *(_QWORD *)(v21 + 16 * v23 + 8);
          }
          else
          {
            v25 = 1;
            while (v24 != -4096)
            {
              v26 = v23 + v25++;
              v23 = v26 & v22;
              v24 = *(_QWORD *)(v21 + 16 * v23);
              if (v24 == v9)
                goto LABEL_22;
            }
            v27 = 0;
          }
          v28 = v22 & ((v17 >> 4) ^ (v17 >> 9));
          v29 = *(_QWORD *)(v21 + 16 * v28);
          if (v17 == v29)
          {
LABEL_28:
            v32 = *(_QWORD *)(v21 + 16 * v28 + 8);
            goto LABEL_31;
          }
          v30 = 1;
          while (v29 != -4096)
          {
            v31 = v28 + v30++;
            v28 = v31 & v22;
            v29 = *(_QWORD *)(v21 + 16 * v28);
            if (v17 == v29)
              goto LABEL_28;
          }
        }
        else
        {
          v27 = 0;
        }
        v32 = 0;
LABEL_31:
        if (v17 != v9 && v18 && v27 == v32)
        {
          sub_1C6180A54(v7, &v46)[1] = v43;
          v33 = sub_1C477672C((uint64_t)v44, v17);
          v34 = *(_QWORD *)(a1 + 88);
          v35 = 96;
          if (v34 == *(_QWORD *)(a1 + 80))
            v35 = 100;
          if (v33 != (_QWORD *)(v34 + 8 * *(unsigned int *)(a1 + v35)))
            sub_1C4774094(v44, v43);
          v36 = sub_1C617C470(v42, &v46);
          if (v13 <= v36[1])
            v13 = v36[1];
        }
        ++v10;
      }
      while (v10 != v16);
    }
    v14 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 80);
    if (v14)
      v15 = v14 - 24;
    else
      v15 = 0;
    if (v43 == v15)
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 1064) + 64) + 1;
    sub_1C617C470(v42, &v47)[1] = v13;
    v2 = v41;
    v5 = v40;
LABEL_7:
    v4 = *(_QWORD *)(v4 + 8);
  }
  while (v4 != v3);
  for (i = *(_QWORD *)(v5 + 80); i != v3; i = *(_QWORD *)(i + 8))
  {
    if (i)
      v38 = i - 24;
    else
      v38 = 0;
    v48 = v38;
    v47 = sub_1C6180A54(v7, &v48)[1];
    if (v38 != v47)
    {
      v39 = sub_1C617C470(v42, &v47)[1];
      sub_1C617C470(v42, &v48)[1] = v39;
    }
  }
LABEL_50:
  if (v49 != v2)
    free(v49);
}

void sub_1C5762CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int i;
  uint64_t Successor;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  BOOL v24;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  int v29;
  unsigned int v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  int v35;
  _BYTE v36[128];
  uint64_t v37[2];

  v2 = a2 + 72;
  v3 = *(_QWORD *)(a2 + 80);
  if (v3 != a2 + 72)
  {
    v4 = a1 + 968;
    v5 = a1 + 992;
    do
    {
      if (v3)
        v6 = v3 - 24;
      else
        v6 = 0;
      v37[0] = v6;
      v32 = v36;
      v33 = v36;
      v34 = 16;
      v35 = 0;
      sub_1C6201558(v4, v37);
      v7 = *(_QWORD *)(v6 + 8);
      if (v7)
      {
        while (1)
        {
          v8 = *(_QWORD *)(v7 + 24);
          v9 = *(unsigned __int8 *)(v8 + 16);
          v10 = v8 && v9 >= 0x1C;
          v11 = !v10 || v9 - 29 > 0xA;
          if (!v11)
            break;
          v7 = *(_QWORD *)(v7 + 8);
          if (!v7)
            goto LABEL_16;
        }
LABEL_33:
        v21 = *(_QWORD *)(v8 + 40);
        sub_1C4774094((llvm::SmallPtrSetImplBase *)&v32, v21);
        if (v22)
        {
          v26 = sub_1C6201558(v4, v37);
          v27 = v26;
          v28 = *((unsigned int *)v26 + 4);
          if (v28 >= *((unsigned int *)v26 + 5))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)(v26 + 1), (uint64_t)(v26 + 3), v28 + 1, 8);
            v28 = *((unsigned int *)v27 + 4);
          }
          *(_QWORD *)(v27[1] + 8 * v28) = v21;
          ++*((_DWORD *)v27 + 4);
        }
        while (1)
        {
          v7 = *(_QWORD *)(v7 + 8);
          if (!v7)
            break;
          v8 = *(_QWORD *)(v7 + 24);
          v23 = *(unsigned __int8 *)(v8 + 16);
          if (v8)
            v24 = v23 >= 0x1C;
          else
            v24 = 0;
          if (v24 && v23 - 29 < 0xB)
            goto LABEL_33;
        }
      }
LABEL_16:
      if (v33 != v32)
      {
        if (v34 >= 0x21 && 4 * (HIDWORD(v34) - v35) < v34)
        {
          free(v33);
          v29 = 1 << (33 - __clz(HIDWORD(v34) - v35 - 1));
          v11 = (HIDWORD(v34) - v35) > 0x10;
          HIDWORD(v34) = 0;
          v35 = 0;
          if (v11)
            v30 = v29;
          else
            v30 = 32;
          LODWORD(v34) = v30;
          v31 = malloc_type_malloc(8 * v30, 0x4065EBACuLL);
          if (!v31)
LABEL_68:
            llvm::report_bad_alloc_error((llvm *)"Allocation failed", (const char *)1);
          v33 = v31;
          memset(v31, 255, 8 * v34);
          goto LABEL_18;
        }
        memset(v33, 255, 8 * v34);
      }
      HIDWORD(v34) = 0;
      v35 = 0;
LABEL_18:
      sub_1C6201558(v5, v37);
      v12 = *(_QWORD *)(v6 + 40);
      if (v12 != v6 + 40)
      {
        if (v12)
          v13 = v12 - 24;
        else
          v13 = 0;
        if (*(_BYTE *)(v13 + 16) != 30)
        {
          v14 = 2;
          switch(*(_BYTE *)(v13 + 16))
          {
            case 0x1E:
              __break(1u);
              goto LABEL_68;
            case 0x1F:
              v14 = (*(_DWORD *)(v13 + 20) >> 1) & 0x3FFFFFF;
              goto LABEL_55;
            case 0x20:
            case 0x26:
              v14 = (*(_DWORD *)(v13 + 20) & 0x7FFFFFF) - 1;
              goto LABEL_55;
            case 0x21:
              goto LABEL_26;
            case 0x24:
              v14 = *(_WORD *)(v13 + 18) & 1;
              goto LABEL_55;
            case 0x25:
              v14 = 1;
              goto LABEL_26;
            case 0x27:
              v14 = *(_DWORD *)(v13 + 80) + 1;
LABEL_55:
              if (!v14)
                goto LABEL_50;
              goto LABEL_26;
            default:
              goto LABEL_50;
          }
        }
        if ((*(_DWORD *)(v13 + 20) & 0x7FFFFFF) == 3)
          v14 = 2;
        else
          v14 = 1;
LABEL_26:
        for (i = 0; i != v14; ++i)
        {
          Successor = llvm::Instruction::getSuccessor((llvm::Instruction *)v13, i);
          sub_1C4774094((llvm::SmallPtrSetImplBase *)&v32, Successor);
          if (v17)
          {
            v18 = sub_1C6201558(v5, v37);
            v19 = v18;
            v20 = *((unsigned int *)v18 + 4);
            if (v20 >= *((unsigned int *)v18 + 5))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)(v18 + 1), (uint64_t)(v18 + 3), v20 + 1, 8);
              v20 = *((unsigned int *)v19 + 4);
            }
            *(_QWORD *)(v19[1] + 8 * v20) = Successor;
            ++*((_DWORD *)v19 + 4);
          }
        }
      }
LABEL_50:
      if (v33 != v32)
        free(v33);
      v3 = *(_QWORD *)(v3 + 8);
    }
    while (v3 != v2);
  }
}

uint64_t sub_1C5763030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  llvm::SmallPtrSetImplBase *v7;
  unint64_t v8;
  char v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unsigned int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  unint64_t v53;
  unint64_t v54;
  int64x2_t *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  int64x2_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96[2];

  v3 = *(_QWORD *)(a2 + 80);
  v79 = a2 + 72;
  if (v3 != a2 + 72)
  {
    v77 = 0;
    v78 = a1 + 920;
    v6 = a1 + 992;
    v7 = (llvm::SmallPtrSetImplBase *)(a1 + 80);
    v75 = a1 + 32;
    v84 = a1 + 56;
    v82 = a1 + 968;
    v83 = (_QWORD *)(a1 + 368);
    v80 = a1 + 80;
    v76 = a1 + 992;
    while (1)
    {
      if (v3)
        v8 = v3 - 24;
      else
        v8 = 0;
      v96[0] = v8;
      v86 = sub_1C6180A54(v78, v96)[1];
      v95 = v86;
      v9 = 1;
      do
      {
        v94 = 0;
        v92 = 0;
        v93 = 0;
        v90 = 0;
        v91 = 0;
        v88 = 0;
        v89 = 0;
        v85 = v9;
        if ((v9 & 1) == 0)
        {
          v10 = *((_DWORD *)sub_1C6201558(v6, v96) + 4);
          v21 = sub_1C6201558(v6, v96);
          v22 = *((unsigned int *)v21 + 4);
          if ((_DWORD)v22)
          {
            v16 = 0;
            v23 = (unint64_t *)v21[1];
            v24 = 8 * v22;
            do
            {
              v25 = *v23++;
              v16 += sub_1C51D7234(a1, v8, v25, &v94, (unint64_t *)&v92);
              v24 -= 8;
            }
            while (v24);
          }
          else
          {
            v16 = 0;
          }
          if (v10 != 1)
          {
            v15 = 0;
            goto LABEL_24;
          }
          v27 = v96;
          v15 = 0;
          v26 = (uint64_t *)sub_1C6201558(v6, v96)[1];
          goto LABEL_63;
        }
        v10 = *((_DWORD *)sub_1C6201558(v82, v96) + 4);
        v11 = sub_1C6201558(v82, v96);
        v12 = *((unsigned int *)v11 + 4);
        if ((_DWORD)v12)
        {
          v81 = v3;
          v13 = a3;
          v14 = 0;
          v15 = 0;
          v16 = 0;
          v17 = (unint64_t *)v11[1];
          v18 = 8 * v12;
          do
          {
            v20 = *v17++;
            v19 = v20;
            v16 += sub_1C51D7234(a1, v20, v8, &v94, (unint64_t *)&v92);
            if (v20 == v8)
            {
              v14 = v19;
              v15 = v19;
            }
            v18 -= 8;
          }
          while (v18);
          v90 = v15;
          v91 = v14;
          a3 = v13;
          v7 = (llvm::SmallPtrSetImplBase *)v80;
          v3 = v81;
          v6 = v76;
        }
        else
        {
          v15 = 0;
          v16 = 0;
        }
        if (v10 == 1)
        {
          v26 = v96;
          v27 = (uint64_t *)sub_1C6201558(v82, v96)[1];
LABEL_63:
          v56 = *v26;
          v88 = *v27;
          v89 = v56;
          v10 = 1;
        }
LABEL_24:
        v28 = v94;
        if (v94 <= 1)
        {
          v40 = sub_1C617C470(v75, &v95);
          if (v28 == 1)
          {
            v57 = sub_1C477672C(v80, v86);
            v58 = *(_QWORD *)(a1 + 88);
            v59 = 96;
            if (v58 == *(_QWORD *)(a1 + 80))
              v59 = 100;
            v35 = v83;
            if (v57 != (_QWORD *)(v58 + 8 * *(unsigned int *)(a1 + v59)))
            {
              v65 = v40[1];
              v52 = v65 >= v16;
              v66 = v65 - v16;
              if (v52)
                v67 = v66;
              else
                v67 = 0;
              sub_1C6200D70(v84, &v92)[2] = v67;
              if ((v85 & 1) != 0)
                v68 = &v92;
              else
                v68 = &v93;
              v87.i64[0] = sub_1C6180A54(v78, v68)[1];
              v7 = (llvm::SmallPtrSetImplBase *)v80;
              v69 = sub_1C477672C(v80, v87.i64[0]);
              v70 = *(_QWORD *)(a1 + 88);
              v71 = 96;
              if (v70 == *(_QWORD *)(a1 + 80))
                v71 = 100;
              if (v69 != (_QWORD *)(v70 + 8 * *(unsigned int *)(a1 + v71)))
              {
                v72 = sub_1C6200D70(v84, &v92)[2];
                if (v72 > sub_1C617C470(v75, v87.i64)[1])
                {
                  v73 = sub_1C617C470(v75, v87.i64)[1];
                  sub_1C6200D70(v84, &v92)[2] = v73;
                }
              }
              v55 = (int64x2_t *)&v92;
LABEL_60:
              sub_1C51D72F0(v35, v55);
LABEL_61:
              v77 = 1;
              goto LABEL_32;
            }
          }
          else if (!v28)
          {
            v41 = sub_1C477672C(v80, v86);
            v42 = *(_QWORD *)(a1 + 88);
            v43 = 96;
            if (v42 == *(_QWORD *)(a1 + 80))
              v43 = 100;
            if (v41 == (_QWORD *)(v42 + 8 * *(unsigned int *)(a1 + v43)))
            {
              if (v16 > v40[1])
              {
                v40[1] = v16;
                v77 = 1;
              }
            }
            else if (v10 == 1)
            {
              v44 = sub_1C6200D70(v84, &v88)[2];
              v7 = (llvm::SmallPtrSetImplBase *)v80;
              if (v44 >= sub_1C617C470(v75, &v95)[1])
                goto LABEL_32;
              v45 = sub_1C617C470(v75, &v95)[1];
              sub_1C6200D70(v84, &v88)[2] = v45;
              goto LABEL_61;
            }
          }
          v7 = (llvm::SmallPtrSetImplBase *)v80;
        }
        else
        {
          v29 = sub_1C477672C((uint64_t)v7, v86);
          v30 = *(_QWORD *)(a1 + 88);
          v31 = 96;
          if (v30 == *(_QWORD *)(a1 + 80))
            v31 = 100;
          if (v29 == (_QWORD *)(v30 + 8 * *(unsigned int *)(a1 + v31)) || sub_1C617C470(v75, &v95)[1])
          {
            if (v15)
            {
              v32 = sub_1C477672C((uint64_t)v7, v86);
              v33 = *(_QWORD *)(a1 + 88);
              v34 = 96;
              if (v33 == *(_QWORD *)(a1 + 80))
                v34 = 100;
              v35 = v83;
              if (v32 != (_QWORD *)(v33 + 8 * *(unsigned int *)(a1 + v34)))
              {
                v51 = sub_1C617C470(v75, v96)[1];
                v52 = v51 >= v16;
                v53 = v51 - v16;
                if (v52)
                  v54 = v53;
                else
                  v54 = 0;
                sub_1C6200D70(v84, &v90)[2] = v54;
                v55 = (int64x2_t *)&v90;
                goto LABEL_60;
              }
            }
          }
          else if ((v85 & 1) != 0)
          {
            v46 = sub_1C6201558(v82, v96);
            v47 = *((unsigned int *)v46 + 4);
            if ((_DWORD)v47)
            {
              v48 = (uint64_t *)v46[1];
              v8 = v96[0];
              v49 = 8 * v47;
              do
              {
                v50 = *v48++;
                v87.i64[0] = v50;
                v87.i64[1] = v8;
                sub_1C6200D70(v84, v87.i64)[2] = 0;
                sub_1C51D72F0(v83, &v87);
                v49 -= 8;
              }
              while (v49);
            }
          }
          else
          {
            v60 = sub_1C6201558(v6, v96);
            v61 = *((unsigned int *)v60 + 4);
            if ((_DWORD)v61)
            {
              v62 = (uint64_t *)v60[1];
              v8 = v96[0];
              v63 = 8 * v61;
              do
              {
                v64 = *v62++;
                v87.i64[0] = v8;
                v87.i64[1] = v64;
                sub_1C6200D70(v84, v87.i64)[2] = 0;
                sub_1C51D72F0(v83, &v87);
                v63 -= 8;
              }
              while (v63);
            }
          }
        }
LABEL_32:
        if ((_DWORD)a3)
        {
          v36 = sub_1C477672C((uint64_t)v7, v86);
          v37 = *(_QWORD *)(a1 + 88);
          v38 = 96;
          if (v37 == *(_QWORD *)(a1 + 80))
            v38 = 100;
          if (v36 == (_QWORD *)(v37 + 8 * *(unsigned int *)(a1 + v38)) && v16 != 0)
          {
            sub_1C617C470(v75, &v95)[1] = v16;
            sub_1C4774094(v7, v86);
            v77 = 1;
          }
        }
        v9 = 0;
      }
      while ((v85 & 1) != 0);
      v3 = *(_QWORD *)(v3 + 8);
      if (v3 == v79)
        return v77 & 1;
    }
  }
  v77 = 0;
  return v77 & 1;
}

_QWORD *sub_1C5763628(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
  {
    v7 = a1 + 16;
    do
    {
      while (1)
      {
        v8 = v4;
        v9 = (uint64_t)(v4 + 4);
        if (!sub_1C57636C4(v7, a3, (uint64_t)(v4 + 4)))
          break;
        v4 = (_QWORD *)*v8;
        v5 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (!sub_1C57636C4(v7, v9, a3))
        break;
      v5 = v8 + 1;
      v4 = (_QWORD *)v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = (_QWORD *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

BOOL sub_1C57636C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  size_t v7;
  int v8;
  int v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a3 + 16);
  if (v3 != v4)
    return v3 > v4;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a3 + 8);
  if (v6 >= v5)
    v7 = *(_QWORD *)(a2 + 8);
  else
    v7 = *(_QWORD *)(a3 + 8);
  if (v7 && (v8 = memcmp(*(const void **)a2, *(const void **)a3, v7)) != 0)
  {
    v9 = (v8 >> 31) | 1;
  }
  else
  {
    if (v5 < v6)
      v9 = -1;
    else
      v9 = 1;
    if (v5 == v6)
      v9 = 0;
  }
  return v9 == -1;
}

unsigned int *sub_1C5763744(unsigned int *result)
{
  unsigned int *v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = result;
  v2 = result[4];
  v3 = result[2];
  v4 = 1 << (33 - __clz(v3 - 1));
  if (v4 <= 64)
    v4 = 64;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  if (v5 == (_DWORD)v2)
  {
    *((_QWORD *)result + 1) = 0;
    if ((_DWORD)v2)
    {
      v6 = *(_QWORD **)result;
      v7 = 24 * v2;
      do
      {
        *v6 = -1;
        v6 += 3;
        v7 -= 24;
      }
      while (v7);
    }
  }
  else
  {
    result = (unsigned int *)MEMORY[0x1CAA32FB4](*(_QWORD *)result, 8);
    if (v5)
    {
      v8 = (4 * v5 / 3u + 1) | ((unint64_t)(4 * v5 / 3u + 1) >> 1);
      v9 = v8 | (v8 >> 2) | ((v8 | (v8 >> 2)) >> 4);
      LODWORD(v9) = (((v9 | (v9 >> 8)) >> 16) | v9 | (v9 >> 8)) + 1;
      v1[4] = v9;
      result = (unsigned int *)operator new(24 * v9, (std::align_val_t)8uLL);
      *(_QWORD *)v1 = result;
      *((_QWORD *)v1 + 1) = 0;
      v10 = v1[4];
      if ((_DWORD)v10)
      {
        v11 = 24 * v10;
        do
        {
          *(_QWORD *)result = -1;
          result += 6;
          v11 -= 24;
        }
        while (v11);
      }
    }
    else
    {
      *(_QWORD *)v1 = 0;
      *((_QWORD *)v1 + 1) = 0;
      v1[4] = 0;
    }
  }
  return result;
}

__n128 sub_1C576384C(_WORD *a1, int **a2, __n128 *a3)
{
  int *v6;
  __n128 result;

  llvm::cl::Option::setArgStr((uint64_t)&ProfileInlineGrowthLimit, "sample-profile-inline-growth-limit", 0x22uLL);
  word_1ED833062 = (32 * (*a1 & 3)) | word_1ED833062 & 0xFF9F;
  v6 = *a2;
  dword_1ED8330D8 = **a2;
  byte_1ED8330EC = 1;
  dword_1ED8330E8 = *v6;
  result = *a3;
  xmmword_1ED833078 = (__int128)*a3;
  return result;
}

__n128 sub_1C57638D0(_WORD *a1, int **a2, __n128 *a3)
{
  int *v6;
  __n128 result;

  llvm::cl::Option::setArgStr((uint64_t)&SampleHotCallSiteThreshold, "sample-profile-hot-inline-threshold", 0x23uLL);
  word_1ED8332A2 = (32 * (*a1 & 3)) | word_1ED8332A2 & 0xFF9F;
  v6 = *a2;
  dword_1ED833318 = **a2;
  byte_1ED83332C = 1;
  dword_1ED833328 = *v6;
  result = *a3;
  xmmword_1ED8332B8 = (__int128)*a3;
  return result;
}

__n128 sub_1C5763954(_WORD *a1, int **a2, __n128 *a3)
{
  int *v6;
  __n128 result;

  llvm::cl::Option::setArgStr((uint64_t)&SampleColdCallSiteThreshold, "sample-profile-cold-inline-threshold", 0x24uLL);
  word_1ED833362 = (32 * (*a1 & 3)) | word_1ED833362 & 0xFF9F;
  v6 = *a2;
  dword_1ED8333D8 = **a2;
  byte_1ED8333EC = 1;
  dword_1ED8333E8 = *v6;
  result = *a3;
  xmmword_1ED833378 = (__int128)*a3;
  return result;
}

__n128 sub_1C57639D8(int **a1, uint64_t *a2, __n128 *a3, _WORD *a4)
{
  int *v8;
  __n128 result;

  llvm::cl::Option::setArgStr((uint64_t)&qword_1EF8F3318, "sample-profile-inline-replay-scope", 0x22uLL);
  v8 = *a1;
  dword_1EF8F3398 = **a1;
  byte_1EF8F33AC = 1;
  dword_1EF8F33A8 = *v8;
  sub_1C5703EC0(a2, (uint64_t)&qword_1EF8F3318);
  result = *a3;
  xmmword_1EF8F3338 = (__int128)*a3;
  word_1EF8F3322 = (32 * (*a4 & 3)) | word_1EF8F3322 & 0xFF9F;
  return result;
}

__n128 sub_1C5763A74(int **a1, uint64_t *a2, __n128 *a3, _WORD *a4)
{
  int *v8;
  __n128 result;

  llvm::cl::Option::setArgStr((uint64_t)&qword_1EF8F3570, "sample-profile-inline-replay-fallback", 0x25uLL);
  v8 = *a1;
  dword_1EF8F35F0 = **a1;
  byte_1EF8F3604 = 1;
  dword_1EF8F3600 = *v8;
  sub_1C570401C(a2, (uint64_t)&qword_1EF8F3570);
  result = *a3;
  xmmword_1EF8F3590 = (__int128)*a3;
  word_1EF8F357A = (32 * (*a4 & 3)) | word_1EF8F357A & 0xFF9F;
  return result;
}

__n128 sub_1C5763B10(int **a1, uint64_t *a2, __n128 *a3, _WORD *a4)
{
  int *v8;
  __n128 result;

  llvm::cl::Option::setArgStr((uint64_t)&qword_1EF8F37C8, "sample-profile-inline-replay-format", 0x23uLL);
  v8 = *a1;
  dword_1EF8F3848 = **a1;
  byte_1EF8F385C = 1;
  dword_1EF8F3858 = *v8;
  sub_1C570423C(a2, (uint64_t)&qword_1EF8F37C8);
  result = *a3;
  xmmword_1EF8F37E8 = (__int128)*a3;
  word_1EF8F37D2 = (32 * (*a4 & 3)) | word_1EF8F37D2 & 0xFF9F;
  return result;
}

void sub_1C5763BB0()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5763BC4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C6B0;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5763BF8(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C6B0;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5763C14(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::AssumptionAnalysis::Key, a2)
       + 8;
}

void sub_1C5763C40()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5763C54(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C6F8;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5763C88(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C6F8;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5763CA4(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::TargetIRAnalysis::Key, a2) + 8;
}

void sub_1C5763CD0()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5763CE4(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C740;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5763D18(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C740;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5763D34(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::TargetLibraryAnalysis::Key, a2)+ 8;
}

uint64_t sub_1C5763D5C()
{
  __n128 v1;
  int *v2;
  int v3;
  int v4;
  __n128 v5;
  const char *v6;
  uint64_t v7;
  int v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  int v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  int v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  int v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v2 = (int *)"";
  v5.n128_u64[0] = (unint64_t)"filename";
  v5.n128_u64[1] = 8;
  v1.n128_u64[0] = (unint64_t)"Profile file loaded by -sample-profile";
  v1.n128_u64[1] = 38;
  v4 = 1;
  sub_1C5703D60((llvm::cl::Option *)&unk_1ED80FB88, "sample-profile-file", (const char **)&v2, &v5, &v1, &v4);
  __cxa_atexit((void (*)(void *))sub_1C49BEA38, &unk_1ED80FB88, &dword_1C475E000);
  v5.n128_u64[0] = (unint64_t)"filename";
  v5.n128_u64[1] = 8;
  v1.n128_u64[0] = (unint64_t)"Profile remapping file loaded by -sample-profile";
  v1.n128_u64[1] = 48;
  v2 = (int *)"";
  v4 = 1;
  sub_1C47AD050((uint64_t)&qword_1ED80FC70, 0, 0);
  qword_1ED80FCF8 = 0;
  qword_1ED80FCF0 = 0;
  unk_1ED80FD00 = 0;
  qword_1ED80FD10 = 0;
  qword_1ED80FD20 = 0;
  qword_1ED80FD18 = 0;
  byte_1ED80FD28 = 0;
  qword_1ED80FD08 = (uint64_t)&unk_1E819E950;
  qword_1ED80FC70 = (uint64_t)&unk_1E819E480;
  qword_1ED80FD30 = (uint64_t)&unk_1E819E970;
  qword_1ED80FD38 = (uint64_t)&off_1E7FA8CB8;
  qword_1ED80FD50 = (uint64_t)&qword_1ED80FD38;
  sub_1C62A417C((const char **)&v2, (__int128 *)&v5, &v1, &v4);
  llvm::cl::Option::addArgument((llvm::cl::Option *)&qword_1ED80FC70);
  __cxa_atexit((void (*)(void *))sub_1C49BEA38, &qword_1ED80FC70, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"If the sample profile is accurate, we will mark all un-sampled callsite and functio"
                                     "n as having 0 samples. Otherwise, treat un-sampled callsites and functions conserva"
                                     "tively as unknown. ";
  v5.n128_u64[1] = 185;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80F048, "profile-sample-accurate", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F048, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"If the sample profile is accurate, we will mark all un-sampled branches and calls a"
                                     "s having 0 samples. Otherwise, treat them conservatively as unknown. ";
  v5.n128_u64[1] = 152;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80F108, "profile-sample-block-accurate", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F108, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 1;
  LOBYTE(v3) = 1;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"For symbols in profile symbol list, regard their profiles to be accurate. It may be"
                                     " overriden by profile-sample-accurate. ";
  v5.n128_u64[1] = 122;
  sub_1C62A4204((llvm::cl::Option *)&unk_1ED80F1C8, "profile-accurate-for-symsinlist", &v2, &v4, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F1C8, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Merge past inlinee's profile to outline version if sample profile loader decided no"
                                     "t to inline a call site. It will only be enabled when top-down order of profile loa"
                                     "ding is enabled. ";
  v5.n128_u64[1] = 183;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80F288, "sample-profile-merge-inlinee", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F288, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Do profile annotation and inlining for functions in top-down order of call graph du"
                                     "ring sample profile loading. It only works for new pass manager. ";
  v5.n128_u64[1] = 148;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80F348, "sample-profile-top-down-load", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F348, &dword_1C475E000);
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  LODWORD(v2) = 1;
  v5.n128_u64[0] = (unint64_t)"Process functions in a top-down order defined by the profiled call graph when -samp"
                                     "le-profile-top-down-load is on.";
  v5.n128_u64[1] = 114;
  sub_1C498EDF8((llvm::cl::Option *)&unk_1ED80F408, "use-profiled-call-graph", &v1, &v2, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F408, &dword_1C475E000);
  LOBYTE(v4) = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  LODWORD(v2) = 1;
  v5.n128_u64[0] = (unint64_t)"Sort profiled recursion by edge weights.";
  v5.n128_u64[1] = 40;
  sub_1C498EDF8((llvm::cl::Option *)&SortProfiledSCC, "sort-profiled-scc-member", &v1, &v2, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &SortProfiledSCC, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Inline cold call sites in profile loader if it's beneficial for code size.";
  v5.n128_u64[1] = 74;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80F4C8, "sample-profile-inline-size", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F4C8, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"If true, artifically skip inline transformation in sample-loader pass, and merge (o"
                                     "r scale) profiles (as configured by --sample-profile-merge-inlinee).";
  v5.n128_u64[1] = 151;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80F588, "disable-sample-loader-inlining", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80F588, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 12;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"The size growth ratio limit for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 78;
  sub_1C62A4358(&v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &ProfileInlineGrowthLimit, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 100;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"The lower bound of size growth limit for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 87;
  sub_1C6199E68((llvm::cl::Option *)&ProfileInlineLimitMin, "sample-profile-inline-limit-min", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &ProfileInlineLimitMin, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 10000;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"The upper bound of size growth limit for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 87;
  sub_1C6199E68((llvm::cl::Option *)&ProfileInlineLimitMax, "sample-profile-inline-limit-max", &v2, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &ProfileInlineLimitMax, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 3000;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Hot callsite threshold for proirity-based sample profile loader inlining.";
  v5.n128_u64[1] = 73;
  sub_1C62A43F4(&v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &SampleHotCallSiteThreshold, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 45;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Threshold for inlining cold callsites";
  v5.n128_u64[1] = 37;
  sub_1C62A4490(&v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &SampleColdCallSiteThreshold, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 25;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Relative hotness percentage threshold for indirect call promotion in proirity-based"
                                     " sample profile loader inlining.";
  v5.n128_u64[1] = 115;
  sub_1C61798D0((uint64_t)&unk_1ED80F648, "sample-profile-icp-relative-hotness", &v2, (int **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &unk_1ED80F648, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 1;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Skip relative hotness check for ICP up to given number of targets.";
  v5.n128_u64[1] = 66;
  sub_1C62A452C(&v2, (int **)&v1, (__int128 *)&v5);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &qword_1ED80F708, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 1;
  LOBYTE(v3) = 0;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"Use call site prioritized inlining for sample profile loader.Currently only CSSPGO is supported.";
  v5.n128_u64[1] = 96;
  sub_1C62A4608(&v2, &v4, (char **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &qword_1ED80F7C8, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 1;
  LOBYTE(v3) = 0;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"Use the preinliner decisions stored in profile context.";
  v5.n128_u64[1] = 55;
  sub_1C62A4750(&v2, &v4, (char **)&v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &qword_1ED80F888, &dword_1C475E000);
  LODWORD(v2) = 1;
  v4 = 1;
  LOBYTE(v3) = 0;
  v1.n128_u64[0] = (unint64_t)&v3;
  v5.n128_u64[0] = (unint64_t)"Allow sample loader inliner to inline recursive calls.";
  v5.n128_u64[1] = 54;
  sub_1C62A4204((llvm::cl::Option *)algn_1ED80F948, "sample-profile-recursive-inline", &v2, &v4, &v1, &v5);
  __cxa_atexit((void (*)(void *))sub_1C484246C, algn_1ED80F948, &dword_1C475E000);
  v5.n128_u64[0] = (unint64_t)"filename";
  v5.n128_u64[1] = 8;
  v1.n128_u64[0] = (unint64_t)"Optimization remarks file containing inline remarks to be replayed by inlining from"
                                     " sample profile loader.";
  v1.n128_u64[1] = 106;
  v2 = (int *)"";
  v4 = 1;
  sub_1C47AD050((uint64_t)&qword_1ED80FD58, 0, 0);
  qword_1ED80FDE0 = 0;
  qword_1ED80FDD8 = 0;
  unk_1ED80FDE8 = 0;
  qword_1ED80FDF8 = 0;
  qword_1ED80FE08 = 0;
  qword_1ED80FE00 = 0;
  byte_1ED80FE10 = 0;
  qword_1ED80FDF0 = (uint64_t)&unk_1E819E950;
  qword_1ED80FD58 = (uint64_t)&unk_1E819E480;
  qword_1ED80FE18 = (uint64_t)&unk_1E819E970;
  qword_1ED80FE20 = (uint64_t)&off_1E7FA8CB8;
  qword_1ED80FE38 = (uint64_t)&qword_1ED80FE20;
  sub_1C62A4898((const char **)&v2, (__int128 *)&v5, &v1, &v4);
  llvm::cl::Option::addArgument((llvm::cl::Option *)&qword_1ED80FD58);
  __cxa_atexit((void (*)(void *))sub_1C49BEA38, &qword_1ED80FD58, &dword_1C475E000);
  v4 = 0;
  v2 = &v4;
  v5.n128_u64[0] = (unint64_t)&v6;
  v6 = "Function";
  v7 = 8;
  v8 = 0;
  v9 = "Replay on functions that have remarks associated with them (default)";
  v10 = 68;
  v11 = "Module";
  v12 = 6;
  v13 = 1;
  v14 = "Replay on the entire module";
  v15 = 27;
  v5.n128_u64[1] = 0x400000002;
  v1.n128_u64[0] = (unint64_t)"Whether inline replay should be applied to the entire Module or just the Functions "
                                     "(default) that are present as callers in remarks during sample profile inlining.";
  v1.n128_u64[1] = 163;
  v3 = 1;
  sub_1C62A4920(&v2, (uint64_t *)&v5, &v1, &v3);
  if ((const char **)v5.n128_u64[0] != &v6)
    free((void *)v5.n128_u64[0]);
  __cxa_atexit((void (*)(void *))sub_1C6296DD0, &qword_1EF8F3318, &dword_1C475E000);
  v4 = 0;
  v2 = &v4;
  v5.n128_u64[0] = (unint64_t)&v6;
  v6 = "Original";
  v7 = 8;
  v8 = 0;
  v9 = "All decisions not in replay send to original advisor (default)";
  v10 = 62;
  v11 = "AlwaysInline";
  v12 = 12;
  v13 = 1;
  v14 = "All decisions not in replay are inlined";
  v15 = 39;
  v16 = "NeverInline";
  v17 = 11;
  v18 = 2;
  v19 = "All decisions not in replay are not inlined";
  v20 = 43;
  v5.n128_u64[1] = 0x400000003;
  v1.n128_u64[0] = (unint64_t)"How sample profile inline replay treats sites that don't come from the replay. Orig"
                                     "inal: defers to original advisor, AlwaysInline: inline all sites not in replay, Nev"
                                     "erInline: inline no sites not in replay";
  v1.n128_u64[1] = 205;
  v3 = 1;
  sub_1C62A49E8(&v2, (uint64_t *)&v5, &v1, &v3);
  if ((const char **)v5.n128_u64[0] != &v6)
    free((void *)v5.n128_u64[0]);
  __cxa_atexit((void (*)(void *))sub_1C6296DD4, &qword_1EF8F3570, &dword_1C475E000);
  v4 = 3;
  v2 = &v4;
  v5.n128_u64[0] = (unint64_t)&v6;
  v6 = "Line";
  v7 = 4;
  v8 = 0;
  v9 = "<Line Number>";
  v10 = 13;
  v11 = "LineColumn";
  v12 = 10;
  v13 = 1;
  v14 = "<Line Number>:<Column Number>";
  v15 = 29;
  v16 = "LineDiscriminator";
  v17 = 17;
  v18 = 2;
  v19 = "<Line Number>.<Discriminator>";
  v20 = 29;
  v21 = "LineColumnDiscriminator";
  v22 = 23;
  v23 = 3;
  v24 = "<Line Number>:<Column Number>.<Discriminator> (default)";
  v25 = 55;
  v5.n128_u64[1] = 0x400000004;
  v1.n128_u64[0] = (unint64_t)"How sample profile inline replay file is formatted";
  v1.n128_u64[1] = 50;
  v3 = 1;
  sub_1C62A4AB0(&v2, (uint64_t *)&v5, &v1, &v3);
  if ((const char **)v5.n128_u64[0] != &v6)
    free((void *)v5.n128_u64[0]);
  __cxa_atexit((void (*)(void *))sub_1C6296DD8, &qword_1EF8F37C8, &dword_1C475E000);
  LODWORD(v2) = 3;
  v1.n128_u64[0] = (unint64_t)&v2;
  v3 = 1;
  v4 = 1;
  v5.n128_u64[0] = (unint64_t)"Max number of promotions for a single indirect call callsite in sample profile loader";
  v5.n128_u64[1] = 85;
  sub_1C61991E4((llvm::cl::Option *)&unk_1ED80FA08, "sample-profile-icp-max-prom", (int **)&v1, &v4, &v3, &v5);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &unk_1ED80FA08, &dword_1C475E000);
  LODWORD(v2) = 1;
  LOBYTE(v4) = 0;
  v1.n128_u64[0] = (unint64_t)&v4;
  v5.n128_u64[0] = (unint64_t)"Ignore existing branch weights on IR and always overwrite.";
  v5.n128_u64[1] = 58;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED80FAC8, "overwrite-existing-weights", &v2, &v1, &v5);
  return __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80FAC8, &dword_1C475E000);
}

BOOL llvm::PseudoProbeVerifier::shouldVerifyFunction(llvm::PseudoProbeVerifier *this, const llvm::Function *a2)
{
  _BOOL8 v2;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const llvm::Function *v10;
  int v11;
  int v12;
  unint64_t *v13;
  size_t v14;
  const void *v15;
  unint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  const llvm::Function *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *__dst[2];
  unint64_t v25;

  if (a2 && *((_BYTE *)a2 + 16) == 3)
  {
    if ((*((_DWORD *)a2 + 5) & 0x7FFFFFF) == 0)
      return 0;
  }
  else if (!*((_BYTE *)a2 + 16)
         && *((const llvm::Function **)a2 + 9) == (const llvm::Function *)((char *)a2 + 72)
         && (*((_BYTE *)a2 + 34) & 0x80) == 0)
  {
    return 0;
  }
  if ((*((_DWORD *)a2 + 8) & 0xF) == 1)
    return 0;
  v4 = atomic_load((unsigned __int8 *)&qword_1ED80FE40);
  if ((v4 & 1) == 0)
  {
    v20 = a2;
    v21 = __cxa_guard_acquire(&qword_1ED80FE40);
    a2 = v20;
    if (v21)
    {
      v22 = qword_1ED80FFB0;
      v23 = unk_1ED80FFB8;
      xmmword_1ED80FE48 = 0u;
      *(_OWORD *)algn_1ED80FE58 = 0u;
      for (dword_1ED80FE68 = 1065353216; v22 != v23; v22 += 24)
        sub_1C542BF9C((uint64_t)&xmmword_1ED80FE48, v22, v22);
      __cxa_atexit((void (*)(void *))sub_1C542BF98, &xmmword_1ED80FE48, &dword_1C475E000);
      __cxa_guard_release(&qword_1ED80FE40);
      a2 = v20;
    }
  }
  if (!qword_1ED80FE60)
    return 1;
  if ((*((_BYTE *)a2 + 23) & 0x10) == 0)
  {
    v14 = 0;
    HIBYTE(v25) = 0;
    v17 = __dst;
    goto LABEL_30;
  }
  v5 = ***(_QWORD ***)a2;
  v6 = *(_QWORD *)(v5 + 152);
  v7 = *(unsigned int *)(v5 + 168);
  if ((_DWORD)v7)
  {
    LODWORD(v8) = (v7 - 1) & ((a2 >> 4) ^ (a2 >> 9));
    v9 = v6 + 16 * v8;
    v10 = *(const llvm::Function **)v9;
    if (*(const llvm::Function **)v9 == a2)
      goto LABEL_22;
    v11 = 1;
    while (v10 != (const llvm::Function *)-4096)
    {
      v12 = v8 + v11++;
      v8 = v12 & (v7 - 1);
      v10 = *(const llvm::Function **)(v6 + 16 * v8);
      if (v10 == a2)
      {
        v9 = v6 + 16 * v8;
        goto LABEL_22;
      }
    }
  }
  v9 = v6 + 16 * v7;
LABEL_22:
  v13 = *(unint64_t **)(v9 + 8);
  v16 = *v13;
  v15 = v13 + 2;
  v14 = v16;
  if (v16 >= 0x7FFFFFFFFFFFFFF8)
    abort();
  if (v14 >= 0x17)
  {
    v18 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v18 = v14 | 7;
    v19 = v18 + 1;
    v17 = (void **)operator new(v18 + 1);
    __dst[1] = (void *)v14;
    v25 = v19 | 0x8000000000000000;
    __dst[0] = v17;
    goto LABEL_29;
  }
  HIBYTE(v25) = v14;
  v17 = __dst;
  if (v14)
LABEL_29:
    memmove(v17, v15, v14);
LABEL_30:
  *((_BYTE *)v17 + v14) = 0;
  v2 = sub_1C542C56C(&xmmword_1ED80FE48, (uint64_t)__dst) != 0;
  if (SHIBYTE(v25) < 0)
    operator delete(__dst[0]);
  return v2;
}

void llvm::PseudoProbeVerifier::registerCallbacks(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  unint64_t v20;

  if (byte_1ED8334A0)
  {
    v4 = *(unsigned int *)(a2 + 440);
    if (v4 >= *(_DWORD *)(a2 + 444))
    {
      v20 = 0;
      v7 = (char *)llvm::SmallVectorBase<unsigned int>::mallocForGrow(a2 + 432, 0, 32, &v20);
      v8 = v7;
      v9 = *(unsigned int *)(a2 + 440);
      v10 = &v7[32 * v9];
      *(_QWORD *)v10 = a1;
      *((_QWORD *)v10 + 3) = (char *)&off_1EF8EB308 + 2;
      v11 = *(_QWORD **)(a2 + 432);
      if ((_DWORD)v9)
      {
        v12 = 32 * v9;
        v13 = v7;
        do
        {
          *((_QWORD *)v13 + 3) = 0;
          v14 = v11[3];
          *((_QWORD *)v13 + 3) = v14;
          if (v11[3] >= 8uLL)
          {
            if ((v14 & 2) != 0 && (v14 & 4) != 0)
            {
              (*(void (**)(char *, _QWORD *))((v14 & 0xFFFFFFFFFFFFFFF8) + 8))(v13, v11);
            }
            else
            {
              v15 = *(_OWORD *)v11;
              *((_QWORD *)v13 + 2) = v11[2];
              *(_OWORD *)v13 = v15;
            }
            v11[3] = 0;
          }
          v11 += 4;
          v13 += 32;
          v12 -= 32;
        }
        while (v12);
        v11 = *(_QWORD **)(a2 + 432);
        v16 = *(unsigned int *)(a2 + 440);
        if ((_DWORD)v16)
        {
          v17 = 32 * v16;
          v18 = (char *)(v11 - 4);
          do
          {
            sub_1C5052E10(&v18[v17]);
            v17 -= 32;
          }
          while (v17);
          v11 = *(_QWORD **)(a2 + 432);
        }
      }
      v19 = v20;
      if (v11 != (_QWORD *)(a2 + 448))
        free(v11);
      *(_QWORD *)(a2 + 432) = v8;
      *(_DWORD *)(a2 + 444) = v19;
      v6 = *(_DWORD *)(a2 + 440) + 1;
    }
    else
    {
      v5 = (_QWORD *)(*(_QWORD *)(a2 + 432) + 32 * v4);
      *v5 = a1;
      v5[3] = (char *)&off_1EF8EB308 + 2;
      v6 = v4 + 1;
    }
    *(_DWORD *)(a2 + 440) = v6;
  }
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *a1, void *__src, size_t __len, _QWORD *a4)
{
  std::string *p_dst;
  size_t v9;
  size_t v10;
  std::string *v11;
  std::string::size_type v12;
  std::string *v13;
  std::string::size_type v14;
  llvm *v15;
  void **v16;
  size_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  const llvm::Function *v32;
  const llvm::Function **v33;
  std::string __dst;
  std::string v35;
  void *__p[2];
  uint64_t v37;

  if (!__src)
  {
    memset(&__dst, 0, sizeof(__dst));
    goto LABEL_12;
  }
  if (__len >= 0x7FFFFFFFFFFFFFF8)
    abort();
  if (__len >= 0x17)
  {
    v9 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v9 = __len | 7;
    v10 = v9 + 1;
    p_dst = (std::string *)operator new(v9 + 1);
    __dst.__r_.__value_.__l.__size_ = __len;
    __dst.__r_.__value_.__r.__words[2] = v10 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((_BYTE *)&__dst.__r_.__value_.__s + 23) = __len;
    p_dst = &__dst;
    if (!__len)
      goto LABEL_11;
  }
  memmove(p_dst, __src, __len);
LABEL_11:
  p_dst->__r_.__value_.__s.__data_[__len] = 0;
LABEL_12:
  v11 = std::string::insert(&__dst, 0, "\n*** Pseudo Probe Verification After ");
  v12 = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  v13 = std::string::append(&v35, " ***\n");
  v14 = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v37 = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v35.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  v15 = llvm::dbgs((llvm *)v13);
  if (v37 >= 0)
    v16 = __p;
  else
    v16 = (void **)__p[0];
  if (v37 >= 0)
    v17 = HIBYTE(v37) & 0x7F;
  else
    v17 = (size_t)__p[1];
  llvm::raw_ostream::write(v15, (const char *)v16, v17);
  v18 = (void *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)*a4 + 24))(*a4);
  v19 = *a4;
  if (v18 == &llvm::Any::TypeId<llvm::Module const*>::Id)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 24))(v19);
    v29 = *(_QWORD *)(*a4 + 8);
    v30 = v29 + 24;
    for (i = *(_QWORD *)(v29 + 32); i != v30; i = *(_QWORD *)(i + 8))
    {
      if (i)
        v32 = (const llvm::Function *)(i - 56);
      else
        v32 = 0;
      llvm::PseudoProbeVerifier::runAfterPass(a1, v32);
    }
    goto LABEL_28;
  }
  v20 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 24))(v19);
  v21 = *a4;
  if (v20 == &llvm::Any::TypeId<llvm::Function const*>::Id)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v21 + 24))(v21);
    v33 = (const llvm::Function **)(*a4 + 8);
LABEL_39:
    llvm::PseudoProbeVerifier::runAfterPass(a1, *v33);
    goto LABEL_28;
  }
  v22 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 24))(v21);
  v23 = *a4;
  if (v22 != &llvm::Any::TypeId<llvm::LazyCallGraph::SCC const*>::Id)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v23 + 24))(v23);
    (*(void (**)(_QWORD))(*(_QWORD *)*a4 + 24))(*a4);
    v33 = (const llvm::Function **)(**(_QWORD **)(*(_QWORD *)(*a4 + 8) + 32) + 56);
    goto LABEL_39;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v23 + 24))(v23);
  v24 = *(_QWORD *)(*a4 + 8);
  v25 = *(unsigned int *)(v24 + 16);
  if ((_DWORD)v25)
  {
    v26 = *(uint64_t **)(v24 + 8);
    v27 = 8 * v25;
    do
    {
      v28 = *v26++;
      llvm::PseudoProbeVerifier::runAfterPass(a1, *(const llvm::Function **)(v28 + 8));
      v27 -= 8;
    }
    while (v27);
  }
LABEL_28:
  if (SHIBYTE(v37) < 0)
    operator delete(__p[0]);
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *this, const llvm::Module *a2)
{
  char *v2;
  char *v3;
  const llvm::Function *v5;

  v2 = (char *)a2 + 24;
  v3 = (char *)*((_QWORD *)a2 + 4);
  if (v3 != (char *)a2 + 24)
  {
    do
    {
      if (v3)
        v5 = (const llvm::Function *)(v3 - 56);
      else
        v5 = 0;
      llvm::PseudoProbeVerifier::runAfterPass(this, v5);
      v3 = (char *)*((_QWORD *)v3 + 1);
    }
    while (v3 != v2);
  }
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *this, const llvm::LazyCallGraph::SCC *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *((unsigned int *)a2 + 4);
  if ((_DWORD)v2)
  {
    v4 = (uint64_t *)*((_QWORD *)a2 + 1);
    v5 = 8 * v2;
    do
    {
      v6 = *v4++;
      llvm::PseudoProbeVerifier::runAfterPass(this, *(const llvm::Function **)(v6 + 8));
      v5 -= 8;
    }
    while (v5);
  }
}

void llvm::PseudoProbeVerifier::runAfterPass(llvm::PseudoProbeVerifier *this, const llvm::Loop *a2)
{
  llvm::PseudoProbeVerifier::runAfterPass(this, *(const llvm::Function **)(**((_QWORD **)a2 + 4) + 56));
}

uint64_t *llvm::PseudoProbeVerifier::verifyProbeFactors(uint64_t a1, uint64_t ***a2, uint64_t a3)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ****v10;
  uint64_t ***v11;
  int v12;
  int v13;
  uint64_t ***v14;
  unsigned __int8 *v15;
  size_t v16;
  size_t v17;
  uint64_t *result;
  float *v19;
  char v20;
  _QWORD *v21;
  unsigned int v22;
  uint64_t v23;
  float v24;
  uint64_t v25;
  float *v26;
  float v27;
  int v28;
  llvm *v29;
  llvm::raw_ostream *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ****v36;
  uint64_t ***v37;
  int v38;
  int v39;
  size_t *v40;
  const void *v41;
  size_t v42;
  size_t v43;
  llvm *v44;
  llvm::raw_ostream *v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _BYTE *v49;
  _QWORD v50[3];
  _QWORD v51[3];

  v5 = a2 >> 4;
  if ((*((_BYTE *)a2 + 23) & 0x10) != 0)
  {
    v6 = ***a2;
    v7 = *(_QWORD *)(v6 + 152);
    v8 = *(unsigned int *)(v6 + 168);
    if ((_DWORD)v8)
    {
      LODWORD(v9) = (v8 - 1) & (v5 ^ (a2 >> 9));
      v10 = (uint64_t ****)(v7 + 16 * v9);
      v11 = *v10;
      if (*v10 == a2)
      {
LABEL_9:
        v14 = v10[1];
        v17 = (size_t)*v14;
        v15 = (unsigned __int8 *)(v14 + 2);
        v16 = v17;
        goto LABEL_10;
      }
      v12 = 1;
      while (v11 != (uint64_t ***)-4096)
      {
        v13 = v9 + v12++;
        v9 = v13 & (v8 - 1);
        v11 = *(uint64_t ****)(v7 + 16 * v9);
        if (v11 == a2)
        {
          v10 = (uint64_t ****)(v7 + 16 * v9);
          goto LABEL_9;
        }
      }
    }
    v10 = (uint64_t ****)(v7 + 16 * v8);
    goto LABEL_9;
  }
  v16 = 0;
  v15 = (unsigned __int8 *)&byte_1C871356D;
LABEL_10:
  result = sub_1C62A54B8(a1, v15, v16);
  v19 = *(float **)(a3 + 16);
  if (v19)
  {
    v20 = 0;
    v21 = (_QWORD *)(*result + 8);
    v22 = v5 ^ (a2 >> 9);
    while (1)
    {
      v23 = *((_QWORD *)v19 + 2);
      v24 = v19[8];
      v25 = *((_QWORD *)v19 + 3);
      if (sub_1C62A55B8(v21, v23, v25))
      {
        v26 = (float *)sub_1C5766BB0((uint64_t)v21, v23, v25, (_OWORD *)v19 + 1);
        v27 = v26[8];
        if (vabds_f32(v24, v27) > 0.02)
          break;
      }
LABEL_14:
      v28 = *((_DWORD *)v19 + 8);
      result = sub_1C5766BB0((uint64_t)v21, *((_QWORD *)v19 + 2), *((_QWORD *)v19 + 3), (_OWORD *)v19 + 1);
      *((_DWORD *)result + 8) = v28;
      v19 = *(float **)v19;
      if (!v19)
        return result;
    }
    if ((v20 & 1) != 0)
    {
LABEL_33:
      v44 = llvm::dbgs((llvm *)v26);
      v45 = v44;
      v46 = *((_QWORD *)v44 + 4);
      if ((unint64_t)(*((_QWORD *)v44 + 3) - v46) > 5)
      {
        *(_WORD *)(v46 + 4) = 8293;
        *(_DWORD *)v46 = 1651470928;
        *((_QWORD *)v44 + 4) += 6;
      }
      else
      {
        v45 = llvm::raw_ostream::write(v44, "Probe ", 6uLL);
      }
      sub_1C5E21910(v45, *((_QWORD *)v19 + 2), 0, 0, 0);
      v47 = *((_QWORD *)v45 + 4);
      if ((unint64_t)(*((_QWORD *)v45 + 3) - v47) > 0x10)
      {
        *(_BYTE *)(v47 + 16) = 32;
        *(_OWORD *)v47 = *(_OWORD *)"\tprevious factor ";
        *((_QWORD *)v45 + 4) += 17;
      }
      else
      {
        v45 = llvm::raw_ostream::write(v45, "\tprevious factor ", 0x11uLL);
      }
      v51[0] = &unk_1E8168F18;
      v51[1] = "%0.2f";
      v51[2] = LODWORD(v27);
      llvm::raw_ostream::operator<<(v45, (uint64_t)v51);
      v48 = (_OWORD *)*((_QWORD *)v45 + 4);
      if (*((_QWORD *)v45 + 3) - (_QWORD)v48 > 0xFuLL)
      {
        *v48 = *(_OWORD *)"\tcurrent factor ";
        *((_QWORD *)v45 + 4) += 16;
      }
      else
      {
        v45 = llvm::raw_ostream::write(v45, "\tcurrent factor ", 0x10uLL);
      }
      v50[0] = &unk_1E8168F18;
      v50[1] = "%0.2f";
      v50[2] = LODWORD(v24);
      llvm::raw_ostream::operator<<(v45, (uint64_t)v50);
      v49 = (_BYTE *)*((_QWORD *)v45 + 4);
      if (*((_BYTE **)v45 + 3) == v49)
      {
        llvm::raw_ostream::write(v45, "\n", 1uLL);
      }
      else
      {
        *v49 = 10;
        ++*((_QWORD *)v45 + 4);
      }
      v20 = 1;
      goto LABEL_14;
    }
    v29 = llvm::dbgs((llvm *)v26);
    v30 = v29;
    v31 = *((_QWORD *)v29 + 4);
    if ((unint64_t)(*((_QWORD *)v29 + 3) - v31) > 8)
    {
      *(_BYTE *)(v31 + 8) = 32;
      *(_QWORD *)v31 = *(_QWORD *)"Function ";
      *((_QWORD *)v29 + 4) += 9;
    }
    else
    {
      v30 = llvm::raw_ostream::write(v29, "Function ", 9uLL);
    }
    if ((*((_BYTE *)a2 + 23) & 0x10) == 0)
    {
      v26 = (float *)*((_QWORD *)v30 + 4);
LABEL_31:
      if (*((_QWORD *)v30 + 3) - (_QWORD)v26 > 1uLL)
      {
        *(_WORD *)v26 = 2618;
        *((_QWORD *)v30 + 4) += 2;
      }
      else
      {
        v26 = (float *)llvm::raw_ostream::write(v30, ":\n", 2uLL);
      }
      goto LABEL_33;
    }
    v32 = ***a2;
    v33 = *(_QWORD *)(v32 + 152);
    v34 = *(unsigned int *)(v32 + 168);
    if ((_DWORD)v34)
    {
      LODWORD(v35) = (v34 - 1) & v22;
      v36 = (uint64_t ****)(v33 + 16 * v35);
      v37 = *v36;
      if (*v36 == a2)
        goto LABEL_27;
      v38 = 1;
      while (v37 != (uint64_t ***)-4096)
      {
        v39 = v35 + v38++;
        v35 = v39 & (v34 - 1);
        v37 = *(uint64_t ****)(v33 + 16 * v35);
        if (v37 == a2)
        {
          v36 = (uint64_t ****)(v33 + 16 * v35);
          goto LABEL_27;
        }
      }
    }
    v36 = (uint64_t ****)(v33 + 16 * v34);
LABEL_27:
    v40 = (size_t *)v36[1];
    v43 = *v40;
    v41 = v40 + 2;
    v42 = v43;
    v26 = (float *)*((_QWORD *)v30 + 4);
    if (v43 <= *((_QWORD *)v30 + 3) - (_QWORD)v26)
    {
      if (v42)
      {
        memcpy(v26, v41, v42);
        v26 = (float *)(*((_QWORD *)v30 + 4) + v42);
        *((_QWORD *)v30 + 4) = v26;
      }
    }
    else
    {
      v30 = llvm::raw_ostream::write(v30, (const char *)v41, v42);
      v26 = (float *)*((_QWORD *)v30 + 4);
    }
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1C5765450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  size_t size;
  uint64_t v5;
  int *v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;
  size_t v15;
  size_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  std::string v21;
  int v22[4];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  if (*(_DWORD *)(a1 + 8) != 2)
    return 0;
  v1 = *(_QWORD *)(a1 - 8);
  if (!v1)
    return 0;
  v2 = 0;
  do
  {
    std::to_string(&v21, *(_DWORD *)(v1 + 4));
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v3 = (int *)&v21;
    else
      v3 = (int *)v21.__r_.__value_.__r.__words[0];
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = *((_BYTE *)&v21.__r_.__value_.__s + 23) & 0x7F;
    else
      size = v21.__r_.__value_.__l.__size_;
    v23 = xmmword_1C85F4BB0;
    v24 = 0;
    llvm::MD5::update((int *)&v23, v3, size);
    llvm::MD5::final((int *)&v23, v22);
    v5 = *(_QWORD *)v22;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
    std::to_string(&v21, *(unsigned __int16 *)(v1 + 2));
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v6 = (int *)&v21;
    else
      v6 = (int *)v21.__r_.__value_.__r.__words[0];
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v7 = *((_BYTE *)&v21.__r_.__value_.__s + 23) & 0x7F;
    else
      v7 = v21.__r_.__value_.__l.__size_;
    v23 = xmmword_1C85F4BB0;
    v24 = 0;
    llvm::MD5::update((int *)&v23, v6, v7);
    llvm::MD5::final((int *)&v23, v22);
    v8 = *(_QWORD *)v22;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v21.__r_.__value_.__l.__data_);
    v9 = *(_QWORD *)(v1 - 8 * *(unsigned int *)(v1 + 8));
    if ((*(_BYTE *)v9 & 0xFE) == 0x12)
    {
      v10 = xmmword_1C85F4BB0;
      do
        v9 = *(_QWORD *)(v9 - 8 * *(unsigned int *)(v9 + 8) + 8);
      while ((*(_BYTE *)v9 & 0xFE) == 0x12);
    }
    else
    {
      v10 = xmmword_1C85F4BB0;
    }
    v11 = v9 - 8 * *(unsigned int *)(v9 + 8);
    v12 = *(_QWORD *)(v11 + 24);
    if (!v12 || (v13 = *(_QWORD **)(v12 + 8), v16 = *v13, v14 = (int *)(v13 + 3), (v15 = v16) == 0))
    {
      v17 = *(_QWORD *)(v11 + 16);
      if (v17)
      {
        v18 = *(_QWORD **)(v17 + 8);
        v19 = *v18;
        v14 = (int *)(v18 + 3);
        v15 = v19;
      }
      else
      {
        v15 = 0;
        v14 = 0;
      }
    }
    v23 = v10;
    v24 = 0;
    llvm::MD5::update((int *)&v23, v14, v15);
    llvm::MD5::final((int *)&v23, (int *)&v21);
    v2 ^= v5 ^ v8 ^ v21.__r_.__value_.__r.__words[0];
    if (*(_DWORD *)(v1 + 8) != 2)
      break;
    v1 = *(_QWORD *)(v1 - 8);
  }
  while (v1);
  return v2;
}

llvm::PseudoProbeManager *llvm::PseudoProbeManager::PseudoProbeManager(llvm::PseudoProbeManager *this, const llvm::Module *a2)
{
  uint64_t NamedMetadata;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  __int128 v18;
  uint64_t v19;
  _QWORD v20[4];
  __int16 v21;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  v20[0] = "llvm.pseudo_probe_desc";
  v21 = 259;
  NamedMetadata = llvm::Module::getNamedMetadata((uint64_t)a2, (uint64_t)v20);
  if (NamedMetadata)
  {
    v4 = NamedMetadata;
    v5 = *(unsigned int *)(*(_QWORD *)(NamedMetadata + 48) + 8);
    if ((_DWORD)v5)
    {
      v6 = 0;
      v7 = 8 * v5;
      do
      {
        v8 = *(_QWORD *)(**(_QWORD **)(v4 + 48) + v6);
        v9 = (_QWORD *)(v8 - 8 * *(unsigned int *)(v8 + 8));
        if (*(_BYTE *)(*(_QWORD *)(*v9 + 128) + 16) == 16)
          v10 = *(_QWORD *)(*v9 + 128);
        else
          v10 = 0;
        v11 = (uint64_t *)(v10 + 24);
        if (*(_DWORD *)(v10 + 32) >= 0x41u)
          v11 = (uint64_t *)*v11;
        v12 = *v11;
        v19 = v12;
        v13 = *(_QWORD *)(v9[1] + 128);
        if (*(_BYTE *)(v13 + 16) == 16)
          v14 = v13;
        else
          v14 = 0;
        v15 = (_QWORD *)(v14 + 24);
        if (*(_DWORD *)(v14 + 32) >= 0x41u)
          v15 = (_QWORD *)*v15;
        v16 = (_QWORD *)*v15;
        *(_QWORD *)&v18 = v12;
        *((_QWORD *)&v18 + 1) = v16;
        sub_1C62A4CC4((uint64_t)v20, (uint64_t)this, &v19, &v18);
        v6 += 8;
      }
      while (v7 != v6);
    }
  }
  return this;
}

uint64_t llvm::SampleProfileProber::SampleProfileProber(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)a1 = a2;
  v4 = a1 + 8;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1C47EBC30((_BYTE *)v4, *(void **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v5 = *a3;
    *(_QWORD *)(v4 + 16) = *((_QWORD *)a3 + 2);
    *(_OWORD *)v4 = v5;
  }
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 72) = 1065353216;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_DWORD *)(a1 + 112) = 1065353216;
  sub_1C62A2EDC((_QWORD *)(a1 + 40));
  sub_1C62A2EDC((_QWORD *)(a1 + 80));
  *(_DWORD *)(a1 + 120) = 0;
  llvm::SampleProfileProber::computeProbeIdForBlocks((_DWORD *)a1);
  llvm::SampleProfileProber::computeProbeIdForCallsites((llvm::SampleProfileProber *)a1);
  llvm::SampleProfileProber::computeCFGHash((llvm::SampleProfileProber *)a1);
  return a1;
}

void llvm::SampleProfileProber::computeProbeIdForCallsites(llvm::SampleProfileProber *this)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8x8_t v15;
  void **v16;
  _QWORD *v17;
  unint64_t v18;
  float v19;
  float v20;
  _BOOL8 v21;
  unint64_t v22;
  unint64_t v23;
  int8x8_t prime;
  void *v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint8x8_t v30;
  unint64_t v31;
  uint8x8_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v2 = *(_QWORD *)(*(_QWORD *)this + 80);
  v41 = *(_QWORD *)this + 72;
  if (v2 != v41)
  {
    v43 = (_QWORD *)((char *)this + 96);
    do
    {
      v4 = v2 - 24;
      v42 = v2;
      if (!v2)
        v4 = 0;
      v5 = v4 + 40;
      for (i = *(_QWORD *)(v4 + 48); i != v5; i = *(_QWORD *)(i + 8))
      {
        if (i)
          v7 = i - 24;
        else
          v7 = 0;
        v8 = *(unsigned __int8 *)(v7 + 16);
        if (v8 != 33 && v8 != 39)
        {
          if (v8 != 84)
            continue;
          v9 = *(_QWORD *)(v7 - 32);
          if (v9)
          {
            if (!*(_BYTE *)(v9 + 16)
              && *(_QWORD *)(v9 + 24) == *(_QWORD *)(v7 + 72)
              && (*(_BYTE *)(v9 + 33) & 0x20) != 0)
            {
              continue;
            }
          }
        }
        v10 = *((_DWORD *)this + 30) + 1;
        *((_DWORD *)this + 30) = v10;
        v11 = 0x9DDFEA08EB382D69 * (((8 * v7) + 8) ^ HIDWORD(v7));
        v12 = 0x9DDFEA08EB382D69 * (HIDWORD(v7) ^ (v11 >> 47) ^ v11);
        v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
        v14 = *((_QWORD *)this + 11);
        if (v14)
        {
          v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
          v15.i16[0] = vaddlv_u8(v15);
          if (v15.u32[0] > 1uLL)
          {
            v1 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
            if (v13 >= v14)
              v1 = v13 % v14;
          }
          else
          {
            v1 = (v14 - 1) & v13;
          }
          v16 = *(void ***)(*((_QWORD *)this + 10) + 8 * v1);
          if (v16)
          {
            v17 = *v16;
            if (*v16)
            {
              do
              {
                v18 = v17[1];
                if (v18 == v13)
                {
                  if (v17[2] == v7)
                    goto LABEL_89;
                }
                else
                {
                  if (v15.u32[0] > 1uLL)
                  {
                    if (v18 >= v14)
                      v18 %= v14;
                  }
                  else
                  {
                    v18 &= v14 - 1;
                  }
                  if (v18 != v1)
                    break;
                }
                v17 = (_QWORD *)*v17;
              }
              while (v17);
            }
          }
        }
        v17 = operator new(0x20uLL);
        *v17 = 0;
        v17[1] = v13;
        v17[2] = v7;
        *((_DWORD *)v17 + 6) = 0;
        v19 = (float)(unint64_t)(*((_QWORD *)this + 13) + 1);
        v20 = *((float *)this + 28);
        if (!v14 || (float)(v20 * (float)v14) < v19)
        {
          v21 = (v14 & (v14 - 1)) != 0;
          if (v14 < 3)
            v21 = 1;
          v22 = v21 | (2 * v14);
          v23 = vcvtps_u32_f32(v19 / v20);
          if (v22 <= v23)
            prime = (int8x8_t)v23;
          else
            prime = (int8x8_t)v22;
          if (*(_QWORD *)&prime == 1)
          {
            prime = (int8x8_t)2;
          }
          else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
          {
            prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
            v14 = *((_QWORD *)this + 11);
          }
          if (*(_QWORD *)&prime <= v14)
          {
            if (*(_QWORD *)&prime < v14)
            {
              v31 = vcvtps_u32_f32((float)*((unint64_t *)this + 13) / *((float *)this + 28));
              if (v14 < 3 || (v32 = (uint8x8_t)vcnt_s8((int8x8_t)v14), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
              {
                v31 = std::__next_prime(v31);
              }
              else
              {
                v33 = 1 << -(char)__clz(v31 - 1);
                if (v31 >= 2)
                  v31 = v33;
              }
              if (*(_QWORD *)&prime <= v31)
                prime = (int8x8_t)v31;
              if (*(_QWORD *)&prime >= v14)
              {
                v14 = *((_QWORD *)this + 11);
              }
              else
              {
                if (prime)
                  goto LABEL_45;
                v40 = (void *)*((_QWORD *)this + 10);
                *((_QWORD *)this + 10) = 0;
                if (v40)
                  operator delete(v40);
                v14 = 0;
                *((_QWORD *)this + 11) = 0;
              }
            }
          }
          else
          {
LABEL_45:
            if (*(_QWORD *)&prime >> 61)
              sub_1C4764EE4();
            v25 = operator new(8 * *(_QWORD *)&prime);
            v26 = (void *)*((_QWORD *)this + 10);
            *((_QWORD *)this + 10) = v25;
            if (v26)
              operator delete(v26);
            v27 = 0;
            *((int8x8_t *)this + 11) = prime;
            do
              *(_QWORD *)(*((_QWORD *)this + 10) + 8 * v27++) = 0;
            while (*(_QWORD *)&prime != v27);
            v28 = (_QWORD *)*v43;
            if (*v43)
            {
              v29 = v28[1];
              v30 = (uint8x8_t)vcnt_s8(prime);
              v30.i16[0] = vaddlv_u8(v30);
              if (v30.u32[0] > 1uLL)
              {
                if (v29 >= *(_QWORD *)&prime)
                  v29 %= *(_QWORD *)&prime;
              }
              else
              {
                v29 &= *(_QWORD *)&prime - 1;
              }
              *(_QWORD *)(*((_QWORD *)this + 10) + 8 * v29) = v43;
              v34 = (_QWORD *)*v28;
              if (*v28)
              {
                do
                {
                  v35 = v34[1];
                  if (v30.u32[0] > 1uLL)
                  {
                    if (v35 >= *(_QWORD *)&prime)
                      v35 %= *(_QWORD *)&prime;
                  }
                  else
                  {
                    v35 &= *(_QWORD *)&prime - 1;
                  }
                  if (v35 != v29)
                  {
                    v36 = *((_QWORD *)this + 10);
                    if (!*(_QWORD *)(v36 + 8 * v35))
                    {
                      *(_QWORD *)(v36 + 8 * v35) = v28;
                      goto LABEL_70;
                    }
                    *v28 = *v34;
                    *v34 = **(_QWORD **)(*((_QWORD *)this + 10) + 8 * v35);
                    **(_QWORD **)(*((_QWORD *)this + 10) + 8 * v35) = v34;
                    v34 = v28;
                  }
                  v35 = v29;
LABEL_70:
                  v28 = v34;
                  v34 = (_QWORD *)*v34;
                  v29 = v35;
                }
                while (v34);
              }
            }
            v14 = (unint64_t)prime;
          }
          if ((v14 & (v14 - 1)) != 0)
          {
            if (v13 >= v14)
              v1 = v13 % v14;
            else
              v1 = v13;
          }
          else
          {
            v1 = (v14 - 1) & v13;
          }
        }
        v37 = *((_QWORD *)this + 10);
        v38 = *(_QWORD **)(v37 + 8 * v1);
        if (v38)
        {
          *v17 = *v38;
        }
        else
        {
          *v17 = *v43;
          *v43 = v17;
          *(_QWORD *)(v37 + 8 * v1) = v43;
          if (!*v17)
            goto LABEL_88;
          v39 = *(_QWORD *)(*v17 + 8);
          if ((v14 & (v14 - 1)) != 0)
          {
            if (v39 >= v14)
              v39 %= v14;
          }
          else
          {
            v39 &= v14 - 1;
          }
          v38 = (_QWORD *)(*((_QWORD *)this + 10) + 8 * v39);
        }
        *v38 = v17;
LABEL_88:
        ++*((_QWORD *)this + 13);
LABEL_89:
        *((_DWORD *)v17 + 6) = v10;
      }
      v2 = *(_QWORD *)(v42 + 8);
    }
    while (v2 != v41);
  }
}

_QWORD *llvm::SampleProfileProber::getBlockId(llvm::SampleProfileProber *this, const llvm::BasicBlock *a2)
{
  _QWORD *result;

  result = sub_1C61B81A8((_QWORD *)this + 5, (unint64_t)a2);
  if (result)
    return (_QWORD *)*((unsigned int *)result + 6);
  return result;
}

uint64_t llvm::SampleProfileProber::getCallsiteId(int8x8_t *this, unint64_t a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  uint64_t ***v8;
  uint64_t **i;
  unint64_t v10;

  v2 = this[11];
  if (v2)
  {
    v3 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
    v4 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v3 >> 47) ^ v3);
    v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
    v6 = (uint8x8_t)vcnt_s8(v2);
    v6.i16[0] = vaddlv_u8(v6);
    if (v6.u32[0] > 1uLL)
    {
      v7 = v5;
      if (v5 >= *(_QWORD *)&v2)
        v7 = v5 % *(_QWORD *)&v2;
    }
    else
    {
      v7 = (*(_QWORD *)&v2 - 1) & v5;
    }
    v8 = *(uint64_t ****)(*(_QWORD *)&this[10] + 8 * v7);
    if (v8)
    {
      for (i = *v8; i; i = (uint64_t **)*i)
      {
        v10 = (unint64_t)i[1];
        if (v5 == v10)
        {
          if (i[2] == (uint64_t *)a2)
            return *((unsigned int *)i + 6);
        }
        else
        {
          if (v6.u32[0] > 1uLL)
          {
            if (v10 >= *(_QWORD *)&v2)
              v10 %= *(_QWORD *)&v2;
          }
          else
          {
            v10 &= *(_QWORD *)&v2 - 1;
          }
          if (v10 != v7)
            return 0;
        }
      }
    }
  }
  return 0;
}

void llvm::SampleProfileProber::instrumentOneFunc(llvm::SampleProfileProber *this, llvm::Function *a2, llvm::TargetMachine *a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  llvm::Function *v11;
  int v12;
  int v13;
  _QWORD *v14;
  int *v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  uint64_t **v19;
  uint64_t *v20;
  void *v21;
  uint64_t NamedMetadata;
  llvm::Triple *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  llvm::TargetMachine *v27;
  int v28;
  BOOL v29;
  uint64_t *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  unsigned int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  BOOL v44;
  const llvm::APInt *v45;
  uint64_t Declaration;
  llvm::ConstantInt *v47;
  unsigned int v48;
  unint64_t v49;
  const llvm::APInt *v50;
  llvm::ValueHandleBase *v51;
  llvm::ConstantInt *v52;
  unsigned int v53;
  unint64_t v54;
  const llvm::APInt *v55;
  llvm::ValueHandleBase *v56;
  llvm::ConstantInt *v57;
  const llvm::APInt *v58;
  llvm::ValueHandleBase *v59;
  llvm::ConstantInt *v60;
  unsigned int v61;
  unint64_t v62;
  llvm::ValueHandleBase *v63;
  uint64_t **v64;
  unsigned __int8 **v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  unsigned int v70;
  llvm::Function **v71;
  llvm::Function *v72;
  llvm::Function **v73;
  int v74;
  BOOL v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  unsigned __int8 *Impl;
  unsigned __int8 *v84;
  llvm::Function **v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  unsigned __int8 *v91;
  unsigned __int8 **v92;
  unsigned __int8 *v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  unsigned int v98;
  llvm::Function **v99;
  llvm::Function *v100;
  llvm::Function **v101;
  int v102;
  BOOL v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  unsigned __int16 *v108;
  unsigned __int8 *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  llvm::MDNode *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  unsigned __int8 *v118;
  unsigned __int8 *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  unsigned __int8 *v123;
  unsigned __int8 *v124;
  llvm::Function **v125;
  llvm::Function *v126;
  unsigned int v127;
  unsigned int v130;
  unsigned int v131;
  unsigned __int8 *v132;
  uint64_t *v133;
  unint64_t v134;
  unsigned int v135;
  __int16 v136;
  __int128 v137;
  __int128 v138;
  void *__p[2];
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v144 = *MEMORY[0x1E0C80C00];
  v4 = (uint64_t *)*((_QWORD *)a2 + 5);
  v5 = **(uint64_t ***)a2;
  v133 = v5;
  v127 = a2 >> 4;
  if ((*((_BYTE *)a2 + 23) & 0x10) != 0)
  {
    v6 = *v5;
    v7 = *(_QWORD *)(*v5 + 152);
    v8 = *(unsigned int *)(v6 + 168);
    if ((_DWORD)v8)
    {
      LODWORD(v9) = (v8 - 1) & ((a2 >> 4) ^ (a2 >> 9));
      v10 = v7 + 16 * v9;
      v11 = *(llvm::Function **)v10;
      if (*(llvm::Function **)v10 == a2)
      {
LABEL_9:
        v14 = *(_QWORD **)(v10 + 8);
        v17 = *v14;
        v15 = (int *)(v14 + 2);
        v16 = v17;
        goto LABEL_10;
      }
      v12 = 1;
      while (v11 != (llvm::Function *)-4096)
      {
        v13 = v9 + v12++;
        v9 = v13 & (v8 - 1);
        v11 = *(llvm::Function **)(v7 + 16 * v9);
        if (v11 == a2)
        {
          v10 = v7 + 16 * v9;
          goto LABEL_9;
        }
      }
    }
    v10 = v7 + 16 * v8;
    goto LABEL_9;
  }
  v16 = 0;
  v15 = (int *)&byte_1C871356D;
LABEL_10:
  *(_OWORD *)__p = xmmword_1C85F4BB0;
  v140 = 0;
  llvm::MD5::update((int *)__p, v15, v16);
  llvm::MD5::final((int *)__p, (int *)&v134);
  v18 = v134;
  v19 = (uint64_t **)*((_QWORD *)this + 7);
  if (v19)
  {
    v130 = v127 ^ (a2 >> 9);
    do
    {
      v30 = v19[2];
      v31 = v30 + 5;
      v32 = (_QWORD *)v30[6];
      v33 = v31;
      if (v32 != v31)
      {
        v33 = v32;
        while (1)
        {
          v34 = v33 - 3;
          if (!v33)
            v34 = 0;
          if (*((_BYTE *)v34 + 16) != 83)
            break;
          v33 = (_QWORD *)v33[1];
          if (v33 == v31)
          {
            v33 = v31;
            goto LABEL_34;
          }
        }
        v35 = *((unsigned __int8 *)v33 - 8) - 38;
        v36 = v35 > 0x38;
        v37 = (1 << v35) & 0x100060000000001;
        if (!v36 && v37 != 0)
          v33 = (_QWORD *)v33[1];
      }
LABEL_34:
      v39 = *((unsigned int *)v19 + 6);
      if (v33)
        v40 = (uint64_t)(v33 - 3);
      else
        v40 = 0;
      while (1)
      {
        v41 = (_QWORD *)*v31;
        if ((_QWORD *)*v31 == v31)
        {
          v42 = 0;
        }
        else
        {
          if (v41)
            v42 = v41 - 3;
          else
            v42 = 0;
          if (*((unsigned __int8 *)v42 + 16) - 29 >= 0xB)
            v42 = 0;
        }
        if ((_QWORD *)v40 == v42
          || *(_BYTE *)(v40 + 16) != 83
          && !sub_1C4D99D08(v40)
          && !llvm::Instruction::isLifetimeStartOrEnd((llvm::Instruction *)v40)
          && *(_QWORD *)(v40 + 48))
        {
          break;
        }
        v43 = *(_QWORD *)(v40 + 32);
        if (v43)
          v44 = v43 == *(_QWORD *)(v40 + 40) + 40;
        else
          v44 = 1;
        if (v44)
          v40 = 0;
        else
          v40 = v43 - 24;
      }
      sub_1C4773D54((uint64_t)__p, v40, 0, 0, 0);
      Declaration = llvm::Intrinsic::getDeclaration(v4, 244, 0, 0);
      v137 = 0u;
      v138 = 0u;
      v47 = *(llvm::ConstantInt **)(*(_QWORD *)v143 + 1984);
      v48 = *(_DWORD *)(*(_QWORD *)v143 + 1992);
      v135 = v48 >> 8;
      if (v48 >> 8 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v134, v18, 0);
      }
      else
      {
        if (v48 <= 0xFF)
          v49 = 0;
        else
          v49 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v48);
        v134 = v49 & v18;
      }
      v51 = llvm::ConstantInt::get(v47, (llvm::LLVMContext *)&v134, v45);
      if (v135 >= 0x41 && v134)
        MEMORY[0x1CAA32F9C](v134, 0x1000C8000313F17);
      *(_QWORD *)&v137 = v51;
      v52 = *(llvm::ConstantInt **)(*(_QWORD *)v143 + 1984);
      v53 = *(_DWORD *)(*(_QWORD *)v143 + 1992);
      v135 = v53 >> 8;
      if (v53 >> 8 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v134, v39, 0);
      }
      else
      {
        if (v53 <= 0xFF)
          v54 = 0;
        else
          v54 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v53);
        v134 = v54 & v39;
      }
      v56 = llvm::ConstantInt::get(v52, (llvm::LLVMContext *)&v134, v50);
      if (v135 >= 0x41 && v134)
        MEMORY[0x1CAA32F9C](v134, 0x1000C8000313F17);
      *((_QWORD *)&v137 + 1) = v56;
      v57 = *(llvm::ConstantInt **)(*(_QWORD *)v143 + 1960);
      v135 = *(_DWORD *)(*(_QWORD *)v143 + 1968) >> 8;
      if (v135 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v134, 0, 0);
      else
        v134 = 0;
      v59 = llvm::ConstantInt::get(v57, (llvm::LLVMContext *)&v134, v55);
      if (v135 >= 0x41 && v134)
        MEMORY[0x1CAA32F9C](v134, 0x1000C8000313F17);
      *(_QWORD *)&v138 = v59;
      v60 = *(llvm::ConstantInt **)(*(_QWORD *)v143 + 1984);
      v61 = *(_DWORD *)(*(_QWORD *)v143 + 1992);
      v135 = v61 >> 8;
      if (v61 >> 8 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v134, -1, 0);
      }
      else
      {
        if (v61 <= 0xFF)
          v62 = 0;
        else
          v62 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v61);
        v134 = v62;
      }
      v63 = llvm::ConstantInt::get(v60, (llvm::LLVMContext *)&v134, v58);
      if (v135 >= 0x41 && v134)
        MEMORY[0x1CAA32F9C](v134, 0x1000C8000313F17);
      *((_QWORD *)&v138 + 1) = v63;
      if (Declaration)
        v64 = *(uint64_t ***)(Declaration + 24);
      else
        v64 = 0;
      v136 = 257;
      v65 = (unsigned __int8 **)(sub_1C4774778((uint64_t *)__p, v64, Declaration, (uint64_t *)&v137, 4, (uint64_t)&v134, 0)+ 48);
      if (*v65 || (*((_BYTE *)a2 + 23) & 0x20) == 0)
        goto LABEL_79;
      v66 = ***(_QWORD ***)a2;
      v134 = (unint64_t)a2;
      v67 = *(_DWORD *)(v66 + 2496);
      if (v67)
      {
        v68 = *(_QWORD *)(v66 + 2480);
        v69 = v67 - 1;
        v70 = v69 & v130;
        v71 = (llvm::Function **)(v68 + 40 * (v69 & v130));
        v72 = *v71;
        if (*v71 == a2)
          goto LABEL_94;
        v73 = 0;
        v74 = 1;
        while (v72 != (llvm::Function *)-4096)
        {
          if (v73)
            v75 = 0;
          else
            v75 = v72 == (llvm::Function *)-8192;
          if (v75)
            v73 = v71;
          v76 = v70 + v74++;
          v70 = v76 & v69;
          v71 = (llvm::Function **)(v68 + 40 * v70);
          v72 = *v71;
          if (*v71 == a2)
            goto LABEL_94;
        }
        if (v73)
          v85 = v73;
        else
          v85 = v71;
      }
      else
      {
        v85 = 0;
      }
      v71 = (llvm::Function **)sub_1C541AB24(v66 + 2480, (uint64_t)&v134, (uint64_t *)&v134, v85);
      v86 = v134;
      v71[4] = 0;
      v71[3] = 0;
      *v71 = (llvm::Function *)v86;
      v71[1] = (llvm::Function *)(v71 + 3);
      v71[2] = (llvm::Function *)0x100000000;
LABEL_94:
      v77 = *((unsigned int *)v71 + 4);
      if ((_DWORD)v77)
      {
        v78 = (uint64_t *)((char *)v71[1] + 8);
        v79 = 16 * v77;
        while (*((_DWORD *)v78 - 2))
        {
          v78 += 2;
          v79 -= 16;
          if (!v79)
            goto LABEL_79;
        }
        v80 = *v78;
        if (*v78)
        {
          v81 = *(_QWORD *)(v80 + 16);
          v82 = (uint64_t *)(v81 & 0xFFFFFFFFFFFFFFF8);
          if ((v81 & 4) != 0)
            v82 = (uint64_t *)*v82;
          Impl = (unsigned __int8 *)llvm::DILocation::getImpl(v82, 0, 0, v80, 0, 0, 0, 1);
          v134 = (unint64_t)Impl;
          if (Impl)
            llvm::MetadataTracking::track((uint64_t)&v134, Impl, 2);
          if (&v134 == (unint64_t *)v65)
          {
            if (v134)
              llvm::MetadataTracking::untrack((uint64_t)&v134, (unsigned __int8 *)v134);
          }
          else
          {
            if (*v65)
              llvm::MetadataTracking::untrack((uint64_t)v65, *v65);
            v84 = (unsigned __int8 *)v134;
            *v65 = (unsigned __int8 *)v134;
            if (v84)
              llvm::MetadataTracking::retrack((uint64_t)&v134, v84, (uint64_t)v65);
          }
        }
      }
LABEL_79:
      if (__p[0] != &v140)
        free(__p[0]);
      v19 = (uint64_t **)*v19;
    }
    while (v19);
  }
  v20 = (uint64_t *)*((_QWORD *)this + 12);
  if (v20)
  {
    v131 = v127 ^ (a2 >> 9);
    while (1)
    {
      v87 = v20[2];
      v88 = *(_QWORD *)(v87 - 32);
      if (v88 && !*(_BYTE *)(v88 + 16) && *(_QWORD *)(v88 + 24) == *(_QWORD *)(v87 + 72))
        v89 = 0x8000000;
      else
        v89 = 0x4000000;
      v90 = *((_DWORD *)v20 + 6);
      v93 = *(unsigned __int8 **)(v87 + 48);
      v92 = (unsigned __int8 **)(v87 + 48);
      v91 = v93;
      if (v93)
      {
        __p[0] = v91;
LABEL_153:
        llvm::MetadataTracking::track((uint64_t)__p, v91, 2);
        v108 = (unsigned __int16 *)__p[0];
        if (__p[0])
        {
          v109 = (unsigned __int8 *)*((_QWORD *)__p[0] - *((unsigned int *)__p[0] + 2));
          v110 = *v109;
          v111 = (uint64_t)v109;
          if (v110 == 19)
          {
            v111 = *((_QWORD *)__p[0] - *((unsigned int *)__p[0] + 2));
            do
            {
              if (!*(_DWORD *)(v111 + 24))
                break;
              v111 = *(_QWORD *)(v111 - 8 * *(unsigned int *)(v111 + 8) + 8);
            }
            while (*(_BYTE *)v111 == 19);
          }
          v112 = *((_QWORD *)__p[0] + 2);
          v113 = (_QWORD *)(v112 & 0xFFFFFFFFFFFFFFF8);
          if ((v112 & 4) != 0)
            v113 = (_QWORD *)*v113;
          if (v110 != 15)
            v109 = *(unsigned __int8 **)&v109[-8 * *((unsigned int *)v109 + 2)];
          v114 = llvm::DILexicalBlockFile::getImpl(v113, v111, (uint64_t)v109, v89 | (8 * v90) | 0x3200007u, 0, 1);
          v115 = *((_QWORD *)v108 + 2);
          v116 = (uint64_t *)(v115 & 0xFFFFFFFFFFFFFFF8);
          if ((v115 & 4) != 0)
            v116 = (uint64_t *)*v116;
          if (*((_DWORD *)v108 + 2) == 2)
            v117 = *((_QWORD *)v108 - 1);
          else
            v117 = 0;
          v118 = (unsigned __int8 *)llvm::DILocation::getImpl(v116, *((_DWORD *)v108 + 1), v108[1], (uint64_t)v114, v117, 0, 0, 1);
          v134 = (unint64_t)v118;
          if (v118)
            llvm::MetadataTracking::track((uint64_t)&v134, v118, 2);
          if (__p[0])
            llvm::MetadataTracking::untrack((uint64_t)__p, (unsigned __int8 *)__p[0]);
          __p[0] = (void *)v134;
          if (v134)
          {
            llvm::MetadataTracking::retrack((uint64_t)&v134, (unsigned __int8 *)v134, (uint64_t)__p);
            v132 = (unsigned __int8 *)__p[0];
            if (__p[0])
              llvm::MetadataTracking::track((uint64_t)&v132, (unsigned __int8 *)__p[0], 2);
          }
          else
          {
            v132 = 0;
          }
          if (&v132 == v92)
          {
            if (v132)
              llvm::MetadataTracking::untrack((uint64_t)&v132, v132);
          }
          else
          {
            if (*v92)
              llvm::MetadataTracking::untrack((uint64_t)v92, *v92);
            v119 = v132;
            *v92 = v132;
            if (v119)
            {
              llvm::MetadataTracking::retrack((uint64_t)&v132, v119, (uint64_t)v92);
              v132 = 0;
            }
          }
          if (__p[0])
            llvm::MetadataTracking::untrack((uint64_t)__p, (unsigned __int8 *)__p[0]);
        }
        goto LABEL_180;
      }
      if ((*((_BYTE *)a2 + 23) & 0x20) != 0)
        break;
LABEL_152:
      v91 = *v92;
      __p[0] = v91;
      if (v91)
        goto LABEL_153;
LABEL_180:
      v20 = (uint64_t *)*v20;
      if (!v20)
        goto LABEL_12;
    }
    v94 = ***(_QWORD ***)a2;
    __p[0] = a2;
    v95 = *(_DWORD *)(v94 + 2496);
    if (v95)
    {
      v96 = *(_QWORD *)(v94 + 2480);
      v97 = v95 - 1;
      v98 = v97 & v131;
      v99 = (llvm::Function **)(v96 + 40 * (v97 & v131));
      v100 = *v99;
      if (*v99 == a2)
      {
LABEL_148:
        v105 = *((unsigned int *)v99 + 4);
        if ((_DWORD)v105)
        {
          v106 = (uint64_t *)((char *)v99[1] + 8);
          v107 = 16 * v105;
          while (*((_DWORD *)v106 - 2))
          {
            v106 += 2;
            v107 -= 16;
            if (!v107)
              goto LABEL_152;
          }
          v120 = *v106;
          if (*v106)
          {
            v121 = *(_QWORD *)(v120 + 16);
            v122 = (uint64_t *)(v121 & 0xFFFFFFFFFFFFFFF8);
            if ((v121 & 4) != 0)
              v122 = (uint64_t *)*v122;
            v123 = (unsigned __int8 *)llvm::DILocation::getImpl(v122, 0, 0, v120, 0, 0, 0, 1);
            v134 = (unint64_t)v123;
            if (v123)
              llvm::MetadataTracking::track((uint64_t)&v134, v123, 2);
            if (&v134 == (unint64_t *)v92)
            {
              if (v134)
                llvm::MetadataTracking::untrack((uint64_t)&v134, (unsigned __int8 *)v134);
            }
            else
            {
              if (*v92)
                llvm::MetadataTracking::untrack((uint64_t)v92, *v92);
              v124 = (unsigned __int8 *)v134;
              *v92 = (unsigned __int8 *)v134;
              if (!v124)
                goto LABEL_180;
              llvm::MetadataTracking::retrack((uint64_t)&v134, v124, (uint64_t)v92);
            }
          }
        }
        goto LABEL_152;
      }
      v101 = 0;
      v102 = 1;
      while (v100 != (llvm::Function *)-4096)
      {
        if (v101)
          v103 = 0;
        else
          v103 = v100 == (llvm::Function *)-8192;
        if (v103)
          v101 = v99;
        v104 = v98 + v102++;
        v98 = v104 & v97;
        v99 = (llvm::Function **)(v96 + 40 * v98);
        v100 = *v99;
        if (*v99 == a2)
          goto LABEL_148;
      }
      if (v101)
        v125 = v101;
      else
        v125 = v99;
    }
    else
    {
      v125 = 0;
    }
    v99 = (llvm::Function **)sub_1C541AB24(v94 + 2480, (uint64_t)__p, (uint64_t *)__p, v125);
    v126 = (llvm::Function *)__p[0];
    v99[4] = 0;
    v99[3] = 0;
    *v99 = v126;
    v99[1] = (llvm::Function *)(v99 + 3);
    v99[2] = (llvm::Function *)0x100000000;
    goto LABEL_148;
  }
LABEL_12:
  v21 = (void *)llvm::MDBuilder::createPseudoProbeDesc(&v133, v18, *((_QWORD *)this + 4), a2);
  __p[0] = "llvm.pseudo_probe_desc";
  WORD4(v141) = 259;
  NamedMetadata = llvm::Module::getNamedMetadata((uint64_t)v4, (uint64_t)__p);
  __p[0] = v21;
  v24 = *(_QWORD *)(NamedMetadata + 48);
  v25 = *(unsigned int *)(v24 + 8);
  if (v25 >= *(_DWORD *)(v24 + 12))
  {
    sub_1C5419FD8(*(_QWORD *)(NamedMetadata + 48), (unsigned __int8 **)__p);
    v27 = a3;
  }
  else
  {
    v26 = (_QWORD *)(*(_QWORD *)v24 + 8 * v25);
    *v26 = v21;
    v27 = a3;
    if (v21)
    {
      llvm::MetadataTracking::track((uint64_t)v26, (unsigned __int8 *)v21, 2);
      LODWORD(v25) = *(_DWORD *)(v24 + 8);
    }
    *(_DWORD *)(v24 + 8) = v25 + 1;
  }
  v28 = *((_DWORD *)a2 + 8);
  if ((v28 & 0xF) != 1)
  {
    if (*((_BYTE *)a2 + 16))
    {
      if (*((_BYTE *)a2 + 16) == 3)
      {
        v29 = (*((_DWORD *)a2 + 5) & 0x7FFFFFF) == 0;
        if (!v27)
          return;
      }
      else
      {
        v29 = 0;
        if (!v27)
          return;
      }
      goto LABEL_209;
    }
    v29 = (v28 & 0x800000) == 0;
    if (*((llvm::Function **)a2 + 9) != (llvm::Function *)((char *)a2 + 72))
      v29 = 0;
    if (v27)
    {
LABEL_209:
      if (!v29)
      {
        if (*((char *)v27 + 471) < 0)
        {
          sub_1C47EBC30(__p, *((void **)v27 + 56), *((_QWORD *)v27 + 57));
        }
        else
        {
          *(_OWORD *)__p = *((_OWORD *)v27 + 28);
          v140 = *((_QWORD *)v27 + 58);
        }
        v142 = *((_QWORD *)v27 + 61);
        v141 = *(_OWORD *)((char *)v27 + 472);
        if ((HIDWORD(v142) > 9 || ((1 << SBYTE4(v142)) & 0x320) == 0) && (*((_BYTE *)v27 + 1040) & 2) != 0)
          llvm::getOrCreateFunctionComdat(a2, (llvm::Function *)__p, v23);
        if (SHIBYTE(v140) < 0)
          operator delete(__p[0]);
      }
    }
  }
}

void llvm::SampleProfileProbePass::run(llvm::TargetMachine **a1@<X0>, llvm *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *i;
  uint64_t v7;
  _BYTE v8[8];
  void *__p;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;

  llvm::getUniqueModuleId(a2, (uint64_t)&v13);
  llvm::Module::getOrInsertNamedMetadata((uint64_t)a2, "llvm.pseudo_probe_desc", 0x16uLL);
  for (i = (_QWORD *)*((_QWORD *)a2 + 4); i != (_QWORD *)((char *)a2 + 24); i = (_QWORD *)i[1])
  {
    if (i)
      v7 = (uint64_t)(i - 7);
    else
      v7 = 0;
    if (i && *(_BYTE *)(v7 + 16) == 3)
    {
      if ((*(_DWORD *)(v7 + 20) & 0x7FFFFFF) != 0)
        goto LABEL_14;
    }
    else if (*(_BYTE *)(v7 + 16) || *(_QWORD *)(v7 + 72) != v7 + 72 || (*(_BYTE *)(v7 + 34) & 0x80) != 0)
    {
LABEL_14:
      llvm::SampleProfileProber::SampleProfileProber((uint64_t)v8, v7, &v13);
      llvm::SampleProfileProber::instrumentOneFunc((llvm::SampleProfileProber *)v8, (llvm::Function *)v7, *a1);
      sub_1C61B8160((uint64_t)&v12);
      sub_1C61B8160((uint64_t)&v11);
      if (v10 < 0)
        operator delete(__p);
    }
  }
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_QWORD *)(a3 + 88) = 0;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_QWORD *)a3 = a3 + 32;
  *(_QWORD *)(a3 + 8) = a3 + 32;
  *(_QWORD *)(a3 + 16) = 2;
  *(_QWORD *)(a3 + 48) = a3 + 80;
  *(_QWORD *)(a3 + 56) = a3 + 80;
  *(_DWORD *)(a3 + 64) = 2;
  if (v14 < 0)
    operator delete((void *)v13);
}

uint64_t sub_1C5766B14(llvm::PseudoProbeVerifier **a1, void *a2, size_t a3, uint64_t *a4)
{
  uint64_t v6;
  llvm::PseudoProbeVerifier *v7;
  uint64_t result;
  uint64_t v9;

  v6 = *a4;
  *a4 = 0;
  v7 = *a1;
  if (v6)
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v6 + 16))(&v9, v6);
  else
    v9 = 0;
  llvm::PseudoProbeVerifier::runAfterPass(v7, a2, a3, &v9);
  result = v9;
  v9 = 0;
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  if (v6)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  return result;
}

_QWORD *sub_1C5766BB0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t v4;
  unint64_t v7;
  unint64_t v8;
  uint8x8_t v9;
  void **v10;
  _QWORD *v11;
  unint64_t v12;
  float v14;
  float v15;
  _BOOL8 v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;

  v7 = a3 - a2 + 32 * a2;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
  {
    v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      v4 = a3 - a2 + 32 * a2;
      if (v7 >= v8)
        v4 = v7 % v8;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
    v10 = *(void ***)(*(_QWORD *)a1 + 8 * v4);
    if (v10)
    {
      v11 = *v10;
      if (*v10)
      {
        do
        {
          v12 = v11[1];
          if (v12 == v7)
          {
            if (v11[2] == a2 && v11[3] == a3)
              return v11;
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8)
                v12 %= v8;
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4)
              break;
          }
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
    }
  }
  v11 = operator new(0x28uLL);
  *v11 = 0;
  v11[1] = v7;
  *((_OWORD *)v11 + 1) = *a4;
  *((_DWORD *)v11 + 8) = 0;
  v14 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    v16 = 1;
    if (v8 >= 3)
      v16 = (v8 & (v8 - 1)) != 0;
    v17 = v16 | (2 * v8);
    v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18)
      v19 = v18;
    else
      v19 = v17;
    sub_1C5221594(a1, v19);
    v8 = *(_QWORD *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8)
        v4 = v7 % v8;
      else
        v4 = v7;
    }
    else
    {
      v4 = (v8 - 1) & v7;
    }
  }
  v20 = *(_QWORD *)a1;
  v21 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v4);
  if (v21)
  {
    *v11 = *v21;
LABEL_42:
    *v21 = v11;
    goto LABEL_43;
  }
  *v11 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(v20 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    v22 = *(_QWORD *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8)
        v22 %= v8;
    }
    else
    {
      v22 &= v8 - 1;
    }
    v21 = (_QWORD *)(*(_QWORD *)a1 + 8 * v22);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return v11;
}

_QWORD *sub_1C5766DB4(uint64_t a1, int a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = operator new(24 * v8, (std::align_val_t)8uLL);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_1C62A57C4(a1, v4, v4 + 24 * v3);
    JUMPOUT(0x1CAA32FB4);
  }
  *(_QWORD *)(a1 + 8) = 0;
  v10 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v10)
  {
    v11 = 24 * v10;
    do
    {
      *result = -1;
      result += 3;
      v11 -= 24;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_1C5766E78(void **a1, char a2)
{
  char *v2;
  unint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v8;
  size_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;

  v3 = (unint64_t)*a1;
  v2 = (char *)a1[1];
  v4 = (char *)(v2 - (_BYTE *)*a1);
  v5 = (unint64_t)(v4 + 1);
  if ((uint64_t)(v4 + 1) < 0)
    abort();
  v8 = (unint64_t)a1[2] - v3;
  if (2 * v8 > v5)
    v5 = 2 * v8;
  if (v8 >= 0x3FFFFFFFFFFFFFFFLL)
    v9 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  if (v9)
    v10 = (char *)operator new(v9);
  else
    v10 = 0;
  v11 = &v10[v9];
  v4[(_QWORD)v10] = a2;
  v12 = (uint64_t)&v4[(_QWORD)v10 + 1];
  if (v2 == (char *)v3)
  {
    v10 = &v4[(_QWORD)v10];
  }
  else
  {
    v13 = &v2[~v3];
    do
    {
      v14 = *--v2;
      (v13--)[(_QWORD)v10] = v14;
    }
    while (v2 != (char *)v3);
    v2 = (char *)*a1;
  }
  *a1 = v10;
  a1[1] = (void *)v12;
  a1[2] = v11;
  if (v2)
    operator delete(v2);
  return v12;
}

uint64_t sub_1C5766F4C()
{
  __n128 v1;
  int v2;
  char v3;
  char *v4;

  v3 = 0;
  v4 = &v3;
  v2 = 1;
  v1.n128_u64[0] = (unint64_t)"Do pseudo probe verification";
  v1.n128_u64[1] = 28;
  sub_1C498EDF8((llvm::cl::Option *)&unk_1ED833420, "verify-pseudo-probe", &v4, &v2, &v1);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED833420, &dword_1C475E000);
  LODWORD(v4) = 1;
  v1.n128_u64[0] = (unint64_t)"The option to specify the name of the functions to verify.";
  v1.n128_u64[1] = 58;
  sub_1C62A5400(&v4, (__int128 *)&v1);
  __cxa_atexit((void (*)(void *))sub_1C50A4924, &qword_1ED80FF30, &dword_1C475E000);
  v3 = 1;
  v4 = &v3;
  v2 = 1;
  v1.n128_u64[0] = (unint64_t)"Update pseudo probe distribution factor";
  v1.n128_u64[1] = 39;
  sub_1C498EDF8((llvm::cl::Option *)&unk_1ED80FE70, "update-pseudo-probe", &v4, &v2, &v1);
  return __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED80FE70, &dword_1C475E000);
}

_QWORD *llvm::IPSCCPPass::run@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char v6;
  void (**v7)(void);
  uint64_t v9;
  _QWORD v10[3];
  _QWORD *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v5 = a1 + 272;
  v9 = *(_QWORD *)(llvm::AnalysisManager<llvm::Module>::getResultImpl(a2, &llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>,llvm::Module>::Key, a1)+ 8);
  v10[0] = &off_1E817C9E8;
  v10[1] = v9;
  v11 = v10;
  v6 = llvm::runIPSCCP(a1, v5, (uint64_t)v10, (uint64_t)sub_1C5768034);
  if (v11 == v10)
  {
    v7 = (void (**)(void))(v10[0] + 32);
  }
  else
  {
    if (!v11)
      goto LABEL_6;
    v7 = (void (**)(void))(*v11 + 40);
  }
  (*v7)();
LABEL_6:
  *(_QWORD *)a3 = a3 + 32;
  *(_QWORD *)(a3 + 8) = a3 + 32;
  *(_QWORD *)(a3 + 16) = 2;
  *(_DWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 48) = a3 + 80;
  *(_QWORD *)(a3 + 56) = a3 + 80;
  *(_QWORD *)(a3 + 64) = 2;
  *(_DWORD *)(a3 + 72) = 0;
  if ((v6 & 1) == 0)
    return sub_1C4774094((llvm::SmallPtrSetImplBase *)a3, (uint64_t)&llvm::PreservedAnalyses::AllAnalysesKey);
  sub_1C4DDB144(a3, (uint64_t)&llvm::DominatorTreeAnalysis::Key);
  sub_1C4DDB144(a3, (uint64_t)&llvm::PostDominatorTreeAnalysis::Key);
  return sub_1C4DDB144(a3, (uint64_t)&llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>,llvm::Module>::Key);
}

void llvm::initializeIPSCCPLegacyPassPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED8334E0);
  if (v2 != -1)
  {
    v5[0] = sub_1C5767218;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED8334E0, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C5767218(uint64_t a1)
{
  uint64_t v2;

  llvm::initializeAssumptionCacheTrackerPass(a1);
  llvm::initializeDominatorTreeWrapperPassPass(a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass(a1);
  v2 = operator new();
  *(_QWORD *)v2 = "Interprocedural Sparse Conditional Constant Propagation";
  *(_QWORD *)(v2 + 8) = 55;
  *(_QWORD *)(v2 + 16) = "ipsccp";
  *(_QWORD *)(v2 + 24) = 6;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F3A20;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5767678;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t sub_1C57672BC(uint64_t a1)
{
  unint64_t v3;
  unint64_t v5;
  _QWORD *v6;
  _QWORD v7[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1EF8F3A20;
  *(_DWORD *)(a1 + 24) = 4;
  *(_QWORD *)a1 = &off_1E817C788;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v5 = qword_1ED830BC0[0];
  v3 = atomic_load(&qword_1ED8334E0);
  if (v3 != -1)
  {
    v7[0] = sub_1C5767218;
    v7[1] = &v5;
    v6 = v7;
    std::__call_once(&qword_1ED8334E0, &v6, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

_QWORD *llvm::FunctionSpecializationPass::run@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD *v8;
  void (**v9)(_QWORD *);
  _QWORD *v10;
  void (**v11)(_QWORD *);
  _QWORD *v12;
  void (**v13)(_QWORD *);
  _QWORD v15[3];
  _QWORD *v16;
  _QWORD v17[3];
  _QWORD *v18;
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a1 + 272;
  v6 = *(_QWORD *)(llvm::AnalysisManager<llvm::Module>::getResultImpl(a2, &llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>,llvm::Module>::Key, a1)+ 8);
  v19[0] = &off_1E817CA30;
  v19[1] = v6;
  v20 = v19;
  v17[0] = &off_1E817CA78;
  v17[1] = v6;
  v18 = v17;
  v15[0] = &off_1E817CAC0;
  v15[1] = v6;
  v16 = v15;
  v7 = llvm::runFunctionSpecialization(a1, v5, (uint64_t)v19, (uint64_t)v17);
  v8 = v16;
  if (v16 == v15)
  {
    v9 = (void (**)(_QWORD *))(v15[0] + 32);
    v8 = v15;
  }
  else
  {
    if (!v16)
      goto LABEL_6;
    v9 = (void (**)(_QWORD *))(*v16 + 40);
  }
  (*v9)(v8);
LABEL_6:
  v10 = v18;
  if (v18 == v17)
  {
    v11 = (void (**)(_QWORD *))(v17[0] + 32);
    v10 = v17;
  }
  else
  {
    if (!v18)
      goto LABEL_11;
    v11 = (void (**)(_QWORD *))(*v18 + 40);
  }
  (*v11)(v10);
LABEL_11:
  v12 = v20;
  if (v20 == v19)
  {
    v13 = (void (**)(_QWORD *))(v19[0] + 32);
    v12 = v19;
  }
  else
  {
    if (!v20)
      goto LABEL_16;
    v13 = (void (**)(_QWORD *))(*v20 + 40);
  }
  (*v13)(v12);
LABEL_16:
  *(_QWORD *)a3 = a3 + 32;
  *(_QWORD *)(a3 + 8) = a3 + 32;
  *(_QWORD *)(a3 + 16) = 2;
  *(_DWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 48) = a3 + 80;
  *(_QWORD *)(a3 + 56) = a3 + 80;
  *(_QWORD *)(a3 + 64) = 2;
  *(_DWORD *)(a3 + 72) = 0;
  if (!v7)
    return sub_1C4774094((llvm::SmallPtrSetImplBase *)a3, (uint64_t)&llvm::PreservedAnalyses::AllAnalysesKey);
  sub_1C4DDB144(a3, (uint64_t)&llvm::DominatorTreeAnalysis::Key);
  sub_1C4DDB144(a3, (uint64_t)&llvm::PostDominatorTreeAnalysis::Key);
  return sub_1C4DDB144(a3, (uint64_t)&llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>,llvm::Module>::Key);
}

void llvm::initializeFunctionSpecializationLegacyPassPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED8334E8);
  if (v2 != -1)
  {
    v5[0] = sub_1C57675CC;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED8334E8, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C57675CC(uint64_t a1)
{
  uint64_t v2;

  llvm::initializeAssumptionCacheTrackerPass(a1);
  llvm::initializeDominatorTreeWrapperPassPass(a1);
  llvm::initializeTargetTransformInfoWrapperPassPass(a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass(a1);
  v2 = operator new();
  *(_QWORD *)v2 = "Propagate constant arguments by specializing the function";
  *(_QWORD *)(v2 + 8) = 57;
  *(_QWORD *)(v2 + 16) = "function-specialization";
  *(_QWORD *)(v2 + 24) = 23;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F7150;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5767984;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t sub_1C5767678()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C57672BC(v0);
}

void sub_1C57676A4(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void *sub_1C57676C8(uint64_t a1, uint64_t a2)
{
  sub_1C4771E64(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1C4771E64(a2, a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  return sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
}

uint64_t sub_1C5767718(llvm::ModulePass *a1, uint64_t **a2)
{
  uint64_t v4;
  _QWORD *v5;
  void (**v6)(_QWORD *);
  _QWORD v8[3];
  _QWORD *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if ((llvm::ModulePass::skipModule(a1, a2) & 1) == 0)
  {
    v8[0] = &off_1E817C828;
    v8[1] = a1;
    v9 = v8;
    v4 = llvm::runIPSCCP((uint64_t)a2, (uint64_t)(a2 + 34), (uint64_t)v8, (uint64_t)sub_1C57678A8);
    v5 = v9;
    if (v9 == v8)
    {
      v6 = (void (**)(_QWORD *))(v8[0] + 32);
      v5 = v8;
    }
    else
    {
      if (!v9)
        return v4;
      v6 = (void (**)(_QWORD *))(*v9 + 40);
    }
    (*v6)(v5);
    return v4;
  }
  return 0;
}

void sub_1C57677EC()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5767800(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C828;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5767834(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C828;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5767850(uint64_t a1, uint64_t a2)
{
  char **v3;
  char *v4;
  uint64_t v5;

  v3 = **(char ****)(*(_QWORD *)(a1 + 8) + 8);
  do
  {
    v4 = *v3;
    v3 += 2;
  }
  while (v4 != llvm::TargetLibraryInfoWrapperPass::ID);
  v5 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v3 - 1) + 96))(*(v3 - 1), llvm::TargetLibraryInfoWrapperPass::ID);
  return sub_1C4D914E8(v5, a2);
}

llvm::PredicateInfo *sub_1C57678A8@<X0>(uint64_t *a1@<X0>, llvm::Function *a2@<X1>, llvm::PredicateInfo **a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  char *v10;
  llvm::DominatorTree *v11;
  llvm::AssumptionCacheTracker *v12;
  llvm::AssumptionCache *AssumptionCache;
  llvm::PredicateInfo *v14;
  llvm::PredicateInfo *result;

  v5 = *a1;
  v6 = *(_QWORD *)(*(_QWORD *)(*a1 + 8) + 24);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, void *, llvm::Function *))(*(_QWORD *)v6 + 32))(v6, v5, &llvm::DominatorTreeWrapperPass::ID, a2);
  v8 = (*(uint64_t (**)(uint64_t, void *))(*(_QWORD *)v7 + 96))(v7, &llvm::DominatorTreeWrapperPass::ID);
  v9 = **(char ****)(v5 + 8);
  do
  {
    v10 = *v9;
    v9 += 2;
  }
  while (v10 != llvm::AssumptionCacheTracker::ID);
  v11 = (llvm::DominatorTree *)(v8 + 32);
  v12 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v9 - 1) + 96))(*(v9 - 1), llvm::AssumptionCacheTracker::ID);
  AssumptionCache = (llvm::AssumptionCache *)llvm::AssumptionCacheTracker::getAssumptionCache(v12, a2);
  v14 = (llvm::PredicateInfo *)operator new();
  result = llvm::PredicateInfo::PredicateInfo(v14, a2, v11, AssumptionCache);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = result;
  return result;
}

uint64_t sub_1C5767984()
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &unk_1EF8F7150;
  *(_DWORD *)(result + 24) = 4;
  *(_QWORD *)result = &off_1E817C870;
  return result;
}

void sub_1C57679D0(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void *sub_1C57679F4(uint64_t a1, uint64_t a2)
{
  sub_1C4771E64(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1C4771E64(a2, a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
  return sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
}

BOOL sub_1C5767A58(llvm::ModulePass *a1, uint64_t **a2)
{
  _BOOL8 v4;
  _QWORD *v5;
  void (**v6)(_QWORD *);
  _QWORD *v7;
  void (**v8)(_QWORD *);
  _QWORD *v9;
  void (**v10)(_QWORD *);
  _QWORD v12[3];
  _QWORD *v13;
  _QWORD v14[3];
  _QWORD *v15;
  _QWORD v16[3];
  _QWORD *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if ((llvm::ModulePass::skipModule(a1, a2) & 1) == 0)
  {
    v16[0] = &off_1E817C910;
    v16[1] = a1;
    v17 = v16;
    v14[0] = &off_1E817C958;
    v14[1] = a1;
    v15 = v14;
    v12[0] = &off_1E817C9A0;
    v12[1] = a1;
    v13 = v12;
    v4 = llvm::runFunctionSpecialization((uint64_t)a2, (uint64_t)(a2 + 34), (uint64_t)v16, (uint64_t)v14);
    v5 = v13;
    if (v13 == v12)
    {
      v6 = (void (**)(_QWORD *))(v12[0] + 32);
      v5 = v12;
    }
    else
    {
      if (!v13)
        goto LABEL_8;
      v6 = (void (**)(_QWORD *))(*v13 + 40);
    }
    (*v6)(v5);
LABEL_8:
    v7 = v15;
    if (v15 == v14)
    {
      v8 = (void (**)(_QWORD *))(v14[0] + 32);
      v7 = v14;
    }
    else
    {
      if (!v15)
        goto LABEL_13;
      v8 = (void (**)(_QWORD *))(*v15 + 40);
    }
    (*v8)(v7);
LABEL_13:
    v9 = v17;
    if (v17 == v16)
    {
      v10 = (void (**)(_QWORD *))(v16[0] + 32);
      v9 = v16;
    }
    else
    {
      if (!v17)
        return v4;
      v10 = (void (**)(_QWORD *))(*v17 + 40);
    }
    (*v10)(v9);
    return v4;
  }
  return 0;
}

void sub_1C5767BC4()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5767BD8(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C910;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5767C0C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C910;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5767C28(uint64_t a1, uint64_t a2)
{
  char **v3;
  char *v4;
  uint64_t v5;

  v3 = **(char ****)(*(_QWORD *)(a1 + 8) + 8);
  do
  {
    v4 = *v3;
    v3 += 2;
  }
  while (v4 != llvm::TargetLibraryInfoWrapperPass::ID);
  v5 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v3 - 1) + 96))(*(v3 - 1), llvm::TargetLibraryInfoWrapperPass::ID);
  return sub_1C4D914E8(v5, a2);
}

void sub_1C5767C84()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5767C98(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C958;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5767CCC(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C958;
  a2[1] = v2;
  return result;
}

uint64_t *sub_1C5767CE8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  char **v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13[2];
  int v14;
  _QWORD v15[2];
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v4 = **(char ****)(*(_QWORD *)(a1 + 8) + 8);
  do
  {
    v5 = *v4;
    v4 += 2;
  }
  while (v5 != llvm::TargetTransformInfoWrapperPass::ID);
  v6 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v4 - 1) + 96))(*(v4 - 1), llvm::TargetTransformInfoWrapperPass::ID);
  v13[0] = 0;
  v13[1] = 0;
  v14 = 0;
  v15[0] = 0;
  v15[1] = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v7 = *(_QWORD *)(v6 + 56);
  if (!v7)
  {
    sub_1C485C2F0();
    goto LABEL_10;
  }
  v2 = v15;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(*(_QWORD *)v7 + 48))(&v12, v7, a2);
  a2 = (uint64_t *)(v6 + 64);
  v8 = v12;
  if (!*(_BYTE *)(v6 + 72))
  {
    *(_QWORD *)(v6 + 64) = v12;
    *(_BYTE *)(v6 + 72) = 1;
    goto LABEL_7;
  }
  v12 = 0;
  v9 = *a2;
  *a2 = v8;
  if (v9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = v12;
    v12 = 0;
    if (v10)
LABEL_10:
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
  }
LABEL_7:
  MEMORY[0x1CAA32FB4](0, 8);
  sub_1C4D8B440(v2);
  sub_1C4D8B52C(v13);
  return a2;
}

void sub_1C5767E0C()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5767E20(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C9A0;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5767E54(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C9A0;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5767E70(uint64_t a1, llvm::Function *a2)
{
  char **v3;
  char *v4;
  llvm::AssumptionCacheTracker *v5;

  v3 = **(char ****)(*(_QWORD *)(a1 + 8) + 8);
  do
  {
    v4 = *v3;
    v3 += 2;
  }
  while (v4 != llvm::AssumptionCacheTracker::ID);
  v5 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v3 - 1) + 96))(*(v3 - 1), llvm::AssumptionCacheTracker::ID);
  return llvm::AssumptionCacheTracker::getAssumptionCache(v5, a2);
}

llvm::PredicateInfo *sub_1C5767EC8@<X0>(uint64_t *a1@<X0>, llvm::Function *a2@<X1>, llvm::PredicateInfo **a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char **v9;
  char *v10;
  llvm::DominatorTree *v11;
  llvm::AssumptionCacheTracker *v12;
  llvm::AssumptionCache *AssumptionCache;
  llvm::PredicateInfo *v14;
  llvm::PredicateInfo *result;

  v5 = *a1;
  v6 = *(_QWORD *)(*(_QWORD *)(*a1 + 8) + 24);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, void *, llvm::Function *))(*(_QWORD *)v6 + 32))(v6, v5, &llvm::DominatorTreeWrapperPass::ID, a2);
  v8 = (*(uint64_t (**)(uint64_t, void *))(*(_QWORD *)v7 + 96))(v7, &llvm::DominatorTreeWrapperPass::ID);
  v9 = **(char ****)(v5 + 8);
  do
  {
    v10 = *v9;
    v9 += 2;
  }
  while (v10 != llvm::AssumptionCacheTracker::ID);
  v11 = (llvm::DominatorTree *)(v8 + 32);
  v12 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v9 - 1) + 96))(*(v9 - 1), llvm::AssumptionCacheTracker::ID);
  AssumptionCache = (llvm::AssumptionCache *)llvm::AssumptionCacheTracker::getAssumptionCache(v12, a2);
  v14 = (llvm::PredicateInfo *)operator new();
  result = llvm::PredicateInfo::PredicateInfo(v14, a2, v11, AssumptionCache);
  a3[1] = 0;
  a3[2] = 0;
  *a3 = result;
  return result;
}

void sub_1C5767FA8()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5767FBC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817C9E8;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5767FF0(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817C9E8;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C576800C(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::TargetLibraryAnalysis::Key, a2)+ 8;
}

uint64_t sub_1C5768034@<X0>(uint64_t *a1@<X0>, llvm::Function *a2@<X1>, llvm::PredicateInfo **a3@<X8>)
{
  llvm::DominatorTree *v6;
  llvm::AssumptionCache *v7;
  llvm::PredicateInfo *v8;
  uint64_t result;
  uint64_t v10;

  v6 = (llvm::DominatorTree *)(llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::DominatorTreeAnalysis::Key, (uint64_t)a2)+ 8);
  v7 = (llvm::AssumptionCache *)(llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::AssumptionAnalysis::Key, (uint64_t)a2)+ 8);
  v8 = (llvm::PredicateInfo *)operator new();
  *a3 = llvm::PredicateInfo::PredicateInfo(v8, a2, v6, v7);
  a3[1] = v6;
  result = llvm::AnalysisManager<llvm::Function>::getCachedResultImpl(*a1, (uint64_t)&llvm::PostDominatorTreeAnalysis::Key, (uint64_t)a2);
  v10 = result + 8;
  if (!result)
    v10 = 0;
  a3[2] = (llvm::PredicateInfo *)v10;
  return result;
}

void sub_1C57680EC()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5768100(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817CA30;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5768134(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817CA30;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5768150(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::TargetLibraryAnalysis::Key, a2)+ 8;
}

void sub_1C576817C()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5768190(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817CA78;
  result[1] = v3;
  return result;
}

uint64_t sub_1C57681C4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817CA78;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C57681E0(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::TargetIRAnalysis::Key, a2) + 8;
}

void sub_1C576820C()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5768220(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E817CAC0;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5768254(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E817CAC0;
  a2[1] = v2;
  return result;
}

uint64_t sub_1C5768270(uint64_t a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*(_QWORD *)(a1 + 8), &llvm::AssumptionAnalysis::Key, a2)
       + 8;
}

uint64_t sub_1C5768298@<X0>(uint64_t *a1@<X0>, llvm::Function *a2@<X1>, llvm::PredicateInfo **a3@<X8>)
{
  llvm::DominatorTree *v6;
  llvm::AssumptionCache *v7;
  llvm::PredicateInfo *v8;
  uint64_t result;
  uint64_t v10;

  v6 = (llvm::DominatorTree *)(llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::DominatorTreeAnalysis::Key, (uint64_t)a2)+ 8);
  v7 = (llvm::AssumptionCache *)(llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::AssumptionAnalysis::Key, (uint64_t)a2)+ 8);
  v8 = (llvm::PredicateInfo *)operator new();
  *a3 = llvm::PredicateInfo::PredicateInfo(v8, a2, v6, v7);
  a3[1] = v6;
  result = llvm::AnalysisManager<llvm::Function>::getCachedResultImpl(*a1, (uint64_t)&llvm::PostDominatorTreeAnalysis::Key, (uint64_t)a2);
  v10 = result + 8;
  if (!result)
    v10 = 0;
  a3[2] = (llvm::PredicateInfo *)v10;
  return result;
}

uint64_t sub_1C576834C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1 + 24;
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 != a1 + 24)
  {
    v4 = 0;
    while (1)
    {
      v5 = v3;
      v3 = *(_QWORD *)(v3 + 8);
      if (v5)
        v6 = v5 - 56;
      else
        v6 = 0;
      if (v5 && *(_BYTE *)(v6 + 16) == 3)
      {
        if ((*(_DWORD *)(v6 + 20) & 0x7FFFFFF) == 0)
          goto LABEL_9;
      }
      else if (!*(_BYTE *)(v6 + 16) && *(_QWORD *)(v6 + 72) == v6 + 72 && (*(_BYTE *)(v6 + 34) & 0x80) == 0)
      {
LABEL_9:
        if (!*(_QWORD *)(v6 + 8))
        {
          llvm::Function::eraseFromParent((llvm::Function *)v6);
          v4 = 1;
        }
      }
      if (v3 == v2)
        goto LABEL_17;
    }
  }
  v4 = 0;
LABEL_17:
  v7 = a1 + 8;
  v8 = *(_QWORD *)(a1 + 16);
  while (v8 != v7)
  {
    v9 = v8;
    v8 = *(_QWORD *)(v8 + 8);
    if (v9)
      v10 = v9 - 56;
    else
      v10 = 0;
    if (v9 && *(_BYTE *)(v10 + 16) == 3)
    {
      if ((*(_DWORD *)(v10 + 20) & 0x7FFFFFF) == 0)
        goto LABEL_25;
    }
    else if (!*(_BYTE *)(v10 + 16) && *(_QWORD *)(v10 + 72) == v10 + 72 && (*(_BYTE *)(v10 + 34) & 0x80) == 0)
    {
LABEL_25:
      if (!*(_QWORD *)(v10 + 8))
        llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)v10);
    }
  }
  return v4 & 1;
}

void llvm::initializeStripDeadPrototypesLegacyPassPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED8334F0);
  if (v2 != -1)
  {
    v5[0] = sub_1C57684C8;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED8334F0, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C57684C8(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new();
  *(_QWORD *)v2 = "Strip Unused Function Prototypes";
  *(_QWORD *)(v2 + 8) = 32;
  *(_QWORD *)(v2 + 16) = "strip-dead-prototypes";
  *(_QWORD *)(v2 + 24) = 21;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F3A21;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5768620;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t sub_1C5768558(uint64_t a1)
{
  unint64_t v3;
  unint64_t v5;
  _QWORD *v6;
  _QWORD v7[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1EF8F3A21;
  *(_DWORD *)(a1 + 24) = 4;
  *(_QWORD *)a1 = &off_1E817CB08;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v5 = qword_1ED830BC0[0];
  v3 = atomic_load(&qword_1ED8334F0);
  if (v3 != -1)
  {
    v7[0] = sub_1C57684C8;
    v7[1] = &v5;
    v6 = v7;
    std::__call_once(&qword_1ED8334F0, &v6, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

uint64_t sub_1C5768620()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C5768558(v0);
}

void sub_1C576864C(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

uint64_t sub_1C5768670(llvm::ModulePass *a1, uint64_t **a2)
{
  if ((llvm::ModulePass::skipModule(a1, a2) & 1) != 0)
    return 0;
  else
    return sub_1C576834C((uint64_t)a2);
}

void llvm::initializeStripSymbolsPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED8334F8);
  if (v2 != -1)
  {
    v5[0] = sub_1C5768708;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED8334F8, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C5768708(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new();
  *(_QWORD *)v2 = "Strip all symbols from a module";
  *(_QWORD *)(v2 + 8) = 31;
  *(_QWORD *)(v2 + 16) = "strip";
  *(_QWORD *)(v2 + 24) = 5;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F3A22;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5769C6C;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t sub_1C5768798(uint64_t a1, char a2, char a3)
{
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD v9[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1EF8F3A22;
  *(_DWORD *)(a1 + 24) = 4;
  *(_QWORD *)a1 = &off_1E817CBA8;
  *(_BYTE *)(a1 + 28) = a2;
  *(_BYTE *)(a1 + 29) = a3;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v7 = qword_1ED830BC0[0];
  v5 = atomic_load(&qword_1ED8334F8);
  if (v5 != -1)
  {
    v9[0] = sub_1C5768708;
    v9[1] = &v7;
    v8 = v9;
    std::__call_once(&qword_1ED8334F8, &v8, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

void llvm::initializeStripNonDebugSymbolsPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED833500);
  if (v2 != -1)
  {
    v5[0] = sub_1C57688C8;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED833500, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C57688C8(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new();
  *(_QWORD *)v2 = "Strip all symbols, except dbg symbols, from a module";
  *(_QWORD *)(v2 + 8) = 52;
  *(_QWORD *)(v2 + 16) = "strip-nondebug";
  *(_QWORD *)(v2 + 24) = 14;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F3A23;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5769D2C;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t sub_1C5768958(uint64_t a1)
{
  unint64_t v3;
  unint64_t v5;
  _QWORD *v6;
  _QWORD v7[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1EF8F3A23;
  *(_DWORD *)(a1 + 24) = 4;
  *(_QWORD *)a1 = &off_1E817CC48;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v5 = qword_1ED830BC0[0];
  v3 = atomic_load(&qword_1ED833500);
  if (v3 != -1)
  {
    v7[0] = sub_1C57688C8;
    v7[1] = &v5;
    v6 = v7;
    std::__call_once(&qword_1ED833500, &v6, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

void llvm::initializeStripDebugDeclarePass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED833508);
  if (v2 != -1)
  {
    v5[0] = sub_1C5768A80;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED833508, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C5768A80(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new();
  *(_QWORD *)v2 = "Strip all llvm.dbg.declare intrinsics";
  *(_QWORD *)(v2 + 8) = 37;
  *(_QWORD *)(v2 + 16) = "strip-debug-declare";
  *(_QWORD *)(v2 + 24) = 19;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F3A24;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5769DC4;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t llvm::createStripDebugDeclarePass(llvm *this)
{
  uint64_t v1;

  v1 = operator new();
  return sub_1C5768B38(v1);
}

uint64_t sub_1C5768B38(uint64_t a1)
{
  unint64_t v3;
  unint64_t v5;
  _QWORD *v6;
  _QWORD v7[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1EF8F3A24;
  *(_DWORD *)(a1 + 24) = 4;
  *(_QWORD *)a1 = &off_1E817CCE8;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v5 = qword_1ED830BC0[0];
  v3 = atomic_load(&qword_1ED833508);
  if (v3 != -1)
  {
    v7[0] = sub_1C5768A80;
    v7[1] = &v5;
    v6 = v7;
    std::__call_once(&qword_1ED833508, &v6, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

void llvm::initializeStripDeadDebugInfoPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED833510);
  if (v2 != -1)
  {
    v5[0] = sub_1C5768C60;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED833510, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C5768C60(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new();
  *(_QWORD *)v2 = "Strip debug info for unused symbols";
  *(_QWORD *)(v2 + 8) = 35;
  *(_QWORD *)(v2 + 16) = "strip-dead-debug-info";
  *(_QWORD *)(v2 + 24) = 21;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F3A25;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5769E54;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t sub_1C5768CF0(uint64_t a1)
{
  unint64_t v3;
  unint64_t v5;
  _QWORD *v6;
  _QWORD v7[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1EF8F3A25;
  *(_DWORD *)(a1 + 24) = 4;
  *(_QWORD *)a1 = &off_1E817CD88;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v5 = qword_1ED830BC0[0];
  v3 = atomic_load(&qword_1ED833510);
  if (v3 != -1)
  {
    v7[0] = sub_1C5768C60;
    v7[1] = &v5;
    v6 = v7;
    std::__call_once(&qword_1ED833510, &v6, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

void sub_1C5768DB8(uint64_t a1, int a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ***v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ****v16;
  uint64_t ***v17;
  int v18;
  int v19;
  uint64_t ***v20;
  uint64_t v21;
  uint64_t ***v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ****v29;
  uint64_t ***v30;
  int v31;
  int v32;
  uint64_t ***v33;
  uint64_t **v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *i;
  uint64_t *v39;
  uint64_t v40;
  uint64_t ***v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ****v47;
  uint64_t ***v48;
  int v49;
  int v50;
  uint64_t ***v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  BOOL v57;
  char *v58;
  char *v59;
  uint64_t v60;
  int v61;
  _BYTE v62[64];
  _QWORD v63[2];
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  void *__p;
  _BYTE *v75;
  uint64_t v76;
  char v77;

  v58 = v62;
  v59 = v62;
  v60 = 8;
  v61 = 0;
  v6 = sub_1C4FB7E80(*(uint64_t **)(a1 + 112), "llvm.used", 9uLL);
  if (!v6 || *(_BYTE *)(v6 + 16) != 3 || (*(_DWORD *)(v6 + 32) & 0xFu) - 7 <= 1)
    v6 = 0;
  sub_1C5769EE8((unsigned __int8 *)v6, (llvm::SmallPtrSetImplBase *)&v58);
  v7 = sub_1C4FB7E80(*(uint64_t **)(a1 + 112), "llvm.compiler.used", 0x12uLL);
  if (!v7 || *(_BYTE *)(v7 + 16) != 3 || (*(_DWORD *)(v7 + 32) & 0xFu) - 7 <= 1)
    v7 = 0;
  sub_1C5769EE8((unsigned __int8 *)v7, (llvm::SmallPtrSetImplBase *)&v58);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 != a1 + 8)
  {
    while (1)
    {
      if (v8)
        v9 = (uint64_t ***)(v8 - 56);
      else
        v9 = 0;
      if (((_DWORD)v9[4] & 0xFu) - 7 > 1)
        goto LABEL_26;
      v10 = (char *)sub_1C477672C((uint64_t)&v58, (uint64_t)v9);
      v11 = v59 == v58 ? (uint64_t *)((char *)&v60 + 4) : &v60;
      if (v10 != &v59[8 * *(unsigned int *)v11])
        goto LABEL_26;
      if (a2 && (*((_BYTE *)v9 + 23) & 0x10) != 0)
        break;
LABEL_25:
      LOWORD(v66) = 257;
      llvm::Value::setName(v9, (uint64_t)v63);
LABEL_26:
      v8 = *(_QWORD *)(v8 + 8);
      if (v8 == a1 + 8)
        goto LABEL_27;
    }
    v12 = ***v9;
    v13 = *(_QWORD *)(v12 + 152);
    v14 = *(unsigned int *)(v12 + 168);
    if ((_DWORD)v14)
    {
      LODWORD(v15) = (v14 - 1) & ((v9 >> 4) ^ (v9 >> 9));
      v16 = (uint64_t ****)(v13 + 16 * v15);
      v17 = *v16;
      if (*v16 == v9)
      {
LABEL_23:
        v20 = v16[1];
        if ((unint64_t)*v20 >= 8 && v20[2] == (uint64_t **)0x6762642E6D766C6CLL)
          goto LABEL_26;
        goto LABEL_25;
      }
      v18 = 1;
      while (v17 != (uint64_t ***)-4096)
      {
        v19 = v15 + v18++;
        v15 = v19 & (v14 - 1);
        v17 = *(uint64_t ****)(v13 + 16 * v15);
        if (v17 == v9)
        {
          v16 = (uint64_t ****)(v13 + 16 * v15);
          goto LABEL_23;
        }
      }
    }
    v16 = (uint64_t ****)(v13 + 16 * v14);
    goto LABEL_23;
  }
LABEL_27:
  v21 = *(_QWORD *)(a1 + 32);
  if (v21 != a1 + 24)
  {
    while (1)
    {
      if (v21)
        v22 = (uint64_t ***)(v21 - 56);
      else
        v22 = 0;
      if (((_DWORD)v22[4] & 0xFu) - 7 > 1)
        goto LABEL_48;
      v23 = (char *)sub_1C477672C((uint64_t)&v58, (uint64_t)v22);
      v24 = v59 == v58 ? (uint64_t *)((char *)&v60 + 4) : &v60;
      if (v23 != &v59[8 * *(unsigned int *)v24])
        goto LABEL_48;
      if (!a2 || (*((_BYTE *)v22 + 23) & 0x10) == 0)
      {
LABEL_47:
        LOWORD(v66) = 257;
        llvm::Value::setName(v22, (uint64_t)v63);
        goto LABEL_48;
      }
      v25 = ***v22;
      v26 = *(_QWORD *)(v25 + 152);
      v27 = *(unsigned int *)(v25 + 168);
      if (!(_DWORD)v27)
        goto LABEL_44;
      LODWORD(v28) = (v27 - 1) & ((v22 >> 4) ^ (v22 >> 9));
      v29 = (uint64_t ****)(v26 + 16 * v28);
      v30 = *v29;
      if (*v29 != v22)
        break;
LABEL_45:
      v33 = v29[1];
      if ((unint64_t)*v33 < 8 || v33[2] != (uint64_t **)0x6762642E6D766C6CLL)
        goto LABEL_47;
LABEL_48:
      v34 = v22[13];
      if (v34)
      {
        v35 = *v34;
        v36 = *((unsigned int *)v34 + 2);
        if ((_DWORD)v36)
        {
          for (i = v35; !*i || *i == -8; ++i)
            ;
        }
        else
        {
          i = v35;
        }
        v39 = &v35[v36];
        while (1)
        {
          do
          {
LABEL_59:
            if (i == v39)
              goto LABEL_81;
            v40 = *i++;
            v41 = *(uint64_t ****)(v40 + 8);
            while (!*i || *i == -8)
              ++i;
          }
          while (*((unsigned __int8 *)v41 + 16) <= 3u && ((_DWORD)v41[4] & 0xFu) - 7 > 1);
          if (!a2 || (*((_BYTE *)v41 + 23) & 0x10) == 0)
          {
LABEL_80:
            LOWORD(v66) = 257;
            llvm::Value::setName(v41, (uint64_t)v63);
            goto LABEL_59;
          }
          v43 = ***v41;
          v44 = *(_QWORD *)(v43 + 152);
          v45 = *(unsigned int *)(v43 + 168);
          if ((_DWORD)v45)
          {
            LODWORD(v46) = (v45 - 1) & ((v41 >> 4) ^ (v41 >> 9));
            v47 = (uint64_t ****)(v44 + 16 * v46);
            v48 = *v47;
            if (*v47 == v41)
              goto LABEL_78;
            v49 = 1;
            while (v48 != (uint64_t ***)-4096)
            {
              v50 = v46 + v49++;
              v46 = v50 & (v45 - 1);
              v48 = *(uint64_t ****)(v44 + 16 * v46);
              if (v48 == v41)
              {
                v47 = (uint64_t ****)(v44 + 16 * v46);
                goto LABEL_78;
              }
            }
          }
          v47 = (uint64_t ****)(v44 + 16 * v45);
LABEL_78:
          v51 = v47[1];
          if ((unint64_t)*v51 < 8 || v51[2] != (uint64_t **)0x6762642E6D766C6CLL)
            goto LABEL_80;
        }
      }
LABEL_81:
      v21 = *(_QWORD *)(v21 + 8);
      if (v21 == a1 + 24)
        goto LABEL_82;
    }
    v31 = 1;
    while (v30 != (uint64_t ***)-4096)
    {
      v32 = v28 + v31++;
      v28 = v32 & (v27 - 1);
      v30 = *(uint64_t ****)(v26 + 16 * v28);
      if (v30 == v22)
      {
        v29 = (uint64_t ****)(v26 + 16 * v28);
        goto LABEL_45;
      }
    }
LABEL_44:
    v29 = (uint64_t ****)(v26 + 16 * v27);
    goto LABEL_45;
  }
LABEL_82:
  if ((a3 & 1) == 0)
  {
    v63[0] = 0;
    v63[1] = 0;
    v64 = 0;
    v65 = 0;
    v66 = 0;
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = 0;
    v71 = 0;
    v72 = 0;
    v73 = 0;
    v75 = 0;
    v76 = 0;
    __p = 0;
    v77 = 0;
    llvm::TypeFinder::run((llvm::TypeFinder *)v63, (const llvm::Module *)a1, 0);
    v52 = __p;
    if (((v75 - (_BYTE *)__p) & 0x7FFFFFFF8) != 0)
    {
      v53 = 0;
      v54 = ((unint64_t)(v75 - (_BYTE *)__p) >> 3);
      do
      {
        v55 = *((_QWORD *)__p + v53);
        if ((*(_BYTE *)(v55 + 9) & 4) == 0)
        {
          v56 = *(_QWORD **)(v55 + 24);
          if (v56)
          {
            if (*v56)
            {
              v57 = *v56 < 8uLL || a2 == 0;
              if (v57 || v56[2] != 0x6762642E6D766C6CLL)
                llvm::StructType::setName(v55, "", 0);
            }
          }
        }
        ++v53;
      }
      while (v54 != v53);
      v52 = __p;
    }
    if (v52)
    {
      v75 = v52;
      operator delete(v52);
    }
    MEMORY[0x1CAA32FB4](v71, 8);
    MEMORY[0x1CAA32FB4](v68, 8);
    MEMORY[0x1CAA32FB4](v65, 8);
    MEMORY[0x1CAA32FB4](v63[0], 8);
  }
  if (v59 != v58)
    free(v59);
}

void sub_1C5769314(uint64_t *a1)
{
  uint64_t v1;
  llvm::Function *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  void (*v14)(void);
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  _QWORD v31[3];
  _QWORD *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v1 = sub_1C4FB7E80(a1, "llvm.dbg.declare", 0x10uLL);
  if (!v1)
    return;
  v2 = (llvm::Function *)v1;
  if (*(_BYTE *)(v1 + 16))
    return;
  v3 = *(_QWORD *)(v1 + 8);
  if (!v3)
  {
    llvm::Function::eraseFromParent((llvm::Function *)v1);
    return;
  }
  v4 = 0;
  v5 = 0;
  v6 = 0;
  do
  {
    v7 = *(_QWORD *)(v3 + 24);
    v8 = (uint64_t *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
    v9 = *v8;
    v10 = v8[4];
    llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v7 + 40) + 40, (uint64_t ***)v7);
    v11 = *(_QWORD *)(v7 + 24);
    v12 = *(_QWORD **)(v7 + 32);
    *v12 = v11;
    *(_QWORD *)(v11 + 8) = v12;
    *(_QWORD *)(v7 + 24) = 0;
    *(_QWORD *)(v7 + 32) = 0;
    llvm::Value::deleteValue((llvm::Value *)v7);
    if (*(_QWORD *)(v9 + 8))
      goto LABEL_7;
    if (*(unsigned __int8 *)(v9 + 16) > 0x14u)
    {
      v32 = 0;
      llvm::RecursivelyDeleteTriviallyDeadInstructions(v9, 0, 0, v31);
      if (v32 == v31)
      {
        v14 = *(void (**)(void))(v31[0] + 32);
        goto LABEL_40;
      }
      if (v32)
      {
        v14 = *(void (**)(void))(*v32 + 40);
LABEL_40:
        v14();
      }
LABEL_7:
      v13 = v5;
      goto LABEL_8;
    }
    if (v5 < v6)
    {
      *v5++ = v9;
      goto LABEL_7;
    }
    v15 = v5 - v4;
    v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) >> 61)
      goto LABEL_66;
    if (((char *)v6 - (char *)v4) >> 2 > v16)
      v16 = ((char *)v6 - (char *)v4) >> 2;
    if ((unint64_t)((char *)v6 - (char *)v4) >= 0x7FFFFFFFFFFFFFF8)
      v17 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v17 = v16;
    if (v17)
    {
      if (v17 >> 61)
        goto LABEL_67;
      v18 = (char *)operator new(8 * v17);
    }
    else
    {
      v18 = 0;
    }
    v23 = (uint64_t *)&v18[8 * v15];
    *v23 = v9;
    v13 = v23 + 1;
    while (v5 != v4)
    {
      v24 = *--v5;
      *--v23 = v24;
    }
    v6 = (uint64_t *)&v18[8 * v17];
    if (v4)
      operator delete(v4);
    v4 = v23;
LABEL_8:
    if (*(_QWORD *)(v10 + 8) || *(unsigned __int8 *)(v10 + 16) > 0x14u)
      goto LABEL_12;
    if (v13 < v6)
    {
      *v13++ = v10;
LABEL_12:
      v5 = v13;
      goto LABEL_13;
    }
    v19 = v13 - v4;
    v20 = v19 + 1;
    if ((unint64_t)(v19 + 1) >> 61)
LABEL_66:
      abort();
    if (((char *)v6 - (char *)v4) >> 2 > v20)
      v20 = ((char *)v6 - (char *)v4) >> 2;
    if ((unint64_t)((char *)v6 - (char *)v4) >= 0x7FFFFFFFFFFFFFF8)
      v21 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v21 = v20;
    if (v21)
    {
      if (v21 >> 61)
LABEL_67:
        sub_1C4764EE4();
      v22 = (char *)operator new(8 * v21);
    }
    else
    {
      v22 = 0;
    }
    v25 = (uint64_t *)&v22[8 * v19];
    *v25 = v10;
    v5 = v25 + 1;
    if (v13 != v4)
    {
      do
      {
        v26 = *--v13;
        *--v25 = v26;
      }
      while (v13 != v4);
      v13 = v4;
    }
    v4 = v25;
    v6 = (uint64_t *)&v22[8 * v21];
    if (v13)
      operator delete(v13);
LABEL_13:
    v3 = *((_QWORD *)v2 + 1);
  }
  while (v3);
  llvm::Function::eraseFromParent(v2);
  while (v5 != v4)
  {
    v28 = *--v5;
    v27 = v28;
    v29 = *(unsigned __int8 *)(v28 + 16);
    if (v28)
      v30 = v29 == 3;
    else
      v30 = 0;
    if (!v30 || (*(_DWORD *)(v27 + 32) & 0xFu) - 7 <= 1)
      sub_1C5769F70(v27);
  }
  if (v4)
    operator delete(v4);
}

uint64_t sub_1C5769640(llvm::Module *a1)
{
  uint64_t *v2;
  char *v3;
  uint64_t i;
  unsigned int *v5;
  unint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t **v13;
  uint64_t **v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  char v18;
  llvm::MDNode **v19;
  llvm::MDNode **v20;
  llvm::MDNode *v21;
  uint64_t v22;
  unint64_t *v23;
  char v24;
  unint64_t v25;
  llvm::DIExpression *v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t **v31;
  uint64_t **v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  unint64_t v36;
  llvm::Metadata *Impl;
  uint64_t inserted;
  uint64_t *v39;
  unsigned __int8 *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 **v43;
  uint64_t *v44;
  uint64_t **v45;
  BOOL v46;
  llvm::Module *v48;
  char v49;
  unint64_t v50;
  uint64_t **v51;
  uint64_t *v52;
  uint64_t v53;
  _QWORD **v54;
  _QWORD *v55[2];
  _QWORD v56[2];
  int v57;
  void *v58;
  uint64_t v59;
  _BYTE v60[512];
  void *v61;
  uint64_t v62;
  _BYTE v63[64];
  void *v64;
  uint64_t v65;
  _BYTE v66[64];
  void *v67;
  uint64_t v68;
  _BYTE v69[64];
  void *v70;
  uint64_t v71;
  _BYTE v72[64];
  void *v73;
  uint64_t v74;
  _BYTE v75[64];
  _BYTE *v76;
  void *v77;
  uint64_t v78;
  int v79;
  _BYTE v80[256];
  unsigned __int8 *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;

  v84 = *MEMORY[0x1E0C80C00];
  v2 = *(uint64_t **)a1;
  v61 = v63;
  v62 = 0x800000000;
  v64 = v66;
  v65 = 0x800000000;
  v67 = v69;
  v68 = 0x800000000;
  v70 = v72;
  v71 = 0x800000000;
  v73 = v75;
  v74 = 0x800000000;
  v76 = v80;
  v77 = v80;
  v78 = 32;
  v79 = 0;
  llvm::DebugInfoFinder::processModule((llvm::DebugInfoFinder *)&v61, a1);
  v58 = v60;
  v59 = 0x4000000000;
  v56[0] = 0;
  v56[1] = 0;
  v57 = 0;
  v55[0] = 0;
  v55[1] = 0;
  v54 = v55;
  v3 = (char *)a1 + 8;
  v48 = a1;
  for (i = *((_QWORD *)a1 + 2); (char *)i != v3; i = *(_QWORD *)(i + 8))
  {
    if (i)
      v5 = (unsigned int *)(i - 56);
    else
      v5 = 0;
    v81 = (unsigned __int8 *)&v83;
    v82 = 0x100000000;
    llvm::GlobalVariable::getDebugInfo(v5, (uint64_t)&v81);
    v6 = (unint64_t *)v81;
    if ((_DWORD)v82)
    {
      v7 = 8 * v82;
      do
      {
        v8 = *v6++;
        sub_1C509F7DC((uint64_t *)&v54, v8, v8);
        v7 -= 8;
      }
      while (v7);
      v6 = (unint64_t *)v81;
    }
    if (v6 != (unint64_t *)&v83)
      free(v6);
  }
  v52 = 0;
  v53 = 0;
  v51 = &v52;
  if ((_DWORD)v65)
  {
    v9 = (char *)v64;
    v10 = (char *)v64 + 8 * v65;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)v9 - 8 * *(unsigned int *)(*(_QWORD *)v9 + 8) + 40);
      if (v11)
      {
        v12 = v52;
        v13 = &v52;
        v14 = &v52;
        if (v52)
        {
          while (1)
          {
            while (1)
            {
              v14 = (uint64_t **)v12;
              v15 = v12[4];
              if (v15 <= v11)
                break;
              v12 = *v14;
              v13 = v14;
              if (!*v14)
                goto LABEL_22;
            }
            if (v15 >= v11)
              break;
            v12 = v14[1];
            if (!v12)
            {
              v13 = v14 + 1;
              goto LABEL_22;
            }
          }
        }
        else
        {
LABEL_22:
          v16 = (uint64_t *)operator new(0x28uLL);
          v16[4] = v11;
          *v16 = 0;
          v16[1] = 0;
          v16[2] = (uint64_t)v14;
          *v13 = v16;
          if (*v51)
          {
            v51 = (uint64_t **)*v51;
            v17 = *v13;
          }
          else
          {
            v17 = v16;
          }
          sub_1C4768E74(v52, v17);
          ++v53;
        }
      }
      v9 += 8;
    }
    while (v9 != v10);
  }
  if (!(_DWORD)v62)
  {
    v18 = 0;
    goto LABEL_89;
  }
  v18 = 0;
  v49 = 0;
  v19 = (llvm::MDNode **)v61;
  v20 = (llvm::MDNode **)((char *)v61 + 8 * v62);
  do
  {
    v21 = *v19;
    v22 = ((_QWORD *)*v19 - *((unsigned int *)*v19 + 2))[6];
    if (v22)
      v23 = (unint64_t *)(v22 - 8 * *(unsigned int *)(v22 + 8));
    else
      v23 = 0;
    if (v23 == (unint64_t *)v22)
    {
      v24 = 0;
    }
    else
    {
      v24 = 0;
      do
      {
        v25 = *v23;
        v50 = v25;
        v26 = *(llvm::DIExpression **)(v25 - 8 * *(unsigned int *)(v25 + 8) + 8);
        if (v26 && (llvm::DIExpression::isConstant(v26) & 0xFF00000000) != 0)
          sub_1C509F7DC((uint64_t *)&v54, v25, v25);
        sub_1C61B7564((uint64_t)&v81, (uint64_t)v56, (uint64_t *)&v50);
        if (v83)
        {
          v27 = v55[0];
          if (!v55[0])
          {
LABEL_44:
            v24 = 1;
            goto LABEL_48;
          }
          while (1)
          {
            v28 = v27[4];
            if (v25 >= v28)
            {
              if (v28 >= v25)
              {
                v29 = v59;
                if (v59 >= (unint64_t)HIDWORD(v59))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v58, (uint64_t)v60, v59 + 1, 8);
                  v29 = v59;
                }
                *((_QWORD *)v58 + v29) = v25;
                LODWORD(v59) = v59 + 1;
                break;
              }
              ++v27;
            }
            v27 = (_QWORD *)*v27;
            if (!v27)
              goto LABEL_44;
          }
        }
LABEL_48:
        ++v23;
      }
      while (v23 != (unint64_t *)v22);
    }
    v30 = v52;
    if (!(_DWORD)v59)
    {
      if (v52)
      {
        do
        {
          v36 = v30[4];
          if ((unint64_t)v21 >= v36)
          {
            if (v36 >= (unint64_t)v21)
              goto LABEL_67;
            ++v30;
          }
          v30 = (uint64_t *)*v30;
        }
        while (v30);
      }
      v49 = 1;
LABEL_67:
      if ((v24 & 1) == 0)
        goto LABEL_69;
LABEL_68:
      v18 = 1;
      Impl = (llvm::Metadata *)llvm::MDTuple::getImpl(v2, v58, v59, 0, 1);
      llvm::MDNode::replaceOperandWith(v21, 6, Impl);
      goto LABEL_69;
    }
    v31 = &v52;
    v32 = &v52;
    if (v52)
    {
      while (1)
      {
        while (1)
        {
          v32 = (uint64_t **)v30;
          v33 = v30[4];
          if (v33 <= (unint64_t)v21)
            break;
          v30 = *v32;
          v31 = v32;
          if (!*v32)
            goto LABEL_59;
        }
        if (v33 >= (unint64_t)v21)
          goto LABEL_67;
        v30 = v32[1];
        if (!v30)
        {
          v31 = v32 + 1;
          break;
        }
      }
    }
LABEL_59:
    v34 = (uint64_t *)operator new(0x28uLL);
    v34[4] = (uint64_t)v21;
    *v34 = 0;
    v34[1] = 0;
    v34[2] = (uint64_t)v32;
    *v31 = v34;
    if (*v51)
    {
      v51 = (uint64_t **)*v51;
      v35 = *v31;
    }
    else
    {
      v35 = v34;
    }
    sub_1C4768E74(v52, v35);
    ++v53;
    if ((v24 & 1) != 0)
      goto LABEL_68;
LABEL_69:
    LODWORD(v59) = 0;
    ++v19;
  }
  while (v19 != v20);
  if ((v49 & 1) != 0)
  {
    inserted = llvm::Module::getOrInsertNamedMetadata((uint64_t)v48, "llvm.dbg.cu", 0xBuLL);
    llvm::NamedMDNode::clearOperands(inserted);
    v18 = 1;
    if (v53)
    {
      v39 = (uint64_t *)v51;
      if (v51 != &v52)
      {
        do
        {
          v40 = (unsigned __int8 *)v39[4];
          v81 = v40;
          v41 = *(_QWORD *)(inserted + 48);
          v42 = *(unsigned int *)(v41 + 8);
          if (v42 >= *(_DWORD *)(v41 + 12))
          {
            sub_1C5419FD8(*(_QWORD *)(inserted + 48), &v81);
          }
          else
          {
            v43 = (unsigned __int8 **)(*(_QWORD *)v41 + 8 * v42);
            *v43 = v40;
            if (v40)
            {
              llvm::MetadataTracking::track((uint64_t)v43, v40, 2);
              LODWORD(v42) = *(_DWORD *)(v41 + 8);
            }
            *(_DWORD *)(v41 + 8) = v42 + 1;
          }
          v44 = (uint64_t *)v39[1];
          if (v44)
          {
            do
            {
              v45 = (uint64_t **)v44;
              v44 = (uint64_t *)*v44;
            }
            while (v44);
          }
          else
          {
            do
            {
              v45 = (uint64_t **)v39[2];
              v46 = *v45 == v39;
              v39 = (uint64_t *)v45;
            }
            while (!v46);
          }
          v39 = (uint64_t *)v45;
        }
        while (v45 != &v52);
        v18 = 1;
      }
    }
  }
LABEL_89:
  sub_1C6143384(v52);
  sub_1C6143384(v55[0]);
  MEMORY[0x1CAA32FB4](v56[0], 8);
  if (v58 != v60)
    free(v58);
  if (v77 != v76)
    free(v77);
  if (v73 != v75)
    free(v73);
  if (v70 != v72)
    free(v70);
  if (v67 != v69)
    free(v67);
  if (v64 != v66)
    free(v64);
  if (v61 != v63)
    free(v61);
  return v18 & 1;
}

uint64_t sub_1C5769C6C()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C5768798(v0, 0, 1);
}

void sub_1C5769CA0(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void sub_1C5769CC4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 160) = 1;
}

uint64_t sub_1C5769CD0(llvm::ModulePass *a1, uint64_t **a2)
{
  llvm::Module *v4;
  uint64_t result;

  if ((llvm::ModulePass::skipModule(a1, a2) & 1) != 0)
    return 0;
  result = llvm::StripDebugInfo((llvm *)a2, v4);
  if (!*((_BYTE *)a1 + 28))
  {
    sub_1C5768DB8((uint64_t)a2, 0, *((_BYTE *)a1 + 29) == 0);
    return 1;
  }
  return result;
}

uint64_t sub_1C5769D2C()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C5768958(v0);
}

void sub_1C5769D58(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void sub_1C5769D7C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 160) = 1;
}

uint64_t sub_1C5769D88(llvm::ModulePass *a1, uint64_t **a2)
{
  int v3;

  v3 = llvm::ModulePass::skipModule(a1, a2);
  if ((v3 & 1) == 0)
    sub_1C5768DB8((uint64_t)a2, 1, 1);
  return v3 ^ 1u;
}

uint64_t sub_1C5769DC4()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C5768B38(v0);
}

void sub_1C5769DF0(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void sub_1C5769E14(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 160) = 1;
}

uint64_t sub_1C5769E20(llvm::ModulePass *a1, uint64_t **a2)
{
  int v3;

  v3 = llvm::ModulePass::skipModule(a1, a2);
  if ((v3 & 1) == 0)
    sub_1C5769314(a2[14]);
  return v3 ^ 1u;
}

uint64_t sub_1C5769E54()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C5768CF0(v0);
}

void sub_1C5769E80(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void sub_1C5769EA4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 160) = 1;
}

uint64_t sub_1C5769EB0(llvm::ModulePass *a1, llvm::Module *a2)
{
  if ((llvm::ModulePass::skipModule(a1, (uint64_t **)a2) & 1) != 0)
    return 0;
  else
    return sub_1C5769640(a2);
}

unsigned __int8 *sub_1C5769EE8(unsigned __int8 *result, llvm::SmallPtrSetImplBase *this)
{
  _QWORD *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  if (result)
  {
    v3 = result;
    result = (unsigned __int8 *)sub_1C4774094(this, (uint64_t)result);
    v4 = *(v3 - 4);
    v5 = *(_DWORD *)(v4 + 20);
    v6 = v5 & 0x7FFFFFF;
    if ((v5 & 0x7FFFFFF) != 0)
    {
      v7 = v4;
      do
      {
        result = (unsigned __int8 *)llvm::Value::stripPointerCasts(*(llvm::Value **)(v7
                                                                                   - 32
                                                                                   * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF)));
        if (result)
          v8 = result[16] > 3u;
        else
          v8 = 1;
        if (!v8)
          result = (unsigned __int8 *)sub_1C4774094(this, (uint64_t)result);
        v7 += 32;
        --v6;
      }
      while (v6);
    }
  }
  return result;
}

void sub_1C5769F70(uint64_t a1)
{
  _BYTE *v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  int v20;
  _BYTE v21[32];

  v2 = v21;
  v17 = v21;
  v18 = v21;
  v19 = 4;
  v20 = 0;
  v3 = *(_DWORD *)(a1 + 20);
  if ((v3 & 0x40000000) == 0)
  {
    v4 = v3 & 0x7FFFFFF;
    v5 = (uint64_t *)(a1 - 32 * v4);
    if (v4)
      goto LABEL_3;
LABEL_11:
    v7 = v21;
    goto LABEL_12;
  }
  v5 = *(uint64_t **)(a1 - 8);
  v4 = v3 & 0x7FFFFFF;
  if (!v4)
    goto LABEL_11;
LABEL_3:
  v6 = &v5[4 * v4];
  v7 = v21;
  do
  {
    v8 = *(_QWORD *)(*v5 + 8);
    if (v8)
    {
      while (*(_QWORD *)(v8 + 24) == a1)
      {
        v8 = *(_QWORD *)(v8 + 8);
        if (!v8)
          goto LABEL_7;
      }
    }
    else
    {
LABEL_7:
      sub_1C4774094((llvm::SmallPtrSetImplBase *)&v17, *v5);
      v2 = v17;
      v7 = v18;
    }
    v5 += 4;
  }
  while (v5 != v6);
LABEL_12:
  if (a1 && *(_BYTE *)(a1 + 16) == 3)
  {
    if ((*(_DWORD *)(a1 + 32) & 0xFu) - 7 > 1)
      goto LABEL_34;
    llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)a1);
  }
  else if (*(_BYTE *)(a1 + 16) && (*(_DWORD *)(*(_QWORD *)a1 + 8) & 0xFC | 2) == 0x12)
  {
    llvm::Constant::destroyConstant((int32x2_t ****)a1);
  }
  v2 = v17;
  v7 = v18;
  v9 = &v19;
  if (v18 == v17)
    v9 = (uint64_t *)((char *)&v19 + 4);
  v10 = *(unsigned int *)v9;
  v11 = (unint64_t *)v18;
  if ((_DWORD)v10)
  {
    v12 = 0;
    while (*(_QWORD *)&v18[v12] >= 0xFFFFFFFFFFFFFFFELL)
    {
      v12 += 8;
      if (8 * v10 == v12)
        goto LABEL_34;
    }
    v11 = (unint64_t *)&v18[v12];
  }
  v13 = (unint64_t *)&v18[8 * v10];
  if (v11 != v13)
  {
    v14 = *v11;
LABEL_29:
    sub_1C5769F70(v14);
    v15 = v11 + 1;
    while (v15 != v13)
    {
      v16 = *v15++;
      v14 = v16;
      if (v16 <= 0xFFFFFFFFFFFFFFFDLL)
      {
        v11 = v15 - 1;
        goto LABEL_29;
      }
    }
    v2 = v17;
    v7 = v18;
  }
LABEL_34:
  if (v7 != v2)
    free(v7);
}

uint64_t llvm::SyntheticCountsPropagation::run@<X0>(llvm::Module *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t i;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t ***v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26[12];
  _QWORD v27[2];
  _QWORD *v28;
  uint64_t v29;
  unsigned int v30;

  v5 = *(_QWORD *)(llvm::AnalysisManager<llvm::Module>::getResultImpl(a2, &llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>,llvm::Module>::Key, (uint64_t)a1)+ 8);
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v6 = (_QWORD *)*((_QWORD *)a1 + 4);
  if (v6 != (_QWORD *)((char *)a1 + 24))
  {
    v7 = dword_1ED833598;
    while (1)
    {
      v8 = (uint64_t)(v6 - 7);
      if (!v6)
        break;
      if (*((_BYTE *)v6 - 40) != 3)
        goto LABEL_8;
      if ((*((_DWORD *)v6 - 9) & 0x7FFFFFF) != 0)
        goto LABEL_11;
LABEL_26:
      v6 = (_QWORD *)v6[1];
      if (v6 == (_QWORD *)((char *)a1 + 24))
        goto LABEL_27;
    }
    v8 = 0;
LABEL_8:
    if (!*(_BYTE *)(v8 + 16) && *(_QWORD *)(v8 + 72) == v8 + 72 && (*(_BYTE *)(v8 + 34) & 0x80) == 0)
      goto LABEL_26;
LABEL_11:
    v9 = *(_BYTE **)(v8 + 112);
    if (v9 && ((v9[12] & 4) != 0 || (v9[13] & 0x20) != 0))
    {
      v12 = dword_1ED810088;
    }
    else
    {
      if ((*(_DWORD *)(v8 + 32) & 0xFu) - 7 > 1)
      {
LABEL_21:
        v12 = v7;
        if (v9 && ((v9[12] & 0x20) != 0 || (v9[15] & 8) != 0))
          v12 = dword_1ED810148;
        goto LABEL_25;
      }
      for (i = *(_QWORD *)(v8 + 8); i; i = *(_QWORD *)(i + 8))
      {
        v11 = *(unsigned __int8 *)(*(_QWORD *)(i + 24) + 16);
        if (v11 != 84 && v11 != 33)
          goto LABEL_21;
      }
      v12 = 0;
    }
LABEL_25:
    v26[0] = v8;
    v13 = sub_1C617A140((uint64_t)&v28, v26);
    v13[1] = v12;
    *((_WORD *)v13 + 8) = 0;
    v7 = dword_1ED833598;
    goto LABEL_26;
  }
LABEL_27:
  v27[0] = v5;
  v27[1] = &v28;
  llvm::CallGraph::CallGraph((llvm::CallGraph *)v26, a1);
  *(_QWORD *)&v23 = v26;
  v25 = &v28;
  llvm::SyntheticCountsUtils<llvm::CallGraph const*>::propagate((uint64_t)&v23, (void (*)(unint64_t *__return_ptr, uint64_t, _QWORD, _QWORD))sub_1C576A3D8, (uint64_t)v27, (void (*)(uint64_t, _QWORD, unint64_t, uint64_t))sub_1C576A4B4, (uint64_t)&v25);
  v14 = &v28[3 * v30];
  if ((_DWORD)v29)
  {
    if (v30)
    {
      v15 = 24 * v30;
      v16 = v28;
      while ((*v16 | 0x1000) == 0xFFFFFFFFFFFFF000)
      {
        v16 += 3;
        v15 -= 24;
        if (!v15)
          goto LABEL_32;
      }
    }
    else
    {
      v16 = v28;
    }
  }
  else
  {
LABEL_32:
    v16 = &v28[3 * v30];
  }
  v17 = &v28[3 * v30];
  while (v16 != v17)
  {
    v18 = v16[2];
    v23 = *(_OWORD *)v16;
    v24 = v18;
    v19 = (uint64_t ***)v23;
    v20 = sub_1C4DB9F50((uint64_t)&v23 + 8);
    llvm::Function::setEntryCount(v19, v20, 1, 0);
    v21 = v16 + 3;
    v16 = v14;
    if (v21 != v14)
    {
      v16 = v21;
      while ((*v16 | 0x1000) == 0xFFFFFFFFFFFFF000)
      {
        v16 += 3;
        if (v16 == v14)
        {
          v16 = v14;
          break;
        }
      }
    }
  }
  *(_QWORD *)a3 = a3 + 32;
  *(_QWORD *)(a3 + 8) = a3 + 32;
  *(_QWORD *)(a3 + 16) = 2;
  *(_DWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 48) = a3 + 80;
  *(_QWORD *)(a3 + 56) = a3 + 80;
  *(_QWORD *)(a3 + 64) = 2;
  *(_DWORD *)(a3 + 72) = 0;
  sub_1C4774094((llvm::SmallPtrSetImplBase *)a3, (uint64_t)&llvm::PreservedAnalyses::AllAnalysesKey);
  llvm::CallGraph::~CallGraph((llvm::CallGraph *)v26);
  return MEMORY[0x1CAA32FB4](v28, 8);
}

double sub_1C576A3D8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t ResultImpl;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t BlockFreq;
  __int16 v13;
  _QWORD *v14;
  double result;
  __int128 v16;
  uint64_t v17;

  if (*(_BYTE *)(a2 + 24))
  {
    v5 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(*(_QWORD *)(v5 + 40) + 56);
    ResultImpl = llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::BlockFrequencyAnalysis::Key, v17);
    v9 = *(_QWORD *)(ResultImpl + 8);
    v7 = (uint64_t *)(ResultImpl + 8);
    v8 = v9;
    v10 = *(_QWORD *)(v5 + 40);
    if (v9)
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 8) + 16);
    else
      v11 = 0;
    BlockFreq = llvm::BlockFrequencyInfo::getBlockFreq(v7, v10);
    *(_QWORD *)&v16 = BlockFreq;
    WORD4(v16) = 0;
    if (BlockFreq)
    {
      if (v11)
      {
        *(_QWORD *)&v16 = llvm::ScaledNumbers::divide64(BlockFreq, v11);
      }
      else
      {
        *(_QWORD *)&v16 = -1;
        v13 = 0x3FFF;
      }
      WORD4(v16) = v13;
    }
    v14 = sub_1C617A140(a1[1], &v17);
    sub_1C4DB6028((uint64_t)&v16, (uint64_t)(v14 + 1));
    result = *(double *)&v16;
    *(_OWORD *)a3 = v16;
    *(_BYTE *)(a3 + 16) = 1;
  }
  else
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t *sub_1C576A4B4(uint64_t *result, uint64_t a2, unint64_t a3, __int16 a4)
{
  uint64_t v4;
  _QWORD *v7;
  __int16 v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v9 = v4;
  if (v4)
  {
    if (*(_BYTE *)(v4 + 16))
    {
      if (*(_BYTE *)(v4 + 16) != 3 || (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) != 0)
      {
LABEL_9:
        v7 = sub_1C617A140(*result, &v9);
        result = (uint64_t *)sub_1C617C634(v7[1], *((_WORD *)v7 + 8), a3, a4);
        v7[1] = result;
        *((_WORD *)v7 + 8) = v8;
        if (v8 >= 0x4000)
        {
          v7[1] = -1;
          *((_WORD *)v7 + 8) = 0x3FFF;
        }
      }
    }
    else if (*(_QWORD *)(v4 + 72) != v4 + 72 || (*(_BYTE *)(v4 + 34) & 0x80) != 0)
    {
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1C576A574()
{
  __n128 v1;
  int v2;
  int v3;
  int *v4;
  int v5;

  v5 = 1;
  v2 = 1;
  v3 = 10;
  v4 = &v3;
  v1.n128_u64[0] = (unint64_t)"Initial value of synthetic entry count";
  v1.n128_u64[1] = 38;
  sub_1C6199A9C((llvm::cl::Option *)&llvm::InitialSyntheticCount, "initial-synthetic-count", &v5, &v4, &v2, &v1);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &llvm::InitialSyntheticCount, &dword_1C475E000);
  v5 = 1;
  v2 = 1;
  v3 = 15;
  v4 = &v3;
  v1.n128_u64[0] = (unint64_t)"Initial synthetic entry count for inline functions.";
  v1.n128_u64[1] = 51;
  sub_1C6199A9C((llvm::cl::Option *)&unk_1ED810008, "inline-synthetic-count", &v5, &v4, &v2, &v1);
  __cxa_atexit((void (*)(void *))sub_1C4A0083C, &unk_1ED810008, &dword_1C475E000);
  v5 = 1;
  v2 = 1;
  v3 = 5;
  v4 = &v3;
  v1.n128_u64[0] = (unint64_t)"Initial synthetic entry count for cold functions.";
  v1.n128_u64[1] = 49;
  sub_1C6199A9C((llvm::cl::Option *)&unk_1ED8100C8, "cold-synthetic-count", &v5, &v4, &v2, &v1);
  return __cxa_atexit((void (*)(void *))sub_1C4A0083C, &unk_1ED8100C8, &dword_1C475E000);
}

void llvm::initializeWriteThinLTOBitcodePass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED810190);
  if (v2 != -1)
  {
    v5[0] = sub_1C576A720;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED810190, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C576A720(llvm *a1)
{
  llvm::PassRegistry *v2;
  uint64_t v3;

  llvm::initializeAssumptionCacheTrackerPass((uint64_t)a1);
  llvm::initializeModuleSummaryIndexWrapperPassPass(a1, v2);
  llvm::initializeTargetLibraryInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeTargetTransformInfoWrapperPassPass((uint64_t)a1);
  v3 = operator new();
  *(_QWORD *)v3 = "Write ThinLTO Bitcode";
  *(_QWORD *)(v3 + 8) = 21;
  *(_QWORD *)(v3 + 16) = "write-thinlto-bitcode";
  *(_QWORD *)(v3 + 24) = 21;
  *(_QWORD *)(v3 + 32) = &unk_1ED810188;
  *(_WORD *)(v3 + 40) = 256;
  *(_BYTE *)(v3 + 42) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = sub_1C576CC30;
  llvm::PassRegistry::registerPass((uint64_t)a1, (_QWORD *)v3, 1);
  return v3;
}

void sub_1C576A7CC(llvm::raw_ostream *a1, llvm::raw_ostream *a2, uint64_t a3, uint64_t a4, const llvm::Module *a5, _QWORD *a6)
{
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  int v24;
  BOOL v25;
  unsigned int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  llvm::raw_ostream *v34;
  const llvm::Module *v35;
  llvm::raw_ostream *v36;
  uint64_t ModuleFlag;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void (**v43)(void);
  uint64_t v44;
  uint64_t *v45;
  void (**v46)(uint64_t *);
  llvm::raw_ostream *v47;
  llvm::raw_ostream *v48;
  void (**v49)(void);
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  llvm::Module *v55;
  llvm::GlobalValue *v56;
  char *v57;
  uint64_t i;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  llvm::Function *v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  unsigned int v70;
  llvm::Function **v71;
  llvm::Function *v72;
  llvm::Function **v73;
  int v74;
  BOOL v75;
  unsigned int v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  unsigned int v84;
  llvm::Function **v85;
  llvm::Function *v86;
  llvm::Function **v87;
  int v88;
  BOOL v89;
  unsigned int v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 *v95;
  uint64_t ***v96;
  unsigned int v97;
  BOOL v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  unsigned int v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  int v107;
  BOOL v108;
  unsigned int v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  llvm::Function **v113;
  llvm::Function *v114;
  llvm::Function **v115;
  llvm::Function *v116;
  _QWORD *v117;
  uint64_t v118;
  void **p_p;
  void (**v120)(void **);
  uint64_t ***v121;
  unsigned int v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  int v126;
  unsigned int v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  int v131;
  BOOL v132;
  unsigned int v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  int v140;
  unsigned int v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  int v145;
  BOOL v146;
  unsigned int v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  unsigned __int8 *v152;
  uint64_t ***v153;
  unsigned int v154;
  BOOL v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  int v159;
  unsigned int v160;
  _QWORD *v161;
  uint64_t v162;
  _QWORD *v163;
  int v164;
  BOOL v165;
  unsigned int v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  _QWORD *v175;
  uint64_t v176;
  unsigned __int8 **v177;
  unsigned __int8 **v178;
  _QWORD *v179;
  _QWORD *v180;
  _QWORD *v181;
  _QWORD *v182;
  _QWORD *v183;
  unsigned __int8 *v184;
  _BYTE *v185;
  unsigned int v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  int v190;
  unsigned int v191;
  _QWORD *v192;
  _BYTE *v193;
  _QWORD *v194;
  int v195;
  BOOL v196;
  unsigned int v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  int v204;
  unsigned int v205;
  _QWORD *v206;
  _BYTE *v207;
  _QWORD *v208;
  int v209;
  BOOL v210;
  unsigned int v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  int v215;
  uint64_t AliaseeObject;
  unsigned __int8 **v217;
  uint64_t v218;
  unsigned __int8 *v219;
  _BYTE *v220;
  unsigned int v221;
  BOOL v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  int v226;
  unsigned int v227;
  _QWORD *v228;
  void *v229;
  _QWORD *v230;
  int v231;
  BOOL v232;
  unsigned int v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  char *v240;
  _QWORD *v241;
  void *v242;
  _QWORD *v243;
  void *v244;
  unsigned __int8 **v245;
  unsigned __int8 *v246;
  _QWORD *v247;
  void *v248;
  llvm **v249;
  llvm::GlobalValue *v250;
  void *v251;
  uint64_t v252;
  void *v253;
  uint64_t v254;
  uint64_t *v255;
  unsigned int **v256;
  unsigned int **v257;
  unsigned int *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unsigned int **v263;
  unsigned int *v264;
  int v265;
  int v266;
  unsigned int *v267;
  unsigned __int8 *v268;
  size_t v269;
  size_t v270;
  llvm::Function *v271;
  _QWORD *v272;
  uint64_t v273;
  const llvm::APInt *v274;
  uint64_t v275;
  llvm::ConstantInt *v276;
  unsigned int v277;
  unint64_t v278;
  llvm::Value *v279;
  llvm::ValueHandleBase *v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t Impl;
  uint64_t v284;
  uint64_t v285;
  uint64_t inserted;
  _QWORD *v287;
  int v288;
  uint64_t ***v289;
  uint64_t ***v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t ****v295;
  uint64_t ***v296;
  int v297;
  int v298;
  uint64_t ***v299;
  unsigned __int8 *v300;
  size_t v301;
  size_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t ****v307;
  uint64_t ***v308;
  int v309;
  int v310;
  uint64_t ***v311;
  unsigned __int8 *v312;
  size_t v313;
  size_t v314;
  const llvm::APInt *v315;
  unint64_t v316;
  llvm::ConstantInt *v317;
  unsigned int v318;
  unint64_t v319;
  llvm::Value *v320;
  llvm::ValueHandleBase *v321;
  const llvm::APInt *v322;
  uint64_t v323;
  uint64_t v324;
  llvm::ConstantInt *v325;
  unsigned int v326;
  unint64_t v327;
  llvm::Value *v328;
  llvm::ValueHandleBase *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  llvm *v334;
  unint64_t v335;
  _QWORD *v336;
  llvm::PointerType *v337;
  _QWORD *v338;
  uint64_t *v339;
  uint64_t **v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t **v345;
  uint64_t *v346;
  int v347;
  int v348;
  uint64_t *v349;
  int v350;
  int v351;
  llvm::Type *v353;
  uint64_t *v354;
  llvm::UndefValue *v355;
  uint64_t *v356;
  uint64_t v357;
  uint64_t v358;
  _QWORD *v359;
  _QWORD *v360;
  _QWORD *v361;
  _QWORD *v362;
  void (**v363)(_QWORD *);
  _QWORD *v364;
  void (**v365)(_QWORD *);
  _QWORD *v366;
  void (**v367)(_QWORD *);
  _QWORD *v368;
  void (**v369)(_QWORD *);
  llvm::Module *v370;
  uint64_t v371;
  llvm *v372;
  _QWORD *v373;
  unint64_t v374;
  uint64_t v375;
  uint64_t v376;
  unint64_t v377;
  unint64_t *v378;
  uint64_t v379;
  int32x2_t *v380;
  unint64_t v381;
  uint64_t v382;
  unsigned int v383;
  uint64_t v384;
  uint64_t *v385;
  uint64_t v386;
  int v387;
  int v388;
  unint64_t v390;
  unint64_t *v391;
  uint64_t v392;
  int32x2_t *v393;
  unint64_t v394;
  uint64_t v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t *v398;
  uint64_t v399;
  int v400;
  int v401;
  uint64_t v402;
  unsigned __int8 **v403;
  uint64_t v404;
  unsigned __int8 *v405;
  uint64_t v406;
  uint64_t v407;
  unsigned __int8 **v408;
  uint64_t v409;
  unsigned __int8 **v410;
  uint64_t v411;
  unsigned __int8 *v412;
  uint64_t v413;
  uint64_t v414;
  unsigned __int8 **v415;
  uint64_t v416;
  unsigned __int8 **v417;
  uint64_t v418;
  unsigned __int8 *v419;
  uint64_t v420;
  uint64_t v421;
  unsigned __int8 **v422;
  unsigned __int8 **v423;
  _QWORD v427[2];
  int v428;
  void *v429;
  size_t v430;
  uint64_t v431;
  const llvm::Module *v432;
  uint64_t v433;
  char v434;
  char v435;
  char v436;
  char v437;
  int v438;
  uint64_t v439;
  uint64_t v440;
  int v441;
  uint64_t v442[2];
  int v443;
  void *v444;
  unsigned int **v445;
  uint64_t v446;
  llvm *v447;
  _QWORD v448[2];
  unsigned int v449;
  uint64_t v450[3];
  char v451;
  uint64_t v452[2];
  int v453;
  _QWORD v454[2];
  int v455;
  char v456;
  void *v457;
  uint64_t v458;
  char v459;
  _QWORD v460[2];
  _QWORD v461[3];
  _QWORD *v462;
  _QWORD v463[3];
  _QWORD *v464;
  uint64_t v465[3];
  uint64_t *v466;
  void *__p;
  uint64_t v468;
  char v469;
  void **v470;
  _QWORD v471[3];
  _QWORD *v472;
  _QWORD v473[3];
  _QWORD *v474;
  void *v475;
  uint64_t v476;
  int v477;
  char v478;
  char v479;
  char v480;
  int v481;
  uint64_t v482;
  uint64_t v483;
  int v484;
  _QWORD v485[3];
  _QWORD *v486;
  _QWORD v487[3];
  _QWORD *v488;
  void *v489;
  uint64_t v490;
  _BYTE v491[64];
  void *v492;
  uint64_t v493;
  _BYTE v494[64];
  void *v495;
  uint64_t v496;
  _BYTE v497[64];
  __int128 v498;
  __int128 v499;
  _QWORD *v500;
  _QWORD *v501;
  _QWORD *v502;
  _QWORD *v503;
  uint64_t v504;

  v504 = *MEMORY[0x1E0C80C00];
  v9 = (_QWORD *)((char *)a5 + 24);
  v10 = (_QWORD *)*((_QWORD *)a5 + 4);
  v11 = (_QWORD *)((char *)a5 + 8);
  v12 = (_QWORD *)*((_QWORD *)a5 + 2);
  *(_QWORD *)&v498 = v10;
  *((_QWORD *)&v498 + 1) = v12;
  *(_QWORD *)&v499 = (char *)a5 + 24;
  *((_QWORD *)&v499 + 1) = (char *)a5 + 8;
  while (1)
  {
    if (v10 == v9 && v12 == v11)
    {
      v13 = (_QWORD *)v499 == v9 && *((_QWORD *)&v499 + 1) == (_QWORD)v11;
      if (v13)
      {
        v33 = 0;
        v34 = a2;
        v35 = a5;
        v36 = a1;
        goto LABEL_38;
      }
    }
    v14 = 0;
    do
    {
      v15 = (_BYTE *)(*(uint64_t (**)(__int128 *))((char *)&off_1E817CEB8 + v14))(&v498);
      v14 += 16;
    }
    while (!v15);
    if ((v15[23] & 0x20) != 0)
      break;
LABEL_27:
    v30 = 0;
    do
    {
      if (((*(uint64_t (**)(__int128 *))((char *)&off_1E817CED8 + v30))(&v498) & 1) != 0)
        break;
      v13 = v30 == 16;
      v30 += 16;
    }
    while (!v13);
    v12 = (_QWORD *)*((_QWORD *)&v498 + 1);
    v10 = (_QWORD *)v498;
  }
  v16 = ***(_QWORD ***)v15;
  v475 = v15;
  v17 = *(_DWORD *)(v16 + 2496);
  if (!v17)
  {
    v31 = 0;
LABEL_35:
    v21 = sub_1C541AB24(v16 + 2480, (uint64_t)&v475, (uint64_t *)&v475, v31);
    v32 = v475;
    v21[4] = 0;
    v21[3] = 0;
    *v21 = v32;
    v21[1] = v21 + 3;
    v21[2] = 0x100000000;
    goto LABEL_21;
  }
  v18 = *(_QWORD *)(v16 + 2480);
  v19 = v17 - 1;
  v20 = (v17 - 1) & ((v15 >> 4) ^ (v15 >> 9));
  v21 = (_QWORD *)(v18 + 40 * v20);
  v22 = (void *)*v21;
  if ((_BYTE *)*v21 != v15)
  {
    v23 = 0;
    v24 = 1;
    while (v22 != (void *)-4096)
    {
      if (v23)
        v25 = 0;
      else
        v25 = v22 == (void *)-8192;
      if (v25)
        v23 = v21;
      v26 = v20 + v24++;
      v20 = v26 & v19;
      v21 = (_QWORD *)(v18 + 40 * (v26 & v19));
      v22 = (void *)*v21;
      if ((_BYTE *)*v21 == v15)
        goto LABEL_21;
    }
    if (v23)
      v31 = v23;
    else
      v31 = v21;
    goto LABEL_35;
  }
LABEL_21:
  v27 = *((unsigned int *)v21 + 4);
  if (!(_DWORD)v27)
    goto LABEL_27;
  v28 = (_QWORD *)(v21[1] + 8);
  v29 = 16 * v27;
  while (*((_DWORD *)v28 - 2) != 19)
  {
    v28 += 2;
    v29 -= 16;
    if (!v29)
      goto LABEL_27;
  }
  if (!*v28)
    goto LABEL_27;
  v35 = a5;
  ModuleFlag = llvm::Module::getModuleFlag((uint64_t)a5, "EnableSplitLTOUnit", 0x12uLL);
  if (ModuleFlag)
  {
    v38 = *(_QWORD *)(ModuleFlag + 128);
    if (v38)
    {
      v39 = (_QWORD *)(v38 + 24);
      if (*(_DWORD *)(v38 + 32) >= 0x41u)
        v39 = (_QWORD *)*v39;
      if (*v39)
      {
        v460[0] = a3;
        v460[1] = a4;
        llvm::getUniqueModuleId(a5, (uint64_t)&v457);
        if (v459 >= 0)
          v44 = v459 & 0x7F;
        else
          v44 = v458;
        if (!v44)
        {
          v475 = a5;
          v476 = 0;
          LOBYTE(v477) = 0;
          v478 = 0;
          v479 = 0;
          v480 = 0;
          v481 = 0;
          v483 = 0;
          v482 = 0;
          v484 = 0;
          llvm::ProfileSummaryInfo::refresh((unsigned __int8 *)&v475);
          llvm::Module::addModuleFlag((uint64_t **)a5, (llvm::Type *)1, "ThinLTO", 7uLL, 0);
          v470 = 0;
          v465[0] = (uint64_t)&off_1E817CF08;
          v466 = v465;
          llvm::buildModuleSummaryIndex((uint64_t)a5, (uint64_t)&__p, (uint64_t)&v475, v465, (uint64_t)&v498);
          v45 = v466;
          if (v466 == v465)
          {
            v46 = (void (**)(uint64_t *))(v465[0] + 32);
            v45 = v465;
            v48 = a1;
            v47 = a2;
          }
          else
          {
            v48 = a1;
            v47 = a2;
            if (!v466)
              goto LABEL_187;
            v46 = (void (**)(uint64_t *))(*v466 + 40);
          }
          (*v46)(v45);
LABEL_187:
          p_p = v470;
          if (v470 == &__p)
          {
            v120 = (void (**)(void **))((char *)__p + 32);
            p_p = &__p;
          }
          else
          {
            if (!v470)
            {
LABEL_437:
              llvm::WriteBitcodeToFile(a5, v48, 0, &v498, 0, 0);
              if (v47)
                llvm::WriteBitcodeToFile(a5, v47, 0, &v498, 0, 0);
              sub_1C61A8910((uint64_t)&v498);
              MEMORY[0x1CAA32FB4](v482, 8);
              v285 = v476;
              v476 = 0;
              if (v285)
                sub_1C4E5DDC4((uint64_t)&v476, v285);
LABEL_625:
              if (v459 < 0)
                operator delete(v457);
              return;
            }
            v120 = (void (**)(void **))((char *)*v470 + 40);
          }
          (*v120)(p_p);
          goto LABEL_437;
        }
        if (v459 >= 0)
          v51 = &v457;
        else
          v51 = v457;
        sub_1C576CEA0((uint64_t)a5, (uint64_t)v51, v44);
        v454[0] = 0;
        v454[1] = 0;
        v455 = 0;
        v452[0] = 0;
        v452[1] = 0;
        v453 = 0;
        v52 = (_QWORD *)*((_QWORD *)a5 + 2);
        if (v52 == v11)
        {
LABEL_82:
          v449 = 128;
          v448[0] = operator new(0x2000uLL, (std::align_val_t)8uLL);
          v448[1] = 0;
          v53 = 0x2000;
          v54 = (_QWORD *)(v448[0] + 16);
          do
          {
            *v54 = 0;
            v54[1] = -4096;
            *(v54 - 2) = &unk_1E814DA10;
            *(v54 - 1) = 2;
            v54[2] = 0;
            v54 += 8;
            v53 -= 64;
          }
          while (v53);
          LOBYTE(v450[0]) = 0;
          v451 = 0;
          *(_QWORD *)&v498 = v452;
          *((_QWORD *)&v498 + 1) = v454;
          *(_QWORD *)&v499 = &v456;
          llvm::CloneModule((uint64_t *)a5, (uint64_t)v448, sub_1C576DDD0, (uint64_t)&v498, (uint64_t *)&v447);
          llvm::StripDebugInfo(v447, v55);
          LLVMSetModuleInlineAsm2_0((uint64_t)v447, "", 0);
          sub_1C576D380((uint64_t)a5, (uint64_t **)v447, 0);
          sub_1C576D380((uint64_t)a5, (uint64_t **)v447, 1);
          v57 = (char *)v447 + 24;
          for (i = *((_QWORD *)v447 + 4); (char *)i != v57; i = *(_QWORD *)(i + 8))
          {
            if (i)
              v59 = i - 56;
            else
              v59 = 0;
            if (i && *(_BYTE *)(v59 + 16) == 3)
            {
              if ((*(_DWORD *)(v59 + 20) & 0x7FFFFFF) == 0)
                continue;
            }
            else if (!*(_BYTE *)(v59 + 16) && *(_QWORD *)(v59 + 72) == v59 + 72 && (*(_BYTE *)(v59 + 34) & 0x80) == 0)
            {
              continue;
            }
            v60 = *(_DWORD *)(v59 + 32);
            *(_DWORD *)(v59 + 32) = v60 & 0xFFFFFFF0 | 1;
            if ((v60 & 0x30) != 0 && (llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v59) & 1) == 0)
              *(_DWORD *)(v59 + 32) |= 0x4000u;
            v61 = *(_QWORD *)(v59 + 48);
            if (v61)
              llvm::Comdat::removeUser(v61, v59);
            *(_QWORD *)(v59 + 48) = 0;
          }
          v442[0] = 0;
          v442[1] = 0;
          v443 = 0;
          v445 = 0;
          v446 = 0;
          v444 = 0;
          v62 = (_QWORD *)*((_QWORD *)a5 + 4);
          v63 = v9;
          if (v62 == v9)
            goto LABEL_269;
          while (2)
          {
            if (v62)
              v64 = (llvm::Function *)(v62 - 7);
            else
              v64 = 0;
            if ((*((_DWORD *)v64 + 8) & 0xFu) - 7 > 1
              || llvm::Function::hasAddressTaken(v64, 0, 0, 1, 0, 0))
            {
              v65 = v64 >> 4;
              if ((*((_BYTE *)v64 + 23) & 0x20) != 0)
              {
                v66 = ***(_QWORD ***)v64;
                *(_QWORD *)&v498 = v64;
                v67 = *(_DWORD *)(v66 + 2496);
                if (!v67)
                {
                  v113 = 0;
                  goto LABEL_170;
                }
                v68 = *(_QWORD *)(v66 + 2480);
                v69 = v67 - 1;
                v70 = v69 & (v65 ^ (v64 >> 9));
                v71 = (llvm::Function **)(v68 + 40 * v70);
                v72 = *v71;
                if (*v71 != v64)
                {
                  v73 = 0;
                  v74 = 1;
                  while (v72 != (llvm::Function *)-4096)
                  {
                    if (v73)
                      v75 = 0;
                    else
                      v75 = v72 == (llvm::Function *)-8192;
                    if (v75)
                      v73 = v71;
                    v76 = v70 + v74++;
                    v70 = v76 & v69;
                    v71 = (llvm::Function **)(v68 + 40 * v70);
                    v72 = *v71;
                    if (*v71 == v64)
                      goto LABEL_120;
                  }
                  if (v73)
                    v113 = v73;
                  else
                    v113 = v71;
LABEL_170:
                  v71 = (llvm::Function **)sub_1C541AB24(v66 + 2480, (uint64_t)&v498, (uint64_t *)&v498, v113);
                  v114 = (llvm::Function *)v498;
                  v71[4] = 0;
                  v71[3] = 0;
                  *v71 = v114;
                  v71[1] = (llvm::Function *)(v71 + 3);
                  v71[2] = (llvm::Function *)0x100000000;
                }
LABEL_120:
                v77 = *((unsigned int *)v71 + 4);
                if ((_DWORD)v77)
                {
                  v78 = (_QWORD *)((char *)v71[1] + 8);
                  v79 = 16 * v77;
                  while (*((_DWORD *)v78 - 2) != 22)
                  {
                    v78 += 2;
                    v79 -= 16;
                    if (!v79)
                      goto LABEL_124;
                  }
                  v94 = *v78;
                  if (v94)
                  {
                    v95 = *(unsigned __int8 **)(v94 - 8 * *(unsigned int *)(v94 + 8));
                    if (v95)
                    {
                      if (*v95 - 1 <= 1)
                      {
                        v96 = (uint64_t ***)*((_QWORD *)v95 + 16);
                        v97 = *((unsigned __int8 *)v96 + 16);
                        v98 = v97 > 3 || v97 == 1;
                        if (!v98 && (*((_BYTE *)v96 + 23) & 0x20) != 0)
                        {
                          v99 = ***v96;
                          *(_QWORD *)&v498 = v96;
                          v100 = *(_DWORD *)(v99 + 2496);
                          if (!v100)
                          {
                            v117 = 0;
                            goto LABEL_180;
                          }
                          v101 = *(_QWORD *)(v99 + 2480);
                          v102 = v100 - 1;
                          v103 = v102 & ((v96 >> 4) ^ (v96 >> 9));
                          v104 = (_QWORD *)(v101 + 40 * v103);
                          v105 = *v104;
                          if ((uint64_t ***)*v104 != v96)
                          {
                            v106 = 0;
                            v107 = 1;
                            while (v105 != -4096)
                            {
                              if (v106)
                                v108 = 0;
                              else
                                v108 = v105 == -8192;
                              if (v108)
                                v106 = v104;
                              v109 = v103 + v107++;
                              v103 = v109 & v102;
                              v104 = (_QWORD *)(v101 + 40 * v103);
                              v105 = *v104;
                              if ((uint64_t ***)*v104 == v96)
                                goto LABEL_158;
                            }
                            if (v106)
                              v117 = v106;
                            else
                              v117 = v104;
LABEL_180:
                            v104 = sub_1C541AB24(v99 + 2480, (uint64_t)&v498, (uint64_t *)&v498, v117);
                            v118 = v498;
                            v104[4] = 0;
                            v104[3] = 0;
                            *v104 = v118;
                            v104[1] = v104 + 3;
                            v104[2] = 0x100000000;
                          }
LABEL_158:
                          v110 = *((unsigned int *)v104 + 4);
                          if ((_DWORD)v110)
                          {
                            v111 = (_QWORD *)(v104[1] + 8);
                            v112 = 16 * v110;
                            while (*((_DWORD *)v111 - 2) != 19)
                            {
                              v111 += 2;
                              v112 -= 16;
                              if (!v112)
                                goto LABEL_124;
                            }
                            if (*v111)
                              goto LABEL_164;
                          }
                        }
                      }
                    }
                  }
                }
              }
LABEL_124:
              if ((*((_BYTE *)v64 + 23) & 0x20) != 0)
              {
                v80 = ***(_QWORD ***)v64;
                *(_QWORD *)&v498 = v64;
                v81 = *(_DWORD *)(v80 + 2496);
                if (!v81)
                {
                  v115 = 0;
                  goto LABEL_174;
                }
                v82 = *(_QWORD *)(v80 + 2480);
                v83 = v81 - 1;
                v84 = v83 & (v65 ^ (v64 >> 9));
                v85 = (llvm::Function **)(v82 + 40 * v84);
                v86 = *v85;
                if (*v85 != v64)
                {
                  v87 = 0;
                  v88 = 1;
                  while (v86 != (llvm::Function *)-4096)
                  {
                    if (v87)
                      v89 = 0;
                    else
                      v89 = v86 == (llvm::Function *)-8192;
                    if (v89)
                      v87 = v85;
                    v90 = v84 + v88++;
                    v84 = v90 & v83;
                    v85 = (llvm::Function **)(v82 + 40 * v84);
                    v86 = *v85;
                    if (*v85 == v64)
                      goto LABEL_135;
                  }
                  if (v87)
                    v115 = v87;
                  else
                    v115 = v85;
LABEL_174:
                  v85 = (llvm::Function **)sub_1C541AB24(v80 + 2480, (uint64_t)&v498, (uint64_t *)&v498, v115);
                  v116 = (llvm::Function *)v498;
                  v85[4] = 0;
                  v85[3] = 0;
                  *v85 = v116;
                  v85[1] = (llvm::Function *)(v85 + 3);
                  v85[2] = (llvm::Function *)0x100000000;
                }
LABEL_135:
                v91 = *((unsigned int *)v85 + 4);
                if ((_DWORD)v91)
                {
                  v92 = (_QWORD *)((char *)v85[1] + 8);
                  v93 = 16 * v91;
                  while (*((_DWORD *)v92 - 2) != 19)
                  {
                    v92 += 2;
                    v93 -= 16;
                    if (!v93)
                      goto LABEL_165;
                  }
                  if (*v92)
                  {
LABEL_164:
                    *(_QWORD *)&v498 = v64;
                    sub_1C56D6B88(v442, &v498);
                  }
                }
              }
            }
LABEL_165:
            v62 = (_QWORD *)v62[1];
            if (v62 != v9)
              continue;
            break;
          }
          v63 = (_QWORD *)*((_QWORD *)a5 + 4);
LABEL_269:
          v177 = 0;
          v178 = 0;
          v423 = 0;
          v179 = (_QWORD *)*((_QWORD *)a5 + 2);
          v180 = (_QWORD *)((char *)a5 + 40);
          v181 = (_QWORD *)*((_QWORD *)a5 + 6);
          v182 = (_QWORD *)((char *)a5 + 56);
          v183 = (_QWORD *)*((_QWORD *)a5 + 8);
          *(_QWORD *)&v498 = v63;
          *((_QWORD *)&v498 + 1) = v179;
          *(_QWORD *)&v499 = v181;
          *((_QWORD *)&v499 + 1) = v183;
          v500 = v9;
          v501 = v11;
          v502 = (_QWORD *)((char *)a5 + 40);
          v503 = (_QWORD *)((char *)a5 + 56);
          while (2)
          {
            if (v63 != v9
              || v179 != v11
              || v181 != v180
              || v183 != v182
              || v500 != v9
              || v501 != v11
              || v502 != v180
              || v503 != v182)
            {
              v184 = (unsigned __int8 *)sub_1C52C3168((uint64_t)&v498);
              v476 = 0;
              v475 = 0;
              v477 = 0;
              v185 = (_BYTE *)sub_1C53D5A28((uint64_t)v184, (uint64_t)&v475);
              MEMORY[0x1CAA32FB4](v475, 8);
              if (!v185 || v185[16] != 3)
                goto LABEL_310;
              v186 = v185 >> 4;
              if ((v185[23] & 0x20) == 0)
                goto LABEL_295;
              v187 = ***(_QWORD ***)v185;
              v475 = v185;
              v188 = *(_DWORD *)(v187 + 2496);
              if (!v188)
              {
                v241 = 0;
                goto LABEL_357;
              }
              v189 = *(_QWORD *)(v187 + 2480);
              v190 = v188 - 1;
              v191 = v190 & (v186 ^ (v185 >> 9));
              v192 = (_QWORD *)(v189 + 40 * v191);
              v193 = (_BYTE *)*v192;
              if ((_BYTE *)*v192 != v185)
              {
                v194 = 0;
                v195 = 1;
                while (v193 != (_BYTE *)-4096)
                {
                  if (v194)
                    v196 = 0;
                  else
                    v196 = v193 == (_BYTE *)-8192;
                  if (v196)
                    v194 = v192;
                  v197 = v191 + v195++;
                  v191 = v197 & v190;
                  v192 = (_QWORD *)(v189 + 40 * v191);
                  v193 = (_BYTE *)*v192;
                  if ((_BYTE *)*v192 == v185)
                    goto LABEL_291;
                }
                if (v194)
                  v241 = v194;
                else
                  v241 = v192;
LABEL_357:
                v192 = sub_1C541AB24(v187 + 2480, (uint64_t)&v475, (uint64_t *)&v475, v241);
                v242 = v475;
                v192[4] = 0;
                v192[3] = 0;
                *v192 = v242;
                v192[1] = v192 + 3;
                v192[2] = 0x100000000;
              }
LABEL_291:
              v198 = *((unsigned int *)v192 + 4);
              if (!(_DWORD)v198)
                goto LABEL_295;
              v199 = (_QWORD *)(v192[1] + 8);
              v200 = 16 * v198;
              while (*((_DWORD *)v199 - 2) != 22)
              {
                v199 += 2;
                v200 -= 16;
                if (!v200)
                  goto LABEL_295;
              }
              v218 = *v199;
              if (!v218)
                goto LABEL_295;
              v219 = *(unsigned __int8 **)(v218 - 8 * *(unsigned int *)(v218 + 8));
              if (!v219 || *v219 - 1 > 1)
                goto LABEL_295;
              v220 = (_BYTE *)*((_QWORD *)v219 + 16);
              v221 = v220[16];
              v222 = v221 > 3 || v221 == 1;
              if (v222 || (v220[23] & 0x20) == 0)
                goto LABEL_295;
              v223 = ***(_QWORD ***)v220;
              v475 = v220;
              v224 = *(_DWORD *)(v223 + 2496);
              if (!v224)
              {
                v247 = 0;
                goto LABEL_374;
              }
              v225 = *(_QWORD *)(v223 + 2480);
              v226 = v224 - 1;
              v227 = v226 & ((v220 >> 4) ^ (v220 >> 9));
              v228 = (_QWORD *)(v225 + 40 * v227);
              v229 = (void *)*v228;
              if ((_BYTE *)*v228 != v220)
              {
                v230 = 0;
                v231 = 1;
                while (v229 != (void *)-4096)
                {
                  if (v230)
                    v232 = 0;
                  else
                    v232 = v229 == (void *)-8192;
                  if (v232)
                    v230 = v228;
                  v233 = v227 + v231++;
                  v227 = v233 & v226;
                  v228 = (_QWORD *)(v225 + 40 * v227);
                  v229 = (void *)*v228;
                  if ((_BYTE *)*v228 == v220)
                    goto LABEL_333;
                }
                if (v230)
                  v247 = v230;
                else
                  v247 = v228;
LABEL_374:
                v228 = sub_1C541AB24(v223 + 2480, (uint64_t)&v475, (uint64_t *)&v475, v247);
                v248 = v475;
                v228[4] = 0;
                v228[3] = 0;
                *v228 = v248;
                v228[1] = v228 + 3;
                v228[2] = 0x100000000;
              }
LABEL_333:
              v234 = *((unsigned int *)v228 + 4);
              if (!(_DWORD)v234)
                goto LABEL_295;
              v235 = (_QWORD *)(v228[1] + 8);
              v236 = 16 * v234;
              while (*((_DWORD *)v235 - 2) != 19)
              {
                v235 += 2;
                v236 -= 16;
                if (!v236)
                  goto LABEL_295;
              }
              if (!*v235)
              {
LABEL_295:
                if ((v185[23] & 0x20) == 0)
                  goto LABEL_310;
                v201 = ***(_QWORD ***)v185;
                v475 = v185;
                v202 = *(_DWORD *)(v201 + 2496);
                if (!v202)
                {
                  v243 = 0;
                  goto LABEL_361;
                }
                v203 = *(_QWORD *)(v201 + 2480);
                v204 = v202 - 1;
                v205 = v204 & (v186 ^ (v185 >> 9));
                v206 = (_QWORD *)(v203 + 40 * v205);
                v207 = (_BYTE *)*v206;
                if ((_BYTE *)*v206 != v185)
                {
                  v208 = 0;
                  v209 = 1;
                  while (v207 != (_BYTE *)-4096)
                  {
                    if (v208)
                      v210 = 0;
                    else
                      v210 = v207 == (_BYTE *)-8192;
                    if (v210)
                      v208 = v206;
                    v211 = v205 + v209++;
                    v205 = v211 & v204;
                    v206 = (_QWORD *)(v203 + 40 * v205);
                    v207 = (_BYTE *)*v206;
                    if ((_BYTE *)*v206 == v185)
                      goto LABEL_306;
                  }
                  if (v208)
                    v243 = v208;
                  else
                    v243 = v206;
LABEL_361:
                  v206 = sub_1C541AB24(v201 + 2480, (uint64_t)&v475, (uint64_t *)&v475, v243);
                  v244 = v475;
                  v206[4] = 0;
                  v206[3] = 0;
                  *v206 = v244;
                  v206[1] = v206 + 3;
                  v206[2] = 0x100000000;
                }
LABEL_306:
                v212 = *((unsigned int *)v206 + 4);
                if (!(_DWORD)v212)
                  goto LABEL_310;
                v213 = (_QWORD *)(v206[1] + 8);
                v214 = 16 * v212;
                while (*((_DWORD *)v213 - 2) != 19)
                {
                  v213 += 2;
                  v214 -= 16;
                  if (!v214)
                    goto LABEL_310;
                }
                if (!*v213)
                {
LABEL_310:
                  v215 = v184[16];
                  if (v215 != 2)
                  {
                    AliaseeObject = (uint64_t)v184;
                    if (v215 != 1
                      || (AliaseeObject = llvm::GlobalAlias::getAliaseeObject((llvm::GlobalAlias *)v184)) != 0)
                    {
                      if (*(_QWORD *)(AliaseeObject + 48))
                      {
                        v475 = *(void **)(AliaseeObject + 48);
                        __p = 0;
                        if (sub_1C614F7B0(v452, &v475, &__p))
                          goto LABEL_343;
                      }
                    }
                  }
LABEL_313:
                  v217 = v178;
                  goto LABEL_314;
                }
              }
LABEL_343:
              if (v178 < v423)
              {
                *v178++ = v184;
                goto LABEL_313;
              }
              v237 = v178 - v177;
              v238 = v237 + 1;
              if ((unint64_t)(v237 + 1) >> 61)
                abort();
              if (((char *)v423 - (char *)v177) >> 2 > v238)
                v238 = ((char *)v423 - (char *)v177) >> 2;
              if ((unint64_t)((char *)v423 - (char *)v177) >= 0x7FFFFFFFFFFFFFF8)
                v239 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v239 = v238;
              if (v239)
              {
                if (v239 >> 61)
                  sub_1C4764EE4();
                v240 = (char *)operator new(8 * v239);
              }
              else
              {
                v240 = 0;
              }
              v245 = (unsigned __int8 **)&v240[8 * v237];
              *v245 = v184;
              v217 = v245 + 1;
              while (v178 != v177)
              {
                v246 = *--v178;
                *--v245 = v246;
              }
              v423 = (unsigned __int8 **)&v240[8 * v239];
              if (v177)
                operator delete(v177);
              v177 = v245;
LABEL_314:
              sub_1C52C300C((uint64_t)&v498);
              v179 = (_QWORD *)*((_QWORD *)&v498 + 1);
              v63 = (_QWORD *)v498;
              v178 = v217;
              v183 = (_QWORD *)*((_QWORD *)&v499 + 1);
              v181 = (_QWORD *)v499;
              continue;
            }
            break;
          }
          if (v177 != v178)
          {
            v249 = (llvm **)v177;
            do
            {
              v250 = *v249;
              if ((llvm::convertToDeclaration(*v249, v56) & 1) == 0)
                llvm::GlobalValue::eraseFromParent(v250);
              ++v249;
            }
            while (v249 != (llvm **)v178);
          }
          if (v177)
            operator delete(v177);
          if (v459 >= 0)
            v251 = &v457;
          else
            v251 = v457;
          if (v459 >= 0)
            v252 = v459 & 0x7F;
          else
            v252 = v458;
          sub_1C576D5A8(v447, (uint64_t)a5, (uint64_t)v251, v252, v442);
          if (v459 >= 0)
            v253 = &v457;
          else
            v253 = v457;
          if (v459 >= 0)
            v254 = v459 & 0x7F;
          else
            v254 = v458;
          sub_1C576D5A8(a5, (uint64_t)v447, (uint64_t)v253, v254, v442);
          v255 = *(uint64_t **)v447;
          v495 = v497;
          v496 = 0x800000000;
          v256 = (unsigned int **)v444;
          v257 = v445;
          if (v444 != v445)
          {
            while (2)
            {
              v258 = *v256;
              v475 = &v477;
              v476 = 0x200000000;
              llvm::Value::getMetadata(v258, 19, (uint64_t)&v475);
              *(_QWORD *)&v498 = &v499;
              *((_QWORD *)&v498 + 1) = 0x400000000;
              if ((*((_BYTE *)v258 + 23) & 0x10) != 0)
              {
                v259 = ***(_QWORD ***)v258;
                v260 = *(_QWORD *)(v259 + 152);
                v261 = *(unsigned int *)(v259 + 168);
                if (!(_DWORD)v261)
                  goto LABEL_405;
                LODWORD(v262) = (v261 - 1) & ((v258 >> 4) ^ (v258 >> 9));
                v263 = (unsigned int **)(v260 + 16 * v262);
                v264 = *v263;
                if (*v263 != v258)
                {
                  v265 = 1;
                  while (v264 != (unsigned int *)-4096)
                  {
                    v266 = v262 + v265++;
                    v262 = v266 & (v261 - 1);
                    v264 = *(unsigned int **)(v260 + 16 * v262);
                    if (v264 == v258)
                    {
                      v263 = (unsigned int **)(v260 + 16 * v262);
                      goto LABEL_406;
                    }
                  }
LABEL_405:
                  v263 = (unsigned int **)(v260 + 16 * v261);
                }
LABEL_406:
                v267 = v263[1];
                v270 = *(_QWORD *)v267;
                v268 = (unsigned __int8 *)(v267 + 4);
                v269 = v270;
              }
              else
              {
                v269 = 0;
                v268 = (unsigned __int8 *)&byte_1C871356D;
              }
              v272 = llvm::MDString::get(v255, v268, v269);
              v273 = DWORD2(v498);
              if (DWORD2(v498) >= (unint64_t)HIDWORD(v498))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v498, (uint64_t)&v499, DWORD2(v498) + 1, 8);
                v273 = DWORD2(v498);
              }
              *(_QWORD *)(v498 + 8 * v273) = v272;
              ++DWORD2(v498);
              if ((llvm::lowertypetests::isJumpTableCanonical((llvm::lowertypetests *)v258, v271) & 1) != 0)
              {
                v275 = 0;
              }
              else if (llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v258))
              {
                v275 = 2;
              }
              else
              {
                v275 = 1;
              }
              v276 = *(llvm::ConstantInt **)(*v255 + 1912);
              v277 = *(_DWORD *)(*v255 + 1920);
              LODWORD(v468) = v277 >> 8;
              if (v277 >> 8 > 0x40)
              {
                llvm::APInt::initSlowCase((llvm::APInt *)&__p, v275, 0);
              }
              else
              {
                if (v277 <= 0xFF)
                  v278 = 0;
                else
                  v278 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v277);
                __p = (void *)(v278 & v275);
              }
              v280 = llvm::ConstantInt::get(v276, (llvm::LLVMContext *)&__p, v274);
              if (v468 >= 0x41 && __p)
                MEMORY[0x1CAA32F9C](__p, 0x1000C8000313F17);
              v281 = llvm::ValueAsMetadata::get(v280, v279);
              v282 = DWORD2(v498);
              if (DWORD2(v498) >= (unint64_t)HIDWORD(v498))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v498, (uint64_t)&v499, DWORD2(v498) + 1, 8);
                v282 = DWORD2(v498);
              }
              *(_QWORD *)(v498 + 8 * v282) = v281;
              ++DWORD2(v498);
              sub_1C6177054((unsigned int *)&v498, (char *)v475, (char *)v475 + 8 * v476);
              Impl = llvm::MDTuple::getImpl(v255, (_QWORD *)v498, DWORD2(v498), 0, 1);
              v284 = v496;
              if (v496 >= (unint64_t)HIDWORD(v496))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v495, (uint64_t)v497, v496 + 1, 8);
                v284 = v496;
              }
              *((_QWORD *)v495 + v284) = Impl;
              LODWORD(v496) = v496 + 1;
              if ((__int128 *)v498 != &v499)
                free((void *)v498);
              if (v475 != &v477)
                free(v475);
              if (++v256 == v257)
              {
                if ((_DWORD)v496)
                {
                  inserted = llvm::Module::getOrInsertNamedMetadata((uint64_t)v447, "cfi.functions", 0xDuLL);
                  if ((_DWORD)v496)
                  {
                    v409 = inserted;
                    v410 = (unsigned __int8 **)v495;
                    v411 = 8 * v496;
                    do
                    {
                      v412 = *v410;
                      *(_QWORD *)&v498 = *v410;
                      v413 = *(_QWORD *)(v409 + 48);
                      v414 = *(unsigned int *)(v413 + 8);
                      if (v414 >= *(_DWORD *)(v413 + 12))
                      {
                        sub_1C5419FD8(*(_QWORD *)(v409 + 48), (unsigned __int8 **)&v498);
                      }
                      else
                      {
                        v415 = (unsigned __int8 **)(*(_QWORD *)v413 + 8 * v414);
                        *v415 = v412;
                        if (v412)
                        {
                          llvm::MetadataTracking::track((uint64_t)v415, v412, 2);
                          LODWORD(v414) = *(_DWORD *)(v413 + 8);
                        }
                        *(_DWORD *)(v413 + 8) = v414 + 1;
                      }
                      ++v410;
                      v411 -= 8;
                    }
                    while (v411);
                  }
                }
                break;
              }
              continue;
            }
          }
          v492 = v494;
          v493 = 0x800000000;
          v287 = (_QWORD *)*((_QWORD *)a5 + 6);
          if (v287 == v180)
            goto LABEL_497;
          v288 = 0;
          while (2)
          {
            if (v287)
              v289 = (uint64_t ***)(v287 - 6);
            else
              v289 = 0;
            v290 = (uint64_t ***)*(v289 - 4);
            if (!*((_BYTE *)v290 + 16))
            {
              v498 = 0u;
              v499 = 0u;
              if ((*((_BYTE *)v289 + 23) & 0x10) != 0)
              {
                v291 = ***v289;
                v292 = *(_QWORD *)(v291 + 152);
                v293 = *(unsigned int *)(v291 + 168);
                if (!(_DWORD)v293)
                  goto LABEL_456;
                LODWORD(v294) = (v293 - 1) & ((v289 >> 4) ^ (v289 >> 9));
                v295 = (uint64_t ****)(v292 + 16 * v294);
                v296 = *v295;
                if (*v295 != v289)
                {
                  v297 = 1;
                  while (v296 != (uint64_t ***)-4096)
                  {
                    v298 = v294 + v297++;
                    v294 = v298 & (v293 - 1);
                    v296 = *(uint64_t ****)(v292 + 16 * v294);
                    if (v296 == v289)
                    {
                      v295 = (uint64_t ****)(v292 + 16 * v294);
                      goto LABEL_457;
                    }
                  }
LABEL_456:
                  v295 = (uint64_t ****)(v292 + 16 * v293);
                }
LABEL_457:
                v299 = v295[1];
                v302 = (size_t)*v299;
                v300 = (unsigned __int8 *)(v299 + 2);
                v301 = v302;
              }
              else
              {
                v301 = 0;
                v300 = (unsigned __int8 *)&byte_1C871356D;
              }
              *(_QWORD *)&v498 = llvm::MDString::get(v255, v300, v301);
              if ((*((_BYTE *)v290 + 23) & 0x10) != 0)
              {
                v303 = ***v290;
                v304 = *(_QWORD *)(v303 + 152);
                v305 = *(unsigned int *)(v303 + 168);
                if (!(_DWORD)v305)
                  goto LABEL_465;
                LODWORD(v306) = (v305 - 1) & ((v290 >> 4) ^ (v290 >> 9));
                v307 = (uint64_t ****)(v304 + 16 * v306);
                v308 = *v307;
                if (*v307 != v290)
                {
                  v309 = 1;
                  while (v308 != (uint64_t ***)-4096)
                  {
                    v310 = v306 + v309++;
                    v306 = v310 & (v305 - 1);
                    v308 = *(uint64_t ****)(v304 + 16 * v306);
                    if (v308 == v290)
                    {
                      v307 = (uint64_t ****)(v304 + 16 * v306);
                      goto LABEL_466;
                    }
                  }
LABEL_465:
                  v307 = (uint64_t ****)(v304 + 16 * v305);
                }
LABEL_466:
                v311 = v307[1];
                v314 = (size_t)*v311;
                v312 = (unsigned __int8 *)(v311 + 2);
                v313 = v314;
              }
              else
              {
                v313 = 0;
                v312 = (unsigned __int8 *)&byte_1C871356D;
              }
              *((_QWORD *)&v498 + 1) = llvm::MDString::get(v255, v312, v313);
              v316 = ((unint64_t)*((unsigned int *)v289 + 8) >> 4) & 3;
              v317 = *(llvm::ConstantInt **)(*v255 + 1912);
              v318 = *(_DWORD *)(*v255 + 1920);
              LODWORD(v476) = v318 >> 8;
              if (v318 >> 8 > 0x40)
              {
                llvm::APInt::initSlowCase((llvm::APInt *)&v475, v316, 0);
              }
              else
              {
                if (v318 <= 0xFF)
                  v319 = 0;
                else
                  v319 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v318);
                v475 = (void *)(v319 & v316);
              }
              v321 = llvm::ConstantInt::get(v317, (llvm::LLVMContext *)&v475, v315);
              if (v476 >= 0x41 && v475)
                MEMORY[0x1CAA32F9C](v475, 0x1000C8000313F17);
              *(_QWORD *)&v499 = llvm::ValueAsMetadata::get(v321, v320);
              v323 = *v255;
              if (((_DWORD)v289[4] & 0xFu) - 2 > 8)
                v324 = 0;
              else
                v324 = qword_1C86606C0[((_DWORD)v289[4] & 0xF) - 2];
              v325 = *(llvm::ConstantInt **)(v323 + 1912);
              v326 = *(_DWORD *)(v323 + 1920);
              LODWORD(v476) = v326 >> 8;
              if (v326 >> 8 > 0x40)
              {
                llvm::APInt::initSlowCase((llvm::APInt *)&v475, v324, 0);
              }
              else
              {
                if (v326 <= 0xFF)
                  v327 = 0;
                else
                  v327 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v326);
                v475 = (void *)(v327 & v324);
              }
              v329 = llvm::ConstantInt::get(v325, (llvm::LLVMContext *)&v475, v322);
              if (v476 >= 0x41 && v475)
                MEMORY[0x1CAA32F9C](v475, 0x1000C8000313F17);
              *((_QWORD *)&v499 + 1) = llvm::ValueAsMetadata::get(v329, v328);
              v330 = llvm::MDTuple::getImpl(v255, &v498, 4, 0, 1);
              v331 = v493;
              if (v493 >= (unint64_t)HIDWORD(v493))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v492, (uint64_t)v494, v493 + 1, 8);
                v331 = v493;
              }
              *((_QWORD *)v492 + v331) = v330;
              v288 = v493 + 1;
              LODWORD(v493) = v493 + 1;
            }
            v287 = (_QWORD *)v287[1];
            if (v287 != v180)
              continue;
            break;
          }
          if (v288)
          {
            v332 = llvm::Module::getOrInsertNamedMetadata((uint64_t)v447, "aliases", 7uLL);
            if ((_DWORD)v493)
            {
              v416 = v332;
              v417 = (unsigned __int8 **)v492;
              v418 = 8 * v493;
              do
              {
                v419 = *v417;
                *(_QWORD *)&v498 = *v417;
                v420 = *(_QWORD *)(v416 + 48);
                v421 = *(unsigned int *)(v420 + 8);
                if (v421 >= *(_DWORD *)(v420 + 12))
                {
                  sub_1C5419FD8(*(_QWORD *)(v416 + 48), (unsigned __int8 **)&v498);
                }
                else
                {
                  v422 = (unsigned __int8 **)(*(_QWORD *)v420 + 8 * v421);
                  *v422 = v419;
                  if (v419)
                  {
                    llvm::MetadataTracking::track((uint64_t)v422, v419, 2);
                    LODWORD(v421) = *(_DWORD *)(v420 + 8);
                  }
                  *(_DWORD *)(v420 + 8) = v421 + 1;
                }
                ++v417;
                v418 -= 8;
              }
              while (v418);
            }
          }
LABEL_497:
          v489 = v491;
          v490 = 0x800000000;
          *(_QWORD *)&v498 = a5;
          *((_QWORD *)&v498 + 1) = &v489;
          *(_QWORD *)&v499 = v255;
          v475 = sub_1C576E1C0;
          v476 = (uint64_t)&v498;
          __p = &v475;
          sub_1C5A04E30((uint64_t)a5, (void (*)(uint64_t, std::string *))sub_1C5A059DC, (uint64_t)&__p);
          if ((_DWORD)v490)
          {
            v333 = llvm::Module::getOrInsertNamedMetadata((uint64_t)v447, "symvers", 7uLL);
            if ((_DWORD)v490)
            {
              v402 = v333;
              v403 = (unsigned __int8 **)v489;
              v404 = 8 * v490;
              do
              {
                v405 = *v403;
                *(_QWORD *)&v498 = *v403;
                v406 = *(_QWORD *)(v402 + 48);
                v407 = *(unsigned int *)(v406 + 8);
                if (v407 >= *(_DWORD *)(v406 + 12))
                {
                  sub_1C5419FD8(*(_QWORD *)(v402 + 48), (unsigned __int8 **)&v498);
                }
                else
                {
                  v408 = (unsigned __int8 **)(*(_QWORD *)v406 + 8 * v407);
                  *v408 = v405;
                  if (v405)
                  {
                    llvm::MetadataTracking::track((uint64_t)v408, v405, 2);
                    LODWORD(v407) = *(_DWORD *)(v406 + 8);
                  }
                  *(_DWORD *)(v406 + 8) = v407 + 1;
                }
                ++v403;
                v404 -= 8;
              }
              while (v404);
            }
          }
          v334 = v447;
          v335 = llvm::FunctionType::get((uint64_t **)(**(_QWORD **)v447 + 1576), 0, 0, 0);
          v336 = (_QWORD *)*((_QWORD *)v334 + 4);
          if (v336 != (_QWORD *)((char *)v334 + 24))
          {
            v337 = (llvm::PointerType *)v335;
            do
            {
              v338 = v336;
              v336 = (_QWORD *)v336[1];
              if (v338)
                v339 = v338 - 7;
              else
                v339 = 0;
              if (v338 && *((_BYTE *)v339 + 16) == 3)
              {
                if ((*((_DWORD *)v339 + 5) & 0x7FFFFFF) != 0)
                  continue;
                if (!v339[1])
                  goto LABEL_535;
              }
              else
              {
                if (*((_BYTE *)v339 + 16) || (uint64_t *)v339[9] != v339 + 9)
                  continue;
                if ((*((_BYTE *)v339 + 34) & 0x80) == 0 && !v339[1])
                  goto LABEL_535;
                if ((*((_BYTE *)v339 + 34) & 0x80) != 0)
                  continue;
              }
              if ((llvm::PointerType *)v339[3] != v337)
              {
                v340 = (uint64_t **)*v339;
                if ((*((_BYTE *)v339 + 23) & 0x10) != 0)
                {
                  v341 = **v340;
                  v342 = *(_QWORD *)(v341 + 152);
                  v343 = *(unsigned int *)(v341 + 168);
                  if (!(_DWORD)v343)
                    goto LABEL_522;
                  LODWORD(v344) = (v343 - 1) & ((v339 >> 4) ^ (v339 >> 9));
                  v345 = (uint64_t **)(v342 + 16 * v344);
                  v346 = *v345;
                  if (*v345 != v339)
                  {
                    v347 = 1;
                    while (v346 != (uint64_t *)-4096)
                    {
                      v348 = v344 + v347++;
                      v344 = v348 & (v343 - 1);
                      v346 = *(uint64_t **)(v342 + 16 * v344);
                      if (v346 == v339)
                      {
                        v345 = (uint64_t **)(v342 + 16 * v344);
                        goto LABEL_523;
                      }
                    }
LABEL_522:
                    v345 = (uint64_t **)(v342 + 16 * v343);
                  }
LABEL_523:
                  v349 = v345[1];
                  if ((unint64_t)*v349 >= 5)
                  {
                    v350 = *((_DWORD *)v349 + 4);
                    v351 = *((unsigned __int8 *)v349 + 20);
                    if (v350 == 1836477548 && v351 == 46)
                      continue;
                  }
                }
                v353 = (llvm::Type *)(*((_DWORD *)v340 + 2) >> 8);
                LOWORD(v500) = 257;
                v354 = (uint64_t *)operator new(0x80uLL);
                v355 = (llvm::UndefValue *)(v354 + 1);
                *((_DWORD *)v354 + 7) = *((_DWORD *)v354 + 7) & 0x38000000 | 0x40000000;
                *v354 = 0;
                v356 = llvm::Function::Function(v354 + 1, v337, 0, v353, (uint64_t)&v498, (uint64_t)v334);
                llvm::Function::copyAttributesFrom((llvm::Function *)v356, (const llvm::Function *)v339);
                v357 = v339[14];
                if (v357 && *(_DWORD *)(v357 + 8))
                  v358 = *(_QWORD *)(v357 + 40);
                else
                  v358 = 0;
                v354[15] = llvm::AttributeList::get(*(uint64_t **)v334, -1, v358);
                llvm::Value::takeName(v355, (llvm::Value *)v339);
                if (v354[1] != *v339)
                  v355 = sub_1C537D3B8((llvm *)0x31, (uint64_t)v355, (llvm::Constant *)*v339, 0);
                llvm::Value::doRAUW((llvm::ValueAsMetadata *)v339, v355, (llvm::Value *)1);
LABEL_535:
                llvm::Function::eraseFromParent((llvm::Function *)v339);
              }
            }
            while (v336 != (_QWORD *)((char *)v334 + 24));
          }
          v359 = (_QWORD *)*((_QWORD *)v334 + 2);
          while (v359 != (_QWORD *)((char *)v334 + 8))
          {
            v360 = v359;
            v359 = (_QWORD *)v359[1];
            if (v360)
              v361 = v360 - 7;
            else
              v361 = 0;
            if (v360 && *((_BYTE *)v361 + 16) == 3)
            {
              if ((*((_DWORD *)v361 + 5) & 0x7FFFFFF) == 0)
                goto LABEL_544;
            }
            else if (!*((_BYTE *)v361 + 16) && (_QWORD *)v361[9] == v361 + 9 && (*((_BYTE *)v361 + 34) & 0x80) == 0)
            {
LABEL_544:
              if (!v361[1])
                llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)v361);
            }
          }
          v432 = a5;
          v433 = 0;
          v434 = 0;
          v435 = 0;
          v436 = 0;
          v437 = 0;
          v438 = 0;
          v439 = 0;
          v440 = 0;
          v441 = 0;
          llvm::ProfileSummaryInfo::refresh((unsigned __int8 *)&v432);
          v488 = 0;
          v485[0] = &off_1E817CF08;
          v486 = v485;
          llvm::buildModuleSummaryIndex((uint64_t)a5, (uint64_t)v487, (uint64_t)&v432, v485, (uint64_t)&v498);
          v362 = v486;
          if (v486 == v485)
          {
            v363 = (void (**)(_QWORD *))(v485[0] + 32);
            v362 = v485;
          }
          else
          {
            if (!v486)
              goto LABEL_555;
            v363 = (void (**)(_QWORD *))(*v486 + 40);
          }
          (*v363)(v362);
LABEL_555:
          v364 = v488;
          if (v488 == v487)
          {
            v365 = (void (**)(_QWORD *))(v487[0] + 32);
            v364 = v487;
          }
          else
          {
            if (!v488)
              goto LABEL_560;
            v365 = (void (**)(_QWORD *))(*v488 + 40);
          }
          (*v365)(v364);
LABEL_560:
          llvm::Module::addModuleFlag((uint64_t **)v447, (llvm::Type *)1, "ThinLTO", 7uLL, 0);
          v474 = 0;
          v471[0] = &off_1E817CF08;
          v472 = v471;
          llvm::buildModuleSummaryIndex((uint64_t)v447, (uint64_t)v473, (uint64_t)&v432, v471, (uint64_t)&v475);
          v366 = v472;
          if (v472 == v471)
          {
            v367 = (void (**)(_QWORD *))(v471[0] + 32);
            v366 = v471;
          }
          else
          {
            if (!v472)
              goto LABEL_565;
            v367 = (void (**)(_QWORD *))(*v472 + 40);
          }
          (*v367)(v366);
LABEL_565:
          v368 = v474;
          if (v474 == v473)
          {
            v369 = (void (**)(_QWORD *))(v473[0] + 32);
            v368 = v473;
          }
          else
          {
            if (!v474)
            {
LABEL_570:
              v430 = 0;
              v431 = 0;
              v429 = &v432;
              llvm::BitcodeWriter::BitcodeWriter((uint64_t)&__p, (uint64_t)&v429, 0);
              v427[0] = 0;
              v427[1] = 0;
              v428 = 0;
              llvm::BitcodeWriter::writeModule((uint64_t)&__p, a5, 0, &v498, 1, (uint64_t)v427);
              llvm::BitcodeWriter::writeModule((uint64_t)&__p, v447, 0, &v475, 0, 0);
              llvm::BitcodeWriter::writeSymtab((llvm::BitcodeWriter *)&__p);
              llvm::BitcodeWriter::writeStrtab((llvm::BitcodeWriter *)&__p);
              llvm::raw_ostream::write(a1, (const char *)v429, v430);
              if (a2)
              {
                v430 = 0;
                llvm::BitcodeWriter::BitcodeWriter((uint64_t)v465, (uint64_t)&v429, 0);
                llvm::StripDebugInfo(a5, v370);
                llvm::BitcodeWriter::writeThinLinkBitcode(v465, a5, &v498, (uint64_t)v427);
                llvm::BitcodeWriter::writeModule((uint64_t)v465, v447, 0, &v475, 0, 0);
                llvm::BitcodeWriter::writeSymtab((llvm::BitcodeWriter *)v465);
                llvm::BitcodeWriter::writeStrtab((llvm::BitcodeWriter *)v465);
                llvm::raw_ostream::write(a2, (const char *)v429, v430);
                llvm::BitcodeWriter::~BitcodeWriter((llvm::BitcodeWriter *)v465);
              }
              llvm::BitcodeWriter::~BitcodeWriter((llvm::BitcodeWriter *)&__p);
              if (v429 != &v432)
                free(v429);
              sub_1C61A8910((uint64_t)&v475);
              sub_1C61A8910((uint64_t)&v498);
              MEMORY[0x1CAA32FB4](v439, 8);
              v371 = v433;
              v433 = 0;
              if (v371)
                sub_1C4E5DDC4((uint64_t)&v433, v371);
              if (v489 != v491)
                free(v489);
              if (v492 != v494)
                free(v492);
              if (v495 != v497)
                free(v495);
              if (v444)
              {
                v445 = (unsigned int **)v444;
                operator delete(v444);
              }
              MEMORY[0x1CAA32FB4](v442[0], 8);
              v372 = v447;
              v447 = 0;
              if (v372)
              {
                llvm::Module::~Module(v372);
                MEMORY[0x1CAA32FC0]();
              }
              if (v451)
              {
                sub_1C4E43068((uint64_t)v450);
                MEMORY[0x1CAA32FB4](v450[0], 8);
                v451 = 0;
              }
              v373 = (_QWORD *)v448[0];
              if (v449)
              {
                v374 = v448[0] + ((unint64_t)v449 << 6);
                do
                {
                  v375 = v373[3];
                  if ((v375 | 0x1000) != 0xFFFFFFFFFFFFF000)
                  {
                    v376 = v373[7];
                    if (v376)
                    {
                      if (v376 != -8192 && v376 != -4096)
                      {
                        v377 = v373[5] & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v377 = v373[6];
                        v378 = (unint64_t *)v373[6];
                        if (v378)
                        {
                          *v378 = *v378 & 7 | v377;
                        }
                        else
                        {
                          v379 = v373[7];
                          v380 = ***(int32x2_t ****)v379;
                          v381 = (unint64_t)v380[303];
                          if (v381 <= v377)
                          {
                            v382 = v380[305].u32[0];
                            if (v381 + 16 * v382 > v377)
                            {
                              v383 = v382 - 1;
                              LODWORD(v384) = v383 & ((v379 >> 4) ^ (v379 >> 9));
                              v385 = (uint64_t *)(v381 + 16 * v384);
                              v386 = *v385;
                              if (v379 == *v385)
                              {
LABEL_602:
                                *v385 = -8192;
                                v380[304] = vadd_s32(v380[304], (int32x2_t)0x1FFFFFFFFLL);
                                v379 = v373[7];
                              }
                              else
                              {
                                v387 = 1;
                                while (v386 != -4096)
                                {
                                  v388 = v384 + v387++;
                                  v384 = v388 & v383;
                                  v386 = *(_QWORD *)(v381 + 16 * v384);
                                  if (v379 == v386)
                                  {
                                    v385 = (uint64_t *)(v381 + 16 * v384);
                                    goto LABEL_602;
                                  }
                                }
                              }
                              *(_BYTE *)(v379 + 17) &= ~1u;
                            }
                          }
                        }
                        v375 = v373[3];
                      }
                    }
                  }
                  if (v375 != -4096 && v375 != -8192 && v375 != 0)
                  {
                    v390 = v373[1] & 0xFFFFFFFFFFFFFFF8;
                    *(_QWORD *)v390 = v373[2];
                    v391 = (unint64_t *)v373[2];
                    if (v391)
                    {
                      *v391 = *v391 & 7 | v390;
                    }
                    else
                    {
                      v392 = v373[3];
                      v393 = ***(int32x2_t ****)v392;
                      v394 = (unint64_t)v393[303];
                      if (v394 <= v390)
                      {
                        v395 = v393[305].u32[0];
                        if (v394 + 16 * v395 > v390)
                        {
                          v396 = v395 - 1;
                          LODWORD(v397) = v396 & ((v392 >> 4) ^ (v392 >> 9));
                          v398 = (uint64_t *)(v394 + 16 * v397);
                          v399 = *v398;
                          if (v392 == *v398)
                          {
LABEL_621:
                            *v398 = -8192;
                            v393[304] = vadd_s32(v393[304], (int32x2_t)0x1FFFFFFFFLL);
                            v392 = v373[3];
                          }
                          else
                          {
                            v400 = 1;
                            while (v399 != -4096)
                            {
                              v401 = v397 + v400++;
                              v397 = v401 & v396;
                              v399 = *(_QWORD *)(v394 + 16 * v397);
                              if (v392 == v399)
                              {
                                v398 = (uint64_t *)(v394 + 16 * v397);
                                goto LABEL_621;
                              }
                            }
                          }
                          *(_BYTE *)(v392 + 17) &= ~1u;
                        }
                      }
                    }
                  }
                  v373 += 8;
                }
                while (v373 != (_QWORD *)v374);
                v373 = (_QWORD *)v448[0];
              }
              MEMORY[0x1CAA32FB4](v373, 8);
              MEMORY[0x1CAA32FB4](v452[0], 8);
              MEMORY[0x1CAA32FB4](v454[0], 8);
              goto LABEL_625;
            }
            v369 = (void (**)(_QWORD *))(*v474 + 40);
          }
          (*v369)(v368);
          goto LABEL_570;
        }
        while (1)
        {
          if (v52)
            v121 = (uint64_t ***)(v52 - 7);
          else
            v121 = 0;
          v122 = v121 >> 4;
          if ((*((_BYTE *)v121 + 23) & 0x20) == 0)
            goto LABEL_207;
          v123 = ***v121;
          *(_QWORD *)&v498 = v121;
          v124 = *(_DWORD *)(v123 + 2496);
          if (!v124)
            break;
          v125 = *(_QWORD *)(v123 + 2480);
          v126 = v124 - 1;
          v127 = v126 & (v122 ^ (v121 >> 9));
          v128 = (_QWORD *)(v125 + 40 * v127);
          v129 = *v128;
          if ((uint64_t ***)*v128 != v121)
          {
            v130 = 0;
            v131 = 1;
            while (v129 != -4096)
            {
              if (v130)
                v132 = 0;
              else
                v132 = v129 == -8192;
              if (v132)
                v130 = v128;
              v133 = v127 + v131++;
              v127 = v133 & v126;
              v128 = (_QWORD *)(v125 + 40 * v127);
              v129 = *v128;
              if ((uint64_t ***)*v128 == v121)
                goto LABEL_203;
            }
            if (v130)
              v171 = v130;
            else
              v171 = v128;
            goto LABEL_255;
          }
LABEL_203:
          v134 = *((unsigned int *)v128 + 4);
          if (!(_DWORD)v134)
            goto LABEL_207;
          v135 = (_QWORD *)(v128[1] + 8);
          v136 = 16 * v134;
          while (*((_DWORD *)v135 - 2) != 22)
          {
            v135 += 2;
            v136 -= 16;
            if (!v136)
              goto LABEL_207;
          }
          v151 = *v135;
          if (!v151)
            goto LABEL_207;
          v152 = *(unsigned __int8 **)(v151 - 8 * *(unsigned int *)(v151 + 8));
          if (!v152 || *v152 - 1 > 1)
            goto LABEL_207;
          v153 = (uint64_t ***)*((_QWORD *)v152 + 16);
          v154 = *((unsigned __int8 *)v153 + 16);
          v155 = v154 > 3 || v154 == 1;
          if (v155 || (*((_BYTE *)v153 + 23) & 0x20) == 0)
            goto LABEL_207;
          v156 = ***v153;
          *(_QWORD *)&v498 = v153;
          v157 = *(_DWORD *)(v156 + 2496);
          if (!v157)
          {
            v175 = 0;
LABEL_265:
            v161 = sub_1C541AB24(v156 + 2480, (uint64_t)&v498, (uint64_t *)&v498, v175);
            v176 = v498;
            v161[4] = 0;
            v161[3] = 0;
            *v161 = v176;
            v161[1] = v161 + 3;
            v161[2] = 0x100000000;
            goto LABEL_241;
          }
          v158 = *(_QWORD *)(v156 + 2480);
          v159 = v157 - 1;
          v160 = v159 & ((v153 >> 4) ^ (v153 >> 9));
          v161 = (_QWORD *)(v158 + 40 * v160);
          v162 = *v161;
          if ((uint64_t ***)*v161 != v153)
          {
            v163 = 0;
            v164 = 1;
            while (v162 != -4096)
            {
              if (v163)
                v165 = 0;
              else
                v165 = v162 == -8192;
              if (v165)
                v163 = v161;
              v166 = v160 + v164++;
              v160 = v166 & v159;
              v161 = (_QWORD *)(v158 + 40 * v160);
              v162 = *v161;
              if ((uint64_t ***)*v161 == v153)
                goto LABEL_241;
            }
            if (v163)
              v175 = v163;
            else
              v175 = v161;
            goto LABEL_265;
          }
LABEL_241:
          v167 = *((unsigned int *)v161 + 4);
          if ((_DWORD)v167)
          {
            v168 = (_QWORD *)(v161[1] + 8);
            v169 = 16 * v167;
            while (*((_DWORD *)v168 - 2) != 19)
            {
              v168 += 2;
              v169 -= 16;
              if (!v169)
                goto LABEL_207;
            }
            if (*v168)
              goto LABEL_247;
          }
LABEL_207:
          if ((*((_BYTE *)v121 + 23) & 0x20) != 0)
          {
            v137 = ***v121;
            *(_QWORD *)&v498 = v121;
            v138 = *(_DWORD *)(v137 + 2496);
            if (v138)
            {
              v139 = *(_QWORD *)(v137 + 2480);
              v140 = v138 - 1;
              v141 = v140 & (v122 ^ (v121 >> 9));
              v142 = (_QWORD *)(v139 + 40 * v141);
              v143 = *v142;
              if ((uint64_t ***)*v142 != v121)
              {
                v144 = 0;
                v145 = 1;
                while (v143 != -4096)
                {
                  if (v144)
                    v146 = 0;
                  else
                    v146 = v143 == -8192;
                  if (v146)
                    v144 = v142;
                  v147 = v141 + v145++;
                  v141 = v147 & v140;
                  v142 = (_QWORD *)(v139 + 40 * v141);
                  v143 = *v142;
                  if ((uint64_t ***)*v142 == v121)
                    goto LABEL_218;
                }
                if (v144)
                  v173 = v144;
                else
                  v173 = v142;
LABEL_259:
                v142 = sub_1C541AB24(v137 + 2480, (uint64_t)&v498, (uint64_t *)&v498, v173);
                v174 = v498;
                v142[4] = 0;
                v142[3] = 0;
                *v142 = v174;
                v142[1] = v142 + 3;
                v142[2] = 0x100000000;
              }
LABEL_218:
              v148 = *((unsigned int *)v142 + 4);
              if (!(_DWORD)v148)
                goto LABEL_250;
              v149 = (_QWORD *)(v142[1] + 8);
              v150 = 16 * v148;
              while (*((_DWORD *)v149 - 2) != 19)
              {
                v149 += 2;
                v150 -= 16;
                if (!v150)
                  goto LABEL_250;
              }
              if (!*v149)
                goto LABEL_250;
LABEL_247:
              v475 = v121[6];
              if (v475)
                sub_1C614F72C((uint64_t)v452, &v475, (uint64_t)&v498);
              v170 = (uint64_t)*(v121 - 4);
              *(_QWORD *)&v498 = v460;
              *((_QWORD *)&v498 + 1) = v454;
              sub_1C576D2D8(v170, (uint64_t (*)(_QWORD, _QWORD))sub_1C576DC68, (uint64_t)&v498);
              goto LABEL_250;
            }
            v173 = 0;
            goto LABEL_259;
          }
LABEL_250:
          v52 = (_QWORD *)v52[1];
          if (v52 == v11)
            goto LABEL_82;
        }
        v171 = 0;
LABEL_255:
        v128 = sub_1C541AB24(v123 + 2480, (uint64_t)&v498, (uint64_t *)&v498, v171);
        v172 = v498;
        v128[4] = 0;
        v128[3] = 0;
        *v128 = v172;
        v128[1] = v128 + 3;
        v128[2] = 0x100000000;
        goto LABEL_203;
      }
    }
  }
  llvm::getUniqueModuleId(a5, (uint64_t)&__p);
  if (v469 >= 0)
    v40 = v469 & 0x7F;
  else
    v40 = v468;
  if (!v40)
  {
    v33 = 0;
    v36 = a1;
    v34 = a2;
    if (v469 < 0)
      goto LABEL_54;
    goto LABEL_38;
  }
  if (v469 >= 0)
    v42 = &__p;
  else
    v42 = __p;
  sub_1C576CEA0((uint64_t)a5, (uint64_t)v42, v40);
  v475 = a5;
  v476 = 0;
  LOBYTE(v477) = 0;
  v478 = 0;
  v479 = 0;
  v480 = 0;
  v481 = 0;
  v483 = 0;
  v482 = 0;
  v484 = 0;
  llvm::ProfileSummaryInfo::refresh((unsigned __int8 *)&v475);
  v464 = 0;
  v461[0] = &off_1E817CF08;
  v462 = v461;
  llvm::buildModuleSummaryIndex((uint64_t)a5, (uint64_t)v463, (uint64_t)&v475, v461, (uint64_t)&v498);
  v33 = operator new();
  sub_1C61A8F54(v33, (uint64_t)&v498);
  sub_1C61A8910((uint64_t)&v498);
  v36 = a1;
  v34 = a2;
  if (v462 == v461)
  {
    v43 = (void (**)(void))(v461[0] + 32);
LABEL_68:
    (*v43)();
  }
  else if (v462)
  {
    v43 = (void (**)(void))(*v462 + 40);
    goto LABEL_68;
  }
  if (v464 == v463)
  {
    v49 = (void (**)(void))(v463[0] + 32);
LABEL_73:
    (*v49)();
  }
  else if (v464)
  {
    v49 = (void (**)(void))(*v464 + 40);
    goto LABEL_73;
  }
  MEMORY[0x1CAA32FB4](v482, 8);
  v50 = v476;
  v476 = 0;
  if (v50)
    sub_1C4E5DDC4((uint64_t)&v476, v50);
  a6 = (_QWORD *)v33;
  if (v469 < 0)
LABEL_54:
    operator delete(__p);
LABEL_38:
  v498 = 0uLL;
  LODWORD(v499) = 0;
  llvm::WriteBitcodeToFile(v35, v36, 0, a6, 1, (uint64_t)&v498);
  if (v34 && a6)
    llvm::writeThinLinkBitcodeToFile(v35, v34, a6, (uint64_t)&v498);
  if (v33)
  {
    v41 = sub_1C61A8910(v33);
    MEMORY[0x1CAA32FC0](v41, 0x10B0C4007EAB999);
  }
}

uint64_t sub_1C576CC30()
{
  uint64_t v0;
  unint64_t v2;
  unint64_t v4;
  _QWORD *v5;
  _QWORD v6[2];

  v0 = operator new();
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = &unk_1ED810188;
  *(_DWORD *)(v0 + 24) = 4;
  *(_QWORD *)v0 = &off_1E817CE28;
  *(_QWORD *)(v0 + 32) = llvm::dbgs((llvm *)v0);
  *(_QWORD *)(v0 + 40) = 0;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v4 = qword_1ED830BC0[0];
  v2 = atomic_load(&qword_1ED810190);
  if (v2 != -1)
  {
    v6[0] = sub_1C576A720;
    v6[1] = &v4;
    v5 = v6;
    std::__call_once(&qword_1ED810190, &v5, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return v0;
}

void sub_1C576CD1C(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

const char *sub_1C576CD40()
{
  return "ThinLTO Bitcode Writer";
}

void *sub_1C576CD50(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 160) = 1;
  sub_1C4771E64(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1C4771E64(a2, a2, (uint64_t)&llvm::ModuleSummaryIndexWrapperPass::ID);
  sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
  return sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
}

uint64_t sub_1C576CDBC(uint64_t a1, const llvm::Module *a2)
{
  void **v4;
  void *v5;
  _QWORD *v6;
  llvm::raw_ostream *v7;
  llvm::raw_ostream *v8;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  _BYTE v17[56];
  char v18;

  v4 = **(void ****)(a1 + 8);
  do
  {
    v5 = *v4;
    v4 += 2;
  }
  while (v5 != &llvm::ModuleSummaryIndexWrapperPass::ID);
  v6 = (_QWORD *)((*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v4 - 1) + 96))(*(v4 - 1), &llvm::ModuleSummaryIndexWrapperPass::ID)+ 32);
  v7 = *(llvm::raw_ostream **)(a1 + 32);
  v8 = *(llvm::raw_ostream **)(a1 + 40);
  v10 = a1;
  v11 = 0;
  v16 = 0;
  v17[0] = 0;
  v18 = 0;
  sub_1C576A7CC(v7, v8, (uint64_t)sub_1C5674758, (uint64_t)&v10, a2, v6);
  if (v18)
  {
    llvm::AAResults::~AAResults((llvm::AAResults *)v17);
    v18 = 0;
  }
  if (v16)
  {
    if (v15 != v14)
      free(v15);
    if (v13 != v12)
      free(v13);
  }
  return 1;
}

uint64_t sub_1C576CEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unsigned int *v13;
  BOOL v14;
  llvm::Value *v15;
  unsigned int **v16;
  unsigned int **v17;
  unsigned int *Impl;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  __int32 v30;
  int32x2_t v31;
  __int32 v32;
  unsigned int v33;
  uint64_t v34;
  llvm::Value *v35;
  int v36;
  unsigned int v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t i;
  uint64_t j;
  uint64_t k;
  char *v46;
  int32x2_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  _QWORD v53[2];
  int v54;
  _QWORD v55[2];
  uint64_t v56[2];
  void *v57;
  uint64_t v58;
  _QWORD v59[3];

  v59[1] = *MEMORY[0x1E0C80C00];
  v55[0] = a2;
  v55[1] = a3;
  v53[0] = 0;
  v53[1] = 0;
  v54 = 0;
  v52[0] = v53;
  v52[1] = v55;
  v52[2] = a1;
  v4 = sub_1C4FB7E80(*(uint64_t **)(a1 + 112), "llvm.type.test", 0xEuLL);
  if (v4)
  {
    if (!*(_BYTE *)(v4 + 16))
    {
      for (i = *(_QWORD *)(v4 + 8); i; i = *(_QWORD *)(i + 8))
        sub_1C576E2E0((uint64_t)v52, *(_QWORD *)(i + 24), 1u);
    }
  }
  v5 = sub_1C4FB7E80(*(uint64_t **)(a1 + 112), "llvm.type.checked.load", 0x16uLL);
  if (v5)
  {
    if (!*(_BYTE *)(v5 + 16))
    {
      for (j = *(_QWORD *)(v5 + 8); j; j = *(_QWORD *)(j + 8))
        sub_1C576E2E0((uint64_t)v52, *(_QWORD *)(j + 24), 2u);
    }
  }
  v6 = sub_1C4FB7E80(*(uint64_t **)(a1 + 112), "llvm.type.checked.load.relative", 0x1FuLL);
  if (v6)
  {
    if (!*(_BYTE *)(v6 + 16))
    {
      for (k = *(_QWORD *)(v6 + 8); k; k = *(_QWORD *)(k + 8))
        sub_1C576E2E0((uint64_t)v52, *(_QWORD *)(k + 24), 2u);
    }
  }
  v7 = a1 + 24;
  v8 = *(_QWORD *)(a1 + 32);
  v9 = a1 + 8;
  v10 = *(_QWORD *)(a1 + 16);
  v48 = v8;
  v49 = v10;
  v50 = a1 + 24;
  v51 = a1 + 8;
  while (1)
  {
    if (v8 == v7 && v10 == v9)
    {
      v11 = v50 == v7 && v51 == v9;
      if (v11)
        return MEMORY[0x1CAA32FB4](v53[0], 8);
    }
    v12 = 0;
    do
    {
      v13 = (unsigned int *)(*(uint64_t (**)(uint64_t *))((char *)&off_1E817CEB8 + v12))(&v48);
      if (v13)
        v14 = 1;
      else
        v14 = v12 == 16;
      v12 += 16;
    }
    while (!v14);
    v15 = (llvm::Value *)v13;
    v57 = v59;
    v58 = 0x100000000;
    llvm::Value::getMetadata(v13, 19, (uint64_t)&v57);
    if ((*((_BYTE *)v15 + 23) & 0x20) != 0)
    {
      v27 = ***(_QWORD ***)v15 + 2480;
      v56[0] = (uint64_t)v15;
      v28 = sub_1C541AA4C(v27, v56);
      llvm::MDAttachments::erase((llvm::MDAttachments *)(v28 + 1), 19);
      if (!*((_DWORD *)v28 + 4))
      {
        v29 = *((_DWORD *)v15 + 5);
        if ((v29 & 0x20000000) != 0)
        {
          v47 = ***(int32x2_t ****)v15;
          v30 = v47[312].i32[0];
          if (v30)
          {
            v31 = v47[310];
            v32 = v30 - 1;
            v33 = v32 & ((v15 >> 4) ^ (v15 >> 9));
            v34 = *(_QWORD *)&v31 + 40 * v33;
            v35 = *(llvm::Value **)v34;
            if (*(llvm::Value **)v34 == v15)
            {
LABEL_43:
              v38 = *(char **)(v34 + 8);
              v39 = *(unsigned int *)(v34 + 16);
              if ((_DWORD)v39)
              {
                v46 = v38 - 8;
                v40 = 16 * v39;
                do
                {
                  v41 = *(unsigned __int8 **)&v46[v40];
                  if (v41)
                    llvm::MetadataTracking::untrack((uint64_t)&v46[v40], v41);
                  v40 -= 16;
                }
                while (v40);
                v38 = *(char **)(v34 + 8);
              }
              if (v38 != (char *)(v34 + 24))
                free(v38);
              *(_QWORD *)v34 = -8192;
              v47[311] = vadd_s32(v47[311], (int32x2_t)0x1FFFFFFFFLL);
              v29 = *((_DWORD *)v15 + 5);
            }
            else
            {
              v36 = 1;
              while (v35 != (llvm::Value *)-4096)
              {
                v37 = v33 + v36++;
                v33 = v37 & v32;
                v34 = *(_QWORD *)&v31 + 40 * v33;
                v35 = *(llvm::Value **)v34;
                if (*(llvm::Value **)v34 == v15)
                  goto LABEL_43;
              }
            }
          }
          *((_DWORD *)v15 + 5) = v29 & 0xDFFFFFFF;
        }
      }
    }
    v16 = (unsigned int **)v57;
    v17 = (unsigned int **)((char *)v57 + 8 * v58);
    if ((_DWORD)v58)
    {
      do
      {
        Impl = *v16;
        if (v54)
        {
          v19 = (uint64_t *)&Impl[-2 * Impl[2]];
          v20 = v19[1];
          v21 = ((v20 >> 4) ^ (v20 >> 9)) & (v54 - 1);
          v22 = *(_QWORD *)(v53[0] + 16 * v21);
          if (v20 == v22)
          {
LABEL_21:
            if ((_DWORD)v21 != v54)
            {
              v23 = *(uint64_t **)a1;
              v56[0] = *v19;
              v56[1] = *(_QWORD *)(v53[0] + 16 * v21 + 8);
              Impl = (unsigned int *)llvm::MDTuple::getImpl(v23, v56, 2, 0, 1);
            }
          }
          else
          {
            v24 = 1;
            while (v22 != -4096)
            {
              v25 = v21 + v24++;
              v21 = v25 & (v54 - 1);
              v22 = *(_QWORD *)(v53[0] + 16 * v21);
              if (v20 == v22)
                goto LABEL_21;
            }
          }
        }
        llvm::Value::addMetadata(v15, 19, (llvm::MDNode *)Impl);
        ++v16;
      }
      while (v16 != v17);
      v16 = (unsigned int **)v57;
    }
    if (v16 != v59)
      free(v16);
    v26 = 0;
    do
    {
      if (((*(uint64_t (**)(uint64_t *))((char *)&off_1E817CED8 + v26))(&v48) & 1) != 0)
        break;
      v11 = v26 == 16;
      v26 += 16;
    }
    while (!v11);
    v8 = v48;
    v10 = v49;
  }
}

uint64_t sub_1C576D2D8(uint64_t result, uint64_t (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t (*v4)(_QWORD, _QWORD);
  int v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2;
  if (result && !*(_BYTE *)(result + 16))
    return a2(a3, result);
  if (*(unsigned __int8 *)(result + 16) >= 4u)
  {
    v5 = *(_DWORD *)(result + 20);
    if ((v5 & 0x40000000) != 0)
    {
      v7 = *(uint64_t **)(result - 8);
      v6 = v5 & 0x7FFFFFF;
      if (!v6)
        return result;
    }
    else
    {
      v6 = v5 & 0x7FFFFFF;
      v7 = (uint64_t *)(result - 32 * v6);
      if (!v6)
        return result;
    }
    v8 = 32 * v6;
    do
    {
      v9 = *v7;
      v7 += 4;
      result = sub_1C576D2D8(v9, v4, a3);
      v4 = a2;
      v8 -= 32;
    }
    while (v8);
  }
  return result;
}

void sub_1C576D380(uint64_t a1, uint64_t **a2, int a3)
{
  char *v5;
  char *v6;
  uint64_t ***v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ****v12;
  uint64_t ***v13;
  int v14;
  int v15;
  uint64_t ***v16;
  unsigned __int8 *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE v27[32];
  void *v28;
  uint64_t v29;
  _QWORD v30[5];

  v30[4] = *MEMORY[0x1E0C80C00];
  v28 = v30;
  v29 = 0x400000000;
  v25 = v27;
  v26 = 0x400000000;
  llvm::collectUsedGlobalVariables(a1, (uint64_t)&v28, a3);
  if ((_DWORD)v29)
  {
    v5 = (char *)v28;
    v6 = (char *)v28 + 8 * v29;
    while (1)
    {
      v7 = *(uint64_t ****)v5;
      if ((*(_BYTE *)(*(_QWORD *)v5 + 23) & 0x10) != 0)
        break;
      v18 = 0;
      v17 = (unsigned __int8 *)&byte_1C871356D;
LABEL_12:
      v20 = sub_1C4FB7E80(a2[14], v17, v18);
      if (v20)
      {
        v21 = v20;
        if (*(_BYTE *)(v20 + 16))
        {
          if (*(_BYTE *)(v20 + 16) != 3 || (*(_DWORD *)(v20 + 20) & 0x7FFFFFF) != 0)
            goto LABEL_19;
        }
        else if (*(_QWORD *)(v20 + 72) != v20 + 72 || (*(_BYTE *)(v20 + 34) & 0x80) != 0)
        {
LABEL_19:
          v22 = v26;
          if (v26 >= (unint64_t)HIDWORD(v26))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v25, (uint64_t)v27, v26 + 1, 8);
            v22 = v26;
          }
          *((_QWORD *)v25 + v22) = v21;
          LODWORD(v26) = v26 + 1;
        }
      }
      v5 += 8;
      if (v5 == v6)
        goto LABEL_25;
    }
    v8 = ***v7;
    v9 = *(_QWORD *)(v8 + 152);
    v10 = *(unsigned int *)(v8 + 168);
    if ((_DWORD)v10)
    {
      LODWORD(v11) = (v10 - 1) & ((v7 >> 4) ^ (v7 >> 9));
      v12 = (uint64_t ****)(v9 + 16 * v11);
      v13 = *v12;
      if (*v12 == v7)
      {
LABEL_11:
        v16 = v12[1];
        v19 = (unint64_t)*v16;
        v17 = (unsigned __int8 *)(v16 + 2);
        v18 = v19;
        goto LABEL_12;
      }
      v14 = 1;
      while (v13 != (uint64_t ***)-4096)
      {
        v15 = v11 + v14++;
        v11 = v15 & (v10 - 1);
        v13 = *(uint64_t ****)(v9 + 16 * v11);
        if (v13 == v7)
        {
          v12 = (uint64_t ****)(v9 + 16 * v11);
          goto LABEL_11;
        }
      }
    }
    v12 = (uint64_t ****)(v9 + 16 * v10);
    goto LABEL_11;
  }
LABEL_25:
  if (a3)
    v23 = "llvm.compiler.used";
  else
    v23 = "llvm.used";
  if (a3)
    v24 = 18;
  else
    v24 = 9;
  sub_1C5F50CB4(a2, (unsigned __int8 *)v23, v24, (llvm::UndefValue **)v25, v26);
  if (v25 != v27)
    free(v25);
  if (v28 != v30)
    free(v28);
}

uint64_t sub_1C576D5A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  unsigned int *v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  unsigned int *v22;
  int v23;
  int v24;
  _QWORD *v25;
  unint64_t v26;
  unsigned __int8 *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **p_dst;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t AliaseeObject;
  std::string::size_type v41;
  unsigned int v42;
  unsigned int v43;
  int hasExternalWeakLinkage;
  unsigned int v45;
  int v46;
  unsigned int v47;
  void **v48;
  unint64_t v49;
  int v50;
  BOOL v51;
  std::string *v52;
  std::string::size_type v53;
  const std::string::value_type *v54;
  std::string::size_type v55;
  std::string *v56;
  std::string::size_type v57;
  std::string *v58;
  std::string::size_type v59;
  void **v60;
  std::string::size_type v61;
  unsigned __int8 *v62;
  size_t v63;
  _QWORD *v64;
  _QWORD *v65;
  BOOL v66;
  uint64_t v67;
  llvm::GlobalObject *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  _QWORD *v77;
  _QWORD *v79;
  _QWORD *v80;
  std::string v81;
  std::string v82;
  std::string v83;
  void *__p[2];
  uint64_t v85;
  uint64_t v86;
  __int16 v87;
  void *v88;
  size_t v89;
  char v90;
  void **__dst;
  unint64_t v92;
  int64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  int v104;

  v102 = 0;
  v103 = 0;
  v104 = 0;
  v8 = a1 + 3;
  v9 = (_QWORD *)a1[4];
  v10 = a1 + 1;
  v11 = (_QWORD *)a1[2];
  v12 = a1 + 5;
  v13 = (_QWORD *)a1[6];
  v77 = a1 + 3;
  v14 = (_QWORD *)a1[8];
  v94 = v9;
  v95 = v11;
  v96 = v13;
  v97 = v14;
  v98 = a1 + 3;
  v99 = a1 + 1;
  v100 = a1 + 5;
  v101 = a1 + 7;
  v79 = a1 + 5;
  v80 = a1 + 7;
  while (v9 != v8 || v11 != v10 || v13 != v12 || v14 != v80 || v98 != v8 || v99 != v10 || v100 != v12 || v101 != v80)
  {
    v15 = (unsigned int *)sub_1C52C3168((uint64_t)&v94);
    if ((v15[8] & 0xF) - 7 > 1)
      goto LABEL_88;
    v16 = v15;
    if ((*((_BYTE *)v15 + 23) & 0x10) == 0)
    {
      v26 = 0;
      v27 = (unsigned __int8 *)&byte_1C871356D;
      goto LABEL_20;
    }
    v17 = ***(_QWORD ***)v15;
    v18 = *(_QWORD *)(v17 + 152);
    v19 = *(unsigned int *)(v17 + 168);
    if (!(_DWORD)v19)
      goto LABEL_18;
    LODWORD(v20) = (v19 - 1) & ((v15 >> 4) ^ (v15 >> 9));
    v21 = (void **)(v18 + 16 * v20);
    v22 = (unsigned int *)*v21;
    if (*v21 != v15)
    {
      v23 = 1;
      while (v22 != (unsigned int *)-4096)
      {
        v24 = v20 + v23++;
        v20 = v24 & (v19 - 1);
        v22 = *(unsigned int **)(v18 + 16 * v20);
        if (v22 == v15)
        {
          v21 = (void **)(v18 + 16 * v20);
          goto LABEL_19;
        }
      }
LABEL_18:
      v21 = (void **)(v18 + 16 * v19);
    }
LABEL_19:
    v25 = v21[1];
    v28 = *v25;
    v27 = (unsigned __int8 *)(v25 + 2);
    v26 = v28;
LABEL_20:
    __p[0] = v15;
    __dst = 0;
    v29 = 0;
    if ((sub_1C56CA514(a5, __p, &__dst) & 1) == 0)
    {
      v30 = sub_1C4FB7E80(*(uint64_t **)(a2 + 112), v27, v26);
      if (!v30)
        goto LABEL_88;
      v29 = v30;
      llvm::Constant::removeDeadConstantUsers(v30);
      if (!*(_QWORD *)(v29 + 8))
      {
        llvm::GlobalValue::eraseFromParent((llvm::GlobalValue *)v29);
        goto LABEL_88;
      }
    }
    if (v26 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    if (v26 >= 0x17)
    {
      v32 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v26 | 7) != 0x17)
        v32 = v26 | 7;
      v33 = v10;
      v34 = a3;
      v35 = a4;
      v36 = a5;
      v37 = v32 + 1;
      p_dst = (void **)operator new(v32 + 1);
      v38 = v37 | 0x8000000000000000;
      a5 = v36;
      a4 = v35;
      a3 = v34;
      v10 = v33;
      v8 = v77;
      v92 = v26;
      v93 = v38;
      __dst = p_dst;
LABEL_30:
      memmove(p_dst, v27, v26);
      goto LABEL_31;
    }
    HIBYTE(v93) = v26;
    p_dst = (void **)&__dst;
    if (v26)
      goto LABEL_30;
LABEL_31:
    *((_BYTE *)p_dst + v26) = 0;
    __p[0] = v27;
    __p[1] = (void *)v26;
    v85 = a3;
    v86 = a4;
    v87 = 1285;
    llvm::Twine::str((llvm::Twine *)__p, &v88);
    v83.__r_.__value_.__r.__words[0] = 0;
    v39 = *((unsigned __int8 *)v16 + 16);
    if (v39 != 2)
    {
      AliaseeObject = (uint64_t)v16;
      if (v39 != 1 || (AliaseeObject = llvm::GlobalAlias::getAliaseeObject((llvm::GlobalAlias *)v16)) != 0)
      {
        v41 = *(_QWORD *)(AliaseeObject + 48);
        v83.__r_.__value_.__r.__words[0] = v41;
        if (v41)
        {
          if (**(_QWORD **)v41 == v26 && (!v26 || !memcmp((const void *)(*(_QWORD *)v41 + 72), v27, v26)))
          {
            if (v90 >= 0)
              v62 = (unsigned __int8 *)&v88;
            else
              v62 = (unsigned __int8 *)v88;
            if (v90 >= 0)
              v63 = v90 & 0x7F;
            else
              v63 = v89;
            v82.__r_.__value_.__r.__words[0] = (std::string::size_type)llvm::Module::getOrInsertComdat((uint64_t)a1, v62, v63);
            sub_1C62A5C7C((uint64_t)&v102, &v83, &v82, (uint64_t)__p);
          }
        }
      }
    }
    v87 = 260;
    __p[0] = &v88;
    llvm::Value::setName((uint64_t ***)v16, (uint64_t)__p);
    v42 = v16[8];
    v43 = v42 & 0xFFFFFFF0;
    v16[8] = v42 & 0xFFFFFFF0;
    v12 = v79;
    if ((v42 & 0x30) != 0)
    {
      hasExternalWeakLinkage = llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v16);
      v43 = v16[8];
      if (!hasExternalWeakLinkage)
        v43 |= 0x4000u;
    }
    v45 = v43 & 0xFFFFFFCF | 0x10;
    v16[8] = v45;
    if ((v43 & 0xF) - 7 < 2)
      goto LABEL_43;
    if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v16) & 1) == 0)
    {
      v45 = v16[8];
LABEL_43:
      v16[8] = v45 | 0x4000;
    }
    if (v29)
    {
      v87 = 260;
      __p[0] = &v88;
      llvm::Value::setName((uint64_t ***)v29, (uint64_t)__p);
      v46 = *(_DWORD *)(v29 + 32);
      v47 = v46 & 0xFFFFFFCF | 0x10;
      *(_DWORD *)(v29 + 32) = v47;
      if ((v46 & 0xFu) - 7 < 2)
        goto LABEL_48;
      if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v29) & 1) == 0)
      {
        v47 = *(_DWORD *)(v29 + 32);
LABEL_48:
        *(_DWORD *)(v29 + 32) = v47 | 0x4000;
      }
    }
    if (!*((_BYTE *)v16 + 16))
    {
      v48 = __dst;
      if (v93 >= 0)
        v48 = (void **)&__dst;
      v49 = HIBYTE(v93) & 0x7F;
      if (v93 < 0)
        v49 = v92;
      if (v49)
      {
        while (1)
        {
          v50 = *(unsigned __int8 *)v48;
          v51 = (v50 - 48) >= 0xA && (v50 & 0xFFFFFFDF) - 65 >= 0x1A;
          if (v51 && v50 != 95 && v50 != 46)
            break;
          v48 = (void **)((char *)v48 + 1);
          if (!--v49)
            goto LABEL_63;
        }
      }
      else
      {
LABEL_63:
        std::operator+<char>();
        v52 = std::string::append(&v81, ",");
        v53 = v52->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v82.__r_.__value_.__l.__data_ = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
        v82.__r_.__value_.__r.__words[2] = v53;
        v52->__r_.__value_.__l.__size_ = 0;
        v52->__r_.__value_.__r.__words[2] = 0;
        v52->__r_.__value_.__r.__words[0] = 0;
        if (v90 >= 0)
          v54 = (const std::string::value_type *)&v88;
        else
          v54 = (const std::string::value_type *)v88;
        if (v90 >= 0)
          v55 = v90 & 0x7F;
        else
          v55 = v89;
        v56 = std::string::append(&v82, v54, v55);
        v57 = v56->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v83.__r_.__value_.__l.__data_ = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
        v83.__r_.__value_.__r.__words[2] = v57;
        v56->__r_.__value_.__l.__size_ = 0;
        v56->__r_.__value_.__r.__words[2] = 0;
        v56->__r_.__value_.__r.__words[0] = 0;
        v58 = std::string::append(&v83, "\n");
        v59 = v58->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
        v85 = v59;
        v58->__r_.__value_.__l.__size_ = 0;
        v58->__r_.__value_.__r.__words[2] = 0;
        v58->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v83.__r_.__value_.__l.__data_);
        if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v82.__r_.__value_.__l.__data_);
        if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v81.__r_.__value_.__l.__data_);
        if (v85 >= 0)
          v60 = __p;
        else
          v60 = (void **)__p[0];
        if (v85 >= 0)
          v61 = HIBYTE(v85) & 0x7F;
        else
          v61 = (std::string::size_type)__p[1];
        LLVMAppendModuleInlineAsm_0((uint64_t)a1, (const std::string::value_type *)v60, v61);
        if (SHIBYTE(v85) < 0)
          operator delete(__p[0]);
      }
    }
    if (v90 < 0)
      operator delete(v88);
    if (SHIBYTE(v93) < 0)
      operator delete(__dst);
LABEL_88:
    sub_1C52C300C((uint64_t)&v94);
    v9 = v94;
    v11 = v95;
    v13 = v96;
    v14 = v97;
  }
  if ((_DWORD)v103)
  {
    v64 = (_QWORD *)a1[4];
    v65 = (_QWORD *)a1[2];
    v94 = v64;
    v95 = v65;
    v96 = v8;
    v97 = v10;
    while (1)
    {
      if (v64 == v8 && v65 == v10)
      {
        v66 = v96 == v8 && v97 == v10;
        if (v66)
          break;
      }
      v67 = 0;
      do
      {
        v68 = (llvm::GlobalObject *)(*(uint64_t (**)(_QWORD **))((char *)&off_1E817CEB8 + v67))(&v94);
        v67 += 16;
      }
      while (!v68);
      v69 = *((_QWORD *)v68 + 6);
      if (v69 && v104)
      {
        v70 = (v104 - 1) & ((v69 >> 4) ^ (v69 >> 9));
        v71 = *(_QWORD *)(v102 + 16 * v70);
        if (v69 == v71)
        {
LABEL_112:
          if ((_DWORD)v70 != v104)
            llvm::GlobalObject::setComdat(v68, *(llvm::Comdat **)(v102 + 16 * v70 + 8));
        }
        else
        {
          v73 = 1;
          while (v71 != -4096)
          {
            v74 = v70 + v73++;
            v70 = v74 & (v104 - 1);
            v71 = *(_QWORD *)(v102 + 16 * v70);
            if (v69 == v71)
              goto LABEL_112;
          }
        }
      }
      v72 = 0;
      do
      {
        if (((*(uint64_t (**)(_QWORD **))((char *)&off_1E817CED8 + v72))(&v94) & 1) != 0)
          break;
        v66 = v72 == 16;
        v72 += 16;
      }
      while (!v66);
      v64 = v94;
      v65 = v95;
    }
  }
  return MEMORY[0x1CAA32FB4](v102, 8);
}

void sub_1C576DC68(_DWORD **a1, llvm::Function *this)
{
  uint64_t v2;
  BOOL v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  llvm::Function *v16;
  llvm::AAResults *v17;
  uint64_t v18;
  llvm::Function *v19;
  _BYTE v20[31];

  v19 = this;
  v2 = **(_QWORD **)(*((_QWORD *)this + 3) + 16);
  v4 = *(_DWORD *)(v2 + 8) >> 8 <= 0x40u && v2 != 0 && *(_DWORD *)(v2 + 8) == 13;
  if (v4 && *((_QWORD *)this + 12))
  {
    if ((*((_WORD *)this + 9) & 1) != 0)
      llvm::Function::BuildLazyArguments(this);
    v7 = *((_QWORD *)this + 11);
    if (!*(_QWORD *)(v7 + 8))
    {
      v8 = *((_QWORD *)this + 11);
      if ((*((_WORD *)this + 9) & 1) != 0)
      {
        llvm::Function::BuildLazyArguments(this);
        v7 = *((_QWORD *)this + 11);
        if ((*((_WORD *)this + 9) & 1) != 0)
        {
          v18 = *((_QWORD *)this + 11);
          llvm::Function::BuildLazyArguments(this);
          v7 = v18;
        }
        v8 = *((_QWORD *)this + 11);
      }
      v9 = (uint64_t *)(v8 + 40 * *((_QWORD *)this + 12));
      v10 = (uint64_t *)(v7 + 40);
      while (v10 != v9)
      {
        v12 = *v10;
        v10 += 5;
        v11 = v12;
        v13 = *(_DWORD *)(v12 + 8);
        if (*(_DWORD *)(v12 + 8) >> 8 > 0x40u || v11 == 0 || v13 != 13)
          return;
      }
      if (this && *((_BYTE *)this + 16) == 3)
      {
        if ((*((_DWORD *)this + 5) & 0x7FFFFFF) == 0)
          return;
      }
      else if (!*((_BYTE *)this + 16)
             && *((llvm::Function **)this + 9) == (llvm::Function *)((char *)this + 72)
             && (*((_BYTE *)this + 34) & 0x80) == 0)
      {
        return;
      }
      v16 = (llvm::Function *)(*(uint64_t (**)(_QWORD, llvm::Function *))*a1)(*((_QWORD *)*a1 + 1), this);
      if (llvm::computeFunctionBodyMemoryAccess(this, v16, v17) == 4)
        sub_1C6187FB8(a1[1], &v19, (uint64_t)v20);
    }
  }
}

uint64_t sub_1C576DDD0(uint64_t a1, llvm::GlobalValue *this)
{
  uint64_t Comdat;
  uint64_t v5;
  uint64_t result;
  uint64_t ***v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t ****v14;
  uint64_t ***v15;
  uint64_t ****v16;
  int v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t ****v28;
  uint64_t ***v29;
  uint64_t ****v30;
  int v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  unsigned int v41;
  BOOL v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  unsigned int v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;
  BOOL v52;
  unsigned int v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t ****v57;
  uint64_t v58;
  uint64_t ****v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];
  int v65;

  Comdat = llvm::GlobalValue::getComdat((uint64_t)this);
  if (Comdat)
  {
    v37 = *(uint64_t **)a1;
    v63 = 0;
    v64[0] = Comdat;
    if ((sub_1C614F7B0(v37, v64, &v63) & 1) != 0)
      return 1;
  }
  if (this && !*((_BYTE *)this + 16))
  {
    v5 = *(_QWORD *)(a1 + 8);
    v63 = 0;
    v64[0] = (uint64_t)this;
    return sub_1C4A06ED8(v5, v64, &v63);
  }
  v64[0] = 0;
  v64[1] = 0;
  v65 = 0;
  v7 = (uint64_t ***)sub_1C53D5A28((uint64_t)this, (uint64_t)v64);
  MEMORY[0x1CAA32FB4](v64[0], 8);
  if (!v7 || *((_BYTE *)v7 + 16) != 3)
    return 0;
  v8 = v7 >> 4;
  if ((*((_BYTE *)v7 + 23) & 0x20) != 0)
  {
    v9 = ***v7;
    v64[0] = (uint64_t)v7;
    v10 = *(_DWORD *)(v9 + 2496);
    if (v10)
    {
      v11 = *(_QWORD *)(v9 + 2480);
      v12 = v10 - 1;
      v13 = v12 & (v8 ^ (v7 >> 9));
      v14 = (uint64_t ****)(v11 + 40 * v13);
      v15 = *v14;
      if (*v14 == v7)
      {
LABEL_18:
        v20 = *((unsigned int *)v14 + 4);
        if (!(_DWORD)v20)
          goto LABEL_22;
        v21 = v14[1] + 1;
        v22 = 16 * v20;
        while (*((_DWORD *)v21 - 2) != 22)
        {
          v21 += 2;
          v22 -= 16;
          if (!v22)
            goto LABEL_22;
        }
        v38 = *v21;
        if (!v38)
          goto LABEL_22;
        v39 = *(unsigned __int8 **)(v38 - 8 * *(unsigned int *)(v38 + 8));
        if (!v39 || *v39 - 1 > 1)
          goto LABEL_22;
        v40 = *((_QWORD *)v39 + 16);
        v41 = *(unsigned __int8 *)(v40 + 16);
        v42 = v41 > 3 || v41 == 1;
        if (v42 || (*(_BYTE *)(v40 + 23) & 0x20) == 0)
          goto LABEL_22;
        v43 = ***(_QWORD ***)v40;
        v64[0] = v40;
        v44 = *(_DWORD *)(v43 + 2496);
        if (v44)
        {
          v45 = *(_QWORD *)(v43 + 2480);
          v46 = v44 - 1;
          v47 = v46 & ((v40 >> 4) ^ (v40 >> 9));
          v48 = (_QWORD *)(v45 + 40 * v47);
          v49 = *v48;
          if (*v48 == v40)
          {
LABEL_59:
            v54 = *((unsigned int *)v48 + 4);
            if ((_DWORD)v54)
            {
              v55 = (_QWORD *)(v48[1] + 8);
              v56 = 16 * v54;
              while (*((_DWORD *)v55 - 2) != 19)
              {
                v55 += 2;
                v56 -= 16;
                if (!v56)
                  goto LABEL_22;
              }
              if (*v55)
                return 1;
            }
            goto LABEL_22;
          }
          v50 = 0;
          v51 = 1;
          while (v49 != -4096)
          {
            if (v50)
              v52 = 0;
            else
              v52 = v49 == -8192;
            if (v52)
              v50 = v48;
            v53 = v47 + v51++;
            v47 = v53 & v46;
            v48 = (_QWORD *)(v45 + 40 * v47);
            v49 = *v48;
            if (*v48 == v40)
              goto LABEL_59;
          }
          if (v50)
            v61 = v50;
          else
            v61 = v48;
        }
        else
        {
          v61 = 0;
        }
        v48 = sub_1C541AB24(v43 + 2480, (uint64_t)v64, v64, v61);
        v62 = v64[0];
        v48[3] = 0;
        v48[4] = 0;
        *v48 = v62;
        v48[1] = v48 + 3;
        v48[2] = 0x100000000;
        goto LABEL_59;
      }
      v16 = 0;
      v17 = 1;
      while (v15 != (uint64_t ***)-4096)
      {
        if (v16)
          v18 = 0;
        else
          v18 = v15 == (uint64_t ***)-8192;
        if (v18)
          v16 = v14;
        v19 = v13 + v17++;
        v13 = v19 & v12;
        v14 = (uint64_t ****)(v11 + 40 * v13);
        v15 = *v14;
        if (*v14 == v7)
          goto LABEL_18;
      }
      if (v16)
        v57 = v16;
      else
        v57 = v14;
    }
    else
    {
      v57 = 0;
    }
    v14 = (uint64_t ****)sub_1C541AB24(v9 + 2480, (uint64_t)v64, v64, v57);
    v58 = v64[0];
    v14[3] = 0;
    v14[4] = 0;
    *v14 = (uint64_t ***)v58;
    v14[1] = (uint64_t ***)(v14 + 3);
    v14[2] = (uint64_t ***)0x100000000;
    goto LABEL_18;
  }
LABEL_22:
  if ((*((_BYTE *)v7 + 23) & 0x20) == 0)
    return 0;
  v23 = ***v7;
  v64[0] = (uint64_t)v7;
  v24 = *(_DWORD *)(v23 + 2496);
  if (v24)
  {
    v25 = *(_QWORD *)(v23 + 2480);
    v26 = v24 - 1;
    v27 = v26 & (v8 ^ (v7 >> 9));
    v28 = (uint64_t ****)(v25 + 40 * v27);
    v29 = *v28;
    if (*v28 == v7)
      goto LABEL_33;
    v30 = 0;
    v31 = 1;
    while (v29 != (uint64_t ***)-4096)
    {
      if (v30)
        v32 = 0;
      else
        v32 = v29 == (uint64_t ***)-8192;
      if (v32)
        v30 = v28;
      v33 = v27 + v31++;
      v27 = v33 & v26;
      v28 = (uint64_t ****)(v25 + 40 * v27);
      v29 = *v28;
      if (*v28 == v7)
        goto LABEL_33;
    }
    if (v30)
      v59 = v30;
    else
      v59 = v28;
  }
  else
  {
    v59 = 0;
  }
  v28 = (uint64_t ****)sub_1C541AB24(v23 + 2480, (uint64_t)v64, v64, v59);
  v60 = v64[0];
  v28[3] = 0;
  v28[4] = 0;
  *v28 = (uint64_t ***)v60;
  v28[1] = (uint64_t ***)(v28 + 3);
  v28[2] = (uint64_t ***)0x100000000;
LABEL_33:
  v34 = *((unsigned int *)v28 + 4);
  if (!(_DWORD)v34)
    return 0;
  v35 = v28[1] + 1;
  v36 = 16 * v34;
  while (*((_DWORD *)v35 - 2) != 19)
  {
    result = 0;
    v35 += 2;
    v36 -= 16;
    if (!v36)
      return result;
  }
  return *v35 != 0;
}

uint64_t sub_1C576E1C0(uint64_t a1, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *a4, size_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x1E0C80C00];
  result = sub_1C4FB7E80(*(uint64_t **)(*(_QWORD *)a1 + 112), a2, a3);
  if (result && !*(_BYTE *)(result + 16) && *(_QWORD *)(result + 8))
  {
    v11 = *(_QWORD *)(a1 + 8);
    v12 = *(uint64_t **)(a1 + 16);
    v15[0] = llvm::MDString::get(v12, a2, a3);
    v15[1] = llvm::MDString::get(*(uint64_t **)(a1 + 16), a4, a5);
    result = llvm::MDTuple::getImpl(v12, v15, 2, 0, 1);
    v13 = result;
    v14 = *(unsigned int *)(v11 + 8);
    if (v14 >= *(_DWORD *)(v11 + 12))
    {
      result = (uint64_t)llvm::SmallVectorBase<unsigned int>::grow_pod(v11, v11 + 16, v14 + 1, 8);
      LODWORD(v14) = *(_DWORD *)(v11 + 8);
    }
    *(_QWORD *)(*(_QWORD *)v11 + 8 * v14) = v13;
    ++*(_DWORD *)(v11 + 8);
  }
  return result;
}

uint64_t sub_1C576E2E0(uint64_t result, uint64_t a2, unsigned int a3)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int8 *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  __int16 v22;
  void *__p[2];
  char v24;
  unsigned __int8 *v25;

  v3 = *(unsigned __int8 **)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * a3) + 24);
  v25 = v3;
  if (*v3 - 4 <= 0x1E && (v3[1] & 0x7F) == 1)
  {
    v5 = result;
    v6 = a3;
    v7 = sub_1C61B6040(*(uint64_t **)result, &v25);
    v8 = (unsigned __int8 *)v7[1];
    if (!v8)
    {
      v9 = v7;
      v10 = *(uint64_t **)(v5 + 8);
      v12 = *v10;
      v11 = v10[1];
      v21[0] = *(unsigned int *)(*(_QWORD *)v5 + 8);
      v21[2] = v12;
      v21[3] = v11;
      v22 = 1288;
      llvm::Twine::str((llvm::Twine *)v21, __p);
      v13 = v24 >= 0 ? (unsigned __int8 *)__p : (unsigned __int8 *)__p[0];
      v14 = v24 >= 0 ? (void *)(v24 & 0x7F) : __p[1];
      v8 = (unsigned __int8 *)llvm::MDString::get(**(uint64_t ***)(v5 + 16), v13, (size_t)v14);
      v9[1] = v8;
      if (v24 < 0)
      {
        operator delete(__p[0]);
        v8 = (unsigned __int8 *)v9[1];
      }
    }
    result = llvm::MetadataAsValue::get(**(uint64_t ***)(v5 + 16), v8);
    v15 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
    v16 = v15 + 32 * v6;
    if (*(_QWORD *)v16)
    {
      **(_QWORD **)(v16 + 16) = *(_QWORD *)(v16 + 8);
      v17 = *(_QWORD *)(v16 + 8);
      if (v17)
        *(_QWORD *)(v17 + 16) = *(_QWORD *)(v16 + 16);
    }
    *(_QWORD *)v16 = result;
    if (result)
    {
      v19 = *(_QWORD *)(result + 8);
      result += 8;
      v18 = v19;
      v20 = v15 + 32 * v6;
      *(_QWORD *)(v20 + 8) = v19;
      if (v19)
        *(_QWORD *)(v18 + 16) = v20 + 8;
      *(_QWORD *)(v20 + 16) = result;
      *(_QWORD *)result = v16;
    }
  }
  return result;
}

void sub_1C576E454()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C576E468()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E817CF08;
  return result;
}

void sub_1C576E48C(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E817CF08;
}

uint64_t sub_1C576E4A4()
{
  return 0;
}

uint64_t sub_1C576E4AC(uint64_t *a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::AAManager::Key, a2) + 8;
}

uint64_t llvm::wholeprogramdevirt::findLowestOffset(uint64_t a1, uint64_t a2, int a3, unint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD **v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unint64_t v33;
  char *v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  BOOL v40;
  uint64_t v41;
  unsigned int i;
  char *v43;
  unint64_t v44;
  unsigned int v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v49;

  if (a2)
  {
    v5 = a1;
    v49 = a4;
    v6 = 0;
    v7 = 32 * a2;
    v8 = (_QWORD **)(a1 + 8);
    v9 = a1 + 32 * a2;
    do
    {
      v10 = *v8;
      if (a3)
        v11 = *(_QWORD *)(*v10 + 8) - v10[1];
      else
        v11 = v10[1];
      if (v6 <= v11)
        v6 = v11;
      v8 += 4;
      v7 -= 32;
    }
    while (v7);
    v12 = 0;
    v13 = 0;
    v14 = 0;
    do
    {
      v15 = *(_QWORD **)(v5 + 8);
      v16 = (_QWORD *)*v15;
      if (a3)
      {
        v17 = v16[11];
        v18 = v16[12] - v17;
        v19 = v16[1] - v15[1];
      }
      else
      {
        v17 = v16[5];
        v18 = v16[6] - v17;
        v19 = v15[1];
      }
      v20 = v6 - v19;
      v21 = v18 - v20;
      if (v18 > v20)
      {
        v22 = v17 + v20;
        if (v13 >= v12)
        {
          v23 = (v13 - v14) >> 4;
          v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 60)
            abort();
          if ((v12 - v14) >> 3 > v24)
            v24 = (v12 - v14) >> 3;
          if ((unint64_t)(v12 - v14) >= 0x7FFFFFFFFFFFFFF0)
            v25 = 0xFFFFFFFFFFFFFFFLL;
          else
            v25 = v24;
          if (v25)
          {
            if (v25 >> 60)
              sub_1C4764EE4();
            v26 = (char *)operator new(16 * v25);
          }
          else
          {
            v26 = 0;
          }
          v27 = &v26[16 * v23];
          *(_QWORD *)v27 = v22;
          *((_QWORD *)v27 + 1) = v21;
          if (v13 == v14)
          {
            v29 = v13;
            v14 = &v26[16 * v23];
          }
          else
          {
            v28 = &v26[16 * v23];
            do
            {
              *((_OWORD *)v28 - 1) = *((_OWORD *)v13 - 1);
              v28 -= 16;
              v13 -= 16;
            }
            while (v13 != v14);
            v29 = v14;
            v14 = v28;
          }
          v12 = &v26[16 * v25];
          v13 = v27 + 16;
          if (v29)
            operator delete(v29);
        }
        else
        {
          *(_QWORD *)v13 = v22;
          *((_QWORD *)v13 + 1) = v21;
          v13 += 16;
        }
      }
      v5 += 32;
    }
    while (v5 != v9);
    a4 = v49;
  }
  else
  {
    v6 = 0;
    v14 = 0;
    v13 = 0;
  }
  if (a4 != 1)
  {
    if (v14 != v13)
    {
      for (i = 0; ; ++i)
      {
        v43 = v14;
        while (1)
        {
          if (a4 >= 8)
          {
            v44 = *((_QWORD *)v43 + 1);
            if (v44 > i)
              break;
          }
LABEL_61:
          v43 += 16;
          if (v43 == v13)
            goto LABEL_67;
        }
        v45 = 1;
        v46 = i;
        while (!*(_BYTE *)(*(_QWORD *)v43 + v46))
        {
          if (a4 >> 3 > v45)
          {
            v46 = i + v45++;
            if (v44 > v46)
              continue;
          }
          goto LABEL_61;
        }
      }
    }
    i = 0;
LABEL_67:
    v47 = v6 + i;
LABEL_68:
    v41 = 8 * v47;
    if (!v14)
      return v41;
LABEL_69:
    operator delete(v14);
    return v41;
  }
  if (v14 == v13)
  {
    v32 = 0;
LABEL_65:
    v47 = v6 + v32;
    goto LABEL_68;
  }
  v30 = 0;
  do
  {
    v31 = 0;
    v32 = v30;
    v33 = v30;
    v34 = v14;
    do
    {
      if (*((_QWORD *)v34 + 1) > v33)
        v31 |= *(unsigned __int8 *)(*(_QWORD *)v34 + v33);
      v34 += 16;
    }
    while (v34 != v13);
    v30 = v32 + 1;
  }
  while (v31 == 255);
  v35 = v31 ^ 0xFF;
  if ((v35 & 1) != 0)
    goto LABEL_65;
  v36 = 0;
  v37 = 4;
  v38 = 15;
  do
  {
    if ((v35 & v38) != 0)
      v39 = 0;
    else
      v39 = v37;
    v35 >>= v39;
    v36 |= v39;
    v38 >>= v37 >> 1;
    v40 = v37 >= 2;
    v37 >>= 1;
  }
  while (v40);
  v41 = 8 * (v6 + v33) + v36;
  if (v14)
    goto LABEL_69;
  return v41;
}

uint64_t llvm::wholeprogramdevirt::VirtualCallTarget::VirtualCallTarget(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_WORD *)(result + 24) = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + 272);
  return result;
}

{
  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_WORD *)(result + 24) = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + 272);
  return result;
}

void llvm::initializeWholeProgramDevirtPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED833758);
  if (v2 != -1)
  {
    v5[0] = sub_1C576E858;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED833758, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

uint64_t sub_1C576E858(uint64_t a1)
{
  uint64_t v2;

  llvm::initializeAssumptionCacheTrackerPass(a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass(a1);
  llvm::initializeDominatorTreeWrapperPassPass(a1);
  llvm::initializeTargetTransformInfoWrapperPassPass(a1);
  v2 = operator new();
  *(_QWORD *)v2 = "Whole program devirtualization";
  *(_QWORD *)(v2 + 8) = 30;
  *(_QWORD *)(v2 + 16) = "wholeprogramdevirt";
  *(_QWORD *)(v2 + 24) = 18;
  *(_QWORD *)(v2 + 32) = &unk_1EF8F7158;
  *(_WORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 42) = 0;
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = sub_1C5774CF8;
  llvm::PassRegistry::registerPass(a1, (_QWORD *)v2, 1);
  return v2;
}

uint64_t llvm::createWholeProgramDevirtPass(llvm *this, llvm::ModuleSummaryIndex *a2, const llvm::ModuleSummaryIndex *a3)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v9;
  _QWORD *v10;
  _QWORD v11[2];

  v5 = operator new();
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = &unk_1EF8F7158;
  *(_DWORD *)(v5 + 24) = 4;
  *(_QWORD *)v5 = &off_1E817D048;
  *(_BYTE *)(v5 + 28) = 0;
  *(_QWORD *)(v5 + 32) = this;
  *(_QWORD *)(v5 + 40) = a2;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v9 = qword_1ED830BC0[0];
  v7 = atomic_load(&qword_1ED833758);
  if (v7 != -1)
  {
    v11[0] = sub_1C576E858;
    v11[1] = &v9;
    v10 = v11;
    std::__call_once(&qword_1ED833758, &v10, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return v5;
}

uint64_t sub_1C576E9FC(llvm::LLVMContext **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  llvm::ModuleSummaryIndex *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  std::string *v21;
  void *v22;
  char v23;
  const char *v24;
  const char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  std::string::size_type v32;
  std::string *v33;
  void *v34;
  char v35;
  unint64_t v36;
  uint64_t *v37;
  char *v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t *v42;
  const char *v43;
  const std::error_category *v44;
  _QWORD *v45;
  std::string *v46;
  uint64_t v47;
  uint64_t *v48;
  const char *v49;
  const std::error_category *v50;
  _QWORD *v51;
  uint64_t (***v52)();
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  const std::error_category *v67;
  uint64_t (***v68)();
  uint64_t v69;
  const char *v70;
  std::string::size_type v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  void *v76;
  _BYTE v77[15];
  char v78;
  uint64_t (**v79)();
  int v80;
  uint64_t (***v81)();
  _QWORD v82[2];
  void *__p;
  _BYTE v84[15];
  char v85;
  uint64_t (**v86)();
  int v87;
  uint64_t (***v88)();
  std::string v89;
  int v90;
  void *v91;
  uint64_t v92;
  _OWORD v93[3];
  __int128 v94;
  __int128 v95;
  const char *v96;
  const std::error_category *v97;
  _QWORD v98[4];

  v98[2] = *MEMORY[0x1E0C80C00];
  v14 = (llvm::ModuleSummaryIndex *)operator new();
  sub_1C61A7328((uint64_t)v14, 0, 0);
  v15 = qword_1ED810478;
  if (byte_1ED810487 >= 0)
    v15 = byte_1ED810487 & 0x7F;
  if (v15)
  {
    std::operator+<char>();
    v21 = std::string::append(&v89, ": ");
    v22 = (void *)v21->__r_.__value_.__r.__words[0];
    v98[0] = v21->__r_.__value_.__l.__size_;
    *(_QWORD *)((char *)v98 + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
    v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    v76 = v22;
    *(_QWORD *)v77 = v98[0];
    *(_QWORD *)&v77[7] = *(_QWORD *)((char *)v98 + 7);
    v78 = v23;
    v98[0] = 0;
    *(_QWORD *)((char *)v98 + 7) = 0;
    v79 = &off_1E817B350;
    v80 = 1;
    v81 = &v79;
    if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v89.__r_.__value_.__l.__data_);
    LOWORD(v91) = 260;
    v89.__r_.__value_.__r.__words[0] = (std::string::size_type)&qword_1ED810470;
    sub_1C5E1F6CC((unsigned __int8 *)&v89, 0xFFFFFFFFFFFFFFFFLL, 0, 0, 1, 0, (uint64_t)&__p);
    sub_1C570E564((uint64_t)&__p, (uint64_t)&v96);
    v24 = 0;
    if ((v97 & 1) != 0)
    {
      v24 = v96;
      v96 = 0;
    }
    v75 = v24;
    sub_1C570E600((uint64_t)&v76, (uint64_t *)&v75);
    if (v75)
      (*(void (**)(const char *))(*(_QWORD *)v75 + 8))(v75);
    v25 = v96;
    v96 = 0;
    if ((v84[8] & 1) == 0)
    {
      v26 = __p;
      __p = 0;
      if (v26)
        (*(void (**)(void *))(*(_QWORD *)v26 + 8))(v26);
    }
    v27 = *(_QWORD *)v25;
    v28 = *((_QWORD *)v25 + 2) - *((_QWORD *)v25 + 1);
    *(_QWORD *)&v72 = *((_QWORD *)v25 + 1);
    *((_QWORD *)&v72 + 1) = v28;
    v73 = (*(uint64_t (**)(const char *))(v27 + 16))(v25);
    v74 = v29;
    llvm::getModuleSummaryIndex(&v72, (uint64_t)&__p);
    v30 = (char *)__p;
    __p = 0;
    v70 = v25;
    if ((v84[0] & 1) != 0)
    {
      v96 = v30;
      sub_1C4D62BD4((char **)&v96, &v89.__r_.__value_.__l.__data_);
      if (v96)
        (*(void (**)(const char *))(*(_QWORD *)v96 + 8))(v96);
      llvm::yaml::Input::Input((uint64_t)&v89, *((_QWORD *)v25 + 1), *((_QWORD *)v25 + 2) - *((_QWORD *)v25 + 1), 0, 0, 0);
      llvm::yaml::Input::setCurrentDocument((llvm::yaml::Stream **)&v89);
      (*(void (**)(std::string *))(v89.__r_.__value_.__r.__words[0] + 104))(&v89);
      sub_1C6299794((uint64_t *)&v89, (uint64_t)v14);
      (*(void (**)(std::string *))(v89.__r_.__value_.__r.__words[0] + 112))(&v89);
      v54 = *((_QWORD *)&v94 + 1);
      if (DWORD2(v94))
      {
        v55 = v95;
        v56 = operator new();
        *(_QWORD *)v56 = &off_1E81A0D28;
        *(_QWORD *)(v56 + 8) = v54;
        *(_QWORD *)(v56 + 16) = v55;
      }
      else
      {
        v56 = 0;
      }
      v96 = (const char *)v56;
      sub_1C570E600((uint64_t)&v76, (uint64_t *)&v96);
      if (v96)
        (*(void (**)(const char *))(*(_QWORD *)v96 + 8))(v96);
      llvm::yaml::Input::~Input((llvm::yaml::Input *)&v89);
    }
    else
    {
      v31 = sub_1C61A8910((uint64_t)v14);
      MEMORY[0x1CAA32FC0](v31, 0x10B0C4007EAB999);
      if (dword_1ED810640 == 1)
        goto LABEL_27;
      v57 = *((unsigned int *)v30 + 8);
      if (!(_DWORD)v57)
        goto LABEL_87;
      v58 = *((_QWORD *)v30 + 3);
      v59 = 1;
      v60 = 1113648857;
      while (1)
      {
        v61 = v60 & (v57 - 1);
        v62 = *(_QWORD **)(v58 + 8 * v61);
        if (v62 != (_QWORD *)-8)
        {
          if (!v62)
            goto LABEL_87;
          if (*(_DWORD *)(v58 + 8 * v57 + 8 + 4 * v61) == 1113648857 && *v62 == 13)
          {
            v63 = (_QWORD *)((char *)v62 + *((unsigned int *)v30 + 11));
            v64 = *v63;
            v65 = *(uint64_t *)((char *)v63 + 5);
            if (v64 == 0x72616C756765525BLL && v65 == 0x5D4F544C2072616CLL)
              break;
          }
        }
        v60 = v59 + v61;
        ++v59;
      }
      if ((_DWORD)v61 != -1 && (int)v61 != v57)
      {
LABEL_27:
        v32 = 0;
      }
      else
      {
LABEL_87:
        v67 = std::generic_category();
        v89.__r_.__value_.__r.__words[0] = 22;
        v89.__r_.__value_.__l.__size_ = (std::string::size_type)v67;
        v96 = "combined summary should contain Regular LTO module";
        sub_1C5DF1730((_BYTE **)&v96, (uint64_t *)&v89, &v71);
        v32 = v71;
      }
      v89.__r_.__value_.__r.__words[0] = v32;
      v71 = 0;
      sub_1C570E600((uint64_t)&v76, (uint64_t *)&v89);
      if (v89.__r_.__value_.__r.__words[0])
        (*(void (**)(std::string::size_type))(*(_QWORD *)v89.__r_.__value_.__l.__data_ + 8))(v89.__r_.__value_.__r.__words[0]);
      if (v71)
        (*(void (**)(std::string::size_type))(*(_QWORD *)v71 + 8))(v71);
      v14 = (llvm::ModuleSummaryIndex *)v30;
    }
    sub_1C6292A90((uint64_t)&__p);
    (*(void (**)(const char *))(*(_QWORD *)v70 + 8))(v70);
    v68 = v81;
    if (v81 == &v79)
    {
      v69 = 4;
      v68 = &v79;
    }
    else
    {
      if (!v81)
        goto LABEL_98;
      v69 = 5;
    }
    (*v68)[v69]();
LABEL_98:
    if (v78 < 0)
      operator delete(v76);
  }
  if (dword_1ED810640 == 2)
    v16 = (uint64_t)v14;
  else
    v16 = 0;
  if (dword_1ED810640 == 1)
    v17 = (uint64_t)v14;
  else
    v17 = 0;
  sub_1C576F228((uint64_t)&v89, a1, a2, a3, a4, a5, a6, a7, v16, v17);
  v18 = sub_1C576F48C((uint64_t *)&v89);
  sub_1C5772F10((uint64_t)&v89);
  v19 = byte_1ED81056F & 0x7F;
  if (byte_1ED81056F < 0)
    v19 = qword_1ED810560;
  if (v19)
  {
    std::operator+<char>();
    v33 = std::string::append(&v89, ": ");
    v34 = (void *)v33->__r_.__value_.__r.__words[0];
    v82[0] = v33->__r_.__value_.__l.__size_;
    *(_QWORD *)((char *)v82 + 7) = *(std::string::size_type *)((char *)&v33->__r_.__value_.__r.__words[1] + 7);
    v35 = HIBYTE(v33->__r_.__value_.__r.__words[2]);
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    __p = v34;
    *(_QWORD *)v84 = v82[0];
    *(_QWORD *)&v84[7] = *(_QWORD *)((char *)v82 + 7);
    v85 = v35;
    v82[0] = 0;
    *(_QWORD *)((char *)v82 + 7) = 0;
    v86 = &off_1E817B350;
    v87 = 1;
    v88 = &v86;
    if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v89.__r_.__value_.__l.__data_);
    LODWORD(v96) = 0;
    v97 = std::system_category();
    if (byte_1ED81056F >= 0)
      v36 = byte_1ED81056F & 0x7F;
    else
      v36 = qword_1ED810560;
    if (v36 >= 3
      && (byte_1ED81056F >= 0 ? (v37 = &qword_1ED810558) : (v37 = (uint64_t *)qword_1ED810558),
          (v38 = (char *)v37 + v36, v39 = *(unsigned __int16 *)(v38 - 3),
                                    v40 = *(v38 - 1),
                                    v39 == 25134)
        ? (v41 = v40 == 99)
        : (v41 = 0),
          v41))
    {
      if (byte_1ED81056F >= 0)
        v42 = &qword_1ED810558;
      else
        v42 = (uint64_t *)qword_1ED810558;
      llvm::raw_fd_ostream::raw_fd_ostream((uint64_t)&v89, v42, v36, (uint64_t)&v96, 0);
      v43 = v96;
      if ((_DWORD)v96)
      {
        v44 = v97;
        v45 = (_QWORD *)operator new();
        *v45 = &off_1E81A0D28;
        v45[1] = v43;
        v45[2] = v44;
      }
      else
      {
        v45 = 0;
      }
      v76 = v45;
      sub_1C570E600((uint64_t)&__p, (uint64_t *)&v76);
      if (v76)
        (*(void (**)(void *))(*(_QWORD *)v76 + 8))(v76);
      llvm::writeIndexToFile(v14, (llvm::raw_ostream *)&v89, 0);
      v46 = &v89;
    }
    else
    {
      if (byte_1ED81056F >= 0)
        v48 = &qword_1ED810558;
      else
        v48 = (uint64_t *)qword_1ED810558;
      llvm::raw_fd_ostream::raw_fd_ostream((uint64_t)&v76, v48, v36, (uint64_t)&v96, 3);
      v49 = v96;
      if ((_DWORD)v96)
      {
        v50 = v97;
        v51 = (_QWORD *)operator new();
        *v51 = &off_1E81A0D28;
        v51[1] = v49;
        v51[2] = v50;
      }
      else
      {
        v51 = 0;
      }
      v89.__r_.__value_.__r.__words[0] = (std::string::size_type)v51;
      sub_1C570E600((uint64_t)&__p, (uint64_t *)&v89);
      if (v89.__r_.__value_.__r.__words[0])
        (*(void (**)(std::string::size_type))(*(_QWORD *)v89.__r_.__value_.__l.__data_ + 8))(v89.__r_.__value_.__r.__words[0]);
      v89.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E81A6C18;
      v89.__r_.__value_.__l.__size_ = 0;
      v89.__r_.__value_.__r.__words[2] = (std::string::size_type)&v76;
      v90 = 70;
      v91 = v93;
      v92 = 0x800000000;
      v93[2] = 0u;
      v94 = 0u;
      v95 = 0u;
      sub_1C62996A4((llvm::yaml::Output *)&v89, (uint64_t)v14);
      v89.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1E81A6C18;
      if (v91 != v93)
        free(v91);
      v46 = (std::string *)&v76;
    }
    llvm::raw_fd_ostream::~raw_fd_ostream((llvm::raw_fd_ostream *)v46);
    v52 = v88;
    if (v88 == &v86)
    {
      v53 = 4;
      v52 = &v86;
    }
    else
    {
      if (!v88)
        goto LABEL_72;
      v53 = 5;
    }
    (*v52)[v53]();
LABEL_72:
    if (v85 < 0)
      operator delete(__p);
  }
  if (v14)
  {
    v47 = sub_1C61A8910((uint64_t)v14);
    MEMORY[0x1CAA32FC0](v47, 0x10B0C4007EAB999);
  }
  return v18;
}

uint64_t sub_1C576F228(uint64_t a1, llvm::LLVMContext **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  llvm::PointerType *v14;
  llvm::LLVMContext *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isEnabled;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  void **v28;
  llvm::LLVMContext ***v29;
  int v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  uint64_t v37;
  char v38;
  char v39;
  void *v40;
  uint64_t v41;
  _BYTE v42[260];
  int v43;
  uint64_t v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 24) = a7;
  *(_QWORD *)(a1 + 32) = a8;
  *(_QWORD *)(a1 + 40) = a9;
  *(_QWORD *)(a1 + 48) = a10;
  v14 = (llvm::PointerType *)(*(_QWORD *)*a2 + 1912);
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = llvm::PointerType::get(v14, 0);
  v15 = *a2;
  v16 = *(_QWORD *)*a2;
  *(_QWORD *)(a1 + 72) = v16 + 1960;
  *(_QWORD *)(a1 + 80) = v16 + 1984;
  *(_QWORD *)(a1 + 88) = llvm::DataLayout::getIntPtrType((llvm::DataLayout *)(a2 + 34), v15, 0);
  llvm::ArrayType::get((llvm::ArrayType *)(*(_QWORD *)*a2 + 1912), 0);
  *(_QWORD *)(a1 + 96) = v17;
  v18 = *(_QWORD *)a1 + 24;
  v19 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if (v19 == v18)
  {
LABEL_6:
    isEnabled = 0;
  }
  else
  {
    while (1)
    {
      v20 = v19 - 56;
      if (!v19)
        v20 = 0;
      if (*(_QWORD *)(v20 + 72) != v20 + 72)
        break;
      v19 = *(_QWORD *)(v19 + 8);
      if (v19 == v18)
        goto LABEL_6;
    }
    v23 = *(_QWORD *)(v20 + 80);
    if (v23)
      v24 = v23 - 24;
    else
      v24 = 0;
    v25 = *(_QWORD *)(v24 + 56);
    v30 = 9;
    v31 = 2;
    v32 = v25;
    v33 = 0;
    v34 = 0;
    v35 = "wholeprogramdevirt";
    v36 = "";
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v40 = v42;
    v41 = 0x400000000;
    v42[256] = 0;
    v43 = -1;
    v44 = v24;
    v29 = (llvm::LLVMContext ***)&off_1E814E500;
    isEnabled = llvm::OptimizationRemark::isEnabled(&v29);
    v29 = (llvm::LLVMContext ***)&off_1E814E790;
    v26 = (char *)v40;
    if ((_DWORD)v41)
    {
      v27 = (unint64_t)v41 << 6;
      do
      {
        v28 = (void **)&v26[v27];
        if (v26[v27 - 17] < 0)
          operator delete(*(v28 - 5));
        if (*((char *)v28 - 41) < 0)
          operator delete(*(v28 - 8));
        v27 -= 64;
      }
      while (v27);
      v26 = (char *)v40;
    }
    if (v26 != v42)
      free(v26);
  }
  *(_BYTE *)(a1 + 104) = isEnabled;
  *(_QWORD *)(a1 + 112) = a5;
  *(_QWORD *)(a1 + 120) = a6;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0;
  *(_QWORD *)(a1 + 176) = a1 + 208;
  *(_QWORD *)(a1 + 184) = a1 + 208;
  *(_QWORD *)(a1 + 192) = 8;
  *(_DWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 272) = a1 + 280;
  *(_QWORD *)(a1 + 280) = 0;
  *(_QWORD *)(a1 + 288) = 0;
  *(_QWORD *)(a1 + 296) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 312) = 0;
  sub_1C57750A0((uint64_t *)(a1 + 296));
  return a1;
}

uint64_t sub_1C576F48C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  char v22;
  void **v23;
  _OWORD *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  BOOL v32;
  const char *v33;
  char v34;
  char v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _OWORD *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  int64x2_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  const llvm::APInt *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  llvm::DominatorTree *v58;
  uint64_t v59;
  size_t **v60;
  llvm::Value *v61;
  uint64_t v62;
  void **v63;
  void **v64;
  void *v65;
  uint64_t v66;
  char *v67;
  unsigned int v68;
  size_t **v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  int v76;
  unsigned int v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  BOOL v96;
  _QWORD *v97;
  __int128 **v98;
  unint64_t *v99;
  unint64_t *v100;
  _QWORD *v101;
  _QWORD *v102;
  int v103;
  unsigned __int8 *v104;
  llvm::ValueHandleBase *v105;
  llvm::ValueHandleBase *v106;
  __int128 *v107;
  __int128 **v108;
  uint64_t v109;
  uint64_t *v110;
  unsigned __int8 *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  unsigned __int8 *v116;
  unint64_t v117;
  llvm::Value *v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t i;
  _QWORD **v122;
  uint64_t v123;
  _QWORD *v124;
  int v125;
  int32x2_t **v126;
  int32x2_t *v127;
  __int32 v128;
  int32x2_t v129;
  __int32 v130;
  unsigned int v131;
  uint64_t v132;
  _QWORD **v133;
  int v134;
  unsigned int v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  unsigned __int8 *v140;
  _QWORD *v141;
  uint64_t *v142;
  uint64_t *v143;
  _QWORD *v144;
  uint64_t v145;
  BOOL v146;
  uint64_t *v147;
  char *v148;
  _QWORD *v149;
  unint64_t v150;
  _QWORD *v151;
  llvm::GlobalObject *v152;
  llvm::Constant *v153;
  llvm *PointerAtOffset;
  llvm::Value *v155;
  llvm::Value *v157;
  int v158;
  unsigned int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  llvm::Value **v164;
  llvm::Value *v165;
  int v166;
  int v167;
  llvm::Value *v168;
  char *v169;
  size_t v170;
  size_t v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  llvm::Value **v178;
  llvm::Value *v179;
  int v180;
  int v181;
  llvm::Value *v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  BOOL v186;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  llvm::Value **v193;
  llvm::Value *v194;
  int v195;
  int v196;
  _QWORD **v197;
  _QWORD **v198;
  _QWORD *v199;
  _QWORD *v200;
  char v201;
  uint64_t v202;
  unint64_t v203;
  unint64_t v204;
  char *v205;
  char *v206;
  char *v207;
  __int128 v208;
  char *v209;
  _QWORD *v210;
  _QWORD *v211;
  llvm::Value *v212;
  int *v213;
  size_t v214;
  size_t v215;
  _QWORD *v216;
  _QWORD *v217;
  _QWORD *v218;
  unint64_t v219;
  BOOL v220;
  _QWORD *v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  _QWORD *v226;
  unint64_t v227;
  BOOL v228;
  _QWORD *v229;
  unint64_t v230;
  unint64_t *v231;
  _BYTE *v232;
  uint64_t v233;
  _QWORD *v234;
  unint64_t v235;
  _QWORD *v236;
  unsigned int *v237;
  unint64_t v238;
  unint64_t v239;
  unsigned int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned int **v245;
  unsigned int *v246;
  int v247;
  int v248;
  uint64_t v249;
  size_t v250;
  int64_t v251;
  uint64_t *v252;
  uint64_t *v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t *v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t *v259;
  uint64_t *v260;
  uint64_t v261;
  unint64_t v262;
  BOOL v263;
  char v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  BOOL v268;
  llvm::Function *v269;
  llvm::AAResults *v270;
  uint64_t v271;
  unint64_t **v272;
  unint64_t *v273;
  unint64_t *v274;
  _BYTE *v275;
  uint64_t v276;
  llvm::Type *v277;
  llvm::Type *v278;
  const llvm::APInt *v279;
  llvm::Value **NullValue;
  uint64_t v281;
  uint64_t v282;
  unsigned int v283;
  uint64_t v284;
  unsigned int v285;
  uint64_t v287;
  llvm::ConstantInt *v288;
  unint64_t v289;
  llvm::ValueHandleBase *v290;
  uint64_t v291;
  _QWORD *v292;
  int v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  BOOL v297;
  unsigned int *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int **v303;
  unsigned int *v304;
  int v305;
  int v306;
  unint64_t *v307;
  uint64_t v308;
  unint64_t LowestOffset;
  unint64_t v310;
  uint64_t v311;
  unint64_t v312;
  unint64_t v313;
  _QWORD *v314;
  uint64_t v315;
  int64_t v316;
  uint64_t v317;
  unint64_t v318;
  const llvm::APInt *v319;
  unsigned int *v320;
  char *v321;
  size_t v322;
  size_t v323;
  _BYTE *v324;
  uint64_t v325;
  uint64_t *v326;
  uint64_t *v327;
  _BYTE *v328;
  uint64_t v329;
  llvm::ConstantInt **v330;
  llvm::ConstantInt *v331;
  unint64_t v332;
  unint64_t v333;
  const llvm::APInt *v334;
  llvm::ValueHandleBase *v335;
  llvm::ConstantInt **v336;
  uint64_t v337;
  llvm::ConstantInt *v338;
  unint64_t v339;
  unint64_t v340;
  llvm::ValueHandleBase *v341;
  unsigned int *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  unsigned int **v347;
  unsigned int *v348;
  int v349;
  int v350;
  unsigned int *v351;
  char *v352;
  size_t v353;
  size_t v354;
  _BYTE *v355;
  unint64_t v356;
  unint64_t v357;
  uint64_t *v359;
  char v360;
  BOOL v361;
  uint64_t *v362;
  uint64_t *v363;
  uint64_t **v364;
  llvm::PointerType *v365;
  uint64_t v366;
  llvm::Type *v367;
  uint64_t v368;
  char *v369;
  uint64_t *v370;
  int v371;
  unsigned int v372;
  unsigned int *v373;
  void *v374;
  char *v375;
  void *v376;
  size_t **v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  unsigned int **v382;
  unsigned int *v383;
  int v384;
  int v385;
  char *v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t *v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  uint64_t v395;
  unint64_t v396;
  unint64_t v397;
  char *v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  unint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  _QWORD *v408;
  uint64_t v409;
  unsigned int v410;
  uint64_t v411;
  uint64_t Declaration;
  uint64_t v413;
  uint64_t **v414;
  uint64_t v415;
  uint64_t v416;
  llvm::Instruction *v417;
  llvm::Instruction *v418;
  llvm::Instruction *v419;
  llvm::LLVMContext *v420;
  llvm::ReturnInst *v421;
  unsigned int *v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  size_t v426;
  unsigned int v427;
  unsigned int v428;
  int hasExternalWeakLinkage;
  unsigned int v430;
  unint64_t v431;
  _QWORD *v432;
  _QWORD *v433;
  _QWORD *v434;
  unint64_t v435;
  BOOL v436;
  _QWORD *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  unsigned int **v443;
  unsigned int *v444;
  int v445;
  int v446;
  unint64_t *v447;
  size_t v448;
  const void *v449;
  unint64_t v450;
  void *v451;
  uint64_t v452;
  uint64_t v453;
  void **v454;
  _BYTE *v455;
  uint64_t ***v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t ****v461;
  uint64_t ***v462;
  int v463;
  int v464;
  unint64_t *v465;
  size_t v466;
  const void *v467;
  unint64_t v468;
  void *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t *v472;
  uint64_t **v473;
  uint64_t **v474;
  char v475;
  void *v476;
  void **v477;
  uint64_t *v478;
  uint64_t *v479;
  uint64_t v480;
  size_t v481;
  uint64_t *v482;
  size_t v483;
  size_t v484;
  size_t v485;
  int v486;
  _BOOL4 v487;
  size_t v488;
  size_t v489;
  int v490;
  _BOOL4 v491;
  uint64_t *v492;
  uint64_t *v493;
  uint64_t *v494;
  unsigned __int8 *v495;
  size_t v496;
  size_t *inserted;
  void *v498;
  void *v499;
  void *v500;
  void *v501;
  uint64_t v503;
  llvm::GlobalObject *v504;
  BOOL v505;
  uint64_t v506;
  uint64_t v507;
  const char *v508;
  const char *v509;
  const char *v510;
  uint64_t v511;
  llvm::OptimizationRemarkEmitter *v512;
  char v513;
  void *v514;
  size_t v515;
  llvm::DiagnosticInfoOptimizationBase *v516;
  char *v517;
  const char *v518;
  const char *v519;
  const char *v520;
  unint64_t v521;
  void **v522;
  uint64_t *v523;
  uint64_t **v524;
  unint64_t *v525;
  unint64_t *v526;
  _BYTE *v527;
  uint64_t *v528;
  unint64_t v529;
  char v530;
  unint64_t v531;
  unint64_t v532;
  uint64_t v533;
  _BYTE *v534;
  uint64_t v535;
  char v536;
  llvm::ConstantAggregateZero *v537;
  _BYTE *v538;
  llvm::Type *v539;
  llvm::ConstantAggregateZero *v540;
  llvm::ConstantAggregateZero *TypeForElements;
  llvm::UndefValue *v542;
  _DWORD *v543;
  llvm::GlobalObject *v544;
  uint64_t v545;
  llvm::PointerType *v546;
  uint64_t v547;
  char v548;
  llvm::GlobalObject *v549;
  size_t v550;
  uint64_t ***v551;
  uint64_t v552;
  int v553;
  uint64_t v554;
  int v555;
  unsigned int v556;
  uint64_t ****v557;
  uint64_t ***v558;
  llvm::GlobalObject *v559;
  llvm::GlobalObject *v560;
  uint64_t v561;
  int v562;
  uint64_t v563;
  int v564;
  unsigned int v565;
  llvm::GlobalObject **v566;
  llvm::GlobalObject *v567;
  int v568;
  const llvm::APInt *v569;
  llvm::PointerType *v570;
  int v571;
  llvm::GetElementPtrInst *v572;
  llvm::ConstantInt **v573;
  llvm::ConstantInt *v574;
  const llvm::APInt *v575;
  llvm::ValueHandleBase *v576;
  llvm::ConstantInt **v577;
  llvm::ConstantInt *v578;
  unint64_t v579;
  char v580;
  llvm::ValueHandleBase *v581;
  uint64_t ElementPtr;
  llvm::Value *v583;
  llvm::Value *v584;
  int v585;
  int v586;
  unsigned int v587;
  llvm::GlobalObject **v588;
  int v589;
  BOOL v590;
  unsigned int v591;
  uint64_t ****v592;
  int v593;
  BOOL v594;
  unsigned int v595;
  llvm::GlobalObject **v596;
  llvm::GlobalObject *v597;
  uint64_t ****v598;
  uint64_t ***v599;
  uint64_t v600;
  uint64_t k;
  _QWORD **v602;
  uint64_t v603;
  _QWORD *v604;
  int v605;
  int32x2_t **v606;
  int32x2_t *v607;
  __int32 v608;
  int32x2_t v609;
  __int32 v610;
  unsigned int v611;
  uint64_t v612;
  _QWORD **v613;
  int v614;
  unsigned int v615;
  char *v616;
  uint64_t v617;
  char *v618;
  uint64_t v619;
  unsigned __int8 *v620;
  uint64_t v621;
  _QWORD **v622;
  uint64_t v623;
  char *v624;
  char *v625;
  void *v626;
  uint64_t *v627;
  uint64_t *v628;
  uint64_t v629;
  uint64_t v630;
  size_t v631;
  _QWORD *v632;
  uint64_t v633;
  _QWORD *v634;
  _QWORD *v635;
  _QWORD *v636;
  uint64_t v637;
  uint64_t *v638;
  uint64_t *v639;
  uint64_t v640;
  int v641;
  BOOL v642;
  _QWORD *v643;
  _OWORD *v644;
  unint64_t v645;
  unint64_t *v646;
  uint64_t v647;
  unint64_t v648;
  _QWORD *v649;
  _QWORD *v650;
  unint64_t v651;
  _QWORD *v652;
  _QWORD *v653;
  _QWORD *v654;
  uint64_t v655;
  unint64_t v656;
  uint64_t v657;
  unint64_t v658;
  char *v659;
  char *v660;
  uint64_t v661;
  _OWORD *v662;
  unint64_t v663;
  unint64_t *v664;
  uint64_t v665;
  unint64_t v666;
  _QWORD *v667;
  _QWORD *v668;
  unint64_t v669;
  _QWORD *v670;
  _QWORD *v671;
  _QWORD *v672;
  uint64_t v673;
  unint64_t v674;
  uint64_t v675;
  unint64_t v676;
  char *v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  unint64_t v681;
  unint64_t *v682;
  uint64_t v683;
  unint64_t v684;
  void *v685;
  uint64_t v686;
  char *v687;
  char *v688;
  unint64_t v689;
  _QWORD *v690;
  _QWORD *v691;
  _QWORD *v692;
  uint64_t v693;
  unint64_t v694;
  uint64_t v695;
  unint64_t v696;
  char *v697;
  char *v698;
  uint64_t v699;
  uint64_t v700;
  unint64_t v701;
  unint64_t *v702;
  uint64_t v703;
  unint64_t v704;
  void *v705;
  uint64_t v706;
  char *v707;
  char *v708;
  unint64_t v709;
  _QWORD *v710;
  _QWORD *v711;
  _QWORD *v712;
  uint64_t v713;
  unint64_t v714;
  uint64_t v715;
  unint64_t v716;
  char *v717;
  char *v718;
  uint64_t v719;
  _QWORD *v720;
  _QWORD *v721;
  _QWORD *v722;
  char *v723;
  unint64_t v724;
  unint64_t v725;
  char *v726;
  uint64_t *v727;
  _QWORD *v728;
  char v729;
  uint64_t v730;
  uint64_t *v731;
  _QWORD *v732;
  uint64_t v733;
  char *v734;
  uint64_t v735;
  _QWORD *v736;
  uint64_t *v737;
  unint64_t v738;
  unsigned int v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t *v742;
  uint64_t v743;
  uint64_t v744;
  _QWORD *v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t *v748;
  uint64_t *v749;
  unsigned int v750;
  uint64_t v751;
  _OWORD *v752;
  _OWORD *v753;
  uint64_t v754;
  uint64_t j;
  void *__dst[2];
  char v757;
  void *v758;
  char v759;
  uint64_t **v760;
  uint64_t *v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unsigned int v765;
  void *v766[2];
  char *v767;
  uint64_t *v768;
  _QWORD v769[2];
  void *__p[4];
  char **v771;
  _QWORD *v772;
  void *v773;
  unsigned int v774;
  uint64_t v775;
  char *v776;
  void *v777;
  int v778;
  char v779;
  unint64_t v780;
  uint64_t v781;
  int v782;
  char v783;
  __int16 v784;
  uint64_t v785;

  v785 = *MEMORY[0x1E0C80C00];
  v2 = a1[5];
  if (v2 && *(_BYTE *)(v2 + 135))
    return 0;
  v3 = a1[6];
  if (v3)
  {
    if (*(_BYTE *)(v3 + 135))
      return 0;
  }
  v5 = sub_1C4FB7E80(*(uint64_t **)(*a1 + 112), "llvm.type.test", 0xEuLL);
  if (v5)
    v6 = *(_BYTE *)(v5 + 16) ? 0 : v5;
  else
    v6 = 0;
  v7 = sub_1C4FB7E80(*(uint64_t **)(*a1 + 112), "llvm.type.checked.load", 0x16uLL);
  if (v7)
    v8 = *(_BYTE *)(v7 + 16) ? 0 : v7;
  else
    v8 = 0;
  v9 = sub_1C4FB7E80(*(uint64_t **)(*a1 + 112), "llvm.type.checked.load.relative", 0x1FuLL);
  if (v9)
    v10 = *(_BYTE *)(v9 + 16) ? 0 : v9;
  else
    v10 = 0;
  v11 = sub_1C4FB7E80(*(uint64_t **)(*a1 + 112), "llvm.assume", 0xBuLL);
  if (v11)
    v12 = *(_BYTE *)(v11 + 16) ? 0 : v11;
  else
    v12 = 0;
  if (!a1[5]
    && (!v6 || !*(_QWORD *)(v6 + 8) || !v12 || !*(_QWORD *)(v12 + 8))
    && (!v8 || !*(_QWORD *)(v8 + 8))
    && (!v10 || !*(_QWORD *)(v10 + 8)))
  {
    return 0;
  }
  v766[0] = 0;
  v766[1] = 0;
  v767 = 0;
  v763 = 0;
  v764 = 0;
  v765 = 0;
  v776 = 0;
  v777 = 0;
  v778 = 0;
  v737 = a1;
  v13 = *a1;
  v14 = *a1 + 8;
  v15 = 1;
  v16 = 112;
  v17 = v14;
  do
  {
    v17 = *(_QWORD *)(v17 + 8);
    --v15;
    v16 -= 112;
  }
  while (v17 != v14);
  v733 = v8;
  if (v15)
  {
    if ((unint64_t)-v15 > 0x249249249249249)
      goto LABEL_1023;
    v771 = &v767;
    v766[0] = operator new(-v16);
    v766[1] = v766[0];
    v767 = (char *)v766[0] - v16;
    memset(__p, 0, sizeof(__p));
    sub_1C62A6634((uint64_t)__p);
    v13 = *v737;
  }
  v780 = (unint64_t)&v782;
  HIDWORD(v781) = 2;
  v18 = v13 + 8;
  v19 = *(_QWORD *)(v13 + 16);
  if (v19 != v13 + 8)
  {
    while (1)
    {
      if (v19)
        v20 = v19 - 56;
      else
        v20 = 0;
      LODWORD(v781) = 0;
      llvm::Value::getMetadata((unsigned int *)v20, 19, (uint64_t)&v780);
      if (v19 && *(_BYTE *)(v20 + 16) == 3)
      {
        v21 = (*(_DWORD *)(v20 + 20) & 0x7FFFFFF) == 0;
      }
      else
      {
        if (*(_BYTE *)(v20 + 16) || *(_QWORD *)(v20 + 72) != v20 + 72)
          goto LABEL_32;
        v21 = (*(_BYTE *)(v20 + 34) & 0x80) == 0;
      }
      v22 = v21;
      if ((v22 & 1) == 0)
      {
LABEL_32:
        if ((_DWORD)v781)
        {
          __p[0] = (void *)v20;
          v23 = (void **)sub_1C6180A54((uint64_t)&v776, (uint64_t *)__p);
          if (!v23[1])
          {
            v24 = v766[1];
            v25 = v767;
            if (v766[1] >= v767)
            {
              v44 = v766[0];
              v45 = 0x6DB6DB6DB6DB6DB7 * (((char *)v766[1] - (char *)v766[0]) >> 4) + 1;
              if (v45 > 0x249249249249249)
                goto LABEL_1023;
              v743 = 0x6DB6DB6DB6DB6DB7 * (((char *)v766[1] - (char *)v766[0]) >> 4);
              if (0xDB6DB6DB6DB6DB6ELL * ((v767 - (char *)v766[0]) >> 4) > v45)
                v45 = 0xDB6DB6DB6DB6DB6ELL * ((v767 - (char *)v766[0]) >> 4);
              if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((v767 - (char *)v766[0]) >> 4)) >= 0x124924924924924)
                v46 = 0x249249249249249;
              else
                v46 = v45;
              v771 = &v767;
              if (v46 > 0x249249249249249)
LABEL_1024:
                sub_1C4764EE4();
              v738 = v46;
              v47 = (char *)operator new(112 * v46);
              v48 = &v47[112 * v743];
              *(_OWORD *)v48 = 0u;
              *((_OWORD *)v48 + 1) = 0u;
              *((_OWORD *)v48 + 2) = 0u;
              *((_OWORD *)v48 + 3) = 0u;
              *((_OWORD *)v48 + 4) = 0u;
              *((_OWORD *)v48 + 5) = 0u;
              *((_OWORD *)v48 + 6) = 0u;
              if (v24 == v44)
              {
                v49 = vdupq_n_s64((unint64_t)v24);
                v50 = &v47[112 * v743];
              }
              else
              {
                v51 = 0;
                do
                {
                  v52 = &v48[v51 * 16];
                  v53 = &v24[v51];
                  *((_OWORD *)v52 - 7) = v24[v51 - 7];
                  *((_OWORD *)v52 - 6) = v24[v51 - 6];
                  *((_QWORD *)v52 - 10) = *(_QWORD *)&v24[v51 - 5];
                  *((_QWORD *)v53 - 12) = 0;
                  *((_QWORD *)v53 - 11) = 0;
                  *((_QWORD *)v53 - 10) = 0;
                  *(_OWORD *)(v52 - 72) = *(_OWORD *)((char *)&v24[v51 - 4] - 8);
                  *((_QWORD *)v52 - 7) = *((_QWORD *)&v24[v51 - 3] - 1);
                  *((_QWORD *)v53 - 9) = 0;
                  *((_QWORD *)v53 - 8) = 0;
                  *((_QWORD *)v53 - 7) = 0;
                  *((_OWORD *)v52 - 3) = v24[v51 - 3];
                  *((_QWORD *)v52 - 4) = *(_QWORD *)&v24[v51 - 2];
                  *((_QWORD *)v53 - 6) = 0;
                  *((_QWORD *)v53 - 5) = 0;
                  *((_QWORD *)v53 - 4) = 0;
                  *(_OWORD *)(v52 - 24) = *(_OWORD *)((char *)&v24[v51 - 1] - 8);
                  *((_QWORD *)v52 - 1) = *((_QWORD *)&v24[v51 - 1] + 1);
                  *((_QWORD *)v53 - 3) = 0;
                  *((_QWORD *)v53 - 2) = 0;
                  *((_QWORD *)v53 - 1) = 0;
                  v51 -= 7;
                }
                while (&v24[v51] != v44);
                v49 = *(int64x2_t *)v766;
                v25 = v767;
                v50 = &v48[v51 * 16];
              }
              v26 = v48 + 112;
              v766[0] = v50;
              v766[1] = v48 + 112;
              *(int64x2_t *)&__p[1] = v49;
              v767 = &v47[112 * v738];
              __p[3] = v25;
              __p[0] = (void *)v49.i64[0];
              sub_1C62A6634((uint64_t)__p);
            }
            else
            {
              v26 = (char *)v766[1] + 112;
              *((_OWORD *)v766[1] + 5) = 0u;
              v24[6] = 0u;
              v24[3] = 0u;
              v24[4] = 0u;
              v24[1] = 0u;
              v24[2] = 0u;
              *v24 = 0u;
            }
            v766[1] = v26;
            *((_QWORD *)v26 - 14) = v20;
            v27 = *v737 + 272;
            v28 = **(_QWORD **)(v20 - 32);
            sub_1C4768AD0(v27, v28);
            v30 = v29;
            v32 = v31 == 1;
            llvm::DataLayout::getAlignment(v27, v28);
            v35 = v34;
            if (v32)
            v36 = (char *)v766[1] - 112;
            *((_QWORD *)v766[1] - 13) = ((1 << v35) + ((unint64_t)(v30 + 7) >> 3) - 1) & -(1 << v35);
            v23[1] = v36;
          }
          if ((_DWORD)v781)
          {
            v37 = v780;
            v38 = 8 * v781;
            do
            {
              v39 = (_QWORD *)(*(_QWORD *)v37 - 8 * *(unsigned int *)(*(_QWORD *)v37 + 8));
              v760 = (uint64_t **)v39[1];
              v40 = *(_QWORD *)(*v39 + 128);
              v41 = (_QWORD *)(v40 + 24);
              if (*(_DWORD *)(v40 + 32) >= 0x41u)
                v41 = (_QWORD *)*v41;
              v42 = (_QWORD *)*v41;
              v43 = sub_1C62A67E4((uint64_t)&v763, (uint64_t *)&v760);
              __p[0] = v23[1];
              __p[1] = v42;
              sub_1C62A6694((uint64_t)(v43 + 1), (unint64_t)__p[0], (unint64_t)v42, __p);
              v37 += 8;
              v38 -= 8;
            }
            while (v38);
          }
        }
      }
      v19 = *(_QWORD *)(v19 + 8);
      if (v19 == v18)
      {
        if ((int *)v780 != &v782)
          free((void *)v780);
        break;
      }
    }
  }
  MEMORY[0x1CAA32FB4](v776, 8);
  v55 = (uint64_t)v737;
  if (v6)
  {
    if (v12)
    {
      v56 = *(_QWORD *)(v6 + 8);
      if (v56)
      {
        v744 = v763;
        v750 = v765;
        v739 = v765 - 1;
        while (1)
        {
          v57 = *(_QWORD *)(v56 + 24);
          v56 = *(_QWORD *)(v56 + 8);
          if (v57)
          {
            if (*(_BYTE *)(v57 + 16) == 84)
              break;
          }
LABEL_96:
          if (!v56)
            goto LABEL_97;
        }
        __p[0] = &__p[2];
        __p[1] = (void *)0x100000000;
        v780 = (unint64_t)&v782;
        v781 = 0x100000000;
        v58 = (llvm::DominatorTree *)(*(uint64_t (**)(_QWORD, _QWORD))(v55 + 24))(*(_QWORD *)(v55 + 32), *(_QWORD *)(*(_QWORD *)(v57 + 40) + 56));
        llvm::findDevirtualizableCallsForTypeTest((uint64_t)__p, (uint64_t)&v780, v57, v58);
        v59 = v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF);
        v60 = *(size_t ***)(*(_QWORD *)(v59 + 32) + 24);
        if ((_DWORD)v781)
        {
          v61 = llvm::Value::stripPointerCasts(*(llvm::Value **)v59);
          if (LODWORD(__p[1]))
          {
            v62 = (uint64_t)v61;
            v63 = (void **)__p[0];
            v64 = (void **)((char *)__p[0] + 16 * LODWORD(__p[1]));
            do
            {
              v65 = *v63;
              v66 = (uint64_t)v63[1];
              v63 += 2;
              v776 = (char *)v60;
              v777 = v65;
              v67 = (char *)sub_1C57760AC((uint64_t)(v737 + 16), (uint64_t *)&v776);
              sub_1C5776858(v67, v62, v66, 0);
            }
            while (v63 != v64);
          }
        }
        if (v750)
        {
          v68 = v739 & ((v60 >> 4) ^ (v60 >> 9));
          v69 = *(size_t ***)(v744 + 32 * v68);
          if (v60 == v69)
          {
LABEL_75:
            v55 = (uint64_t)v737;
            v70 = v737[6];
            if (!v70 || *(_BYTE *)v60 || sub_1C5712F58(v70, (int *)v60[1] + 6, *v60[1]))
              goto LABEL_92;
            if ((_DWORD)v781)
            {
              v71 = (uint64_t *)v780;
              v72 = 8 * v781;
              do
              {
                v73 = *v71++;
                llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v73 + 40) + 40, (uint64_t ***)v73);
                v74 = *(_QWORD *)(v73 + 24);
                v75 = *(_QWORD **)(v73 + 32);
                *v75 = v74;
                *(_QWORD *)(v74 + 8) = v75;
                *(_QWORD *)(v73 + 24) = 0;
                *(_QWORD *)(v73 + 32) = 0;
                llvm::Value::deleteValue((llvm::Value *)v73);
                v72 -= 8;
              }
              while (v72);
            }
            if (*(_QWORD *)(v57 + 8))
              goto LABEL_92;
            goto LABEL_91;
          }
          v76 = 1;
          while (v69 != (size_t **)-4096)
          {
            v77 = v68 + v76++;
            v68 = v77 & v739;
            v69 = *(size_t ***)(v744 + 32 * v68);
            if (v60 == v69)
              goto LABEL_75;
          }
        }
        if ((_DWORD)v781)
        {
          v78 = (uint64_t *)v780;
          v79 = 8 * v781;
          do
          {
            v80 = *v78++;
            llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v80 + 40) + 40, (uint64_t ***)v80);
            v81 = *(_QWORD *)(v80 + 24);
            v82 = *(_QWORD **)(v80 + 32);
            *v82 = v81;
            *(_QWORD *)(v81 + 8) = v82;
            *(_QWORD *)(v80 + 24) = 0;
            *(_QWORD *)(v80 + 32) = 0;
            llvm::Value::deleteValue((llvm::Value *)v80);
            v79 -= 8;
          }
          while (v79);
        }
        v55 = (uint64_t)v737;
        if (*(_QWORD *)(v57 + 8))
          goto LABEL_92;
LABEL_91:
        llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v57 + 40) + 40, (uint64_t ***)v57);
        v83 = *(_QWORD *)(v57 + 24);
        v84 = *(_QWORD **)(v57 + 32);
        *v84 = v83;
        *(_QWORD *)(v83 + 8) = v84;
        *(_QWORD *)(v57 + 24) = 0;
        *(_QWORD *)(v57 + 32) = 0;
        llvm::Value::deleteValue((llvm::Value *)v57);
LABEL_92:
        if ((int *)v780 != &v782)
          free((void *)v780);
        if (__p[0] != &__p[2])
          free(__p[0]);
        goto LABEL_96;
      }
    }
  }
LABEL_97:
  if (v733)
    sub_1C57754C8((uint64_t **)v55, v733);
  v85 = v10;
  if (v10)
    sub_1C57754C8((uint64_t **)v55, v10);
  if (*(_QWORD *)(v55 + 48))
  {
    v86 = *(_QWORD *)(v55 + 152);
    v87 = *(_QWORD *)(v55 + 160);
    while (v86 != v87)
    {
      v88 = *(_BYTE **)v86;
      if (!**(_BYTE **)v86)
      {
        v89 = *(_QWORD *)(v86 + 8);
        v90 = sub_1C5712F58(*(_QWORD *)(v55 + 48), (int *)(*((_QWORD *)v88 + 1) + 24), **((_QWORD **)v88 + 1));
        if (v90)
        {
          v93 = (_QWORD *)v90[6];
          v91 = v90 + 6;
          v92 = v93;
          if (v93)
          {
            v94 = v91;
            do
            {
              v95 = v92[4];
              v96 = v95 >= v89;
              if (v95 >= v89)
                v97 = v92;
              else
                v97 = v92 + 1;
              if (v96)
                v94 = v92;
              v92 = (_QWORD *)*v97;
            }
            while (*v97);
            if (v94 != v91 && v89 >= v94[4])
            {
              if (*((_DWORD *)v94 + 10) == 1)
              {
                v115 = *((_BYTE *)v94 + 71);
                if (v115 >= 0)
                  v116 = (unsigned __int8 *)(v94 + 6);
                else
                  v116 = (unsigned __int8 *)v94[6];
                if (v115 >= 0)
                  v117 = v115 & 0x7F;
                else
                  v117 = v94[7];
                sub_1C6210688(*(_QWORD *)v55, v116, v117, 0, (uint64_t **)(***(_QWORD ***)v55 + 1576));
                LOBYTE(__p[0]) = 0;
                sub_1C5776BC0(v55, v86 + 16, v118, (uint64_t)__p);
              }
              v98 = *(__int128 ***)(v86 + 96);
              if (v98 != (__int128 **)(v86 + 104))
              {
                do
                {
                  v99 = (unint64_t *)v98[4];
                  v100 = (unint64_t *)v98[5];
                  v101 = sub_1C62A6734((uint64_t)(v94 + 9), v99, v100);
                  if (v94 + 10 != v101)
                  {
                    v102 = v101;
                    v103 = *((_DWORD *)v101 + 14);
                    switch(v103)
                    {
                      case 3:
                        v105 = sub_1C57770F8(v737, (uint64_t)v88, v89, v99, v100 - v99, "byte", 4uLL, (llvm::Constant *)v737[9], *((_DWORD *)v101 + 18));
                        v106 = sub_1C57770F8(v737, (uint64_t)v88, v89, (unint64_t *)v98[4], ((char *)v98[5] - (char *)v98[4]) >> 3, "bit", 3uLL, (llvm::Constant *)v737[7], *((_DWORD *)v102 + 19));
                        sub_1C5777598((uint64_t)v737, v98 + 7, "", 0, (uint64_t)v105, (uint64_t)v106);
                        break;
                      case 2:
                        v104 = (unsigned __int8 *)sub_1C5776EA4((uint64_t)v737, (uint64_t)v88, v89, v99, v100 - v99, "unique_member", 0xDuLL);
                        sub_1C5776F68((uint64_t)v737, (uint64_t)(v98 + 7), "", 0, v102[8] != 0, v104);
                        break;
                      case 1:
                        sub_1C5776D30((uint64_t)v737, v98 + 7, "", 0, v101[8]);
                        break;
                    }
                  }
                  v107 = v98[1];
                  if (v107)
                  {
                    do
                    {
                      v108 = (__int128 **)v107;
                      v107 = *(__int128 **)v107;
                    }
                    while (v107);
                  }
                  else
                  {
                    do
                    {
                      v108 = (__int128 **)v98[2];
                      v21 = *v108 == (__int128 *)v98;
                      v98 = v108;
                    }
                    while (!v21);
                  }
                  v98 = v108;
                  v55 = (uint64_t)v737;
                }
                while (v108 != (__int128 **)(v86 + 104));
              }
              if (*((_DWORD *)v94 + 10) == 2)
              {
                v109 = v55;
                v110 = *(uint64_t **)v55;
                sub_1C5777AD8((uint64_t)__p, (uint64_t)v88, v89, 0, 0, "branch_funnel", 0xDuLL);
                if (SHIBYTE(__p[2]) >= 0)
                  v111 = (unsigned __int8 *)__p;
                else
                  v111 = (unsigned __int8 *)__p[0];
                if (SHIBYTE(__p[2]) >= 0)
                  v112 = HIBYTE(__p[2]) & 0x7F;
                else
                  v112 = (unint64_t)__p[1];
                sub_1C6210688((uint64_t)v110, v111, v112, 0, (uint64_t **)(***(_QWORD ***)v109 + 1576));
                v114 = v113;
                if (SHIBYTE(__p[2]) < 0)
                  operator delete(__p[0]);
                LOBYTE(__p[0]) = 0;
                sub_1C5777D14(v109, v86 + 16, v114, (uint64_t)__p);
                v55 = v109;
              }
            }
          }
        }
      }
      v86 += 120;
    }
    sub_1C5775F50((uint64_t **)v55, v85, v54);
    v119 = *(uint64_t **)v55;
    v120 = *(_QWORD *)v55 + 8;
    for (i = v119[2]; i != v120; i = *(_QWORD *)(i + 8))
    {
      if (i)
        v122 = (_QWORD **)(i - 56);
      else
        v122 = 0;
      if ((*((_BYTE *)v122 + 23) & 0x20) != 0)
      {
        v123 = *(_QWORD *)**v122 + 2480;
        __p[0] = v122;
        v124 = sub_1C541AA4C(v123, (uint64_t *)__p);
        llvm::MDAttachments::erase((llvm::MDAttachments *)(v124 + 1), 28);
        if (!*((_DWORD *)v124 + 4))
        {
          v125 = *((_DWORD *)v122 + 5);
          if ((v125 & 0x20000000) != 0)
          {
            v126 = (int32x2_t **)**v122;
            v127 = *v126;
            v128 = (*v126)[312].i32[0];
            if (v128)
            {
              v129 = v127[310];
              v130 = v128 - 1;
              v131 = v130 & ((v122 >> 4) ^ (v122 >> 9));
              v132 = *(_QWORD *)&v129 + 40 * v131;
              v133 = *(_QWORD ***)v132;
              if (*(_QWORD ***)v132 == v122)
              {
LABEL_164:
                v136 = *(char **)(v132 + 8);
                v137 = *(unsigned int *)(v132 + 16);
                if ((_DWORD)v137)
                {
                  v138 = v136 - 8;
                  v139 = 16 * v137;
                  do
                  {
                    v140 = *(unsigned __int8 **)&v138[v139];
                    if (v140)
                      llvm::MetadataTracking::untrack((uint64_t)&v138[v139], v140);
                    v139 -= 16;
                  }
                  while (v139);
                  v136 = *(char **)(v132 + 8);
                }
                if (v136 != (char *)(v132 + 24))
                  free(v136);
                *(_QWORD *)v132 = -8192;
                v127[311] = vadd_s32(v127[311], (int32x2_t)0x1FFFFFFFFLL);
                v125 = *((_DWORD *)v122 + 5);
              }
              else
              {
                v134 = 1;
                while (v133 != (_QWORD **)-4096)
                {
                  v135 = v131 + v134++;
                  v131 = v135 & v130;
                  v132 = *(_QWORD *)&v129 + 40 * v131;
                  v133 = *(_QWORD ***)v132;
                  if (*(_QWORD ***)v132 == v122)
                    goto LABEL_164;
                }
              }
            }
            *((_DWORD *)v122 + 5) = v125 & 0xDFFFFFFF;
          }
        }
      }
    }
    goto LABEL_879;
  }
  if ((_DWORD)v764)
  {
    v141 = *(_QWORD **)(v55 + 40);
    if (v141)
    {
      v780 = 0;
      v781 = 0;
      v782 = 0;
      if (v765)
      {
        v633 = 32 * v765;
        v627 = (uint64_t *)v763;
        while ((*v627 | 0x1000) == 0xFFFFFFFFFFFFF000)
        {
          v627 += 4;
          v633 -= 32;
          if (!v633)
            goto LABEL_906;
        }
      }
      else
      {
        v627 = (uint64_t *)v763;
      }
      v628 = (uint64_t *)(v763 + 32 * v765);
      if (v627 != v628)
      {
        v629 = *v627;
LABEL_897:
        if (!*(_BYTE *)v629)
        {
          v630 = *(_QWORD *)(v629 + 8);
          v631 = *(_QWORD *)v630;
          *(_OWORD *)__p = xmmword_1C85F4BB0;
          __p[2] = 0;
          llvm::MD5::update((int *)__p, (int *)(v630 + 24), v631);
          llvm::MD5::final((int *)__p, (int *)&v776);
          __p[0] = v776;
          v632 = sub_1C5715044((uint64_t)&v780, (uint64_t *)__p);
          sub_1C5712550((uint64_t)(v632 + 1), v629);
        }
        while (1)
        {
          v627 += 4;
          if (v627 == v628)
            break;
          v629 = *v627;
          if ((*v627 | 0x1000) != 0xFFFFFFFFFFFFF000)
          {
            if (v627 != v628)
              goto LABEL_897;
            break;
          }
        }
        v141 = (_QWORD *)v737[5];
      }
LABEL_906:
      v636 = (_QWORD *)*v141;
      v635 = v141 + 1;
      v634 = v636;
      if (v636 != v635)
      {
        v637 = (uint64_t)(v737 + 16);
        v732 = v635;
        do
        {
          v736 = v634;
          v638 = (uint64_t *)v634[7];
          v639 = (uint64_t *)v634[8];
          v742 = v639;
          while (v638 != v639)
          {
            v749 = v638;
            v640 = *v638;
            v641 = *(_DWORD *)(*v638 + 8);
            if (v640)
              v642 = v641 == 1;
            else
              v642 = 0;
            if (v642)
            {
              v643 = *(_QWORD **)(v640 + 104);
              if (v643)
              {
                v644 = (_OWORD *)v643[3];
                v752 = (_OWORD *)v643[4];
                if (v752 == v644)
                  goto LABEL_941;
                do
                {
                  *(_OWORD *)__p = *v644;
                  v646 = sub_1C5715044((uint64_t)&v780, (uint64_t *)__p) + 1;
                  v645 = *v646;
                  if ((*v646 & 2) != 0)
                  {
                    v648 = v645 & 0xFFFFFFFFFFFFFFFCLL;
                    v646 = *(unint64_t **)v648;
                    v647 = *(_QWORD *)v648 + 8 * *(unsigned int *)(v648 + 8);
                  }
                  else
                  {
                    v647 = (uint64_t)&v646[v645 > 3];
                  }
                  while (v646 != (unint64_t *)v647)
                  {
                    v776 = (char *)*v646;
                    v777 = __p[1];
                    v649 = (_QWORD *)sub_1C57760AC(v637, (uint64_t *)&v776);
                    v650 = v649;
                    v652 = (_QWORD *)v649[8];
                    v651 = v649[9];
                    if ((unint64_t)v652 >= v651)
                    {
                      v654 = (_QWORD *)v649[7];
                      v655 = v652 - v654;
                      v656 = v655 + 1;
                      if ((unint64_t)(v655 + 1) >> 61)
                        goto LABEL_1023;
                      v657 = v651 - (_QWORD)v654;
                      if (v657 >> 2 > v656)
                        v656 = v657 >> 2;
                      if ((unint64_t)v657 >= 0x7FFFFFFFFFFFFFF8)
                        v658 = 0x1FFFFFFFFFFFFFFFLL;
                      else
                        v658 = v656;
                      if (v658)
                      {
                        if (v658 >> 61)
                          goto LABEL_1024;
                        v659 = (char *)operator new(8 * v658);
                      }
                      else
                      {
                        v659 = 0;
                      }
                      v660 = &v659[8 * v655];
                      *(_QWORD *)v660 = v640;
                      v653 = v660 + 8;
                      if (v652 != v654)
                      {
                        do
                        {
                          v661 = *--v652;
                          *((_QWORD *)v660 - 1) = v661;
                          v660 -= 8;
                        }
                        while (v652 != v654);
                        v652 = (_QWORD *)v650[7];
                      }
                      v650[7] = v660;
                      v650[8] = v653;
                      v650[9] = &v659[8 * v658];
                      if (v652)
                        operator delete(v652);
                    }
                    else
                    {
                      *v652 = v640;
                      v653 = v652 + 1;
                    }
                    v650[8] = v653;
                    *((_WORD *)v650 + 12) = 256;
                    ++v646;
                  }
                  ++v644;
                }
                while (v644 != v752);
                v643 = *(_QWORD **)(v640 + 104);
                if (v643)
                {
LABEL_941:
                  v662 = (_OWORD *)v643[6];
                  v753 = (_OWORD *)v643[7];
                  if (v753 == v662)
                    goto LABEL_966;
                  do
                  {
                    *(_OWORD *)__p = *v662;
                    v664 = sub_1C5715044((uint64_t)&v780, (uint64_t *)__p) + 1;
                    v663 = *v664;
                    if ((*v664 & 2) != 0)
                    {
                      v666 = v663 & 0xFFFFFFFFFFFFFFFCLL;
                      v664 = *(unint64_t **)v666;
                      v665 = *(_QWORD *)v666 + 8 * *(unsigned int *)(v666 + 8);
                    }
                    else
                    {
                      v665 = (uint64_t)&v664[v663 > 3];
                    }
                    while (v664 != (unint64_t *)v665)
                    {
                      v776 = (char *)*v664;
                      v777 = __p[1];
                      v667 = (_QWORD *)sub_1C57760AC(v637, (uint64_t *)&v776);
                      v668 = v667;
                      v670 = (_QWORD *)v667[5];
                      v669 = v667[6];
                      if ((unint64_t)v670 >= v669)
                      {
                        v672 = (_QWORD *)v667[4];
                        v673 = v670 - v672;
                        v674 = v673 + 1;
                        if ((unint64_t)(v673 + 1) >> 61)
                          goto LABEL_1023;
                        v675 = v669 - (_QWORD)v672;
                        if (v675 >> 2 > v674)
                          v674 = v675 >> 2;
                        if ((unint64_t)v675 >= 0x7FFFFFFFFFFFFFF8)
                          v676 = 0x1FFFFFFFFFFFFFFFLL;
                        else
                          v676 = v674;
                        if (v676)
                        {
                          if (v676 >> 61)
                            goto LABEL_1024;
                          v677 = (char *)operator new(8 * v676);
                        }
                        else
                        {
                          v677 = 0;
                        }
                        v678 = &v677[8 * v673];
                        *(_QWORD *)v678 = v640;
                        v671 = v678 + 8;
                        if (v670 != v672)
                        {
                          do
                          {
                            v679 = *--v670;
                            *((_QWORD *)v678 - 1) = v679;
                            v678 -= 8;
                          }
                          while (v670 != v672);
                          v670 = (_QWORD *)v668[4];
                        }
                        v668[4] = v678;
                        v668[5] = v671;
                        v668[6] = &v677[8 * v676];
                        if (v670)
                          operator delete(v670);
                      }
                      else
                      {
                        *v670 = v640;
                        v671 = v670 + 1;
                      }
                      v668[5] = v671;
                      *((_BYTE *)v668 + 24) = 0;
                      ++v664;
                    }
                    ++v662;
                  }
                  while (v662 != v753);
                  v643 = *(_QWORD **)(v640 + 104);
                  if (v643)
                  {
LABEL_966:
                    v680 = v643[9];
                    v754 = v643[10];
                    if (v754 == v680)
                      goto LABEL_991;
                    do
                    {
                      v682 = sub_1C5715044((uint64_t)&v780, (uint64_t *)v680) + 1;
                      v681 = *v682;
                      if ((*v682 & 2) != 0)
                      {
                        v684 = v681 & 0xFFFFFFFFFFFFFFFCLL;
                        v682 = *(unint64_t **)v684;
                        v683 = *(_QWORD *)v684 + 8 * *(unsigned int *)(v684 + 8);
                      }
                      else
                      {
                        v683 = (uint64_t)&v682[v681 > 3];
                      }
                      while (v682 != (unint64_t *)v683)
                      {
                        v685 = *(void **)(v680 + 8);
                        __p[0] = (void *)*v682;
                        __p[1] = v685;
                        v686 = sub_1C57760AC(v637, (uint64_t *)__p);
                        v687 = sub_1C5776684((uint64_t **)(v686 + 80), *(_QWORD **)(v680 + 16), *(_QWORD *)(v680 + 24));
                        v688 = v687;
                        v690 = (_QWORD *)*((_QWORD *)v687 + 8);
                        v689 = *((_QWORD *)v687 + 9);
                        if ((unint64_t)v690 >= v689)
                        {
                          v692 = (_QWORD *)*((_QWORD *)v687 + 7);
                          v693 = v690 - v692;
                          v694 = v693 + 1;
                          if ((unint64_t)(v693 + 1) >> 61)
                            goto LABEL_1023;
                          v695 = v689 - (_QWORD)v692;
                          if (v695 >> 2 > v694)
                            v694 = v695 >> 2;
                          if ((unint64_t)v695 >= 0x7FFFFFFFFFFFFFF8)
                            v696 = 0x1FFFFFFFFFFFFFFFLL;
                          else
                            v696 = v694;
                          if (v696)
                          {
                            if (v696 >> 61)
                              goto LABEL_1024;
                            v697 = (char *)operator new(8 * v696);
                          }
                          else
                          {
                            v697 = 0;
                          }
                          v698 = &v697[8 * v693];
                          *(_QWORD *)v698 = v640;
                          v691 = v698 + 8;
                          if (v690 != v692)
                          {
                            do
                            {
                              v699 = *--v690;
                              *((_QWORD *)v698 - 1) = v699;
                              v698 -= 8;
                            }
                            while (v690 != v692);
                            v690 = (_QWORD *)*((_QWORD *)v688 + 7);
                          }
                          *((_QWORD *)v688 + 7) = v698;
                          *((_QWORD *)v688 + 8) = v691;
                          *((_QWORD *)v688 + 9) = &v697[8 * v696];
                          if (v690)
                            operator delete(v690);
                        }
                        else
                        {
                          *v690 = v640;
                          v691 = v690 + 1;
                        }
                        *((_QWORD *)v688 + 8) = v691;
                        *((_WORD *)v688 + 12) = 256;
                        ++v682;
                      }
                      v680 += 40;
                    }
                    while (v680 != v754);
                    v643 = *(_QWORD **)(v640 + 104);
                    if (v643)
                    {
LABEL_991:
                      v700 = v643[12];
                      for (j = v643[13]; v700 != j; v700 += 40)
                      {
                        v702 = sub_1C5715044((uint64_t)&v780, (uint64_t *)v700) + 1;
                        v701 = *v702;
                        if ((*v702 & 2) != 0)
                        {
                          v704 = v701 & 0xFFFFFFFFFFFFFFFCLL;
                          v702 = *(unint64_t **)v704;
                          v703 = *(_QWORD *)v704 + 8 * *(unsigned int *)(v704 + 8);
                        }
                        else
                        {
                          v703 = (uint64_t)&v702[v701 > 3];
                        }
                        while (v702 != (unint64_t *)v703)
                        {
                          v705 = *(void **)(v700 + 8);
                          __p[0] = (void *)*v702;
                          __p[1] = v705;
                          v706 = sub_1C57760AC(v637, (uint64_t *)__p);
                          v707 = sub_1C5776684((uint64_t **)(v706 + 80), *(_QWORD **)(v700 + 16), *(_QWORD *)(v700 + 24));
                          v708 = v707;
                          v710 = (_QWORD *)*((_QWORD *)v707 + 5);
                          v709 = *((_QWORD *)v707 + 6);
                          if ((unint64_t)v710 >= v709)
                          {
                            v712 = (_QWORD *)*((_QWORD *)v707 + 4);
                            v713 = v710 - v712;
                            v714 = v713 + 1;
                            if ((unint64_t)(v713 + 1) >> 61)
                              goto LABEL_1023;
                            v715 = v709 - (_QWORD)v712;
                            if (v715 >> 2 > v714)
                              v714 = v715 >> 2;
                            if ((unint64_t)v715 >= 0x7FFFFFFFFFFFFFF8)
                              v716 = 0x1FFFFFFFFFFFFFFFLL;
                            else
                              v716 = v714;
                            if (v716)
                            {
                              if (v716 >> 61)
                                goto LABEL_1024;
                              v717 = (char *)operator new(8 * v716);
                            }
                            else
                            {
                              v717 = 0;
                            }
                            v718 = &v717[8 * v713];
                            *(_QWORD *)v718 = v640;
                            v711 = v718 + 8;
                            if (v710 != v712)
                            {
                              do
                              {
                                v719 = *--v710;
                                *((_QWORD *)v718 - 1) = v719;
                                v718 -= 8;
                              }
                              while (v710 != v712);
                              v710 = (_QWORD *)*((_QWORD *)v708 + 4);
                            }
                            *((_QWORD *)v708 + 4) = v718;
                            *((_QWORD *)v708 + 5) = v711;
                            *((_QWORD *)v708 + 6) = &v717[8 * v716];
                            if (v710)
                              operator delete(v710);
                          }
                          else
                          {
                            *v710 = v640;
                            v711 = v710 + 1;
                          }
                          *((_QWORD *)v708 + 5) = v711;
                          v708[24] = 0;
                          ++v702;
                        }
                      }
                    }
                  }
                }
              }
            }
            v639 = v742;
            v638 = v749 + 1;
          }
          v720 = v736;
          v721 = (_QWORD *)v736[1];
          if (v721)
          {
            do
            {
              v722 = v721;
              v721 = (_QWORD *)*v721;
            }
            while (v721);
          }
          else
          {
            do
            {
              v722 = (_QWORD *)v720[2];
              v21 = *v722 == (_QWORD)v720;
              v720 = v722;
            }
            while (!v21);
          }
          v634 = v722;
        }
        while (v722 != v732);
      }
      sub_1C629B364((uint64_t *)&v780);
      v55 = (uint64_t)v737;
    }
    v761 = 0;
    v762 = 0;
    v760 = &v761;
    v142 = *(uint64_t **)(v55 + 152);
    v143 = *(uint64_t **)(v55 + 160);
    if (v142 != v143)
    {
      v729 = 0;
      v727 = *(uint64_t **)(v55 + 160);
      while (1)
      {
        v144 = sub_1C62A67E4((uint64_t)&v763, v142);
        v145 = *(_QWORD *)(v55 + 40);
        if (!v145 || (!*(_BYTE *)*v142 ? (v146 = v144[3] == 0) : (v146 = 1), v146))
        {
          v148 = 0;
        }
        else
        {
          v147 = sub_1C4FC90EC(v145, (int *)(*(_QWORD *)(*v142 + 8) + 24), **(_QWORD **)(*v142 + 8));
          __p[0] = v142 + 1;
          v148 = sub_1C4FD092C((uint64_t **)v147 + 5, (unint64_t *)v142 + 1, (uint64_t)&std::piecewise_construct, (_QWORD **)__p)+ 40;
          v145 = *(_QWORD *)(v55 + 40);
        }
        v149 = (_QWORD *)v144[1];
        v745 = v144 + 2;
        if (v149 == v144 + 2)
        {
          v751 = 0;
          v231 = (unint64_t *)v737;
          goto LABEL_338;
        }
        v726 = v148;
        v751 = 0;
        v150 = 0;
        v734 = 0;
        v730 = v145;
        v731 = v142;
        v740 = v142[1];
        v728 = (_QWORD *)(v145 + 8);
        do
        {
          v151 = v149 + 4;
          v152 = *(llvm::GlobalObject **)v149[4];
          if ((*((_BYTE *)v152 + 80) & 1) == 0)
            goto LABEL_336;
          if (!llvm::GlobalObject::getVCallVisibility(v152))
            goto LABEL_336;
          PointerAtOffset = llvm::getPointerAtOffset(*(llvm **)(*(_QWORD *)v149[4] - 32), v149[5] + v740, *v737, *(llvm::Module **)v149[4], v153);
          if (!PointerAtOffset)
            goto LABEL_336;
          v155 = llvm::Value::stripPointerCasts(PointerAtOffset);
          if (!v155 || *((_BYTE *)v155 + 16) != 0)
            goto LABEL_336;
          v157 = v155;
          v158 = *((_DWORD *)v155 + 5);
          v159 = v155 >> 4;
          if ((v158 & 0x10000000) == 0)
          {
            v170 = 0;
            v169 = &byte_1C871356D;
            goto LABEL_213;
          }
          v160 = ***(_QWORD ***)v155;
          v161 = *(_QWORD *)(v160 + 152);
          v162 = *(unsigned int *)(v160 + 168);
          if (!(_DWORD)v162)
            goto LABEL_211;
          LODWORD(v163) = (v162 - 1) & (v159 ^ (v155 >> 9));
          v164 = (llvm::Value **)(v161 + 16 * v163);
          v165 = *v164;
          if (*v164 != v155)
          {
            v166 = 1;
            while (v165 != (llvm::Value *)-4096)
            {
              v167 = v163 + v166++;
              v163 = v167 & (v162 - 1);
              v165 = *(llvm::Value **)(v161 + 16 * v163);
              if (v165 == v155)
              {
                v164 = (llvm::Value **)(v161 + 16 * v163);
                goto LABEL_212;
              }
            }
LABEL_211:
            v164 = (llvm::Value **)(v161 + 16 * v162);
          }
LABEL_212:
          v168 = v164[1];
          v171 = *(_QWORD *)v168;
          v169 = (char *)v168 + 16;
          v170 = v171;
LABEL_213:
          v173 = v737[37];
          v172 = (_QWORD *)v737[38];
          while ((_QWORD *)v173 != v172)
          {
            if ((llvm::GlobPattern::match(v173, (uint64_t)v169, v170) & 1) != 0)
              goto LABEL_336;
            v173 += 96;
          }
          if ((v158 & 0x10000000) == 0)
            goto LABEL_233;
          v174 = ***(_QWORD ***)v157;
          v175 = *(_QWORD *)(v174 + 152);
          v176 = *(unsigned int *)(v174 + 168);
          if (!(_DWORD)v176)
            goto LABEL_224;
          LODWORD(v177) = (v176 - 1) & (v159 ^ (v157 >> 9));
          v178 = (llvm::Value **)(v175 + 16 * v177);
          v179 = *v178;
          if (*v178 != v157)
          {
            v180 = 1;
            while (v179 != (llvm::Value *)-4096)
            {
              v181 = v177 + v180++;
              v177 = v181 & (v176 - 1);
              v179 = *(llvm::Value **)(v175 + 16 * v177);
              if (v179 == v157)
              {
                v178 = (llvm::Value **)(v175 + 16 * v177);
                goto LABEL_225;
              }
            }
LABEL_224:
            v178 = (llvm::Value **)(v175 + 16 * v176);
          }
LABEL_225:
          v182 = v178[1];
          if (*(_QWORD *)v182 == 18)
          {
            v183 = *((_QWORD *)v182 + 2);
            v184 = *((_QWORD *)v182 + 3);
            v185 = *((unsigned __int16 *)v182 + 16);
            v186 = v183 == 0x75705F6178635F5FLL && v184 == 0x75747269765F6572;
            if (v186 && v185 == 27745)
              goto LABEL_272;
          }
LABEL_233:
          if (*((llvm::Value **)v157 + 9) != (llvm::Value *)((char *)v157 + 72) || (*((_BYTE *)v157 + 34) & 0x80) != 0)
          {
            v197 = (_QWORD **)*((_QWORD *)v157 + 10);
            if (v197)
              v198 = v197 - 3;
            else
              v198 = 0;
            v199 = v198[5];
            if (v199)
              v200 = v199 - 3;
            else
              v200 = 0;
            if (*((unsigned __int8 *)v200 + 16) - 29 >= 0xB)
              v200 = 0;
            if (*((_BYTE *)v200 + 16) == 35)
              goto LABEL_272;
            goto LABEL_252;
          }
          if (v730)
          {
            v188 = sub_1C4EE9DE0(v157);
            if ((*((_BYTE *)v157 + 23) & 0x10) != 0)
            {
              v189 = ***(_QWORD ***)v157;
              v190 = *(_QWORD *)(v189 + 152);
              v191 = *(unsigned int *)(v189 + 168);
              if (!(_DWORD)v191)
                goto LABEL_280;
              LODWORD(v192) = (v191 - 1) & (v159 ^ (v157 >> 9));
              v193 = (llvm::Value **)(v190 + 16 * v192);
              v194 = *v193;
              if (*v193 != v157)
              {
                v195 = 1;
                while (v194 != (llvm::Value *)-4096)
                {
                  v196 = v192 + v195++;
                  v192 = v196 & (v191 - 1);
                  v194 = *(llvm::Value **)(v190 + 16 * v192);
                  if (v194 == v157)
                  {
                    v193 = (llvm::Value **)(v190 + 16 * v192);
                    goto LABEL_281;
                  }
                }
LABEL_280:
                v193 = (llvm::Value **)(v190 + 16 * v191);
              }
LABEL_281:
              v212 = v193[1];
              v215 = *(_QWORD *)v212;
              v213 = (int *)((char *)v212 + 16);
              v214 = v215;
            }
            else
            {
              v214 = 0;
              v213 = (int *)&byte_1C871356D;
            }
            *(_OWORD *)__p = xmmword_1C85F4BB0;
            __p[2] = 0;
            llvm::MD5::update((int *)__p, v213, v214);
            llvm::MD5::final((int *)__p, (int *)&v780);
            v216 = (_QWORD *)*v728;
            if (!*v728)
              goto LABEL_293;
            v217 = (_QWORD *)*v728;
            v218 = v728;
            do
            {
              v219 = v217[4];
              v220 = v219 >= v188;
              if (v219 >= v188)
                v221 = v217;
              else
                v221 = v217 + 1;
              if (v220)
                v218 = v217;
              v217 = (_QWORD *)*v221;
            }
            while (*v221);
            if (v218 == v728 || v218[4] > v188)
LABEL_293:
              v218 = v728;
            v222 = *(unsigned __int8 *)(v730 + 133);
            if (v218 == v728)
              v223 = 0;
            else
              v223 = (unint64_t)(v218 + 4);
            v224 = v223 & 0xFFFFFFFFFFFFFFF8 | v222;
            if (v224 <= 7 && v188 != v780)
            {
              if (!v216)
                goto LABEL_312;
              v226 = v728;
              do
              {
                v227 = v216[4];
                v228 = v227 >= v780;
                if (v227 >= v780)
                  v229 = v216;
                else
                  v229 = v216 + 1;
                if (v228)
                  v226 = v216;
                v216 = (_QWORD *)*v229;
              }
              while (*v229);
              if (v226 == v728 || v226[4] > v780)
LABEL_312:
                v226 = v728;
              v230 = (unint64_t)(v226 + 4);
              if (v226 == v728)
                v230 = 0;
              v224 = v230 & 0xFFFFFFFFFFFFFFF8 | v222;
            }
            if ((sub_1C5779268(v224) & 1) != 0)
              goto LABEL_272;
          }
LABEL_252:
          v201 = *(_BYTE *)(*((_QWORD *)v157 + 5) + 272);
          if (v150 >= (unint64_t)v734)
          {
            v202 = (uint64_t)(v150 - v751) >> 5;
            v203 = v202 + 1;
            if ((unint64_t)(v202 + 1) >> 59)
              goto LABEL_1023;
            if ((uint64_t)&v734[-v751] >> 4 > v203)
              v203 = (uint64_t)&v734[-v751] >> 4;
            if ((unint64_t)&v734[-v751] >= 0x7FFFFFFFFFFFFFE0)
              v204 = 0x7FFFFFFFFFFFFFFLL;
            else
              v204 = v203;
            if (v204)
            {
              if (v204 >> 59)
                goto LABEL_1024;
              v205 = (char *)operator new(32 * v204);
            }
            else
            {
              v205 = 0;
            }
            v206 = &v205[32 * v202];
            *(_QWORD *)v206 = v157;
            *((_QWORD *)v206 + 1) = v151;
            v206[24] = v201;
            v206[25] = 0;
            if (v150 == v751)
            {
              v209 = &v205[32 * v202];
            }
            else
            {
              v207 = &v205[32 * v202];
              do
              {
                v208 = *(_OWORD *)(v150 - 32);
                v209 = v207 - 32;
                *(_OWORD *)(v207 - 22) = *(_OWORD *)(v150 - 22);
                *((_OWORD *)v207 - 2) = v208;
                v150 -= 32;
                v207 -= 32;
              }
              while (v150 != v751);
            }
            v734 = &v205[32 * v204];
            v150 = (unint64_t)(v206 + 32);
            if (v751)
              operator delete((void *)v751);
            v751 = (uint64_t)v209;
          }
          else
          {
            *(_QWORD *)v150 = v157;
            *(_QWORD *)(v150 + 8) = v151;
            *(_BYTE *)(v150 + 24) = v201;
            *(_BYTE *)(v150 + 25) = 0;
            v150 += 32;
          }
LABEL_272:
          v210 = (_QWORD *)v149[1];
          if (v210)
          {
            do
            {
              v211 = v210;
              v210 = (_QWORD *)*v210;
            }
            while (v210);
          }
          else
          {
            do
            {
              v211 = (_QWORD *)v149[2];
              v21 = *v211 == (_QWORD)v149;
              v149 = v211;
            }
            while (!v21);
          }
          v149 = v211;
        }
        while (v211 != v745);
        v232 = (_BYTE *)v751;
        if (v751 == v150)
        {
          v751 = v150;
LABEL_336:
          v231 = (unint64_t *)v737;
        }
        else
        {
          v233 = 0;
          v231 = (unint64_t *)v737;
          v234 = (_QWORD *)v737[5];
          v235 = (uint64_t)(v150 - v751) >> 5;
          v236 = v731 + 2;
          v237 = *(unsigned int **)v751;
          v238 = (v150 - v751) & 0xFFFFFFFFFFFFFFE0;
          v239 = v751 + v238;
          do
          {
            if (v237 != *(unsigned int **)(v751 + v233))
              goto LABEL_361;
            v233 += 32;
          }
          while (v238 != v233);
          if (*((_BYTE *)v737 + 104) || (byte_1ED836D79 & 1) != 0 || byte_1EF8F7308)
            *(_BYTE *)(v751 + 25) = 1;
          LOBYTE(v776) = 0;
          sub_1C5776BC0((uint64_t)v737, (uint64_t)v236, (llvm::Value *)v237, (uint64_t)&v776);
          if ((_BYTE)v776)
          {
            v240 = v237 >> 4;
            if ((v237[8] & 0xF) - 7 <= 1)
            {
              if ((*((_BYTE *)v237 + 23) & 0x10) != 0)
              {
                v241 = ***(_QWORD ***)v237;
                v242 = *(_QWORD *)(v241 + 152);
                v243 = *(unsigned int *)(v241 + 168);
                if (!(_DWORD)v243)
                  goto LABEL_530;
                LODWORD(v244) = (v243 - 1) & (v240 ^ (v237 >> 9));
                v245 = (unsigned int **)(v242 + 16 * v244);
                v246 = *v245;
                if (*v245 != v237)
                {
                  v247 = 1;
                  while (v246 != (unsigned int *)-4096)
                  {
                    v248 = v244 + v247++;
                    v244 = v248 & (v243 - 1);
                    v246 = *(unsigned int **)(v242 + 16 * v244);
                    if (v246 == v237)
                    {
                      v245 = (unsigned int **)(v242 + 16 * v244);
                      goto LABEL_531;
                    }
                  }
LABEL_530:
                  v245 = (unsigned int **)(v242 + 16 * v243);
                }
LABEL_531:
                v373 = v245[1];
                v376 = *(void **)v373;
                v375 = (char *)(v373 + 4);
                v374 = v376;
              }
              else
              {
                v374 = 0;
                v375 = &byte_1C871356D;
              }
              LOWORD(v771) = 773;
              __p[0] = v375;
              __p[1] = v374;
              __p[2] = ".llvm.merged";
              llvm::Twine::str((llvm::Twine *)__p, &v780);
              v377 = (size_t **)*((_QWORD *)v237 + 6);
              if (v377)
              {
                if ((*((_BYTE *)v237 + 23) & 0x10) != 0)
                {
                  v378 = ***(_QWORD ***)v237;
                  v379 = *(_QWORD *)(v378 + 152);
                  v380 = *(unsigned int *)(v378 + 168);
                  if (!(_DWORD)v380)
                    goto LABEL_589;
                  LODWORD(v381) = (v380 - 1) & (v240 ^ (v237 >> 9));
                  v382 = (unsigned int **)(v379 + 16 * v381);
                  v383 = *v382;
                  if (*v382 != v237)
                  {
                    v384 = 1;
                    while (v383 != (unsigned int *)-4096)
                    {
                      v385 = v381 + v384++;
                      v381 = v385 & (v380 - 1);
                      v383 = *(unsigned int **)(v379 + 16 * v381);
                      if (v383 == v237)
                      {
                        v382 = (unsigned int **)(v379 + 16 * v381);
                        goto LABEL_590;
                      }
                    }
LABEL_589:
                    v382 = (unsigned int **)(v379 + 16 * v380);
                  }
LABEL_590:
                  v422 = v382[1];
                  v425 = *(_QWORD *)v422;
                  v423 = (char *)(v422 + 4);
                  v424 = v425;
                }
                else
                {
                  v424 = 0;
                  v423 = &byte_1C871356D;
                }
                v426 = **v377;
                if (v426 == v424 && (!v426 || !memcmp(*v377 + 9, v423, v426)))
                {
                  if (v783 >= 0)
                    v495 = (unsigned __int8 *)&v780;
                  else
                    v495 = (unsigned __int8 *)v780;
                  if (v783 >= 0)
                    v496 = v783 & 0x7F;
                  else
                    v496 = v781;
                  inserted = llvm::Module::getOrInsertComdat(*v737, v495, v496);
                  *((_DWORD *)inserted + 2) = *((_DWORD *)v377 + 2);
                  v498 = (void *)(*v737 + 24);
                  v499 = *(void **)(*v737 + 32);
                  v500 = (void *)(*v737 + 8);
                  v501 = *(void **)(*v737 + 16);
                  __p[0] = v499;
                  __p[1] = v501;
                  __p[2] = v498;
                  __p[3] = v500;
                  while (v499 != v498 || v501 != v500 || __p[2] != v498 || __p[3] != v500)
                  {
                    v503 = 0;
                    do
                    {
                      v504 = (llvm::GlobalObject *)(*(uint64_t (**)(void **))((char *)&off_1E817D0D8 + v503))(__p);
                      if (v504)
                        v505 = 1;
                      else
                        v505 = v503 == 16;
                      v503 += 16;
                    }
                    while (!v505);
                    if (*((size_t ***)v504 + 6) == v377)
                      llvm::GlobalObject::setComdat(v504, (llvm::Comdat *)inserted);
                    v506 = 0;
                    do
                    {
                      if (((*(uint64_t (**)(void **))((char *)&off_1E817D0F8 + v506))(__p) & 1) != 0)
                        break;
                      v21 = v506 == 16;
                      v506 += 16;
                    }
                    while (!v21);
                    v499 = __p[0];
                    v501 = __p[1];
                  }
                  v232 = (_BYTE *)v751;
                  v236 = v731 + 2;
                }
              }
              v427 = v237[8];
              v428 = v427 & 0xFFFFFFF0;
              v237[8] = v427 & 0xFFFFFFF0;
              if ((v427 & 0x30) != 0)
              {
                hasExternalWeakLinkage = llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v237);
                v428 = v237[8];
                if (!hasExternalWeakLinkage)
                  v428 |= 0x4000u;
              }
              v430 = v428 & 0xFFFFFFCF | 0x10;
              v237[8] = v430;
              if ((v428 & 0xF) - 7 < 2)
              {
LABEL_600:
                v237[8] = v430 | 0x4000;
              }
              else if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v237) & 1) == 0)
              {
                v430 = v237[8];
                goto LABEL_600;
              }
              LOWORD(v771) = 260;
              __p[0] = &v780;
              llvm::Value::setName((uint64_t ***)v237, (uint64_t)__p);
              if (v783 < 0)
                operator delete((void *)v780);
            }
            v431 = sub_1C4EE9DE0((llvm::GlobalValue *)v237);
            v432 = v234 + 1;
            v433 = (_QWORD *)v234[1];
            if (!v433)
              goto LABEL_614;
            v434 = v234 + 1;
            do
            {
              v435 = v433[4];
              v436 = v435 >= v431;
              if (v435 >= v431)
                v437 = v433;
              else
                v437 = v433 + 1;
              if (v436)
                v434 = v433;
              v433 = (_QWORD *)*v437;
            }
            while (*v437);
            if (v434 == v432 || v434[4] > v431)
LABEL_614:
              v434 = v234 + 1;
            if (v434 == v432)
              v438 = 0;
            else
              v438 = (uint64_t)(v434 + 4);
            __p[0] = (void *)(v438 & 0xFFFFFFFFFFFFFFF8 | *((unsigned __int8 *)v234 + 133));
            if (__p[0] >= (void *)8)
              sub_1C57792C0(v236, (uint64_t *)__p);
            *(_DWORD *)v726 = 1;
            if ((*((_BYTE *)v237 + 23) & 0x10) == 0)
            {
              v448 = 0;
              HIBYTE(__p[2]) = 0;
              v451 = __p;
              v231 = (unint64_t *)v737;
              goto LABEL_636;
            }
            v439 = ***(_QWORD ***)v237;
            v440 = *(_QWORD *)(v439 + 152);
            v441 = *(unsigned int *)(v439 + 168);
            if (!(_DWORD)v441)
              goto LABEL_627;
            LODWORD(v442) = (v441 - 1) & (v240 ^ (v237 >> 9));
            v443 = (unsigned int **)(v440 + 16 * v442);
            v444 = *v443;
            if (*v443 != v237)
            {
              v445 = 1;
              while (v444 != (unsigned int *)-4096)
              {
                v446 = v442 + v445++;
                v442 = v446 & (v441 - 1);
                v444 = *(unsigned int **)(v440 + 16 * v442);
                if (v444 == v237)
                {
                  v443 = (unsigned int **)(v440 + 16 * v442);
                  goto LABEL_628;
                }
              }
LABEL_627:
              v443 = (unsigned int **)(v440 + 16 * v441);
            }
LABEL_628:
            v447 = (unint64_t *)v443[1];
            v450 = *v447;
            v449 = v447 + 2;
            v448 = v450;
            if (v450 <= 0x7FFFFFFFFFFFFFF7)
            {
              v231 = (unint64_t *)v737;
              if (v448 >= 0x17)
              {
                v452 = (v448 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v448 | 7) != 0x17)
                  v452 = v448 | 7;
                v453 = v452 + 1;
                v451 = operator new(v452 + 1);
                __p[1] = (void *)v448;
                __p[2] = (void *)(v453 | 0x8000000000000000);
                __p[0] = v451;
              }
              else
              {
                HIBYTE(__p[2]) = v448;
                v451 = __p;
                if (!v448)
                  goto LABEL_636;
              }
              memmove(v451, v449, v448);
LABEL_636:
              *((_BYTE *)v451 + v448) = 0;
              v454 = (void **)(v726 + 8);
              if (v726[31] < 0)
                operator delete(*v454);
              *(_OWORD *)v454 = *(_OWORD *)__p;
              *((void **)v726 + 3) = __p[2];
              goto LABEL_639;
            }
LABEL_1023:
            abort();
          }
          v237 = *(unsigned int **)v751;
LABEL_361:
          v261 = **(_QWORD **)(*((_QWORD *)v237 + 3) + 16);
          v262 = *(unsigned int *)(v261 + 8);
          if (v261)
            v263 = *(_DWORD *)(v261 + 8) == 13;
          else
            v263 = 0;
          if (!v263 || v262 >> 8 > 0x40)
          {
            v264 = 0;
            goto LABEL_505;
          }
          v265 = 0;
          v266 = (char *)*v731;
          v724 = v731[1];
          v725 = v262 >> 8;
          v746 = 32 * v235;
          do
          {
            v267 = *(_QWORD *)(v751 + v265);
            if (v267)
              v268 = *(_BYTE *)(v267 + 16) == 3;
            else
              v268 = 0;
            if (v268)
            {
              if ((*(_DWORD *)(v267 + 20) & 0x7FFFFFF) == 0)
                goto LABEL_504;
            }
            else if (!*(_BYTE *)(v267 + 16)
                   && *(_QWORD *)(v267 + 72) == v267 + 72
                   && (*(_BYTE *)(v267 + 34) & 0x80) == 0)
            {
              goto LABEL_504;
            }
            v269 = (llvm::Function *)((uint64_t (*)(uint64_t, _QWORD))v737[1])(v737[2], *(_QWORD *)(v751 + v265));
            if (llvm::computeFunctionBodyMemoryAccess((llvm *)v267, v269, v270) != 4)
              goto LABEL_504;
            v271 = *(_QWORD *)(v751 + v265);
            if (!*(_QWORD *)(v271 + 96))
              goto LABEL_504;
            if ((*(_WORD *)(v271 + 18) & 1) != 0)
              llvm::Function::BuildLazyArguments(*(llvm::Function **)(v751 + v265));
            if (*(_QWORD *)(*(_QWORD *)(v271 + 88) + 8)
              || **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v751 + v265) + 24) + 16) != v261)
            {
LABEL_504:
              v264 = 0;
              v231 = (unint64_t *)v737;
              goto LABEL_505;
            }
            v265 += 32;
          }
          while (v746 != v265);
          v723 = v266;
          v272 = (unint64_t **)v731[12];
          v231 = (unint64_t *)v737;
          if (v272 == (unint64_t **)(v731 + 13))
          {
            v264 = 1;
            goto LABEL_505;
          }
          v741 = (uint64_t)(v150 - v751) >> 5;
          while (2)
          {
            v273 = v272[4];
            v274 = v272[5];
            v275 = v232;
            v276 = v274 - v273;
            while (2)
            {
              if (*(_QWORD *)(*(_QWORD *)v275 + 96) != v276 + 1)
                goto LABEL_453;
              sub_1C56E9E60((uint64_t)__p, *v737 + 272, 0);
              v780 = (unint64_t)&v782;
              v781 = 0x200000000;
              NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v275 + 24) + 16) + 8), v277);
              v281 = v781;
              if (v781 >= (unint64_t)HIDWORD(v781))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v780, (uint64_t)&v782, v781 + 1, 8);
                v281 = v781;
              }
              *(_QWORD *)(v780 + 8 * v281) = NullValue;
              LODWORD(v781) = v781 + 1;
              if (v274 == v273)
              {
LABEL_410:
                v776 = 0;
                if (!llvm::Evaluator::EvaluateFunction((uint64_t)__p, *(llvm::Function **)v275, (uint64_t *)&v776, &v780)|| v776[16] != 16)
                {
                  goto LABEL_415;
                }
                v292 = v776 + 24;
                if (*((_DWORD *)v776 + 8) >= 0x41u)
                  v292 = (_QWORD *)*v292;
                v293 = 0;
                *((_QWORD *)v275 + 2) = *v292;
              }
              else
              {
                v282 = 0;
                v283 = 2;
                while (1)
                {
                  v284 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v275 + 24) + 16) + 8 * v283);
                  v285 = *(_DWORD *)(v284 + 8);
                  if (!v284 || *(_DWORD *)(v284 + 8) != 13)
                    break;
                  v287 = v273[v282];
                  v288 = *(llvm::ConstantInt **)v284;
                  LODWORD(v777) = *(_DWORD *)(v284 + 8) >> 8;
                  if (v285 >> 8 > 0x40)
                  {
                    llvm::APInt::initSlowCase((llvm::APInt *)&v776, v287, 0);
                  }
                  else
                  {
                    v289 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v285);
                    if (v285 <= 0xFF)
                      v289 = 0;
                    v776 = (char *)(v289 & v287);
                  }
                  v290 = llvm::ConstantInt::get(v288, (llvm::LLVMContext *)&v776, v279);
                  if (v777 >= 0x41 && v776)
                    MEMORY[0x1CAA32F9C](v776, 0x1000C8000313F17);
                  v291 = v781;
                  if (v781 >= (unint64_t)HIDWORD(v781))
                  {
                    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v780, (uint64_t)&v782, v781 + 1, 8);
                    v291 = v781;
                  }
                  *(_QWORD *)(v780 + 8 * v291) = v290;
                  v282 = v283 - 1;
                  LODWORD(v781) = v781 + 1;
                  ++v283;
                  if (v276 == v282)
                    goto LABEL_410;
                }
LABEL_415:
                v293 = 1;
              }
              if ((int *)v780 != &v782)
                free((void *)v780);
              sub_1C56EA284((uint64_t)__p, v278);
              if (v293)
                goto LABEL_453;
              v275 += 32;
              if (v275 != (_BYTE *)v239)
                continue;
              break;
            }
            if (v726)
            {
              __p[0] = v272 + 4;
              v294 = sub_1C61CEBFC((uint64_t)(v726 + 32), v272 + 4, (uint64_t)&std::piecewise_construct, (uint64_t *)__p)
                   + 7;
            }
            else
            {
              v294 = 0;
            }
            v295 = 0;
            v296 = *(_QWORD *)(v751 + 16);
            while (2)
            {
              if (*(_QWORD *)(v751 + v295 + 16) != v296)
              {
                v307 = v272[4];
                v308 = v272[5] - v307;
                v780 = v751;
                v781 = (uint64_t)(v150 - v751) >> 5;
                v776 = v723;
                v777 = (void *)v724;
                v769[0] = v307;
                v769[1] = v308;
                v768 = v294;
                __p[0] = &v780;
                __p[1] = v737;
                __p[2] = v272 + 7;
                __p[3] = &v768;
                v771 = &v776;
                v772 = v769;
                if ((_DWORD)v725 == 1
                  && ((sub_1C57797A0((uint64_t ******)__p, 1u) & 1) != 0
                   || (sub_1C57797A0((uint64_t ******)__p, 0) & 1) != 0))
                {
                  goto LABEL_453;
                }
                LowestOffset = llvm::wholeprogramdevirt::findLowestOffset(v751, v741, 0, v725);
                v310 = llvm::wholeprogramdevirt::findLowestOffset(v751, v741, 1, v725);
                v311 = 0;
                v312 = 0;
                v313 = 0;
                do
                {
                  v314 = **(_QWORD ***)(v751 + v311 + 8);
                  v315 = *(_QWORD *)(*(_QWORD *)(v751 + v311 + 8) + 8);
                  v316 = ((LowestOffset + 7) >> 3) + v314[2] + ~(v315 + v314[3]);
                  v312 += v316 & ~(v316 >> 63);
                  v317 = ~(v314[1] + v314[9]);
                  v313 += (v315 + ((v310 + 7) >> 3) + v314[8] + v317) & ~((uint64_t)(v315
                                                                                  + ((v310 + 7) >> 3)
                                                                                  + v314[8]
                                                                                  + v317) >> 63);
                  v311 += 32;
                }
                while (v746 != v311);
                v318 = v313 >= v312 ? v312 : v313;
                if (v318 > 0x80)
                  goto LABEL_453;
                v780 = 0;
                v776 = 0;
                if (v313 >= v312)
                  llvm::wholeprogramdevirt::setBeforeReturnValues((_BYTE *)v751, v741, LowestOffset, v725, &v780, (unint64_t *)&v776);
                else
                  llvm::wholeprogramdevirt::setAfterReturnValues((_BYTE *)v751, v741, v310, v725, &v780, (unint64_t *)&v776);
                if (*((_BYTE *)v737 + 104) || (byte_1ED836D79 & 1) != 0 || byte_1EF8F7308)
                {
                  v328 = (_BYTE *)(v751 + 25);
                  v329 = v746;
                  do
                  {
                    *v328 = 1;
                    v328 += 32;
                    v329 -= 32;
                  }
                  while (v329);
                }
                if (*((_BYTE *)v272 + 81) || v272[11] != v272[12])
                {
                  *(_DWORD *)v294 = 3;
                  sub_1C5779644((uint64_t)v737, (uint64_t)v723, v724, v272[4], v272[5] - v272[4], "byte", 4uLL, v780, (unsigned int *)v294 + 4);
                  sub_1C5779644((uint64_t)v737, (uint64_t)v723, v724, v272[4], v272[5] - v272[4], "bit", 3uLL, 1 << (char)v776, (unsigned int *)v294 + 5);
                }
                v330 = (llvm::ConstantInt **)v737[9];
                v331 = *v330;
                v332 = *((unsigned int *)v330 + 2);
                LODWORD(__p[1]) = v332 >> 8;
                if (v332 >> 8 > 0x40)
                {
                  llvm::APInt::initSlowCase((llvm::APInt *)__p, v780, 0);
                }
                else
                {
                  if (v332 <= 0xFF)
                    v333 = 0;
                  else
                    v333 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v332);
                  __p[0] = (void *)(v333 & v780);
                }
                v335 = llvm::ConstantInt::get(v331, (llvm::LLVMContext *)__p, v319);
                if (LODWORD(__p[1]) >= 0x41 && __p[0])
                  MEMORY[0x1CAA32F9C](__p[0], 0x1000C8000313F17);
                v336 = (llvm::ConstantInt **)v737[7];
                v337 = 1 << (char)v776;
                v338 = *v336;
                v339 = *((unsigned int *)v336 + 2);
                LODWORD(__p[1]) = v339 >> 8;
                if (v339 >> 8 > 0x40)
                {
                  llvm::APInt::initSlowCase((llvm::APInt *)__p, v337, 0);
                }
                else
                {
                  if (v339 <= 0xFF)
                    v340 = 0;
                  else
                    v340 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v339);
                  __p[0] = (void *)(v340 & v337);
                }
                v341 = llvm::ConstantInt::get(v338, (llvm::LLVMContext *)__p, v334);
                if (LODWORD(__p[1]) >= 0x41 && __p[0])
                  MEMORY[0x1CAA32F9C](__p[0], 0x1000C8000313F17);
                v342 = *(unsigned int **)v751;
                if ((*(_BYTE *)(*(_QWORD *)v751 + 23) & 0x10) != 0)
                {
                  v343 = ***(_QWORD ***)v342;
                  v344 = *(_QWORD *)(v343 + 152);
                  v345 = *(unsigned int *)(v343 + 168);
                  if (!(_DWORD)v345)
                    goto LABEL_494;
                  LODWORD(v346) = (v345 - 1) & ((v342 >> 4) ^ (v342 >> 9));
                  v347 = (unsigned int **)(v344 + 16 * v346);
                  v348 = *v347;
                  if (*v347 != v342)
                  {
                    v349 = 1;
                    while (v348 != (unsigned int *)-4096)
                    {
                      v350 = v346 + v349++;
                      v346 = v350 & (v345 - 1);
                      v348 = *(unsigned int **)(v344 + 16 * v346);
                      if (v348 == v342)
                      {
                        v347 = (unsigned int **)(v344 + 16 * v346);
                        goto LABEL_495;
                      }
                    }
LABEL_494:
                    v347 = (unsigned int **)(v344 + 16 * v345);
                  }
LABEL_495:
                  v351 = v347[1];
                  v354 = *(_QWORD *)v351;
                  v352 = (char *)(v351 + 4);
                  v353 = v354;
                }
                else
                {
                  v353 = 0;
                  v352 = &byte_1C871356D;
                }
                sub_1C5777598((uint64_t)v737, (__int128 **)v272 + 7, v352, v353, (uint64_t)v335, (uint64_t)v341);
                goto LABEL_453;
              }
              v295 += 32;
              if (v746 != v295)
                continue;
              break;
            }
            if (*((_BYTE *)v272 + 81))
              v297 = 0;
            else
              v297 = v272[11] == v272[12];
            if (!v297)
            {
              *(_DWORD *)v294 = 1;
              v294[1] = v296;
            }
            v298 = *(unsigned int **)v751;
            if ((*(_BYTE *)(*(_QWORD *)v751 + 23) & 0x10) != 0)
            {
              v299 = ***(_QWORD ***)v298;
              v300 = *(_QWORD *)(v299 + 152);
              v301 = *(unsigned int *)(v299 + 168);
              if (!(_DWORD)v301)
                goto LABEL_448;
              LODWORD(v302) = (v301 - 1) & ((v298 >> 4) ^ (v298 >> 9));
              v303 = (unsigned int **)(v300 + 16 * v302);
              v304 = *v303;
              if (*v303 != v298)
              {
                v305 = 1;
                while (v304 != (unsigned int *)-4096)
                {
                  v306 = v302 + v305++;
                  v302 = v306 & (v301 - 1);
                  v304 = *(unsigned int **)(v300 + 16 * v302);
                  if (v304 == v298)
                  {
                    v303 = (unsigned int **)(v300 + 16 * v302);
                    goto LABEL_449;
                  }
                }
LABEL_448:
                v303 = (unsigned int **)(v300 + 16 * v301);
              }
LABEL_449:
              v320 = v303[1];
              v323 = *(_QWORD *)v320;
              v321 = (char *)(v320 + 4);
              v322 = v323;
            }
            else
            {
              v322 = 0;
              v321 = &byte_1C871356D;
            }
            sub_1C5776D30((uint64_t)v737, (__int128 **)v272 + 7, v321, v322, v296);
            if (*((_BYTE *)v737 + 104) || (byte_1ED836D79 & 1) != 0 || byte_1EF8F7308)
            {
              v324 = (_BYTE *)(v751 + 25);
              v325 = v746;
              do
              {
                *v324 = 1;
                v324 += 32;
                v325 -= 32;
              }
              while (v325);
            }
LABEL_453:
            v326 = (uint64_t *)v272[1];
            if (v326)
            {
              do
              {
                v327 = v326;
                v326 = (uint64_t *)*v326;
              }
              while (v326);
            }
            else
            {
              do
              {
                v327 = (uint64_t *)v272[2];
                v21 = *v327 == (_QWORD)v272;
                v272 = (unint64_t **)v327;
              }
              while (!v21);
            }
            v264 = 1;
            v272 = (unint64_t **)v327;
            v236 = v731 + 2;
            v231 = (unint64_t *)v737;
            v232 = (_BYTE *)v751;
            v235 = (uint64_t)(v150 - v751) >> 5;
            if (v327 != v731 + 13)
              continue;
            break;
          }
LABEL_505:
          v355 = (_BYTE *)*v731;
          v356 = v731[1];
          v357 = *v231 + 216;
          v784 = 260;
          v780 = v357;
          llvm::Triple::Triple((uint64_t)__p, (llvm::Twine *)&v780);
          if (LODWORD(__p[3]) != 42 || v235 > dword_1ED810218)
            goto LABEL_520;
          if (*((_BYTE *)v731 + 40))
          {
            v359 = (uint64_t *)v731[12];
            if (v359 == v731 + 13)
              goto LABEL_520;
            v360 = 0;
            while (1)
            {
              v361 = *((_BYTE *)v359 + 80) == 0;
              if (!*((_BYTE *)v359 + 80))
                break;
              v362 = (uint64_t *)v359[1];
              if (v362)
              {
                do
                {
                  v363 = v362;
                  v362 = (uint64_t *)*v362;
                }
                while (v362);
              }
              else
              {
                do
                {
                  v363 = (uint64_t *)v359[2];
                  v21 = *v363 == (_QWORD)v359;
                  v359 = v363;
                }
                while (!v21);
              }
              v360 |= v361;
              v359 = v363;
              if (v363 == v731 + 13)
              {
                if ((v360 & 1) == 0)
                  goto LABEL_520;
                break;
              }
            }
          }
          v735 = (uint64_t)v236;
          v364 = (uint64_t **)(**(_QWORD **)*v231 + 1576);
          v780 = v231[8];
          v365 = (llvm::PointerType *)llvm::FunctionType::get(v364, (uint64_t *)&v780, 1, 1);
          v366 = *v231;
          v367 = (llvm::Type *)*(unsigned int *)(*v231 + 284);
          if (*v355)
          {
            v780 = (unint64_t)"branch_funnel";
            v784 = 259;
            v386 = (char *)operator new(0x80uLL);
            v370 = (uint64_t *)(v386 + 8);
            *((_DWORD *)v386 + 7) = *((_DWORD *)v386 + 7) & 0x38000000 | 0x40000000;
            *(_QWORD *)v386 = 0;
            llvm::Function::Function((uint64_t *)v386 + 1, v365, 7, v367, (uint64_t)&v780, v366);
          }
          else
          {
            sub_1C5777AD8((uint64_t)&v776, (uint64_t)v355, v356, 0, 0, "branch_funnel", 0xDuLL);
            v784 = 260;
            v780 = (unint64_t)&v776;
            v368 = *v231;
            v369 = (char *)operator new(0x80uLL);
            v370 = (uint64_t *)(v369 + 8);
            *((_DWORD *)v369 + 7) = *((_DWORD *)v369 + 7) & 0x38000000 | 0x40000000;
            *(_QWORD *)v369 = 0;
            llvm::Function::Function((uint64_t *)v369 + 1, v365, 0, v367, (uint64_t)&v780, v368);
            if (v779 < 0)
              operator delete(v776);
            v371 = *((_DWORD *)v369 + 10);
            v372 = v371 & 0xFFFFFFCF | 0x10;
            *((_DWORD *)v369 + 10) = v372;
            if ((v371 & 0xFu) - 7 < 2)
            {
LABEL_529:
              *((_DWORD *)v369 + 10) = v372 | 0x4000;
            }
            else if ((llvm::GlobalValue::hasExternalWeakLinkage((llvm::GlobalValue *)v370) & 1) == 0)
            {
              v372 = *((_DWORD *)v369 + 10);
              goto LABEL_529;
            }
          }
          v370[14] = llvm::AttributeList::addAttributeAtIndex(v370 + 14, *(uint64_t **)*v370, 1, 18);
          if ((*((_WORD *)v370 + 9) & 1) != 0)
            llvm::Function::BuildLazyArguments((llvm::Function *)v370);
          v747 = (uint64_t)v370;
          v387 = v370[11];
          v388 = (char *)operator new(8uLL);
          *(_QWORD *)v388 = v387;
          v389 = v388 + 8;
          v390 = v751;
          v391 = (uint64_t *)(v388 + 8);
          while (2)
          {
            v392 = sub_1C5779974(v737, *(uint64_t ****)(v390 + 8));
            v393 = v392;
            if (v391 < (uint64_t *)v389)
            {
              *v391 = v392;
              v394 = (char *)(v391 + 1);
              goto LABEL_563;
            }
            v395 = ((char *)v391 - v388) >> 3;
            v396 = v395 + 1;
            if ((unint64_t)(v395 + 1) >> 61)
              goto LABEL_1023;
            if ((v389 - v388) >> 2 > v396)
              v396 = (v389 - v388) >> 2;
            if ((unint64_t)(v389 - v388) >= 0x7FFFFFFFFFFFFFF8)
              v397 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v397 = v396;
            if (v397)
            {
              if (v397 >> 61)
                goto LABEL_1024;
              v398 = (char *)operator new(8 * v397);
            }
            else
            {
              v398 = 0;
            }
            v399 = (uint64_t *)&v398[8 * v395];
            v389 = &v398[8 * v397];
            *v399 = v393;
            v394 = (char *)(v399 + 1);
            if (v391 == (uint64_t *)v388)
            {
              v388 = (char *)v391;
            }
            else
            {
              do
              {
                v400 = *--v391;
                *--v399 = v400;
              }
              while (v391 != (uint64_t *)v388);
              if (!v388)
                goto LABEL_562;
            }
            operator delete(v388);
LABEL_562:
            v388 = (char *)v399;
LABEL_563:
            v401 = *(_QWORD *)v390;
            if (v394 >= v389)
            {
              v402 = (v394 - v388) >> 3;
              v403 = v402 + 1;
              if ((unint64_t)(v402 + 1) >> 61)
                goto LABEL_1023;
              if ((v389 - v388) >> 2 > v403)
                v403 = (v389 - v388) >> 2;
              if ((unint64_t)(v389 - v388) >= 0x7FFFFFFFFFFFFFF8)
                v404 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v404 = v403;
              if (v404)
              {
                if (v404 >> 61)
                  goto LABEL_1024;
                v405 = (char *)operator new(8 * v404);
              }
              else
              {
                v405 = 0;
              }
              v406 = &v405[8 * v402];
              v389 = &v405[8 * v404];
              *(_QWORD *)v406 = v401;
              v391 = (uint64_t *)(v406 + 8);
              if (v394 == v388)
                goto LABEL_578;
              do
              {
                v407 = *((_QWORD *)v394 - 1);
                v394 -= 8;
                *((_QWORD *)v406 - 1) = v407;
                v406 -= 8;
              }
              while (v394 != v388);
              if (v388)
LABEL_578:
                operator delete(v388);
              v388 = v406;
            }
            else
            {
              *(_QWORD *)v394 = v401;
              v391 = (uint64_t *)(v394 + 8);
            }
            v390 += 32;
            if (v390 != v239)
              continue;
            break;
          }
          v408 = *(_QWORD **)*v737;
          v784 = 257;
          v409 = operator new();
          *(_QWORD *)v409 = *v408 + 1600;
          *(_QWORD *)(v409 + 8) = 0;
          v410 = *(_DWORD *)(v409 + 20) & 0xC0000000;
          *(_DWORD *)(v409 + 16) = 22;
          *(_DWORD *)(v409 + 20) = v410;
          *(_QWORD *)(v409 + 24) = 0;
          *(_QWORD *)(v409 + 32) = 0;
          *(_QWORD *)(v409 + 40) = v409 + 40;
          *(_QWORD *)(v409 + 48) = v409 + 40;
          *(_QWORD *)(v409 + 56) = 0;
          llvm::SymbolTableListTraits<llvm::BasicBlock>::addNodeToList(v747 + 72, (_QWORD *)v409);
          v411 = *(_QWORD *)(v747 + 72);
          *(_QWORD *)(v409 + 32) = v747 + 72;
          *(_QWORD *)(v409 + 24) = v411;
          *(_QWORD *)(v411 + 8) = v409 + 24;
          *(_QWORD *)(v747 + 72) = v409 + 24;
          llvm::Value::setName((uint64_t ***)v409, (uint64_t)&v780);
          Declaration = llvm::Intrinsic::getDeclaration((uint64_t *)*v737, 157, 0, 0);
          v413 = Declaration;
          v414 = 0;
          if (Declaration)
            v414 = *(uint64_t ***)(Declaration + 24);
          v415 = ((char *)v391 - v388) >> 3;
          v416 = (v415 + 1);
          v784 = 257;
          v417 = (llvm::Instruction *)operator new(32 * v416 + 80);
          v418 = (llvm::Instruction *)((char *)v417 + 32 * v416);
          *((_DWORD *)v418 + 5) = *((_DWORD *)v418 + 5) & 0x38000000 | v416 & 0x7FFFFFF;
          v232 = (_BYTE *)v751;
          if ((_DWORD)v415 != -1)
          {
            do
            {
              *(_QWORD *)v417 = 0;
              *((_QWORD *)v417 + 1) = 0;
              *((_QWORD *)v417 + 2) = 0;
              *((_QWORD *)v417 + 3) = v418;
              v417 = (llvm::Instruction *)((char *)v417 + 32);
            }
            while (v417 != v418);
          }
          v419 = sub_1C61DD0B0(v418, v414, v413, (uint64_t *)v388, v415, 0, 0, (uint64_t)&v780, (llvm::BasicBlock *)v409);
          *((_WORD *)v419 + 9) = *((_WORD *)v419 + 9) & 0xFFFC | 2;
          v231 = (unint64_t *)v737;
          v420 = *(llvm::LLVMContext **)*v737;
          v421 = (llvm::ReturnInst *)operator new(0x40uLL);
          *((_DWORD *)v421 + 5) &= 0x38000000u;
          llvm::ReturnInst::ReturnInst(v421, v420, 0, (llvm::BasicBlock *)v409);
          LOBYTE(v780) = 0;
          sub_1C5777D14((uint64_t)v737, v735, v747, (uint64_t)&v780);
          if ((_BYTE)v780)
            *(_DWORD *)v726 = 2;
          if (v388)
            operator delete(v388);
LABEL_520:
          if (SHIBYTE(__p[2]) < 0)
            operator delete(__p[0]);
          v729 |= v264;
LABEL_639:
          if (*((_BYTE *)v231 + 104) || (byte_1ED836D79 & 1) != 0 || byte_1EF8F7308)
          {
            v455 = v232;
            while (!v455[25])
            {
LABEL_695:
              v455 += 32;
              if (v455 == (_BYTE *)v150)
                goto LABEL_337;
            }
            v456 = *(uint64_t ****)v455;
            v748 = *(uint64_t **)v455;
            if ((*(_BYTE *)(*(_QWORD *)v455 + 23) & 0x10) != 0)
            {
              v457 = ***v456;
              v458 = *(_QWORD *)(v457 + 152);
              v459 = *(unsigned int *)(v457 + 168);
              if (!(_DWORD)v459)
                goto LABEL_649;
              LODWORD(v460) = (v459 - 1) & ((v456 >> 4) ^ (v456 >> 9));
              v461 = (uint64_t ****)(v458 + 16 * v460);
              v462 = *v461;
              if (*v461 != v456)
              {
                v463 = 1;
                while (v462 != (uint64_t ***)-4096)
                {
                  v464 = v460 + v463++;
                  v460 = v464 & (v459 - 1);
                  v462 = *(uint64_t ****)(v458 + 16 * v460);
                  if (v462 == v456)
                  {
                    v461 = (uint64_t ****)(v458 + 16 * v460);
                    goto LABEL_650;
                  }
                }
LABEL_649:
                v461 = (uint64_t ****)(v458 + 16 * v459);
              }
LABEL_650:
              v465 = (unint64_t *)v461[1];
              v468 = *v465;
              v467 = v465 + 2;
              v466 = v468;
              if (v468 > 0x7FFFFFFFFFFFFFF7)
                goto LABEL_1023;
              if (v466 >= 0x17)
              {
                v470 = (v466 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v466 | 7) != 0x17)
                  v470 = v466 | 7;
                v471 = v470 + 1;
                v469 = operator new(v470 + 1);
                __p[1] = (void *)v466;
                __p[2] = (void *)(v471 | 0x8000000000000000);
                __p[0] = v469;
              }
              else
              {
                HIBYTE(__p[2]) = v466;
                v469 = __p;
                if (!v466)
                  goto LABEL_658;
              }
              memmove(v469, v467, v466);
            }
            else
            {
              v466 = 0;
              HIBYTE(__p[2]) = 0;
              v469 = __p;
            }
LABEL_658:
            *((_BYTE *)v469 + v466) = 0;
            v472 = v761;
            v473 = &v761;
            v474 = &v761;
            if (v761)
            {
              v475 = HIBYTE(__p[2]);
              if (SHIBYTE(__p[2]) >= 0)
                v476 = (void *)HIBYTE(__p[2]);
              else
                v476 = __p[1];
              if (SHIBYTE(__p[2]) >= 0)
                v477 = __p;
              else
                v477 = (void **)__p[0];
              while (1)
              {
                while (1)
                {
                  v473 = (uint64_t **)v472;
                  v480 = v472[4];
                  v478 = v472 + 4;
                  v479 = (uint64_t *)v480;
                  v481 = *((unsigned __int8 *)v478 + 23);
                  if ((v481 & 0x80u) == 0)
                    v482 = v478;
                  else
                    v482 = v479;
                  v483 = v478[1];
                  if ((v481 & 0x80u) == 0)
                    v484 = v481 & 0x7F;
                  else
                    v484 = v478[1];
                  if (v484 >= (unint64_t)v476)
                    v485 = (size_t)v476;
                  else
                    v485 = v484;
                  v486 = memcmp(v477, v482, v485);
                  v487 = (unint64_t)v476 < v484;
                  if (v486)
                    v487 = v486 < 0;
                  if (!v487)
                    break;
                  v472 = *v473;
                  v474 = v473;
                  if (!*v473)
                    goto LABEL_690;
                }
                if ((v481 & 0x80u) == 0)
                  v488 = v481;
                else
                  v488 = v483;
                if ((unint64_t)v476 >= v488)
                  v489 = v488;
                else
                  v489 = (size_t)v476;
                v490 = memcmp(v482, v477, v489);
                v491 = v488 < (unint64_t)v476;
                if (v490)
                  v491 = v490 < 0;
                if (!v491)
                  break;
                v472 = v473[1];
                if (!v472)
                {
                  v474 = v473 + 1;
                  goto LABEL_690;
                }
              }
            }
            else
            {
LABEL_690:
              v492 = (uint64_t *)v473;
              v473 = (uint64_t **)operator new(0x40uLL);
              *((_OWORD *)v473 + 2) = *(_OWORD *)__p;
              v493 = (uint64_t *)__p[2];
              memset(__p, 0, 24);
              v473[6] = v493;
              v473[7] = 0;
              *v473 = 0;
              v473[1] = 0;
              v473[2] = v492;
              *v474 = (uint64_t *)v473;
              v494 = (uint64_t *)v473;
              if (*v760)
              {
                v760 = (uint64_t **)*v760;
                v494 = *v474;
              }
              sub_1C4768E74(v761, v494);
              ++v762;
              v475 = HIBYTE(__p[2]);
            }
            v231 = (unint64_t *)v737;
            v473[7] = v748;
            if (v475 < 0)
              operator delete(__p[0]);
            goto LABEL_695;
          }
        }
LABEL_337:
        v142 = v731;
        v143 = v727;
LABEL_338:
        if (v231[5])
        {
          if (!*(_BYTE *)*v142)
          {
            v249 = *(_QWORD *)(*v142 + 8);
            v250 = *(_QWORD *)v249;
            *(_OWORD *)__p = xmmword_1C85F4BB0;
            __p[2] = 0;
            llvm::MD5::update((int *)__p, (int *)(v249 + 24), v250);
            llvm::MD5::final((int *)__p, (int *)&v780);
            v251 = v780;
            v252 = (uint64_t *)v142[6];
            v253 = (uint64_t *)v142[7];
            while (v252 != v253)
            {
              v254 = *v252++;
              sub_1C62A6580(v254, v251);
            }
            v255 = (uint64_t *)v142[12];
            if (v255 != v142 + 13)
            {
              do
              {
                v256 = (uint64_t *)v255[11];
                v257 = (uint64_t *)v255[12];
                while (v256 != v257)
                {
                  v258 = *v256++;
                  sub_1C62A6580(v258, v251);
                }
                v259 = (uint64_t *)v255[1];
                if (v259)
                {
                  do
                  {
                    v260 = v259;
                    v259 = (uint64_t *)*v259;
                  }
                  while (v259);
                }
                else
                {
                  do
                  {
                    v260 = (uint64_t *)v255[2];
                    v21 = *v260 == (_QWORD)v255;
                    v255 = v260;
                  }
                  while (!v21);
                }
                v255 = v260;
              }
              while (v260 != v142 + 13);
            }
          }
        }
        if (v751)
          operator delete((void *)v751);
        v142 += 15;
        v55 = (uint64_t)v737;
        if (v142 == v143)
          goto LABEL_745;
      }
    }
    v729 = 0;
LABEL_745:
    if (*(_BYTE *)(v55 + 104))
    {
      v507 = (uint64_t)v760;
      if (v760 != &v761)
      {
        v508 = "wholeprogramdevirt";
        v509 = "Devirtualized";
        v510 = "devirtualized ";
        do
        {
          v511 = *(_QWORD *)(v507 + 56);
          v512 = (llvm::OptimizationRemarkEmitter *)((uint64_t (*)(uint64_t, uint64_t))v737[14])(v737[15], v511);
          llvm::OptimizationRemark::OptimizationRemark((uint64_t)__p, (uint64_t)v508, (uint64_t)v509, 13, v511);
          v780 = (unint64_t)v510;
          v781 = 14;
          sub_1C53B17B4((uint64_t)&v773, (const void **)&v780);
          v513 = *(_BYTE *)(v507 + 55);
          if (v513 >= 0)
            v514 = (void *)(v507 + 32);
          else
            v514 = *(void **)(v507 + 32);
          if (v513 >= 0)
            v515 = v513 & 0x7F;
          else
            v515 = *(_QWORD *)(v507 + 40);
          llvm::DiagnosticInfoOptimizationBase::Argument::Argument(__dst, "FunctionName", 0xCuLL, v514, v515);
          v516 = (llvm::DiagnosticInfoOptimizationBase *)sub_1C47E3888((uint64_t)__p, (uint64_t)__dst);
          llvm::OptimizationRemarkEmitter::emit(v512, v516);
          if (v759 < 0)
            operator delete(v758);
          if (v757 < 0)
            operator delete(__dst[0]);
          __p[0] = &off_1E814E790;
          v517 = (char *)v773;
          if (v774)
          {
            v518 = v510;
            v519 = v509;
            v520 = v508;
            v521 = (unint64_t)v774 << 6;
            do
            {
              v522 = (void **)&v517[v521];
              if (v517[v521 - 17] < 0)
                operator delete(*(v522 - 5));
              if (*((char *)v522 - 41) < 0)
                operator delete(*(v522 - 8));
              v521 -= 64;
            }
            while (v521);
            v517 = (char *)v773;
            v508 = v520;
            v509 = v519;
            v510 = v518;
          }
          if (v517 != (char *)&v775)
            free(v517);
          v523 = *(uint64_t **)(v507 + 8);
          if (v523)
          {
            do
            {
              v524 = (uint64_t **)v523;
              v523 = (uint64_t *)*v523;
            }
            while (v523);
          }
          else
          {
            do
            {
              v524 = *(uint64_t ***)(v507 + 16);
              v21 = *v524 == (uint64_t *)v507;
              v507 = (uint64_t)v524;
            }
            while (!v21);
          }
          v507 = (uint64_t)v524;
        }
        while (v524 != &v761);
      }
    }
    sub_1C5775F50((uint64_t **)v737, v85, v54);
    if ((v729 & 1) == 0 || (v525 = (unint64_t *)v766[0], v526 = (unint64_t *)v766[1], v766[0] == v766[1]))
    {
LABEL_854:
      v600 = *v737 + 8;
      for (k = *(_QWORD *)(*v737 + 16); k != v600; k = *(_QWORD *)(k + 8))
      {
        if (k)
          v602 = (_QWORD **)(k - 56);
        else
          v602 = 0;
        if ((*((_BYTE *)v602 + 23) & 0x20) != 0)
        {
          v603 = *(_QWORD *)**v602 + 2480;
          __p[0] = v602;
          v604 = sub_1C541AA4C(v603, (uint64_t *)__p);
          llvm::MDAttachments::erase((llvm::MDAttachments *)(v604 + 1), 28);
          if (!*((_DWORD *)v604 + 4))
          {
            v605 = *((_DWORD *)v602 + 5);
            if ((v605 & 0x20000000) != 0)
            {
              v606 = (int32x2_t **)**v602;
              v607 = *v606;
              v608 = (*v606)[312].i32[0];
              if (v608)
              {
                v609 = v607[310];
                v610 = v608 - 1;
                v611 = v610 & ((v602 >> 4) ^ (v602 >> 9));
                v612 = *(_QWORD *)&v609 + 40 * v611;
                v613 = *(_QWORD ***)v612;
                if (*(_QWORD ***)v612 == v602)
                {
LABEL_868:
                  v616 = *(char **)(v612 + 8);
                  v617 = *(unsigned int *)(v612 + 16);
                  if ((_DWORD)v617)
                  {
                    v618 = v616 - 8;
                    v619 = 16 * v617;
                    do
                    {
                      v620 = *(unsigned __int8 **)&v618[v619];
                      if (v620)
                        llvm::MetadataTracking::untrack((uint64_t)&v618[v619], v620);
                      v619 -= 16;
                    }
                    while (v619);
                    v616 = *(char **)(v612 + 8);
                  }
                  if (v616 != (char *)(v612 + 24))
                    free(v616);
                  *(_QWORD *)v612 = -8192;
                  v607[311] = vadd_s32(v607[311], (int32x2_t)0x1FFFFFFFFLL);
                  v605 = *((_DWORD *)v602 + 5);
                }
                else
                {
                  v614 = 1;
                  while (v613 != (_QWORD **)-4096)
                  {
                    v615 = v611 + v614++;
                    v611 = v615 & v610;
                    v612 = *(_QWORD *)&v609 + 40 * v611;
                    v613 = *(_QWORD ***)v612;
                    if (*(_QWORD ***)v612 == v602)
                      goto LABEL_868;
                  }
                }
              }
              *((_DWORD *)v602 + 5) = v605 & 0xDFFFFFFF;
            }
          }
        }
      }
      sub_1C4FCEA58((char *)v761);
      goto LABEL_879;
    }
    while (1)
    {
      v529 = v525[2];
      v527 = (_BYTE *)v525[3];
      v528 = (uint64_t *)(v525 + 2);
      if ((_BYTE *)v529 == v527 && v525[8] == v525[9])
        goto LABEL_778;
      if ((*(_WORD *)(*v525 + 34) & 0x3F) != 0)
      {
        v530 = (*(_WORD *)(*v525 + 34) & 0x3F) - 1;
      }
      else
      {
        llvm::DataLayout::getAlignment(*v737 + 272, *(_QWORD *)(*v525 + 24));
        v529 = v525[2];
        v527 = (_BYTE *)v525[3];
      }
      v531 = (unint64_t)&v527[(1 << v530) - v529 - 1] & -(1 << v530);
      if (v531 <= (unint64_t)&v527[-v529])
      {
        if (v531 < (unint64_t)&v527[-v529])
        {
          v527 = (_BYTE *)(v529 + v531);
          v525[3] = v529 + v531;
        }
      }
      else
      {
        sub_1C50429D8(v525 + 2, v531 - (_QWORD)&v527[-v529]);
        v529 = v525[2];
        v527 = (_BYTE *)v525[3];
      }
      v532 = (unint64_t)&v527[-v529];
      if ((unint64_t)&v527[-v529] >= 2)
      {
        v533 = 0;
        v534 = &v527[~v529];
        do
        {
          v535 = *v528;
          v536 = *(_BYTE *)(*v528 + v533);
          *(_BYTE *)(v535 + v533) = v534[*v528];
          v534[v535] = v536;
          ++v533;
          --v534;
        }
        while (v532 >> 1 != v533);
        v529 = v525[2];
        v532 = v525[3] - v529;
      }
      llvm::ArrayType::get((llvm::ArrayType *)(**(_QWORD **)*v737 + 1912), (llvm::Type *)v532);
      __p[0] = llvm::ConstantDataSequential::getImpl((_BYTE *)v529, (llvm::Type *)v532, v537);
      __p[1] = *(void **)(*v525 - 32);
      v538 = (_BYTE *)v525[8];
      v539 = (llvm::Type *)(v525[9] - (_QWORD)v538);
      llvm::ArrayType::get((llvm::ArrayType *)(**(_QWORD **)*v737 + 1912), v539);
      __p[2] = llvm::ConstantDataSequential::getImpl(v538, v539, v540);
      TypeForElements = (llvm::ConstantAggregateZero *)llvm::ConstantStruct::getTypeForElements(**(uint64_t ***)__p[0], (uint64_t)__p, 3u, 0);
      v542 = llvm::ConstantStruct::get(TypeForElements, (llvm::Type *)__p, 3);
      v543 = operator new(0x78uLL);
      v544 = (llvm::GlobalObject *)(v543 + 8);
      v543[13] = v543[13] & 0x38000000 | 1;
      *(_QWORD *)v543 = 0;
      *((_QWORD *)v543 + 1) = 0;
      *((_QWORD *)v543 + 2) = 0;
      *((_QWORD *)v543 + 3) = v543 + 8;
      v545 = *v737;
      v546 = *(llvm::PointerType **)v542;
      v547 = *v525;
      v548 = *(_BYTE *)(*v525 + 80) & 1;
      LOWORD(v771) = 257;
      llvm::GlobalVariable::GlobalVariable((uint64_t)(v543 + 8), v545, v546, v548, 8, (uint64_t)v542, (uint64_t)__p, v547, 0, 0, 0);
      v549 = 0;
      v550 = 0;
      v551 = (uint64_t ***)*v525;
      if ((*(_BYTE *)(*v525 + 34) & 0x40) != 0)
        break;
LABEL_795:
      if ((*((_BYTE *)v543 + 66) & 0x40) != 0 || v550)
      {
        if (v550)
        {
          v549 = (llvm::GlobalObject *)llvm::UniqueStringSaver::save(***(_QWORD ***)v544 + 2136, v549, v550);
          v560 = v559;
        }
        else
        {
          v560 = 0;
        }
        v561 = ***(_QWORD ***)v544;
        __p[0] = v543 + 8;
        v562 = *(_DWORD *)(v561 + 2520);
        if (v562)
        {
          v563 = *(_QWORD *)(v561 + 2504);
          v564 = v562 - 1;
          v565 = v564 & ((v544 >> 4) ^ (v544 >> 9));
          v566 = (llvm::GlobalObject **)(v563 + 24 * v565);
          v567 = *v566;
          if (*v566 == v544)
          {
LABEL_801:
            v566[1] = v549;
            v566[2] = v560;
            v543[16] = v543[16] & 0xFFBFFFFF | ((v560 != 0) << 22);
            goto LABEL_802;
          }
          v588 = 0;
          v589 = 1;
          while (v567 != (llvm::GlobalObject *)-4096)
          {
            if (v588)
              v590 = 0;
            else
              v590 = v567 == (llvm::GlobalObject *)-8192;
            if (v590)
              v588 = v566;
            v591 = v565 + v589++;
            v565 = v591 & v564;
            v566 = (llvm::GlobalObject **)(v563 + 24 * v565);
            v567 = *v566;
            if (*v566 == v544)
              goto LABEL_801;
          }
          if (v588)
            v596 = v588;
          else
            v596 = v566;
        }
        else
        {
          v596 = 0;
        }
        v566 = (llvm::GlobalObject **)sub_1C53D65B8(v561 + 2504, (uint64_t)__p, (uint64_t *)__p, v596);
        v597 = (llvm::GlobalObject *)__p[0];
        v566[1] = 0;
        v566[2] = 0;
        *v566 = v597;
        goto LABEL_801;
      }
LABEL_802:
      llvm::GlobalObject::setComdat(v544, *(llvm::Comdat **)(*v525 + 48));
      v568 = ((((*(_WORD *)(*v525 + 34) & 0x3F) << 16) + 16711680) & 0xFF0000) + 0x10000;
      if ((*(_WORD *)(*v525 + 34) & 0x3F) == 0)
        v568 = 0;
      v543[16] = v568 | v543[16] & 0xFFC0FFFF;
      llvm::GlobalObject::copyMetadata(v544, (const llvm::GlobalObject *)*v525, *((_DWORD *)v525 + 6) - *((_DWORD *)v525 + 4));
      v570 = **(llvm::PointerType ***)(*v525 - 32);
      v571 = *(_DWORD *)(*v525 + 32);
      LOWORD(v771) = 257;
      v572 = *(llvm::GetElementPtrInst **)v542;
      v573 = (llvm::ConstantInt **)v737[9];
      v574 = *v573;
      LODWORD(v781) = *((_DWORD *)v573 + 2) >> 8;
      if (v781 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v780, 0, 0);
      else
        v780 = 0;
      v576 = llvm::ConstantInt::get(v574, (llvm::LLVMContext *)&v780, v569);
      if (v781 >= 0x41 && v780)
        MEMORY[0x1CAA32F9C](v780, 0x1000C8000313F17);
      v776 = (char *)v576;
      v577 = (llvm::ConstantInt **)v737[9];
      v578 = *v577;
      v579 = *((unsigned int *)v577 + 2);
      LODWORD(v781) = v579 >> 8;
      if (v579 >> 8 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v780, 1, 0);
      }
      else
      {
        if (v579 <= 0xFF)
          v580 = 0;
        else
          v580 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v579);
        v780 = v580 & 1;
      }
      v581 = llvm::ConstantInt::get(v578, (llvm::LLVMContext *)&v780, v575);
      if (v781 >= 0x41 && v780)
        MEMORY[0x1CAA32F9C](v780, 0x1000C8000313F17);
      v777 = v581;
      ElementPtr = llvm::ConstantExpr::getGetElementPtr(v572, (uint64_t *)v544, (llvm::Value *)&v776, 2, 0, 0, 0);
      v583 = (llvm::Value *)llvm::GlobalAlias::create(v570, 0, v571 & 0xF, (uint64_t)__p, ElementPtr, *v737);
      v584 = v583;
      v585 = *(_DWORD *)(*v525 + 32) & 0x30;
      v586 = *((_DWORD *)v583 + 8);
      v587 = v586 & 0xFFFFFFCF | v585;
      *((_DWORD *)v583 + 8) = v587;
      if ((v586 & 0xFu) - 7 >= 2)
      {
        if (!v585 || (llvm::GlobalValue::hasExternalWeakLinkage(v583) & 1) != 0)
          goto LABEL_815;
        v587 = *((_DWORD *)v584 + 8);
      }
      *((_DWORD *)v584 + 8) = v587 | 0x4000;
LABEL_815:
      llvm::Value::takeName(v584, (llvm::Value *)*v525);
      llvm::Value::doRAUW((llvm::ValueAsMetadata *)*v525, v584, (llvm::Value *)1);
      llvm::GlobalVariable::eraseFromParent((llvm::GlobalVariable *)*v525);
LABEL_778:
      v525 += 14;
      if (v525 == v526)
        goto LABEL_854;
    }
    v552 = ***v551;
    __p[0] = (void *)*v525;
    v553 = *(_DWORD *)(v552 + 2520);
    if (v553)
    {
      v554 = *(_QWORD *)(v552 + 2504);
      v555 = v553 - 1;
      v556 = v555 & ((v551 >> 4) ^ (v551 >> 9));
      v557 = (uint64_t ****)(v554 + 24 * v556);
      v558 = *v557;
      if (*v557 == v551)
      {
LABEL_794:
        v549 = (llvm::GlobalObject *)v557[1];
        v550 = (size_t)v557[2];
        goto LABEL_795;
      }
      v592 = 0;
      v593 = 1;
      while (v558 != (uint64_t ***)-4096)
      {
        if (v592)
          v594 = 0;
        else
          v594 = v558 == (uint64_t ***)-8192;
        if (v594)
          v592 = v557;
        v595 = v556 + v593++;
        v556 = v595 & v555;
        v557 = (uint64_t ****)(v554 + 24 * v556);
        v558 = *v557;
        if (*v557 == v551)
          goto LABEL_794;
      }
      if (v592)
        v598 = v592;
      else
        v598 = v557;
    }
    else
    {
      v598 = 0;
    }
    v557 = (uint64_t ****)sub_1C53D65B8(v552 + 2504, (uint64_t)__p, (uint64_t *)__p, v598);
    v599 = (uint64_t ***)__p[0];
    v557[1] = 0;
    v557[2] = 0;
    *v557 = v599;
    goto LABEL_794;
  }
LABEL_879:
  v621 = v763;
  if (v765)
  {
    v622 = (_QWORD **)(v763 + 16);
    v623 = 32 * v765;
    do
    {
      if (((unint64_t)*(v622 - 2) | 0x1000) != 0xFFFFFFFFFFFFF000)
        sub_1C6143384(*v622);
      v622 += 4;
      v623 -= 32;
    }
    while (v623);
    v621 = v763;
  }
  MEMORY[0x1CAA32FB4](v621, 8);
  v624 = (char *)v766[0];
  if (v766[0])
  {
    v625 = (char *)v766[1];
    v626 = v766[0];
    if (v766[1] != v766[0])
    {
      do
      {
        sub_1C6180D1C((uint64_t)(v625 - 48));
        sub_1C6180D1C((uint64_t)(v625 - 96));
        v625 -= 112;
      }
      while (v625 != v624);
      v626 = v766[0];
    }
    v766[1] = v624;
    operator delete(v626);
  }
  return 1;
}

uint64_t sub_1C5772F10(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void **v10;

  v10 = (void **)(a1 + 296);
  sub_1C5775314(&v10);
  sub_1C6143384(*(_QWORD **)(a1 + 280));
  v2 = *(void **)(a1 + 184);
  if (v2 != *(void **)(a1 + 176))
    free(v2);
  v3 = *(_QWORD *)(a1 + 152);
  if (v3)
  {
    v4 = *(_QWORD *)(a1 + 160);
    v5 = *(void **)(a1 + 152);
    if (v4 != v3)
    {
      do
      {
        sub_1C5775384(*(_QWORD **)(v4 - 16));
        v6 = *(void **)(v4 - 48);
        if (v6)
        {
          *(_QWORD *)(v4 - 40) = v6;
          operator delete(v6);
        }
        v7 = *(void **)(v4 - 72);
        if (v7)
        {
          *(_QWORD *)(v4 - 64) = v7;
          operator delete(v7);
        }
        v8 = *(void **)(v4 - 104);
        if (v8)
        {
          *(_QWORD *)(v4 - 96) = v8;
          operator delete(v8);
        }
        v4 -= 120;
      }
      while (v4 != v3);
      v5 = *(void **)(a1 + 152);
    }
    *(_QWORD *)(a1 + 160) = v3;
    operator delete(v5);
  }
  MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 128), 8);
  return a1;
}

void llvm::updateVCallVisibilityInModule(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  llvm::GlobalObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  llvm::GlobalObject **v14;
  llvm::GlobalObject *v15;
  llvm::GlobalObject **v16;
  int v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  llvm::GlobalObject **v30;
  uint64_t v31;
  llvm::GlobalObject *v32;

  if (byte_1ED833658)
    a2 = 1;
  if (a2 == 1 && byte_1ED833718 == 0)
  {
    v5 = a1 + 8;
    v6 = *(_QWORD *)(a1 + 16);
    if (v6 != a1 + 8)
    {
      while (1)
      {
        if (v6)
          v8 = (llvm::GlobalObject *)(v6 - 56);
        else
          v8 = 0;
        if ((*((_BYTE *)v8 + 23) & 0x20) == 0)
          goto LABEL_28;
        v9 = ***(_QWORD ***)v8;
        v32 = v8;
        v10 = *(_DWORD *)(v9 + 2496);
        if (!v10)
          break;
        v11 = *(_QWORD *)(v9 + 2480);
        v12 = v10 - 1;
        v13 = v12 & ((v8 >> 4) ^ (v8 >> 9));
        v14 = (llvm::GlobalObject **)(v11 + 40 * v13);
        v15 = *v14;
        if (*v14 != v8)
        {
          v16 = 0;
          v17 = 1;
          while (v15 != (llvm::GlobalObject *)-4096)
          {
            if (v16)
              v18 = 0;
            else
              v18 = v15 == (llvm::GlobalObject *)-8192;
            if (v18)
              v16 = v14;
            v19 = v13 + v17++;
            v13 = v19 & v12;
            v14 = (llvm::GlobalObject **)(v11 + 40 * v13);
            v15 = *v14;
            if (*v14 == v8)
              goto LABEL_24;
          }
          if (v16)
            v30 = v16;
          else
            v30 = v14;
          goto LABEL_41;
        }
LABEL_24:
        v20 = *((unsigned int *)v14 + 4);
        if (!(_DWORD)v20)
          goto LABEL_28;
        v21 = (_QWORD *)((char *)v14[1] + 8);
        v22 = 16 * v20;
        while (*((_DWORD *)v21 - 2) != 19)
        {
          v21 += 2;
          v22 -= 16;
          if (!v22)
            goto LABEL_28;
        }
        if (!*v21 || llvm::GlobalObject::getVCallVisibility(v8))
          goto LABEL_28;
        v23 = sub_1C4EE9DE0(v8);
        v24 = *(_DWORD *)(a3 + 16);
        if (!v24)
          goto LABEL_42;
        v25 = v24 - 1;
        v26 = v25 & (37 * v23);
        v27 = *(_QWORD *)(*(_QWORD *)a3 + 8 * v26);
        if (v23 != v27)
        {
          v28 = 1;
          while (v27 != -1)
          {
            v29 = v26 + v28++;
            v26 = v29 & v25;
            v27 = *(_QWORD *)(*(_QWORD *)a3 + 8 * v26);
            if (v23 == v27)
              goto LABEL_28;
          }
LABEL_42:
          llvm::GlobalObject::setVCallVisibilityMetadata(v8, 1u);
        }
LABEL_28:
        v6 = *(_QWORD *)(v6 + 8);
        if (v6 == v5)
          return;
      }
      v30 = 0;
LABEL_41:
      v14 = (llvm::GlobalObject **)sub_1C541AB24(v9 + 2480, (uint64_t)&v32, (uint64_t *)&v32, v30);
      v31 = (uint64_t)v32;
      v14[4] = 0;
      v14[3] = 0;
      *v14 = (llvm::GlobalObject *)v31;
      v14[1] = (llvm::GlobalObject *)(v14 + 3);
      v14[2] = (llvm::GlobalObject *)0x100000000;
      goto LABEL_24;
    }
  }
}

_QWORD *llvm::updateVCallVisibilityInIndex(_QWORD *result, int a2, uint64_t a3)
{
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;

  if (byte_1ED833658)
    a2 = 1;
  v4 = a2 == 1 && byte_1ED833718 == 0;
  if (v4)
  {
    v6 = (_QWORD *)*result++;
    v5 = v6;
    if (v6 != result)
    {
      while (1)
      {
        v7 = *(_DWORD *)(a3 + 16);
        if (!v7)
          goto LABEL_23;
        v8 = v5[4];
        v9 = v7 - 1;
        v10 = (37 * v8) & v9;
        v11 = *(_QWORD *)(*(_QWORD *)a3 + 8 * v10);
        if (v8 != v11)
          break;
LABEL_12:
        v12 = (_QWORD *)v5[1];
        if (v12)
        {
          do
          {
            v13 = v12;
            v12 = (_QWORD *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            v13 = (_QWORD *)v5[2];
            v4 = *v13 == (_QWORD)v5;
            v5 = v13;
          }
          while (!v4);
        }
        v5 = v13;
        if (v13 == result)
          return result;
      }
      v14 = 1;
      while (v11 != -1)
      {
        v15 = v10 + v14++;
        v10 = v15 & v9;
        v11 = *(_QWORD *)(*(_QWORD *)a3 + 8 * v10);
        if (v8 == v11)
          goto LABEL_12;
      }
LABEL_23:
      v16 = (uint64_t *)v5[7];
      v17 = (uint64_t *)v5[8];
      while (v16 != v17)
      {
        v18 = *v16;
        if (*v16)
          v19 = *(_DWORD *)(*v16 + 8) == 2;
        else
          v19 = 0;
        if (v19 && (*(_BYTE *)(v18 + 72) & 0x18) == 0)
          *(_BYTE *)(v18 + 72) = *(_BYTE *)(v18 + 72) & 0xE7 | 8;
        ++v16;
      }
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t llvm::runWholeProgramDevirtOnIndex(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v5;
  int v6;
  int *v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  int v15;
  BOOL v16;
  int v17;
  _QWORD *v18;
  char v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  BOOL v44;
  _QWORD *v45;
  _OWORD *v46;
  _QWORD *v47;
  __int128 *v48;
  __int128 *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _OWORD *v64;
  _QWORD *v65;
  __int128 *v66;
  __int128 *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  __int128 *v84;
  __int128 *v85;
  unint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  __int128 *v102;
  __int128 *v103;
  unint64_t v104;
  char *v105;
  char *v106;
  unint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  _QWORD *v118;
  _QWORD *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BOOL4 v125;
  uint64_t *v126;
  char v127;
  uint64_t *v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  unint64_t *v132;
  unint64_t *v133;
  size_t v134;
  unint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t **v148;
  unint64_t *v149;
  unint64_t *v150;
  unint64_t *v151;
  unint64_t *v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  unint64_t v157;
  unint64_t v158;
  int v159;
  int v160;
  uint64_t v161;
  unint64_t *v162;
  unint64_t v163;
  unint64_t *v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  size_t v168;
  char *v169;
  uint64_t ***v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t ****v175;
  uint64_t ***v176;
  int v177;
  int v178;
  uint64_t ***v179;
  size_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t *v184;
  uint64_t **v185;
  uint64_t **v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t *v189;
  uint64_t *v190;
  uint64_t *v191;
  int v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t ***v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t ****v201;
  uint64_t ***v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t **v207;
  unint64_t v208;
  uint64_t **v209;
  unint64_t v210;
  uint64_t ***v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t ****v216;
  uint64_t ***v217;
  int v218;
  int v219;
  uint64_t *v220;
  uint64_t *v221;
  uint64_t *v222;
  unint64_t v223;
  uint64_t *v224;
  __int128 v225;
  uint64_t *v226;
  uint64_t *v227;
  unint64_t v228;
  unint64_t v229;
  unint64_t v230;
  __int128 v231;
  uint64_t *v232;
  uint64_t *v233;
  __int128 v234;
  size_t v235;
  char *v236;
  uint64_t ***v237;
  uint64_t v238;
  uint64_t ***v239;
  int v240;
  int v241;
  uint64_t ***v242;
  size_t v243;
  __int128 *p_dst;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  __int128 v248;
  uint64_t ***v249;
  char *v250;
  size_t v251;
  uint64_t v252;
  size_t v253;
  unsigned __int8 *v254;
  int v255;
  uint64_t v256;
  unsigned __int8 *v257;
  int v258;
  unsigned int v259;
  uint64_t v260;
  uint64_t v261;
  int v262;
  int v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  llvm::raw_ostream *v269;
  void *v270;
  _BYTE *v271;
  uint64_t *v272;
  uint64_t **v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  void *v277;
  char *v278;
  char *v279;
  void *v280;
  void *v281;
  void *v282;
  void *v283;
  uint64_t v285;
  _QWORD *v286;
  size_t __n;
  size_t __na;
  size_t __nb;
  uint64_t *v290;
  char *v291;
  char *v292;
  uint64_t *v293;
  char *v294;
  _OWORD *v295;
  _OWORD *v296;
  char *v297;
  _OWORD *__src;
  _OWORD *__srca;
  uint64_t __srcb;
  uint64_t __srcc;
  unint64_t *__srcd;
  char *__srce;
  _QWORD v307[2];
  int v308;
  void *v309[2];
  __int128 v310;
  __int128 v311;
  void *__p;
  _QWORD *v313;
  uint64_t v314;
  uint64_t **v315;
  uint64_t *v316;
  uint64_t v317;
  _QWORD v318[2];
  unsigned int v319;
  __int128 v320;
  int v321;
  uint64_t v322;
  __int128 v323;
  uint64_t v324;
  char v325;
  __int128 __dst;
  unint64_t v327;
  uint64_t v328;

  v328 = *MEMORY[0x1E0C80C00];
  v307[0] = 0;
  v307[1] = 0;
  v308 = 0;
  *(_OWORD *)v309 = 0u;
  v310 = 0u;
  v311 = 0u;
  sub_1C57750A0((uint64_t *)&v310 + 1);
  v3 = (_QWORD *)a1;
  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_399;
  v318[0] = 0;
  v318[1] = 0;
  v319 = 0;
  v4 = *(_QWORD **)(a1 + 80);
  if (v4 == (_QWORD *)(a1 + 88))
    goto LABEL_55;
  do
  {
    v5 = *((_BYTE *)v4 + 55);
    v6 = v5;
    if (v5 >= 0)
      v7 = (int *)(v4 + 4);
    else
      v7 = (int *)v4[4];
    v8 = v5 & 0x7F;
    if (v6 >= 0)
      v9 = v8;
    else
      v9 = v4[5];
    v323 = xmmword_1C85F4BB0;
    v324 = 0;
    llvm::MD5::update((int *)&v323, v7, v9);
    llvm::MD5::final((int *)&v323, (int *)&__dst);
    v10 = __dst;
    *(_QWORD *)&v323 = __dst;
    if (v319)
    {
      v11 = (v319 - 1) & (37 * (_DWORD)__dst);
      v12 = (_QWORD *)(v318[0] + 32 * v11);
      v13 = *v12;
      if ((_QWORD)__dst == *v12)
        goto LABEL_22;
      v14 = 0;
      v15 = 1;
      while (v13 != -1)
      {
        if (v14)
          v16 = 0;
        else
          v16 = v13 == -2;
        if (v16)
          v14 = v12;
        v17 = v11 + v15++;
        v11 = v17 & (v319 - 1);
        v12 = (_QWORD *)(v318[0] + 32 * v11);
        v13 = *v12;
        if ((_QWORD)__dst == *v12)
          goto LABEL_22;
      }
      if (v14)
        v18 = v14;
      else
        v18 = v12;
    }
    else
    {
      v18 = 0;
    }
    v12 = sub_1C5779FF0((uint64_t)v318, (uint64_t *)&v323, v18);
    *v12 = v10;
    v12[1] = 0;
    v12[2] = 0;
    v12[3] = 0;
LABEL_22:
    v19 = *((_BYTE *)v4 + 55);
    v20 = v19 < 0;
    if (v19 >= 0)
      v21 = v4 + 4;
    else
      v21 = (_QWORD *)v4[4];
    v22 = v19 & 0x7F;
    if (v20)
      v23 = v4[5];
    else
      v23 = v22;
    v25 = (char *)v12[2];
    v24 = v12[3];
    if ((unint64_t)v25 >= v24)
    {
      v27 = (char *)v12[1];
      v28 = (v25 - v27) >> 4;
      v29 = v28 + 1;
      if ((unint64_t)(v28 + 1) >> 60)
LABEL_411:
        abort();
      v30 = v24 - (_QWORD)v27;
      if (v30 >> 3 > v29)
        v29 = v30 >> 3;
      if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFF0)
        v31 = 0xFFFFFFFFFFFFFFFLL;
      else
        v31 = v29;
      if (v31)
      {
        if (v31 >> 60)
LABEL_412:
          sub_1C4764EE4();
        v32 = (char *)operator new(16 * v31);
      }
      else
      {
        v32 = 0;
      }
      v33 = &v32[16 * v28];
      *(_QWORD *)v33 = v21;
      *((_QWORD *)v33 + 1) = v23;
      v34 = v33;
      if (v25 != v27)
      {
        do
        {
          *((_OWORD *)v34 - 1) = *((_OWORD *)v25 - 1);
          v34 -= 16;
          v25 -= 16;
        }
        while (v25 != v27);
        v25 = (char *)v12[1];
      }
      v26 = v33 + 16;
      v12[1] = v34;
      v12[2] = v33 + 16;
      v12[3] = &v32[16 * v31];
      if (v25)
        operator delete(v25);
    }
    else
    {
      *(_QWORD *)v25 = v21;
      *((_QWORD *)v25 + 1) = v23;
      v26 = v25 + 16;
    }
    v12[2] = v26;
    v35 = (_QWORD *)v4[1];
    if (v35)
    {
      do
      {
        v36 = v35;
        v35 = (_QWORD *)*v35;
      }
      while (v35);
    }
    else
    {
      do
      {
        v36 = (_QWORD *)v4[2];
        v16 = *v36 == (_QWORD)v4;
        v4 = v36;
      }
      while (!v16);
    }
    v4 = v36;
  }
  while (v36 != (_QWORD *)(a1 + 88));
  v3 = (_QWORD *)a1;
LABEL_55:
  v39 = (_QWORD *)*v3;
  v37 = v3 + 1;
  v38 = v39;
  if (v39 != v37)
  {
    v286 = v37;
    do
    {
      v40 = (uint64_t *)v38[7];
      v41 = (uint64_t *)v38[8];
      __n = (size_t)v38;
      v290 = v41;
      while (v40 != v41)
      {
        v293 = v40;
        v42 = *v40;
        v43 = *(_DWORD *)(*v40 + 8);
        if (v42)
          v44 = v43 == 1;
        else
          v44 = 0;
        if (v44)
        {
          v45 = *(_QWORD **)(v42 + 104);
          if (v45)
          {
            v46 = (_OWORD *)v45[3];
            v295 = (_OWORD *)v45[4];
            if (v295 == v46)
              goto LABEL_88;
            do
            {
              __src = v46;
              __dst = *v46;
              v47 = sub_1C577A164((uint64_t)v318, (uint64_t *)&__dst);
              v49 = (__int128 *)v47[1];
              v48 = (__int128 *)v47[2];
              if (v49 != v48)
              {
                v50 = *((_QWORD *)&__dst + 1);
                do
                {
                  v323 = *v49;
                  v324 = v50;
                  v51 = (_QWORD *)sub_1C5779B3C((uint64_t)v307, &v323);
                  v52 = v51;
                  v54 = (_QWORD *)v51[8];
                  v53 = v51[9];
                  if ((unint64_t)v54 >= v53)
                  {
                    v56 = (_QWORD *)v51[7];
                    v57 = v54 - v56;
                    v58 = v57 + 1;
                    if ((unint64_t)(v57 + 1) >> 61)
                      goto LABEL_411;
                    v59 = v53 - (_QWORD)v56;
                    if (v59 >> 2 > v58)
                      v58 = v59 >> 2;
                    if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFF8)
                      v60 = 0x1FFFFFFFFFFFFFFFLL;
                    else
                      v60 = v58;
                    if (v60)
                    {
                      if (v60 >> 61)
                        goto LABEL_412;
                      v61 = (char *)operator new(8 * v60);
                    }
                    else
                    {
                      v61 = 0;
                    }
                    v62 = &v61[8 * v57];
                    *(_QWORD *)v62 = v42;
                    v55 = v62 + 8;
                    if (v54 != v56)
                    {
                      do
                      {
                        v63 = *--v54;
                        *((_QWORD *)v62 - 1) = v63;
                        v62 -= 8;
                      }
                      while (v54 != v56);
                      v54 = (_QWORD *)v52[7];
                    }
                    v52[7] = v62;
                    v52[8] = v55;
                    v52[9] = &v61[8 * v60];
                    if (v54)
                      operator delete(v54);
                  }
                  else
                  {
                    *v54 = v42;
                    v55 = v54 + 1;
                  }
                  v52[8] = v55;
                  *((_WORD *)v52 + 12) = 256;
                  ++v49;
                }
                while (v49 != v48);
              }
              v46 = __src + 1;
            }
            while (__src + 1 != v295);
            v45 = *(_QWORD **)(v42 + 104);
            if (v45)
            {
LABEL_88:
              v64 = (_OWORD *)v45[6];
              v296 = (_OWORD *)v45[7];
              if (v296 == v64)
                goto LABEL_111;
              do
              {
                __srca = v64;
                __dst = *v64;
                v65 = sub_1C577A164((uint64_t)v318, (uint64_t *)&__dst);
                v67 = (__int128 *)v65[1];
                v66 = (__int128 *)v65[2];
                if (v67 != v66)
                {
                  v68 = *((_QWORD *)&__dst + 1);
                  do
                  {
                    v323 = *v67;
                    v324 = v68;
                    v69 = (_QWORD *)sub_1C5779B3C((uint64_t)v307, &v323);
                    v70 = v69;
                    v72 = (_QWORD *)v69[5];
                    v71 = v69[6];
                    if ((unint64_t)v72 >= v71)
                    {
                      v74 = (_QWORD *)v69[4];
                      v75 = v72 - v74;
                      v76 = v75 + 1;
                      if ((unint64_t)(v75 + 1) >> 61)
                        goto LABEL_411;
                      v77 = v71 - (_QWORD)v74;
                      if (v77 >> 2 > v76)
                        v76 = v77 >> 2;
                      if ((unint64_t)v77 >= 0x7FFFFFFFFFFFFFF8)
                        v78 = 0x1FFFFFFFFFFFFFFFLL;
                      else
                        v78 = v76;
                      if (v78)
                      {
                        if (v78 >> 61)
                          goto LABEL_412;
                        v79 = (char *)operator new(8 * v78);
                      }
                      else
                      {
                        v79 = 0;
                      }
                      v80 = &v79[8 * v75];
                      *(_QWORD *)v80 = v42;
                      v73 = v80 + 8;
                      if (v72 != v74)
                      {
                        do
                        {
                          v81 = *--v72;
                          *((_QWORD *)v80 - 1) = v81;
                          v80 -= 8;
                        }
                        while (v72 != v74);
                        v72 = (_QWORD *)v70[4];
                      }
                      v70[4] = v80;
                      v70[5] = v73;
                      v70[6] = &v79[8 * v78];
                      if (v72)
                        operator delete(v72);
                    }
                    else
                    {
                      *v72 = v42;
                      v73 = v72 + 1;
                    }
                    v70[5] = v73;
                    *((_BYTE *)v70 + 24) = 0;
                    ++v67;
                  }
                  while (v67 != v66);
                }
                v64 = __srca + 1;
              }
              while (__srca + 1 != v296);
              v45 = *(_QWORD **)(v42 + 104);
              if (v45)
              {
LABEL_111:
                v82 = v45[9];
                __srcb = v45[10];
                if (__srcb == v82)
                  goto LABEL_134;
                do
                {
                  v83 = sub_1C577A164((uint64_t)v318, (uint64_t *)v82);
                  v84 = (__int128 *)v83[1];
                  v85 = (__int128 *)v83[2];
                  while (v84 != v85)
                  {
                    v323 = *v84;
                    v324 = *(_QWORD *)(v82 + 8);
                    v86 = sub_1C5779B3C((uint64_t)v307, &v323);
                    v87 = sub_1C5776684((uint64_t **)(v86 + 80), *(_QWORD **)(v82 + 16), *(_QWORD *)(v82 + 24));
                    v88 = v87;
                    v90 = (_QWORD *)*((_QWORD *)v87 + 8);
                    v89 = *((_QWORD *)v87 + 9);
                    if ((unint64_t)v90 >= v89)
                    {
                      v92 = (_QWORD *)*((_QWORD *)v87 + 7);
                      v93 = v90 - v92;
                      v94 = v93 + 1;
                      if ((unint64_t)(v93 + 1) >> 61)
                        goto LABEL_411;
                      v95 = v89 - (_QWORD)v92;
                      if (v95 >> 2 > v94)
                        v94 = v95 >> 2;
                      if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8)
                        v96 = 0x1FFFFFFFFFFFFFFFLL;
                      else
                        v96 = v94;
                      if (v96)
                      {
                        if (v96 >> 61)
                          goto LABEL_412;
                        v97 = (char *)operator new(8 * v96);
                      }
                      else
                      {
                        v97 = 0;
                      }
                      v98 = &v97[8 * v93];
                      *(_QWORD *)v98 = v42;
                      v91 = v98 + 8;
                      if (v90 != v92)
                      {
                        do
                        {
                          v99 = *--v90;
                          *((_QWORD *)v98 - 1) = v99;
                          v98 -= 8;
                        }
                        while (v90 != v92);
                        v90 = (_QWORD *)*((_QWORD *)v88 + 7);
                      }
                      *((_QWORD *)v88 + 7) = v98;
                      *((_QWORD *)v88 + 8) = v91;
                      *((_QWORD *)v88 + 9) = &v97[8 * v96];
                      if (v90)
                        operator delete(v90);
                    }
                    else
                    {
                      *v90 = v42;
                      v91 = v90 + 1;
                    }
                    *((_QWORD *)v88 + 8) = v91;
                    *((_WORD *)v88 + 12) = 256;
                    ++v84;
                  }
                  v82 += 40;
                }
                while (v82 != __srcb);
                v45 = *(_QWORD **)(v42 + 104);
                if (v45)
                {
LABEL_134:
                  v100 = v45[12];
                  for (__srcc = v45[13]; v100 != __srcc; v100 += 40)
                  {
                    v101 = sub_1C577A164((uint64_t)v318, (uint64_t *)v100);
                    v102 = (__int128 *)v101[1];
                    v103 = (__int128 *)v101[2];
                    while (v102 != v103)
                    {
                      v323 = *v102;
                      v324 = *(_QWORD *)(v100 + 8);
                      v104 = sub_1C5779B3C((uint64_t)v307, &v323);
                      v105 = sub_1C5776684((uint64_t **)(v104 + 80), *(_QWORD **)(v100 + 16), *(_QWORD *)(v100 + 24));
                      v106 = v105;
                      v108 = (_QWORD *)*((_QWORD *)v105 + 5);
                      v107 = *((_QWORD *)v105 + 6);
                      if ((unint64_t)v108 >= v107)
                      {
                        v110 = (_QWORD *)*((_QWORD *)v105 + 4);
                        v111 = v108 - v110;
                        v112 = v111 + 1;
                        if ((unint64_t)(v111 + 1) >> 61)
                          goto LABEL_411;
                        v113 = v107 - (_QWORD)v110;
                        if (v113 >> 2 > v112)
                          v112 = v113 >> 2;
                        if ((unint64_t)v113 >= 0x7FFFFFFFFFFFFFF8)
                          v114 = 0x1FFFFFFFFFFFFFFFLL;
                        else
                          v114 = v112;
                        if (v114)
                        {
                          if (v114 >> 61)
                            goto LABEL_412;
                          v115 = (char *)operator new(8 * v114);
                        }
                        else
                        {
                          v115 = 0;
                        }
                        v116 = &v115[8 * v111];
                        *(_QWORD *)v116 = v42;
                        v109 = v116 + 8;
                        if (v108 != v110)
                        {
                          do
                          {
                            v117 = *--v108;
                            *((_QWORD *)v116 - 1) = v117;
                            v116 -= 8;
                          }
                          while (v108 != v110);
                          v108 = (_QWORD *)*((_QWORD *)v106 + 4);
                        }
                        *((_QWORD *)v106 + 4) = v116;
                        *((_QWORD *)v106 + 5) = v109;
                        *((_QWORD *)v106 + 6) = &v115[8 * v114];
                        if (v108)
                          operator delete(v108);
                      }
                      else
                      {
                        *v108 = v42;
                        v109 = v108 + 1;
                      }
                      *((_QWORD *)v106 + 5) = v109;
                      v106[24] = 0;
                      ++v102;
                    }
                  }
                }
              }
            }
          }
        }
        v41 = v290;
        v40 = v293 + 1;
      }
      v118 = (_QWORD *)__n;
      v119 = *(_QWORD **)(__n + 8);
      if (v119)
      {
        do
        {
          v120 = v119;
          v119 = (_QWORD *)*v119;
        }
        while (v119);
      }
      else
      {
        do
        {
          v120 = (_QWORD *)v118[2];
          v16 = *v120 == (_QWORD)v118;
          v118 = v120;
        }
        while (!v16);
      }
      v38 = v120;
    }
    while (v120 != v286);
  }
  v316 = 0;
  v317 = 0;
  v315 = &v316;
  v121 = (char *)v309[0];
  v294 = (char *)v309[1];
  if (v309[0] == v309[1])
    goto LABEL_392;
  while (2)
  {
    __dst = *(_OWORD *)v121;
    v122 = *(_QWORD *)(a1 + 88);
    if (!v122)
      goto LABEL_171;
    v123 = a1 + 96;
    v124 = a1 + 88;
    do
    {
      v125 = sub_1C577A4B8(v123, (const void **)(v122 + 32), (uint64_t)&__dst);
      v126 = (uint64_t *)(v122 + 8);
      if (!v125)
      {
        v126 = (uint64_t *)v122;
        v124 = v122;
      }
      v122 = *v126;
    }
    while (*v126);
    if (v124 == a1 + 88 || sub_1C577A53C(v123, (uint64_t)&__dst, (const void **)(v124 + 32)))
    {
LABEL_171:
      v127 = 0;
      LOBYTE(v323) = 0;
    }
    else
    {
      v323 = 0uLL;
      v324 = 0;
      sub_1C4EEC644(&v323, *(const void **)(v124 + 56), *(_QWORD *)(v124 + 64), (uint64_t)(*(_QWORD *)(v124 + 64) - *(_QWORD *)(v124 + 56)) >> 4);
      v127 = 1;
    }
    v325 = v127;
    v128 = sub_1C4FC90EC(a1, *(int **)v121, *((_QWORD *)v121 + 1));
    *(_QWORD *)&__dst = v121 + 16;
    v297 = sub_1C4FD092C((uint64_t **)v128 + 5, (unint64_t *)v121 + 2, (uint64_t)&std::piecewise_construct, (_QWORD **)&__dst);
    v313 = 0;
    v314 = 0;
    __p = 0;
    v129 = (uint64_t)sub_1C4EEC644(&__p, (const void *)v323, *((uint64_t *)&v323 + 1), (uint64_t)(*((_QWORD *)&v323 + 1) - v323) >> 4);
    v131 = __p;
    v130 = v313;
    if (__p == v313)
    {
      v133 = 0;
      v132 = 0;
      v159 = 1;
      goto LABEL_224;
    }
    v132 = 0;
    v133 = 0;
    __srcd = 0;
    v134 = *((_QWORD *)v121 + 2);
LABEL_174:
    v135 = v131[1] & 0xFFFFFFFFFFFFFFF8;
    v136 = *(uint64_t **)(v135 + 24);
    v137 = *(uint64_t **)(v135 + 32);
    v138 = (char *)v137 - (char *)v136;
    if (v137 != v136)
    {
      v139 = 0;
      v140 = 0;
      v141 = 8 * (v138 >> 3);
      while (1)
      {
        v142 = *v136;
        v143 = *(_WORD *)(*v136 + 12) & 0xF;
        if ((v143 - 7) <= 1 && (v140 & 1) != 0)
          break;
        if (!*(_DWORD *)(v142 + 8))
          v142 = *(_QWORD *)(v142 + 72);
        v144 = *(uint64_t **)(v142 + 64);
        if (v144)
        {
          v146 = *v144;
          v145 = v144[1];
          if (v143 != 1 || v145 != v146)
          {
LABEL_188:
            v139 = v142;
            if ((*(_BYTE *)(v142 + 72) & 0x18) == 0)
              break;
          }
        }
        else if (v143 != 1)
        {
          goto LABEL_188;
        }
        v140 |= (v143 - 7) < 2;
        ++v136;
        v141 -= 8;
        if (!v141)
        {
          if (!v139)
            break;
          v291 = v121;
          if ((*(_WORD *)(v139 + 12) & 0x80) != 0)
          {
            v148 = *(unint64_t ***)(v139 + 64);
            if (v148)
            {
              v149 = *v148;
              v150 = v148[1];
              if (v150 != *v148)
              {
                v151 = v133;
                __na = v134;
                while (1)
                {
                  if (v149[1] != *v131 + v134)
                  {
                    v133 = v151;
                    goto LABEL_201;
                  }
                  v152 = v132;
                  v153 = *v149;
                  v129 = sub_1C5779268(*v149);
                  if ((v129 & 1) != 0)
                    goto LABEL_199;
                  if (v151 < __srcd)
                    break;
                  v154 = v151 - v132;
                  v155 = v154 + 1;
                  if ((unint64_t)(v154 + 1) >> 61)
                    goto LABEL_411;
                  v156 = v130;
                  if (((char *)__srcd - (char *)v152) >> 2 > v155)
                    v155 = ((char *)__srcd - (char *)v152) >> 2;
                  if ((unint64_t)((char *)__srcd - (char *)v152) >= 0x7FFFFFFFFFFFFFF8)
                    v157 = 0x1FFFFFFFFFFFFFFFLL;
                  else
                    v157 = v155;
                  if (v157)
                  {
                    if (v157 >> 61)
                      goto LABEL_412;
                    v129 = (uint64_t)operator new(8 * v157);
                  }
                  else
                  {
                    v129 = 0;
                  }
                  v132 = (unint64_t *)(v129 + 8 * v154);
                  *v132 = v153;
                  v133 = v132 + 1;
                  while (v151 != v152)
                  {
                    v158 = *--v151;
                    *--v132 = v158;
                  }
                  __srcd = (unint64_t *)(v129 + 8 * v157);
                  if (v152)
                    operator delete(v152);
                  v130 = v156;
                  v134 = __na;
LABEL_201:
                  v149 += 2;
                  v151 = v133;
                  if (v149 == v150)
                    goto LABEL_219;
                }
                *v151++ = v153;
LABEL_199:
                v133 = v151;
                goto LABEL_201;
              }
            }
          }
LABEL_219:
          v131 += 2;
          v121 = v291;
          if (v131 == v130)
          {
            v159 = 1;
            goto LABEL_222;
          }
          goto LABEL_174;
        }
      }
    }
    v159 = 0;
LABEL_222:
    v131 = __p;
LABEL_224:
    if (v132 == v133)
      v160 = 0;
    else
      v160 = v159;
    if (v131)
    {
      v313 = v131;
      operator delete(v131);
    }
    if (!v160)
      goto LABEL_364;
    v161 = *v132;
    v322 = v161;
    v162 = (unint64_t *)(v161 & 0xFFFFFFFFFFFFFFF8);
    v163 = ((char *)v133 - (char *)v132) & 0xFFFFFFFFFFFFFFF8;
    v164 = v132;
    do
    {
      if (v162 != (unint64_t *)(*v132 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_363;
      ++v132;
      v163 -= 8;
    }
    while (v163);
    v166 = v162[3];
    v165 = v162[4];
    v167 = v165 - v166;
    if (v165 == v166)
      goto LABEL_363;
    if ((v161 & 1) != 0)
    {
      v170 = (uint64_t ***)v162[1];
      if ((*((_BYTE *)v170 + 23) & 0x10) == 0)
      {
        v168 = 0;
        v169 = &byte_1C871356D;
        goto LABEL_246;
      }
      v171 = ***v170;
      v172 = *(_QWORD *)(v171 + 152);
      v173 = *(unsigned int *)(v171 + 168);
      if ((_DWORD)v173)
      {
        LODWORD(v174) = (v173 - 1) & ((v170 >> 4) ^ (v170 >> 9));
        v175 = (uint64_t ****)(v172 + 16 * v174);
        v176 = *v175;
        if (*v175 == v170)
        {
LABEL_245:
          v179 = v175[1];
          v180 = (size_t)*v179;
          v169 = (char *)(v179 + 2);
          v168 = v180;
          goto LABEL_246;
        }
        v177 = 1;
        while (v176 != (uint64_t ***)-4096)
        {
          v178 = v174 + v177++;
          v174 = v178 & (v173 - 1);
          v176 = *(uint64_t ****)(v172 + 16 * v174);
          if (v176 == v170)
          {
            v175 = (uint64_t ****)(v172 + 16 * v174);
            goto LABEL_245;
          }
        }
      }
      v175 = (uint64_t ****)(v172 + 16 * v173);
      goto LABEL_245;
    }
    v169 = (char *)v162[1];
    v168 = v162[2];
LABEL_246:
    v182 = *((_QWORD *)&v310 + 1);
    v181 = v311;
    while (v182 != v181)
    {
      v129 = llvm::GlobPattern::match(v182, (uint64_t)v169, v168);
      if ((v129 & 1) != 0)
        goto LABEL_363;
      v182 += 96;
    }
    v183 = v167 & 0xFFFFFFFFFFFFFFF8;
    do
    {
      if (v167 >= 9 && (*(_WORD *)(*(_QWORD *)v166 + 12) & 0xFu) - 7 < 2)
        goto LABEL_363;
      v166 += 8;
      v183 -= 8;
    }
    while (v183);
    if (byte_1ED8102D8 || (byte_1ED836D79 & 1) != 0 || byte_1EF8F7308)
    {
      v184 = v316;
      v185 = &v316;
      v186 = &v316;
      if (v316)
      {
        v187 = *v162;
        while (1)
        {
          while (1)
          {
            v185 = (uint64_t **)v184;
            v188 = *(_QWORD *)(v184[4] & 0xFFFFFFFFFFFFFFF8);
            if (v187 >= v188)
              break;
            v184 = *v185;
            v186 = v185;
            if (!*v185)
              goto LABEL_263;
          }
          if (v188 >= v187)
            break;
          v184 = v185[1];
          if (!v184)
          {
            v186 = v185 + 1;
            goto LABEL_263;
          }
        }
      }
      else
      {
LABEL_263:
        v189 = (uint64_t *)operator new(0x28uLL);
        v189[4] = v161;
        *v189 = 0;
        v189[1] = 0;
        v189[2] = (uint64_t)v185;
        *v186 = v189;
        if (*v315)
        {
          v315 = (uint64_t **)*v315;
          v190 = *v186;
        }
        else
        {
          v190 = v189;
        }
        sub_1C4768E74(v316, v190);
        ++v317;
        v162 = (unint64_t *)(v322 & 0xFFFFFFFFFFFFFFF8);
      }
    }
    v191 = (uint64_t *)v162[3];
    v129 = sub_1C57792C0((_QWORD *)v121 + 3, &v322);
    v192 = v129;
    if ((_DWORD)v129)
    {
      *(_QWORD *)&__dst = *(_QWORD *)(v322 & 0xFFFFFFFFFFFFFFF8);
      v129 = (uint64_t)sub_1C47BC21C(a2, (unint64_t *)&__dst, (uint64_t **)&__dst);
    }
    *((_DWORD *)v297 + 10) = 1;
    v193 = *v191;
    if ((*(_WORD *)(*v191 + 12) & 0xFu) - 7 > 1)
    {
      v195 = v322 & 0xFFFFFFFFFFFFFFF8;
      if ((v322 & 1) == 0)
      {
LABEL_321:
        v236 = *(char **)(v195 + 8);
        v235 = *(_QWORD *)(v195 + 16);
        goto LABEL_331;
      }
      v196 = *(uint64_t ****)(v195 + 8);
      if ((*((_BYTE *)v196 + 23) & 0x10) != 0)
      {
        v197 = ***v196;
        v198 = *(_QWORD *)(v197 + 152);
        v199 = *(unsigned int *)(v197 + 168);
        if ((_DWORD)v199)
        {
          LODWORD(v200) = (v199 - 1) & ((v196 >> 4) ^ (v196 >> 9));
          v201 = (uint64_t ****)(v198 + 16 * v200);
          v202 = *v201;
          if (*v201 != v196)
          {
            v203 = 1;
            while (v202 != (uint64_t ***)-4096)
            {
              v204 = v200 + v203++;
              v200 = v204 & (v199 - 1);
              v202 = *(uint64_t ****)(v198 + 16 * v200);
              if (v202 == v196)
              {
LABEL_328:
                v201 = (uint64_t ****)(v198 + 16 * v200);
                goto LABEL_330;
              }
            }
            goto LABEL_329;
          }
          goto LABEL_330;
        }
LABEL_329:
        v201 = (uint64_t ****)(v198 + 16 * v199);
        goto LABEL_330;
      }
LABEL_374:
      v235 = 0;
      v236 = &byte_1C871356D;
LABEL_331:
      if (v235 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_411;
      if (v235 >= 0x17)
      {
        v245 = (v235 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v235 | 7) != 0x17)
          v245 = v235 | 7;
        v246 = v245 + 1;
        p_dst = (__int128 *)operator new(v245 + 1);
        *((_QWORD *)&__dst + 1) = v235;
        v327 = v246 | 0x8000000000000000;
        *(_QWORD *)&__dst = p_dst;
      }
      else
      {
        HIBYTE(v327) = v235;
        p_dst = &__dst;
        if (!v235)
          goto LABEL_339;
      }
      v129 = (uint64_t)memmove(p_dst, v236, v235);
LABEL_339:
      *((_BYTE *)p_dst + v235) = 0;
      v247 = v297 + 48;
      if (v297[71] < 0)
        operator delete(*(void **)v247);
      v248 = __dst;
      goto LABEL_362;
    }
    if (!v192)
    {
      v205 = v322;
      v207 = a3 + 1;
      v206 = a3[1];
      if (v206)
      {
        v208 = *(_QWORD *)(v322 & 0xFFFFFFFFFFFFFFF8);
        while (1)
        {
          while (1)
          {
            v209 = (uint64_t **)v206;
            v210 = *(_QWORD *)(v206[4] & 0xFFFFFFFFFFFFFFF8);
            if (v208 >= v210)
              break;
            v206 = *v209;
            v207 = v209;
            if (!*v209)
              goto LABEL_300;
          }
          if (v210 >= v208)
            break;
          v206 = v209[1];
          if (!v206)
          {
            v207 = v209 + 1;
            goto LABEL_300;
          }
        }
      }
      else
      {
        v209 = a3 + 1;
LABEL_300:
        v220 = (uint64_t *)v209;
        v209 = (uint64_t **)operator new(0x40uLL);
        *v209 = 0;
        v209[1] = 0;
        v209[4] = (uint64_t *)v205;
        v209[5] = 0;
        v209[6] = 0;
        v209[7] = 0;
        v209[2] = v220;
        *v207 = (uint64_t *)v209;
        v221 = (uint64_t *)**a3;
        v222 = (uint64_t *)v209;
        if (v221)
        {
          *a3 = v221;
          v222 = *v207;
        }
        v129 = (uint64_t)sub_1C4768E74(a3[1], v222);
        a3[2] = (uint64_t *)((char *)a3[2] + 1);
      }
      v224 = v209[6];
      v223 = (unint64_t)v209[7];
      if ((unint64_t)v224 >= v223)
      {
        v227 = v209[5];
        v228 = 0xAAAAAAAAAAAAAAABLL * (v224 - v227) + 1;
        if (v228 > 0xAAAAAAAAAAAAAAALL)
          goto LABEL_411;
        v229 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v223 - (_QWORD)v227) >> 3);
        if (2 * v229 > v228)
          v228 = 2 * v229;
        if (v229 >= 0x555555555555555)
          v230 = 0xAAAAAAAAAAAAAAALL;
        else
          v230 = v228;
        if (v230)
        {
          if (v230 > 0xAAAAAAAAAAAAAAALL)
            goto LABEL_412;
          v129 = (uint64_t)operator new(24 * v230);
        }
        else
        {
          v129 = 0;
        }
        v231 = *(_OWORD *)v121;
        v232 = (uint64_t *)(v129 + 8 * (v224 - v227));
        v232[2] = *((_QWORD *)v121 + 2);
        *(_OWORD *)v232 = v231;
        v233 = v232;
        if (v224 != v227)
        {
          do
          {
            v234 = *(_OWORD *)(v224 - 3);
            *(v233 - 1) = *(v224 - 1);
            *(_OWORD *)(v233 - 3) = v234;
            v233 -= 3;
            v224 -= 3;
          }
          while (v224 != v227);
          v224 = v209[5];
        }
        v226 = v232 + 3;
        v209[5] = v233;
        v209[6] = v232 + 3;
        v209[7] = (uint64_t *)(v129 + 24 * v230);
        if (v224)
          operator delete(v224);
      }
      else
      {
        v225 = *(_OWORD *)v121;
        v224[2] = *((_QWORD *)v121 + 2);
        *(_OWORD *)v224 = v225;
        v226 = v224 + 3;
      }
      v209[6] = v226;
      v195 = v322 & 0xFFFFFFFFFFFFFFF8;
      if ((v322 & 1) == 0)
        goto LABEL_321;
      v237 = *(uint64_t ****)(v195 + 8);
      if ((*((_BYTE *)v237 + 23) & 0x10) != 0)
      {
        v238 = ***v237;
        v198 = *(_QWORD *)(v238 + 152);
        v199 = *(unsigned int *)(v238 + 168);
        if ((_DWORD)v199)
        {
          LODWORD(v200) = (v199 - 1) & ((v237 >> 4) ^ (v237 >> 9));
          v201 = (uint64_t ****)(v198 + 16 * v200);
          v239 = *v201;
          if (*v201 != v237)
          {
            v240 = 1;
            while (v239 != (uint64_t ***)-4096)
            {
              v241 = v200 + v240++;
              v200 = v241 & (v199 - 1);
              v239 = *(uint64_t ****)(v198 + 16 * v200);
              if (v239 == v237)
                goto LABEL_328;
            }
            goto LABEL_329;
          }
LABEL_330:
          v242 = v201[1];
          v243 = (size_t)*v242;
          v236 = (char *)(v242 + 2);
          v235 = v243;
          goto LABEL_331;
        }
        goto LABEL_329;
      }
      goto LABEL_374;
    }
    v194 = v322 & 0xFFFFFFFFFFFFFFF8;
    if ((v322 & 1) == 0)
    {
      __srce = *(char **)(v194 + 8);
      __nb = *(_QWORD *)(v194 + 16);
      goto LABEL_346;
    }
    v211 = *(uint64_t ****)(v194 + 8);
    if ((*((_BYTE *)v211 + 23) & 0x10) != 0)
    {
      v212 = ***v211;
      v213 = *(_QWORD *)(v212 + 152);
      v214 = *(unsigned int *)(v212 + 168);
      if (!(_DWORD)v214)
        goto LABEL_343;
      LODWORD(v215) = (v214 - 1) & ((v211 >> 4) ^ (v211 >> 9));
      v216 = (uint64_t ****)(v213 + 16 * v215);
      v217 = *v216;
      if (*v216 != v211)
      {
        v218 = 1;
        while (v217 != (uint64_t ***)-4096)
        {
          v219 = v215 + v218++;
          v215 = v219 & (v214 - 1);
          v217 = *(uint64_t ****)(v213 + 16 * v215);
          if (v217 == v211)
          {
            v216 = (uint64_t ****)(v213 + 16 * v215);
            goto LABEL_344;
          }
        }
LABEL_343:
        v216 = (uint64_t ****)(v213 + 16 * v214);
      }
LABEL_344:
      v249 = v216[1];
      v251 = (size_t)*v249;
      v250 = (char *)(v249 + 2);
      __nb = v251;
    }
    else
    {
      __nb = 0;
      v250 = &byte_1C871356D;
    }
    __srce = v250;
LABEL_346:
    v252 = *(unsigned int *)(a1 + 32);
    v292 = v121;
    if ((_DWORD)v252)
    {
      v254 = *(unsigned __int8 **)(v193 + 24);
      v253 = *(_QWORD *)(v193 + 32);
      v255 = 0;
      if (v253)
      {
        v256 = *(_QWORD *)(v193 + 32);
        v257 = v254;
        do
        {
          v258 = *v257++;
          v255 = 33 * v255 + v258;
          --v256;
        }
        while (v256);
      }
      v259 = v252 - 1;
      v260 = *(_QWORD *)(a1 + 24);
      v285 = *(unsigned int *)(a1 + 32);
      v261 = v260 + 8 * v252 + 8;
      v262 = 1;
      v263 = v255;
      while (1)
      {
        v264 = v263 & v259;
        v265 = *(_QWORD **)(v260 + 8 * v264);
        if (v265 != (_QWORD *)-8)
        {
          if (!v265)
          {
            v266 = v285;
            goto LABEL_359;
          }
          if (*(_DWORD *)(v261 + 4 * v264) == v255
            && v253 == *v265
            && (!v253 || !memcmp(v254, (char *)v265 + *(unsigned int *)(a1 + 44), v253)))
          {
            break;
          }
        }
        v263 = v262 + v264;
        ++v262;
      }
      v266 = v285;
      if ((_DWORD)v264 != -1)
        v266 = (int)v264;
    }
    else
    {
      v266 = 0;
      v260 = *(_QWORD *)(a1 + 24);
    }
LABEL_359:
    v267 = *(_QWORD *)(v260 + 8 * v266);
    v320 = *(_OWORD *)(v267 + 16);
    v321 = *(_DWORD *)(v267 + 32);
    sub_1C5774A60(__srce, __nb, (unsigned int *)&v320, &__dst);
    v247 = v297 + 48;
    v121 = v292;
    if (v297[71] < 0)
      operator delete(*(void **)v247);
    v248 = __dst;
LABEL_362:
    *(_OWORD *)v247 = v248;
    *((_QWORD *)v247 + 2) = v327;
LABEL_363:
    v132 = v164;
LABEL_364:
    if (v325)
    {
      v129 = v323;
      if ((_QWORD)v323)
        operator delete((void *)v323);
    }
    if (v132)
      operator delete(v132);
    v121 += 128;
    if (v121 != v294)
      continue;
    break;
  }
  if (byte_1ED8102D8)
  {
    v268 = (uint64_t *)v315;
    if (v315 != &v316)
    {
      do
      {
        v269 = (llvm::raw_ostream *)llvm::errs((llvm *)v129);
        v270 = (void *)*((_QWORD *)v269 + 4);
        if (*((_QWORD *)v269 + 3) - (_QWORD)v270 > 0x15uLL)
        {
          qmemcpy(v270, "Devirtualized call to ", 22);
          *((_QWORD *)v269 + 4) += 22;
        }
        else
        {
          v269 = llvm::raw_ostream::write(v269, "Devirtualized call to ", 0x16uLL);
        }
        v129 = (uint64_t)sub_1C62927A4(v269, v268 + 4);
        v271 = *(_BYTE **)(v129 + 32);
        if (*(_BYTE **)(v129 + 24) == v271)
        {
          v129 = (uint64_t)llvm::raw_ostream::write((llvm::raw_ostream *)v129, "\n", 1uLL);
        }
        else
        {
          *v271 = 10;
          ++*(_QWORD *)(v129 + 32);
        }
        v272 = (uint64_t *)v268[1];
        if (v272)
        {
          do
          {
            v273 = (uint64_t **)v272;
            v272 = (uint64_t *)*v272;
          }
          while (v272);
        }
        else
        {
          do
          {
            v273 = (uint64_t **)v268[2];
            v16 = *v273 == v268;
            v268 = (uint64_t *)v273;
          }
          while (!v16);
        }
        v268 = (uint64_t *)v273;
      }
      while (v273 != &v316);
    }
  }
LABEL_392:
  sub_1C49F3440(v316);
  v274 = v318[0];
  if (v319)
  {
    v275 = 32 * v319;
    v276 = (_QWORD *)(v318[0] + 16);
    do
    {
      if (*(v276 - 2) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        v277 = (void *)*(v276 - 1);
        if (v277)
        {
          *v276 = v277;
          operator delete(v277);
        }
      }
      v276 += 4;
      v275 -= 32;
    }
    while (v275);
  }
  MEMORY[0x1CAA32FB4](v274, 8);
LABEL_399:
  *(_QWORD *)&v323 = (char *)&v310 + 8;
  sub_1C5775314((void ***)&v323);
  v278 = (char *)v309[0];
  if (v309[0])
  {
    v279 = (char *)v309[1];
    v280 = v309[0];
    if (v309[1] != v309[0])
    {
      do
      {
        sub_1C5775384(*((_QWORD **)v279 - 2));
        v281 = (void *)*((_QWORD *)v279 - 6);
        if (v281)
        {
          *((_QWORD *)v279 - 5) = v281;
          operator delete(v281);
        }
        v282 = (void *)*((_QWORD *)v279 - 9);
        if (v282)
        {
          *((_QWORD *)v279 - 8) = v282;
          operator delete(v282);
        }
        v283 = (void *)*((_QWORD *)v279 - 13);
        if (v283)
        {
          *((_QWORD *)v279 - 12) = v283;
          operator delete(v283);
        }
        v279 -= 128;
      }
      while (v279 != v278);
      v280 = v309[0];
    }
    v309[1] = v278;
    operator delete(v280);
  }
  return MEMORY[0x1CAA32FB4](v307[0], 8);
}

void llvm::updateIndexWPDForExports(uint64_t a1, unsigned int (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  BOOL v15;
  _QWORD *v16;
  void **v17;
  char v18;
  int v19;
  void *v20;
  size_t v21;
  size_t v22;
  uint64_t v23;
  size_t v24;
  const void *v25;
  int v26;
  uint64_t v27;
  unsigned __int8 *v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int i;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  BOOL v43;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  size_t __n;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  int v56;
  __int128 v57;
  void *v58;

  v4 = (_QWORD *)*a4;
  v46 = a4 + 1;
  if ((_QWORD *)*a4 != a4 + 1)
  {
    v5 = a1;
    do
    {
      v47 = v4;
      v50 = *(_QWORD *)((v4[4] & 0xFFFFFFFFFFFFFFF8) + 24);
      if (a2(a3, *(_QWORD *)(*(_QWORD *)v50 + 24), *(_QWORD *)(*(_QWORD *)v50 + 32)))
      {
        v7 = v47[5];
        v6 = v47[6];
        v49 = v6;
        while (v7 != v6)
        {
          v8 = sub_1C5712F58(v5, *(int **)v7, *(_QWORD *)(v7 + 8));
          v11 = (_QWORD *)v8[6];
          v9 = v8 + 6;
          v10 = v11;
          if (!v11)
            goto LABEL_17;
          v12 = *(_QWORD *)(v7 + 16);
          v13 = v9;
          do
          {
            v14 = v10[4];
            v15 = v14 >= v12;
            if (v14 >= v12)
              v16 = v10;
            else
              v16 = v10 + 1;
            if (v15)
              v13 = v10;
            v10 = (_QWORD *)*v16;
          }
          while (*v16);
          if (v13 == v9 || v12 < v13[4])
LABEL_17:
            v13 = v9;
          v17 = (void **)(v13 + 6);
          v18 = *((_BYTE *)v13 + 71);
          v19 = v18;
          if (v18 >= 0)
            v20 = v13 + 6;
          else
            v20 = (void *)v13[6];
          v21 = v18 & 0x7F;
          if (v19 >= 0)
            v22 = v21;
          else
            v22 = v13[7];
          v23 = *(unsigned int *)(v5 + 32);
          if ((_DWORD)v23)
          {
            v25 = *(const void **)(*(_QWORD *)v50 + 24);
            v24 = *(_QWORD *)(*(_QWORD *)v50 + 32);
            v52 = v20;
            v53 = v7;
            __n = v22;
            v26 = 0;
            if (v24)
            {
              v27 = *(_QWORD *)(*(_QWORD *)v50 + 32);
              v28 = *(unsigned __int8 **)(*(_QWORD *)v50 + 24);
              do
              {
                v29 = *v28++;
                v26 = 33 * v26 + v29;
                --v27;
              }
              while (v27);
            }
            v30 = v23 - 1;
            v31 = *(_QWORD *)(v5 + 24);
            v54 = *(unsigned int *)(v5 + 32);
            v32 = v31 + 8 * v23 + 8;
            v33 = *(unsigned int *)(v5 + 44);
            v34 = 1;
            for (i = v26; ; i = v36 + v34++)
            {
              v36 = i & v30;
              v37 = *(_QWORD **)(v31 + 8 * v36);
              if (v37 != (_QWORD *)-8)
              {
                if (!v37)
                {
                  v5 = a1;
                  v20 = v52;
                  v7 = v53;
                  v38 = v54;
                  v17 = (void **)(v13 + 6);
                  goto LABEL_37;
                }
                if (*(_DWORD *)(v32 + 4 * v36) == v26 && v24 == *v37 && (!v24 || !memcmp(v25, (char *)v37 + v33, v24)))
                  break;
              }
            }
            v38 = v54;
            v17 = (void **)(v13 + 6);
            if ((_DWORD)v36 != -1)
              v38 = (int)v36;
            v5 = a1;
            v20 = v52;
            v7 = v53;
LABEL_37:
            v22 = __n;
          }
          else
          {
            v38 = 0;
            v31 = *(_QWORD *)(v5 + 24);
          }
          v39 = *(_QWORD *)(v31 + 8 * v38);
          v55 = *(_OWORD *)(v39 + 16);
          v56 = *(_DWORD *)(v39 + 32);
          sub_1C5774A60(v20, v22, (unsigned int *)&v55, &v57);
          if (*((char *)v13 + 71) < 0)
            operator delete(*v17);
          *(_OWORD *)v17 = v57;
          v17[2] = v58;
          v7 += 24;
          v6 = v49;
        }
      }
      v40 = v47;
      v41 = (_QWORD *)v47[1];
      if (v41)
      {
        do
        {
          v42 = v41;
          v41 = (_QWORD *)*v41;
        }
        while (v41);
      }
      else
      {
        do
        {
          v42 = (_QWORD *)v40[2];
          v43 = *v42 == (_QWORD)v40;
          v40 = v42;
        }
        while (!v43);
      }
      v4 = v42;
    }
    while (v42 != v46);
  }
}

void sub_1C5774A60(void *__src@<X0>, size_t __n@<X1>, unsigned int *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  size_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  BOOL v13;
  void **v14;
  size_t v15;
  uint64_t v16;
  size_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *__p[2];
  char v23;
  void *__srca;
  __int128 v25;
  _BYTE v26[259];
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  __srca = v26;
  v25 = xmmword_1C64638F0;
  if (__n < 0x101)
  {
    v8 = 0;
    if (!__n)
      goto LABEL_4;
    goto LABEL_3;
  }
  llvm::SmallVectorBase<unsigned long long>::grow_pod((uint64_t)&__srca, v26, __n, 1);
  v8 = v25;
  if (__n)
  {
LABEL_3:
    memcpy((char *)__srca + v8, __src, __n);
    v8 = v25;
  }
LABEL_4:
  v9 = v8 + __n;
  *(_QWORD *)&v25 = v9;
  if (*((_QWORD *)&v25 + 1) < v9 + 6)
  {
    llvm::SmallVectorBase<unsigned long long>::grow_pod((uint64_t)&__srca, v26, v9 + 6, 1);
    v9 = v25;
  }
  v10 = (char *)__srca + v9;
  *((_WORD *)v10 + 2) = 11885;
  *(_DWORD *)v10 = 1986817070;
  *(_QWORD *)&v25 = v25 + 6;
  v11 = a3[1] | ((unint64_t)*a3 << 32);
  if (v11)
  {
    v12 = (char *)&v28;
    do
    {
      *--v12 = (v11 % 0xA) | 0x30;
      v13 = v11 > 9;
      v11 /= 0xAuLL;
    }
    while (v13);
  }
  else
  {
    v12 = &v27;
    v27 = 48;
  }
  sub_1C4E61270(__p, v12, (char *)&v28, (char *)&v28 - v12);
  if (v23 >= 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  if (v23 >= 0)
    v15 = v23 & 0x7F;
  else
    v15 = (size_t)__p[1];
  v16 = v25;
  if (*((_QWORD *)&v25 + 1) >= (unint64_t)v25 + v15)
  {
    if (!v15)
      goto LABEL_20;
    goto LABEL_19;
  }
  llvm::SmallVectorBase<unsigned long long>::grow_pod((uint64_t)&__srca, v26, v25 + v15, 1);
  v16 = v25;
  if (v15)
  {
LABEL_19:
    memcpy((char *)__srca + v16, v14, v15);
    v16 = v25;
  }
LABEL_20:
  v17 = v16 + v15;
  *(_QWORD *)&v25 = v17;
  if (v23 < 0)
  {
    operator delete(__p[0]);
    v17 = v25;
  }
  if (v17 >= 0x7FFFFFFFFFFFFFF8)
    abort();
  v18 = __srca;
  if (v17 >= 0x17)
  {
    v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v17 | 7) != 0x17)
      v19 = v17 | 7;
    v20 = v19 + 1;
    v21 = operator new(v19 + 1);
    a4[1] = v17;
    a4[2] = v20 | 0x8000000000000000;
    *a4 = v21;
    a4 = v21;
    goto LABEL_29;
  }
  *((_BYTE *)a4 + 23) = v17;
  if (v17)
LABEL_29:
    memmove(a4, v18, v17);
  *((_BYTE *)a4 + v17) = 0;
  if (__srca != v26)
    free(__srca);
}

uint64_t sub_1C5774CE4(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 148);
  if (*(_BYTE *)(result + 148))
    v1 = *(_DWORD *)(result + 144);
  *(_DWORD *)(result + 128) = v1;
  return result;
}

uint64_t sub_1C5774CF8()
{
  uint64_t v0;
  unint64_t v2;
  unint64_t v4;
  _QWORD *v5;
  _QWORD v6[2];

  v0 = operator new();
  *(_QWORD *)(v0 + 8) = 0;
  *(_QWORD *)(v0 + 16) = &unk_1EF8F7158;
  *(_DWORD *)(v0 + 24) = 4;
  *(_QWORD *)v0 = &off_1E817D048;
  *(_BYTE *)(v0 + 28) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v4 = qword_1ED830BC0[0];
  v2 = atomic_load(&qword_1ED833758);
  if (v2 != -1)
  {
    v6[0] = sub_1C576E858;
    v6[1] = &v4;
    v5 = v6;
    std::__call_once(&qword_1ED833758, &v5, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return v0;
}

void sub_1C5774DE8(llvm::Pass *a1)
{
  llvm::Pass::~Pass(a1);
  JUMPOUT(0x1CAA32FC0);
}

void *sub_1C5774E0C(uint64_t a1, uint64_t a2)
{
  sub_1C4771E64(a2, a2, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
  sub_1C4771E64(a2, a2, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  return sub_1C4771E64(a2, a2, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
}

uint64_t sub_1C5774E70(uint64_t a1, uint64_t **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[40];
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  _BYTE v15[56];
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;

  if ((llvm::ModulePass::skipModule((llvm::ModulePass *)a1, a2) & 1) != 0)
    return 0;
  v18 = &v19;
  v19 = 0;
  v17 = a1;
  if (*(_BYTE *)(a1 + 28))
  {
    v8 = a1;
    v9 = 0;
    v14 = 0;
    v15[0] = 0;
    v16 = 0;
    v4 = sub_1C576E9FC((llvm::LLVMContext **)a2, (uint64_t)sub_1C5674758, (uint64_t)&v8, (uint64_t)sub_1C5774FE4, (uint64_t)&v18, (uint64_t)sub_1C577504C, (uint64_t)&v17);
    if (v16)
      goto LABEL_15;
  }
  else
  {
    v8 = a1;
    v9 = 0;
    v14 = 0;
    v15[0] = 0;
    v16 = 0;
    sub_1C576F228((uint64_t)v7, (llvm::LLVMContext **)a2, (uint64_t)sub_1C5674758, (uint64_t)&v8, (uint64_t)sub_1C5774FE4, (uint64_t)&v18, (uint64_t)sub_1C577504C, (uint64_t)&v17, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v4 = sub_1C576F48C(v7);
    sub_1C5772F10((uint64_t)v7);
    if (v16)
    {
LABEL_15:
      llvm::AAResults::~AAResults((llvm::AAResults *)v15);
      v16 = 0;
    }
  }
  if (v14)
  {
    if (v13 != v12)
      free(v13);
    if (v11 != v10)
      free(v11);
  }
  v5 = v19;
  v19 = 0;
  if (v5)
    sub_1C4EF268C((uint64_t)&v19, v5);
  return v4;
}

uint64_t sub_1C5774FE4(uint64_t **a1, const llvm::Function *a2)
{
  llvm::OptimizationRemarkEmitter *v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = (llvm::OptimizationRemarkEmitter *)operator new();
  llvm::OptimizationRemarkEmitter::OptimizationRemarkEmitter(v4, a2);
  v5 = *a1;
  v6 = **a1;
  **a1 = (uint64_t)v4;
  if (v6)
    sub_1C4EF268C((uint64_t)v5, v6);
  return **a1;
}

uint64_t sub_1C577504C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 8) + 24);
  v2 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 32))(v1);
  return (*(uint64_t (**)(uint64_t, void *))(*(_QWORD *)v2 + 96))(v2, &llvm::DominatorTreeWrapperPass::ID)
       + 32;
}

void sub_1C57750A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  char v5;
  BOOL v6;
  _BYTE *v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  void **v26;
  void **v27;
  void *__p;
  void **v29;
  void **v30;
  char *v31;
  uint64_t *v32;
  void **v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v1 = qword_1ED810398;
  v2 = unk_1ED8103A0;
  if (qword_1ED810398 != unk_1ED8103A0)
  {
    v4 = a1 + 2;
    do
    {
      v5 = *(_BYTE *)(v1 + 23);
      v6 = v5 < 0;
      if (v5 >= 0)
        v7 = (_BYTE *)v1;
      else
        v7 = *(_BYTE **)v1;
      v8 = v5 & 0x7F;
      if (v6)
        v9 = *(_QWORD *)(v1 + 8);
      else
        v9 = v8;
      llvm::GlobPattern::create(v7, v9, (uint64_t)&v34);
      v10 = v41;
      if ((v41 & 1) == 0)
      {
        v11 = a1[1];
        v12 = a1[2];
        if (v11 >= v12)
        {
          v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - *a1) >> 5);
          v19 = v18 + 1;
          if (v18 + 1 > 0x2AAAAAAAAAAAAAALL)
            abort();
          v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - *a1) >> 5);
          if (2 * v20 > v19)
            v19 = 2 * v20;
          if (v20 >= 0x155555555555555)
            v21 = 0x2AAAAAAAAAAAAAALL;
          else
            v21 = v19;
          v32 = v4;
          if (v21)
          {
            if (v21 > 0x2AAAAAAAAAAAAAALL)
              sub_1C4764EE4();
            v22 = (char *)operator new(96 * v21);
          }
          else
          {
            v22 = 0;
          }
          v23 = &v22[96 * v18];
          *(_OWORD *)v23 = v34;
          v24 = v36;
          *(_OWORD *)(v23 + 40) = v37;
          v25 = v39;
          *(_OWORD *)(v23 + 56) = v38;
          *(_OWORD *)(v23 + 72) = v25;
          __p = v22;
          v29 = (void **)v23;
          *((_QWORD *)v23 + 2) = v35;
          v34 = 0uLL;
          v35 = 0;
          *((_QWORD *)v23 + 11) = v40;
          *(_OWORD *)(v23 + 24) = v24;
          v30 = (void **)(v23 + 96);
          v31 = &v22[96 * v21];
          sub_1C62A64CC(a1, &__p);
          v16 = a1[1];
          v26 = v29;
          v27 = v30;
          while (v27 != v26)
          {
            v27 -= 12;
            v33 = v27;
            sub_1C476B22C(&v33);
          }
          if (__p)
            operator delete(__p);
        }
        else
        {
          *(_QWORD *)v11 = 0;
          *(_QWORD *)(v11 + 8) = 0;
          *(_QWORD *)(v11 + 16) = 0;
          *(_OWORD *)v11 = v34;
          *(_QWORD *)(v11 + 16) = v35;
          v34 = 0uLL;
          v35 = 0;
          *(_OWORD *)(v11 + 24) = v36;
          v14 = v38;
          v13 = v39;
          v15 = v40;
          *(_OWORD *)(v11 + 40) = v37;
          *(_QWORD *)(v11 + 88) = v15;
          *(_OWORD *)(v11 + 72) = v13;
          *(_OWORD *)(v11 + 56) = v14;
          v16 = v11 + 96;
        }
        a1[1] = v16;
        v10 = v41;
      }
      if ((v10 & 1) != 0)
      {
        v17 = v34;
        *(_QWORD *)&v34 = 0;
        if (v17)
          (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
      }
      else
      {
        __p = &v34;
        sub_1C476B22C((void ***)&__p);
      }
      v1 += 24;
    }
    while (v1 != v2);
  }
}

void sub_1C5775314(void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;
  void **v6;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        v6 = v4;
        sub_1C476B22C(&v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1C5775384(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  if (a1)
  {
    sub_1C5775384(*a1);
    sub_1C5775384(a1[1]);
    v2 = (void *)a1[14];
    if (v2)
    {
      a1[15] = v2;
      operator delete(v2);
    }
    v3 = (void *)a1[11];
    if (v3)
    {
      a1[12] = v3;
      operator delete(v3);
    }
    v4 = (void *)a1[7];
    if (v4)
    {
      a1[8] = v4;
      operator delete(v4);
    }
    v5 = (void *)a1[4];
    if (v5)
    {
      a1[5] = v5;
      operator delete(v5);
    }
    operator delete(a1);
  }
}

char *sub_1C57753FC(char **a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v2 = *a1;
  v3 = a1[1];
  v4 = (v3 - *a1) >> 3;
  v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 61)
    abort();
  v8 = a1[2] - v2;
  if (v8 >> 2 > v5)
    v5 = v8 >> 2;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
    v9 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v9 = v5;
  if (v9)
  {
    if (v9 >> 61)
      sub_1C4764EE4();
    v10 = (char *)operator new(8 * v9);
  }
  else
  {
    v10 = 0;
  }
  v11 = &v10[8 * v4];
  *(_QWORD *)v11 = a2;
  v12 = v11 + 8;
  while (v3 != v2)
  {
    v13 = *((_QWORD *)v3 - 1);
    v3 -= 8;
    *((_QWORD *)v11 - 1) = v13;
    v11 -= 8;
  }
  *a1 = v11;
  a1[1] = v12;
  a1[2] = &v10[8 * v9];
  if (v2)
    operator delete(v2);
  return v12;
}

void sub_1C57754C8(uint64_t **a1, uint64_t a2)
{
  uint64_t **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  llvm::DominatorTree *v11;
  uint64_t v12;
  llvm::GetElementPtrInst *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t **v17;
  unsigned __int8 *v18;
  uint64_t v19;
  char v20;
  char v21;
  char *v22;
  char *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t **v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned __int8 *v32;
  llvm::Value *v33;
  char *v34;
  char *v35;
  unsigned __int8 **v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 ***v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unsigned __int8 **v45;
  int v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  char v54;
  char v55;
  char *v56;
  char *v57;
  unsigned __int8 *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  unsigned __int8 **v64;
  int v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  unsigned __int8 *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  llvm::ValueAsMetadata *v72;
  uint64_t v73;
  _QWORD *v74;
  BOOL v75;
  uint64_t v76;
  uint64_t **v77;
  llvm::Type *v78;
  llvm::Value *v79;
  uint64_t *v80;
  uint64_t v81;
  llvm::ValueAsMetadata *v82;
  uint64_t v83;
  _QWORD *v84;
  llvm::UndefValue *v85;
  uint64_t v86;
  llvm::Value *v87;
  char *v88;
  char *v89;
  uint64_t **v90;
  unint64_t v91;
  char *v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  _DWORD *v96;
  char *v97;
  char *v98;
  void *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;
  char *v105;
  unsigned __int8 **v106;
  int v107;
  unsigned __int8 *v108;
  unsigned __int8 *v109;
  unsigned __int8 *v110;
  uint64_t v111;
  char *v112;
  uint64_t Declaration;
  uint64_t v114;
  uint64_t **v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  char v119;
  uint64_t v120[4];
  __int16 v121;
  void *v122[2];
  uint64_t v123;
  __int16 v124;
  void *v125[2];
  uint64_t v126;
  __int16 v127;
  void *v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  _QWORD v143[4];

  v3 = a1;
  v143[2] = *MEMORY[0x1E0C80C00];
  Declaration = llvm::Intrinsic::getDeclaration(*a1, 299, 0, 0);
  v114 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = (uint64_t)(v3 + 16);
    v112 = (char *)(v3 + 35);
    v115 = v3;
    while (1)
    {
      v6 = *(_QWORD *)(v4 + 24);
      v4 = *(_QWORD *)(v4 + 8);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 16) == 84)
          break;
      }
LABEL_102:
      if (!v4)
        return;
    }
    v7 = v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF);
    v8 = *(uint64_t **)v7;
    v9 = *(_QWORD *)(v7 + 32);
    v116 = *(_QWORD *)(v7 + 64);
    v117 = v4;
    v10 = *(void **)(v116 + 24);
    v141 = (char *)v143;
    v142 = 0x100000000;
    v138 = &v140;
    v139 = 0x100000000;
    v135 = &v137;
    v136 = 0x100000000;
    v119 = 0;
    v11 = (llvm::DominatorTree *)((uint64_t (*)(uint64_t *, _QWORD))v3[3])(v3[4], *(_QWORD *)(*(_QWORD *)(v6 + 40) + 56));
    llvm::findDevirtualizableCallsForTypeCheckedLoad((uint64_t)&v141, (uint64_t)&v138, (uint64_t)&v135, &v119, v6, v11);
    v12 = v6;
    if ((_DWORD)v139 == 1)
    {
      v12 = v6;
      if (!v119)
        v12 = *v138;
    }
    sub_1C4773D54((uint64_t)&v128, v12, 0, 0, 0);
    v13 = (llvm::GetElementPtrInst *)v3[7];
    if (*(_DWORD *)(v114 + 36) == 298)
    {
      v127 = 257;
      v14 = (unsigned __int8 *)sub_1C4867B70((uint64_t *)&v128, v13, v8, v9, (uint64_t)v125);
      v15 = llvm::PointerType::get((llvm::PointerType *)v3[9], 0);
      v127 = 257;
      v16 = sub_1C4773E38((uint64_t *)&v128, 49, v14, v15, (uint64_t)v125);
      v17 = v3;
      v18 = v16;
      v19 = (uint64_t)v17[9];
      v124 = 257;
      llvm::DataLayout::getAlignment(*(_QWORD *)(*(_QWORD *)(v131 + 56) + 40) + 272, v19);
      v21 = v20;
      v22 = (char *)operator new(0x60uLL);
      v23 = v22;
      v24 = (unsigned __int8 *)(v22 + 32);
      *((_QWORD *)v22 + 2) = 0;
      *((_QWORD *)v22 + 3) = v22 + 32;
      v127 = 257;
      *((_QWORD *)v22 + 4) = v19;
      *((_QWORD *)v22 + 5) = 0;
      *((_WORD *)v22 + 24) = 60;
      *((_DWORD *)v22 + 13) = 1;
      *(_OWORD *)(v22 + 56) = 0u;
      *(_OWORD *)(v22 + 72) = 0u;
      *((_DWORD *)v22 + 22) = 0;
      *(_QWORD *)v22 = v18;
      *((_QWORD *)v22 + 1) = 0;
      if (v18)
      {
        v27 = *((_QWORD *)v18 + 1);
        v26 = v18 + 8;
        v25 = v27;
        *((_QWORD *)v22 + 1) = v27;
        if (v27)
          *(_QWORD *)(v25 + 16) = v22 + 8;
        *((_QWORD *)v22 + 2) = v26;
        *v26 = v22;
      }
      *((_WORD *)v22 + 25) = 2 * (v21 & 0x3F);
      v22[92] = 1;
      llvm::Value::setName((uint64_t ***)v22 + 4, (uint64_t)v125);
      (*(void (**)(uint64_t, unsigned __int8 *, void **, uint64_t, uint64_t))(*(_QWORD *)v134 + 16))(v134, v24, v122, v131, v132);
      if (!v129)
      {
LABEL_14:
        v28 = v115;
        v29 = (uint64_t)v115[11];
        v127 = 257;
        v30 = sub_1C4773E38((uint64_t *)&v128, 40, v24, v29, (uint64_t)v125);
        v31 = (uint64_t)v115[11];
        v127 = 257;
        v32 = sub_1C4773E38((uint64_t *)&v128, 47, v14, v31, (uint64_t)v125);
        v124 = 257;
        v33 = (llvm::Value *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, unsigned __int8 *, _QWORD, _QWORD))(*(_QWORD *)v133 + 16))(v133, v32, v30, 0, 0);
        if (!v33)
        {
          v127 = 257;
          v34 = (char *)operator new(0x80uLL);
          v35 = v34;
          *(_QWORD *)v34 = 0;
          *((_QWORD *)v34 + 1) = 0;
          *((_QWORD *)v34 + 2) = 0;
          *((_QWORD *)v34 + 5) = 0;
          *((_QWORD *)v34 + 6) = 0;
          *((_QWORD *)v34 + 4) = 0;
          v36 = (unsigned __int8 **)(v34 + 32);
          *((_QWORD *)v34 + 8) = *(_QWORD *)v32;
          v33 = (llvm::Value *)(v34 + 64);
          *((_QWORD *)v34 + 3) = v34 + 64;
          *((_QWORD *)v34 + 7) = v34 + 64;
          *((_QWORD *)v34 + 9) = 0;
          v34[80] = 41;
          v34[81] = 0;
          *((_WORD *)v34 + 41) = 0;
          *((_DWORD *)v34 + 21) = 2;
          *((_DWORD *)v34 + 30) = 0;
          *(_OWORD *)(v34 + 104) = 0u;
          *(_OWORD *)(v34 + 88) = 0u;
          *(_QWORD *)v34 = v32;
          v39 = *((_QWORD *)v32 + 1);
          v38 = v32 + 8;
          v37 = v39;
          *((_QWORD *)v34 + 1) = v39;
          if (v39)
            *(_QWORD *)(v37 + 16) = v34 + 8;
          *((_QWORD *)v34 + 2) = v38;
          *v38 = v34;
          if (*((_QWORD *)v34 + 4))
          {
            **((_QWORD **)v34 + 6) = *((_QWORD *)v34 + 5);
            v111 = *((_QWORD *)v34 + 5);
            if (v111)
              *(_QWORD *)(v111 + 16) = *((_QWORD *)v34 + 6);
          }
          *v36 = v30;
          if (v30)
          {
            v42 = *((_QWORD *)v30 + 1);
            v41 = (unsigned __int8 ***)(v30 + 8);
            v40 = v42;
            *((_QWORD *)v34 + 5) = v42;
            if (v42)
              *(_QWORD *)(v40 + 16) = v34 + 40;
            *((_QWORD *)v34 + 6) = v41;
            *v41 = v36;
          }
          llvm::Value::setName((uint64_t ***)v34 + 8, (uint64_t)v125);
          (*(void (**)(uint64_t, llvm::Value *, void **, uint64_t, uint64_t))(*(_QWORD *)v134 + 16))(v134, v33, v122, v131, v132);
          if (v129)
          {
            v43 = (char *)v128;
            v44 = (char *)v128 + 16 * v129;
            v45 = (unsigned __int8 **)(v35 + 112);
            do
            {
              v46 = *(_DWORD *)v43;
              v47 = (unsigned __int8 *)*((_QWORD *)v43 + 1);
              if (v47)
              {
                if (!v46)
                {
                  v120[0] = *((_QWORD *)v43 + 1);
                  llvm::MetadataTracking::track((uint64_t)v120, v47, 2);
                  v48 = *v45;
                  if (!*v45)
                  {
LABEL_35:
                    v49 = (unsigned __int8 *)v120[0];
                    *v45 = (unsigned __int8 *)v120[0];
                    if (v49)
                      llvm::MetadataTracking::retrack((uint64_t)v120, v49, (uint64_t)(v35 + 112));
                    goto LABEL_32;
                  }
LABEL_29:
                  llvm::MetadataTracking::untrack((uint64_t)(v35 + 112), v48);
                  goto LABEL_35;
                }
              }
              else
              {
                v48 = *v45;
                if (!*v45 && (v35[87] & 0x20) == 0)
                  goto LABEL_32;
                if (!v46)
                {
                  v120[0] = 0;
                  if (!v48)
                    goto LABEL_35;
                  goto LABEL_29;
                }
              }
              llvm::Value::setMetadata(v33, *(_DWORD *)v43, (llvm::MDNode *)v47);
LABEL_32:
              v43 += 16;
            }
            while (v43 != v44);
          }
          v28 = v115;
        }
        v69 = (uint64_t)v28[8];
        v127 = 257;
        v58 = sub_1C4773E38((uint64_t *)&v128, 48, (unsigned __int8 *)v33, v69, (uint64_t)v125);
        v3 = v28;
        goto LABEL_59;
      }
      v104 = (char *)v128;
      v105 = (char *)v128 + 16 * v129;
      v106 = (unsigned __int8 **)(v23 + 80);
      while (1)
      {
        v107 = *(_DWORD *)v104;
        v108 = (unsigned __int8 *)*((_QWORD *)v104 + 1);
        if (v108)
        {
          if (!v107)
          {
            v120[0] = *((_QWORD *)v104 + 1);
            llvm::MetadataTracking::track((uint64_t)v120, v108, 2);
            v109 = *v106;
            goto LABEL_115;
          }
        }
        else
        {
          v109 = *v106;
          if (!*v106 && (v23[55] & 0x20) == 0)
            goto LABEL_112;
          if (!v107)
          {
            v120[0] = 0;
LABEL_115:
            if (v109)
              llvm::MetadataTracking::untrack((uint64_t)(v23 + 80), v109);
            v110 = (unsigned __int8 *)v120[0];
            *v106 = (unsigned __int8 *)v120[0];
            if (v110)
              llvm::MetadataTracking::retrack((uint64_t)v120, v110, (uint64_t)(v23 + 80));
            goto LABEL_112;
          }
        }
        llvm::Value::setMetadata((llvm::Value *)v24, *(_DWORD *)v104, (llvm::MDNode *)v108);
LABEL_112:
        v104 += 16;
        if (v104 == v105)
          goto LABEL_14;
      }
    }
    v127 = 257;
    v50 = (unsigned __int8 *)sub_1C4867B70((uint64_t *)&v128, v13, v8, v9, (uint64_t)v125);
    v51 = llvm::PointerType::get((llvm::PointerType *)v3[8], 0);
    v127 = 257;
    v52 = sub_1C4773E38((uint64_t *)&v128, 49, v50, v51, (uint64_t)v125);
    v53 = (uint64_t)v3[8];
    v124 = 257;
    llvm::DataLayout::getAlignment(*(_QWORD *)(*(_QWORD *)(v131 + 56) + 40) + 272, v53);
    v55 = v54;
    v56 = (char *)operator new(0x60uLL);
    v57 = v56;
    v58 = (unsigned __int8 *)(v56 + 32);
    *((_QWORD *)v56 + 2) = 0;
    *((_QWORD *)v56 + 3) = v56 + 32;
    v127 = 257;
    *((_QWORD *)v56 + 4) = v53;
    *((_QWORD *)v56 + 5) = 0;
    *((_WORD *)v56 + 24) = 60;
    *((_DWORD *)v56 + 13) = 1;
    *(_OWORD *)(v56 + 56) = 0u;
    *(_OWORD *)(v56 + 72) = 0u;
    *((_DWORD *)v56 + 22) = 0;
    *(_QWORD *)v56 = v52;
    *((_QWORD *)v56 + 1) = 0;
    if (v52)
    {
      v61 = *((_QWORD *)v52 + 1);
      v60 = v52 + 8;
      v59 = v61;
      *((_QWORD *)v56 + 1) = v61;
      if (v61)
        *(_QWORD *)(v59 + 16) = v56 + 8;
      *((_QWORD *)v56 + 2) = v60;
      *v60 = v56;
    }
    *((_WORD *)v56 + 25) = 2 * (v55 & 0x3F);
    v56[92] = 1;
    llvm::Value::setName((uint64_t ***)v56 + 4, (uint64_t)v125);
    (*(void (**)(uint64_t, unsigned __int8 *, void **, uint64_t, uint64_t))(*(_QWORD *)v134 + 16))(v134, v58, v122, v131, v132);
    v3 = v115;
    if (!v129)
    {
LABEL_59:
      if ((_DWORD)v139)
      {
        v70 = v138;
        v71 = 8 * v139;
        do
        {
          v72 = (llvm::ValueAsMetadata *)*v70++;
          llvm::Value::doRAUW(v72, (llvm::Value *)v58, (llvm::Value *)1);
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*((_QWORD *)v72 + 5) + 40, (uint64_t ***)v72);
          v73 = *((_QWORD *)v72 + 3);
          v74 = (_QWORD *)*((_QWORD *)v72 + 4);
          *v74 = v73;
          *(_QWORD *)(v73 + 8) = v74;
          *((_QWORD *)v72 + 3) = 0;
          *((_QWORD *)v72 + 4) = 0;
          llvm::Value::deleteValue(v72);
          v71 -= 8;
        }
        while (v71);
      }
      v75 = (_DWORD)v136 == 1 && v119 == 0;
      v76 = v6;
      if (v75)
        v76 = *v135;
      sub_1C4773D54((uint64_t)v125, v76, 0, 0, 0);
      if (Declaration)
        v77 = *(uint64_t ***)(Declaration + 24);
      else
        v77 = 0;
      v120[0] = (uint64_t)v8;
      v120[1] = v116;
      v124 = 257;
      v79 = (llvm::Value *)sub_1C4774778((uint64_t *)v125, v77, Declaration, v120, 2, (uint64_t)v122, 0);
      if ((_DWORD)v136)
      {
        v80 = v135;
        v81 = 8 * v136;
        do
        {
          v82 = (llvm::ValueAsMetadata *)*v80++;
          llvm::Value::doRAUW(v82, v79, (llvm::Value *)1);
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*((_QWORD *)v82 + 5) + 40, (uint64_t ***)v82);
          v83 = *((_QWORD *)v82 + 3);
          v84 = (_QWORD *)*((_QWORD *)v82 + 4);
          *v84 = v83;
          *(_QWORD *)(v83 + 8) = v84;
          *((_QWORD *)v82 + 3) = 0;
          *((_QWORD *)v82 + 4) = 0;
          llvm::Value::deleteValue(v82);
          v81 -= 8;
        }
        while (v81);
      }
      if (*(_QWORD *)(v6 + 8))
      {
        v85 = llvm::UndefValue::get(*(llvm::UndefValue **)v6, v78);
        sub_1C4773D54((uint64_t)v122, v6, 0, 0, 0);
        v118 = 0;
        v121 = 257;
        v86 = sub_1C506D788((uint64_t)v122, (uint64_t)v85, (uint64_t)v58, &v118, 1, (uint64_t)v120);
        v118 = 1;
        v121 = 257;
        v87 = (llvm::Value *)sub_1C506D788((uint64_t)v122, v86, (uint64_t)v79, &v118, 1, (uint64_t)v120);
        llvm::Value::doRAUW((llvm::ValueAsMetadata *)v6, v87, (llvm::Value *)1);
        if (v122[0] != &v123)
          free(v122[0]);
      }
      v88 = v112;
      while (1)
      {
        v89 = *(char **)v88;
        v90 = (uint64_t **)v88;
        if (!*(_QWORD *)v88)
          break;
        while (1)
        {
          v88 = v89;
          v91 = *((_QWORD *)v89 + 4);
          if (v91 > (unint64_t)v79)
            break;
          if (v91 >= (unint64_t)v79)
            goto LABEL_86;
          v89 = (char *)*((_QWORD *)v88 + 1);
          if (!v89)
          {
            v90 = (uint64_t **)(v88 + 8);
            goto LABEL_83;
          }
        }
      }
LABEL_83:
      v92 = v88;
      v88 = (char *)operator new(0x30uLL);
      *((_QWORD *)v88 + 4) = v79;
      *((_DWORD *)v88 + 10) = 0;
      *(_QWORD *)v88 = 0;
      *((_QWORD *)v88 + 1) = 0;
      *((_QWORD *)v88 + 2) = v92;
      *v90 = (uint64_t *)v88;
      v93 = (uint64_t *)*v3[34];
      v94 = (uint64_t *)v88;
      if (v93)
      {
        v3[34] = v93;
        v94 = *v90;
      }
      sub_1C4768E74(v3[35], v94);
      v3[36] = (uint64_t *)((char *)v3[36] + 1);
LABEL_86:
      v95 = v142;
      *((_DWORD *)v88 + 10) = v142;
      v96 = v88 + 40;
      if (v119)
        *v96 = v95 + 1;
      if ((_DWORD)v95)
      {
        v97 = v141;
        v98 = &v141[16 * v95];
        do
        {
          v99 = *(void **)v97;
          v100 = *((_QWORD *)v97 + 1);
          v97 += 16;
          v122[0] = v10;
          v122[1] = v99;
          v101 = (char *)sub_1C57760AC(v5, (uint64_t *)v122);
          sub_1C5776858(v101, (uint64_t)v8, v100, (uint64_t)v96);
        }
        while (v97 != v98);
      }
      llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v6 + 40) + 40, (uint64_t ***)v6);
      v102 = *(_QWORD *)(v6 + 24);
      v103 = *(_QWORD **)(v6 + 32);
      *v103 = v102;
      *(_QWORD *)(v102 + 8) = v103;
      *(_QWORD *)(v6 + 24) = 0;
      *(_QWORD *)(v6 + 32) = 0;
      llvm::Value::deleteValue((llvm::Value *)v6);
      if (v125[0] != &v126)
        free(v125[0]);
      if (v128 != &v130)
        free(v128);
      if (v135 != &v137)
        free(v135);
      if (v138 != &v140)
        free(v138);
      if (v141 != (char *)v143)
        free(v141);
      v4 = v117;
      goto LABEL_102;
    }
    v62 = (char *)v128;
    v63 = (char *)v128 + 16 * v129;
    v64 = (unsigned __int8 **)(v57 + 80);
    while (1)
    {
      v65 = *(_DWORD *)v62;
      v66 = (unsigned __int8 *)*((_QWORD *)v62 + 1);
      if (v66)
      {
        if (!v65)
        {
          v120[0] = *((_QWORD *)v62 + 1);
          llvm::MetadataTracking::track((uint64_t)v120, v66, 2);
          v67 = *v64;
          goto LABEL_53;
        }
      }
      else
      {
        v67 = *v64;
        if (!*v64 && (v57[55] & 0x20) == 0)
          goto LABEL_50;
        if (!v65)
        {
          v120[0] = 0;
LABEL_53:
          if (v67)
            llvm::MetadataTracking::untrack((uint64_t)(v57 + 80), v67);
          v68 = (unsigned __int8 *)v120[0];
          *v64 = (unsigned __int8 *)v120[0];
          if (v68)
            llvm::MetadataTracking::retrack((uint64_t)v120, v68, (uint64_t)(v57 + 80));
          goto LABEL_50;
        }
      }
      llvm::Value::setMetadata((llvm::Value *)v58, *(_DWORD *)v62, (llvm::MDNode *)v66);
LABEL_50:
      v62 += 16;
      if (v62 == v63)
        goto LABEL_59;
    }
  }
}

void sub_1C5775F50(uint64_t **a1, uint64_t a2, const llvm::APInt *a3)
{
  uint64_t *v4;
  uint64_t v5;
  llvm::Value *v6;
  uint64_t **v7;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t **v13;
  BOOL v14;
  llvm::ConstantInt *v15;
  unsigned int v16;
  char v17;
  uint64_t v18;
  unsigned int v19;

  v4 = (uint64_t *)**a1;
  v5 = *v4;
  v6 = *(llvm::Value **)(*v4 + 1560);
  if (!v6)
  {
    v15 = *(llvm::ConstantInt **)(v5 + 1888);
    v16 = *(_DWORD *)(v5 + 1896);
    v19 = v16 >> 8;
    if (v16 >> 8 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v18, 1, 0);
    }
    else
    {
      if (v16 <= 0xFF)
        v17 = 0;
      else
        v17 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v16);
      v18 = v17 & 1;
    }
    v6 = llvm::ConstantInt::get(v15, (llvm::LLVMContext *)&v18, a3);
    if (v19 >= 0x41 && v18)
      MEMORY[0x1CAA32F9C](v18, 0x1000C8000313F17);
    *(_QWORD *)(v5 + 1560) = v6;
  }
  v7 = (uint64_t **)a1[34];
  v8 = a1 + 35;
  if (v7 != a1 + 35)
  {
    do
    {
      if (!*((_DWORD *)v7 + 10))
      {
        llvm::Value::doRAUW((llvm::ValueAsMetadata *)v7[4], v6, (llvm::Value *)1);
        v9 = v7[4];
        llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(v9[5] + 40, (uint64_t ***)v9);
        v10 = v9[3];
        v11 = (_QWORD *)v9[4];
        *v11 = v10;
        *(_QWORD *)(v10 + 8) = v11;
        v9[3] = 0;
        v9[4] = 0;
        llvm::Value::deleteValue((llvm::Value *)v9);
      }
      v12 = v7[1];
      if (v12)
      {
        do
        {
          v13 = (uint64_t **)v12;
          v12 = (uint64_t *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          v13 = (uint64_t **)v7[2];
          v14 = *v13 == (uint64_t *)v7;
          v7 = v13;
        }
        while (!v14);
      }
      v7 = v13;
    }
    while (v13 != v8);
  }
}

uint64_t sub_1C57760AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  _QWORD **v67;
  _QWORD *v68[2];
  __int128 v69;
  void *v70[2];
  uint64_t v71;
  __int16 v72;
  __int128 v73;
  uint64_t v74;
  __int128 __p;
  uint64_t v76;
  _QWORD **v77;
  _QWORD *v78;
  uint64_t v79;
  _DWORD *v80;

  v4 = *a2;
  v5 = a2[1];
  v80 = 0;
  v6 = sub_1C57790F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), v4, v5, &v80);
  v7 = v80;
  if (v6)
  {
    v8 = v80[4];
    v9 = *(_QWORD *)(a1 + 24);
    return v9 + 120 * v8 + 16;
  }
  v57 = v80;
  v10 = *(_DWORD *)(a1 + 8);
  v11 = *(unsigned int *)(a1 + 16);
  if (4 * v10 + 4 >= (3 * v11))
  {
    v12 = 2 * v11;
    goto LABEL_55;
  }
  v12 = *(_DWORD *)(a1 + 16);
  if ((int)v11 + ~v10 - *(_DWORD *)(a1 + 12) <= v11 >> 3)
  {
LABEL_55:
    v40 = *(_QWORD *)a1;
    v41 = (v12 - 1) | ((unint64_t)(v12 - 1) >> 1);
    v42 = v41 | (v41 >> 2) | ((v41 | (v41 >> 2)) >> 4);
    v43 = ((v42 | (v42 >> 8)) >> 16) | v42 | (v42 >> 8);
    if ((v43 + 1) > 0x40)
      v44 = v43 + 1;
    else
      v44 = 64;
    *(_DWORD *)(a1 + 16) = v44;
    v45 = operator new(24 * v44, (std::align_val_t)8uLL);
    *(_QWORD *)a1 = v45;
    if (v40)
    {
      *(_QWORD *)(a1 + 8) = 0;
      v46 = *(unsigned int *)(a1 + 16);
      if ((_DWORD)v46)
      {
        v47 = 24 * v46;
        do
        {
          *v45 = xmmword_1C8651090;
          v45 = (_OWORD *)((char *)v45 + 24);
          v47 -= 24;
        }
        while (v47);
      }
      if ((_DWORD)v11)
      {
        v48 = 24 * v11;
        v49 = v40;
        do
        {
          v50 = *(_QWORD *)v49;
          v51 = *(_QWORD *)(v49 + 8);
          if ((*(_QWORD *)v49 != -4096 || v51 != -1) && (v50 != -8192 || v51 != -2))
          {
            *(_QWORD *)&v69 = 0;
            sub_1C57790F4(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), v50, v51, &v69);
            v54 = v69;
            *(_OWORD *)v69 = *(_OWORD *)v49;
            *(_DWORD *)(v54 + 16) = *(_DWORD *)(v49 + 16);
            ++*(_DWORD *)(a1 + 8);
          }
          v49 += 24;
          v48 -= 24;
        }
        while (v48);
      }
      MEMORY[0x1CAA32FB4](v40, 8);
      v45 = *(_OWORD **)a1;
      LODWORD(v55) = *(_DWORD *)(a1 + 16);
    }
    else
    {
      *(_QWORD *)(a1 + 8) = 0;
      v55 = *(unsigned int *)(a1 + 16);
      if ((_DWORD)v55)
      {
        v56 = 0;
        do
        {
          *(_OWORD *)((char *)v45 + v56) = xmmword_1C8651090;
          v56 += 24;
        }
        while (24 * v55 != v56);
      }
    }
    sub_1C57790F4((uint64_t)v45, v55, v4, v5, &v57);
    v10 = *(_DWORD *)(a1 + 8);
    v7 = v57;
  }
  *(_DWORD *)(a1 + 8) = v10 + 1;
  if (*v7 != -4096 || v7[1] != -1)
    --*(_DWORD *)(a1 + 12);
  *v7 = v4;
  v7[1] = v5;
  *((_DWORD *)v7 + 4) = 0;
  v68[0] = 0;
  v68[1] = 0;
  v67 = v68;
  v69 = *(_OWORD *)a2;
  v70[1] = 0;
  v71 = 0;
  v70[0] = 0;
  v59 = 0;
  v60 = 1;
  v57 = 0;
  v58 = 0;
  v72 = 1;
  v73 = 0uLL;
  v61 = 0;
  v62 = 0;
  v74 = 0;
  __p = 0uLL;
  v76 = 0;
  v63 = 0;
  v64 = 0;
  v65 = 0;
  v66 = 0;
  v78 = 0;
  v79 = 0;
  v77 = &v78;
  v15 = *(char **)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  if ((unint64_t)v15 >= v14)
  {
    v19 = *(char **)(a1 + 24);
    v20 = 0xEEEEEEEEEEEEEEEFLL * ((v15 - v19) >> 3) + 1;
    if (v20 > 0x222222222222222)
      abort();
    v21 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(v14 - (_QWORD)v19) >> 3);
    if (2 * v21 > v20)
      v20 = 2 * v21;
    if (v21 >= 0x111111111111111)
      v22 = 0x222222222222222;
    else
      v22 = v20;
    if (v22 > 0x222222222222222)
      sub_1C4764EE4();
    v23 = 120 * v22;
    v24 = (char *)operator new(120 * v22);
    v25 = &v24[8 * ((v15 - v19) >> 3)];
    *(_OWORD *)v25 = *(_OWORD *)a2;
    v26 = &v24[v23];
    *((_QWORD *)v25 + 3) = 0;
    *((_QWORD *)v25 + 4) = 0;
    *((_QWORD *)v25 + 2) = 0;
    v70[1] = 0;
    v71 = 0;
    v70[0] = 0;
    *((_WORD *)v25 + 20) = 1;
    *((_QWORD *)v25 + 6) = 0;
    *((_QWORD *)v25 + 7) = 0;
    v74 = 0;
    v73 = 0uLL;
    *((_QWORD *)v25 + 8) = 0;
    *((_QWORD *)v25 + 9) = 0;
    *((_QWORD *)v25 + 10) = 0;
    *((_QWORD *)v25 + 11) = 0;
    __p = 0uLL;
    v76 = 0;
    *((_QWORD *)v25 + 14) = 0;
    *((_QWORD *)v25 + 13) = 0;
    v27 = v25 + 120;
    *((_QWORD *)v25 + 12) = v25 + 104;
    if (v15 == v19)
    {
      *(_QWORD *)(a1 + 24) = v25;
      *(_QWORD *)(a1 + 32) = v27;
      *(_QWORD *)(a1 + 40) = v26;
    }
    else
    {
      v28 = 0;
      do
      {
        v29 = &v25[v28];
        v30 = &v15[v28];
        *(_OWORD *)(v29 - 120) = *(_OWORD *)&v15[v28 - 120];
        *(_OWORD *)(v29 - 104) = *(_OWORD *)&v15[v28 - 104];
        *((_QWORD *)v29 - 11) = *(_QWORD *)&v15[v28 - 88];
        *((_QWORD *)v30 - 13) = 0;
        *((_QWORD *)v30 - 12) = 0;
        *((_QWORD *)v30 - 11) = 0;
        *((_WORD *)v29 - 40) = *(_WORD *)&v15[v28 - 80];
        *(_OWORD *)(v29 - 72) = *(_OWORD *)&v15[v28 - 72];
        *((_QWORD *)v29 - 7) = *(_QWORD *)&v15[v28 - 56];
        *((_QWORD *)v30 - 9) = 0;
        *((_QWORD *)v30 - 8) = 0;
        *((_QWORD *)v30 - 7) = 0;
        *((_OWORD *)v29 - 3) = *(_OWORD *)&v15[v28 - 48];
        *((_QWORD *)v29 - 4) = *(_QWORD *)&v15[v28 - 32];
        *((_QWORD *)v30 - 6) = 0;
        *((_QWORD *)v30 - 5) = 0;
        *((_QWORD *)v30 - 4) = 0;
        *((_QWORD *)v29 - 3) = *(_QWORD *)&v15[v28 - 24];
        v31 = &v15[v28 - 16];
        v32 = *(_QWORD *)v31;
        *(_QWORD *)&v25[v28 - 16] = *(_QWORD *)v31;
        v33 = (uint64_t)&v25[v28 - 16];
        v34 = *(_QWORD *)&v15[v28 - 8];
        *((_QWORD *)v29 - 1) = v34;
        if (v34)
        {
          *(_QWORD *)(v32 + 16) = v33;
          *((_QWORD *)v30 - 3) = v31;
          *(_QWORD *)v31 = 0;
          *(_QWORD *)&v15[v28 - 8] = 0;
        }
        else
        {
          *((_QWORD *)v29 - 3) = v33;
        }
        v28 -= 120;
      }
      while (&v15[v28] != v19);
      v15 = *(char **)(a1 + 24);
      v35 = *(_OWORD **)(a1 + 32);
      *(_QWORD *)(a1 + 24) = &v25[v28];
      *(_QWORD *)(a1 + 32) = v27;
      *(_QWORD *)(a1 + 40) = v26;
      while (v35 != (_OWORD *)v15)
      {
        sub_1C5775384(*((_QWORD **)v35 - 2));
        v36 = (void *)*((_QWORD *)v35 - 6);
        if (v36)
        {
          *((_QWORD *)v35 - 5) = v36;
          operator delete(v36);
        }
        v37 = (void *)*((_QWORD *)v35 - 9);
        if (v37)
        {
          *((_QWORD *)v35 - 8) = v37;
          operator delete(v37);
        }
        v38 = (void *)*((_QWORD *)v35 - 13);
        if (v38)
        {
          *((_QWORD *)v35 - 12) = v38;
          operator delete(v38);
        }
        v35 = (_OWORD *)((char *)v35 - 120);
      }
    }
    if (v15)
      operator delete(v15);
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)a2;
    *((_QWORD *)v15 + 3) = 0;
    *((_QWORD *)v15 + 4) = 0;
    *((_QWORD *)v15 + 2) = 0;
    *((_OWORD *)v15 + 1) = *(_OWORD *)v70;
    *((_QWORD *)v15 + 4) = v71;
    v70[0] = 0;
    v70[1] = 0;
    v71 = 0;
    *((_WORD *)v15 + 20) = v72;
    *((_QWORD *)v15 + 7) = 0;
    *((_QWORD *)v15 + 8) = 0;
    *((_QWORD *)v15 + 6) = 0;
    *((_OWORD *)v15 + 3) = v73;
    *((_QWORD *)v15 + 8) = v74;
    *((_QWORD *)v15 + 9) = 0;
    v73 = 0uLL;
    v74 = 0;
    *((_QWORD *)v15 + 10) = 0;
    *((_QWORD *)v15 + 11) = 0;
    *(_OWORD *)(v15 + 72) = __p;
    *((_QWORD *)v15 + 11) = v76;
    __p = 0uLL;
    v76 = 0;
    *((_QWORD *)v15 + 12) = v77;
    v16 = v78;
    *((_QWORD *)v15 + 13) = v78;
    v17 = v15 + 104;
    v18 = v79;
    *((_QWORD *)v15 + 14) = v79;
    if (v18)
    {
      v16[2] = v17;
      v77 = &v78;
      v78 = 0;
      v79 = 0;
    }
    else
    {
      *((_QWORD *)v15 + 12) = v17;
    }
    v27 = v15 + 120;
  }
  *(_QWORD *)(a1 + 32) = v27;
  sub_1C5775384(v78);
  if ((_QWORD)__p)
  {
    *((_QWORD *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if ((_QWORD)v73)
  {
    *((_QWORD *)&v73 + 1) = v73;
    operator delete((void *)v73);
  }
  if (v70[0])
  {
    v70[1] = v70[0];
    operator delete(v70[0]);
  }
  sub_1C5775384(v68[0]);
  if (v64)
  {
    v65 = v64;
    operator delete(v64);
  }
  if (v61)
  {
    v62 = v61;
    operator delete(v61);
  }
  if (v57)
  {
    v58 = v57;
    operator delete(v57);
  }
  v9 = *(_QWORD *)(a1 + 24);
  v8 = -286331153 * ((unint64_t)(*(_QWORD *)(a1 + 32) - v9) >> 3) - 1;
  *((_DWORD *)v7 + 4) = v8;
  return v9 + 120 * v8 + 16;
}

char *sub_1C5776684(uint64_t **a1, _QWORD *a2, uint64_t a3)
{
  char *v6;
  uint64_t **v7;
  char *v8;
  unint64_t *v9;
  unint64_t *v10;
  unint64_t *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  char *v20;
  uint64_t *v21;
  uint64_t *v22;

  v7 = a1 + 1;
  v6 = (char *)a1[1];
  if (v6)
  {
    do
    {
      while (1)
      {
        v8 = v6;
        v9 = (unint64_t *)*((_QWORD *)v6 + 4);
        v10 = (unint64_t *)*((_QWORD *)v8 + 5);
        if (v9 == v10)
          break;
        v11 = v9 + 1;
        v12 = a2;
        while (v12 != (unint64_t *)a3)
        {
          v13 = *v12;
          v14 = *(v11 - 1);
          if (*v12 < v14)
            break;
          ++v12;
          if (v14 < v13 || v11++ == v10)
            goto LABEL_11;
        }
        v6 = *(char **)v8;
        v7 = (uint64_t **)v8;
        if (!*(_QWORD *)v8)
          goto LABEL_26;
      }
LABEL_11:
      if (a2 == (_QWORD *)a3)
        return v8 + 56;
      v16 = (char *)(a2 + 1);
      while (v9 != v10)
      {
        v17 = *v9;
        v18 = *((_QWORD *)v16 - 1);
        if (*v9 < v18)
          break;
        ++v9;
        v19 = v18 < v17 || v16 == (char *)a3;
        v16 += 8;
        if (v19)
          return v8 + 56;
      }
      v6 = (char *)*((_QWORD *)v8 + 1);
    }
    while (v6);
    v7 = (uint64_t **)(v8 + 8);
  }
  else
  {
    v8 = (char *)(a1 + 1);
  }
LABEL_26:
  v20 = v8;
  v8 = (char *)operator new(0x88uLL);
  *((_QWORD *)v8 + 5) = 0;
  *((_QWORD *)v8 + 6) = 0;
  *((_QWORD *)v8 + 4) = 0;
  sub_1C4DFE394((_QWORD *)v8 + 4, a2, a3, (a3 - (uint64_t)a2) >> 3);
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  v8[80] = 1;
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_OWORD *)(v8 + 104) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  *((_QWORD *)v8 + 2) = v20;
  *v7 = (uint64_t *)v8;
  v21 = (uint64_t *)**a1;
  v22 = (uint64_t *)v8;
  if (v21)
  {
    *a1 = v21;
    v22 = *v7;
  }
  sub_1C4768E74(a1[1], v22);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v8 + 56;
}

_QWORD *sub_1C57767F8(uint64_t a1, _QWORD *a2, unint64_t a3, unint64_t a4)
{
  _QWORD *result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;

  v6 = *(_QWORD **)(a1 + 8);
  result = (_QWORD *)(a1 + 8);
  v5 = v6;
  if (v6)
  {
    while (1)
    {
      while (1)
      {
        v7 = v5;
        v8 = v5[4];
        if (v8 <= a3)
          break;
LABEL_3:
        v5 = (_QWORD *)*v7;
        result = v7;
        if (!*v7)
          goto LABEL_12;
      }
      if (v8 == a3)
      {
        v10 = v7[5];
        v9 = v10 >= a4;
        if (v10 > a4)
          goto LABEL_3;
      }
      else
      {
        v9 = v8 >= a3;
      }
      if (!v9)
      {
        result = v7 + 1;
        v5 = (_QWORD *)v7[1];
        if (v5)
          continue;
      }
      goto LABEL_12;
    }
  }
  v7 = result;
LABEL_12:
  *a2 = v7;
  return result;
}

void sub_1C5776858(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = a4;
  v6 = a2;
  if (*(_DWORD *)(*(_QWORD *)a3 + 8) >> 8 <= 0x40u
    && *(_QWORD *)a3 != 0
    && *(_DWORD *)(*(_QWORD *)a3 + 8) == 13)
  {
    v10 = *(unsigned __int8 *)(a3 + 16);
    if (v10 == 84)
      v11 = 0;
    else
      v11 = v10 == 39 ? (*(_DWORD *)(a3 + 80) + 1) : 2;
    v12 = *(_DWORD *)(a3 + 20);
    if (v12 < 0 && (v45 = a3 - 32 * (v12 & 0x7FFFFFF), v46 = *(_QWORD *)(v45 - 8), (v46 & 0xFFFFFFFF0) != 0))
    {
      v14 = -(uint64_t)(v12 & 0x7FFFFFF);
      v13 = (*(_DWORD *)(v45 - 12) - *(_DWORD *)(v45 - v46));
    }
    else
    {
      v13 = 0;
      v14 = -(uint64_t)(v12 & 0x7FFFFFF);
    }
    v15 = a3 - 32 * v11 - 32 * v13 - 32;
    v16 = a3 + 32 * v14;
    if (v15 != v16)
    {
      if (v10 == 84)
      {
        v17 = 0;
      }
      else if (v10 == 39)
      {
        v17 = (*(_DWORD *)(a3 + 80) + 1);
      }
      else
      {
        v17 = 2;
      }
      if (v12 < 0 && (v47 = *(_QWORD *)(v16 - 8), (v47 & 0xFFFFFFFF0) != 0))
        v18 = (*(_DWORD *)(v16 - 12) - *(_DWORD *)(v16 - v47));
      else
        v18 = 0;
      v19 = a3 - 32 * v17 - 32 * v18 - 32;
      v20 = (uint64_t *)(v16 + 32);
      if (v16 + 32 == v19)
      {
        v27 = 0;
        v23 = 0;
LABEL_47:
        a1 = sub_1C5776684((uint64_t **)a1 + 10, v23, v27);
      }
      else
      {
        v21 = 0;
        v22 = 0;
        v23 = 0;
        while (1)
        {
          v24 = *v20;
          v25 = *v20 && *(_BYTE *)(*v20 + 16) == 16;
          if (!v25 || *(_DWORD *)(v24 + 32) > 0x40u)
            break;
          v26 = *(_QWORD *)(v24 + 24);
          if (v21 >= v22)
          {
            v28 = (v21 - v23) >> 3;
            v29 = v28 + 1;
            if ((unint64_t)(v28 + 1) >> 61)
              goto LABEL_68;
            if ((v22 - v23) >> 2 > v29)
              v29 = (v22 - v23) >> 2;
            if ((unint64_t)(v22 - v23) >= 0x7FFFFFFFFFFFFFF8)
              v30 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v30 = v29;
            if (v30)
            {
              if (v30 >> 61)
                goto LABEL_69;
              v31 = (char *)operator new(8 * v30);
            }
            else
            {
              v31 = 0;
            }
            v32 = &v31[8 * v28];
            *(_QWORD *)v32 = v26;
            v27 = (uint64_t)(v32 + 8);
            while (v21 != v23)
            {
              v33 = *((_QWORD *)v21 - 1);
              v21 -= 8;
              *((_QWORD *)v32 - 1) = v33;
              v32 -= 8;
            }
            v22 = &v31[8 * v30];
            if (v23)
              operator delete(v23);
            v23 = v32;
          }
          else
          {
            *(_QWORD *)v21 = v26;
            v27 = (uint64_t)(v21 + 8);
          }
          v20 += 4;
          v21 = (char *)v27;
          if (v20 == (uint64_t *)v19)
            goto LABEL_47;
        }
      }
      v6 = a2;
      v4 = a4;
      if (v23)
        operator delete(v23);
    }
  }
  a1[24] = 0;
  v34 = (_QWORD *)*((_QWORD *)a1 + 1);
  v35 = *((_QWORD *)a1 + 2);
  if ((unint64_t)v34 >= v35)
  {
    v37 = *(_QWORD **)a1;
    v38 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v34 - *(_QWORD *)a1) >> 3);
    v39 = v38 + 1;
    if (v38 + 1 > 0xAAAAAAAAAAAAAAALL)
LABEL_68:
      abort();
    v40 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v35 - (_QWORD)v37) >> 3);
    if (2 * v40 > v39)
      v39 = 2 * v40;
    if (v40 >= 0x555555555555555)
      v41 = 0xAAAAAAAAAAAAAAALL;
    else
      v41 = v39;
    if (v41)
    {
      if (v41 > 0xAAAAAAAAAAAAAAALL)
LABEL_69:
        sub_1C4764EE4();
      v42 = (char *)operator new(24 * v41);
      v34 = (_QWORD *)*((_QWORD *)a1 + 1);
    }
    else
    {
      v42 = 0;
    }
    v43 = &v42[24 * v38];
    *(_QWORD *)v43 = v6;
    *((_QWORD *)v43 + 1) = a3;
    *((_QWORD *)v43 + 2) = v4;
    v36 = v43 + 24;
    if (v34 != v37)
    {
      do
      {
        v44 = *(_OWORD *)(v34 - 3);
        *((_QWORD *)v43 - 1) = *(v34 - 1);
        *(_OWORD *)(v43 - 24) = v44;
        v43 -= 24;
        v34 -= 3;
      }
      while (v34 != v37);
      v37 = *(_QWORD **)a1;
    }
    *(_QWORD *)a1 = v43;
    *((_QWORD *)a1 + 1) = v36;
    *((_QWORD *)a1 + 2) = &v42[24 * v41];
    if (v37)
      operator delete(v37);
  }
  else
  {
    *v34 = v6;
    v34[1] = a3;
    v36 = v34 + 3;
    v34[2] = v4;
  }
  *((_QWORD *)a1 + 1) = v36;
}

void sub_1C5776BC0(uint64_t a1, uint64_t a2, llvm::Value *this, uint64_t a4)
{
  llvm::Value *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  llvm::Value **v12;
  llvm::Value *v13;
  int v14;
  int v15;
  llvm::Value *v16;
  char *v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  BOOL v26;
  _QWORD v27[3];
  llvm::Value *v28;

  v28 = this;
  v7 = llvm::Value::stripPointerCasts(this);
  if ((*((_BYTE *)v7 + 23) & 0x10) == 0)
  {
    v18 = 0;
    v17 = &byte_1C871356D;
    goto LABEL_10;
  }
  v8 = ***(_QWORD ***)v7;
  v9 = *(_QWORD *)(v8 + 152);
  v10 = *(unsigned int *)(v8 + 168);
  if (!(_DWORD)v10)
    goto LABEL_8;
  LODWORD(v11) = (v10 - 1) & ((v7 >> 4) ^ (v7 >> 9));
  v12 = (llvm::Value **)(v9 + 16 * v11);
  v13 = *v12;
  if (*v12 != v7)
  {
    v14 = 1;
    while (v13 != (llvm::Value *)-4096)
    {
      v15 = v11 + v14++;
      v11 = v15 & (v10 - 1);
      v13 = *(llvm::Value **)(v9 + 16 * v11);
      if (v13 == v7)
      {
        v12 = (llvm::Value **)(v9 + 16 * v11);
        goto LABEL_9;
      }
    }
LABEL_8:
    v12 = (llvm::Value **)(v9 + 16 * v10);
  }
LABEL_9:
  v16 = v12[1];
  v19 = *(_QWORD *)v16;
  v17 = (char *)v16 + 16;
  v18 = v19;
LABEL_10:
  v20 = *(_QWORD *)(a1 + 296);
  v21 = *(_QWORD *)(a1 + 304);
  while (v20 != v21)
  {
    if ((llvm::GlobPattern::match(v20, (uint64_t)v17, v18) & 1) != 0)
      return;
    v20 += 96;
  }
  v27[0] = a1;
  v27[1] = &v28;
  v27[2] = a4;
  sub_1C5777DA0((uint64_t)v27, a2);
  v22 = *(_QWORD **)(a2 + 80);
  v23 = (_QWORD *)(a2 + 88);
  if (v22 != v23)
  {
    do
    {
      sub_1C5777DA0((uint64_t)v27, (uint64_t)(v22 + 7));
      v24 = (_QWORD *)v22[1];
      if (v24)
      {
        do
        {
          v25 = v24;
          v24 = (_QWORD *)*v24;
        }
        while (v24);
      }
      else
      {
        do
        {
          v25 = (_QWORD *)v22[2];
          v26 = *v25 == (_QWORD)v22;
          v22 = v25;
        }
        while (!v26);
      }
      v22 = v25;
    }
    while (v25 != v23);
  }
}

void sub_1C5776D30(uint64_t a1, __int128 **a2, void *a3, size_t a4, uint64_t a5)
{
  __int128 *v5;
  __int128 *v6;
  llvm::SmallPtrSetImplBase *v10;
  llvm::ConstantInt ***v11;
  const llvm::APInt *v12;
  char v13;
  int v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  llvm::ConstantInt **v17;
  llvm::ConstantInt *v18;
  unint64_t v19;
  unint64_t v20;
  llvm::Value *v21;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;

  v5 = *a2;
  v6 = a2[1];
  if (*a2 != v6)
  {
    v10 = (llvm::SmallPtrSetImplBase *)(a1 + 176);
    do
    {
      v24 = *v5;
      v25 = *((_QWORD *)v5 + 2);
      v11 = (llvm::ConstantInt ***)*((_QWORD *)&v24 + 1);
      sub_1C4774094(v10, *((uint64_t *)&v24 + 1));
      if (v13)
      {
        v14 = *(unsigned __int8 *)(a1 + 104);
        v15 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112);
        v16 = *(_QWORD *)(a1 + 120);
        v17 = *v11;
        v18 = **v11;
        v19 = *((unsigned int *)v17 + 2);
        v27 = v19 >> 8;
        if (v19 >> 8 > 0x40)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&v26, a5, 0);
        }
        else
        {
          if (v19 <= 0xFF)
            v20 = 0;
          else
            v20 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v19);
          v26 = v20 & a5;
        }
        v21 = llvm::ConstantInt::get(v18, (llvm::LLVMContext *)&v26, v12);
        if (v27 >= 0x41 && v26)
          MEMORY[0x1CAA32F9C](v26, 0x1000C8000313F17);
        sub_1C5778504((uint64_t)&v24, "uniform-ret-val", 0xFuLL, a3, a4, v14 != 0, v15, v16, v21);
      }
      v5 = (__int128 *)((char *)v5 + 24);
    }
    while (v5 != v6);
  }
  *((_BYTE *)a2 + 24) = 1;
  a2[5] = a2[4];
}

llvm::UndefValue *sub_1C5776EA4(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7)
{
  uint64_t v8;
  unsigned __int8 *v9;
  unint64_t v10;
  llvm::UndefValue *inserted;
  int v13;
  unsigned int v14;
  void *__p[2];
  char v17;

  v8 = *(_QWORD *)a1;
  sub_1C5777AD8((uint64_t)__p, a2, a3, a4, a5, a6, a7);
  if (v17 >= 0)
    v9 = (unsigned __int8 *)__p;
  else
    v9 = (unsigned __int8 *)__p[0];
  if (v17 >= 0)
    v10 = v17 & 0x7F;
  else
    v10 = (unint64_t)__p[1];
  inserted = llvm::Module::getOrInsertGlobal(v8, v9, v10, *(llvm::PointerType **)(a1 + 96));
  if (v17 < 0)
    operator delete(__p[0]);
  if (*((_BYTE *)inserted + 16) == 3 && inserted != 0)
  {
    v13 = *((_DWORD *)inserted + 8);
    v14 = v13 & 0xFFFFFFCF | 0x10;
    *((_DWORD *)inserted + 8) = v14;
    if ((v13 & 0xFu) - 7 < 2)
    {
LABEL_16:
      *((_DWORD *)inserted + 8) = v14 | 0x4000;
      return inserted;
    }
    if ((llvm::GlobalValue::hasExternalWeakLinkage(inserted) & 1) == 0)
    {
      v14 = *((_DWORD *)inserted + 8);
      goto LABEL_16;
    }
  }
  return inserted;
}

void sub_1C5776F68(uint64_t a1, uint64_t a2, void *a3, size_t a4, int a5, unsigned __int8 *a6)
{
  uint64_t v6;
  uint64_t v7;
  llvm::SmallPtrSetImplBase *v11;
  __int16 v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  _BYTE v22[32];
  __int16 v23;
  _BYTE v24[32];
  __int16 v25;
  void *v26[2];
  _QWORD v27[17];

  v27[15] = *MEMORY[0x1E0C80C00];
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a2 != v6)
  {
    v11 = (llvm::SmallPtrSetImplBase *)(a1 + 176);
    if (a5)
      v12 = 32;
    else
      v12 = 33;
    do
    {
      sub_1C4774094(v11, *(_QWORD *)(v7 + 8));
      if (v13)
      {
        sub_1C4773D54((uint64_t)v26, *(_QWORD *)(v7 + 8), 0, 0, 0);
        v14 = *(uint64_t **)v7;
        v15 = **(_QWORD **)v7;
        v25 = 257;
        v16 = sub_1C4773E38((uint64_t *)v26, 49, a6, v15, (uint64_t)v24);
        v23 = 257;
        v17 = (unsigned __int8 *)sub_1C4774B48((uint64_t)v26, v12, (uint64_t)v14, (uint64_t)v16, (uint64_t)v22);
        v18 = **(_QWORD **)(v7 + 8);
        v25 = 257;
        v19 = sub_1C4773E38((uint64_t *)v26, 39, v17, v18, (uint64_t)v24);
        sub_1C5778504(v7, "unique-ret-val", 0xEuLL, a3, a4, *(unsigned __int8 *)(a1 + 104), *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112), *(_QWORD *)(a1 + 120), (llvm::Value *)v19);
        if (v26[0] != v27)
          free(v26[0]);
      }
      v7 += 24;
    }
    while (v7 != v6);
  }
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a2 + 32);
}

llvm::ValueHandleBase *sub_1C57770F8(uint64_t *a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7, llvm::Constant *a8, unsigned int a9)
{
  const llvm::APInt *v17;
  llvm::UndefValue *v18;
  llvm::Value *v19;
  const llvm::APInt *v20;
  llvm::ValueHandleBase *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  llvm::Value **v27;
  llvm::Value *v28;
  llvm::Value **v29;
  int v30;
  BOOL v31;
  unsigned int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  llvm::ConstantInt *v40;
  unint64_t v41;
  llvm::Value *v42;
  llvm::ValueHandleBase *v43;
  const llvm::APInt *v44;
  _QWORD *v45;
  uint64_t v46;
  llvm::ConstantInt *v47;
  unsigned int v48;
  unint64_t v49;
  llvm::ConstantInt *v50;
  unsigned int v51;
  int v52;
  llvm::ConstantInt *v53;
  llvm::Value *v54;
  llvm::ValueHandleBase *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  llvm::Value *v60;
  llvm::ValueHandleBase *v61;
  _QWORD *v62;
  uint64_t *v63;
  llvm::MDNode *Impl;
  llvm::Value **v66;
  uint64_t v67;
  llvm::ConstantInt *v68;
  llvm::ConstantInt *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  if (!sub_1C57786C8(*a1))
  {
    v50 = *(llvm::ConstantInt **)a8;
    v51 = *((_DWORD *)a8 + 2);
    LODWORD(v71) = v51 >> 8;
    if (v51 >> 8 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v70, a9, 0);
    }
    else
    {
      if (v51 <= 0xFF)
        v52 = 0;
      else
        v52 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v51);
      v70 = v52 & a9;
    }
    v21 = llvm::ConstantInt::get(v50, (llvm::LLVMContext *)&v70, v17);
    if (v71 >= 0x41 && v70)
      MEMORY[0x1CAA32F9C](v70, 0x1000C8000313F17);
    return v21;
  }
  v18 = sub_1C5776EA4((uint64_t)a1, a2, a3, a4, a5, a6, a7);
  v19 = llvm::Value::stripPointerCasts(v18);
  v21 = sub_1C537D3B8((llvm *)0x2F, (uint64_t)v18, a8, 0);
  if ((*((_BYTE *)v19 + 23) & 0x20) == 0)
    goto LABEL_17;
  v22 = ***(_QWORD ***)v19;
  v70 = (uint64_t)v19;
  v23 = *(_DWORD *)(v22 + 2496);
  if (!v23)
  {
    v66 = 0;
LABEL_52:
    v27 = (llvm::Value **)sub_1C541AB24(v22 + 2480, (uint64_t)&v70, &v70, v66);
    v67 = v70;
    v27[3] = 0;
    v27[4] = 0;
    *v27 = (llvm::Value *)v67;
    v27[1] = (llvm::Value *)(v27 + 3);
    v27[2] = (llvm::Value *)0x100000000;
    goto LABEL_13;
  }
  v24 = *(_QWORD *)(v22 + 2480);
  v25 = v23 - 1;
  v26 = v25 & ((v19 >> 4) ^ (v19 >> 9));
  v27 = (llvm::Value **)(v24 + 40 * v26);
  v28 = *v27;
  if (*v27 != v19)
  {
    v29 = 0;
    v30 = 1;
    while (v28 != (llvm::Value *)-4096)
    {
      if (v29)
        v31 = 0;
      else
        v31 = v28 == (llvm::Value *)-8192;
      if (v31)
        v29 = v27;
      v32 = v26 + v30++;
      v26 = v32 & v25;
      v27 = (llvm::Value **)(v24 + 40 * v26);
      v28 = *v27;
      if (*v27 == v19)
        goto LABEL_13;
    }
    if (v29)
      v66 = v29;
    else
      v66 = v27;
    goto LABEL_52;
  }
LABEL_13:
  v33 = *((unsigned int *)v27 + 4);
  if (!(_DWORD)v33)
    goto LABEL_17;
  v34 = (_QWORD *)((char *)v27[1] + 8);
  v35 = 16 * v33;
  while (*((_DWORD *)v34 - 2) != 21)
  {
    v34 += 2;
    v35 -= 16;
    if (!v35)
      goto LABEL_17;
  }
  if (!*v34)
  {
LABEL_17:
    v36 = (unint64_t)*((unsigned int *)a8 + 2) >> 8;
    v37 = a1[11];
    v38 = *(_DWORD *)(v37 + 8);
    v39 = v38 >> 8;
    if ((_DWORD)v36 == v38 >> 8)
    {
      v40 = *(llvm::ConstantInt **)v37;
      LODWORD(v71) = v36;
      if (v39 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v70, -1, 0);
      }
      else
      {
        if (v38 <= 0xFF)
          v41 = 0;
        else
          v41 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v36;
        v70 = v41;
      }
      v43 = llvm::ConstantInt::get(v40, (llvm::LLVMContext *)&v70, v20);
      if (v71 >= 0x41 && v70)
        MEMORY[0x1CAA32F9C](v70, 0x1000C8000313F17);
      v45 = llvm::ValueAsMetadata::get(v43, v42);
      v46 = a1[11];
      v47 = *(llvm::ConstantInt **)v46;
      v48 = *(_DWORD *)(v46 + 8);
      LODWORD(v71) = v48 >> 8;
      if (v48 >> 8 <= 0x40)
      {
        if (v48 <= 0xFF)
          v49 = 0;
        else
          v49 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v48);
LABEL_43:
        v70 = v49;
        goto LABEL_44;
      }
      v68 = v47;
      llvm::APInt::initSlowCase((llvm::APInt *)&v70, -1, 0);
      v47 = v68;
    }
    else
    {
      v53 = *(llvm::ConstantInt **)v37;
      LODWORD(v71) = v38 >> 8;
      if (v39 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v70, 0, 0);
      else
        v70 = 0;
      v55 = llvm::ConstantInt::get(v53, (llvm::LLVMContext *)&v70, v20);
      if (v71 >= 0x41 && v70)
        MEMORY[0x1CAA32F9C](v70, 0x1000C8000313F17);
      v56 = 1 << v36;
      v45 = llvm::ValueAsMetadata::get(v55, v54);
      v57 = a1[11];
      v47 = *(llvm::ConstantInt **)v57;
      v58 = *(unsigned int *)(v57 + 8);
      LODWORD(v71) = v58 >> 8;
      if (v58 >> 8 <= 0x40)
      {
        if (v58 <= 0xFF)
          v59 = 0;
        else
          v59 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v58);
        v49 = v59 & v56;
        goto LABEL_43;
      }
      v69 = v47;
      llvm::APInt::initSlowCase((llvm::APInt *)&v70, v56, 0);
      v47 = v69;
    }
LABEL_44:
    v61 = llvm::ConstantInt::get(v47, (llvm::LLVMContext *)&v70, v44);
    if (v71 >= 0x41 && v70)
      MEMORY[0x1CAA32F9C](v70, 0x1000C8000313F17);
    v62 = llvm::ValueAsMetadata::get(v61, v60);
    v63 = *(uint64_t **)*a1;
    v70 = (uint64_t)v45;
    v71 = v62;
    Impl = (llvm::MDNode *)llvm::MDTuple::getImpl(v63, &v70, 2, 0, 1);
    llvm::Value::setMetadata(v19, 21, Impl);
  }
  return v21;
}

void sub_1C5777598(uint64_t a1, __int128 **a2, void *a3, size_t a4, uint64_t a5, uint64_t a6)
{
  __int128 *v6;
  __int128 *v7;
  llvm::SmallPtrSetImplBase *v9;
  llvm::PointerType **v10;
  char v11;
  llvm::PointerType *v12;
  uint64_t v13;
  llvm::GetElementPtrInst *v14;
  uint64_t *v15;
  uint64_t ***v16;
  uint64_t v17;
  char v18;
  char v19;
  char *v20;
  char *v21;
  llvm::Value *v22;
  uint64_t **v23;
  _QWORD *v24;
  uint64_t **v25;
  const llvm::APInt *v26;
  uint64_t v27;
  uint64_t v28;
  llvm::ConstantInt *v29;
  llvm::ValueHandleBase *v30;
  llvm::Value *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  char v34;
  char v35;
  char *v36;
  char *v37;
  llvm::Value *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unsigned __int8 **v44;
  int v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  char *v49;
  char *v50;
  unsigned __int8 **v51;
  int v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  _BYTE v61[32];
  __int16 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  __int16 v67;
  unsigned __int8 *v68;
  void *v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v6 = *a2;
  v7 = a2[1];
  if (*a2 != v7)
  {
    v9 = (llvm::SmallPtrSetImplBase *)(a1 + 176);
    while (1)
    {
      v63 = *v6;
      v64 = *((_QWORD *)v6 + 2);
      v10 = (llvm::PointerType **)*((_QWORD *)&v63 + 1);
      sub_1C4774094(v9, *((uint64_t *)&v63 + 1));
      if (v11)
        break;
LABEL_22:
      v6 = (__int128 *)((char *)v6 + 24);
      if (v6 == v7)
        goto LABEL_57;
    }
    v12 = *v10;
    sub_1C4773D54((uint64_t)&v69, (uint64_t)v10, 0, 0, 0);
    v14 = *(llvm::GetElementPtrInst **)(a1 + 56);
    v13 = *(_QWORD *)(a1 + 64);
    v67 = 257;
    v15 = (uint64_t *)sub_1C4773E38((uint64_t *)&v69, 49, (unsigned __int8 *)v63, v13, (uint64_t)&v65);
    v62 = 257;
    v16 = sub_1C4867B70((uint64_t *)&v69, v14, v15, a5, (uint64_t)v61);
    if ((*((_DWORD *)v12 + 2) & 0xFFFFFF00) == 0x100)
    {
      v17 = *(_QWORD *)(a1 + 56);
      v62 = 257;
      llvm::DataLayout::getAlignment(*(_QWORD *)(*(_QWORD *)(v72 + 56) + 40) + 272, v17);
      v19 = v18;
      v20 = (char *)operator new(0x60uLL);
      v21 = v20;
      v22 = (llvm::Value *)(v20 + 32);
      *((_QWORD *)v20 + 2) = 0;
      *((_QWORD *)v20 + 3) = v20 + 32;
      v67 = 257;
      *((_QWORD *)v20 + 4) = v17;
      *((_QWORD *)v20 + 5) = 0;
      *((_WORD *)v20 + 24) = 60;
      *((_DWORD *)v20 + 13) = 1;
      *(_OWORD *)(v20 + 56) = 0u;
      *(_OWORD *)(v20 + 72) = 0u;
      *((_DWORD *)v20 + 22) = 0;
      *(_QWORD *)v20 = v16;
      *((_QWORD *)v20 + 1) = 0;
      if (v16)
      {
        v25 = v16[1];
        v24 = v16 + 1;
        v23 = v25;
        *((_QWORD *)v20 + 1) = v25;
        if (v25)
          v23[2] = (uint64_t *)(v20 + 8);
        *((_QWORD *)v20 + 2) = v24;
        *v24 = v20;
      }
      *((_WORD *)v20 + 25) = 2 * (v19 & 0x3F);
      v20[92] = 1;
      llvm::Value::setName((uint64_t ***)v20 + 4, (uint64_t)&v65);
      (*(void (**)(uint64_t, llvm::Value *, _BYTE *, uint64_t, uint64_t))(*(_QWORD *)v74 + 16))(v74, v22, v61, v72, v73);
      if (!v70)
      {
LABEL_10:
        v67 = 257;
        v27 = sub_1C4D89BCC((uint64_t)&v69, v22, a6, (uint64_t)&v65);
        v28 = *(_QWORD *)(a1 + 56);
        v29 = *(llvm::ConstantInt **)v28;
        v66 = *(_DWORD *)(v28 + 8) >> 8;
        if (v66 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v65, 0, 0);
        else
          v65 = 0;
        v30 = llvm::ConstantInt::get(v29, (llvm::LLVMContext *)&v65, v26);
        if (v66 >= 0x41 && v65)
          MEMORY[0x1CAA32F9C](v65, 0x1000C8000313F17);
        v67 = 257;
        v31 = (llvm::Value *)sub_1C4774B48((uint64_t)&v69, 33, v27, (uint64_t)v30, (uint64_t)&v65);
        sub_1C5778504((uint64_t)&v63, "virtual-const-prop-1-bit", 0x18uLL, a3, a4, *(unsigned __int8 *)(a1 + 104), *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112), *(_QWORD *)(a1 + 120), v31);
        goto LABEL_20;
      }
      v42 = (char *)v69;
      v43 = (char *)v69 + 16 * v70;
      v44 = (unsigned __int8 **)(v21 + 80);
      while (1)
      {
        v45 = *(_DWORD *)v42;
        v46 = (unsigned __int8 *)*((_QWORD *)v42 + 1);
        if (v46)
        {
          if (!v45)
          {
            v68 = (unsigned __int8 *)*((_QWORD *)v42 + 1);
            llvm::MetadataTracking::track((uint64_t)&v68, v46, 2);
            v47 = *v44;
            goto LABEL_35;
          }
        }
        else
        {
          v47 = *v44;
          if (!*v44 && (v21[55] & 0x20) == 0)
            goto LABEL_32;
          if (!v45)
          {
            v68 = 0;
LABEL_35:
            if (v47)
              llvm::MetadataTracking::untrack((uint64_t)(v21 + 80), v47);
            v48 = v68;
            *v44 = v68;
            if (v48)
              llvm::MetadataTracking::retrack((uint64_t)&v68, v48, (uint64_t)(v21 + 80));
            goto LABEL_32;
          }
        }
        llvm::Value::setMetadata(v22, *(_DWORD *)v42, (llvm::MDNode *)v46);
LABEL_32:
        v42 += 16;
        if (v42 == v43)
          goto LABEL_10;
      }
    }
    v32 = llvm::PointerType::get(v12, 0);
    v67 = 257;
    v33 = sub_1C4773E38((uint64_t *)&v69, 49, (unsigned __int8 *)v16, v32, (uint64_t)&v65);
    v62 = 257;
    llvm::DataLayout::getAlignment(*(_QWORD *)(*(_QWORD *)(v72 + 56) + 40) + 272, (uint64_t)v12);
    v35 = v34;
    v36 = (char *)operator new(0x60uLL);
    v37 = v36;
    v38 = (llvm::Value *)(v36 + 32);
    *((_QWORD *)v36 + 2) = 0;
    *((_QWORD *)v36 + 3) = v36 + 32;
    v67 = 257;
    *((_QWORD *)v36 + 4) = v12;
    *((_QWORD *)v36 + 5) = 0;
    *((_WORD *)v36 + 24) = 60;
    *((_DWORD *)v36 + 13) = 1;
    *(_OWORD *)(v36 + 56) = 0u;
    *(_OWORD *)(v36 + 72) = 0u;
    *((_DWORD *)v36 + 22) = 0;
    *(_QWORD *)v36 = v33;
    *((_QWORD *)v36 + 1) = 0;
    if (v33)
    {
      v41 = *((_QWORD *)v33 + 1);
      v40 = v33 + 8;
      v39 = v41;
      *((_QWORD *)v36 + 1) = v41;
      if (v41)
        *(_QWORD *)(v39 + 16) = v36 + 8;
      *((_QWORD *)v36 + 2) = v40;
      *v40 = v36;
    }
    *((_WORD *)v36 + 25) = 2 * (v35 & 0x3F);
    v36[92] = 1;
    llvm::Value::setName((uint64_t ***)v36 + 4, (uint64_t)&v65);
    (*(void (**)(uint64_t, llvm::Value *, _BYTE *, uint64_t, uint64_t))(*(_QWORD *)v74 + 16))(v74, v38, v61, v72, v73);
    if (!v70)
    {
LABEL_19:
      sub_1C5778504((uint64_t)&v63, "virtual-const-prop", 0x12uLL, a3, a4, *(unsigned __int8 *)(a1 + 104), *(uint64_t (**)(uint64_t, uint64_t))(a1 + 112), *(_QWORD *)(a1 + 120), v38);
LABEL_20:
      if (v69 != &v71)
        free(v69);
      goto LABEL_22;
    }
    v49 = (char *)v69;
    v50 = (char *)v69 + 16 * v70;
    v51 = (unsigned __int8 **)(v37 + 80);
    while (1)
    {
      v52 = *(_DWORD *)v49;
      v53 = (unsigned __int8 *)*((_QWORD *)v49 + 1);
      if (v53)
      {
        if (!v52)
        {
          v68 = (unsigned __int8 *)*((_QWORD *)v49 + 1);
          llvm::MetadataTracking::track((uint64_t)&v68, v53, 2);
          v54 = *v51;
          goto LABEL_50;
        }
      }
      else
      {
        v54 = *v51;
        if (!*v51 && (v37[55] & 0x20) == 0)
          goto LABEL_47;
        if (!v52)
        {
          v68 = 0;
LABEL_50:
          if (v54)
            llvm::MetadataTracking::untrack((uint64_t)(v37 + 80), v54);
          v55 = v68;
          *v51 = v68;
          if (v55)
            llvm::MetadataTracking::retrack((uint64_t)&v68, v55, (uint64_t)(v37 + 80));
          goto LABEL_47;
        }
      }
      llvm::Value::setMetadata(v38, *(_DWORD *)v49, (llvm::MDNode *)v53);
LABEL_47:
      v49 += 16;
      if (v49 == v50)
        goto LABEL_19;
    }
  }
LABEL_57:
  *((_BYTE *)a2 + 24) = 1;
  a2[5] = a2[4];
}

void sub_1C5777AD8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7)
{
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  __int128 v19;
  void (**v20)(llvm::raw_ostream *__hidden);
  int v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  int v27;
  void **v28;
  void *__p[2];
  char v30;

  v30 = 9;
  strcpy((char *)__p, "__typeid_");
  v21 = 0;
  v25 = 0;
  v26 = 0;
  v20 = (void (**)(llvm::raw_ostream *__hidden))&unk_1E81A7208;
  v28 = __p;
  v27 = 0;
  v23 = 0;
  v24 = 0;
  v22 = 0;
  v13 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)v13
    && (llvm::raw_ostream::write((llvm::raw_ostream *)&v20, (const char *)(v13 + 24), *(_QWORD *)v13),
        v14 = v24,
        (unint64_t)v24 < v23))
  {
    ++v24;
    *v14 = 95;
  }
  else
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v20, 95);
  }
  sub_1C5E21910((llvm::raw_ostream *)&v20, a3, 0, 0, 0);
  if (a5)
  {
    v15 = 8 * a5;
    do
    {
      v16 = *a4;
      v17 = v24;
      if ((unint64_t)v24 >= v23)
      {
        llvm::raw_ostream::write((llvm::raw_ostream *)&v20, 95);
      }
      else
      {
        ++v24;
        *v17 = 95;
      }
      sub_1C5E21910((llvm::raw_ostream *)&v20, v16, 0, 0, 0);
      ++a4;
      v15 -= 8;
    }
    while (v15);
  }
  v18 = v24;
  if ((unint64_t)v24 >= v23)
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v20, 95);
  }
  else
  {
    ++v24;
    *v18 = 95;
  }
  if (a7 <= v23 - (unint64_t)v24)
  {
    if (a7)
    {
      memcpy(v24, a6, a7);
      v24 += a7;
    }
  }
  else
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v20, (const char *)a6, a7);
  }
  if (*((char *)v28 + 23) < 0)
  {
    sub_1C47EBC30((_BYTE *)a1, *v28, (unint64_t)v28[1]);
  }
  else
  {
    v19 = *(_OWORD *)v28;
    *(_QWORD *)(a1 + 16) = v28[2];
    *(_OWORD *)a1 = v19;
  }
  v20 = off_1E81A6E70;
  if (v27 == 1 && v22)
    MEMORY[0x1CAA32F9C](v22, 0x1000C8077774924);
  if (v30 < 0)
    operator delete(__p[0]);
}

void sub_1C5777D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  _QWORD v10[3];
  uint64_t v11;

  v10[0] = a4;
  v10[1] = a1;
  v10[2] = &v11;
  v11 = a3;
  sub_1C577872C((uint64_t)v10, a2);
  v5 = *(_QWORD **)(a2 + 80);
  v6 = (_QWORD *)(a2 + 88);
  if (v5 != v6)
  {
    do
    {
      sub_1C577872C((uint64_t)v10, (uint64_t)(v5 + 7));
      v7 = (_QWORD *)v5[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v5[2];
          v9 = *v8 == (_QWORD)v5;
          v5 = v8;
        }
        while (!v9);
      }
      v5 = v8;
    }
    while (v8 != v6);
  }
}

void sub_1C5777DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ***v5;
  llvm::SmallPtrSetImplBase *v6;
  char v7;
  llvm::Value *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  llvm::Value **v13;
  llvm::Value *v14;
  int v15;
  int v16;
  llvm::Value *v17;
  char *v18;
  size_t v19;
  size_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 **v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  uint64_t v27;
  llvm::Value *v28;
  char *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  uint64_t Declaration;
  uint64_t **v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned __int8 **v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 ***v40;
  uint64_t v41;
  _DWORD *v42;
  llvm::Value *v43;
  llvm::MDNode *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 **v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 ***v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t *v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57[4];
  __int16 v58;
  void *v59[2];
  _QWORD v60[17];

  v60[15] = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a2 != v4)
  {
    v5 = *(uint64_t ****)a1;
    v6 = (llvm::SmallPtrSetImplBase *)(*(_QWORD *)a1 + 176);
    while (1)
    {
      sub_1C4774094(v6, *(_QWORD *)(v3 + 8));
      if (v7)
        break;
LABEL_48:
      v3 += 24;
      if (v3 == v4)
        goto LABEL_65;
    }
    if (!*((_BYTE *)v5 + 104))
    {
LABEL_15:
      v21 = *(_QWORD *)(v3 + 8);
      sub_1C4773D54((uint64_t)v59, v21, 0, 0, 0);
      v22 = **(unsigned __int8 ***)(a1 + 8);
      v23 = (unsigned __int8 **)(v21 - 32);
      v24 = **(_QWORD **)(v21 - 32);
      v58 = 257;
      v25 = sub_1C4773E38((uint64_t *)v59, 49, v22, v24, (uint64_t)v57);
      v26 = dword_1ED810898;
      if (dword_1ED810898 == 1)
      {
        v27 = *(_QWORD *)(v21 - 32);
        v58 = 257;
        v28 = (llvm::Value *)sub_1C4774B48((uint64_t)v59, 33, v27, (uint64_t)v25, (uint64_t)v57);
        v29 = sub_1C5EBFBC0(v28, (uint64_t *)v21, 0, 0, 0, 0, 0, 0);
        v30 = 0;
        v60[4] = *((_QWORD *)v29 + 5);
        v60[5] = v29 + 24;
        v31 = (unsigned __int8 *)*((_QWORD *)v29 + 6);
        v57[0] = v31;
        if (v31)
        {
          llvm::MetadataTracking::track((uint64_t)v57, v31, 2);
          v30 = v57[0];
        }
        sub_1C4774EF4((uint64_t)v59, 0, (uint64_t)v30);
        if (v57[0])
          llvm::MetadataTracking::untrack((uint64_t)v57, v57[0]);
        Declaration = llvm::Intrinsic::getDeclaration((uint64_t *)*v5, 59, 0, 0);
        if (Declaration)
          v33 = *(uint64_t ***)(Declaration + 24);
        else
          v33 = 0;
        v58 = 257;
        v34 = sub_1C4774778((uint64_t *)v59, v33, Declaration, 0, 0, (uint64_t)v57, 0);
        v35 = *(unsigned __int8 **)(v21 + 48);
        v56 = v35;
        if (v35)
          llvm::MetadataTracking::track((uint64_t)&v56, v35, 2);
        v36 = (unsigned __int8 **)(v34 + 48);
        if (&v56 == v36)
        {
          if (v56)
            llvm::MetadataTracking::untrack((uint64_t)&v56, v56);
        }
        else
        {
          if (*v36)
            llvm::MetadataTracking::untrack((uint64_t)v36, *v36);
          v37 = v56;
          *v36 = v56;
          if (v37)
          {
            llvm::MetadataTracking::retrack((uint64_t)&v56, v37, (uint64_t)v36);
            v56 = 0;
          }
        }
        v26 = dword_1ED810898;
      }
      if (v26 == 2)
      {
        v55 = **v5;
        v57[0] = (unsigned __int8 *)0x1000FFFFFLL;
        v43 = (llvm::Value *)llvm::MDBuilder::createBranchWeights(&v55, (uint64_t)v57, 2);
        v45 = llvm::versionCallSite((llvm *)v21, (llvm::CallBase *)v25, v43, v44);
        v46 = v45;
        v47 = (unsigned __int8 **)(v45 - 32);
        if (*(_QWORD *)(v45 - 32))
        {
          **(_QWORD **)(v45 - 16) = *(_QWORD *)(v45 - 24);
          v48 = *(_QWORD *)(v45 - 24);
          if (v48)
            *(_QWORD *)(v48 + 16) = *(_QWORD *)(v45 - 16);
        }
        *v47 = v25;
        if (v25)
        {
          v51 = *((_QWORD *)v25 + 1);
          v50 = (unsigned __int8 ***)(v25 + 8);
          v49 = v51;
          *(_QWORD *)(v45 - 24) = v51;
          if (v51)
            *(_QWORD *)(v49 + 16) = v45 - 24;
          *(_QWORD *)(v45 - 16) = v50;
          *v50 = v47;
        }
        if ((*(_QWORD *)(v45 + 48) || (*(_BYTE *)(v45 + 23) & 0x20) != 0)
          && (llvm::Value::setMetadata((llvm::Value *)v45, 2, 0), *(_QWORD *)(v46 + 48))
          || (*(_BYTE *)(v46 + 23) & 0x20) != 0)
        {
          llvm::Value::setMetadata((llvm::Value *)v46, 23, 0);
        }
      }
      else
      {
        if (*v23)
        {
          **(_QWORD **)(v21 - 16) = *(_QWORD *)(v21 - 24);
          v38 = *(_QWORD *)(v21 - 24);
          if (v38)
            *(_QWORD *)(v38 + 16) = *(_QWORD *)(v21 - 16);
        }
        *v23 = v25;
        if (v25)
        {
          v41 = *((_QWORD *)v25 + 1);
          v40 = (unsigned __int8 ***)(v25 + 8);
          v39 = v41;
          *(_QWORD *)(v21 - 24) = v41;
          if (v41)
            *(_QWORD *)(v39 + 16) = v21 - 24;
          *(_QWORD *)(v21 - 16) = v40;
          *v40 = v23;
        }
      }
      if ((*(_QWORD *)(v21 + 48) || (*(_BYTE *)(v21 + 23) & 0x20) != 0)
        && (llvm::Value::setMetadata((llvm::Value *)v21, 2, 0), *(_QWORD *)(v21 + 48))
        || (*(_BYTE *)(v21 + 23) & 0x20) != 0)
      {
        llvm::Value::setMetadata((llvm::Value *)v21, 23, 0);
      }
      v42 = *(_DWORD **)(v3 + 16);
      if (v42)
        --*v42;
      if (v59[0] != v60)
        free(v59[0]);
      goto LABEL_48;
    }
    v8 = llvm::Value::stripPointerCasts(**(llvm::Value ***)(a1 + 8));
    if ((*((_BYTE *)v8 + 23) & 0x10) == 0)
    {
      v19 = 0;
      v18 = &byte_1C871356D;
      goto LABEL_14;
    }
    v9 = ***(_QWORD ***)v8;
    v10 = *(_QWORD *)(v9 + 152);
    v11 = *(unsigned int *)(v9 + 168);
    if ((_DWORD)v11)
    {
      LODWORD(v12) = (v11 - 1) & ((v8 >> 4) ^ (v8 >> 9));
      v13 = (llvm::Value **)(v10 + 16 * v12);
      v14 = *v13;
      if (*v13 == v8)
      {
LABEL_13:
        v17 = v13[1];
        v20 = *(_QWORD *)v17;
        v18 = (char *)v17 + 16;
        v19 = v20;
LABEL_14:
        sub_1C577826C(v3, "single-impl", 0xBuLL, v18, v19, (uint64_t (*)(uint64_t, uint64_t))v5[14], (uint64_t)v5[15]);
        goto LABEL_15;
      }
      v15 = 1;
      while (v14 != (llvm::Value *)-4096)
      {
        v16 = v12 + v15++;
        v12 = v16 & (v11 - 1);
        v14 = *(llvm::Value **)(v10 + 16 * v12);
        if (v14 == v8)
        {
          v13 = (llvm::Value **)(v10 + 16 * v12);
          goto LABEL_13;
        }
      }
    }
    v13 = (llvm::Value **)(v10 + 16 * v11);
    goto LABEL_13;
  }
LABEL_65:
  v52 = *(_QWORD *)(a2 + 32);
  if (*(_BYTE *)(a2 + 25))
    v53 = 0;
  else
    v53 = v52 == *(_QWORD *)(a2 + 40);
  if (!v53)
    **(_BYTE **)(a1 + 16) = 1;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 40) = v52;
}

void sub_1C577826C(uint64_t a1, void *a2, size_t a3, void *a4, size_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v17;
  llvm::OptimizationRemarkEmitter *v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  llvm::DiagnosticInfoOptimizationBase *v24;
  char *v25;
  unint64_t v26;
  void **v27;
  void *v28[2];
  char v29;
  void *__p;
  char v31;
  void *__dst[2];
  char v33;
  void *v34;
  char v35;
  unsigned __int8 *v36;
  const void *v37[2];
  uint64_t (**v38)(llvm::DiagnosticInfoWithLocationBase *__hidden);
  int v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  const char *v45;
  void *v46;
  size_t v47;
  char v48;
  char v49;
  void *v50;
  uint64_t v51;
  _BYTE v52[260];
  int v53;
  uint64_t v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(unsigned __int8 **)(v13 + 48);
  v15 = *(_QWORD *)(*(_QWORD *)(v13 + 40) + 56);
  v36 = v14;
  if (v14)
  {
    llvm::MetadataTracking::track((uint64_t)&v36, v14, 2);
    v13 = *(_QWORD *)(a1 + 8);
  }
  v17 = *(_QWORD *)(v13 + 40);
  v18 = (llvm::OptimizationRemarkEmitter *)a6(a7, v15);
  v19 = (int)v36;
  if (v36)
  {
    v20 = *(_QWORD *)&v36[-8 * *((unsigned int *)v36 + 2)];
    if (*(_BYTE *)v20 != 15)
      v20 = *(_QWORD *)(v20 - 8 * *(unsigned int *)(v20 + 8));
    v21 = *((_DWORD *)v36 + 1);
    v19 = *((unsigned __int16 *)v36 + 1);
  }
  else
  {
    v20 = 0;
    v21 = 0;
  }
  v22 = *(_QWORD *)(v17 + 56);
  v39 = 9;
  v40 = 2;
  v41 = v22;
  v42 = v20;
  v43 = v21;
  v44 = v19;
  v45 = "wholeprogramdevirt";
  v46 = a2;
  v47 = a3;
  v48 = 0;
  v49 = 0;
  v50 = v52;
  v51 = 0x400000000;
  v52[256] = 0;
  v53 = -1;
  v54 = v17;
  v38 = &off_1E814E500;
  llvm::DiagnosticInfoOptimizationBase::Argument::Argument(__dst, "Optimization", 0xCuLL, a2, a3);
  v23 = sub_1C47E3888((uint64_t)&v38, (uint64_t)__dst);
  v37[0] = ": devirtualized a call to ";
  v37[1] = (const void *)26;
  sub_1C53B17B4(v23 + 80, v37);
  llvm::DiagnosticInfoOptimizationBase::Argument::Argument(v28, "FunctionName", 0xCuLL, a4, a5);
  v24 = (llvm::DiagnosticInfoOptimizationBase *)sub_1C47E3888(v23, (uint64_t)v28);
  llvm::OptimizationRemarkEmitter::emit(v18, v24);
  if (v31 < 0)
    operator delete(__p);
  if (v29 < 0)
    operator delete(v28[0]);
  if (v35 < 0)
    operator delete(v34);
  if (v33 < 0)
    operator delete(__dst[0]);
  v38 = &off_1E814E790;
  v25 = (char *)v50;
  if ((_DWORD)v51)
  {
    v26 = (unint64_t)v51 << 6;
    do
    {
      v27 = (void **)&v25[v26];
      if (v25[v26 - 17] < 0)
        operator delete(*(v27 - 5));
      if (*((char *)v27 - 41) < 0)
        operator delete(*(v27 - 8));
      v26 -= 64;
    }
    while (v26);
    v25 = (char *)v50;
  }
  if (v25 != v52)
    free(v25);
  if (v36)
    llvm::MetadataTracking::untrack((uint64_t)&v36, v36);
}

void sub_1C5778504(uint64_t a1, void *a2, size_t a3, void *a4, size_t a5, int a6, uint64_t (*a7)(uint64_t, uint64_t), uint64_t a8, llvm::Value *a9)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  llvm::ValueSymbolTable *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a6)
    sub_1C577826C(a1, a2, a3, a4, a5, a7, a8);
  llvm::Value::doRAUW(*(llvm::ValueAsMetadata **)(a1 + 8), a9, (llvm::Value *)1);
  v10 = *(_QWORD *)(a1 + 8);
  if (v10 && *(_BYTE *)(v10 + 16) == 33)
  {
    v11 = *(_QWORD *)(v10 - 96);
    v12 = (char *)operator new(0x60uLL);
    *((_DWORD *)v12 + 13) = *((_DWORD *)v12 + 13) & 0x38000000 | 1;
    *((_QWORD *)v12 + 1) = 0;
    *((_QWORD *)v12 + 2) = 0;
    *(_QWORD *)v12 = 0;
    *((_QWORD *)v12 + 4) = ***(_QWORD ***)v11 + 1576;
    *((_QWORD *)v12 + 3) = v12 + 32;
    *((_QWORD *)v12 + 5) = 0;
    v12[48] = 30;
    v12[49] = 0;
    *((_WORD *)v12 + 25) = 0;
    *((_DWORD *)v12 + 13) = 1;
    *(_OWORD *)(v12 + 56) = 0u;
    v13 = v12 + 56;
    *(_OWORD *)(v12 + 72) = 0u;
    *((_DWORD *)v12 + 22) = 0;
    v14 = *(_QWORD *)(v10 + 40);
    v15 = (uint64_t *)(v10 + 24);
    *((_QWORD *)v12 + 9) = v14;
    *(_WORD *)(v14 + 18) &= ~0x8000u;
    if ((v12[55] & 0x10) != 0
      && (v23 = *(_QWORD *)(v14 + 56)) != 0
      && (v24 = *(llvm::ValueSymbolTable **)(v23 + 104)) != 0)
    {
      llvm::ValueSymbolTable::reinsertValue(v24, (llvm::Value *)(v12 + 32));
      v25 = *(_QWORD *)v12;
      v26 = *v15;
      *((_QWORD *)v12 + 7) = *v15;
      *((_QWORD *)v12 + 8) = v15;
      *(_QWORD *)(v26 + 8) = v13;
      *v15 = (uint64_t)v13;
      if (v25)
      {
        **((_QWORD **)v12 + 2) = *((_QWORD *)v12 + 1);
        v27 = *((_QWORD *)v12 + 1);
        if (v27)
          *(_QWORD *)(v27 + 16) = *((_QWORD *)v12 + 2);
      }
    }
    else
    {
      v16 = *v15;
      *((_QWORD *)v12 + 7) = *v15;
      *((_QWORD *)v12 + 8) = v15;
      *(_QWORD *)(v16 + 8) = v13;
      *v15 = (uint64_t)v13;
    }
    *(_QWORD *)v12 = v11;
    v19 = *(_QWORD *)(v11 + 8);
    v18 = (_QWORD *)(v11 + 8);
    v17 = v19;
    *((_QWORD *)v12 + 1) = v19;
    if (v19)
      *(_QWORD *)(v17 + 16) = v12 + 8;
    *((_QWORD *)v12 + 2) = v18;
    *v18 = v12;
    llvm::BasicBlock::removePredecessor(*(llvm::BasicBlock **)(v10 - 64), *(llvm::BasicBlock **)(v10 + 40), 0);
    v10 = *(_QWORD *)(a1 + 8);
  }
  llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v10 + 40) + 40, (uint64_t ***)v10);
  v20 = *(_QWORD *)(v10 + 24);
  v21 = *(_QWORD **)(v10 + 32);
  *v21 = v20;
  *(_QWORD *)(v20 + 8) = v21;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = 0;
  llvm::Value::deleteValue((llvm::Value *)v10);
  v22 = *(_DWORD **)(a1 + 16);
  if (v22)
    --*v22;
}

BOOL sub_1C57786C8(uint64_t a1)
{
  int v1;
  int v2;
  _QWORD v5[4];
  __int16 v6;
  void *__p;
  char v8;
  int v9;
  int v10;

  v6 = 260;
  v5[0] = a1 + 216;
  llvm::Triple::Triple((uint64_t)&__p, (llvm::Twine *)v5);
  v1 = v9;
  v2 = v10;
  if (v8 < 0)
    operator delete(__p);
  return (v1 - 41) < 2 && v2 == 3;
}

void sub_1C577872C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ***v3;
  BOOL v4;
  unsigned __int8 **v5;
  unsigned __int8 **v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 v14;
  unint64_t v15;
  unsigned int v16;
  int i;
  unsigned int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  llvm::Value *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  llvm::Value **v30;
  llvm::Value *v31;
  int v32;
  int v33;
  llvm::Value *v34;
  char *v35;
  size_t v36;
  size_t v37;
  uint64_t **v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  llvm::PointerType *v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  unsigned __int8 **v56;
  unsigned __int8 *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  unsigned __int8 *v64;
  unsigned __int8 *v65;
  uint64_t v66;
  llvm::Value *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t ***v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  unint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  unsigned __int8 *v92;
  unsigned __int8 *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  int v97;
  unint64_t v98;
  uint64_t v99;
  llvm::Value *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t ***v103;
  llvm::PointerType *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[32];
  __int16 v109;
  void *__p;
  char *v111;
  char *v112;
  void *v113;
  _BYTE *v114;
  _QWORD *v115;
  _QWORD __src[4];
  __int16 v117;
  void *v118[2];
  _QWORD v119[17];

  v2 = a1;
  v119[15] = *MEMORY[0x1E0C80C00];
  v3 = *(uint64_t ****)(a1 + 8);
  if (*(_BYTE *)(a2 + 25))
    v4 = 0;
  else
    v4 = *(_QWORD *)(a2 + 32) == *(_QWORD *)(a2 + 40);
  if (!v4)
    **(_BYTE **)a1 = 1;
  if (*(_BYTE *)(a2 + 24))
    return;
  v5 = *(unsigned __int8 ***)a2;
  v6 = *(unsigned __int8 ***)(a2 + 8);
  if (*(unsigned __int8 ***)a2 == v6)
    return;
  v7 = v119;
  v8 = &unk_1ED7EA000;
  do
  {
    v9 = (uint64_t)v5[1];
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 40) + 56) + 112);
    if (!v10)
      goto LABEL_104;
    if (!*(_DWORD *)(v10 + 8))
      goto LABEL_104;
    v11 = *(_QWORD *)(v10 + 40);
    if (!v11)
      goto LABEL_104;
    v12 = *(_DWORD *)(v11 + 40);
    if (!v12)
      goto LABEL_104;
    v13 = *(_QWORD *)(v11 + 24);
    v14 = atomic_load((unsigned __int8 *)&qword_1ED7EAC88);
    if ((v14 & 1) == 0)
    {
      v96 = v8;
      v97 = __cxa_guard_acquire(&qword_1ED7EAC88);
      v8 = v96;
      if (v97)
      {
        v98 = llvm::hashing::detail::fixed_seed_override;
        if (!llvm::hashing::detail::fixed_seed_override)
          v98 = 0xFF51AFD7ED558CCDLL;
        v96[400] = v98;
        __cxa_guard_release(&qword_1ED7EAC88);
        v8 = v96;
      }
    }
    v15 = 0x9DDFEA08EB382D69
        * ((0x9DDFEA08EB382D69 * (v8[400] ^ 0xACC792AF839889B6)) ^ ((0x9DDFEA08EB382D69
                                                                       * (v8[400] ^ 0xACC792AF839889B6)) >> 47) ^ 0xCAEAE6CAE4EAE8C2);
    v16 = (-348639895 * ((v15 >> 47) ^ v15)) ^ 0x74616566;
    for (i = 1; ; ++i)
    {
      v18 = v16 & (v12 - 1);
      v19 = v13 + 24 * v18;
      v20 = *(_QWORD **)v19;
      if (*(_QWORD *)v19 == -1)
      {
        if ("target-features" == (char *)-1)
          goto LABEL_29;
        goto LABEL_18;
      }
      if (v20 != (_QWORD *)-2)
        break;
      if ("target-features" == (char *)-2)
        goto LABEL_29;
LABEL_18:
      if (v20 == (_QWORD *)-1)
        goto LABEL_104;
      v16 = i + v18;
    }
    if (*(_QWORD *)(v19 + 8) != 15)
      goto LABEL_18;
    if (*v20 != 0x662D746567726174 || *(_QWORD *)((char *)v20 + 7) != 0x7365727574616566)
      goto LABEL_18;
LABEL_29:
    v22 = *(_QWORD *)(v19 + 16);
    if (v22)
    {
      v23 = (void *)*(unsigned int *)(v22 + 16);
      v118[0] = (void *)(v22 + *(unsigned int *)(v22 + 12) + 25);
      v118[1] = v23;
      v24 = llvm::StringRef::find((uint64_t *)v118, "+retpoline", 0xAuLL, 0);
      v8 = (_QWORD *)&unk_1ED7EA000;
      if (v24 != -1)
      {
        if (*((_BYTE *)v3 + 104))
        {
          v25 = llvm::Value::stripPointerCasts(**(llvm::Value ***)(v2 + 16));
          if ((*((_BYTE *)v25 + 23) & 0x10) != 0)
          {
            v26 = ***(_QWORD ***)v25;
            v27 = *(_QWORD *)(v26 + 152);
            v28 = *(unsigned int *)(v26 + 168);
            if (!(_DWORD)v28)
              goto LABEL_39;
            LODWORD(v29) = (v28 - 1) & ((v25 >> 4) ^ (v25 >> 9));
            v30 = (llvm::Value **)(v27 + 16 * v29);
            v31 = *v30;
            if (*v30 != v25)
            {
              v32 = 1;
              while (v31 != (llvm::Value *)-4096)
              {
                v33 = v29 + v32++;
                v29 = v33 & (v28 - 1);
                v31 = *(llvm::Value **)(v27 + 16 * v29);
                if (v31 == v25)
                {
                  v30 = (llvm::Value **)(v27 + 16 * v29);
                  goto LABEL_40;
                }
              }
LABEL_39:
              v30 = (llvm::Value **)(v27 + 16 * v28);
            }
LABEL_40:
            v34 = v30[1];
            v37 = *(_QWORD *)v34;
            v35 = (char *)v34 + 16;
            v36 = v37;
          }
          else
          {
            v36 = 0;
            v35 = &byte_1C871356D;
          }
          sub_1C577826C((uint64_t)v5, "branch-funnel", 0xDuLL, v35, v36, (uint64_t (*)(uint64_t, uint64_t))v3[14], (uint64_t)v3[15]);
        }
        v38 = v3[8];
        v39 = operator new(8uLL);
        *v39 = v38;
        v115 = v39 + 1;
        v113 = v39;
        v114 = v39 + 1;
        v40 = *(_QWORD *)(v9 + 72);
        v41 = (char *)(*(_QWORD *)(v40 + 16) + 8);
        v42 = 8 * *(unsigned int *)(v40 + 12) - 8;
        sub_1C5673A78((uint64_t)&v113, (uint64_t)(v39 + 1), v41, &v41[v42], v42 >> 3);
        v43 = (llvm::PointerType *)llvm::FunctionType::get(**(uint64_t ****)(*(_QWORD *)(v9 + 72) + 16), (uint64_t *)v113, (v114 - (_BYTE *)v113) >> 3, *(_DWORD *)(*(_QWORD *)(v9 + 72) + 8) > 0xFFu);
        v106 = llvm::PointerType::get(v43, 0);
        sub_1C4773D54((uint64_t)v118, v9, 0, 0, 0);
        __p = 0;
        v111 = 0;
        v112 = 0;
        v44 = *v5;
        v45 = (uint64_t)v3[8];
        v117 = 257;
        v46 = sub_1C4773E38((uint64_t *)v118, 49, v44, v45, (uint64_t)__src);
        v47 = v46;
        v48 = v111;
        v102 = v7;
        v103 = v3;
        if (v111 >= v112)
        {
          v104 = v43;
          v50 = (char *)__p;
          v51 = (v111 - (_BYTE *)__p) >> 3;
          v52 = v51 + 1;
          if ((unint64_t)(v51 + 1) >> 61)
LABEL_118:
            abort();
          v53 = v112 - (_BYTE *)__p;
          if ((v112 - (_BYTE *)__p) >> 2 > v52)
            v52 = v53 >> 2;
          if ((unint64_t)v53 >= 0x7FFFFFFFFFFFFFF8)
            v54 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v54 = v52;
          if (v54)
          {
            if (v54 >> 61)
LABEL_119:
              sub_1C4764EE4();
            v55 = (char *)operator new(8 * v54);
          }
          else
          {
            v55 = 0;
          }
          v56 = (unsigned __int8 **)&v55[8 * v51];
          *v56 = v47;
          v49 = (uint64_t)(v56 + 1);
          if (v48 != v50)
          {
            do
            {
              v57 = (unsigned __int8 *)*((_QWORD *)v48 - 1);
              v48 -= 8;
              *--v56 = v57;
            }
            while (v48 != v50);
            v48 = (char *)__p;
          }
          __p = v56;
          v111 = (char *)v49;
          v112 = &v55[8 * v54];
          v43 = v104;
          if (v48)
            operator delete(v48);
          v3 = v103;
        }
        else
        {
          *(_QWORD *)v111 = v46;
          v49 = (uint64_t)(v48 + 8);
        }
        v111 = (char *)v49;
        v58 = *(_DWORD *)(v9 + 20);
        v59 = *(unsigned __int8 *)(v9 + 16);
        if (v59 == 84)
        {
          v60 = 0;
        }
        else if (v59 == 39)
        {
          v60 = (*(_DWORD *)(v9 + 80) + 1);
        }
        else
        {
          v60 = 2;
        }
        v61 = (uint64_t *)(v9 - 32 * (v58 & 0x7FFFFFF));
        if (v58 < 0 && (v99 = *(v61 - 1), (v99 & 0xFFFFFFFF0) != 0))
          v62 = (*((_DWORD *)v61 - 3) - *(_DWORD *)((char *)v61 - v99));
        else
          v62 = 0;
        v63 = (uint64_t *)(v9 - 32 * v60 - 32 * v62 - 32);
        sub_1C5063264((char **)&__p, v49, v61, v63, ((char *)v63 - (char *)v61) >> 5);
        v64 = **(unsigned __int8 ***)(v2 + 16);
        v101 = v2;
        if (*(_BYTE *)(v9 + 16) == 84)
        {
          v117 = 257;
          v65 = sub_1C4773E38((uint64_t *)v118, 49, v64, v106, (uint64_t)__src);
          v109 = 257;
          v66 = sub_1C4774778((uint64_t *)v118, (uint64_t **)v43, (uint64_t)v65, (uint64_t *)__p, (v111 - (_BYTE *)__p) >> 3, (uint64_t)v108, 0);
        }
        else
        {
          v117 = 257;
          v93 = sub_1C4773E38((uint64_t *)v118, 49, v64, v106, (uint64_t)__src);
          v94 = *(_QWORD *)(v9 - 96);
          v95 = *(_QWORD *)(v9 - 64);
          v109 = 257;
          v66 = (uint64_t)sub_1C622ABE4((uint64_t)v118, (uint64_t)v43, (uint64_t)v93, v94, v95, (uint64_t *)__p, (v111 - (_BYTE *)__p) >> 3, (uint64_t)v108);
        }
        v67 = (llvm::Value *)v66;
        *(_WORD *)(v66 + 18) = *(_WORD *)(v66 + 18) & 0xF003 | *(_WORD *)(v9 + 18) & 0xFFC;
        v68 = *(_QWORD *)(v9 + 64);
        v69 = **v3;
        __src[0] = llvm::Attribute::get(v69, 18, 0);
        v70 = llvm::AttributeSetNode::get(v69, __src, 1);
        v71 = (char *)operator new(8uLL);
        v72 = v3;
        v73 = v71;
        *(_QWORD *)v71 = v70;
        v74 = v71 + 8;
        if (!v68)
        {
          v75 = 0;
          v76 = 0;
          v77 = **v72;
          goto LABEL_93;
        }
        v78 = (uint64_t *)(v68 + 40);
        LODWORD(v79) = *(_DWORD *)(v68 + 8);
        if (v79 >= 3)
        {
          v100 = v67;
          v80 = v71 + 8;
          v81 = 2;
          v105 = (uint64_t *)(v68 + 40);
          v107 = v68;
          do
          {
            v82 = v78[v81];
            if (v74 >= v80)
            {
              v83 = (v74 - v73) >> 3;
              v84 = v83 + 1;
              if ((unint64_t)(v83 + 1) >> 61)
                goto LABEL_118;
              if ((v80 - v73) >> 2 > v84)
                v84 = (v80 - v73) >> 2;
              if ((unint64_t)(v80 - v73) >= 0x7FFFFFFFFFFFFFF8)
                v85 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v85 = v84;
              if (v85)
              {
                if (v85 >> 61)
                  goto LABEL_119;
                v86 = (char *)operator new(8 * v85);
              }
              else
              {
                v86 = 0;
              }
              v87 = (uint64_t *)&v86[8 * v83];
              v80 = &v86[8 * v85];
              *v87 = v82;
              v88 = (char *)(v87 + 1);
              if (v74 == v73)
                goto LABEL_85;
              do
              {
                v89 = *((_QWORD *)v74 - 1);
                v74 -= 8;
                *--v87 = v89;
              }
              while (v74 != v73);
              if (v73)
LABEL_85:
                operator delete(v73);
              v73 = (char *)v87;
              v74 = v88;
              v78 = v105;
              v68 = v107;
            }
            else
            {
              *(_QWORD *)v74 = v82;
              v74 += 8;
            }
            ++v81;
            v79 = *(unsigned int *)(v68 + 8);
          }
          while (v81 < v79);
          v67 = v100;
        }
        v77 = **v103;
        if ((_DWORD)v79)
        {
          v75 = *v78;
          if ((_DWORD)v79 == 1)
            goto LABEL_91;
          v76 = *(_QWORD *)(v68 + 48);
        }
        else
        {
          v75 = 0;
LABEL_91:
          v76 = 0;
        }
LABEL_93:
        *((_QWORD *)v67 + 8) = llvm::AttributeList::get(v77, v75, v76, v73, (v74 - v73) >> 3);
        llvm::Value::doRAUW((llvm::ValueAsMetadata *)v9, v67, (llvm::Value *)1);
        llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v9 + 40) + 40, (uint64_t ***)v9);
        v90 = *(_QWORD *)(v9 + 24);
        v91 = *(_QWORD **)(v9 + 32);
        *v91 = v90;
        *(_QWORD *)(v90 + 8) = v91;
        *(_QWORD *)(v9 + 24) = 0;
        *(_QWORD *)(v9 + 32) = 0;
        llvm::Value::deleteValue((llvm::Value *)v9);
        v92 = v5[2];
        if (v92)
          --*(_DWORD *)v92;
        v7 = v102;
        if (v73)
          operator delete(v73);
        if (__p)
        {
          v111 = (char *)__p;
          operator delete(__p);
        }
        v2 = v101;
        v3 = v103;
        if (v118[0] != v102)
          free(v118[0]);
        if (v113)
        {
          v114 = v113;
          operator delete(v113);
        }
        v8 = (_QWORD *)&unk_1ED7EA000;
      }
    }
LABEL_104:
    v5 += 3;
  }
  while (v5 != v6);
}

uint64_t sub_1C57790F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  int v5;
  unsigned int v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v13;
  int v14;
  BOOL v15;
  unsigned int v17;

  if (a2)
  {
    v5 = a2 - 1;
    v6 = ((a3 >> 4) ^ (a3 >> 9) ^ (37 * a4)) & (a2 - 1);
    v7 = (_QWORD *)(a1 + 24 * v6);
    v8 = *v7;
    v9 = v7[1];
    if (*v7 == a3 && v9 == a4)
    {
      v11 = 1;
    }
    else
    {
      v13 = 0;
      v14 = 1;
      while (v8 != -4096 || v9 != -1)
      {
        if (v13)
          v15 = 0;
        else
          v15 = v9 == -2;
        if (v15 && v8 == -8192)
          v13 = v7;
        v17 = v6 + v14++;
        v6 = v17 & v5;
        v7 = (_QWORD *)(a1 + 24 * (v17 & v5));
        v8 = *v7;
        v9 = v7[1];
        v11 = 1;
        if (*v7 == a3 && v9 == a4)
          goto LABEL_9;
      }
      v11 = 0;
      if (v13)
        v7 = v13;
    }
  }
  else
  {
    v7 = 0;
    v11 = 0;
  }
LABEL_9:
  *a5 = v7;
  return v11;
}

_QWORD *sub_1C57791B0(uint64_t a1, int a2)
{
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(_QWORD **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = operator new(32 * v8, (std::align_val_t)8uLL);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_1C62A6908(a1, v4, &v4[4 * v3]);
    JUMPOUT(0x1CAA32FB4);
  }
  *(_QWORD *)(a1 + 8) = 0;
  v10 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v10)
  {
    v11 = 32 * v10;
    do
    {
      *result = -4096;
      result += 4;
      v11 -= 32;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_1C5779268(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (a1 >= 8)
  {
    v1 = *(uint64_t **)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32) - (_QWORD)v1;
    if (v2)
    {
      v3 = v2 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        v4 = *v1;
        if ((*(_WORD *)(*v1 + 12) & 0x80) == 0 || *(_DWORD *)(v4 + 8) == 1 && (*(_BYTE *)(v4 + 69) & 2) == 0)
          break;
        ++v1;
        v3 -= 8;
        if (!v3)
          return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1C57792C0(_QWORD *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t *v3;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  uint64_t *v11[4];
  int v12;
  char v13;

  v2 = *a2 & 0xFFFFFFFFFFFFFFF8;
  v3 = *(uint64_t **)(v2 + 24);
  if (*(uint64_t **)(v2 + 32) == v3)
    return 0;
  v13 = 0;
  v12 = 3;
  v11[0] = a2;
  v11[1] = (uint64_t *)&v12;
  v11[2] = (uint64_t *)&v13;
  v11[3] = v3;
  sub_1C5779388(v11, a1);
  v5 = (_QWORD *)a1[10];
  v6 = a1 + 11;
  if (v5 != v6)
  {
    do
    {
      sub_1C5779388(v11, v5 + 7);
      v7 = (_QWORD *)v5[1];
      if (v7)
      {
        do
        {
          v8 = v7;
          v7 = (_QWORD *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          v8 = (_QWORD *)v5[2];
          v9 = *v8 == (_QWORD)v5;
          v5 = v8;
        }
        while (!v9);
      }
      v5 = v8;
    }
    while (v8 != v6);
  }
  return v13 != 0;
}

void sub_1C5779388(uint64_t **a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  size_t v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  size_t v39;
  BOOL v40;

  v3 = (uint64_t *)a2[4];
  v4 = (uint64_t *)a2[5];
  while (v3 != v4)
  {
    v5 = *v3;
    v6 = **a1;
    v7 = *(unsigned int *)a1[1];
    v9 = *(char **)(*v3 + 88);
    v8 = *(_QWORD *)(*v3 + 96);
    if ((unint64_t)v9 >= v8)
    {
      v11 = *(char **)(v5 + 80);
      v12 = (v9 - v11) >> 4;
      v13 = v12 + 1;
      if ((unint64_t)(v12 + 1) >> 60)
LABEL_52:
        abort();
      v14 = v8 - (_QWORD)v11;
      if (v14 >> 3 > v13)
        v13 = v14 >> 3;
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0)
        v15 = 0xFFFFFFFFFFFFFFFLL;
      else
        v15 = v13;
      if (v15)
      {
        if (v15 >> 60)
LABEL_53:
          sub_1C4764EE4();
        v16 = (char *)operator new(16 * v15);
      }
      else
      {
        v16 = 0;
      }
      v17 = &v16[16 * v12];
      *(_QWORD *)v17 = v6;
      *((_QWORD *)v17 + 1) = v7;
      v18 = v17;
      if (v9 != v11)
      {
        do
        {
          *((_OWORD *)v18 - 1) = *((_OWORD *)v9 - 1);
          v18 -= 16;
          v9 -= 16;
        }
        while (v9 != v11);
        v9 = *(char **)(v5 + 80);
      }
      v10 = v17 + 16;
      *(_QWORD *)(v5 + 80) = v18;
      *(_QWORD *)(v5 + 88) = v17 + 16;
      *(_QWORD *)(v5 + 96) = &v16[16 * v15];
      if (v9)
        operator delete(v9);
    }
    else
    {
      *(_QWORD *)v9 = v6;
      *((_QWORD *)v9 + 1) = v7;
      v10 = v9 + 16;
    }
    *(_QWORD *)(v5 + 88) = v10;
    v19 = *a1[3];
    v20 = *(_QWORD *)(v19 + 32);
    if (v20 == *(_QWORD *)(v5 + 32))
    {
      if (v20)
        v21 = memcmp(*(const void **)(v19 + 24), *(const void **)(v5 + 24), v20) != 0;
      else
        v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    *(_BYTE *)a1[2] |= v21;
    ++v3;
  }
  v22 = (uint64_t *)a2[7];
  v23 = (uint64_t *)a2[8];
  while (v22 != v23)
  {
    v24 = *v22;
    v25 = **a1;
    v26 = *(unsigned int *)a1[1];
    v28 = *(char **)(*v22 + 88);
    v27 = *(_QWORD *)(*v22 + 96);
    if ((unint64_t)v28 >= v27)
    {
      v30 = *(char **)(v24 + 80);
      v31 = (v28 - v30) >> 4;
      v32 = v31 + 1;
      if ((unint64_t)(v31 + 1) >> 60)
        goto LABEL_52;
      v33 = v27 - (_QWORD)v30;
      if (v33 >> 3 > v32)
        v32 = v33 >> 3;
      if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFF0)
        v34 = 0xFFFFFFFFFFFFFFFLL;
      else
        v34 = v32;
      if (v34)
      {
        if (v34 >> 60)
          goto LABEL_53;
        v35 = (char *)operator new(16 * v34);
      }
      else
      {
        v35 = 0;
      }
      v36 = &v35[16 * v31];
      *(_QWORD *)v36 = v25;
      *((_QWORD *)v36 + 1) = v26;
      v37 = v36;
      if (v28 != v30)
      {
        do
        {
          *((_OWORD *)v37 - 1) = *((_OWORD *)v28 - 1);
          v37 -= 16;
          v28 -= 16;
        }
        while (v28 != v30);
        v28 = *(char **)(v24 + 80);
      }
      v29 = v36 + 16;
      *(_QWORD *)(v24 + 80) = v37;
      *(_QWORD *)(v24 + 88) = v36 + 16;
      *(_QWORD *)(v24 + 96) = &v35[16 * v34];
      if (v28)
        operator delete(v28);
    }
    else
    {
      *(_QWORD *)v28 = v25;
      *((_QWORD *)v28 + 1) = v26;
      v29 = v28 + 16;
    }
    *(_QWORD *)(v24 + 88) = v29;
    v38 = *a1[3];
    v39 = *(_QWORD *)(v38 + 32);
    if (v39 == *(_QWORD *)(v24 + 32))
    {
      if (v39)
        v40 = memcmp(*(const void **)(v38 + 24), *(const void **)(v24 + 24), v39) != 0;
      else
        v40 = 0;
    }
    else
    {
      v40 = 1;
    }
    *(_BYTE *)a1[2] |= v40;
    ++v22;
  }
}

void sub_1C5779644(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7, unsigned int a8, unsigned int *a9)
{
  const llvm::APInt *v17;
  uint64_t v18;
  uint64_t v19;
  llvm::ConstantInt *v20;
  unint64_t v21;
  int v22;
  llvm::ValueHandleBase *v23;
  llvm::UndefValue *v24;
  llvm::ConstantInt *v25;
  llvm::ValueHandleBase *v26;
  uint64_t v27;
  unsigned int v28;

  if (sub_1C57786C8(*(_QWORD *)a1))
  {
    v18 = *(_QWORD *)(a1 + 72);
    v19 = a8;
    v20 = *(llvm::ConstantInt **)v18;
    v21 = *(unsigned int *)(v18 + 8);
    v28 = v21 >> 8;
    if (v21 >> 8 > 0x40)
    {
      v25 = v20;
      llvm::APInt::initSlowCase((llvm::APInt *)&v27, v19, 0);
      v20 = v25;
    }
    else
    {
      if (v21 <= 0xFF)
        v22 = 0;
      else
        v22 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v21);
      v27 = v22 & a8;
    }
    v23 = llvm::ConstantInt::get(v20, (llvm::LLVMContext *)&v27, v17);
    if (v28 >= 0x41)
    {
      if (v27)
      {
        v26 = v23;
        MEMORY[0x1CAA32F9C](v27, 0x1000C8000313F17);
        v23 = v26;
      }
    }
    v24 = sub_1C537D3B8((llvm *)0x30, (uint64_t)v23, *(llvm::Constant **)(a1 + 64), 0);
    sub_1C5779A88((uint64_t *)a1, a2, a3, a4, a5, a6, a7, (uint64_t)v24);
  }
  else
  {
    *a9 = a8;
  }
}

uint64_t sub_1C57797A0(uint64_t ******a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t ****v5;
  uint64_t ***v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t ***v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ****v18;
  uint64_t ***v19;
  int v20;
  int v21;
  uint64_t result;
  uint64_t ***v23;
  char *v24;
  size_t v25;
  size_t v26;
  uint64_t ****v27;
  uint64_t v28;
  _BYTE *v29;

  v4 = (uint64_t)a1[1];
  v5 = (*a1)[1];
  if (v5)
  {
    v6 = 0;
    v7 = 32 * (_QWORD)v5;
    v8 = **a1 + 2;
    while (1)
    {
      if (*v8 == a2)
      {
        if (v6)
          return 0;
        v6 = (uint64_t ***)*(v8 - 1);
      }
      v8 += 4;
      v7 -= 32;
      if (!v7)
        goto LABEL_9;
    }
  }
  v6 = 0;
LABEL_9:
  v9 = (unsigned __int8 *)sub_1C5779974(a1[1], v6);
  v10 = (uint64_t)a1[2];
  if (*(_BYTE *)(v10 + 25) || *(_QWORD *)(v10 + 32) != *(_QWORD *)(v10 + 40))
  {
    v11 = (uint64_t *)a1[4];
    v12 = (uint64_t)*a1[3];
    *(_DWORD *)v12 = 2;
    *(_QWORD *)(v12 + 8) = a2;
    sub_1C5779A88((uint64_t *)v4, *v11, v11[1], (unint64_t *)*a1[5], (uint64_t)a1[5][1], "unique_member", 0xDuLL, (uint64_t)v9);
    v10 = (uint64_t)a1[2];
  }
  v13 = ***a1;
  if ((*((_BYTE *)v13 + 23) & 0x10) != 0)
  {
    v14 = ***v13;
    v15 = *(_QWORD *)(v14 + 152);
    v16 = *(unsigned int *)(v14 + 168);
    if ((_DWORD)v16)
    {
      LODWORD(v17) = (v16 - 1) & ((v13 >> 4) ^ (v13 >> 9));
      v18 = (uint64_t ****)(v15 + 16 * v17);
      v19 = *v18;
      if (*v18 == v13)
      {
LABEL_21:
        v23 = v18[1];
        v26 = (size_t)*v23;
        v24 = (char *)(v23 + 2);
        v25 = v26;
        goto LABEL_22;
      }
      v20 = 1;
      while (v19 != (uint64_t ***)-4096)
      {
        v21 = v17 + v20++;
        v17 = v21 & (v16 - 1);
        v19 = *(uint64_t ****)(v15 + 16 * v17);
        if (v19 == v13)
        {
          v18 = (uint64_t ****)(v15 + 16 * v17);
          goto LABEL_21;
        }
      }
    }
    v18 = (uint64_t ****)(v15 + 16 * v16);
    goto LABEL_21;
  }
  v25 = 0;
  v24 = &byte_1C871356D;
LABEL_22:
  sub_1C5776F68(v4, v10, v24, v25, a2, v9);
  if (!*(_BYTE *)(v4 + 104) && (byte_1ED836D79 & 1) == 0 && !byte_1EF8F7308)
    return 1;
  v27 = (*a1)[1];
  if (!v27)
    return 1;
  v28 = 32 * (_QWORD)v27;
  v29 = (char *)**a1 + 25;
  result = 1;
  do
  {
    *v29 = 1;
    v29 += 32;
    v28 -= 32;
  }
  while (v28);
  return result;
}

uint64_t sub_1C5779974(_QWORD *a1, uint64_t ***a2)
{
  uint64_t *v4;
  llvm::Constant *v5;
  llvm::GetElementPtrInst *v6;
  uint64_t v7;
  uint64_t v8;
  llvm::ConstantInt *v9;
  unint64_t v10;
  unint64_t v11;
  llvm::ValueHandleBase *v12;
  llvm::ConstantInt *v14;
  unint64_t v15;
  unsigned int v16;

  v4 = **a2;
  v5 = (llvm::Constant *)a1[8];
  if ((llvm::Constant *)*v4 != v5)
    v4 = (uint64_t *)sub_1C537D3B8((llvm *)0x31, (uint64_t)**a2, v5, 0);
  v6 = (llvm::GetElementPtrInst *)a1[7];
  v7 = a1[10];
  v8 = (uint64_t)a2[1];
  v9 = *(llvm::ConstantInt **)v7;
  v10 = *(unsigned int *)(v7 + 8);
  v16 = v10 >> 8;
  if (v10 >> 8 > 0x40)
  {
    v14 = v9;
    llvm::APInt::initSlowCase((llvm::APInt *)&v15, v8, 0);
    v9 = v14;
  }
  else
  {
    if (v10 <= 0xFF)
      v11 = 0;
    else
      v11 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v10);
    v15 = v11 & v8;
  }
  v12 = llvm::ConstantInt::get(v9, (llvm::LLVMContext *)&v15, v5);
  if (v16 >= 0x41 && v15)
    MEMORY[0x1CAA32F9C](v15, 0x1000C8000313F17);
  v15 = (unint64_t)v12;
  return llvm::ConstantExpr::getGetElementPtr(v6, v4, (llvm::Value *)&v15, 1, 0, 0, 0);
}

void sub_1C5779A88(uint64_t *a1, uint64_t a2, unint64_t a3, unint64_t *a4, uint64_t a5, const void *a6, size_t a7, uint64_t a8)
{
  llvm::PointerType *v10;
  llvm::GlobalValue *v11;
  int v12;
  unsigned int v13;
  void *__p[2];
  char v15;
  void **v16;
  __int16 v17;

  v10 = (llvm::PointerType *)a1[7];
  sub_1C5777AD8((uint64_t)__p, a2, a3, a4, a5, a6, a7);
  v17 = 260;
  v16 = __p;
  v11 = (llvm::GlobalValue *)llvm::GlobalAlias::create(v10, 0, 0, (uint64_t)&v16, a8, *a1);
  if (v15 < 0)
    operator delete(__p[0]);
  v12 = *((_DWORD *)v11 + 8);
  v13 = v12 & 0xFFFFFFCF | 0x10;
  *((_DWORD *)v11 + 8) = v13;
  if ((v12 & 0xFu) - 7 >= 2)
  {
    if ((llvm::GlobalValue::hasExternalWeakLinkage(v11) & 1) != 0)
      return;
    v13 = *((_DWORD *)v11 + 8);
  }
  *((_DWORD *)v11 + 8) = v13 | 0x4000;
}

unint64_t sub_1C5779B3C(uint64_t a1, __int128 *a2)
{
  char v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  _OWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void *v34;
  void *v35;
  void *v36;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int16 v42;
  __int128 v43;
  uint64_t v44;
  __int128 __p;
  uint64_t v46;
  _QWORD **v47;
  _QWORD *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  int v52;

  v50 = *a2;
  v51 = *((_QWORD *)a2 + 2);
  v52 = 0;
  *(_QWORD *)&v38 = 0;
  v4 = sub_1C577A21C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), (uint64_t)&v50, &v38);
  v5 = v38;
  if ((v4 & 1) != 0)
  {
    v6 = *(_DWORD *)(v38 + 24);
    v7 = *(_QWORD *)(a1 + 24);
    return v7 + ((unint64_t)v6 << 7) + 24;
  }
  v8 = *(_DWORD *)(a1 + 8);
  v9 = *(_DWORD *)(a1 + 16);
  if (4 * v8 + 4 >= 3 * v9)
  {
    v9 *= 2;
  }
  else if (v9 + ~v8 - *(_DWORD *)(a1 + 12) > v9 >> 3)
  {
    goto LABEL_5;
  }
  sub_1C577A35C(a1, v9);
  *(_QWORD *)&v38 = 0;
  sub_1C577A21C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), (uint64_t)&v50, &v38);
  v5 = v38;
LABEL_5:
  ++*(_DWORD *)(a1 + 8);
  if (*(_QWORD *)(v5 + 8) || *(_QWORD *)(v5 + 16) != -1)
    --*(_DWORD *)(a1 + 12);
  *(_OWORD *)v5 = v50;
  *(_QWORD *)(v5 + 16) = v51;
  *(_DWORD *)(v5 + 24) = 0;
  v38 = *a2;
  v39 = *((_QWORD *)a2 + 2);
  v40 = 0uLL;
  v41 = 0;
  v42 = 1;
  v43 = 0uLL;
  v44 = 0;
  __p = 0uLL;
  v46 = 0;
  v48 = 0;
  v49 = 0;
  v47 = &v48;
  v11 = *(char **)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  if ((unint64_t)v11 >= v10)
  {
    v16 = *(char **)(a1 + 24);
    v17 = (v11 - v16) >> 7;
    v18 = v17 + 1;
    if ((unint64_t)(v17 + 1) >> 57)
      abort();
    v19 = v10 - (_QWORD)v16;
    if (v19 >> 6 > v18)
      v18 = v19 >> 6;
    if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFF80)
      v20 = 0x1FFFFFFFFFFFFFFLL;
    else
      v20 = v18;
    if (v20 >> 57)
      sub_1C4764EE4();
    v21 = (char *)operator new(v20 << 7);
    v22 = &v21[128 * v17];
    *(_OWORD *)v22 = *a2;
    v23 = &v21[128 * v20];
    *((_QWORD *)v22 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)v22 + 3) = 0;
    *((_QWORD *)v22 + 4) = 0;
    *((_QWORD *)v22 + 5) = 0;
    v41 = 0;
    v40 = 0uLL;
    *((_WORD *)v22 + 24) = 1;
    *((_QWORD *)v22 + 7) = 0;
    *((_QWORD *)v22 + 8) = 0;
    v44 = 0;
    v43 = 0uLL;
    *((_QWORD *)v22 + 9) = 0;
    *((_QWORD *)v22 + 10) = 0;
    *((_QWORD *)v22 + 11) = 0;
    *((_QWORD *)v22 + 12) = 0;
    __p = 0uLL;
    v46 = 0;
    *((_QWORD *)v22 + 15) = 0;
    *((_QWORD *)v22 + 14) = 0;
    v24 = v22 + 128;
    *((_QWORD *)v22 + 13) = v22 + 112;
    if (v11 == v16)
    {
      *(_QWORD *)(a1 + 24) = v22;
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v23;
    }
    else
    {
      v25 = 0;
      do
      {
        v26 = &v22[v25];
        v27 = &v11[v25];
        v28 = *(_OWORD *)&v11[v25 - 128];
        *((_QWORD *)v26 - 14) = *(_QWORD *)&v11[v25 - 112];
        *((_OWORD *)v26 - 8) = v28;
        *(_OWORD *)(v26 - 104) = *(_OWORD *)&v11[v25 - 104];
        *((_QWORD *)v26 - 11) = *(_QWORD *)&v11[v25 - 88];
        *((_QWORD *)v27 - 13) = 0;
        *((_QWORD *)v27 - 12) = 0;
        *((_QWORD *)v27 - 11) = 0;
        *((_WORD *)v26 - 40) = *(_WORD *)&v11[v25 - 80];
        *(_OWORD *)(v26 - 72) = *(_OWORD *)&v11[v25 - 72];
        *((_QWORD *)v26 - 7) = *(_QWORD *)&v11[v25 - 56];
        *((_QWORD *)v27 - 9) = 0;
        *((_QWORD *)v27 - 8) = 0;
        *((_QWORD *)v27 - 7) = 0;
        *((_OWORD *)v26 - 3) = *(_OWORD *)&v11[v25 - 48];
        *((_QWORD *)v26 - 4) = *(_QWORD *)&v11[v25 - 32];
        *((_QWORD *)v27 - 6) = 0;
        *((_QWORD *)v27 - 5) = 0;
        *((_QWORD *)v27 - 4) = 0;
        *((_QWORD *)v26 - 3) = *(_QWORD *)&v11[v25 - 24];
        v29 = &v11[v25 - 16];
        v30 = *(_QWORD *)v29;
        *(_QWORD *)&v22[v25 - 16] = *(_QWORD *)v29;
        v31 = (uint64_t)&v22[v25 - 16];
        v32 = *(_QWORD *)&v11[v25 - 8];
        *((_QWORD *)v26 - 1) = v32;
        if (v32)
        {
          *(_QWORD *)(v30 + 16) = v31;
          *((_QWORD *)v27 - 3) = v29;
          *(_QWORD *)v29 = 0;
          *(_QWORD *)&v11[v25 - 8] = 0;
        }
        else
        {
          *((_QWORD *)v26 - 3) = v31;
        }
        v25 -= 128;
      }
      while (&v11[v25] != v16);
      v11 = *(char **)(a1 + 24);
      v33 = *(char **)(a1 + 32);
      *(_QWORD *)(a1 + 24) = &v22[v25];
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v23;
      while (v33 != v11)
      {
        sub_1C5775384(*((_QWORD **)v33 - 2));
        v34 = (void *)*((_QWORD *)v33 - 6);
        if (v34)
        {
          *((_QWORD *)v33 - 5) = v34;
          operator delete(v34);
        }
        v35 = (void *)*((_QWORD *)v33 - 9);
        if (v35)
        {
          *((_QWORD *)v33 - 8) = v35;
          operator delete(v35);
        }
        v36 = (void *)*((_QWORD *)v33 - 13);
        if (v36)
        {
          *((_QWORD *)v33 - 12) = v36;
          operator delete(v36);
        }
        v33 -= 128;
      }
    }
    if (v11)
      operator delete(v11);
  }
  else
  {
    v12 = *((_QWORD *)a2 + 2);
    *(_OWORD *)v11 = *a2;
    *((_QWORD *)v11 + 2) = v12;
    *((_QWORD *)v11 + 3) = 0;
    *((_QWORD *)v11 + 4) = 0;
    *((_QWORD *)v11 + 5) = 0;
    *(_OWORD *)(v11 + 24) = v40;
    *((_QWORD *)v11 + 5) = v41;
    v40 = 0uLL;
    v41 = 0;
    *((_WORD *)v11 + 24) = v42;
    *((_QWORD *)v11 + 8) = 0;
    *((_QWORD *)v11 + 9) = 0;
    *((_QWORD *)v11 + 7) = 0;
    *(_OWORD *)(v11 + 56) = v43;
    *((_QWORD *)v11 + 9) = v44;
    *((_QWORD *)v11 + 10) = 0;
    v43 = 0uLL;
    v44 = 0;
    *((_QWORD *)v11 + 11) = 0;
    *((_QWORD *)v11 + 12) = 0;
    *((_OWORD *)v11 + 5) = __p;
    *((_QWORD *)v11 + 12) = v46;
    __p = 0uLL;
    v46 = 0;
    *((_QWORD *)v11 + 13) = v47;
    v13 = v48;
    *((_QWORD *)v11 + 14) = v48;
    v14 = v11 + 112;
    v15 = v49;
    *((_QWORD *)v11 + 15) = v49;
    if (v15)
    {
      v13[2] = v14;
      v47 = &v48;
      v48 = 0;
      v49 = 0;
    }
    else
    {
      *((_QWORD *)v11 + 13) = v14;
    }
    v24 = v11 + 128;
  }
  *(_QWORD *)(a1 + 32) = v24;
  sub_1C5775384(v48);
  if ((_QWORD)__p)
  {
    *((_QWORD *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if ((_QWORD)v43)
  {
    *((_QWORD *)&v43 + 1) = v43;
    operator delete((void *)v43);
  }
  if ((_QWORD)v40)
  {
    *((_QWORD *)&v40 + 1) = v40;
    operator delete((void *)v40);
  }
  sub_1C5775384(0);
  v7 = *(_QWORD *)(a1 + 24);
  v6 = ((unint64_t)(*(_QWORD *)(a1 + 32) - v7) >> 7) - 1;
  *(_DWORD *)(v5 + 24) = v6;
  return v7 + ((unint64_t)v6 << 7) + 24;
}

_QWORD *sub_1C5779FF0(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  int v21;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    sub_1C542358C((uint64_t *)a1, 2 * v6);
    v7 = *a2;
    v9 = *(_DWORD *)(a1 + 16) - 1;
    v10 = (37 * *a2) & v9;
    a3 = (_QWORD *)(*(_QWORD *)a1 + 32 * v10);
    v11 = *a3;
    if (*a2 != *a3)
    {
      v12 = 0;
      v13 = 1;
      while (v11 != -1)
      {
        if (v12)
          v14 = 0;
        else
          v14 = v11 == -2;
        if (v14)
          v12 = a3;
        v15 = v10 + v13++;
        v10 = v15 & v9;
        a3 = (_QWORD *)(*(_QWORD *)a1 + 32 * v10);
        v11 = *a3;
        if (v7 == *a3)
          goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else
  {
    if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
    {
LABEL_3:
      v7 = *a3;
      goto LABEL_4;
    }
    sub_1C542358C((uint64_t *)a1, v6);
    v7 = *a2;
    v16 = *(_DWORD *)(a1 + 16) - 1;
    v17 = (37 * *a2) & v16;
    a3 = (_QWORD *)(*(_QWORD *)a1 + 32 * v17);
    v18 = *a3;
    if (*a2 != *a3)
    {
      v12 = 0;
      v19 = 1;
      while (v18 != -1)
      {
        if (v12)
          v20 = 0;
        else
          v20 = v18 == -2;
        if (v20)
          v12 = a3;
        v21 = v17 + v19++;
        v17 = v21 & v16;
        a3 = (_QWORD *)(*(_QWORD *)a1 + 32 * v17);
        v18 = *a3;
        if (v7 == *a3)
          goto LABEL_4;
      }
LABEL_27:
      if (v12)
        a3 = v12;
      goto LABEL_3;
    }
  }
LABEL_4:
  ++*(_DWORD *)(a1 + 8);
  if (v7 != -1)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

_QWORD *sub_1C577A164(uint64_t a1, uint64_t *a2)
{
  int v3;
  unsigned int v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  BOOL v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = *(_DWORD *)(a1 + 16);
  if (!v3)
  {
    v12 = 0;
LABEL_13:
    v6 = sub_1C5779FF0(a1, a2, v12);
    v13 = *a2;
    v6[2] = 0;
    v6[3] = 0;
    *v6 = v13;
    v6[1] = 0;
    return v6;
  }
  v4 = v3 - 1;
  v5 = (37 * *a2) & (v3 - 1);
  v6 = (_QWORD *)(*(_QWORD *)a1 + 32 * v5);
  v7 = *v6;
  if (*a2 != *v6)
  {
    v8 = 0;
    v9 = 1;
    while (v7 != -1)
    {
      if (v8)
        v10 = 0;
      else
        v10 = v7 == -2;
      if (v10)
        v8 = v6;
      v11 = v5 + v9++;
      v5 = v11 & v4;
      v6 = (_QWORD *)(*(_QWORD *)a1 + 32 * v5);
      v7 = *v6;
      if (*a2 == *v6)
        return v6;
    }
    if (v8)
      v12 = v8;
    else
      v12 = v6;
    goto LABEL_13;
  }
  return v6;
}

uint64_t sub_1C577A21C(uint64_t a1, int a2, uint64_t a3, _QWORD *a4)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  const void *v13;
  size_t v14;
  int i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  _BOOL4 v20;
  uint64_t v21;
  BOOL v23;
  uint64_t result;
  unsigned int v26;

  if (a2)
  {
    v8 = sub_1C5E3DF4C(*(_QWORD **)a3, *(_QWORD *)a3 + *(_QWORD *)(a3 + 8));
    v9 = 0;
    v10 = *(_QWORD *)(a3 + 16);
    v11 = (37 * v10) ^ v8;
    v12 = a2 - 1;
    v13 = *(const void **)a3;
    v14 = *(_QWORD *)(a3 + 8);
    for (i = 1; ; ++i)
    {
      v16 = v11 & v12;
      v17 = a1 + 32 * v16;
      v18 = *(_QWORD *)(v17 + 8);
      if (v14 == v18)
      {
        v26 = v12;
        v19 = v13;
        v20 = !v14 || memcmp(v13, *(const void **)v17, v14) == 0;
        v21 = *(_QWORD *)(v17 + 16);
        if (v20)
        {
          v13 = v19;
          v12 = v26;
          if (v10 == v21)
          {
            result = 1;
            goto LABEL_29;
          }
        }
        else
        {
          v13 = v19;
          v12 = v26;
        }
      }
      else
      {
        v21 = *(_QWORD *)(v17 + 16);
      }
      if (!v18 && v21 == -1)
        break;
      if (v9)
        v23 = 0;
      else
        v23 = v21 == -2;
      if (v23 && v18 == 0)
        v9 = a1 + 32 * v16;
      v11 = v16 + i;
    }
    result = 0;
    if (v9)
      v17 = v9;
  }
  else
  {
    v17 = 0;
    result = 0;
  }
LABEL_29:
  *a4 = v17;
  return result;
}

char *sub_1C577A35C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  char *result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (char *)operator new(32 * v8, (std::align_val_t)8uLL);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = &result[32 * v10];
      do
      {
        *(_OWORD *)result = xmmword_1C85F6FF0;
        *((_QWORD *)result + 2) = -1;
        result += 32;
      }
      while (result != v11);
    }
    if ((_DWORD)v3)
    {
      v12 = 32 * v3;
      v13 = v4;
      do
      {
        if (*(_QWORD *)(v13 + 8))
          v14 = 0;
        else
          v14 = *(_QWORD *)(v13 + 16) > 0xFFFFFFFFFFFFFFFDLL;
        if (!v14)
        {
          v19 = 0;
          sub_1C577A21C(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), v13, &v19);
          v15 = v19;
          v16 = *(_OWORD *)v13;
          *(_QWORD *)(v19 + 16) = *(_QWORD *)(v13 + 16);
          *(_OWORD *)v15 = v16;
          *(_DWORD *)(v15 + 24) = *(_DWORD *)(v13 + 24);
          ++*(_DWORD *)(a1 + 8);
        }
        v13 += 32;
        v12 -= 32;
      }
      while (v12);
    }
    JUMPOUT(0x1CAA32FB4);
  }
  *(_QWORD *)(a1 + 8) = 0;
  v17 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v17)
  {
    v18 = &result[32 * v17];
    do
    {
      *(_OWORD *)result = xmmword_1C85F6FF0;
      *((_QWORD *)result + 2) = -1;
      result += 32;
    }
    while (result != v18);
  }
  return result;
}

BOOL sub_1C577A4B8(uint64_t a1, const void **a2, uint64_t a3)
{
  char v3;
  int v4;
  size_t v5;
  size_t v6;
  size_t v7;
  size_t v8;
  const void *v9;
  int v10;
  int v11;

  v3 = *((_BYTE *)a2 + 23);
  v4 = v3;
  v5 = v3 & 0x7F;
  if (v4 >= 0)
    v6 = v5;
  else
    v6 = (size_t)a2[1];
  v7 = *(_QWORD *)(a3 + 8);
  if (v7 >= v6)
    v8 = v6;
  else
    v8 = *(_QWORD *)(a3 + 8);
  if (v8 && (v4 >= 0 ? (v9 = a2) : (v9 = *a2), (v10 = memcmp(v9, *(const void **)a3, v8)) != 0))
  {
    v11 = (v10 >> 31) | 1;
  }
  else
  {
    if (v6 < v7)
      v11 = -1;
    else
      v11 = 1;
    if (v6 == v7)
      v11 = 0;
  }
  return v11 == -1;
}

BOOL sub_1C577A53C(uint64_t a1, uint64_t a2, const void **a3)
{
  size_t v3;
  char v4;
  int v5;
  size_t v6;
  size_t v7;
  size_t v8;
  const void *v9;
  int v10;
  int v11;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *((_BYTE *)a3 + 23);
  v5 = v4;
  v6 = v4 & 0x7F;
  if (v5 >= 0)
    v7 = v6;
  else
    v7 = (size_t)a3[1];
  if (v7 >= v3)
    v8 = *(_QWORD *)(a2 + 8);
  else
    v8 = v7;
  if (v8 && (v5 >= 0 ? (v9 = a3) : (v9 = *a3), (v10 = memcmp(*(const void **)a2, v9, v8)) != 0))
  {
    v11 = (v10 >> 31) | 1;
  }
  else
  {
    if (v3 < v7)
      v11 = -1;
    else
      v11 = 1;
    if (v3 == v7)
      v11 = 0;
  }
  return v11 == -1;
}

void sub_1C577A5C0(__int128 *a1, uint64_t *a2, _WORD *a3)
{
  llvm::cl::Option::setArgStr((uint64_t)&qword_1ED8105C0, "wholeprogramdevirt-summary-action", 0x21uLL);
  xmmword_1ED8105E0 = *a1;
  sub_1C571A9C0(a2, (uint64_t)&qword_1ED8105C0);
  word_1ED8105CA = (32 * (*a3 & 3)) | word_1ED8105CA & 0xFF9F;
}

uint64_t sub_1C577A634(uint64_t a1, char *a2, _OWORD *a3, _WORD *a4)
{
  uint64_t v8;
  size_t v9;

  v8 = sub_1C47AD050(a1, 0, 0);
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v8 + 136) = 0;
  *(_QWORD *)(v8 + 168) = 0;
  *(_QWORD *)(v8 + 176) = 0;
  *(_QWORD *)(v8 + 160) = 0;
  *(_BYTE *)(v8 + 184) = 0;
  *(_QWORD *)(v8 + 144) = 0;
  *(_QWORD *)(v8 + 152) = &unk_1E819E950;
  *(_QWORD *)v8 = &unk_1E819E480;
  *(_QWORD *)(v8 + 192) = &unk_1E819E970;
  *(_QWORD *)(v8 + 200) = &off_1E7FA8CB8;
  *(_QWORD *)(v8 + 224) = v8 + 200;
  v9 = strlen(a2);
  llvm::cl::Option::setArgStr(a1, (unsigned __int8 *)a2, v9);
  *(_OWORD *)(a1 + 32) = *a3;
  *(_WORD *)(a1 + 10) = (32 * (*a4 & 3)) | *(_WORD *)(a1 + 10) & 0xFF9F;
  llvm::cl::Option::addArgument((llvm::cl::Option *)a1);
  return a1;
}

void sub_1C577A708(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2)
  {
    v2 = a1;
    v3 = a1 + 40 * a2;
    do
    {
      sub_1C62A7004(*(unsigned __int8 **)v2, *(_QWORD *)(v2 + 8), *(_DWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
      v2 += 40;
    }
    while (v2 != v3);
  }
}

unint64_t sub_1C577A74C(unint64_t a1)
{
  unint64_t v3;
  unint64_t v5;

  if (qword_1ED8108C8 >= HIDWORD(qword_1ED8108C8))
  {
    v3 = qword_1ED8108C8 + 1;
    if (qword_1ED8108C0 <= a1 && qword_1ED8108C0 + 48 * (unint64_t)qword_1ED8108C8 > a1)
    {
      v5 = a1 - qword_1ED8108C0;
      sub_1C62A70B8(v3);
      return qword_1ED8108C0 + v5;
    }
    else
    {
      sub_1C62A70B8(v3);
    }
  }
  return a1;
}

uint64_t sub_1C577A7C0(uint64_t *a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::AAManager::Key, a2) + 8;
}

uint64_t sub_1C577A7E8(uint64_t *a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::OptimizationRemarkEmitterAnalysis::Key, a2)
       + 8;
}

uint64_t sub_1C577A810(uint64_t *a1, uint64_t a2)
{
  return llvm::AnalysisManager<llvm::Function>::getResultImpl(*a1, &llvm::DominatorTreeAnalysis::Key, a2) + 8;
}

uint64_t sub_1C577A838()
{
  uint64_t v0;
  int v2;
  __int128 v3;
  int v4;
  int v5;
  __n128 v6;
  const char *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  int v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  int v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v3 = "What to do with the summary when running this pass";
  *((_QWORD *)&v3 + 1) = 50;
  v6.n128_u64[0] = (unint64_t)&v7;
  v7 = "none";
  v8 = 4;
  v9 = 0;
  v10 = "Do nothing";
  v11 = 10;
  v12 = "import";
  v13 = 6;
  v14 = 1;
  v15 = "Import typeid resolutions from summary and globals";
  v16 = 50;
  v17 = "export";
  v18 = 6;
  v19 = 2;
  v20 = "Export typeid resolutions to summary and globals";
  v21 = 48;
  v6.n128_u64[1] = 0x400000003;
  v5 = 1;
  sub_1C62A69FC(&v3, (uint64_t *)&v6, &v5);
  if ((const char **)v6.n128_u64[0] != &v7)
    free((void *)v6.n128_u64[0]);
  __cxa_atexit((void (*)(void *))sub_1C62991C4, &qword_1ED8105C0, &dword_1C475E000);
  v0 = sub_1C47AD050((uint64_t)&qword_1ED8103F0, 0, 0);
  qword_1ED810478 = 0;
  qword_1ED810470 = 0;
  unk_1ED810480 = 0;
  qword_1ED810490 = 0;
  qword_1ED8104A0 = 0;
  qword_1ED810498 = 0;
  qword_1ED810488 = (uint64_t)&unk_1E819E950;
  byte_1ED8104A8 = 0;
  qword_1ED8103F0 = (uint64_t)&unk_1E819E480;
  qword_1ED8104B0 = (uint64_t)&unk_1E819E970;
  qword_1ED8104B8 = (uint64_t)&off_1E7FA8CB8;
  qword_1ED8104D0 = (uint64_t)&qword_1ED8104B8;
  llvm::cl::Option::setArgStr(v0, "wholeprogramdevirt-read-summary", 0x1FuLL);
  qword_1ED810410 = (uint64_t)"Read summary from given bitcode or YAML file before running pass";
  qword_1ED810418 = 64;
  word_1ED8103FA = word_1ED8103FA & 0xFF9F | 0x20;
  llvm::cl::Option::addArgument((llvm::cl::Option *)&qword_1ED8103F0);
  __cxa_atexit((void (*)(void *))sub_1C49BEA38, &qword_1ED8103F0, &dword_1C475E000);
  v6.n128_u64[0] = (unint64_t)"Write summary to given bitcode or YAML file after running pass. Output file format "
                                     "is deduced from extension: *.bc means writing bitcode, otherwise YAML";
  v6.n128_u64[1] = 152;
  LODWORD(v3) = 1;
  sub_1C577A634((uint64_t)&unk_1ED8104D8, "wholeprogramdevirt-write-summary", &v6, &v3);
  __cxa_atexit((void (*)(void *))sub_1C49BEA38, &unk_1ED8104D8, &dword_1C475E000);
  v4 = 10;
  v5 = 1;
  *(_QWORD *)&v3 = &v4;
  v2 = 1;
  v6.n128_u64[0] = (unint64_t)"Maximum number of call targets per call site to enable branch funnels";
  v6.n128_u64[1] = 69;
  sub_1C62A6AB4(&v5, (int **)&v3, &v2, &v6);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &qword_1ED810198, &dword_1C475E000);
  v4 = 1;
  v5 = 1;
  LOBYTE(v2) = 0;
  *(_QWORD *)&v3 = &v2;
  v6.n128_u64[0] = (unint64_t)"Print index-based devirtualization messages";
  v6.n128_u64[1] = 43;
  sub_1C62A6BF8(&v5, (char **)&v3, &v4, &v6);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &qword_1ED810258, &dword_1C475E000);
  LOBYTE(v2) = 0;
  *(_QWORD *)&v3 = &v2;
  v4 = 1;
  v5 = 1;
  v6.n128_u64[0] = (unint64_t)"Enable whole program visibility";
  v6.n128_u64[1] = 31;
  sub_1C617D830((llvm::cl::Option *)&unk_1ED8335D8, "whole-program-visibility", (_BYTE **)&v3, &v5, &v4, &v6);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED8335D8, &dword_1C475E000);
  LOBYTE(v2) = 0;
  *(_QWORD *)&v3 = &v2;
  v4 = 1;
  v5 = 1;
  v6.n128_u64[0] = (unint64_t)"Disable whole program visibility (overrides enabling options)";
  v6.n128_u64[1] = 61;
  sub_1C617D830((llvm::cl::Option *)&unk_1ED833698, "disable-whole-program-visibility", (_BYTE **)&v3, &v5, &v4, &v6);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED833698, &dword_1C475E000);
  v6.n128_u64[0] = (unint64_t)"Prevent function(s) from being devirtualized";
  v6.n128_u64[1] = 44;
  LODWORD(v3) = 1;
  v4 = 1;
  v5 = 1;
  sub_1C62A6D40(&v6, &v3, &v5, &v4);
  __cxa_atexit((void (*)(void *))sub_1C50A4924, &qword_1ED810318, &dword_1C475E000);
  v4 = 1;
  v5 = 1;
  *(_QWORD *)&v3 = "Type of checking for incorrect devirtualizations";
  *((_QWORD *)&v3 + 1) = 48;
  v6.n128_u64[0] = (unint64_t)&v7;
  v7 = "none";
  v8 = 4;
  v9 = 0;
  v10 = "No checking";
  v11 = 11;
  v12 = "trap";
  v13 = 4;
  v14 = 1;
  v15 = "Trap when incorrect";
  v16 = 19;
  v17 = "fallback";
  v18 = 8;
  v19 = 2;
  v20 = "Fallback to indirect when incorrect";
  v21 = 35;
  v6.n128_u64[1] = 0x400000003;
  sub_1C62A6E74(&v5, &v4, &v3, (uint64_t)&v6);
  if ((const char **)v6.n128_u64[0] != &v7)
    free((void *)v6.n128_u64[0]);
  return __cxa_atexit((void (*)(void *))sub_1C62A5D0C, &qword_1ED810818, &dword_1C475E000);
}

uint64_t llvm::getLazyIRModule@<X0>(const llvm::MemoryBuffer **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, llvm::LLVMContextImpl ****a5@<X8>)
{
  const llvm::MemoryBuffer *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  llvm::LLVMContextImpl ***v13;
  llvm::LLVMContextImpl **v14;
  llvm::LLVMContextImpl **v15;
  char *v16;
  llvm::LLVMContextImpl *v17;
  llvm::LLVMContextImpl *v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[4];
  uint64_t v24[2];
  char *v25;
  llvm::LLVMContextImpl *v26;
  char *v27;
  char *v28;
  char *v29;
  llvm::LLVMContextImpl ***v30;
  char v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v9 = *a1;
  v11 = (unsigned __int8 *)*((_QWORD *)v9 + 1);
  v10 = (unsigned __int8 *)*((_QWORD *)v9 + 2);
  if (v11 == v10)
    goto LABEL_24;
  v12 = *v11;
  if (v12 == 66)
  {
    if (v11[1] != 67 || v11[2] != 192 || v11[3] != 222)
      goto LABEL_24;
  }
  else if (v12 != 222 || v11[1] != 192 || v11[2] != 23 || v11[3] != 11)
  {
LABEL_24:
    v19 = v10 - v11;
    v20 = (*(uint64_t (**)(const llvm::MemoryBuffer *))(*(_QWORD *)v9 + 16))(v9);
    v23[0] = v11;
    v23[1] = v19;
    v23[2] = v20;
    v23[3] = v21;
    return llvm::parseAssembly((uint64_t)v23, a2, a3, 0, (void (*)(void **__return_ptr, uint64_t, uint64_t, uint64_t))sub_1C577BF4C, (uint64_t)&v30, a5);
  }
  llvm::getOwningLazyBitcodeModule(a1, a3, a4, 0, (uint64_t)&v30);
  v13 = v30;
  if ((v31 & 1) != 0)
  {
    v30 = 0;
    if (v13)
    {
      v24[0] = a2;
      v24[1] = (uint64_t)a1;
      if (((unsigned int (*)(llvm::LLVMContextImpl ***, void *))(*v13)[6])(v13, &llvm::ErrorList::ID))
      {
        v14 = v13[1];
        v15 = v13[2];
        if (v14 == v15)
        {
          v16 = 0;
        }
        else
        {
          v16 = 0;
          do
          {
            v28 = v16;
            v17 = *v14;
            *v14 = 0;
            v26 = v17;
            sub_1C577BBCC(&v27, &v26, v24);
            sub_1C6174794(&v28, &v27, &v29);
            v16 = v29;
            v29 = 0;
            if (v27)
              (*(void (**)(char *))(*(_QWORD *)v27 + 8))(v27);
            v18 = v26;
            v26 = 0;
            if (v18)
              (*(void (**)(llvm::LLVMContextImpl *))(*(_QWORD *)v18 + 8))(v18);
            if (v28)
              (*(void (**)(char *))(*(_QWORD *)v28 + 8))(v28);
            ++v14;
          }
          while (v14 != v15);
        }
        v25 = v16;
      }
      else
      {
        v29 = (char *)v13;
        sub_1C577BBCC(&v25, &v29, v24);
        v13 = (llvm::LLVMContextImpl ***)v29;
        if (!v29)
          goto LABEL_31;
      }
      ((void (*)(llvm::LLVMContextImpl ***))(*v13)[1])(v13);
LABEL_31:
      v13 = 0;
      goto LABEL_32;
    }
  }
  v30 = 0;
LABEL_32:
  *a5 = v13;
  return sub_1C4FF9CA4((uint64_t)&v30);
}

void llvm::getLazyIRFileModule(const void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, llvm::LLVMContextImpl ****a6@<X8>)
{
  char v12;
  const llvm::MemoryBuffer *v13;
  std::string *v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  std::string *v18;
  std::string::size_type v19;
  std::string::size_type size;
  __int128 *v21;
  const llvm::MemoryBuffer *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void **v29;
  void **v30;
  void *v31;
  const llvm::MemoryBuffer *v32;
  std::string v33;
  std::string v34;
  std::error_code v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  __int128 v41;
  unint64_t v42;
  void *v43[2];
  void *__p[4];
  char *v45[2];
  uint64_t v46;
  std::error_code v47;
  char v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  LOWORD(v38) = 261;
  *(_QWORD *)&v36 = a1;
  *((_QWORD *)&v36 + 1) = a2;
  llvm::MemoryBuffer::getFileOrSTDIN((const char ***)&v36, 0, 1, (uint64_t)&v47);
  v12 = v48;
  if ((v48 & 1) == 0)
  {
    std::system_category();
    v13 = *(const llvm::MemoryBuffer **)&v47.__val_;
    goto LABEL_14;
  }
  v13 = *(const llvm::MemoryBuffer **)&v47.__val_;
  v35 = v47;
  if (!v47.__val_)
  {
LABEL_14:
    *(_QWORD *)&v47.__val_ = 0;
    v32 = v13;
    llvm::getLazyIRModule(&v32, a3, a4, a5, a6);
    v22 = v32;
    v32 = 0;
    if (v22)
      (*(void (**)(const llvm::MemoryBuffer *))(*(_QWORD *)v22 + 8))(v22);
    if ((v12 & 1) != 0)
      return;
LABEL_51:
    if (*(_QWORD *)&v47.__val_)
      (*(void (**)(_QWORD))(**(_QWORD **)&v47.__val_ + 8))(*(_QWORD *)&v47.__val_);
    return;
  }
  std::error_code::message(&v33, &v35);
  v14 = std::string::insert(&v33, 0, "Could not open input file: ");
  v34 = *v14;
  v15 = v34.__r_.__value_.__r.__words[2];
  v14->__r_.__value_.__r.__words[0] = 0;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v16 = HIBYTE(v15);
  v17 = (v16 & 0x80u) != 0;
  if ((v16 & 0x80u) == 0)
    v18 = &v34;
  else
    v18 = (std::string *)v34.__r_.__value_.__r.__words[0];
  v19 = v16 & 0x7F;
  if (v17)
    size = v34.__r_.__value_.__l.__size_;
  else
    size = v19;
  v36 = 0uLL;
  if (a2 > 0x7FFFFFFFFFFFFFF7)
LABEL_54:
    abort();
  if (a2 >= 0x17)
  {
    v23 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17)
      v23 = a2 | 7;
    v24 = v23 + 1;
    v21 = (__int128 *)operator new(v23 + 1);
    *((_QWORD *)&v37 + 1) = a2;
    v38 = v24 | 0x8000000000000000;
    *(_QWORD *)&v37 = v21;
    goto LABEL_21;
  }
  HIBYTE(v38) = a2;
  v21 = &v37;
  if (a2)
LABEL_21:
    memmove(v21, a1, a2);
  *((_BYTE *)v21 + a2) = 0;
  v39 = -1;
  v40 = 0;
  if (size > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_54;
  if (size >= 0x17)
  {
    v26 = (size & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((size | 7) != 0x17)
      v26 = size | 7;
    v27 = v26 + 1;
    v25 = (__int128 *)operator new(v26 + 1);
    *((_QWORD *)&v41 + 1) = size;
    v42 = v27 | 0x8000000000000000;
    *(_QWORD *)&v41 = v25;
    goto LABEL_29;
  }
  HIBYTE(v42) = size;
  v25 = &v41;
  if (size)
LABEL_29:
    memmove(v25, v18, size);
  *((_BYTE *)v25 + size) = 0;
  memset(__p, 0, sizeof(__p));
  *(_OWORD *)v43 = 0u;
  v45[0] = (char *)&v46;
  v45[1] = (char *)0x400000000;
  *(_OWORD *)a3 = v36;
  v28 = (void **)(a3 + 16);
  if (*(char *)(a3 + 39) < 0)
    operator delete(*v28);
  *(_OWORD *)v28 = v37;
  *(_QWORD *)(a3 + 32) = v38;
  HIBYTE(v38) = 0;
  LOBYTE(v37) = 0;
  *(_QWORD *)(a3 + 40) = v39;
  *(_DWORD *)(a3 + 48) = v40;
  v29 = (void **)(a3 + 56);
  if (*(char *)(a3 + 79) < 0)
    operator delete(*v29);
  *(_OWORD *)v29 = v41;
  *(_QWORD *)(a3 + 72) = v42;
  HIBYTE(v42) = 0;
  LOBYTE(v41) = 0;
  v30 = (void **)(a3 + 80);
  if (*(char *)(a3 + 103) < 0)
    operator delete(*v30);
  *(_OWORD *)v30 = *(_OWORD *)v43;
  *(void **)(a3 + 96) = __p[0];
  HIBYTE(__p[0]) = 0;
  LOBYTE(v43[0]) = 0;
  v31 = *(void **)(a3 + 104);
  if (v31)
  {
    *(_QWORD *)(a3 + 112) = v31;
    operator delete(v31);
  }
  *(_OWORD *)(a3 + 104) = *(_OWORD *)&__p[1];
  *(void **)(a3 + 120) = __p[3];
  memset(&__p[1], 0, 24);
  sub_1C4FACD18(a3 + 128, (uint64_t)v45);
  sub_1C4FAD100(v45);
  if (__p[1])
  {
    __p[2] = __p[1];
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0)
    operator delete(v43[0]);
  if (SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v33.__r_.__value_.__l.__data_);
  *a6 = 0;
  if ((v48 & 1) == 0)
    goto LABEL_51;
}

llvm::Timer *llvm::parseIR@<X0>(unsigned __int8 **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void **__return_ptr, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, llvm::LLVMContextImpl ****a7@<X8>)
{
  _BYTE *v13;
  int v14;
  __int128 v15;
  llvm::LLVMContextImpl ***v16;
  llvm::LLVMContextImpl **v17;
  llvm::LLVMContextImpl **v18;
  char *v19;
  llvm::LLVMContextImpl *v20;
  llvm::LLVMContextImpl *v21;
  __int128 v22;
  llvm::Timer *result;
  _OWORD v24[2];
  uint64_t v25[2];
  _OWORD v26[2];
  llvm::Timer *v27;
  char *v28;
  llvm::LLVMContextImpl *v29;
  char *v30;
  char *v31;
  char *v32;
  llvm::LLVMContextImpl ***v33;
  char v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  llvm::NamedRegionTimer::NamedRegionTimer(&v27, "parse", 5uLL, "Parse IR", 8uLL, "irparse", 7uLL, a6, "LLVM IR Parsing", 0xFuLL, llvm::TimePassesIsEnabled);
  if (!a1[1])
    goto LABEL_25;
  v13 = *a1;
  v14 = **a1;
  if (v14 == 66)
  {
    if (v13[1] != 67 || v13[2] != 192 || v13[3] != 222)
      goto LABEL_25;
  }
  else if (v14 != 222 || v13[1] != 192 || v13[2] != 23 || v13[3] != 11)
  {
LABEL_25:
    v22 = *((_OWORD *)a1 + 1);
    v24[0] = *(_OWORD *)a1;
    v24[1] = v22;
    llvm::parseAssembly((uint64_t)v24, a2, a3, 0, a4, a5, a7);
    goto LABEL_33;
  }
  v15 = *((_OWORD *)a1 + 1);
  v26[0] = *(_OWORD *)a1;
  v26[1] = v15;
  llvm::parseBitcodeFile(v26, a3, (uint64_t)a4, a5, (uint64_t)&v33);
  v16 = v33;
  if ((v34 & 1) != 0)
  {
    v33 = 0;
    if (v16)
    {
      v25[0] = a2;
      v25[1] = (uint64_t)a1;
      if (((unsigned int (*)(llvm::LLVMContextImpl ***, void *))(*v16)[6])(v16, &llvm::ErrorList::ID))
      {
        v17 = v16[1];
        v18 = v16[2];
        if (v17 == v18)
        {
          v19 = 0;
        }
        else
        {
          v19 = 0;
          do
          {
            v31 = v19;
            v20 = *v17;
            *v17 = 0;
            v29 = v20;
            sub_1C577BF58(&v30, &v29, v25);
            sub_1C6174794(&v31, &v30, &v32);
            v19 = v32;
            v32 = 0;
            if (v30)
              (*(void (**)(char *))(*(_QWORD *)v30 + 8))(v30);
            v21 = v29;
            v29 = 0;
            if (v21)
              (*(void (**)(llvm::LLVMContextImpl *))(*(_QWORD *)v21 + 8))(v21);
            if (v31)
              (*(void (**)(char *))(*(_QWORD *)v31 + 8))(v31);
            ++v17;
          }
          while (v17 != v18);
        }
        v28 = v19;
      }
      else
      {
        v32 = (char *)v16;
        sub_1C577BF58(&v28, &v32, v25);
        v16 = (llvm::LLVMContextImpl ***)v32;
        if (!v32)
          goto LABEL_31;
      }
      ((void (*)(llvm::LLVMContextImpl ***))(*v16)[1])(v16);
LABEL_31:
      v16 = 0;
      goto LABEL_32;
    }
  }
  v33 = 0;
LABEL_32:
  *a7 = v16;
  sub_1C4FF9CA4((uint64_t)&v33);
LABEL_33:
  result = v27;
  if (v27)
    return (llvm::Timer *)llvm::Timer::stopTimer(v27);
  return result;
}

void llvm::parseIRFile(const void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void **__return_ptr, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X5>, llvm::LLVMContextImpl ****a7@<X8>)
{
  char v14;
  _QWORD *v15;
  std::string *v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v19;
  std::string *v20;
  std::string::size_type v21;
  std::string::size_type size;
  __int128 *v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void **v35;
  void **v36;
  void *v37;
  unsigned __int8 *v38[4];
  std::string v39;
  std::string v40;
  std::error_code v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  __int128 v47;
  unint64_t v48;
  __int128 v49;
  _QWORD v50[4];
  char *v51[2];
  uint64_t v52;
  std::error_code v53;
  char v54;
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  LOWORD(v44) = 261;
  *(_QWORD *)&v42 = a1;
  *((_QWORD *)&v42 + 1) = a2;
  llvm::MemoryBuffer::getFileOrSTDIN((const char ***)&v42, 1, 1, (uint64_t)&v53);
  v14 = v54;
  if ((v54 & 1) == 0)
  {
    std::system_category();
    v15 = *(_QWORD **)&v53.__val_;
    goto LABEL_14;
  }
  v15 = *(_QWORD **)&v53.__val_;
  v41 = v53;
  if (!v53.__val_)
  {
LABEL_14:
    v24 = (unsigned __int8 *)v15[1];
    v25 = (unsigned __int8 *)(v15[2] - (_QWORD)v24);
    v26 = (unsigned __int8 *)(*(uint64_t (**)(_QWORD *))(*v15 + 16))(v15);
    v38[0] = v24;
    v38[1] = v25;
    v38[2] = v26;
    v38[3] = v27;
    llvm::parseIR(v38, a3, a4, a5, a6, v28, a7);
    if ((v14 & 1) != 0)
      return;
    goto LABEL_49;
  }
  std::error_code::message(&v39, &v41);
  v16 = std::string::insert(&v39, 0, "Could not open input file: ");
  v40 = *v16;
  v17 = v40.__r_.__value_.__r.__words[2];
  v16->__r_.__value_.__r.__words[0] = 0;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v18 = HIBYTE(v17);
  v19 = (v18 & 0x80u) != 0;
  if ((v18 & 0x80u) == 0)
    v20 = &v40;
  else
    v20 = (std::string *)v40.__r_.__value_.__r.__words[0];
  v21 = v18 & 0x7F;
  if (v19)
    size = v40.__r_.__value_.__l.__size_;
  else
    size = v21;
  v42 = 0uLL;
  if (a2 > 0x7FFFFFFFFFFFFFF7)
LABEL_52:
    abort();
  if (a2 >= 0x17)
  {
    v29 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17)
      v29 = a2 | 7;
    v30 = v29 + 1;
    v23 = (__int128 *)operator new(v29 + 1);
    *((_QWORD *)&v43 + 1) = a2;
    v44 = v30 | 0x8000000000000000;
    *(_QWORD *)&v43 = v23;
    goto LABEL_19;
  }
  HIBYTE(v44) = a2;
  v23 = &v43;
  if (a2)
LABEL_19:
    memmove(v23, a1, a2);
  *((_BYTE *)v23 + a2) = 0;
  v45 = -1;
  v46 = 0;
  if (size > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_52;
  if (size >= 0x17)
  {
    v32 = (size & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((size | 7) != 0x17)
      v32 = size | 7;
    v33 = v32 + 1;
    v31 = (__int128 *)operator new(v32 + 1);
    *((_QWORD *)&v47 + 1) = size;
    v48 = v33 | 0x8000000000000000;
    *(_QWORD *)&v47 = v31;
    goto LABEL_27;
  }
  HIBYTE(v48) = size;
  v31 = &v47;
  if (size)
LABEL_27:
    memmove(v31, v20, size);
  *((_BYTE *)v31 + size) = 0;
  memset(v50, 0, sizeof(v50));
  v49 = 0u;
  v51[0] = (char *)&v52;
  v51[1] = (char *)0x400000000;
  *(_OWORD *)a3 = v42;
  v34 = (void **)(a3 + 16);
  if (*(char *)(a3 + 39) < 0)
    operator delete(*v34);
  *(_OWORD *)v34 = v43;
  *(_QWORD *)(a3 + 32) = v44;
  HIBYTE(v44) = 0;
  LOBYTE(v43) = 0;
  *(_QWORD *)(a3 + 40) = v45;
  *(_DWORD *)(a3 + 48) = v46;
  v35 = (void **)(a3 + 56);
  if (*(char *)(a3 + 79) < 0)
    operator delete(*v35);
  *(_OWORD *)v35 = v47;
  *(_QWORD *)(a3 + 72) = v48;
  HIBYTE(v48) = 0;
  LOBYTE(v47) = 0;
  v36 = (void **)(a3 + 80);
  if (*(char *)(a3 + 103) < 0)
    operator delete(*v36);
  *(_OWORD *)v36 = v49;
  *(_QWORD *)(a3 + 96) = v50[0];
  HIBYTE(v50[0]) = 0;
  LOBYTE(v49) = 0;
  v37 = *(void **)(a3 + 104);
  if (v37)
  {
    *(_QWORD *)(a3 + 112) = v37;
    operator delete(v37);
  }
  *(_OWORD *)(a3 + 104) = *(_OWORD *)&v50[1];
  *(_QWORD *)(a3 + 120) = v50[3];
  memset(&v50[1], 0, 24);
  sub_1C4FACD18(a3 + 128, (uint64_t)v51);
  sub_1C4FAD100(v51);
  if (v50[1])
  {
    v50[2] = v50[1];
    operator delete((void *)v50[1]);
  }
  if (SHIBYTE(v50[0]) < 0)
    operator delete((void *)v49);
  if (SHIBYTE(v48) < 0)
    operator delete((void *)v47);
  if (SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v40.__r_.__value_.__l.__data_);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v39.__r_.__value_.__l.__data_);
  *a7 = 0;
  if ((v54 & 1) == 0)
  {
LABEL_49:
    if (*(_QWORD *)&v53.__val_)
      (*(void (**)(_QWORD))(**(_QWORD **)&v53.__val_ + 8))(*(_QWORD *)&v53.__val_);
  }
}

uint64_t LLVMParseIRInContext(uint64_t a1, _QWORD *a2, _QWORD *a3, char **a4)
{
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  llvm::LLVMContextImpl ***v14;
  uint64_t v15;
  char v16;
  void **v17;
  llvm::LLVMContextImpl ***v19;
  int v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  int v26;
  void **v27;
  void *__p[2];
  uint64_t v29;
  unsigned __int8 *v30[4];
  __int128 v31;
  void *v32[2];
  __int128 v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char *v40[2];
  _QWORD v41[22];

  v41[21] = *MEMORY[0x1E0C80C00];
  v34 = 0;
  *(_OWORD *)v32 = 0u;
  v33 = 0u;
  v31 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0;
  v40[0] = (char *)v41;
  v40[1] = (char *)0x400000000;
  v8 = (unsigned __int8 *)a2[1];
  v9 = (unsigned __int8 *)(a2[2] - (_QWORD)v8);
  v10 = (unsigned __int8 *)(*(uint64_t (**)(_QWORD *))(*a2 + 16))(a2);
  v30[0] = v8;
  v30[1] = v9;
  v30[2] = v10;
  v30[3] = v11;
  llvm::parseIR(v30, (uint64_t)&v31, a1, (void (*)(void **__return_ptr, uint64_t, uint64_t, uint64_t))sub_1C577C2C4, (uint64_t)__p, v12, &v19);
  v13 = 0;
  v14 = v19;
  *a3 = v19;
  if (!v14)
  {
    if (a4)
    {
      __p[0] = 0;
      __p[1] = 0;
      v29 = 0;
      v20 = 0;
      v24 = 0;
      v25 = 0;
      v19 = (llvm::LLVMContextImpl ***)&unk_1E81A7208;
      v27 = __p;
      v26 = 0;
      v22 = 0;
      v23 = 0;
      v21 = 0;
      llvm::SMDiagnostic::print((llvm::SMDiagnostic *)&v31, 0, (llvm::raw_ostream *)&v19, 0, 1);
      v15 = v23 - v21;
      if (v23 != v21)
      {
        v23 = v21;
        llvm::raw_ostream::flush_tied_then_write((llvm::raw_ostream *)&v19, v21, v15);
      }
      v16 = HIBYTE(v29);
      if (v29 >= 0)
        v17 = __p;
      else
        v17 = (void **)__p[0];
      *a4 = strdup((const char *)v17);
      v19 = (llvm::LLVMContextImpl ***)off_1E81A6E70;
      if (v26 == 1 && v21)
      {
        MEMORY[0x1CAA32F9C](v21, 0x1000C8077774924);
        v16 = HIBYTE(v29);
      }
      if (v16 < 0)
        operator delete(__p[0]);
    }
    v13 = 1;
  }
  (*(void (**)(_QWORD *))(*a2 + 8))(a2);
  sub_1C4FAD100(v40);
  if ((_QWORD)v38)
  {
    *((_QWORD *)&v38 + 1) = v38;
    operator delete((void *)v38);
  }
  if (SHIBYTE(v37) < 0)
    operator delete(*((void **)&v36 + 1));
  if (SBYTE7(v36) < 0)
    operator delete((void *)v35);
  if (SBYTE7(v33) < 0)
    operator delete(v32[0]);
  return v13;
}

uint64_t sub_1C577BBCC(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v7;
  const void *v8;
  size_t v9;
  size_t v10;
  void **v11;
  size_t v12;
  __int128 *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  __int128 v23;
  int v24;
  void **v25;
  __int128 v26;
  void **v27;
  __int128 v28;
  void *v29;
  void *v30[2];
  char v31;
  __int128 v32;
  __int128 v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  __int128 v37;
  unint64_t v38;
  void *v39[2];
  void *__p[4];
  char *v41[2];
  _QWORD v42[22];

  v42[20] = *MEMORY[0x1E0C80C00];
  result = (*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*a2 + 48))(*a2, &llvm::ErrorInfoBase::ID);
  v7 = *a2;
  *a2 = 0;
  if (!(_DWORD)result)
  {
    *a1 = v7;
    return result;
  }
  v8 = (const void *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)a3[1] + 16))(*(_QWORD *)a3[1]);
  v10 = v9;
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)v7 + 24))(v30, v7);
  if (v31 >= 0)
    v11 = v30;
  else
    v11 = (void **)v30[0];
  if (v31 >= 0)
    v12 = v31 & 0x7F;
  else
    v12 = (size_t)v30[1];
  v32 = 0uLL;
  if (v10 > 0x7FFFFFFFFFFFFFF7)
LABEL_44:
    abort();
  if (v10 >= 0x17)
  {
    v14 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17)
      v14 = v10 | 7;
    v15 = a1;
    v16 = v14 + 1;
    v13 = (__int128 *)operator new(v14 + 1);
    v17 = v16 | 0x8000000000000000;
    a1 = v15;
    *((_QWORD *)&v33 + 1) = v10;
    v34 = v17;
    *(_QWORD *)&v33 = v13;
    goto LABEL_16;
  }
  HIBYTE(v34) = v10;
  v13 = &v33;
  if (v10)
LABEL_16:
    memmove(v13, v8, v10);
  *((_BYTE *)v13 + v10) = 0;
  v35 = -1;
  v36 = 0;
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_44;
  if (v12 >= 0x17)
  {
    v19 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v19 = v12 | 7;
    v20 = v19 + 1;
    v18 = (__int128 *)operator new(v19 + 1);
    *((_QWORD *)&v37 + 1) = v12;
    v38 = v20 | 0x8000000000000000;
    *(_QWORD *)&v37 = v18;
  }
  else
  {
    HIBYTE(v38) = v12;
    v18 = &v37;
    if (!v12)
      goto LABEL_25;
  }
  memmove(v18, v11, v12);
LABEL_25:
  *((_BYTE *)v18 + v12) = 0;
  *(_OWORD *)v39 = 0u;
  memset(__p, 0, sizeof(__p));
  v41[0] = (char *)v42;
  v41[1] = (char *)0x400000000;
  v21 = *a3;
  *(_OWORD *)v21 = v32;
  v22 = (void **)(v21 + 16);
  if (*(char *)(v21 + 39) < 0)
    operator delete(*v22);
  v23 = v33;
  *(_QWORD *)(v21 + 32) = v34;
  *(_OWORD *)v22 = v23;
  HIBYTE(v34) = 0;
  LOBYTE(v33) = 0;
  v24 = v36;
  *(_QWORD *)(v21 + 40) = v35;
  *(_DWORD *)(v21 + 48) = v24;
  v25 = (void **)(v21 + 56);
  if (*(char *)(v21 + 79) < 0)
    operator delete(*v25);
  v26 = v37;
  *(_QWORD *)(v21 + 72) = v38;
  *(_OWORD *)v25 = v26;
  HIBYTE(v38) = 0;
  LOBYTE(v37) = 0;
  v27 = (void **)(v21 + 80);
  if (*(char *)(v21 + 103) < 0)
    operator delete(*v27);
  v28 = *(_OWORD *)v39;
  *(void **)(v21 + 96) = __p[0];
  *(_OWORD *)v27 = v28;
  HIBYTE(__p[0]) = 0;
  LOBYTE(v39[0]) = 0;
  v29 = *(void **)(v21 + 104);
  if (v29)
  {
    *(_QWORD *)(v21 + 112) = v29;
    operator delete(v29);
    *(_QWORD *)(v21 + 104) = 0;
    *(_QWORD *)(v21 + 112) = 0;
    *(_QWORD *)(v21 + 120) = 0;
  }
  *(_OWORD *)(v21 + 104) = *(_OWORD *)&__p[1];
  *(void **)(v21 + 120) = __p[3];
  memset(&__p[1], 0, 24);
  sub_1C4FACD18(v21 + 128, (uint64_t)v41);
  sub_1C4FAD100(v41);
  if (__p[1])
  {
    __p[2] = __p[1];
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0)
    operator delete(v39[0]);
  if (SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v31 < 0)
    operator delete(v30[0]);
  *a1 = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
}

void sub_1C577BF4C(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[24] = 0;
}

uint64_t sub_1C577BF58(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  const void *v10;
  void **v11;
  size_t v12;
  __int128 *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  __int128 v23;
  int v24;
  void **v25;
  __int128 v26;
  void **v27;
  __int128 v28;
  void *v29;
  void *v30[2];
  char v31;
  __int128 v32;
  __int128 v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  __int128 v37;
  unint64_t v38;
  void *v39[2];
  void *__p[4];
  char *v41[2];
  _QWORD v42[22];

  v42[20] = *MEMORY[0x1E0C80C00];
  result = (*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*a2 + 48))(*a2, &llvm::ErrorInfoBase::ID);
  v7 = *a2;
  *a2 = 0;
  if (!(_DWORD)result)
  {
    *a1 = v7;
    return result;
  }
  v8 = a3[1];
  v10 = *(const void **)(v8 + 16);
  v9 = *(_QWORD *)(v8 + 24);
  (*(void (**)(void **__return_ptr, uint64_t))(*(_QWORD *)v7 + 24))(v30, v7);
  if (v31 >= 0)
    v11 = v30;
  else
    v11 = (void **)v30[0];
  if (v31 >= 0)
    v12 = v31 & 0x7F;
  else
    v12 = (size_t)v30[1];
  v32 = 0uLL;
  if (v9 > 0x7FFFFFFFFFFFFFF7)
LABEL_44:
    abort();
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = a1;
    v16 = v14 + 1;
    v13 = (__int128 *)operator new(v14 + 1);
    v17 = v16 | 0x8000000000000000;
    a1 = v15;
    *((_QWORD *)&v33 + 1) = v9;
    v34 = v17;
    *(_QWORD *)&v33 = v13;
    goto LABEL_16;
  }
  HIBYTE(v34) = v9;
  v13 = &v33;
  if (v9)
LABEL_16:
    memmove(v13, v10, v9);
  *((_BYTE *)v13 + v9) = 0;
  v35 = -1;
  v36 = 0;
  if (v12 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_44;
  if (v12 >= 0x17)
  {
    v19 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17)
      v19 = v12 | 7;
    v20 = v19 + 1;
    v18 = (__int128 *)operator new(v19 + 1);
    *((_QWORD *)&v37 + 1) = v12;
    v38 = v20 | 0x8000000000000000;
    *(_QWORD *)&v37 = v18;
  }
  else
  {
    HIBYTE(v38) = v12;
    v18 = &v37;
    if (!v12)
      goto LABEL_25;
  }
  memmove(v18, v11, v12);
LABEL_25:
  *((_BYTE *)v18 + v12) = 0;
  *(_OWORD *)v39 = 0u;
  memset(__p, 0, sizeof(__p));
  v41[0] = (char *)v42;
  v41[1] = (char *)0x400000000;
  v21 = *a3;
  *(_OWORD *)v21 = v32;
  v22 = (void **)(v21 + 16);
  if (*(char *)(v21 + 39) < 0)
    operator delete(*v22);
  v23 = v33;
  *(_QWORD *)(v21 + 32) = v34;
  *(_OWORD *)v22 = v23;
  HIBYTE(v34) = 0;
  LOBYTE(v33) = 0;
  v24 = v36;
  *(_QWORD *)(v21 + 40) = v35;
  *(_DWORD *)(v21 + 48) = v24;
  v25 = (void **)(v21 + 56);
  if (*(char *)(v21 + 79) < 0)
    operator delete(*v25);
  v26 = v37;
  *(_QWORD *)(v21 + 72) = v38;
  *(_OWORD *)v25 = v26;
  HIBYTE(v38) = 0;
  LOBYTE(v37) = 0;
  v27 = (void **)(v21 + 80);
  if (*(char *)(v21 + 103) < 0)
    operator delete(*v27);
  v28 = *(_OWORD *)v39;
  *(void **)(v21 + 96) = __p[0];
  *(_OWORD *)v27 = v28;
  HIBYTE(__p[0]) = 0;
  LOBYTE(v39[0]) = 0;
  v29 = *(void **)(v21 + 104);
  if (v29)
  {
    *(_QWORD *)(v21 + 112) = v29;
    operator delete(v29);
    *(_QWORD *)(v21 + 104) = 0;
    *(_QWORD *)(v21 + 112) = 0;
    *(_QWORD *)(v21 + 120) = 0;
  }
  *(_OWORD *)(v21 + 104) = *(_OWORD *)&__p[1];
  *(void **)(v21 + 120) = __p[3];
  memset(&__p[1], 0, 24);
  sub_1C4FACD18(v21 + 128, (uint64_t)v41);
  sub_1C4FAD100(v41);
  if (__p[1])
  {
    __p[2] = __p[1];
    operator delete(__p[1]);
  }
  if (SHIBYTE(__p[0]) < 0)
    operator delete(v39[0]);
  if (SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v31 < 0)
    operator delete(v30[0]);
  *a1 = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
}

void sub_1C577C2C4(_BYTE *a1@<X8>)
{
  *a1 = 0;
  a1[24] = 0;
}

uint64_t sub_1C577C2D0(llvm *a1)
{
  llvm::PassRegistry *v2;
  llvm::PassRegistry *v3;
  llvm::PassRegistry *v4;
  llvm::PassRegistry *v5;
  llvm::PassRegistry *v6;
  uint64_t v7;

  llvm::initializeAssumptionCacheTrackerPass((uint64_t)a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeTargetTransformInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeDominatorTreeWrapperPassPass((uint64_t)a1);
  llvm::initializeAAResultsWrapperPassPass(a1, v2);
  llvm::initializeGlobalsAAWrapperPassPass(a1, v3);
  llvm::initializeOptimizationRemarkEmitterWrapperPassPass(a1, v4);
  llvm::initializeLazyBlockFrequencyInfoPassPass(a1, v5);
  llvm::initializeProfileSummaryInfoWrapperPassPass(a1, v6);
  v7 = operator new();
  *(_QWORD *)v7 = "Combine redundant instructions";
  *(_QWORD *)(v7 + 8) = 30;
  *(_QWORD *)(v7 + 16) = "agx-instcombine";
  *(_QWORD *)(v7 + 24) = 15;
  *(_QWORD *)(v7 + 32) = &unk_1ED810A70;
  *(_WORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 42) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)(v7 + 64) = 0;
  *(_QWORD *)(v7 + 72) = sub_1C577C4C8;
  llvm::PassRegistry::registerPass((uint64_t)a1, (_QWORD *)v7, 1);
  return v7;
}

uint64_t sub_1C577C3A4(uint64_t a1)
{
  uint64_t v2;
  int64x2_t v3;
  unint64_t v5;
  unint64_t v7;
  _QWORD *v8;
  _QWORD v9[2];

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = &unk_1ED810A70;
  *(_DWORD *)(a1 + 24) = 2;
  *(_QWORD *)a1 = off_1E817D170;
  *(_QWORD *)(a1 + 32) = a1 + 48;
  *(_QWORD *)(a1 + 40) = 0x10000000000;
  *(_OWORD *)(a1 + 2096) = 0u;
  *(_DWORD *)(a1 + 2112) = 0;
  *(_QWORD *)(a1 + 2120) = 1;
  v2 = 2128;
  v3 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)(a1 + v2) = v3;
    v2 += 16;
  }
  while (v2 != 2256);
  *(_QWORD *)(a1 + 2256) = a1 + 2272;
  *(_QWORD *)(a1 + 2264) = 0x1000000000;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v7 = qword_1ED830BC0[0];
  v5 = atomic_load(&qword_1ED810A78);
  if (v5 != -1)
  {
    v9[0] = sub_1C577C2D0;
    v9[1] = &v7;
    v8 = v9;
    std::__call_once(&qword_1ED810A78, &v8, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return a1;
}

uint64_t sub_1C577C4C8()
{
  uint64_t v0;

  v0 = operator new();
  return sub_1C577C3A4(v0);
}

void sub_1C577C4F0(uint64_t a1)
{
  void *v2;
  void *v3;

  *(_QWORD *)a1 = off_1E817D170;
  v2 = *(void **)(a1 + 2256);
  if (v2 != (void *)(a1 + 2272))
    free(v2);
  if ((*(_BYTE *)(a1 + 2120) & 1) == 0)
    MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 2128), 8);
  MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 2096), 8);
  v3 = *(void **)(a1 + 32);
  if (v3 != (void *)(a1 + 48))
    free(v3);
  llvm::Pass::~Pass((llvm::Pass *)a1);
}

void sub_1C577C570(uint64_t a1)
{
  void *v2;
  void *v3;

  *(_QWORD *)a1 = off_1E817D170;
  v2 = *(void **)(a1 + 2256);
  if (v2 != (void *)(a1 + 2272))
    free(v2);
  if ((*(_BYTE *)(a1 + 2120) & 1) == 0)
    MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 2128), 8);
  MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 2096), 8);
  v3 = *(void **)(a1 + 32);
  if (v3 != (void *)(a1 + 48))
    free(v3);
  llvm::Pass::~Pass((llvm::Pass *)a1);
  JUMPOUT(0x1CAA32FC0);
}

llvm::AnalysisUsage *sub_1C577C604(int a1, llvm::AnalysisUsage *this)
{
  llvm::AnalysisUsage *v3;

  llvm::AnalysisUsage::setPreservesCFG(this);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)&llvm::AAResultsWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)llvm::AssumptionCacheTracker::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)llvm::TargetLibraryInfoWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)llvm::TargetTransformInfoWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)&llvm::OptimizationRemarkEmitterWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this + 112, (uint64_t)&llvm::DominatorTreeWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this + 112, (uint64_t)&llvm::AAResultsWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this + 112, (uint64_t)&llvm::BasicAAWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this + 112, (uint64_t)&llvm::GlobalsAAWrapperPass::ID);
  sub_1C4771E64((uint64_t)this, (uint64_t)this, (uint64_t)llvm::ProfileSummaryInfoWrapperPass::ID);
  return llvm::LazyBlockFrequencyInfoPass::getLazyBFIAnalysisUsage(this, v3);
}

uint64_t sub_1C577C714(uint64_t a1, const llvm::Function *a2)
{
  unint64_t v2;
  uint64_t v5;
  void **v6;
  void *v7;
  uint64_t v8;
  char **v9;
  char *v10;
  llvm::AssumptionCacheTracker *v11;
  uint64_t AssumptionCache;
  char **v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  void **v17;
  void **v18;
  uint64_t v19;
  char **v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)();
  uint64_t v25;
  uint64_t (**v26)();
  void **v27;
  void *v28;
  uint64_t v29;
  void **v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AnalysisPass;
  char **v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unsigned int v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *i;
  _QWORD *v47;
  int v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  int v52;
  char *v53;
  uint64_t (**v54)();
  uint64_t (**v55)();
  int v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  uint64_t (***v60)();
  uint64_t (**v61)();
  uint64_t (***v62)();
  int v63;
  BOOL v64;
  unsigned int v65;
  uint64_t (***v66)();
  _QWORD *v67;
  unint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  char **v73;
  char *v74;
  uint64_t v75;
  void *v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t (**v87)();
  unint64_t v88;
  uint64_t v89;
  void **v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  void **v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void **v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int16 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  void *v109;
  uint64_t v110;
  _BYTE v111[32];
  _QWORD v112[5];
  _QWORD v113[4];
  void *v114;
  void *__src;
  unsigned int v116;
  _QWORD v117[2];
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  void (***v123)(llvm::IRBuilderCallbackInserter *__hidden);
  uint64_t v124;
  int v125;
  __int16 v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD v130[2];
  void (**v131)(llvm::IRBuilderCallbackInserter *__hidden);
  _QWORD v132[3];
  _QWORD *v133;
  uint64_t v134;

  v134 = *MEMORY[0x1E0C80C00];
  if ((llvm::FunctionPass::skipFunction((llvm::FunctionPass *)a1, a2) & 1) != 0)
    return 0;
  v6 = **(void ****)(a1 + 8);
  do
  {
    v7 = *v6;
    v6 += 2;
  }
  while (v7 != &llvm::AAResultsWrapperPass::ID);
  v8 = *(_QWORD *)((*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v6 - 1) + 96))(*(v6 - 1), &llvm::AAResultsWrapperPass::ID)+ 32);
  v9 = **(char ****)(a1 + 8);
  do
  {
    v10 = *v9;
    v9 += 2;
  }
  while (v10 != llvm::AssumptionCacheTracker::ID);
  v11 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v9 - 1) + 96))(*(v9 - 1), llvm::AssumptionCacheTracker::ID);
  AssumptionCache = llvm::AssumptionCacheTracker::getAssumptionCache(v11, a2);
  v13 = **(char ****)(a1 + 8);
  do
  {
    v14 = *v13;
    v13 += 2;
  }
  while (v14 != llvm::TargetLibraryInfoWrapperPass::ID);
  v15 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v13 - 1) + 96))(*(v13 - 1), llvm::TargetLibraryInfoWrapperPass::ID);
  v16 = (uint64_t *)&v90;
  v87 = 0;
  v88 = 0;
  LODWORD(v89) = 0;
  v90 = 0;
  v91 = 0;
  v92 = 0;
  v93 = 0;
  v94 = 0;
  LODWORD(v95) = 0;
  llvm::TargetLibraryAnalysis::run(v15 + 32, (uint64_t)a2, (uint64_t)&v114);
  *(_QWORD *)(v15 + 240) = v114;
  v17 = (void **)(v15 + 240);
  if (*(_BYTE *)(v15 + 320))
  {
    if (v17 == &v114)
    {
LABEL_22:
      *(_DWORD *)(v15 + 312) = (_DWORD)v122;
      goto LABEL_23;
    }
    v18 = (void **)(v15 + 248);
    v2 = v116;
    v19 = *(unsigned int *)(v15 + 256);
    if (v19 >= v116)
    {
      if (v116)
        memmove(*v18, __src, 8 * v116);
      goto LABEL_21;
    }
    if (*(_DWORD *)(v15 + 260) < v116)
    {
      *(_DWORD *)(v15 + 256) = 0;
      llvm::SmallVectorBase<unsigned int>::grow_pod(v15 + 248, v15 + 264, v2, 8);
    }
    else if ((_DWORD)v19)
    {
      memmove(*v18, __src, 8 * v19);
      goto LABEL_19;
    }
    v19 = 0;
LABEL_19:
    if (v19 != v116)
      memcpy((char *)*v18 + 8 * v19, (char *)__src + 8 * v19, 8 * v116 - 8 * v19);
LABEL_21:
    *(_DWORD *)(v15 + 256) = v2;
    goto LABEL_22;
  }
  v76 = (void *)(v15 + 264);
  *(_QWORD *)(v15 + 248) = v15 + 264;
  v77 = (void **)(v15 + 248);
  *(_QWORD *)(v15 + 256) = 0x600000000;
  v2 = v116;
  if (v116 && v77 != &__src)
  {
    if (v116 >= 7)
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(v15 + 248, v15 + 264, v116, 8);
      v78 = v116;
      if (!v116)
      {
LABEL_111:
        *(_DWORD *)(v15 + 256) = v2;
        goto LABEL_112;
      }
      v76 = *v77;
    }
    else
    {
      v78 = v116;
    }
    memcpy(v76, __src, 8 * v78);
    goto LABEL_111;
  }
LABEL_112:
  *(_DWORD *)(v15 + 312) = (_DWORD)v122;
  *(_BYTE *)(v15 + 320) = 1;
LABEL_23:
  if (__src != v117)
    free(__src);
  MEMORY[0x1CAA32FB4](v93, 8);
  sub_1C4D8B440((uint64_t *)&v90);
  sub_1C4D8B52C((uint64_t *)&v87);
  v20 = **(char ****)(a1 + 8);
  do
  {
    v21 = *v20;
    v20 += 2;
  }
  while (v21 != llvm::TargetTransformInfoWrapperPass::ID);
  v22 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v20 - 1) + 96))(*(v20 - 1), llvm::TargetTransformInfoWrapperPass::ID);
  v114 = 0;
  __src = 0;
  v116 = 0;
  v117[0] = 0;
  v117[1] = 0;
  v118 = 0;
  v119 = 0;
  v120 = 0;
  LODWORD(v121) = 0;
  v23 = *(_QWORD *)(v22 + 56);
  if (v23)
  {
    v16 = v117;
    (*(void (**)(uint64_t (***__return_ptr)(), uint64_t, const llvm::Function *))(*(_QWORD *)v23 + 48))(&v87, v23, a2);
    v2 = v22 + 64;
    v24 = v87;
    if (!*(_BYTE *)(v22 + 72))
    {
      *(_QWORD *)(v22 + 64) = v87;
      *(_BYTE *)(v22 + 72) = 1;
      goto LABEL_31;
    }
    v87 = 0;
    v25 = *(_QWORD *)v2;
    *(_QWORD *)v2 = v24;
    if (!v25)
      goto LABEL_31;
    (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
    v26 = v87;
    v87 = 0;
    if (!v26)
      goto LABEL_31;
  }
  else
  {
    sub_1C485C2F0();
  }
  (*((void (**)(uint64_t (**)()))*v26 + 1))(v26);
LABEL_31:
  MEMORY[0x1CAA32FB4](0, 8);
  sub_1C4D8B440(v16);
  sub_1C4D8B52C((uint64_t *)&v114);
  v27 = **(void ****)(a1 + 8);
  do
  {
    v28 = *v27;
    v27 += 2;
  }
  while (v28 != &llvm::DominatorTreeWrapperPass::ID);
  v29 = (*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v27 - 1) + 96))(*(v27 - 1), &llvm::DominatorTreeWrapperPass::ID);
  v30 = **(void ****)(a1 + 8);
  do
  {
    v31 = *v30;
    v30 += 2;
  }
  while (v31 != &llvm::OptimizationRemarkEmitterWrapperPass::ID);
  v32 = v29 + 32;
  v85 = *(_QWORD *)((*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v30 - 1) + 96))(*(v30 - 1), &llvm::OptimizationRemarkEmitterWrapperPass::ID)+ 32);
  v33 = *(_QWORD *)(a1 + 8);
  AnalysisPass = llvm::PMDataManager::findAnalysisPass(*(llvm::PMDataManager **)(v33 + 24), llvm::LoopInfoWrapperPass::ID, 1);
  if (AnalysisPass)
  {
    AnalysisPass = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)AnalysisPass + 96))(AnalysisPass, llvm::LoopInfoWrapperPass::ID);
    v33 = *(_QWORD *)(a1 + 8);
  }
  v35 = *(char ***)v33;
  do
  {
    v36 = *v35;
    v35 += 2;
  }
  while (v36 != llvm::ProfileSummaryInfoWrapperPass::ID);
  v37 = AnalysisPass + 32;
  if (!AnalysisPass)
    v37 = 0;
  v84 = v37;
  v38 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v35 - 1) + 96))(*(v35 - 1), llvm::ProfileSummaryInfoWrapperPass::ID);
  v39 = 0;
  v83 = *(_QWORD *)(v38 + 32);
  if (*(_QWORD *)(v83 + 8))
  {
    v73 = **(char ****)(a1 + 8);
    do
    {
      v74 = *v73;
      v73 += 2;
    }
    while (v74 != llvm::LazyBlockFrequencyInfoPass::ID);
    v75 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v73 - 1) + 96))(*(v73 - 1), llvm::LazyBlockFrequencyInfoPass::ID);
    v39 = sub_1C619C0A4(v75 + 32);
  }
  v82 = v39;
  v86 = v2;
  v40 = *((_QWORD *)a2 + 5) + 272;
  v41 = **(_QWORD **)a2;
  v112[0] = &off_1E817D210;
  v112[3] = v112;
  v113[3] = v113;
  v114 = &v116;
  __src = (void *)0x200000000;
  v121 = v41;
  v122 = v130;
  v123 = &v131;
  v124 = 0;
  v125 = 0;
  v126 = 512;
  v127 = 7;
  v119 = 0;
  v120 = 0;
  v128 = 0;
  v129 = 0;
  v130[0] = &unk_1E8135C10;
  v130[1] = v40;
  v133 = v132;
  v131 = &off_1E8167568;
  v132[0] = &off_1E817D210;
  v112[4] = &off_1E8167568;
  v113[0] = &off_1E817D210;
  v109 = v111;
  v110 = 0x400000000;
  v42 = (_QWORD *)*((_QWORD *)a2 + 10);
  if (v42 == (_QWORD *)((char *)a2 + 72))
  {
    v5 = 0;
    goto LABEL_94;
  }
  v81 = v8;
  v79 = v32;
  v80 = AssumptionCache;
  v43 = 0;
  do
  {
    v44 = v42 - 3;
    if (!v42)
      v44 = 0;
    v45 = v44 + 5;
    for (i = (_QWORD *)v44[6]; i != v45; i = (_QWORD *)i[1])
    {
      v47 = i - 3;
      if (!i)
        v47 = 0;
      v48 = *((unsigned __int8 *)v47 + 16);
      if (v48 == 84)
        v49 = v47;
      else
        v49 = 0;
      if (i)
      {
        if (v48 == 84)
        {
          v50 = *(v47 - 4);
          if (!v50 || *(_BYTE *)(v50 + 16) || *(_QWORD *)(v50 + 24) != v47[9] || (*(_BYTE *)(v50 + 33) & 0x20) == 0)
          {
            if (*(_BYTE *)(*(v49 - 4) + 16))
            {
              if (v43 >= HIDWORD(v110))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v109, (uint64_t)v111, v43 + 1, 8);
                v43 = v110;
              }
              *((_QWORD *)v109 + v43) = v49;
              v43 = v110 + 1;
              LODWORD(v110) = v110 + 1;
            }
          }
        }
      }
    }
    v42 = (_QWORD *)v42[1];
  }
  while (v42 != (_QWORD *)((char *)a2 + 72));
  v51 = (char *)v109;
  if (!v43)
  {
    v5 = 0;
    goto LABEL_92;
  }
  v52 = *(_DWORD *)(a1 + 40);
  v53 = (char *)v109 + 8 * v43;
  do
  {
    v55 = (uint64_t (**)())*((_QWORD *)v53 - 1);
    v53 -= 8;
    v54 = v55;
    v87 = v55;
    LODWORD(v88) = v52;
    v56 = *(_DWORD *)(a1 + 2112);
    if (v56)
    {
      v57 = *(_QWORD *)(a1 + 2096);
      v58 = v56 - 1;
      v59 = v58 & ((v54 >> 4) ^ (v54 >> 9));
      v60 = (uint64_t (***)())(v57 + 16 * v59);
      v61 = *v60;
      if (*v60 == v54)
        continue;
      v62 = 0;
      v63 = 1;
      while (v61 != (uint64_t (**)())-4096)
      {
        if (v62)
          v64 = 0;
        else
          v64 = v61 == (uint64_t (**)())-8192;
        if (v64)
          v62 = v60;
        v65 = v59 + v63++;
        v59 = v65 & v58;
        v60 = (uint64_t (***)())(v57 + 16 * v59);
        v61 = *v60;
        if (*v60 == v54)
          goto LABEL_84;
      }
      if (v62)
        v66 = v62;
      else
        v66 = v60;
    }
    else
    {
      v66 = 0;
    }
    v67 = sub_1C4D8D8F4((_DWORD *)(a1 + 2096), (uint64_t)&v87, (uint64_t *)&v87, v66);
    *v67 = v87;
    *((_DWORD *)v67 + 2) = v88;
    v68 = *(unsigned int *)(a1 + 40);
    if (v68 >= *(unsigned int *)(a1 + 44))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(a1 + 32, a1 + 48, v68 + 1, 8);
      v68 = *(unsigned int *)(a1 + 40);
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * v68) = v54;
    v52 = *(_DWORD *)(a1 + 40) + 1;
    *(_DWORD *)(a1 + 40) = v52;
LABEL_84:
    ;
  }
  while (v53 != v51);
  v69 = (_QWORD *)*((_QWORD *)a2 + 14);
  if (v69)
    LOBYTE(v69) = *((char *)v69 + 13) < 0;
  v89 = 0;
  v90 = &v114;
  v91 = a1 + 32;
  LOBYTE(v92) = (_BYTE)v69;
  v93 = v81;
  v94 = v80;
  v95 = v17;
  v96 = v79;
  v97 = v40;
  v98 = v40;
  v99 = v17;
  v100 = v79;
  v101 = v80;
  v102 = 0;
  v103 = 257;
  v104 = v85;
  v105 = v82;
  v106 = v83;
  v107 = v84;
  v108 = 0;
  v87 = &off_1E817D460;
  v88 = v86;
  v5 = sub_1C5788E44((uint64_t)&v87);
  v51 = (char *)v109;
LABEL_92:
  if (v51 != v111)
    free(v51);
LABEL_94:
  v131 = &off_1E8167568;
  v70 = v133;
  if (v133 == v132)
  {
    v71 = 4;
    v70 = v132;
    goto LABEL_96;
  }
  if (v133)
  {
    v71 = 5;
LABEL_96:
    (*(void (**)(void))(*v70 + 8 * v71))();
  }
  if (v114 != &v116)
    free(v114);
  return v5;
}

void sub_1C577CFD8()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C577CFEC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E817D210;
  return result;
}

void sub_1C577D010(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E817D210;
}

unint64_t sub_1C577D02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  size_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  void *v17;
  unsigned int v18;

  v3 = a2;
  if (*(_DWORD *)(*(_QWORD *)(a2 - 32) + 36) < 0x182u)
  {
    v9 = 0;
    LOBYTE(v8) = 0;
  }
  else
  {
    v4 = a1;
    v5 = *(uint64_t **)(a1 + 8);
    v6 = *(unsigned int *)(a3 + 8);
    v18 = v6;
    if (v6 > 0x40)
    {
      v11 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
      v14 = v4;
      v15 = v5;
      v13 = v3;
      v7 = (void *)operator new[]();
      memcpy(v7, *(const void **)a3, v11);
      v4 = v14;
      v5 = v15;
      v3 = v13;
    }
    else
    {
      v7 = *(void **)a3;
    }
    v17 = v7;
    v8 = llvm::TargetTransformInfo::simplifyDemandedUseBitsIntrinsic(v5, v4, v3, (uint64_t)&v17);
    v9 = v8 >> 8;
    if (v18 >= 0x41)
    {
      v16 = v8;
      if (v17)
        MEMORY[0x1CAA32F9C](v17, 0x1000C8000313F17);
      LOBYTE(v8) = v16;
    }
  }
  return v8 | (v9 << 8);
}

unint64_t sub_1C577D148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  unint64_t v16;
  unsigned __int8 v17;
  unint64_t v18;
  _QWORD *v19;
  void (**v20)(_QWORD *);
  size_t v22;
  _QWORD *v24;
  void *v25;
  unsigned int v26;
  _QWORD v27[3];
  _QWORD *v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(*(_QWORD *)(a2 - 32) + 36) < 0x182u)
  {
    v18 = 0;
    v17 = 0;
    return v17 | (v18 << 8);
  }
  v12 = *(uint64_t **)(a1 + 8);
  v13 = *(unsigned int *)(a3 + 8);
  v26 = v13;
  if (v13 > 0x40)
  {
    v22 = ((unint64_t)(v13 + 63) >> 3) & 0x3FFFFFF8;
    v24 = a7;
    v14 = (void *)operator new[]();
    memcpy(v14, *(const void **)a3, v22);
    a7 = v24;
  }
  else
  {
    v14 = *(void **)a3;
  }
  v25 = v14;
  v15 = (_QWORD *)a7[3];
  if (v15)
  {
    if (v15 == a7)
    {
      v28 = v27;
      (*(void (**)(_QWORD *, _QWORD *))(*a7 + 24))(a7, v27);
    }
    else
    {
      v28 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v15 + 16))(v15);
    }
  }
  else
  {
    v28 = 0;
  }
  v16 = llvm::TargetTransformInfo::simplifyDemandedVectorEltsIntrinsic(v12, a1, a2, (uint64_t)&v25, a4, a5, a6, v27);
  v17 = v16;
  v18 = v16 >> 8;
  v19 = v28;
  if (v28 == v27)
  {
    v20 = (void (**)(_QWORD *))(v27[0] + 32);
    v19 = v27;
  }
  else
  {
    if (!v28)
      goto LABEL_10;
    v20 = (void (**)(_QWORD *))(*v28 + 40);
  }
  (*v20)(v19);
LABEL_10:
  if (v26 >= 0x41 && v25)
    MEMORY[0x1CAA32F9C](v25, 0x1000C8000313F17);
  return v17 | (v18 << 8);
}

BOOL sub_1C577D338(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;

  if (a2 <= 0x20 && ((1 << a2) & 0x100010100) != 0)
    return 1;
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(char **)(v3 + 40);
  v6 = &v5[v4];
  if (a2 <= 0xFF)
  {
    v7 = (char *)memchr(*(void **)(v3 + 32), (char)a2, *(_QWORD *)(v3 + 40));
    if (v7)
      v6 = v7;
  }
  return &v6[-v4] != v5;
}

uint64_t sub_1C577D3C0(uint64_t a1, unsigned int a2, unsigned int a3)
{
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  unsigned int v19;

  if (a2 == 1)
  {
    v6 = 1;
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 80);
    v8 = *(_QWORD *)(v7 + 32);
    v9 = *(char **)(v7 + 40);
    v10 = &v9[v8];
    if (a2 <= 0xFF)
    {
      v11 = (char *)memchr(*(void **)(v7 + 32), (char)a2, *(_QWORD *)(v7 + 40));
      if (v11)
        v10 = v11;
    }
    v6 = &v10[-v8] != v9;
  }
  if (a3 == 1)
  {
    v12 = 1;
  }
  else
  {
    v13 = *(_QWORD *)(a1 + 80);
    v14 = *(_QWORD *)(v13 + 32);
    v15 = *(char **)(v13 + 40);
    v16 = &v15[v14];
    if (a3 <= 0xFF)
    {
      v17 = (char *)memchr(*(void **)(v13 + 32), (char)a3, *(_QWORD *)(v13 + 40));
      if (v17)
        v16 = v17;
    }
    v12 = &v16[-v14] != v15;
  }
  if (a3 < a2 && sub_1C577D338(a1, a3))
    return 1;
  v19 = v6 || v12;
  if (a3 <= a2)
    v19 = 1;
  if (!v6 || v12)
    return v19;
  else
    return 0;
}

uint64_t ***sub_1C577D4C8(uint64_t a1, uint64_t a2)
{
  uint64_t ***result;
  uint64_t v5;
  uint64_t PointerTypeSizeInBits;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  llvm::Instruction *v18;
  uint64_t v19;
  uint64_t v20;
  llvm::CastInst *v21;
  _BYTE v22[32];
  __int16 v23;

  result = 0;
  if (a2 && *(_BYTE *)(a2 + 16) == 76)
  {
    v5 = *(_QWORD *)(a1 + 80);
    PointerTypeSizeInBits = llvm::DataLayout::getPointerTypeSizeInBits(v5, *(_QWORD *)a2);
    sub_1C4768AD0(v5, **(_QWORD **)(a2 - 32));
    v9 = v8;
    if ((_DWORD)v7 == 1)
    if (v9 != PointerTypeSizeInBits)
      return 0;
    result = 0;
    v10 = *(_QWORD *)(a2 - 32);
    if (v10 && *(_BYTE *)(v10 + 16) == 75)
    {
      v11 = *(_QWORD *)a2;
      v12 = *(_DWORD *)(v11 + 8);
      if ((v12 & 0xFE) == 0x12)
        v12 = *(_DWORD *)(**(_QWORD **)(v11 + 16) + 8);
      v13 = **(_QWORD **)(v10 - 32);
      v14 = *(_DWORD *)(v13 + 8);
      if ((v14 & 0xFE) == 0x12)
        v14 = *(_DWORD *)(**(_QWORD **)(v13 + 16) + 8);
      if ((v14 ^ v12) <= 0xFF)
      {
        v15 = *(_QWORD *)(a1 + 80);
        v16 = llvm::DataLayout::getPointerTypeSizeInBits(v15, v13);
        sub_1C4768AD0(v15, *(_QWORD *)v10);
        v20 = v19;
        if ((_DWORD)v17 == 1)
        if (v20 == v16)
        {
          v21 = *(llvm::CastInst **)(v10 - 32);
          v23 = 257;
          return llvm::CastInst::CreateBitOrPointerCast(v21, (llvm::Value *)v11, (llvm::Type *)v22, (const llvm::Twine *)v10, v18);
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C577D620(uint64_t a1, llvm::Instruction *this)
{
  char v3;
  int v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  llvm *v44;
  llvm::Constant *v45;
  llvm::UndefValue *v46;
  llvm::Constant *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  llvm::Instruction *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unint64_t v64;
  int v65;
  char *v66;
  llvm::Value *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  llvm::Constant *v75;
  uint64_t v76;
  unsigned int v77;
  unint64_t v78;
  int v79;
  BOOL v80;
  int v81;
  unsigned __int8 v82;
  uint64_t v83;
  int v84;
  unsigned int v85;
  char *v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unsigned int v94;
  unint64_t v95;
  _QWORD **v96;
  uint64_t v97;
  _QWORD **v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  llvm::Constant *v103;
  char *v104;
  char *v105;
  unsigned int v106;
  uint64_t *v108;
  _OWORD *v109;
  unsigned int v110;
  llvm *v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  unsigned int v115;
  const llvm::APInt *v116;
  const void **v117;
  BOOL v118[16];
  _BYTE v119[40];
  uint64_t v120;
  const llvm::APInt **v121;
  llvm::UndefValue *v122;
  __int16 v123;
  uint64_t v124;

  v3 = 0;
  v124 = *MEMORY[0x1E0C80C00];
  v4 = *((unsigned __int8 *)this + 16);
  v110 = v4 - 28;
  v5 = (uint64_t *)((char *)this - 64);
  v6 = (uint64_t *)((char *)this - 32);
  v108 = (uint64_t *)((char *)this - 32);
  v109 = (_OWORD *)(a1 + 88);
  HIDWORD(v7) = v4 - 41;
  LODWORD(v7) = v4 - 41;
  v106 = v7 >> 1;
  v104 = (char *)this - 56;
  v105 = (char *)this - 24;
  v111 = (llvm::Instruction *)((char *)this - 64);
  while (2)
  {
    while (2)
    {
      if (llvm::Instruction::isCommutative(this))
      {
        v8 = sub_1C577E1A0(*v5);
        if (v8 < sub_1C577E1A0(*v6))
        {
          if (llvm::Instruction::isCommutative(this))
          {
            v9 = *v6;
            if (*v5 != *v6)
            {
              *((_QWORD *)this - 4) = *v5;
              v10 = *((_QWORD *)this - 3);
              v11 = (uint64_t **)*((_QWORD *)this - 2);
              v12 = *(_OWORD *)((char *)this - 56);
              *((_QWORD *)this - 8) = v9;
              *((_QWORD *)this - 7) = v10;
              *((_QWORD *)this - 6) = v11;
              *(_OWORD *)((char *)this - 24) = v12;
              *v11 = v5;
              v13 = *((_QWORD *)this - 7);
              if (v13)
                *(_QWORD *)(v13 + 16) = v104;
              **((_QWORD **)this - 2) = v6;
              v14 = *((_QWORD *)this - 3);
              if (v14)
                *(_QWORD *)(v14 + 16) = v105;
            }
            v3 = 1;
          }
          else
          {
            v3 = 0;
          }
        }
      }
      v15 = *((_QWORD *)this - 8);
      v16 = *(unsigned __int8 *)(v15 + 16);
      v17 = v16 - 41 < 0x12 && v16 > 0x1B;
      if (v17)
        v18 = *((_QWORD *)this - 8);
      else
        v18 = 0;
      v19 = (unsigned __int8 *)*((_QWORD *)this - 4);
      v20 = v19[16];
      if (v20 - 41 < 0x12 && v20 > 0x1B)
        v22 = *((_QWORD *)this - 4);
      else
        v22 = 0;
      v23 = *((unsigned __int8 *)this + 16);
      switch(*((_BYTE *)this + 16))
      {
        case ')':
        case '-':
          goto LABEL_25;
        case '*':
        case '.':
          if ((~*((unsigned __int8 *)this + 17) & 0x12) == 0)
            goto LABEL_25;
          goto LABEL_35;
        case '+':
        case ',':
          break;
        default:
          if ((v23 - 56) >= 3)
            break;
LABEL_25:
          if (v18)
          {
            if (*(unsigned __int8 *)(v18 + 16) == v4)
            {
              v24 = *(_QWORD *)(v18 - 64);
              v25 = *(unsigned __int8 **)(v18 - 32);
              v26 = v109[2];
              *(_OWORD *)v119 = v109[1];
              *(_OWORD *)&v119[16] = v26;
              *(_OWORD *)v118 = *v109;
              *(_QWORD *)&v119[16] = this;
              v27 = sub_1C4E6D628(v110);
              if (v27)
              {
                v28 = v27;
                sub_1C577E2C8(a1, (uint64_t)this, 0, v24);
                sub_1C577E2C8(a1, (uint64_t)this, 1u, v28);
                v29 = 0;
                v30 = *((unsigned __int8 *)this + 16);
                HIDWORD(v32) = v30 - 41;
                LODWORD(v32) = v30 - 41;
                v31 = v32 >> 1;
                if (v31 <= 6 && ((1 << v31) & 0x47) != 0)
                {
                  if ((*((_BYTE *)this + 17) & 2) == 0
                    || ((HIDWORD(v78) = *(unsigned __int8 *)(v18 + 16) - 41,
                         LODWORD(v78) = HIDWORD(v78),
                         v77 = v78 >> 1,
                         v17 = v77 > 6,
                         v79 = (1 << v77) & 0x47,
                         !v17)
                      ? (v80 = v79 == 0)
                      : (v80 = 1),
                        v80))
                  {
                    v29 = 0;
                  }
                  else
                  {
                    v29 = (*(unsigned __int8 *)(v15 + 17) >> 1) & 1;
                  }
                }
                if (v31 > 6
                  || ((1 << v31) & 0x47) == 0
                  || (*((_BYTE *)this + 17) & 4) == 0
                  || (v81 = v30 - 28, ((v30 - 28) & 0xFFFFFFFD) != 0xD))
                {
                  v84 = 0;
                  v5 = (uint64_t *)v111;
                  v6 = v108;
                  goto LABEL_120;
                }
                v116 = 0;
                v117 = 0;
                *(_QWORD *)v118 = &v117;
                *(_QWORD *)&v118[8] = 0;
                if (!sub_1C4D89F84((uint64_t)v118, v25))
                {
                  v6 = v108;
LABEL_140:
                  v84 = 0;
LABEL_141:
                  v5 = (uint64_t *)v111;
                  goto LABEL_120;
                }
                v121 = &v116;
                v122 = 0;
                v82 = sub_1C4D89F84((uint64_t)&v121, v19);
                v6 = v108;
                if ((v82 & 1) == 0)
                  goto LABEL_140;
                v118[0] = 0;
                if (v81 == 13)
                {
                  llvm::APInt::sadd_ov(v117, v116, v118, (uint64_t)&v114);
                  if (v115 >= 0x41)
                  {
                    v83 = v114;
                    if (v114)
                      goto LABEL_138;
                  }
                }
                else
                {
                  llvm::APInt::ssub_ov(v117, v116, v118, (uint64_t)&v112);
                  if (v113 >= 0x41)
                  {
                    v83 = v112;
                    if (v112)
LABEL_138:
                      MEMORY[0x1CAA32F9C](v83, 0x1000C8000313F17);
                  }
                }
                if (v118[0])
                  goto LABEL_140;
                v84 = 0;
                HIDWORD(v95) = *(unsigned __int8 *)(v18 + 16) - 41;
                LODWORD(v95) = HIDWORD(v95);
                v94 = v95 >> 1;
                if (v94 > 6)
                  goto LABEL_141;
                v5 = (uint64_t *)v111;
                if (((1 << v94) & 0x47) != 0)
                  v84 = (*(unsigned __int8 *)(v15 + 17) >> 2) & 1;
LABEL_120:
                if (!sub_1C4774A9C((uint64_t)this))
                  *((_BYTE *)this + 17) &= 1u;
                if (v29)
                  *((_BYTE *)this + 17) |= 2u;
                v3 = 1;
                if (v84)
                  *((_BYTE *)this + 17) |= 4u;
                continue;
              }
            }
          }
          if (v22)
          {
            if (*(unsigned __int8 *)(v22 + 16) == v4)
            {
              v33 = *(_QWORD *)(v22 - 32);
              v34 = v109[2];
              *(_OWORD *)v119 = v109[1];
              *(_OWORD *)&v119[16] = v34;
              *(_OWORD *)v118 = *v109;
              *(_QWORD *)&v119[16] = this;
              v35 = sub_1C4E6D628(v110);
              if (v35)
                goto LABEL_62;
            }
          }
LABEL_35:
          v23 = *((unsigned __int8 *)this + 16);
          break;
      }
      break;
    }
    switch(v23)
    {
      case ')':
      case '-':
        goto LABEL_39;
      case '*':
      case '.':
        if ((~*((unsigned __int8 *)this + 17) & 0x12) == 0)
          goto LABEL_39;
        return v3 & 1;
      case '+':
      case ',':
        return v3 & 1;
      default:
        if ((v23 - 56) >= 3)
          return v3 & 1;
LABEL_39:
        if (!llvm::Instruction::isCommutative(this))
          return v3 & 1;
        v36 = *(_QWORD *)v111;
        if (*(_QWORD *)v111)
        {
          v37 = *(unsigned __int8 *)(v36 + 16);
          if (v37 >= 0x1C && v37 - 79 >= 0xFFFFFFF3)
          {
            v38 = *(_QWORD *)(v36 + 8);
            if (v38)
            {
              if (v37 == 67 && !*(_QWORD *)(v38 + 8) && (v23 - 56) <= 2)
              {
                v39 = *(_QWORD *)(v36 - 32);
                if (v39)
                {
                  v40 = *(unsigned __int8 *)(v39 + 16);
                  if (v40 >= 0x1C && v40 - 59 >= 0xFFFFFFEE)
                  {
                    v41 = *(_QWORD *)(v39 + 8);
                    if (v41)
                    {
                      if (v40 == v23 && !*(_QWORD *)(v41 + 8))
                      {
                        v42 = *v108;
                        if (*v108)
                        {
                          if (*(unsigned __int8 *)(v42 + 16) <= 0x14u)
                          {
                            v43 = *(_QWORD *)(v39 - 32);
                            if (v43)
                            {
                              if (*(unsigned __int8 *)(v43 + 16) <= 0x14u)
                              {
                                v44 = (llvm *)(v23 - 28);
                                v45 = (llvm::Constant *)*v108;
                                v46 = sub_1C537D3B8((llvm *)0x27, v43, *(llvm::Constant **)v42, 0);
                                v48 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v44, v45, v46, v47);
                                if (!v48)
                                {
                                  v98 = *(_QWORD ***)v45;
                                  if (*(_QWORD *)v45)
                                  {
                                    v121 = (const llvm::APInt **)v45;
                                    v122 = v46;
                                    v99 = **v98 + 1512;
                                    v118[0] = (char)v44;
                                    v118[1] = 0;
                                    *(_WORD *)&v118[2] = 0;
                                    *(_QWORD *)&v118[8] = &v121;
                                    *(_QWORD *)v119 = 2;
                                    memset(&v119[8], 0, 32);
                                    v120 = 0;
                                    v48 = sub_1C537D4FC(v99, (uint64_t)v98, (unsigned __int8 *)v118);
                                  }
                                  else
                                  {
                                    v48 = 0;
                                  }
                                }
                                sub_1C577E2C8(a1, v36, 0, *(_QWORD *)(v39 - 64));
                                v3 = 1;
                                sub_1C577E2C8(a1, (uint64_t)this, 1u, v48);
                                v5 = (uint64_t *)v111;
                                v6 = v108;
                                continue;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (v18)
        {
          if (*(unsigned __int8 *)(v18 + 16) == v4)
          {
            v33 = *(_QWORD *)(v18 - 32);
            v49 = v109[2];
            *(_OWORD *)v119 = v109[1];
            *(_OWORD *)&v119[16] = v49;
            *(_OWORD *)v118 = *v109;
            *(_QWORD *)&v119[16] = this;
            v35 = sub_1C4E6D628(v110);
            if (v35)
            {
LABEL_62:
              sub_1C577E2C8(a1, (uint64_t)this, 0, v35);
              v3 = 1;
              v50 = a1;
              v51 = this;
              v52 = v33;
LABEL_67:
              sub_1C577E2C8(v50, (uint64_t)v51, 1u, v52);
              v5 = (uint64_t *)v111;
              v6 = v108;
              if (!sub_1C4774A9C((uint64_t)this))
                *((_BYTE *)this + 17) &= 1u;
              continue;
            }
          }
        }
        if (!v22)
          return v3 & 1;
        if (*(unsigned __int8 *)(v22 + 16) == v4)
        {
          v53 = *(_QWORD *)(v22 - 64);
          v54 = v109[2];
          *(_OWORD *)v119 = v109[1];
          *(_OWORD *)&v119[16] = v54;
          *(_OWORD *)v118 = *v109;
          *(_QWORD *)&v119[16] = this;
          v55 = sub_1C4E6D628(v110);
          if (v55)
          {
            v56 = v55;
            sub_1C577E2C8(a1, (uint64_t)this, 0, v53);
            v3 = 1;
            v50 = a1;
            v51 = this;
            v52 = v56;
            goto LABEL_67;
          }
        }
        if (v18)
        {
          if (*(unsigned __int8 *)(v18 + 16) == v4 && *(unsigned __int8 *)(v22 + 16) == v4)
          {
            v57 = *(_QWORD *)(v18 + 8);
            if (v57)
            {
              if (!*(_QWORD *)(v57 + 8))
              {
                v58 = *(_QWORD **)(v18 - 64);
                if (v58)
                {
                  v59 = *(unsigned __int8 **)(v18 - 32);
                  if (v59)
                  {
                    if (v59[16] <= 0x14u)
                    {
                      v60 = *(_QWORD *)(v22 + 8);
                      if (v60)
                      {
                        if (!*(_QWORD *)(v60 + 8))
                        {
                          v61 = *(_QWORD *)(v22 - 64);
                          if (v61)
                          {
                            v62 = *(_QWORD *)(v22 - 32);
                            if (v62)
                            {
                              if (*(unsigned __int8 *)(v62 + 16) <= 0x14u)
                              {
                                HIDWORD(v64) = *((unsigned __int8 *)this + 16) - 41;
                                LODWORD(v64) = HIDWORD(v64);
                                v63 = v64 >> 1;
                                v103 = *(llvm::Constant **)(v22 - 32);
                                if (v63 <= 6
                                  && ((1 << v63) & 0x47) != 0
                                  && (*((_BYTE *)this + 17) & 2) != 0
                                  && v106 <= 6
                                  && ((1 << v106) & 0x47) != 0
                                  && (*(_BYTE *)(v15 + 17) & 2) != 0
                                  && ((1 << v106) & 0x47) != 0)
                                {
                                  v85 = v19[17];
                                  v65 = (v85 >> 1) & 1;
                                  if ((v85 & 2) != 0 && v4 == 41)
                                  {
                                    *(_WORD *)&v119[16] = 257;
                                    v86 = (char *)operator new(0x80uLL);
                                    v87 = v86;
                                    *(_QWORD *)v86 = 0;
                                    *((_QWORD *)v86 + 1) = 0;
                                    *((_QWORD *)v86 + 2) = 0;
                                    *((_QWORD *)v86 + 5) = 0;
                                    *((_QWORD *)v86 + 6) = 0;
                                    *((_QWORD *)v86 + 4) = 0;
                                    *((_QWORD *)v86 + 8) = *v58;
                                    v67 = (llvm::Value *)(v86 + 64);
                                    *((_QWORD *)v86 + 3) = v86 + 64;
                                    *((_QWORD *)v86 + 7) = v86 + 64;
                                    *((_QWORD *)v86 + 9) = 0;
                                    v86[80] = 41;
                                    v86[81] = 0;
                                    *((_WORD *)v86 + 41) = 0;
                                    *((_DWORD *)v86 + 21) = 2;
                                    *((_DWORD *)v86 + 30) = 0;
                                    *(_OWORD *)(v86 + 104) = 0u;
                                    *(_OWORD *)(v86 + 88) = 0u;
                                    *(_QWORD *)v86 = v58;
                                    v90 = v58[1];
                                    v89 = v58 + 1;
                                    v88 = v90;
                                    *((_QWORD *)v86 + 1) = v90;
                                    if (v90)
                                      *(_QWORD *)(v88 + 16) = v86 + 8;
                                    *((_QWORD *)v86 + 2) = v89;
                                    *v89 = v86;
                                    if (*((_QWORD *)v86 + 4))
                                    {
                                      **((_QWORD **)v86 + 6) = *((_QWORD *)v86 + 5);
                                      v101 = *((_QWORD *)v86 + 5);
                                      if (v101)
                                        *(_QWORD *)(v101 + 16) = *((_QWORD *)v86 + 6);
                                    }
                                    *((_QWORD *)v86 + 4) = v61;
                                    v93 = *(_QWORD *)(v61 + 8);
                                    v92 = (_QWORD *)(v61 + 8);
                                    v91 = v93;
                                    *((_QWORD *)v86 + 5) = v93;
                                    if (v93)
                                      *(_QWORD *)(v91 + 16) = v86 + 40;
                                    *((_QWORD *)v86 + 6) = v92;
                                    *v92 = v86 + 32;
                                    llvm::Value::setName((uint64_t ***)v86 + 8, (uint64_t)v118);
                                    v87[81] |= 2u;
                                    v65 = 1;
                                    goto LABEL_97;
                                  }
                                }
                                else
                                {
                                  v65 = 0;
                                }
                                v123 = 257;
                                v66 = (char *)operator new(0x80uLL);
                                *(_QWORD *)v66 = 0;
                                *((_QWORD *)v66 + 1) = 0;
                                *((_QWORD *)v66 + 2) = 0;
                                *((_QWORD *)v66 + 5) = 0;
                                *((_QWORD *)v66 + 6) = 0;
                                *((_QWORD *)v66 + 4) = 0;
                                *((_QWORD *)v66 + 8) = *v58;
                                v67 = (llvm::Value *)(v66 + 64);
                                *((_QWORD *)v66 + 3) = v66 + 64;
                                *((_QWORD *)v66 + 7) = v66 + 64;
                                *((_QWORD *)v66 + 9) = 0;
                                v66[80] = v4;
                                v66[81] = 0;
                                *((_WORD *)v66 + 41) = 0;
                                *((_DWORD *)v66 + 21) = 2;
                                *((_DWORD *)v66 + 30) = 0;
                                *(_OWORD *)(v66 + 104) = 0u;
                                *(_OWORD *)(v66 + 88) = 0u;
                                *(_QWORD *)v66 = v58;
                                v70 = v58[1];
                                v69 = v58 + 1;
                                v68 = v70;
                                *((_QWORD *)v66 + 1) = v70;
                                if (v70)
                                  *(_QWORD *)(v68 + 16) = v66 + 8;
                                *((_QWORD *)v66 + 2) = v69;
                                *v69 = v66;
                                if (*((_QWORD *)v66 + 4))
                                {
                                  **((_QWORD **)v66 + 6) = *((_QWORD *)v66 + 5);
                                  v100 = *((_QWORD *)v66 + 5);
                                  if (v100)
                                    *(_QWORD *)(v100 + 16) = *((_QWORD *)v66 + 6);
                                }
                                *((_QWORD *)v66 + 4) = v61;
                                v73 = *(_QWORD *)(v61 + 8);
                                v72 = (_QWORD *)(v61 + 8);
                                v71 = v73;
                                *((_QWORD *)v66 + 5) = v73;
                                if (v73)
                                  *(_QWORD *)(v71 + 16) = v66 + 40;
                                *((_QWORD *)v66 + 6) = v72;
                                *v72 = v66 + 32;
                                llvm::Value::setName((uint64_t ***)v66 + 8, (uint64_t)&v121);
LABEL_97:
                                if (sub_1C4774A9C((uint64_t)v67))
                                  *((_BYTE *)v67 + 17) |= *((_BYTE *)this + 17) & *(_BYTE *)(v18 + 17) & *(_BYTE *)(v22 + 17) & 0xFE;
                                v74 = a1;
                                sub_1C577E498(a1, v67, (uint64_t)this);
                                llvm::Value::takeName(v67, (llvm::Value *)v22);
                                sub_1C577E2C8(a1, (uint64_t)this, 0, (uint64_t)v67);
                                v76 = (uint64_t)llvm::ConstantFoldBinaryInstruction((llvm *)v110, (llvm::Constant *)v59, v103, v75);
                                if (!v76)
                                {
                                  v96 = *(_QWORD ***)v59;
                                  if (*(_QWORD *)v59)
                                  {
                                    v121 = (const llvm::APInt **)v59;
                                    v122 = v103;
                                    v97 = **v96 + 1512;
                                    v118[0] = v4 - 28;
                                    v118[1] = 0;
                                    *(_WORD *)&v118[2] = 0;
                                    *(_QWORD *)&v118[8] = &v121;
                                    *(_QWORD *)v119 = 2;
                                    memset(&v119[8], 0, 32);
                                    v120 = 0;
                                    v76 = sub_1C537D4FC(v97, (uint64_t)v96, (unsigned __int8 *)v118);
                                  }
                                  else
                                  {
                                    v76 = 0;
                                  }
                                  v74 = a1;
                                }
                                sub_1C577E2C8(v74, (uint64_t)this, 1u, v76);
                                v5 = (uint64_t *)v111;
                                v6 = v108;
                                if (!sub_1C4774A9C((uint64_t)this))
                                  *((_BYTE *)this + 17) &= 1u;
                                v3 = 1;
                                if (v65)
                                  *((_BYTE *)this + 17) |= 2u;
                                continue;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        return v3 & 1;
    }
  }
}

uint64_t sub_1C577E1A0(uint64_t a1)
{
  unsigned int v1;
  unsigned int v3;
  char v5;
  char v6;
  _BYTE v7[2];

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 < 0x1C)
  {
    if (v1 <= 0x14)
      v3 = v1 - 13 < 0xFFFFFFFE;
    else
      v3 = 2;
    if (v1 == 21)
      return 3;
    else
      return v3;
  }
  else
  {
    if (v1 - 66 < 0xD)
      return 4;
    if (v1 == 43)
    {
      if ((sub_1C4D8AC3C((uint64_t)v7, *(llvm::Constant **)(a1 - 64)) & 1) != 0)
        return 4;
      v1 = *(unsigned __int8 *)(a1 + 16);
    }
    if (v1 == 5)
    {
      if (*(_WORD *)(a1 + 18) == 30
        && ((sub_1C4D9EED4((uint64_t)&v6, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) != 0
         || (sub_1C4D9EED4((uint64_t)&v6, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF))) & 1) != 0))
      {
        return 4;
      }
    }
    else if (v1 == 58
           && ((sub_1C4D9ED34((uint64_t)&v6, *(llvm::Constant **)(a1 - 32)) & 1) != 0
            || (sub_1C4D9ED34((uint64_t)&v6, *(llvm::Constant **)(a1 - 64)) & 1) != 0))
    {
      return 4;
    }
    if (sub_1C578ED28((uint64_t)&v5, a1))
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1C577E2C8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;

  v6 = *(_DWORD *)(a2 + 20);
  if ((v6 & 0x40000000) != 0)
    v7 = *(_QWORD *)(a2 - 8);
  else
    v7 = a2 - 32 * (v6 & 0x7FFFFFF);
  v8 = a3;
  v9 = *(_QWORD *)(v7 + 32 * a3);
  if (v9)
    v10 = *(unsigned __int8 *)(v9 + 16) >= 0x1Cu;
  else
    v10 = 0;
  if (!v10)
    goto LABEL_28;
  v11 = *(_QWORD *)(a1 + 32);
  v34 = v9;
  if ((*(_BYTE *)(v11 + 2088) & 1) != 0)
  {
    v13 = v11 + 2096;
    v12 = 16;
  }
  else
  {
    v12 = *(_DWORD *)(v11 + 2104);
    if (!v12)
    {
      v22 = 0;
      goto LABEL_25;
    }
    v13 = *(_QWORD *)(v11 + 2096);
  }
  v14 = v12 - 1;
  v15 = v14 & ((v9 >> 4) ^ (v9 >> 9));
  v16 = (_QWORD *)(v13 + 8 * v15);
  v17 = *v16;
  if (v9 == *v16)
    goto LABEL_28;
  v18 = 0;
  v19 = 1;
  while (v17 != -4096)
  {
    if (v18)
      v20 = 0;
    else
      v20 = v17 == -8192;
    if (v20)
      v18 = v16;
    v21 = v15 + v19++;
    v15 = v21 & v14;
    v16 = (_QWORD *)(v13 + 8 * v15);
    v17 = *v16;
    if (v9 == *v16)
      goto LABEL_28;
  }
  if (v18)
    v22 = v18;
  else
    v22 = v16;
LABEL_25:
  v23 = sub_1C4E08FFC(v11 + 2088, (uint64_t)&v34, &v34, v22);
  *v23 = v34;
  v24 = v34;
  v25 = *(unsigned int *)(v11 + 2232);
  if (v25 >= *(_DWORD *)(v11 + 2236))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod(v11 + 2224, v11 + 2240, v25 + 1, 8);
    LODWORD(v25) = *(_DWORD *)(v11 + 2232);
  }
  *(_QWORD *)(*(_QWORD *)(v11 + 2224) + 8 * v25) = v24;
  ++*(_DWORD *)(v11 + 2232);
  v6 = *(_DWORD *)(a2 + 20);
LABEL_28:
  if ((v6 & 0x40000000) != 0)
    v26 = *(_QWORD *)(a2 - 8);
  else
    v26 = a2 - 32 * (v6 & 0x7FFFFFF);
  v27 = v26 + 32 * v8;
  if (*(_QWORD *)v27)
  {
    **(_QWORD **)(v27 + 16) = *(_QWORD *)(v27 + 8);
    v28 = *(_QWORD *)(v27 + 8);
    if (v28)
      *(_QWORD *)(v28 + 16) = *(_QWORD *)(v27 + 16);
  }
  *(_QWORD *)v27 = a4;
  if (a4)
  {
    v31 = *(_QWORD *)(a4 + 8);
    v30 = (_QWORD *)(a4 + 8);
    v29 = v31;
    v32 = v26 + 32 * v8;
    *(_QWORD *)(v32 + 8) = v31;
    if (v31)
      *(_QWORD *)(v29 + 16) = v32 + 8;
    *(_QWORD *)(v32 + 16) = v30;
    *v30 = v27;
  }
  return a2;
}

llvm::Value *sub_1C577E498(uint64_t a1, llvm::Value *a2, uint64_t a3)
{
  unsigned __int8 *v6;
  unsigned __int8 **v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  llvm::Value **v17;
  llvm::Value *v18;
  llvm::Value **v19;
  int v20;
  BOOL v21;
  unsigned int v22;
  llvm::Value **v23;
  _QWORD *v24;
  llvm::Value *v25;
  uint64_t v26;
  uint64_t v28;
  llvm::ValueSymbolTable *v29;
  unsigned __int8 *v30;
  llvm::Value *v31;

  v6 = *(unsigned __int8 **)(a3 + 48);
  v30 = v6;
  if (v6)
    llvm::MetadataTracking::track((uint64_t)&v30, v6, 2);
  v7 = (unsigned __int8 **)((char *)a2 + 48);
  if (&v30 == (unsigned __int8 **)((char *)a2 + 48))
  {
    if (v30)
      llvm::MetadataTracking::untrack((uint64_t)&v30, v30);
  }
  else
  {
    if (*v7)
      llvm::MetadataTracking::untrack((uint64_t)a2 + 48, *v7);
    v8 = v30;
    *v7 = v30;
    if (v8)
    {
      llvm::MetadataTracking::retrack((uint64_t)&v30, v8, (uint64_t)a2 + 48);
      v30 = 0;
    }
  }
  v9 = *(_QWORD *)(a3 + 40);
  v10 = (uint64_t *)(a3 + 24);
  *((_QWORD *)a2 + 5) = v9;
  *(_WORD *)(v9 + 18) &= ~0x8000u;
  if ((*((_BYTE *)a2 + 23) & 0x10) != 0)
  {
    v28 = *(_QWORD *)(v9 + 56);
    if (v28)
    {
      v29 = *(llvm::ValueSymbolTable **)(v28 + 104);
      if (v29)
        llvm::ValueSymbolTable::reinsertValue(v29, a2);
    }
  }
  v11 = *v10;
  *((_QWORD *)a2 + 3) = *v10;
  *((_QWORD *)a2 + 4) = v10;
  *(_QWORD *)(v11 + 8) = (char *)a2 + 24;
  *v10 = (uint64_t)a2 + 24;
  v12 = *(_QWORD *)(a1 + 32);
  v31 = a2;
  if ((*(_BYTE *)(v12 + 2088) & 1) != 0)
  {
    v14 = v12 + 2096;
    v13 = 16;
  }
  else
  {
    v13 = *(_DWORD *)(v12 + 2104);
    if (!v13)
    {
      v23 = 0;
      goto LABEL_25;
    }
    v14 = *(_QWORD *)(v12 + 2096);
  }
  v15 = v13 - 1;
  v16 = v15 & ((a2 >> 4) ^ (a2 >> 9));
  v17 = (llvm::Value **)(v14 + 8 * v16);
  v18 = *v17;
  if (*v17 == a2)
    return a2;
  v19 = 0;
  v20 = 1;
  while (v18 != (llvm::Value *)-4096)
  {
    if (v19)
      v21 = 0;
    else
      v21 = v18 == (llvm::Value *)-8192;
    if (v21)
      v19 = v17;
    v22 = v16 + v20++;
    v16 = v22 & v15;
    v17 = (llvm::Value **)(v14 + 8 * v16);
    v18 = *v17;
    if (*v17 == a2)
      return a2;
  }
  if (v19)
    v23 = v19;
  else
    v23 = v17;
LABEL_25:
  v24 = sub_1C4E08FFC(v12 + 2088, (uint64_t)&v31, &v31, v23);
  *v24 = v31;
  v25 = v31;
  v26 = *(unsigned int *)(v12 + 2232);
  if (v26 >= *(_DWORD *)(v12 + 2236))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod(v12 + 2224, v12 + 2240, v26 + 1, 8);
    LODWORD(v26) = *(_DWORD *)(v12 + 2232);
  }
  *(_QWORD *)(*(_QWORD *)(v12 + 2224) + 8 * v26) = v25;
  ++*(_DWORD *)(v12 + 2232);
  return a2;
}

unsigned __int8 *sub_1C577E68C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5, _QWORD *a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t ***v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned __int8 *v20;
  __int128 v22;
  __int128 v23;
  unsigned __int8 *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v31;
  unsigned int v32;
  unint64_t v33;
  BOOL v34;
  int v35;
  int8x8_t v37;
  unsigned int v38;
  unint64_t v39;
  unsigned __int8 *v40;
  uint64_t ***v41;
  unsigned int v42;
  int v43;
  uint64_t **v44;
  uint64_t **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ****v51;
  uint64_t ***v52;
  int v53;
  int v54;
  uint64_t **v55;
  uint64_t **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t ****v62;
  uint64_t ***v63;
  int v64;
  int v65;
  unsigned int v66;
  unint64_t v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  unsigned int v72;
  int8x8_t v73;
  unsigned int v74;
  char v75;
  char v76;
  uint64_t ***v77;
  char *v78;
  uint64_t **v79;
  uint64_t **v80;
  uint64_t ***v81;
  char *v82;
  uint64_t **v83;
  uint64_t **v84;
  unsigned int v85;
  int v86;
  unsigned __int8 *v87;
  uint64_t ***v88;
  uint64_t ***v89;
  int8x8_t v90;
  llvm::APInt *v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;

  v7 = (uint64_t)a6;
  v13 = *(uint64_t ****)(a2 - 64);
  v88 = *(uint64_t ****)(a2 - 32);
  v89 = v13;
  v14 = *(unsigned __int8 *)(a2 + 16);
  v15 = (v14 - 28);
  v16 = (a3 < 0x1F) & (0x70066000u >> a3);
  if ((_DWORD)a3 == 17)
  {
    if ((v15 & 0xFFFFFFFD) == 0xD)
      goto LABEL_9;
LABEL_14:
    v18 = (uint64_t)a7;
    goto LABEL_15;
  }
  if ((_DWORD)a3 == 29)
  {
    if (v14 == 56)
      goto LABEL_9;
    goto LABEL_14;
  }
  if ((_DWORD)a3 != 28 || (v14 - 57) >= 2)
    goto LABEL_14;
LABEL_9:
  if (a7 == a4)
    v17 = (a3 < 0x1F) & (0x70066000u >> a3);
  else
    v17 = 0;
  if (a6 != a4 && !v17)
    goto LABEL_14;
  if (a6 == a4)
    v18 = (uint64_t)a7;
  else
    v18 = (uint64_t)a6;
  if (a6 != a4)
    v7 = (uint64_t)a7;
  v26 = *(_OWORD *)(a1 + 120);
  v27 = *(_OWORD *)(a1 + 104);
  v92 = *(_OWORD *)(a1 + 88);
  v93 = v27;
  v95 = *((_QWORD *)&v26 + 1);
  v94 = a2;
  v28 = sub_1C4E6D628(v15);
  if (!v28)
  {
    v55 = v13[1];
    if (!v55)
      goto LABEL_15;
    if (v55[1])
      goto LABEL_15;
    v56 = v88[1];
    if (!v56 || v56[1])
      goto LABEL_15;
    v57 = *(_QWORD *)(a1 + 24);
    if ((*((_BYTE *)v88 + 23) & 0x10) == 0)
    {
      v83 = 0;
      v82 = &byte_1C871356D;
LABEL_104:
      LOWORD(v94) = 261;
      *(_QWORD *)&v92 = v82;
      *((_QWORD *)&v92 + 1) = v83;
      v28 = (uint64_t)sub_1C4773860(v57, v15, a5, v18, (uint64_t)&v92, 0);
      if (!v28)
        goto LABEL_15;
      goto LABEL_34;
    }
    v58 = ***v88;
    v59 = *(_QWORD *)(v58 + 152);
    v60 = *(unsigned int *)(v58 + 168);
    if ((_DWORD)v60)
    {
      LODWORD(v61) = (v60 - 1) & ((v88 >> 4) ^ (v88 >> 9));
      v62 = (uint64_t ****)(v59 + 16 * v61);
      v63 = *v62;
      if (*v62 == v88)
      {
LABEL_103:
        v81 = v62[1];
        v84 = *v81;
        v82 = (char *)(v81 + 2);
        v83 = v84;
        goto LABEL_104;
      }
      v64 = 1;
      while (v63 != (uint64_t ***)-4096)
      {
        v65 = v61 + v64++;
        v61 = v65 & (v60 - 1);
        v63 = *(uint64_t ****)(v59 + 16 * v61);
        if (v63 == v88)
        {
          v62 = (uint64_t ****)(v59 + 16 * v61);
          goto LABEL_103;
        }
      }
    }
    v62 = (uint64_t ****)(v59 + 16 * v60);
    goto LABEL_103;
  }
LABEL_34:
  v29 = *(_QWORD *)(a1 + 24);
  LOWORD(v94) = 257;
  v87 = (unsigned __int8 *)v28;
  v20 = sub_1C4773860(v29, a3, a4, v28, (uint64_t)&v92, 0);
  if (v20)
    goto LABEL_35;
LABEL_15:
  if (!sub_1C577EC64(v15, a3))
    return 0;
  v19 = (_QWORD *)v7 == a5 ? v16 : 0;
  if ((_QWORD *)v18 != a5 && !v19)
    return 0;
  if ((_QWORD *)v18 != a5)
    v7 = v18;
  v22 = *(_OWORD *)(a1 + 120);
  v23 = *(_OWORD *)(a1 + 104);
  v92 = *(_OWORD *)(a1 + 88);
  v93 = v23;
  v95 = *((_QWORD *)&v22 + 1);
  v94 = a2;
  v24 = (unsigned __int8 *)sub_1C4E6D628(v15);
  if (v24)
    goto LABEL_26;
  v44 = v89[1];
  if (!v44)
    return 0;
  if (v44[1])
    return 0;
  v45 = v88[1];
  if (!v45 || v45[1])
    return 0;
  v46 = *(_QWORD *)(a1 + 24);
  if ((*((_BYTE *)v89 + 23) & 0x10) != 0)
  {
    v47 = ***v89;
    v48 = *(_QWORD *)(v47 + 152);
    v49 = *(unsigned int *)(v47 + 168);
    if ((_DWORD)v49)
    {
      LODWORD(v50) = (v49 - 1) & ((v89 >> 4) ^ (v89 >> 9));
      v51 = (uint64_t ****)(v48 + 16 * v50);
      v52 = *v51;
      if (*v51 == v89)
      {
LABEL_99:
        v77 = v51[1];
        v80 = *v77;
        v78 = (char *)(v77 + 2);
        v79 = v80;
        goto LABEL_100;
      }
      v53 = 1;
      while (v52 != (uint64_t ***)-4096)
      {
        v54 = v50 + v53++;
        v50 = v54 & (v49 - 1);
        v52 = *(uint64_t ****)(v48 + 16 * v50);
        if (v52 == v89)
        {
          v51 = (uint64_t ****)(v48 + 16 * v50);
          goto LABEL_99;
        }
      }
    }
    v51 = (uint64_t ****)(v48 + 16 * v49);
    goto LABEL_99;
  }
  v79 = 0;
  v78 = &byte_1C871356D;
LABEL_100:
  LOWORD(v94) = 261;
  *(_QWORD *)&v92 = v78;
  *((_QWORD *)&v92 + 1) = v79;
  v24 = sub_1C4773860(v46, v15, a4, v7, (uint64_t)&v92, 0);
  if (!v24)
    return 0;
LABEL_26:
  v25 = *(_QWORD *)(a1 + 24);
  LOWORD(v94) = 257;
  v87 = v24;
  v20 = sub_1C4773860(v25, a3, v24, (uint64_t)a5, (uint64_t)&v92, 0);
  if (!v20)
    return v20;
LABEL_35:
  llvm::Value::takeName((llvm::Value *)v20, (llvm::Value *)a2);
  v30 = v20[16];
  v31 = v30 < 0x1C || v30 - 41 > 0x11;
  HIDWORD(v33) = v30 - 41;
  LODWORD(v33) = v30 - 41;
  v32 = v33 >> 1;
  v34 = v31 || v32 > 6;
  v35 = (1 << v32) & 0x47;
  if (!v34 && v35 != 0)
  {
    v37 = 0;
    HIDWORD(v39) = *(unsigned __int8 *)(a2 + 16) - 41;
    LODWORD(v39) = HIDWORD(v39);
    v38 = v39 >> 1;
    if (v38 > 6)
    {
      v40 = v87;
      v41 = v88;
    }
    else
    {
      v40 = v87;
      v41 = v88;
      if (((1 << v38) & 0x47) != 0)
        v37 = (int8x8_t)vtst_s32(vdup_n_s32(*(_QWORD *)(a2 + 17)), (int32x2_t)0x200000004);
    }
    v42 = *((unsigned __int8 *)v89 + 16);
    if (v42 < 0x1C)
    {
      if (v42 != 5)
        goto LABEL_77;
      v43 = *((unsigned __int16 *)v89 + 9) - 13;
    }
    else
    {
      v43 = v42 - 41;
    }
    HIDWORD(v67) = v43;
    LODWORD(v67) = v43;
    v66 = v67 >> 1;
    if (v66 <= 6 && ((1 << v66) & 0x47) != 0)
      v37 = vbic_s8(v37, (int8x8_t)vceqz_s32((int32x2_t)vand_s8((int8x8_t)vdup_n_s32(*((unsigned __int8 *)v89 + 17)), (int8x8_t)0x200000004)));
LABEL_77:
    v68 = *((unsigned __int8 *)v41 + 16);
    if (v68 < 0x1C)
    {
      if (v68 != 5)
        goto LABEL_84;
      v69 = *((unsigned __int16 *)v41 + 9) - 13;
    }
    else
    {
      v69 = v68 - 41;
    }
    HIDWORD(v71) = v69;
    LODWORD(v71) = v69;
    v70 = v71 >> 1;
    if (v70 <= 6 && ((1 << v70) & 0x47) != 0)
      v37 = vbic_s8(v37, (int8x8_t)vceqz_s32((int32x2_t)vand_s8((int8x8_t)vdup_n_s32(*((unsigned __int8 *)v41 + 17)), (int8x8_t)0x200000004)));
LABEL_84:
    if ((_DWORD)a3 != 17 || (_DWORD)v15 != 13)
      return v20;
    v91 = 0;
    v92 = (unint64_t)&v91;
    v90 = v37;
    v72 = sub_1C4D89F84((uint64_t)&v92, v40);
    v73 = v90;
    if (!v72)
      goto LABEL_93;
    v74 = *((_DWORD *)v91 + 2);
    if (v74 > 0x40)
    {
      v85 = v74 - 1;
      if (((*(_QWORD *)(*(_QWORD *)v91 + 8 * ((v74 - 1) >> 6)) >> (v74 - 1)) & 1) == 0
        || (v86 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v91), v73 = v90, v86 != v85))
      {
LABEL_89:
        if ((v73.i8[0] & 1) != 0)
          v75 = 4;
        else
          v75 = 0;
        v20[17] = v20[17] & 0xFB | v75;
      }
    }
    else if (*(_QWORD *)v91 != 1 << (v74 - 1))
    {
      goto LABEL_89;
    }
LABEL_93:
    if ((v73.i8[4] & 1) != 0)
      v76 = 2;
    else
      v76 = 0;
    v20[17] = v20[17] & 0xFD | v76;
  }
  return v20;
}

BOOL sub_1C577EC64(int a1, int a2)
{
  _BOOL8 result;

  result = 0;
  if (a2 > 27)
  {
    if (a2 == 28)
      return (a1 - 29) < 2;
    if (a2 != 29)
    {
      if (a2 == 30)
        return result;
      return (a1 - 28) < 3 && (a2 - 25) < 3;
    }
    return a1 == 28;
  }
  else
  {
    if ((a2 - 13) < 2)
      return result;
    if (a2 != 17)
    {
      if (a2 == 18)
        return result;
      return (a1 - 28) < 3 && (a2 - 25) < 3;
    }
    return (a1 & 0xFFFFFFFD) == 13;
  }
}

llvm::Value *sub_1C577ECF0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unsigned __int8 *v18;
  llvm::ConstantFP *v19;
  _QWORD *Zero;
  llvm::ConstantFP *v21;
  _QWORD *AllOnesValue;
  int v23;
  llvm::ConstantFP **v24;
  llvm::ConstantFP **v25;
  __int128 v26;
  uint64_t v27;
  llvm::ConstantFP **v28;
  uint64_t v29;
  llvm::Type *v30;
  llvm::ConstantFP **v31;
  BOOL v32;
  llvm::ConstantFP *v33;
  llvm::ConstantFP **v34;
  llvm::ConstantFP **NullValue;
  uint64_t v36;
  uint64_t v37;
  llvm::ConstantFP **v38;
  llvm::ConstantFP *v39;
  llvm::ConstantFP **v40;
  llvm::ConstantFP **v41;
  int v42;
  llvm::ConstantFP **v43;
  llvm::ConstantFP **v44;
  __int128 v45;
  uint64_t v46;
  llvm::ConstantFP **v47;
  uint64_t v48;
  llvm::Type *v49;
  BOOL v50;
  llvm::ConstantFP **v51;
  llvm::ConstantFP *v52;
  llvm::ConstantFP **v53;
  llvm::ConstantFP **v54;
  llvm::ConstantFP *v55;
  llvm::ConstantFP **v56;
  llvm::ConstantFP **v57;
  llvm::ConstantFP **v59;
  llvm::ConstantFP **v60;
  int v61;
  uint64_t v62;
  llvm::ValueHandleBase *v63[4];
  __int16 v64;
  __int128 v65;
  __int128 v66;
  unsigned __int8 *v67;
  uint64_t v68;
  llvm::ValueHandleBase *v69;
  _QWORD *v70;

  v4 = *((_QWORD *)a2 - 8);
  v5 = *((_QWORD *)a2 - 4);
  v6 = *(unsigned __int8 *)(v4 + 16);
  if (v6 - 41 < 0x12 && v6 > 0x1B)
    v8 = *((_QWORD *)a2 - 8);
  else
    v8 = 0;
  v9 = *(unsigned __int8 *)(v5 + 16);
  v10 = v9 - 41 < 0x12 && v9 > 0x1B;
  v11 = a2[16];
  if (v10)
    v12 = *((_QWORD *)a2 - 4);
  else
    v12 = 0;
  v13 = (v11 - 28);
  *(_QWORD *)&v65 = 0;
  v63[0] = 0;
  if (v8)
    v14 = sub_1C577F3E4(v11 - 28, v8, &v65, v63);
  else
    v14 = 0;
  v69 = 0;
  v70 = 0;
  v62 = a1;
  if (!v12)
  {
    v16 = 0;
    goto LABEL_25;
  }
  v15 = sub_1C577F3E4(v11 - 28, v12, &v70, &v69);
  v16 = v15;
  if (v8)
    v17 = (_DWORD)v14 == (_DWORD)v15;
  else
    v17 = 0;
  if (!v17)
  {
LABEL_25:
    if (!v8)
      goto LABEL_37;
    goto LABEL_26;
  }
  v18 = sub_1C577E68C(a1, (uint64_t)a2, v14, (_QWORD *)v65, (_QWORD *)v63[0], v70, v69);
  v16 = v14;
  if (!v18)
  {
LABEL_26:
    if (*(unsigned __int8 *)(v5 + 16) >= 0x15u)
    {
      v19 = *(llvm::ConstantFP **)v5;
      switch((int)v14)
      {
        case 13:
          goto LABEL_31;
        case 14:
          Zero = llvm::ConstantFP::getZero(v19, (llvm::Type *)1);
          goto LABEL_35;
        case 15:
        case 16:
          break;
        case 17:
          Zero = llvm::ConstantInt::get(v19, 1, 0);
          goto LABEL_35;
        case 18:
          Zero = llvm::ConstantFP::get((llvm::ConstantFP **)v19, (llvm::Type *)a2, 1.0);
          goto LABEL_35;
        default:
          if ((_DWORD)v14 == 28)
          {
            Zero = llvm::Constant::getAllOnesValue(v19, (llvm::Type *)a2);
          }
          else
          {
            if ((v14 - 29) > 1)
              break;
LABEL_31:
            Zero = llvm::Constant::getNullValue(v19, (llvm::Type *)a2);
          }
LABEL_35:
          if (!Zero)
            break;
          v18 = sub_1C577E68C(v62, (uint64_t)a2, v14, (_QWORD *)v65, (_QWORD *)v63[0], (_QWORD *)v5, Zero);
          if (!v18)
            break;
          return (llvm::Value *)v18;
      }
    }
LABEL_37:
    if (v12 && *(unsigned __int8 *)(v4 + 16) >= 0x15u)
    {
      v21 = *(llvm::ConstantFP **)v4;
      switch((int)v16)
      {
        case 13:
          goto LABEL_43;
        case 14:
          AllOnesValue = llvm::ConstantFP::getZero(v21, (llvm::Type *)1);
          goto LABEL_47;
        case 15:
        case 16:
          break;
        case 17:
          AllOnesValue = llvm::ConstantInt::get(v21, 1, 0);
          goto LABEL_47;
        case 18:
          AllOnesValue = llvm::ConstantFP::get((llvm::ConstantFP **)v21, (llvm::Type *)a2, 1.0);
          goto LABEL_47;
        default:
          if ((_DWORD)v16 == 28)
          {
            AllOnesValue = llvm::Constant::getAllOnesValue(v21, (llvm::Type *)a2);
          }
          else
          {
            if ((v16 - 29) > 1)
              break;
LABEL_43:
            AllOnesValue = llvm::Constant::getNullValue(v21, (llvm::Type *)a2);
          }
LABEL_47:
          if (!AllOnesValue)
            break;
          v18 = sub_1C577E68C(v62, (uint64_t)a2, v16, (_QWORD *)v4, AllOnesValue, v70, v69);
          if (!v18)
            break;
          return (llvm::Value *)v18;
      }
    }
    if (v8)
    {
      v23 = *(unsigned __int8 *)(v8 + 16);
      if (sub_1C577EC64(v23 - 28, v11 - 28))
      {
        v61 = v11;
        v24 = *(llvm::ConstantFP ***)(v8 - 64);
        v25 = *(llvm::ConstantFP ***)(v8 - 32);
        v26 = *(_OWORD *)(v62 + 104);
        v65 = *(_OWORD *)(v62 + 88);
        v66 = v26;
        v27 = *(_QWORD *)(v62 + 128);
        v67 = a2;
        v68 = v27;
        BYTE1(v68) = 0;
        v59 = v24;
        v28 = (llvm::ConstantFP **)sub_1C4E6D628(v13);
        v60 = v25;
        v29 = sub_1C4E6D628(v13);
        v31 = (llvm::ConstantFP **)v29;
        if (v28)
          v32 = v29 == 0;
        else
          v32 = 1;
        if (!v32)
        {
          v36 = *(_QWORD *)(v62 + 24);
          v64 = 257;
          v37 = (v23 - 28);
          v38 = v28;
LABEL_116:
          v18 = sub_1C4773860(v36, v37, v38, (uint64_t)v31, (uint64_t)v63, 0);
          llvm::Value::takeName((llvm::Value *)v18, (llvm::Value *)a2);
          return (llvm::Value *)v18;
        }
        v11 = v61;
        if (v28)
        {
          v33 = *v28;
          switch(v23)
          {
            case ')':
              goto LABEL_61;
            case '*':
              v34 = v31;
              NullValue = (llvm::ConstantFP **)llvm::ConstantFP::getZero(v33, (llvm::Type *)1);
              goto LABEL_65;
            case '+':
            case ',':
              goto LABEL_66;
            case '-':
              v34 = v31;
              NullValue = llvm::ConstantInt::get(v33, 1, 0);
              goto LABEL_65;
            case '.':
              v34 = v31;
              NullValue = (llvm::ConstantFP **)llvm::ConstantFP::get((llvm::ConstantFP **)v33, v30, 1.0);
              goto LABEL_65;
            default:
              if (v23 == 56)
              {
                v34 = v31;
                NullValue = (llvm::ConstantFP **)llvm::Constant::getAllOnesValue(v33, v30);
              }
              else
              {
                if ((v23 - 57) > 1)
                  goto LABEL_66;
LABEL_61:
                v34 = v31;
                NullValue = llvm::Constant::getNullValue(v33, v30);
              }
LABEL_65:
              v31 = v34;
              if (v28 != NullValue)
                goto LABEL_66;
              v36 = *(_QWORD *)(v62 + 24);
              v64 = 257;
              v37 = v13;
              v38 = v60;
              break;
          }
          goto LABEL_98;
        }
LABEL_66:
        if (v31)
        {
          v39 = *v31;
          switch(v23)
          {
            case ')':
              goto LABEL_71;
            case '*':
              v40 = v31;
              v41 = (llvm::ConstantFP **)llvm::ConstantFP::getZero(v39, (llvm::Type *)1);
              goto LABEL_76;
            case '+':
            case ',':
              goto LABEL_77;
            case '-':
              v40 = v31;
              v41 = llvm::ConstantInt::get(v39, 1, 0);
              goto LABEL_76;
            case '.':
              v40 = v31;
              v41 = (llvm::ConstantFP **)llvm::ConstantFP::get((llvm::ConstantFP **)v39, v30, 1.0);
              goto LABEL_76;
            default:
              if (v23 == 56)
              {
                v40 = v31;
                v41 = (llvm::ConstantFP **)llvm::Constant::getAllOnesValue(v39, v30);
              }
              else
              {
                if ((v23 - 57) > 1)
                  goto LABEL_77;
LABEL_71:
                v40 = v31;
                v41 = llvm::Constant::getNullValue(v39, v30);
              }
LABEL_76:
              if (v40 != v41)
                goto LABEL_77;
              v36 = *(_QWORD *)(v62 + 24);
              v64 = 257;
              v37 = v13;
              v38 = v59;
              break;
          }
LABEL_98:
          v31 = (llvm::ConstantFP **)v5;
          goto LABEL_116;
        }
      }
    }
LABEL_77:
    if (!v12)
      return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
    v42 = *(unsigned __int8 *)(v12 + 16);
    if (v11 == 45)
    {
      if (((v42 - 28) & 0xFFFFFFFD) == 0xD)
        goto LABEL_86;
    }
    else
    {
      if (v11 != 57)
      {
        if (v11 != 56 || (v42 - 57) >= 2)
          return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
LABEL_86:
        v43 = *(llvm::ConstantFP ***)(v12 - 64);
        v44 = *(llvm::ConstantFP ***)(v12 - 32);
        v45 = *(_OWORD *)(v62 + 104);
        v65 = *(_OWORD *)(v62 + 88);
        v66 = v45;
        v46 = *(_QWORD *)(v62 + 128);
        v67 = a2;
        v68 = v46;
        BYTE1(v68) = 0;
        v47 = (llvm::ConstantFP **)sub_1C4E6D628(v13);
        v48 = sub_1C4E6D628(v13);
        v31 = (llvm::ConstantFP **)v48;
        if (v47)
          v50 = v48 == 0;
        else
          v50 = 1;
        if (!v50)
        {
          v36 = *(_QWORD *)(v62 + 24);
          v64 = 257;
          v37 = (v42 - 28);
          v38 = v47;
          goto LABEL_116;
        }
        if (v47)
        {
          v51 = v44;
          v52 = *v47;
          switch(v42)
          {
            case ')':
              goto LABEL_96;
            case '*':
              v53 = v31;
              v54 = (llvm::ConstantFP **)llvm::ConstantFP::getZero(v52, (llvm::Type *)1);
              goto LABEL_102;
            case '+':
            case ',':
              goto LABEL_103;
            case '-':
              v53 = v31;
              v54 = llvm::ConstantInt::get(v52, 1, 0);
              goto LABEL_102;
            case '.':
              v53 = v31;
              v54 = (llvm::ConstantFP **)llvm::ConstantFP::get((llvm::ConstantFP **)v52, v49, 1.0);
              goto LABEL_102;
            default:
              if (v42 == 56)
              {
                v53 = v31;
                v54 = (llvm::ConstantFP **)llvm::Constant::getAllOnesValue(v52, v49);
              }
              else
              {
                if ((v42 - 57) > 1)
                  goto LABEL_103;
LABEL_96:
                v53 = v31;
                v54 = llvm::Constant::getNullValue(v52, v49);
              }
LABEL_102:
              v31 = v53;
              if (v47 != v54)
                goto LABEL_103;
              v36 = *(_QWORD *)(v62 + 24);
              v64 = 257;
              v37 = v13;
              v38 = (llvm::ConstantFP **)v4;
              v31 = v51;
              break;
          }
          goto LABEL_116;
        }
LABEL_103:
        if (v31)
        {
          v55 = *v31;
          switch(v42)
          {
            case ')':
              goto LABEL_108;
            case '*':
              v56 = v31;
              v57 = (llvm::ConstantFP **)llvm::ConstantFP::getZero(v55, (llvm::Type *)1);
              goto LABEL_113;
            case '+':
            case ',':
              return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
            case '-':
              v56 = v31;
              v57 = llvm::ConstantInt::get(v55, 1, 0);
              goto LABEL_113;
            case '.':
              v56 = v31;
              v57 = (llvm::ConstantFP **)llvm::ConstantFP::get((llvm::ConstantFP **)v55, v49, 1.0);
              goto LABEL_113;
            default:
              if (v42 == 56)
              {
                v56 = v31;
                v57 = (llvm::ConstantFP **)llvm::Constant::getAllOnesValue(v55, v49);
              }
              else
              {
                if ((v42 - 57) > 1)
                  return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
LABEL_108:
                v56 = v31;
                v57 = llvm::Constant::getNullValue(v55, v49);
              }
LABEL_113:
              if (v56 != v57)
                return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
              v36 = *(_QWORD *)(v62 + 24);
              v64 = 257;
              v37 = v13;
              v38 = (llvm::ConstantFP **)v4;
              v31 = v43;
              break;
          }
          goto LABEL_116;
        }
        return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
      }
      if (v42 == 56)
        goto LABEL_86;
    }
    return sub_1C577F49C(v62, a2, (llvm *)v4, (llvm::Constant *)v5);
  }
  return (llvm::Value *)v18;
}

uint64_t sub_1C577F3E4(int a1, uint64_t a2, _QWORD *a3, llvm::ValueHandleBase **a4)
{
  int v4;
  unsigned __int8 *v6;
  llvm::Value **v7;

  *a3 = *(_QWORD *)(a2 - 64);
  *a4 = *(llvm::ValueHandleBase **)(a2 - 32);
  v4 = *(unsigned __int8 *)(a2 + 16);
  if ((a1 & 0xFFFFFFFD) != 0xD)
    return (v4 - 28);
  if (v4 != 5)
  {
    if (v4 != 53)
      return (v4 - 28);
    v6 = *(unsigned __int8 **)(a2 - 32);
    if (!v6 || v6[16] > 0x14u)
      return (v4 - 28);
LABEL_9:
    v7 = llvm::ConstantInt::get(*(llvm::ConstantInt **)a2, 1, 0);
    *a4 = llvm::ConstantExpr::getShl((llvm::ConstantExpr *)v7, (llvm::Constant *)v6, 0, 0);
    return 17;
  }
  if (*(_WORD *)(a2 + 18) == 25)
  {
    v6 = *(unsigned __int8 **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
    if (v6)
      goto LABEL_9;
  }
  v4 = 5;
  return (v4 - 28);
}

llvm::Value *sub_1C577F49C(uint64_t a1, unsigned __int8 *a2, llvm *a3, llvm::Constant *a4)
{
  int v8;
  int v9;
  int v10;
  llvm::Value *Select;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  llvm::Constant *v23;
  int v24;
  llvm *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  int v37;
  _BYTE v38[32];
  __int16 v39;
  __int128 v40;
  __int128 v41;
  unsigned __int8 *v42;
  uint64_t v43;
  llvm::Constant *v44;
  llvm::Constant *v45;
  uint64_t v46;
  llvm *v47;
  llvm *v48;
  uint64_t v49;

  v48 = 0;
  v49 = 0;
  v46 = 0;
  v47 = 0;
  v44 = 0;
  v45 = 0;
  *(_QWORD *)&v40 = &v49;
  *((_QWORD *)&v40 + 1) = &v48;
  *(_QWORD *)&v41 = &v47;
  v8 = sub_1C4FA9CBC((_QWORD **)&v40, (uint64_t)a3);
  *(_QWORD *)&v40 = &v46;
  *((_QWORD *)&v40 + 1) = &v45;
  *(_QWORD *)&v41 = &v44;
  v9 = sub_1C4FA9CBC((_QWORD **)&v40, (uint64_t)a4);
  v10 = v9;
  if ((v8 & 1) != 0 || (Select = 0, v9))
  {
    v13 = *(_QWORD *)(a1 + 24);
    v14 = *(_QWORD *)(v13 + 88);
    v35 = *(_BYTE *)(v13 + 101);
    v36 = *(_BYTE *)(v13 + 100);
    v34 = *(_BYTE *)(v13 + 102);
    v37 = *(_DWORD *)(v13 + 96);
    if (sub_1C4774A9C((uint64_t)a2))
    {
      if (a2[17] >> 1 == 127)
        v15 = -1;
      else
        v15 = a2[17] >> 1;
      *(_DWORD *)(*(_QWORD *)(a1 + 24) + 96) = v15;
    }
    else
    {
      v15 = 0;
    }
    v16 = a2[16] - 28;
    v17 = *(_OWORD *)(a1 + 120);
    v18 = *(_OWORD *)(a1 + 104);
    v40 = *(_OWORD *)(a1 + 88);
    v41 = v18;
    v43 = *((_QWORD *)&v17 + 1);
    v42 = a2;
    if ((v8 & v10) == 1 && (v33 = v49, v49 == v46))
    {
      v22 = (uint64_t *)llvm::SimplifyBinOp(v16, v48, v45, v15, (llvm::Constant **)&v40);
      v28 = llvm::SimplifyBinOp(v16, v47, v44, v15, (llvm::Constant **)&v40);
      v26 = v28;
      v29 = *((_QWORD *)a3 + 1);
      if (!v29)
      {
LABEL_35:
        v21 = v33;
        goto LABEL_21;
      }
      v21 = v33;
      if (!*(_QWORD *)(v29 + 8))
      {
        v30 = *((_QWORD *)a4 + 1);
        if (v30)
        {
          if (!*(_QWORD *)(v30 + 8))
          {
            if (v28 && !v22)
            {
              v32 = *(_QWORD *)(a1 + 24);
              v39 = 257;
              v22 = (uint64_t *)sub_1C4773860(v32, v16, v48, (uint64_t)v45, (uint64_t)v38, 0);
            }
            else if (v22 && !v28)
            {
              v31 = *(_QWORD *)(a1 + 24);
              v39 = 257;
              v26 = (uint64_t)sub_1C4773860(v31, v16, v47, (uint64_t)v44, (uint64_t)v38, 0);
            }
            goto LABEL_35;
          }
        }
      }
    }
    else
    {
      if (v8 && (v19 = *((_QWORD *)a3 + 1)) != 0 && !*(_QWORD *)(v19 + 8))
      {
        v21 = v49;
        v22 = (uint64_t *)llvm::SimplifyBinOp(v16, v48, a4, v15, (llvm::Constant **)&v40);
        v25 = v47;
        v24 = v16;
        v23 = a4;
      }
      else
      {
        if (!v10 || (v20 = *((_QWORD *)a4 + 1)) == 0 || *(_QWORD *)(v20 + 8))
        {
          Select = 0;
LABEL_17:
          *(_DWORD *)(v13 + 96) = v37;
          *(_QWORD *)(v13 + 88) = v14;
          *(_BYTE *)(v13 + 100) = v36;
          *(_BYTE *)(v13 + 101) = v35;
          *(_BYTE *)(v13 + 102) = v34;
          return Select;
        }
        v21 = v46;
        v22 = (uint64_t *)llvm::SimplifyBinOp(v16, a3, v45, v15, (llvm::Constant **)&v40);
        v23 = v44;
        v24 = v16;
        v25 = a3;
      }
      v26 = llvm::SimplifyBinOp(v24, v25, v23, v15, (llvm::Constant **)&v40);
    }
LABEL_21:
    Select = 0;
    if (v22 && v26)
    {
      v27 = *(uint64_t **)(a1 + 24);
      v39 = 257;
      Select = llvm::IRBuilderBase::CreateSelect(v27, v21, v22, v26, (uint64_t)v38, 0);
      llvm::Value::takeName(Select, (llvm::Value *)a2);
    }
    goto LABEL_17;
  }
  return Select;
}

void sub_1C577F7AC(uint64_t a1, llvm::Value *a2)
{
  uint64_t i;
  unsigned __int8 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  for (i = *((_QWORD *)a2 + 1); i; i = *(_QWORD *)(i + 8))
  {
    v5 = *(unsigned __int8 **)(i + 24);
    v6 = v5[16];
    if (v6 == 85)
    {
      v7 = *((_QWORD *)v5 - 8);
      v8 = *((_QWORD *)v5 - 4);
      if (v7 != v8)
      {
        v9 = *((_QWORD *)v5 - 3);
        *((_QWORD *)v5 - 8) = v8;
        *((_QWORD *)v5 - 4) = v7;
        v10 = *(_OWORD *)(v5 - 56);
        v11 = (_QWORD *)*((_QWORD *)v5 - 2);
        *((_QWORD *)v5 - 7) = v9;
        *((_QWORD *)v5 - 6) = v11;
        *(_OWORD *)(v5 - 24) = v10;
        *v11 = v5 - 64;
        v12 = *((_QWORD *)v5 - 7);
        if (v12)
          *(_QWORD *)(v12 + 16) = v5 - 56;
        **((_QWORD **)v5 - 2) = v5 - 32;
        v13 = *((_QWORD *)v5 - 3);
        if (v13)
          *(_QWORD *)(v13 + 16) = v5 - 24;
      }
      llvm::Instruction::swapProfMetadata((llvm::Instruction *)v5);
    }
    else if (v6 == 30)
    {
      llvm::BranchInst::swapSuccessors(*(llvm::Instruction **)(i + 24));
    }
    else
    {
      sub_1C577F888(a1, (llvm::ValueAsMetadata *)v5, a2);
    }
  }
}

llvm::UndefValue **sub_1C577F888(uint64_t a1, llvm::ValueAsMetadata *this, llvm::Value *a3)
{
  uint64_t v3;
  llvm::UndefValue **v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;
  BOOL v18;
  unsigned int v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  uint64_t v24;
  int v25;

  v3 = *((_QWORD *)this + 1);
  if (!v3)
    return 0;
  v5 = (llvm::UndefValue **)this;
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_DWORD *)(v7 + 8);
  do
  {
    v9 = *(_QWORD *)(v3 + 24);
    v24 = v9;
    v25 = v8;
    v10 = *(_DWORD *)(v7 + 2080);
    if (v10)
    {
      v11 = *(_QWORD *)(v7 + 2064);
      v12 = v10 - 1;
      v13 = v12 & ((v9 >> 4) ^ (v9 >> 9));
      v14 = (_QWORD *)(v11 + 16 * v13);
      v15 = *v14;
      if (*v14 == v9)
        goto LABEL_20;
      v16 = 0;
      v17 = 1;
      while (v15 != -4096)
      {
        if (v16)
          v18 = 0;
        else
          v18 = v15 == -8192;
        if (v18)
          v16 = v14;
        v19 = v13 + v17++;
        v13 = v19 & v12;
        v14 = (_QWORD *)(v11 + 16 * v13);
        v15 = *v14;
        if (*v14 == v9)
          goto LABEL_20;
      }
      if (v16)
        v20 = v16;
      else
        v20 = v14;
    }
    else
    {
      v20 = 0;
    }
    v21 = sub_1C4D8D8F4((_DWORD *)(v7 + 2064), (uint64_t)&v24, &v24, v20);
    *v21 = v24;
    *((_DWORD *)v21 + 2) = v25;
    v22 = *(unsigned int *)(v7 + 8);
    if (v22 >= *(unsigned int *)(v7 + 12))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(v7, v7 + 16, v22 + 1, 8);
      v22 = *(unsigned int *)(v7 + 8);
    }
    *(_QWORD *)(*(_QWORD *)v7 + 8 * v22) = v9;
    v8 = *(_DWORD *)(v7 + 8) + 1;
    *(_DWORD *)(v7 + 8) = v8;
LABEL_20:
    v3 = *(_QWORD *)(v3 + 8);
  }
  while (v3);
  if (v5 == (llvm::UndefValue **)a3)
    a3 = llvm::UndefValue::get(*v5, this);
  llvm::Value::doRAUW((llvm::ValueAsMetadata *)v5, a3, (llvm::Value *)1);
  *(_BYTE *)(a1 + 168) = 1;
  return v5;
}

llvm::UndefValue *sub_1C577FA08(int a1, llvm::Constant **this)
{
  int v3;
  llvm::Constant *v4;
  llvm::UndefValue *result;
  unsigned int v6;
  llvm::Constant *v7;
  int v8;
  llvm::Type *v9;
  unsigned int v10;
  BOOL v11;
  int v12;
  unsigned int v14;
  llvm::Constant *Zero;
  llvm::Constant *v16;
  llvm::Constant *v17;
  _QWORD **v18;
  uint64_t v19;
  uint64_t v20;
  _WORD v21[4];
  llvm::Constant **v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _QWORD v27[3];

  v27[2] = *MEMORY[0x1E0C80C00];
  v20 = 0;
  v22 = (llvm::Constant **)&v20;
  v3 = *((unsigned __int8 *)this + 16);
  if (v3 != 5)
  {
    if (v3 != 43)
      goto LABEL_10;
    if (!sub_1C4D8AC3C((uint64_t)v21, *(this - 8)))
      goto LABEL_10;
    v4 = *(this - 4);
    if (!v4)
      goto LABEL_10;
LABEL_9:
    *v22 = v4;
    return (llvm::UndefValue *)v20;
  }
  if (*((_WORD *)this + 9) == 15)
  {
    if (sub_1C4E71060((uint64_t)v21, this[-4 * (*((_DWORD *)this + 5) & 0x7FFFFFF)]))
    {
      v4 = this[-4 * (*((_DWORD *)this + 5) & 0x7FFFFFF) + 4];
      if (v4)
        goto LABEL_9;
    }
  }
LABEL_10:
  v6 = *((unsigned __int8 *)this + 16);
  if (v6 == 10)
  {
    v8 = *((_DWORD *)this + 5) & 0x7FFFFFF;
    if (v8)
    {
      v9 = 0;
      while (1)
      {
        result = llvm::Constant::getAggregateElement((llvm::Constant *)this, v9);
        if (!result)
          return result;
        v10 = *((unsigned __int8 *)result + 16);
        v11 = v10 > 0x10;
        v12 = (1 << v10) & 0x11800;
        if (v11 || v12 == 0)
          return 0;
        v9 = (llvm::Type *)((_DWORD)v9 + 1);
        if (v8 == (_DWORD)v9)
          goto LABEL_28;
      }
    }
    goto LABEL_28;
  }
  if (v6 == 15)
  {
    v7 = *this;
    if (*(_BYTE *)(*((_QWORD *)*this + 3) + 8) == 13)
      goto LABEL_29;
    goto LABEL_16;
  }
  if (v6 != 16)
  {
    if (v6 > 0x14)
      return 0;
    v7 = *this;
LABEL_16:
    if ((*((_DWORD *)v7 + 2) & 0xFE) == 0x12 && *(_BYTE *)(**((_QWORD **)v7 + 2) + 8) == 13)
    {
      result = llvm::Constant::getSplatValue((llvm::Constant *)this, 0);
      if (!result)
        return result;
      goto LABEL_28;
    }
    return 0;
  }
LABEL_28:
  v7 = *this;
LABEL_29:
  if ((*((_DWORD *)v7 + 2) & 0xFE) == 0x12)
    v14 = *(unsigned __int8 *)(**((_QWORD **)v7 + 2) + 8);
  else
    v14 = *((_DWORD *)v7 + 2);
  if (v14 <= 6)
    Zero = llvm::ConstantFP::getZero(v7, (llvm::Type *)1);
  else
    Zero = (llvm::Constant *)llvm::Constant::getNullValue(v7, (llvm::Type *)this);
  v17 = Zero;
  result = llvm::ConstantFoldBinaryInstruction((llvm *)0xF, Zero, (llvm::Constant *)this, v16);
  if (!result)
  {
    v18 = *(_QWORD ***)v17;
    if (*(_QWORD *)v17)
    {
      v27[0] = v17;
      v27[1] = this;
      v19 = **v18 + 1512;
      v21[0] = 15;
      v21[1] = 0;
      v22 = (llvm::Constant **)v27;
      v23 = 2;
      v24 = 0u;
      v25 = 0u;
      v26 = 0;
      return (llvm::UndefValue *)sub_1C537D4FC(v19, (uint64_t)v18, (unsigned __int8 *)v21);
    }
    return 0;
  }
  return result;
}

char *sub_1C577FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 *v4;
  llvm::Type *v5;
  unsigned int v6;
  BOOL v7;
  int v9;
  llvm::Constant *AllOnesValue;
  llvm::Type *v11;
  llvm::Value **NullValue;
  unsigned __int8 v13;
  llvm::Constant *v14;
  llvm::Constant *v15;
  _QWORD *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t **v33;
  uint64_t v34;
  _QWORD **v36;
  uint64_t v37;
  llvm::Value *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  void **v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  void *v50;
  unsigned __int8 *v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a2 - 64);
  v4 = *(unsigned __int8 **)(a2 - 32);
  v43 = 0;
  v44 = &v43;
  if (!sub_1C4B037F8(&v44, v3))
    return 0;
  v6 = v4[16];
  v7 = v6 == 5 || v4 == 0;
  if (v7 || v6 > 0x14)
    return 0;
  v9 = *(_DWORD *)(*(_QWORD *)v43 + 8);
  if ((v9 & 0xFE) == 0x12)
    v9 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v43 + 16) + 8);
  if (v9 != 269)
    return 0;
  AllOnesValue = llvm::Constant::getAllOnesValue(*(llvm::Constant **)a2, v5);
  NullValue = llvm::Constant::getNullValue(*(llvm::Constant **)a2, v11);
  v13 = *(_BYTE *)(a2 + 16) - 28;
  v16 = llvm::ConstantFoldBinaryInstruction((llvm *)(*(unsigned __int8 *)(a2 + 16) - 28), AllOnesValue, (llvm::Constant *)v4, v14);
  if (!v16)
  {
    v36 = *(_QWORD ***)AllOnesValue;
    if (*(_QWORD *)AllOnesValue)
    {
      v50 = AllOnesValue;
      v51 = v4;
      v37 = **v36 + 1512;
      LODWORD(v44) = v13;
      v45 = &v50;
      v46 = 2;
      v47 = 0u;
      v48 = 0u;
      v49 = 0;
      v16 = (_QWORD *)sub_1C537D4FC(v37, (uint64_t)v36, (unsigned __int8 *)&v44);
    }
    else
    {
      v16 = 0;
    }
  }
  v17 = *(_BYTE *)(a2 + 16) - 28;
  v18 = (uint64_t)llvm::ConstantFoldBinaryInstruction((llvm *)(*(unsigned __int8 *)(a2 + 16) - 28), (llvm::Constant *)NullValue, (llvm::Constant *)v4, v15);
  if (!v18)
  {
    v38 = *NullValue;
    if (*NullValue)
    {
      v50 = NullValue;
      v51 = v4;
      v39 = **(_QWORD **)v38 + 1512;
      LODWORD(v44) = v17;
      v45 = &v50;
      v46 = 2;
      v47 = 0u;
      v48 = 0u;
      v49 = 0;
      v18 = sub_1C537D4FC(v39, (uint64_t)v38, (unsigned __int8 *)&v44);
    }
    else
    {
      v18 = 0;
    }
  }
  v19 = v43;
  WORD4(v47) = 257;
  v20 = (char *)operator new(0xA0uLL);
  v21 = 0;
  v22 = v20 + 96;
  *((_DWORD *)v20 + 29) = *((_DWORD *)v20 + 29) & 0x38000000 | 3;
  do
  {
    v23 = &v20[v21];
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    *((_QWORD *)v23 + 2) = 0;
    *((_QWORD *)v23 + 3) = v22;
    v21 += 32;
  }
  while (v21 != 96);
  *((_QWORD *)v20 + 12) = *v16;
  *((_QWORD *)v20 + 13) = 0;
  v24 = *((_DWORD *)v20 + 29) & 0xC0000000 | 3;
  *((_DWORD *)v20 + 28) = 85;
  *((_DWORD *)v20 + 29) = v24;
  *(_OWORD *)(v20 + 120) = 0u;
  *(_OWORD *)(v20 + 136) = 0u;
  *((_DWORD *)v20 + 38) = 0;
  if (*(_QWORD *)v20)
  {
    **((_QWORD **)v20 + 2) = *((_QWORD *)v20 + 1);
    v40 = *((_QWORD *)v20 + 1);
    if (v40)
      *(_QWORD *)(v40 + 16) = *((_QWORD *)v20 + 2);
  }
  *(_QWORD *)v20 = v19;
  if (v19)
  {
    v27 = *(_QWORD *)(v19 + 8);
    v26 = (_QWORD *)(v19 + 8);
    v25 = v27;
    *((_QWORD *)v20 + 1) = v27;
    if (v27)
      *(_QWORD *)(v25 + 16) = v20 + 8;
    *((_QWORD *)v20 + 2) = v26;
    *v26 = v20;
  }
  if (*((_QWORD *)v20 + 4))
  {
    **((_QWORD **)v20 + 6) = *((_QWORD *)v20 + 5);
    v41 = *((_QWORD *)v20 + 5);
    if (v41)
      *(_QWORD *)(v41 + 16) = *((_QWORD *)v20 + 6);
  }
  *((_QWORD *)v20 + 4) = v16;
  v30 = v16[1];
  v29 = v16 + 1;
  v28 = v30;
  *((_QWORD *)v20 + 5) = v30;
  if (v30)
    *(_QWORD *)(v28 + 16) = v20 + 40;
  *((_QWORD *)v20 + 6) = v29;
  *v29 = v20 + 32;
  v31 = (uint64_t *)(v20 + 64);
  if (*((_QWORD *)v20 + 8))
  {
    **((_QWORD **)v20 + 10) = *((_QWORD *)v20 + 9);
    v42 = *((_QWORD *)v20 + 9);
    if (v42)
      *(_QWORD *)(v42 + 16) = *((_QWORD *)v20 + 10);
  }
  *v31 = v18;
  if (v18)
  {
    v34 = *(_QWORD *)(v18 + 8);
    v33 = (uint64_t **)(v18 + 8);
    v32 = v34;
    *((_QWORD *)v20 + 9) = v34;
    if (v34)
      *(_QWORD *)(v32 + 16) = v20 + 72;
    *((_QWORD *)v20 + 10) = v33;
    *v33 = v31;
  }
  llvm::Value::setName((uint64_t ***)v20 + 12, (uint64_t)&v44);
  return v22;
}

uint64_t sub_1C577FF7C(uint64_t a1, _BYTE *a2, _QWORD *a3, llvm::Constant *a4)
{
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;
  int v18;
  _BOOL4 v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v23;
  unsigned __int8 *v24;
  llvm::Constant *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned __int8 **v38;
  uint64_t v39;
  unsigned __int8 ***v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned __int8 *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  llvm::UndefValue *ICmp;
  unsigned int v49;
  llvm::UndefValue *v50;
  unsigned int v51;
  uint64_t v52;
  int v53;
  llvm::UndefValue *v54;
  unsigned int v55;
  uint64_t v56;
  int v57;
  llvm::UndefValue *v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  llvm::APInt **v63;
  uint64_t v64;
  __int16 v65;
  llvm::APInt *v66;

  v7 = a3[1];
  if (v7)
    LOBYTE(v7) = *(_QWORD *)(v7 + 8) == 0;
  if ((v7 & 1) == 0 && !(_DWORD)a4)
    return 0;
  v8 = (unsigned __int8 *)*(a3 - 8);
  v9 = (unsigned __int8 *)*(a3 - 4);
  v10 = v8[16];
  if (v10 >= 0x15 && v9[16] > 0x14u)
    return 0;
  v11 = *(_DWORD *)(*a3 + 8);
  if ((v11 & 0xFE) == 0x12)
    v11 = *(_DWORD *)(**(_QWORD **)(*a3 + 16) + 8);
  if (v11 == 269)
    return 0;
  if (a2[16] != 77)
    goto LABEL_21;
  v12 = 0;
  v14 = *(_QWORD *)a2;
  if ((*(_DWORD *)(*(_QWORD *)a2 + 8) & 0xFE) != 0x12)
    v14 = 0;
  v15 = **((_QWORD **)a2 - 4);
  if ((*(_DWORD *)(v15 + 8) & 0xFE) != 0x12)
    v15 = 0;
  if ((v14 == 0) != (v15 != 0))
  {
    if (!v15
      || (v12 = 0,
          v16 = *(_DWORD *)(v15 + 32),
          v17 = *(unsigned __int8 *)(v15 + 8) == 19,
          v18 = *(_DWORD *)(v14 + 32),
          v19 = *(unsigned __int8 *)(v14 + 8) == 19,
          v16 == v18)
      && ((v17 ^ v19) & 1) == 0)
    {
LABEL_21:
      v20 = *(a3 - 12);
      if (!v20)
        goto LABEL_29;
      v21 = *(unsigned __int8 *)(v20 + 16);
      if (v21 < 0x1C || v21 - 83 < 0xFFFFFFFE)
        goto LABEL_29;
      v23 = *(_QWORD *)(v20 + 8);
      if (!v23 || *(_QWORD *)(v23 + 8))
        goto LABEL_29;
      v42 = *(unsigned __int8 **)(v20 - 64);
      v43 = *(unsigned __int8 **)(v20 - 32);
      if (v8 != v42)
      {
        if (v10 > 0x14 || !v42 || v42[16] > 0x14u)
          goto LABEL_47;
        v46 = *(_QWORD *)v8;
        v47 = (*(_DWORD *)(*(_QWORD *)v8 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(_QWORD **)(v46 + 16) + 8)
            : *(_DWORD *)(*(_QWORD *)v8 + 8);
        if (v47 != 13)
          goto LABEL_47;
        if (v46 != *(_QWORD *)v42)
          goto LABEL_47;
        ICmp = llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, (unsigned __int8 *)*(a3 - 8), (llvm::Constant *)v42, 0);
        v66 = 0;
        v63 = &v66;
        v64 = 1;
        if ((sub_1C4D8A004((uint64_t)&v63, ICmp) & 1) == 0)
          goto LABEL_47;
        v49 = *((_DWORD *)v66 + 2);
        if (v49 > 0x40)
        {
          if (llvm::APInt::countLeadingZerosSlowCase(v66) != v49 - 1)
            goto LABEL_47;
        }
        else if (*(_QWORD *)v66 != 1)
        {
          goto LABEL_47;
        }
      }
      if (v9 == v43)
        return 0;
      if (v9 && v9[16] <= 0x14u && v43 && v43[16] <= 0x14u)
      {
        v52 = *(_QWORD *)v9;
        v53 = (*(_DWORD *)(*(_QWORD *)v9 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(_QWORD **)(v52 + 16) + 8)
            : *(_DWORD *)(*(_QWORD *)v9 + 8);
        if (v53 == 13 && v52 == *(_QWORD *)v43)
        {
          v54 = llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, v9, (llvm::Constant *)v43, 0);
          v66 = 0;
          v63 = &v66;
          v64 = 1;
          if ((sub_1C4D8A004((uint64_t)&v63, v54) & 1) != 0)
          {
            v55 = *((_DWORD *)v66 + 2);
            if (v55 > 0x40)
            {
              if (llvm::APInt::countLeadingZerosSlowCase(v66) == v55 - 1)
                return 0;
            }
            else if (*(_QWORD *)v66 == 1)
            {
              return 0;
            }
          }
        }
      }
LABEL_47:
      if (v9 != v42)
      {
        if (!v9 || v9[16] > 0x14u || !v42 || v42[16] > 0x14u)
          goto LABEL_29;
        v44 = *(_QWORD *)v9;
        v45 = (*(_DWORD *)(*(_QWORD *)v9 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(_QWORD **)(v44 + 16) + 8)
            : *(_DWORD *)(*(_QWORD *)v9 + 8);
        if (v45 != 13)
          goto LABEL_29;
        if (v44 != *(_QWORD *)v42)
          goto LABEL_29;
        v50 = llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, v9, (llvm::Constant *)v42, 0);
        v66 = 0;
        v63 = &v66;
        v64 = 1;
        if ((sub_1C4D8A004((uint64_t)&v63, v50) & 1) == 0)
          goto LABEL_29;
        v51 = *((_DWORD *)v66 + 2);
        if (v51 > 0x40)
        {
          if (llvm::APInt::countLeadingZerosSlowCase(v66) != v51 - 1)
            goto LABEL_29;
        }
        else if (*(_QWORD *)v66 != 1)
        {
          goto LABEL_29;
        }
      }
      if (v8 != v43)
      {
        if (v8[16] > 0x14u || !v43 || v43[16] > 0x14u)
          goto LABEL_29;
        v56 = *(_QWORD *)v8;
        v57 = (*(_DWORD *)(*(_QWORD *)v8 + 8) & 0xFE) == 0x12
            ? *(unsigned __int8 *)(**(_QWORD **)(v56 + 16) + 8)
            : *(_DWORD *)(*(_QWORD *)v8 + 8);
        if (v57 != 13)
          goto LABEL_29;
        if (v56 != *(_QWORD *)v43)
          goto LABEL_29;
        v58 = llvm::ConstantExpr::getICmp((llvm::ConstantExpr *)0x20, v8, (llvm::Constant *)v43, 0);
        v66 = 0;
        v63 = &v66;
        v64 = 1;
        if ((sub_1C4D8A004((uint64_t)&v63, v58) & 1) == 0)
          goto LABEL_29;
        v59 = *((_DWORD *)v66 + 2);
        if (v59 > 0x40)
        {
          if (llvm::APInt::countLeadingZerosSlowCase(v66) != v59 - 1)
          {
LABEL_29:
            v24 = sub_1C57805A0((uint64_t)a2, (llvm::Constant *)v8, *(uint64_t **)(a1 + 24), a4);
            v26 = sub_1C57805A0((uint64_t)a2, (llvm::Constant *)v9, *(uint64_t **)(a1 + 24), v25);
            v27 = *(a3 - 12);
            v65 = 257;
            v28 = (char *)operator new(0xA0uLL);
            v29 = 0;
            v12 = (uint64_t)(v28 + 96);
            *((_DWORD *)v28 + 29) = *((_DWORD *)v28 + 29) & 0x38000000 | 3;
            do
            {
              v30 = &v28[v29];
              *(_QWORD *)v30 = 0;
              *((_QWORD *)v30 + 1) = 0;
              *((_QWORD *)v30 + 2) = 0;
              *((_QWORD *)v30 + 3) = v12;
              v29 += 32;
            }
            while (v29 != 96);
            *((_QWORD *)v28 + 12) = *(_QWORD *)v24;
            *((_QWORD *)v28 + 13) = 0;
            v31 = *((_DWORD *)v28 + 29) & 0xC0000000 | 3;
            *((_DWORD *)v28 + 28) = 85;
            *((_DWORD *)v28 + 29) = v31;
            *(_OWORD *)(v28 + 120) = 0u;
            *(_OWORD *)(v28 + 136) = 0u;
            *((_DWORD *)v28 + 38) = 0;
            if (*(_QWORD *)v28)
            {
              **((_QWORD **)v28 + 2) = *((_QWORD *)v28 + 1);
              v60 = *((_QWORD *)v28 + 1);
              if (v60)
                *(_QWORD *)(v60 + 16) = *((_QWORD *)v28 + 2);
            }
            *(_QWORD *)v28 = v27;
            if (v27)
            {
              v34 = *(_QWORD *)(v27 + 8);
              v33 = (_QWORD *)(v27 + 8);
              v32 = v34;
              *((_QWORD *)v28 + 1) = v34;
              if (v34)
                *(_QWORD *)(v32 + 16) = v28 + 8;
              *((_QWORD *)v28 + 2) = v33;
              *v33 = v28;
            }
            if (*((_QWORD *)v28 + 4))
            {
              **((_QWORD **)v28 + 6) = *((_QWORD *)v28 + 5);
              v61 = *((_QWORD *)v28 + 5);
              if (v61)
                *(_QWORD *)(v61 + 16) = *((_QWORD *)v28 + 6);
            }
            *((_QWORD *)v28 + 4) = v24;
            v37 = *((_QWORD *)v24 + 1);
            v36 = v24 + 8;
            v35 = v37;
            *((_QWORD *)v28 + 5) = v37;
            if (v37)
              *(_QWORD *)(v35 + 16) = v28 + 40;
            *((_QWORD *)v28 + 6) = v36;
            *v36 = v28 + 32;
            v38 = (unsigned __int8 **)(v28 + 64);
            if (*((_QWORD *)v28 + 8))
            {
              **((_QWORD **)v28 + 10) = *((_QWORD *)v28 + 9);
              v62 = *((_QWORD *)v28 + 9);
              if (v62)
                *(_QWORD *)(v62 + 16) = *((_QWORD *)v28 + 10);
            }
            *v38 = v26;
            if (v26)
            {
              v41 = *((_QWORD *)v26 + 1);
              v40 = (unsigned __int8 ***)(v26 + 8);
              v39 = v41;
              *((_QWORD *)v28 + 9) = v41;
              if (v41)
                *(_QWORD *)(v39 + 16) = v28 + 72;
              *((_QWORD *)v28 + 10) = v40;
              *v40 = v38;
            }
            llvm::Value::setName((uint64_t ***)v28 + 12, (uint64_t)&v63);
            llvm::Instruction::copyMetadata(v12, (uint64_t)a3, 0, 0);
            return v12;
          }
        }
        else if (*(_QWORD *)v66 != 1)
        {
          goto LABEL_29;
        }
      }
      return 0;
    }
  }
  return v12;
}

unsigned __int8 *sub_1C57805A0(uint64_t a1, llvm::Constant *a2, uint64_t *a3, llvm::Constant *a4)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  llvm::ValueHandleBase *v12;
  unsigned int v14;
  llvm::Constant *v15;
  unsigned __int8 v16;
  llvm *v17;
  _QWORD **v18;
  llvm::Constant *v19;
  llvm::Constant *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  llvm::Constant *v27;
  int v28;
  int v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  llvm::Constant **v33;
  llvm::Constant **v34;
  unsigned __int8 *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  llvm::Constant **v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  llvm::Constant *v49;
  llvm::Constant *v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v6 = *(unsigned __int8 *)(a1 + 16);
  if ((v6 - 79) >= 0xFFFFFFF3)
  {
    v10 = *(_QWORD *)a1;
    WORD4(v46) = 257;
    return sub_1C4773E38(a3, (v6 - 28), (unsigned __int8 *)a2, v10, (uint64_t)&v43);
  }
  if (v6 == 84)
  {
    v7 = *(_QWORD *)(a1 - 32);
    if (v7)
    {
      if (!*(_BYTE *)(v7 + 16) && *(_QWORD *)(v7 + 24) == *(_QWORD *)(a1 + 72) && (*(_BYTE *)(v7 + 33) & 0x20) != 0)
      {
        v36 = 0;
        v37 = *(_DWORD *)(v7 + 36);
        v38 = *(_DWORD *)(a1 + 20);
        v39 = -(uint64_t)(v38 & 0x7FFFFFF);
        if (v38 < 0)
        {
          v41 = a1 - 32 * (v38 & 0x7FFFFFF);
          v42 = *(_QWORD *)(v41 - 8);
          if ((v42 & 0xFFFFFFFF0) != 0)
            v36 = *(_DWORD *)(v41 - 12) - *(_DWORD *)(v41 - v42);
          else
            v36 = 0;
        }
        if (((32 * -v36 - 32 - 32 * v39) & 0x1FFFFFFFE0) == 0x20)
        {
          WORD4(v46) = 257;
          return (unsigned __int8 *)llvm::IRBuilderBase::CreateUnaryIntrinsic(a3, v37, (uint64_t *)a2, 0, (uint64_t)&v43);
        }
        else
        {
          v40 = *(_QWORD *)(a1 + 32 * v39 + 32);
          WORD4(v46) = 257;
          return (unsigned __int8 *)llvm::IRBuilderBase::CreateBinaryIntrinsic(a3, v37, (uint64_t *)a2, v40, 0, (uint64_t)&v43);
        }
      }
    }
  }
  v8 = *(_DWORD *)(a1 + 20);
  if ((v8 & 0x40000000) != 0)
    v9 = *(_QWORD *)(a1 - 8);
  else
    v9 = a1 - 32 * (v8 & 0x7FFFFFF);
  v14 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 32) + 16);
  v15 = *(llvm::Constant **)(v9 + 32 * (v14 < 0x15));
  if (a2 && *((unsigned __int8 *)a2 + 16) <= 0x14u)
  {
    v16 = v6 - 28;
    v17 = (llvm *)(v6 - 28);
    if (v14 > 0x14)
    {
      v12 = llvm::ConstantFoldBinaryInstruction(v17, v15, a2, a4);
      if (v12)
        return (unsigned __int8 *)v12;
      v18 = *(_QWORD ***)v15;
      if (*(_QWORD *)v15)
      {
        v49 = v15;
        v50 = a2;
        goto LABEL_35;
      }
    }
    else
    {
      v12 = llvm::ConstantFoldBinaryInstruction(v17, a2, v15, a4);
      if (v12)
        return (unsigned __int8 *)v12;
      v18 = *(_QWORD ***)a2;
      if (*(_QWORD *)a2)
      {
        v49 = a2;
        v50 = v15;
LABEL_35:
        v30 = **v18 + 1512;
        LODWORD(v43) = v16;
        v44 = &v49;
        v45 = 2;
        v46 = 0u;
        v47 = 0u;
        v48 = 0;
        return (unsigned __int8 *)sub_1C537D4FC(v30, (uint64_t)v18, (unsigned __int8 *)&v43);
      }
    }
    return 0;
  }
  if (v14 >= 0x15)
    v19 = a2;
  else
    v19 = *(llvm::Constant **)(v9 + 32 * (v14 < 0x15));
  if (v14 >= 0x15)
    v20 = *(llvm::Constant **)(v9 + 32 * (v14 < 0x15));
  else
    v20 = a2;
  v21 = (v6 - 28);
  if ((*((_BYTE *)a2 + 23) & 0x10) == 0)
  {
    v33 = 0;
    v32 = &byte_1C871356D;
    goto LABEL_38;
  }
  v22 = ***(_QWORD ***)a2;
  v23 = *(_QWORD *)(v22 + 152);
  v24 = *(unsigned int *)(v22 + 168);
  if (!(_DWORD)v24)
    goto LABEL_36;
  LODWORD(v25) = (v24 - 1) & ((a2 >> 4) ^ (a2 >> 9));
  v26 = v23 + 16 * v25;
  v27 = *(llvm::Constant **)v26;
  if (*(llvm::Constant **)v26 != a2)
  {
    v28 = 1;
    while (v27 != (llvm::Constant *)-4096)
    {
      v29 = v25 + v28++;
      v25 = v29 & (v24 - 1);
      v27 = *(llvm::Constant **)(v23 + 16 * v25);
      if (v27 == a2)
      {
        v26 = v23 + 16 * v25;
        goto LABEL_37;
      }
    }
LABEL_36:
    v26 = v23 + 16 * v24;
  }
LABEL_37:
  v31 = *(_QWORD **)(v26 + 8);
  v34 = (llvm::Constant **)*v31;
  v32 = (char *)(v31 + 2);
  v33 = v34;
LABEL_38:
  WORD4(v46) = 773;
  v43 = v32;
  v44 = v33;
  v45 = (uint64_t)".op";
  v35 = sub_1C4773860((uint64_t)a3, v21, v20, (uint64_t)v19, (uint64_t)&v43, 0);
  v12 = (llvm::ValueHandleBase *)v35;
  if (v35 && v35[16] >= 0x1Cu)
    llvm::Instruction::copyIRFlags((uint64_t)v35, a1, 1);
  return (unsigned __int8 *)v12;
}

llvm::UndefValue **sub_1C57808D4(uint64_t a1, llvm::Instruction *this, uint64_t a3)
{
  int v3;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v18;
  uint64_t v19;
  uint64_t v20;
  llvm::UndefValue **result;
  uint64_t v22;
  unsigned int v23;
  uint64_t v25;
  int v26;
  _QWORD *v27;
  llvm::Value *v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  unsigned int v40;
  llvm::Value **v41;
  llvm::Value *v42;
  llvm::Value **v43;
  int v44;
  BOOL v45;
  unsigned int v46;
  llvm::Value **v47;
  unsigned __int8 **v48;
  unsigned __int8 *v49;
  uint64_t v50;
  llvm::Constant *v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  const llvm::BasicBlock *v60;
  int v61;
  uint64_t v62;
  const llvm::BasicBlock *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  llvm::Constant *v67;
  BOOL v68;
  unsigned __int8 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  uint64_t *v74;
  int v75;
  uint64_t v76;
  llvm::Value *Select;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  uint64_t v83;
  unsigned __int8 **v84;
  uint64_t v85;
  uint64_t *v86;
  _QWORD *v87;
  char *v88;
  unsigned __int8 **v89;
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  int v95;
  int v96;
  uint64_t v97;
  unsigned __int8 *v98;
  unsigned int v99;
  llvm::Constant *v100;
  BOOL v101;
  uint64_t v102;
  unsigned __int8 *v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 *v106;
  uint64_t v107;
  BOOL v108;
  char *v109;
  unsigned __int8 v110;
  llvm *v111;
  _QWORD **v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  llvm::Constant *v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  llvm::ConstantExpr *v125;
  uint64_t FCmpHelper;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  uint64_t v139;
  uint64_t Cast;
  uint64_t *v141;
  uint64_t v142;
  unsigned __int8 *v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  llvm::ValueAsMetadata *v148;
  uint64_t v149;
  llvm::ValueSymbolTable *v150;
  int v151;
  llvm::Value *v152;
  llvm::Value *v153;
  int v154;
  llvm::PHINode *v155;
  unsigned __int8 *v156[3];
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  const char *v160;
  void *v161;
  __int16 v162;
  uint64_t v163;

  v163 = *MEMORY[0x1E0C80C00];
  v3 = *(_DWORD *)(a3 + 20);
  if ((v3 & 0x7FFFFFF) == 0)
    return 0;
  v7 = *(_QWORD *)(a3 + 8);
  if (v7 && *(_QWORD *)(v7 + 8))
  {
    do
    {
      v8 = *(unsigned __int8 **)(v7 + 24);
      if (v8 != (unsigned __int8 *)this
        && (!llvm::Instruction::isIdenticalToWhenDefined(this, *(const llvm::Instruction **)(v7 + 24))
         || (v8[17] ^ *((unsigned __int8 *)this + 17)) > 1))
      {
        return 0;
      }
      v7 = *(_QWORD *)(v7 + 8);
    }
    while (v7);
  }
  v9 = 0;
  v10 = 0;
  v11 = 0;
  do
  {
    v12 = *(_DWORD *)(a3 + 20);
    if ((v12 & 0x40000000) != 0)
      v13 = *(_QWORD *)(a3 - 8);
    else
      v13 = a3 - 32 * (v12 & 0x7FFFFFF);
    v14 = *(_QWORD *)(v13 + v9);
    if (*((_BYTE *)this + 16) == 95)
    {
      if ((sub_1C4F8BE80((uint64_t ***)v14, 0, 0, 0, 0, 0) & 1) != 0)
        goto LABEL_31;
      v15 = *(unsigned __int8 *)(v14 + 16);
    }
    else
    {
      v15 = *(unsigned __int8 *)(v14 + 16);
      if (v15 <= 0x14 && v15 != 5)
        goto LABEL_31;
    }
    if (v15 == 83 || v11 != 0)
      return 0;
    v18 = *(_DWORD *)(a3 + 20);
    v19 = (v18 & 0x40000000) != 0 ? *(_QWORD *)(a3 - 8) : a3 - 32 * (v18 & 0x7FFFFFF);
    v11 = *(_QWORD *)(v19 + 32 * *(unsigned int *)(a3 + 60) + 8 * v10);
    if (v15 == 33 && *(_QWORD *)(v14 + 40) == v11)
      return 0;
    if ((llvm::isPotentiallyReachable(*((_QWORD *)this + 5), *(_QWORD *)(v19 + 32 * *(unsigned int *)(a3 + 60) + 8 * v10), 0, *(_QWORD *)(a1 + 72), *(uint64_t **)(a1 + 160)) & 1) != 0)return 0;
LABEL_31:
    ++v10;
    v9 += 32;
  }
  while ((v3 & 0x7FFFFFF) != (_DWORD)v10);
  if (!v11)
    goto LABEL_46;
  v20 = *(_QWORD *)(v11 + 40);
  if (v20 == v11 + 40)
    return 0;
  result = 0;
  v22 = v20 - 24;
  if (!v20)
    v22 = 0;
  v23 = *(unsigned __int8 *)(v22 + 16) - 40;
  if (v23 < 0xFFFFFFF5)
    v22 = 0;
  if (v20)
  {
    if (*(_BYTE *)(v22 + 16) == 30 && v23 >= 0xFFFFFFF5)
    {
      if ((*(_DWORD *)(v22 + 20) & 0x7FFFFFF) != 1
        || !llvm::DominatorTreeBase<llvm::BasicBlock,false>::isReachableFromEntry(*(_QWORD *)(a1 + 72), v11))
      {
        return 0;
      }
LABEL_46:
      v25 = *(_QWORD *)this;
      v26 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
      WORD4(v157) = 257;
      v27 = operator new(0x48uLL);
      v27[1] = v25;
      v28 = (llvm::Value *)(v27 + 1);
      *v27 = 0;
      v27[2] = 0;
      v27[3] = 0x4000000000000053;
      *((_OWORD *)v27 + 2) = 0u;
      v29 = (char *)(v27 + 4);
      *((_OWORD *)v27 + 3) = 0u;
      *((_DWORD *)v27 + 16) = 0;
      *((_DWORD *)v27 + 17) = v26;
      llvm::Value::setName((uint64_t ***)v27 + 1, (uint64_t)v156);
      v30 = *((unsigned int *)v27 + 17);
      v31 = operator new(40 * v30);
      *v27 = v31;
      if ((_DWORD)v30)
      {
        v32 = &v31[4 * v30];
        do
        {
          *v31 = 0;
          v31[1] = 0;
          v31[2] = 0;
          v31[3] = v28;
          v31 += 4;
        }
        while (v31 != v32);
      }
      v33 = *(_QWORD *)(a3 + 40);
      v34 = (uint64_t *)(a3 + 24);
      v27[6] = v33;
      *(_WORD *)(v33 + 18) &= ~0x8000u;
      if ((*((_BYTE *)v27 + 31) & 0x10) != 0)
      {
        v149 = *(_QWORD *)(v33 + 56);
        if (v149)
        {
          v150 = *(llvm::ValueSymbolTable **)(v149 + 104);
          if (v150)
            llvm::ValueSymbolTable::reinsertValue(v150, v28);
        }
      }
      v35 = *v34;
      v27[4] = *v34;
      v27[5] = v34;
      *(_QWORD *)(v35 + 8) = v29;
      *v34 = (uint64_t)v29;
      v36 = *(_QWORD *)(a1 + 32);
      v156[0] = (unsigned __int8 *)(v27 + 1);
      if ((*(_BYTE *)(v36 + 2088) & 1) != 0)
      {
        v38 = v36 + 2096;
        v37 = 16;
      }
      else
      {
        v37 = *(_DWORD *)(v36 + 2104);
        if (!v37)
        {
          v47 = 0;
          goto LABEL_68;
        }
        v38 = *(_QWORD *)(v36 + 2096);
      }
      v39 = v37 - 1;
      v40 = v39 & ((v28 >> 4) ^ (v28 >> 9));
      v41 = (llvm::Value **)(v38 + 8 * v40);
      v42 = *v41;
      if (v28 == *v41)
      {
LABEL_71:
        llvm::Value::takeName(v28, (llvm::Value *)a3);
        if (v11)
        {
          v52 = 0;
          v53 = *(_QWORD *)(a1 + 24);
          v54 = *(_QWORD *)(v11 + 40);
          if (v54)
            v55 = v54 - 24;
          else
            v55 = 0;
          if (*(unsigned __int8 *)(v55 + 16) - 29 >= 0xB)
            v55 = 0;
          *(_QWORD *)(v53 + 48) = *(_QWORD *)(v55 + 40);
          *(_QWORD *)(v53 + 56) = v55 + 24;
          v56 = *(unsigned __int8 **)(v55 + 48);
          v156[0] = v56;
          if (v56)
          {
            llvm::MetadataTracking::track((uint64_t)v156, v56, 2);
            v52 = v156[0];
          }
          sub_1C4774EF4(v53, 0, (uint64_t)v52);
          if (v156[0])
            llvm::MetadataTracking::untrack((uint64_t)v156, v156[0]);
        }
        v57 = *((unsigned __int8 *)this + 16);
        v155 = v28;
        if (v57 == 85)
        {
          v58 = 0;
          v59 = 0;
          v152 = (llvm::Value *)*((_QWORD *)this - 4);
          v153 = (llvm::Value *)*((_QWORD *)this - 8);
          v151 = v3 & 0x7FFFFFF;
          v60 = *(const llvm::BasicBlock **)(a3 + 40);
          do
          {
            v61 = *(_DWORD *)(a3 + 20);
            if ((v61 & 0x40000000) != 0)
              v62 = *(_QWORD *)(a3 - 8);
            else
              v62 = a3 - 32 * (v61 & 0x7FFFFFF);
            v63 = *(const llvm::BasicBlock **)(v62 + 32 * *(unsigned int *)(a3 + 60) + 8 * v59);
            v64 = (uint64_t *)llvm::Value::DoPHITranslation((uint64_t)v153, v60, v63);
            v65 = llvm::Value::DoPHITranslation((uint64_t)v152, v60, v63);
            if ((v61 & 0x40000000) != 0)
              v66 = *(_QWORD *)(a3 - 8);
            else
              v66 = a3 - 32 * (v61 & 0x7FFFFFF);
            v67 = *(llvm::Constant **)(v66 + v58);
            if (v67)
              v68 = *((_BYTE *)v67 + 16) == 16;
            else
              v68 = 0;
            if (v68)
            {
              if (llvm::Constant::isNullValue(v67))
                Select = (llvm::Value *)v65;
              else
                Select = (llvm::Value *)v64;
            }
            else
            {
              v69 = 0;
              v70 = *(_QWORD *)(a1 + 24);
              v71 = *((_QWORD *)v63 + 5);
              if (v71)
                v72 = v71 - 24;
              else
                v72 = 0;
              if (*(unsigned __int8 *)(v72 + 16) - 29 >= 0xB)
                v72 = 0;
              *(_QWORD *)(v70 + 48) = *(_QWORD *)(v72 + 40);
              *(_QWORD *)(v70 + 56) = v72 + 24;
              v73 = *(unsigned __int8 **)(v72 + 48);
              v156[0] = v73;
              if (v73)
              {
                llvm::MetadataTracking::track((uint64_t)v156, v73, 2);
                v69 = v156[0];
              }
              sub_1C4774EF4(v70, 0, (uint64_t)v69);
              if (v156[0])
                llvm::MetadataTracking::untrack((uint64_t)v156, v156[0]);
              v74 = *(uint64_t **)(a1 + 24);
              v75 = *(_DWORD *)(a3 + 20);
              if ((v75 & 0x40000000) != 0)
                v76 = *(_QWORD *)(a3 - 8);
              else
                v76 = a3 - 32 * (v75 & 0x7FFFFFF);
              v78 = *(_QWORD *)(v76 + v58);
              v156[0] = "phi.sel";
              WORD4(v157) = 259;
              Select = llvm::IRBuilderBase::CreateSelect(v74, v78, v64, v65, (uint64_t)v156, 0);
            }
            sub_1C477667C(v155, (uint64_t)Select, (uint64_t)v63);
            ++v59;
            v58 += 32;
          }
          while (v151 != (_DWORD)v59);
          goto LABEL_206;
        }
        if ((v57 - 83) >= 0xFFFFFFFE)
        {
          v90 = *((_DWORD *)this + 5);
          if ((v90 & 0x40000000) != 0)
            v91 = (char *)*((_QWORD *)this - 1);
          else
            v91 = (char *)this - 32 * (v90 & 0x7FFFFFF);
          v116 = 0;
          v117 = 0;
          v118 = (llvm::Constant *)*((_QWORD *)v91 + 4);
          v119 = v3 & 0x7FFFFFF;
          do
          {
            v120 = *(_DWORD *)(a3 + 20);
            if ((v120 & 0x40000000) != 0)
              v121 = *(_QWORD *)(a3 - 8);
            else
              v121 = a3 - 32 * (v120 & 0x7FFFFFF);
            v122 = *(_QWORD *)(v121 + v116);
            if (v122)
              v123 = *(unsigned __int8 *)(v122 + 16) > 0x14u;
            else
              v123 = 1;
            if (v123)
            {
              if ((v120 & 0x40000000) != 0)
                v124 = *(_QWORD *)(a3 - 8);
              else
                v124 = a3 - 32 * (v120 & 0x7FFFFFF);
              v127 = *(_QWORD *)(a1 + 24);
              v128 = *((_WORD *)this + 9) & 0x3F;
              v129 = *(uint64_t **)(v124 + v116);
              v156[0] = "phi.cmp";
              WORD4(v157) = 259;
              if (v128 > 0xF)
                FCmpHelper = sub_1C4774B48(v127, v128, (uint64_t)v129, (uint64_t)v118, (uint64_t)v156);
              else
                FCmpHelper = llvm::IRBuilderBase::CreateFCmpHelper(v127, v128, v129, (uint64_t)v118, (uint64_t)v156, 0, 0);
            }
            else
            {
              v125 = (llvm::ConstantExpr *)(*((_WORD *)this + 9) & 0x3F);
              if (v125 <= 0xF)
                FCmpHelper = llvm::ConstantExpr::getFCmp(v125, (uint64_t ***)v122, v118, 0);
              else
                FCmpHelper = (uint64_t)llvm::ConstantExpr::getICmp(v125, (unsigned __int8 *)v122, v118, 0);
            }
            v130 = *(_DWORD *)(a3 + 20);
            if ((v130 & 0x40000000) != 0)
              v131 = *(_QWORD *)(a3 - 8);
            else
              v131 = a3 - 32 * (v130 & 0x7FFFFFF);
            sub_1C477667C(v28, FCmpHelper, *(_QWORD *)(v131 + 32 * *(unsigned int *)(a3 + 60) + 8 * v117++));
            v116 += 32;
          }
          while (v119 != (_DWORD)v117);
          goto LABEL_206;
        }
        if ((v57 - 59) < 0xFFFFFFEE)
        {
          if (v57 == 95)
          {
            v79 = 0;
            v80 = 0;
            v81 = v3 & 0x7FFFFFF;
            while (1)
            {
              v82 = *(_DWORD *)(a3 + 20);
              if ((v82 & 0x40000000) != 0)
                v83 = *(_QWORD *)(a3 - 8);
              else
                v83 = a3 - 32 * (v82 & 0x7FFFFFF);
              if (v11 == *(_QWORD *)(v83 + 32 * *(unsigned int *)(a3 + 60) + 8 * v80))
              {
                v86 = *(uint64_t **)(a1 + 24);
                v87 = *(_QWORD **)(v83 + v79);
                v160 = "phi.fr";
                v162 = 259;
                v88 = (char *)operator new(0x60uLL);
                *((_DWORD *)v88 + 13) = *((_DWORD *)v88 + 13) & 0x38000000 | 1;
                v89 = (unsigned __int8 **)(v88 + 32);
                *(_QWORD *)v88 = 0;
                *((_QWORD *)v88 + 1) = 0;
                *((_QWORD *)v88 + 2) = 0;
                *((_QWORD *)v88 + 3) = v88 + 32;
                WORD4(v157) = 257;
                llvm::FreezeInst::FreezeInst((uint64_t)(v88 + 32), v87, (uint64_t)v156, 0);
                v84 = sub_1C4867F8C(v86, v89, (uint64_t)&v160);
                v82 = *(_DWORD *)(a3 + 20);
                if ((v82 & 0x40000000) != 0)
                {
LABEL_122:
                  v85 = *(_QWORD *)(a3 - 8);
                  goto LABEL_123;
                }
              }
              else
              {
                v84 = *(unsigned __int8 ***)(v83 + v79);
                if ((v82 & 0x40000000) != 0)
                  goto LABEL_122;
              }
              v85 = a3 - 32 * (v82 & 0x7FFFFFF);
LABEL_123:
              sub_1C477667C(v155, (uint64_t)v84, *(_QWORD *)(v85 + 32 * *(unsigned int *)(a3 + 60) + 8 * v80++));
              v79 += 32;
              if (v81 == (_DWORD)v80)
                goto LABEL_206;
            }
          }
          v132 = 0;
          v133 = 0;
          v134 = v3 & 0x7FFFFFF;
          do
          {
            v135 = *(_DWORD *)(a3 + 20);
            if ((v135 & 0x40000000) != 0)
              v136 = *(_QWORD *)(a3 - 8);
            else
              v136 = a3 - 32 * (v135 & 0x7FFFFFF);
            v137 = *(_QWORD *)(v136 + v132);
            if (v137)
              v138 = *(unsigned __int8 *)(v137 + 16) > 0x14u;
            else
              v138 = 1;
            if (v138)
            {
              if ((v135 & 0x40000000) != 0)
                v139 = *(_QWORD *)(a3 - 8);
              else
                v139 = a3 - 32 * (v135 & 0x7FFFFFF);
              v141 = *(uint64_t **)(a1 + 24);
              v142 = *((unsigned __int8 *)this + 16) - 28;
              v143 = *(unsigned __int8 **)(v139 + v132);
              v144 = *(_QWORD *)this;
              v156[0] = "phi.cast";
              WORD4(v157) = 259;
              Cast = (uint64_t)sub_1C4773E38(v141, v142, v143, v144, (uint64_t)v156);
            }
            else
            {
              Cast = llvm::ConstantExpr::getCast(*((unsigned __int8 *)this + 16) - 28);
            }
            v145 = *(_DWORD *)(a3 + 20);
            if ((v145 & 0x40000000) != 0)
              v146 = *(_QWORD *)(a3 - 8);
            else
              v146 = a3 - 32 * (v145 & 0x7FFFFFF);
            sub_1C477667C(v28, Cast, *(_QWORD *)(v146 + 32 * *(unsigned int *)(a3 + 60) + 8 * v133++));
            v132 += 32;
          }
          while (v134 != (_DWORD)v133);
LABEL_206:
          v147 = *(_QWORD *)(a3 + 8);
          while (v147)
          {
            v148 = *(llvm::ValueAsMetadata **)(v147 + 24);
            v147 = *(_QWORD *)(v147 + 8);
            if (v148 != this)
            {
              sub_1C577F888(a1, v148, v155);
              sub_1C57813F4(a1, (uint64_t)v148);
            }
          }
          return sub_1C577F888(a1, this, v155);
        }
        v92 = 0;
        v93 = 0;
        v94 = (char *)this - 64;
        v95 = v3 & 0x7FFFFFF;
        v154 = v3 & 0x7FFFFFF;
        while (1)
        {
          v96 = *(_DWORD *)(a3 + 20);
          if ((v96 & 0x40000000) != 0)
            v97 = *(_QWORD *)(a3 - 8);
          else
            v97 = a3 - 32 * (v96 & 0x7FFFFFF);
          v98 = *(unsigned __int8 **)(v97 + v92);
          v99 = *(unsigned __int8 *)(*((_QWORD *)this - 4) + 16);
          v100 = *(llvm::Constant **)&v94[32 * (v99 < 0x15)];
          if (v98)
            v101 = v98[16] > 0x14u;
          else
            v101 = 1;
          if (v101)
          {
            v102 = *(_QWORD *)(a1 + 24);
            if (v99 >= 0x15)
              v103 = *(unsigned __int8 **)&v94[32 * (v99 < 0x15)];
            else
              v103 = v98;
            if (v99 >= 0x15)
              v104 = (uint64_t)v98;
            else
              v104 = *(_QWORD *)&v94[32 * (v99 < 0x15)];
            v105 = *((unsigned __int8 *)this + 16) - 28;
            v156[0] = "phi.bo";
            WORD4(v157) = 259;
            v106 = sub_1C4773860(v102, v105, v103, v104, (uint64_t)v156, 0);
            v107 = (uint64_t)v106;
            if (v106)
              v108 = v106[16] >= 0x1Cu;
            else
              v108 = 0;
            if (v108 && sub_1C4774A9C((uint64_t)v106))
              *(_BYTE *)(v107 + 17) = *((_BYTE *)this + 17) & 0xFE | *(_BYTE *)(v107 + 17) & 1;
            goto LABEL_156;
          }
          v109 = v94;
          v110 = *((_BYTE *)this + 16) - 28;
          v111 = (llvm *)(*((unsigned __int8 *)this + 16) - 28);
          if (v99 > 0x14)
          {
            v107 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v111, v100, (llvm::Constant *)v98, v51);
            if (!v107)
            {
              v112 = *(_QWORD ***)v100;
              if (!*(_QWORD *)v100)
              {
LABEL_164:
                v107 = 0;
                goto LABEL_155;
              }
              v160 = (const char *)v100;
              v161 = v98;
              goto LABEL_163;
            }
          }
          else
          {
            v107 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v111, (llvm::Constant *)v98, v100, v51);
            if (!v107)
            {
              v112 = *(_QWORD ***)v98;
              if (!*(_QWORD *)v98)
                goto LABEL_164;
              v160 = (const char *)v98;
              v161 = v100;
LABEL_163:
              v115 = **v112 + 1512;
              LODWORD(v156[0]) = v110;
              v156[1] = (unsigned __int8 *)&v160;
              v156[2] = (unsigned __int8 *)2;
              v157 = 0u;
              v158 = 0u;
              v159 = 0;
              v107 = sub_1C537D4FC(v115, (uint64_t)v112, (unsigned __int8 *)v156);
            }
          }
LABEL_155:
          v94 = v109;
          v95 = v154;
LABEL_156:
          v113 = *(_DWORD *)(a3 + 20);
          if ((v113 & 0x40000000) != 0)
            v114 = *(_QWORD *)(a3 - 8);
          else
            v114 = a3 - 32 * (v113 & 0x7FFFFFF);
          sub_1C477667C(v155, v107, *(_QWORD *)(v114 + 32 * *(unsigned int *)(a3 + 60) + 8 * v93++));
          v92 += 32;
          if (v95 == (_DWORD)v93)
            goto LABEL_206;
        }
      }
      v43 = 0;
      v44 = 1;
      while (v42 != (llvm::Value *)-4096)
      {
        if (v43)
          v45 = 0;
        else
          v45 = v42 == (llvm::Value *)-8192;
        if (v45)
          v43 = v41;
        v46 = v40 + v44++;
        v40 = v46 & v39;
        v41 = (llvm::Value **)(v38 + 8 * v40);
        v42 = *v41;
        if (v28 == *v41)
          goto LABEL_71;
      }
      if (v43)
        v47 = v43;
      else
        v47 = v41;
LABEL_68:
      v48 = (unsigned __int8 **)sub_1C4E08FFC(v36 + 2088, (uint64_t)v156, v156, v47);
      *v48 = v156[0];
      v49 = v156[0];
      v50 = *(unsigned int *)(v36 + 2232);
      if (v50 >= *(_DWORD *)(v36 + 2236))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(v36 + 2224, v36 + 2240, v50 + 1, 8);
        LODWORD(v50) = *(_DWORD *)(v36 + 2232);
      }
      *(_QWORD *)(*(_QWORD *)(v36 + 2224) + 8 * v50) = v49;
      ++*(_DWORD *)(v36 + 2232);
      goto LABEL_71;
    }
  }
  return result;
}

uint64_t sub_1C57813F4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  void **v6;
  void **v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  BOOL v19;
  unsigned int v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  unint64_t v24;
  int32x2_t *v25;
  int32x2_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  void **v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD v42[2];

  v42[1] = *MEMORY[0x1E0C80C00];
  v40 = v42;
  v41 = 0x100000000;
  llvm::findDbgUsers((uint64_t)&v40, a2);
  llvm::salvageDebugInfoForDbgValues((llvm::CastInst *)a2, (uint64_t *)v40, v41);
  if (v40 != v42)
    free(v40);
  v4 = *(_DWORD *)(a2 + 20);
  if ((v4 & 0x40000000) != 0)
  {
    v6 = *(void ***)(a2 - 8);
    v5 = v4 & 0x7FFFFFF;
    if (!v5)
      goto LABEL_36;
    goto LABEL_7;
  }
  v5 = v4 & 0x7FFFFFF;
  v6 = (void **)(a2 - 32 * v5);
  if (v5)
  {
LABEL_7:
    v7 = &v6[4 * v5];
    do
    {
      v8 = *v6;
      if (*v6)
        v9 = *((unsigned __int8 *)*v6 + 16) >= 0x1Cu;
      else
        v9 = 0;
      if (v9)
      {
        v10 = *(_QWORD *)(a1 + 32);
        v40 = *v6;
        if ((*(_BYTE *)(v10 + 2088) & 1) != 0)
        {
          v12 = v10 + 2096;
          v11 = 16;
        }
        else
        {
          v11 = *(_DWORD *)(v10 + 2104);
          if (!v11)
          {
            v21 = 0;
LABEL_29:
            v22 = sub_1C4E08FFC(v10 + 2088, (uint64_t)&v40, &v40, v21);
            *v22 = v40;
            v23 = v40;
            v24 = *(unsigned int *)(v10 + 2232);
            if (v24 >= *(unsigned int *)(v10 + 2236))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod(v10 + 2224, v10 + 2240, v24 + 1, 8);
              v24 = *(unsigned int *)(v10 + 2232);
            }
            *(_QWORD *)(*(_QWORD *)(v10 + 2224) + 8 * v24) = v23;
            ++*(_DWORD *)(v10 + 2232);
            goto LABEL_32;
          }
          v12 = *(_QWORD *)(v10 + 2096);
        }
        v13 = v11 - 1;
        v14 = v13 & ((v8 >> 4) ^ (v8 >> 9));
        v15 = (_QWORD *)(v12 + 8 * v14);
        v16 = *v15;
        if (v8 != (void *)*v15)
        {
          v17 = 0;
          v18 = 1;
          while (v16 != -4096)
          {
            if (v17)
              v19 = 0;
            else
              v19 = v16 == -8192;
            if (v19)
              v17 = v15;
            v20 = v14 + v18++;
            v14 = v20 & v13;
            v15 = (_QWORD *)(v12 + 8 * v14);
            v16 = *v15;
            if (v8 == (void *)*v15)
              goto LABEL_32;
          }
          if (v17)
            v21 = v17;
          else
            v21 = v15;
          goto LABEL_29;
        }
      }
LABEL_32:
      v6 += 4;
    }
    while (v6 != v7);
  }
LABEL_36:
  v25 = *(int32x2_t **)(a1 + 32);
  v40 = (void *)a2;
  v26 = v25[258];
  v27 = v25[260].u32[0];
  if ((_DWORD)v27)
  {
    LODWORD(v28) = (v27 - 1) & ((a2 >> 4) ^ (a2 >> 9));
    v29 = *(_QWORD *)&v26 + 16 * v28;
    v30 = *(_QWORD *)v29;
    if (*(_QWORD *)v29 == a2)
      goto LABEL_43;
    v31 = 1;
    while (v30 != -4096)
    {
      v32 = v28 + v31++;
      v28 = v32 & (v27 - 1);
      v30 = *(_QWORD *)(*(_QWORD *)&v26 + 16 * v28);
      if (v30 == a2)
      {
        v29 = *(_QWORD *)&v26 + 16 * v28;
        goto LABEL_43;
      }
    }
  }
  v29 = *(_QWORD *)&v26 + 16 * v27;
LABEL_43:
  if (v29 != *(_QWORD *)&v26 + 16 * v27)
  {
    *(_QWORD *)(*(_QWORD *)v25 + 8 * *(unsigned int *)(v29 + 8)) = 0;
    *(_QWORD *)v29 = -8192;
    v25[259] = vadd_s32(v25[259], (int32x2_t)0x1FFFFFFFFLL);
  }
  if (sub_1C4E094A8((uint64_t)&v25[261], &v40))
  {
    v36 = (void **)v25[278];
    v37 = v25[279].u32[0];
    v38 = &v36[v37];
    if ((_DWORD)v37)
    {
      v39 = 8 * v37;
      while (*v36 != v40)
      {
        ++v36;
        v39 -= 8;
        if (!v39)
        {
          v36 = v38;
          break;
        }
      }
    }
    if (v38 != v36 + 1)
    {
      memmove(v36, v36 + 1, (char *)v38 - (char *)(v36 + 1));
      LODWORD(v37) = v25[279].i32[0];
    }
    v25[279].i32[0] = v37 - 1;
  }
  llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(a2 + 40) + 40, (uint64_t ***)a2);
  v33 = *(_QWORD *)(a2 + 24);
  v34 = *(_QWORD **)(a2 + 32);
  *v34 = v33;
  *(_QWORD *)(v33 + 8) = v34;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  llvm::Value::deleteValue((llvm::Value *)a2);
  *(_BYTE *)(a1 + 168) = 1;
  return 0;
}

char *sub_1C578171C(uint64_t a1, uint64_t a2)
{
  char *result;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v12;
  unsigned __int8 **v13;
  unsigned __int8 *v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL4 v34;
  char v35;
  char v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  BOOL v40;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  const llvm::Value *v47;
  uint64_t i;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  llvm::Value **v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  llvm::Constant *v72;
  uint64_t v73;
  unsigned int v74;
  BOOL v75;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  llvm::PHINode *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD **v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 *v88[3];
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  _QWORD v92[3];

  result = 0;
  v92[2] = *MEMORY[0x1E0C80C00];
  if (*(_BYTE *)(*(_QWORD *)(a2 - 64) + 16) == 83)
    v4 = *(_QWORD *)(a2 - 64);
  else
    v4 = 0;
  if (*(_BYTE *)(*(_QWORD *)(a2 - 32) + 16) == 83)
    v5 = *(_QWORD *)(a2 - 32);
  else
    v5 = 0;
  if (v4)
    v6 = v5 == 0;
  else
    v6 = 1;
  if (v6)
    return result;
  v7 = *(_QWORD *)(v4 + 8);
  if (!v7)
    return 0;
  if (*(_QWORD *)(v7 + 8))
    return 0;
  v8 = *(_QWORD *)(v5 + 8);
  if (!v8)
    return 0;
  if (*(_QWORD *)(v8 + 8))
    return 0;
  v9 = *(_DWORD *)(v4 + 20);
  if ((v9 & 0x7FFFFFF) != 2)
    return 0;
  v10 = *(_DWORD *)(v5 + 20);
  if ((v10 & 0x7FFFFFF) != 2)
    return 0;
  v12 = *(_QWORD *)(a2 + 40);
  if (v12 != *(_QWORD *)(v4 + 40) || v12 != *(_QWORD *)(v5 + 40))
    return 0;
  v13 = (v9 & 0x40000000) != 0 ? *(unsigned __int8 ***)(v4 - 8) : (unsigned __int8 **)(v4 - 64);
  v14 = *v13;
  v15 = (*v13)[16];
  v16 = v15 == 5 || v14 == 0;
  if (v16 || v15 >= 0x15)
  {
    if ((v9 & 0x40000000) != 0)
      v18 = *(_QWORD *)(v4 - 8);
    else
      v18 = v4 - 64;
    v14 = *(unsigned __int8 **)(v18 + 32);
    v20 = v14[16];
    if (v20 == 5 || v14 == 0 || v20 > 0x14)
      return 0;
    v23 = (v9 & 0x40000000) != 0 ? *(_QWORD *)(v4 - 8) : v4 - 64;
    v26 = *(unsigned int *)(v4 + 60);
    v24 = (uint64_t *)(v23 + 32 * v26 + 8);
    v25 = (uint64_t *)(v23 + 32 * v26);
  }
  else
  {
    v19 = (v9 & 0x40000000) != 0 ? *(_QWORD *)(v4 - 8) : v4 - 64;
    v24 = (uint64_t *)(v19 + 32 * *(unsigned int *)(v4 + 60));
    v25 = v24 + 1;
  }
  v27 = 0;
  v28 = 0;
  v29 = *v24;
  v30 = *v25;
  v31 = v5 - 64;
  v32 = *(unsigned int *)(v5 + 60);
  do
  {
    while (1)
    {
      v33 = v28;
      if ((v10 & 0x40000000) != 0)
        break;
      v34 = *(_QWORD *)(v5 - 64 + 32 * v32 + 8 * v28) == v29;
      v36 = v27 | v34;
      v27 = 1;
      v28 = 1;
      if ((v36 & 1) != 0)
        goto LABEL_55;
    }
    v34 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 32 * v32 + 8 * v28) == v29;
    v35 = v27 | v34;
    v28 = 1;
    v27 = 1;
  }
  while ((v35 & 1) == 0);
  v31 = *(_QWORD *)(v5 - 8);
LABEL_55:
  v37 = 0xFFFFFFFFLL;
  if (v34)
    v37 = v33;
  v38 = *(unsigned __int8 **)(v31 + 32 * v37);
  v39 = v38[16];
  v40 = v39 == 5 || v38 == 0;
  if (v40 || v39 > 0x14)
    return 0;
  v42 = *(_QWORD *)(v30 + 40);
  if (v42 == v30 + 40)
    return 0;
  v87 = v30;
  result = 0;
  if (v42)
    v43 = v42 - 24;
  else
    v43 = 0;
  v44 = *(unsigned __int8 *)(v43 + 16) - 40;
  if (v44 >= 0xFFFFFFF5)
    v45 = v43;
  else
    v45 = 0;
  if (!v42)
    return result;
  if (*(_BYTE *)(v45 + 16) != 30 || v44 < 0xFFFFFFF5)
    return result;
  if ((*(_DWORD *)(v45 + 20) & 0x7FFFFFF) == 3
    || !llvm::DominatorTreeBase<llvm::BasicBlock,false>::isReachableFromEntry(*(_QWORD *)(a1 + 72), v87))
  {
    return 0;
  }
  for (i = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 48); ; i = *(_QWORD *)(i + 8))
  {
    v49 = i ? i - 24 : 0;
    if (v49 == a2)
      break;
    result = 0;
    v50 = *(unsigned __int8 *)(v49 + 16);
    if (v50 == 29 || v50 == 35)
      return result;
    if (v50 == 80)
    {
      v51 = *(_QWORD *)(*(_QWORD *)(v49 + 40) + 56);
      v52 = *(_DWORD *)(v51 + 20);
      if ((v52 & 0x40000000) != 0)
        v53 = *(llvm::Value ***)(v51 - 8);
      else
        v53 = (llvm::Value **)(v51 - 32 * (v52 & 0x7FFFFFF));
      if (llvm::classifyEHPersonality(*v53, v47) != 10)
        return 0;
    }
    else if ((llvm::Instruction::mayThrow((llvm::Instruction *)v49) & 1) != 0
           || (llvm::Instruction::willReturn((llvm::Instruction *)v49) & 1) == 0)
    {
      return 0;
    }
  }
  v54 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v54 + 48) = *(_QWORD *)(v45 + 40);
  *(_QWORD *)(v54 + 56) = v45 + 24;
  v55 = *(unsigned __int8 **)(v45 + 48);
  v88[0] = v55;
  if (v55)
  {
    llvm::MetadataTracking::track((uint64_t)v88, v55, 2);
    v56 = v88[0];
  }
  else
  {
    v56 = 0;
  }
  sub_1C4774EF4(v54, 0, (uint64_t)v56);
  if (v88[0])
    llvm::MetadataTracking::untrack((uint64_t)v88, v88[0]);
  v57 = *(_DWORD *)(v4 + 20);
  v58 = v57 & 0x7FFFFFF;
  if ((v57 & 0x7FFFFFF) != 0)
  {
    v59 = 0;
    while (1)
    {
      v60 = v4 - 32 * v58;
      if ((v57 & 0x40000000) != 0)
        v60 = *(_QWORD *)(v4 - 8);
      if (*(_QWORD *)(v60 + 32 * *(unsigned int *)(v4 + 60) + 8 * v59) == v87)
        break;
      if (v58 == ++v59)
        goto LABEL_105;
    }
  }
  else
  {
LABEL_105:
    LODWORD(v59) = -1;
  }
  v61 = *(unsigned __int8 *)(a2 + 16);
  if ((v57 & 0x40000000) != 0)
    v62 = *(_QWORD *)(v4 - 8);
  else
    v62 = v4 - 32 * v58;
  v63 = *(_QWORD *)(a1 + 24);
  v64 = *(_QWORD **)(v62 + 32 * v59);
  v65 = *(_DWORD *)(v5 + 20);
  v66 = v65 & 0x7FFFFFF;
  if ((v65 & 0x7FFFFFF) != 0)
  {
    v67 = 0;
    while (1)
    {
      v68 = v5 - 32 * v66;
      if ((v65 & 0x40000000) != 0)
        v68 = *(_QWORD *)(v5 - 8);
      if (*(_QWORD *)(v68 + 32 * *(unsigned int *)(v5 + 60) + 8 * v67) == v87)
        break;
      if (v66 == ++v67)
        goto LABEL_114;
    }
  }
  else
  {
LABEL_114:
    LODWORD(v67) = -1;
  }
  if ((v65 & 0x40000000) != 0)
    v69 = *(_QWORD *)(v5 - 8);
  else
    v69 = v5 - 32 * v66;
  v70 = *(_QWORD *)(v69 + 32 * v67);
  WORD4(v89) = 257;
  v71 = sub_1C4773860(v63, (v61 - 28), v64, v70, (uint64_t)v88, 0);
  v73 = (uint64_t)v71;
  v74 = v71[16];
  if (v71)
    v75 = v74 >= 0x1C;
  else
    v75 = 0;
  if (v75 && v74 - 59 >= 0xFFFFFFEE)
    llvm::Instruction::copyIRFlags((uint64_t)v71, a2, 1);
  v77 = *(_BYTE *)(a2 + 16) - 28;
  v78 = (uint64_t)llvm::ConstantFoldBinaryInstruction((llvm *)(*(unsigned __int8 *)(a2 + 16) - 28), (llvm::Constant *)v14, (llvm::Constant *)v38, v72);
  if (!v78)
  {
    v85 = *(_QWORD ***)v14;
    if (*(_QWORD *)v14)
    {
      v92[0] = v14;
      v92[1] = v38;
      v86 = **v85 + 1512;
      LODWORD(v88[0]) = v77;
      v88[1] = (unsigned __int8 *)v92;
      v88[2] = (unsigned __int8 *)2;
      v89 = 0u;
      v90 = 0u;
      v91 = 0;
      v78 = sub_1C537D4FC(v86, (uint64_t)v85, (unsigned __int8 *)v88);
    }
    else
    {
      v78 = 0;
    }
  }
  v79 = *(_QWORD *)a2;
  WORD4(v89) = 257;
  v80 = operator new(0x48uLL);
  v80[1] = v79;
  *v80 = 0;
  v80[2] = 0;
  v80[3] = 0x4000000000000053;
  *((_OWORD *)v80 + 2) = 0u;
  *((_OWORD *)v80 + 3) = 0u;
  v80[8] = 0x200000000;
  v81 = (llvm::PHINode *)(v80 + 1);
  llvm::Value::setName((uint64_t ***)v80 + 1, (uint64_t)v88);
  v82 = *((unsigned int *)v80 + 17);
  v83 = operator new(40 * v82);
  *v80 = v83;
  if ((_DWORD)v82)
  {
    v84 = &v83[4 * v82];
    do
    {
      *v83 = 0;
      v83[1] = 0;
      v83[2] = 0;
      v83[3] = v81;
      v83 += 4;
    }
    while (v83 != v84);
  }
  sub_1C477667C(v81, v73, v87);
  sub_1C477667C(v81, v78, v29);
  return (char *)(v80 + 1);
}

uint64_t sub_1C5781CD4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;

  if (*(unsigned __int8 *)(*((_QWORD *)a2 - 4) + 16) > 0x14u)
    return 0;
  v2 = *((_QWORD *)a2 - 8);
  v3 = *(unsigned __int8 *)(v2 + 16);
  if (v2 && v3 == 85)
  {
    result = sub_1C577FF7C(a1, a2, (_QWORD *)v2, 0);
    if (result)
      return result;
    return 0;
  }
  if (!v2)
    return 0;
  if (v3 != 83)
    return 0;
  result = (uint64_t)sub_1C57808D4(a1, (llvm::Instruction *)a2, v2);
  if (!result)
    return 0;
  return result;
}

unsigned __int8 *sub_1C5781D30(uint64_t a1, llvm::Constant *this, void **a3, _BYTE *a4)
{
  unsigned __int8 *v6;
  unsigned int v8;
  int v9;
  unsigned __int8 *v10;
  llvm::APInt *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  void *v19;
  int v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  const char *v32;
  unsigned int PrimitiveSizeInBits;
  const char *v34;
  int v35;
  void *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  const llvm::APInt *v43;
  int v44;
  int v45;
  int64_t v46;
  void *v47;
  unint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  int v59;
  BOOL v60;
  unsigned int v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  int v65;
  unsigned int v66;
  int v67;
  int v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  int v78;
  BOOL v79;
  unsigned int v80;
  _QWORD *v81;
  _QWORD *v82;
  unint64_t v83;
  _BOOL4 v84;
  int v85;
  unint64_t v86;
  _QWORD **v87;
  unsigned int v88;
  _QWORD *v89;
  BOOL v90;
  int v91;
  uint64_t v92;
  int v93;
  int v94;
  void *__s1;
  unsigned int v96;
  void *__src;
  unsigned int v98;

  v6 = (unsigned __int8 *)this;
  if (this
    && *((unsigned __int8 *)this + 16) <= 0x14u
    && ((llvm::Constant::isNullValue(this) & 1) != 0 || (sub_1C4E71060((uint64_t)&__src, (llvm::Constant *)v6) & 1) != 0))
  {
    goto LABEL_11;
  }
  v8 = *((_DWORD *)a3 + 2);
  if (v8 < 0x41)
  {
    if (!*a3)
      return 0;
    if (*a3 == (void *)1)
      goto LABEL_11;
    goto LABEL_16;
  }
  v9 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)a3);
  if (v8 - v9 < 0x41 && *(_QWORD *)*a3 == 1)
  {
LABEL_11:
    *a4 = 1;
    return v6;
  }
  if (v8 == v9)
    return 0;
LABEL_16:
  v13 = sub_1C614D48C((unsigned int *)a3);
  v14 = v6[16];
  if (v6 && v14 == 16)
  {
    v15 = 0;
    LODWORD(v16) = 0;
    v17 = v6;
LABEL_19:
    v18 = *((_DWORD *)a3 + 2);
    v98 = v18;
    if (v18 > 0x40)
    {
      __src = (void *)operator new[]();
      v19 = *a3;
      memcpy(__src, *a3, (((unint64_t)v98 + 63) >> 3) & 0x3FFFFFF8);
      v96 = *((_DWORD *)a3 + 2);
      if (v96 > 0x40)
      {
        __s1 = (void *)operator new[]();
        memcpy(__s1, *a3, (((unint64_t)v96 + 63) >> 3) & 0x3FFFFFF8);
LABEL_89:
        llvm::APInt::sdivrem((llvm::APInt *)(v17 + 24), (const void **)a3, (const llvm::APInt *)&__src, (llvm::APInt *)&__s1, v12);
        if (v96 > 0x40)
        {
          v45 = 0;
          v46 = ((unint64_t)v96 + 63) >> 6;
          v47 = __s1;
          do
          {
            v90 = v46-- < 1;
            if (v90)
              break;
            v48 = *((_QWORD *)__s1 + v46);
            v45 += __clz(v48);
          }
          while (!v48);
          v49 = v96 | 0xFFFFFFC0;
          if ((v96 & 0x3F) == 0)
            v49 = 0;
          if (v45 + v49 != v96)
          {
            v44 = 1;
LABEL_101:
            if (v47)
              MEMORY[0x1CAA32F9C](v47, 0x1000C8000313F17);
            goto LABEL_103;
          }
        }
        else if (__s1)
        {
          v44 = 1;
LABEL_103:
          v10 = v17;
          goto LABEL_104;
        }
        v10 = (unsigned __int8 *)llvm::ConstantInt::get(*(llvm::ConstantInt ***)v17, (llvm::Type *)&__src, v43);
        *a4 = 1;
        v44 = 2;
        if (v96 < 0x41)
        {
LABEL_104:
          if (v98 >= 0x41 && __src)
            MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
          if (v44 != 2)
            return 0;
          goto LABEL_108;
        }
        v47 = __s1;
        v17 = v10;
        goto LABEL_101;
      }
    }
    else
    {
      v19 = *a3;
      __src = *a3;
      v96 = v18;
    }
    __s1 = v19;
    goto LABEL_89;
  }
  v20 = 0;
  v16 = 0;
  v15 = 0;
  v17 = v6;
  while (1)
  {
    if (v14 >= 0x1C && v14 - 59 >= 0xFFFFFFEE)
    {
      if (v14 == 45)
      {
        v21 = (v17[17] & 4) == 0;
        *a4 = (v17[17] & 4) >> 2;
        if ((v20 & v21 & 1) != 0)
          return 0;
        v22 = *((_QWORD *)v17 - 4);
        if (v22 && *(_BYTE *)(v22 + 16) == 16)
        {
          v10 = (unsigned __int8 *)*((_QWORD *)v17 - 8);
          v23 = *(unsigned int *)(v22 + 32);
          if (v23 > 0x40)
          {
            if (!memcmp(*(const void **)(v22 + 24), *a3, ((unint64_t)(v23 + 63) >> 3) & 0x3FFFFFF8))
              goto LABEL_108;
          }
          else if (*(void **)(v22 + 24) == *a3)
          {
            goto LABEL_108;
          }
          v39 = *((_QWORD *)v17 + 1);
          if (!v39 || *(_QWORD *)(v39 + 8))
            return 0;
          v16 = 1;
        }
        else
        {
          v38 = *((_QWORD *)v17 + 1);
          if (!v38 || *(_QWORD *)(v38 + 8))
            return 0;
          v16 = 0;
        }
        goto LABEL_76;
      }
      if ((int)v13 >= 1 && v14 == 53)
      {
        v24 = *((_QWORD *)v17 - 4);
        if (*(_BYTE *)(v24 + 16) == 16)
          break;
      }
    }
    v25 = *((_QWORD *)v17 + 1);
    if (!v25 || *(_QWORD *)(v25 + 8))
      return 0;
    v10 = 0;
    if (v14 < 0x1C || v14 - 79 < 0xFFFFFFF3)
      return v10;
    if (v14 != 68)
    {
      if ((v14 != 66) | v20 & 1)
        return 0;
      PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(**((llvm::Type ***)v17 - 4));
      if ((_DWORD)v32 == 1)
      llvm::APInt::sext((llvm::APInt *)a3, PrimitiveSizeInBits, (llvm::APInt *)&__src);
      if (*((_DWORD *)a3 + 2) >= 0x41u && *a3)
        MEMORY[0x1CAA32F9C](*a3, 0x1000C8000313F17);
      *a3 = __src;
      *((_DWORD *)a3 + 2) = v98;
      v35 = llvm::Type::getPrimitiveSizeInBits(*(llvm::Type **)v17);
      if ((_DWORD)v34 == 1)
      v16 = 0;
      v20 = 0;
      if ((_DWORD)v13 + 1 == v35)
        v13 = 0xFFFFFFFFLL;
      else
        v13 = v13;
LABEL_76:
      v15 = (uint64_t)v17;
      goto LABEL_77;
    }
    v93 = v20;
    v26 = v16;
    v27 = v13;
    v29 = llvm::Type::getPrimitiveSizeInBits(**((llvm::Type ***)v17 - 4));
    if ((_DWORD)v28 == 1)
    llvm::APInt::trunc((llvm::APInt *)a3, v29, (llvm::APInt *)&__src);
    llvm::APInt::sext((llvm::APInt *)&__src, *((_DWORD *)a3 + 2), (llvm::APInt *)&__s1);
    if (v96 > 0x40)
    {
      v36 = __s1;
      v37 = memcmp(__s1, *a3, (((unint64_t)v96 + 63) >> 3) & 0x3FFFFFF8);
      if (v36)
        MEMORY[0x1CAA32F9C](v36, 0x1000C8000313F17);
      if (v37)
      {
LABEL_60:
        v31 = 0;
        v13 = v27;
        v16 = v26;
        v20 = v93;
        goto LABEL_67;
      }
    }
    else if (__s1 != *a3)
    {
      goto LABEL_60;
    }
    if (*((_DWORD *)a3 + 2) > 0x40u || (v30 = v98, v98 > 0x40))
    {
      v13 = v27;
      if (&__src == a3)
        goto LABEL_65;
      llvm::APInt::reallocate((uint64_t)a3, v98);
      v42 = *((unsigned int *)a3 + 2);
      if (v42 <= 0x40)
      {
        v16 = 0;
        *a3 = __src;
      }
      else
      {
        memcpy(*a3, __src, ((unint64_t)(v42 + 63) >> 3) & 0x3FFFFFF8);
LABEL_65:
        v16 = 0;
      }
      v31 = 1;
      v15 = (uint64_t)v17;
      v20 = 1;
      goto LABEL_67;
    }
    *a3 = __src;
    *((_DWORD *)a3 + 2) = v30;
    v31 = 1;
    v15 = (uint64_t)v17;
    v20 = 1;
    v13 = v27;
    v16 = 0;
LABEL_67:
    if (v98 >= 0x41 && __src)
      MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
    if (!v31)
      return 0;
LABEL_77:
    v40 = *(_DWORD *)(v15 + 20);
    if ((v40 & 0x40000000) != 0)
      v41 = *(_QWORD *)(v15 - 8);
    else
      v41 = v15 - 32 * (v40 & 0x7FFFFFF);
    v17 = *(unsigned __int8 **)(v41 + 32 * v16);
    v14 = v17[16];
    if (v17 && v14 == 16)
      goto LABEL_19;
  }
  v84 = (v17[17] & 4) == 0;
  *a4 = (v17[17] & 4) >> 2;
  if ((v20 & v84 & 1) != 0)
    return 0;
  v94 = v16;
  v85 = v13;
  v10 = (unsigned __int8 *)*((_QWORD *)v17 - 8);
  v86 = *((unsigned int *)a3 + 2);
  v87 = (_QWORD **)(v24 + 24);
  v88 = *(_DWORD *)(v24 + 32);
  if (v88 >= 0x41)
  {
    if (v88 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v24 + 24)) <= 0x40)
    {
      v89 = (_QWORD *)**v87;
      goto LABEL_161;
    }
  }
  else
  {
    v89 = *v87;
LABEL_161:
    if ((unint64_t)v89 <= v86)
      LODWORD(v86) = (_DWORD)v89;
  }
  v91 = v86 - v85;
  v60 = (_DWORD)v86 == v85;
  v90 = (int)v86 < v85;
  LODWORD(v16) = v94;
  if (v60)
  {
LABEL_108:
    if (v10
      && v10[16] <= 0x14u
      && ((llvm::Constant::isNullValue((llvm::Constant *)v10) & 1) != 0
       || (sub_1C4E71060((uint64_t)&__src, (llvm::Constant *)v10) & 1) != 0))
    {
      v6 = v10;
      goto LABEL_11;
    }
    if (!v15)
      return v10;
    sub_1C577E2C8(a1, v15, v16, (uint64_t)v10);
    v50 = *(_QWORD *)(a1 + 32);
    v51 = *(_DWORD *)(v50 + 8);
    __src = (void *)v15;
    v98 = v51;
    v52 = *(_DWORD *)(v50 + 2080);
    if (v52)
    {
      v53 = *(_QWORD *)(v50 + 2064);
      v54 = v52 - 1;
      v55 = v54 & ((v15 >> 4) ^ (v15 >> 9));
      v56 = (_QWORD *)(v53 + 16 * v55);
      v57 = *v56;
      if (*v56 == v15)
        goto LABEL_131;
      v58 = 0;
      v59 = 1;
      while (v57 != -4096)
      {
        if (v58)
          v60 = 0;
        else
          v60 = v57 == -8192;
        if (v60)
          v58 = v56;
        v61 = v55 + v59++;
        v55 = v61 & v54;
        v56 = (_QWORD *)(v53 + 16 * v55);
        v57 = *v56;
        if (*v56 == v15)
          goto LABEL_131;
      }
      if (v58)
        v62 = v58;
      else
        v62 = v56;
    }
    else
    {
      v62 = 0;
    }
    v63 = sub_1C4D8D8F4((_DWORD *)(v50 + 2064), (uint64_t)&__src, (uint64_t *)&__src, v62);
    *v63 = __src;
    *((_DWORD *)v63 + 2) = v98;
    v64 = *(unsigned int *)(v50 + 8);
    if (v64 >= *(_DWORD *)(v50 + 12))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(v50, v50 + 16, v64 + 1, 8);
      LODWORD(v64) = *(_DWORD *)(v50 + 8);
    }
    *(_QWORD *)(*(_QWORD *)v50 + 8 * v64) = v15;
    ++*(_DWORD *)(v50 + 8);
    while (1)
    {
LABEL_131:
      v65 = *(unsigned __int8 *)(v15 + 16);
      if (v15 && (v65 - 59) >= 0xFFFFFFEE)
      {
        v66 = *(unsigned __int8 *)(v15 + 17);
        v67 = (v66 >> 2) & 1;
        v68 = *a4 & (v66 >> 2);
        *a4 = v68;
        if (v68 == v67)
          goto LABEL_153;
        *(_BYTE *)(v15 + 17) = *(_BYTE *)(v15 + 17) & 0xFB | (4 * (v68 != 0));
        v69 = *(_QWORD *)(a1 + 32);
        v70 = *(_DWORD *)(v69 + 8);
        __src = (void *)v15;
        v98 = v70;
        v71 = *(_DWORD *)(v69 + 2080);
        if (v71)
        {
          v72 = *(_QWORD *)(v69 + 2064);
          v73 = v71 - 1;
          v74 = v73 & ((v15 >> 4) ^ (v15 >> 9));
          v75 = (_QWORD *)(v72 + 16 * v74);
          v76 = *v75;
          if (*v75 == v15)
            goto LABEL_153;
          v77 = 0;
          v78 = 1;
          while (v76 != -4096)
          {
            if (v77)
              v79 = 0;
            else
              v79 = v76 == -8192;
            if (v79)
              v77 = v75;
            v80 = v74 + v78++;
            v74 = v80 & v73;
            v75 = (_QWORD *)(v72 + 16 * v74);
            v76 = *v75;
            if (*v75 == v15)
              goto LABEL_153;
          }
          if (v77)
            v81 = v77;
          else
            v81 = v75;
        }
        else
        {
          v81 = 0;
        }
        v82 = sub_1C4D8D8F4((_DWORD *)(v69 + 2064), (uint64_t)&__src, (uint64_t *)&__src, v81);
        *v82 = __src;
        *((_DWORD *)v82 + 2) = v98;
        v83 = *(unsigned int *)(v69 + 8);
        if (v83 >= *(unsigned int *)(v69 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod(v69, v69 + 16, v83 + 1, 8);
          v83 = *(unsigned int *)(v69 + 8);
        }
        *(_QWORD *)(*(_QWORD *)v69 + 8 * v83) = v15;
        ++*(_DWORD *)(v69 + 8);
      }
      else if (v65 == 66)
      {
        *a4 = 0;
      }
LABEL_153:
      if ((unsigned __int8 *)v15 == v6)
        return v6;
      v15 = *(_QWORD *)(*(_QWORD *)(v15 + 8) + 24);
    }
  }
  if (!v90)
  {
    v92 = *((_QWORD *)v17 + 1);
    if (v92)
    {
      if (!*(_QWORD *)(v92 + 8))
      {
        v10 = (unsigned __int8 *)llvm::ConstantInt::get(*(llvm::ConstantInt **)v17, v91, 0);
        LODWORD(v16) = 1;
        v15 = (uint64_t)v17;
        goto LABEL_108;
      }
    }
  }
  return 0;
}

uint64_t sub_1C57826B8(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  __int32 *v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int32 *v17;
  size_t v18;
  __int32 *v19;
  __int32 *v20;
  size_t v21;
  __int32 *v22;
  __int32 *v23;
  __int32 *v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  llvm::Type *v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned int v43;
  llvm::UndefValue *v44;
  llvm::UndefValue *v45;
  unint64_t i;
  llvm *v47;
  llvm::UndefValue *AggregateElement;
  llvm::Constant *v49;
  llvm::UndefValue *v50;
  uint64_t v51;
  char v52;
  llvm::UndefValue *v53;
  _BOOL4 v55;
  uint64_t v56;
  _QWORD **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int32 *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 *v64;
  llvm::PoisonValue **v65;
  unsigned int v66;
  _DWORD *v67;
  llvm::Type *v68;
  _QWORD *v69;
  _BYTE **v70;
  llvm::PoisonValue **v71;
  __int32 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  unsigned __int8 *v78;
  unsigned int v79;
  uint64_t v80;
  unsigned __int8 *v81;
  unsigned __int8 *v82;
  unsigned int v83;
  char *v84;
  llvm::FixedVectorType ***v85;
  uint64_t v86;
  llvm::Constant *Impl;
  _QWORD **v88;
  unsigned int v89;
  __int32 *v90;
  llvm::Constant *v91;
  llvm::Constant *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 *v95;
  llvm::PoisonValue **v96;
  unsigned int v97;
  _DWORD *v99;
  llvm::Type *v100;
  _QWORD *v101;
  uint64_t *v102;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  _DWORD *v109;
  unint64_t v110;
  unint64_t v111;
  unsigned int *v112;
  const llvm::Value *v113;
  uint64_t v115;
  uint64_t v116;
  int v117;
  const void **v118;
  const void **v119;
  unsigned int v120;
  uint64_t v121;
  const void ***v122;
  int isSplatValue;
  uint64_t v124;
  unsigned __int8 *v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  llvm::Type *v129;
  _QWORD *v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD *v139;
  unsigned int v140;
  llvm::Constant *v141;
  unsigned int v142;
  unint64_t v143;
  llvm::Type *v144;
  __int32 *v145;
  _DWORD *v146;
  unint64_t v147;
  _QWORD *v148;
  llvm::Constant *v149;
  _QWORD *v150;
  _QWORD *v151;
  __int32 *v152;
  size_t v153;
  llvm::Constant *v154;
  llvm::Constant *v155;
  __int16 v156;
  void *__p;
  uint64_t v158;
  __int32 **v159;
  llvm::Constant **v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;

  v168 = *MEMORY[0x1E0C80C00];
  if ((*(_DWORD *)(*(_QWORD *)a2 + 8) & 0xFE) != 0x12)
    return 0;
  v4 = a2[16];
  v5 = (v4 - 28);
  v6 = *((_QWORD *)a2 - 8);
  v7 = *((_QWORD *)a2 - 4);
  v152 = 0;
  v153 = 0;
  if (v6)
  {
    if (*(_BYTE *)(v6 + 16) == 91)
    {
      v8 = *(_QWORD **)(v6 - 64);
      if (v8)
      {
        v9 = *(_QWORD **)(v6 - 32);
        if (v9)
        {
          v10 = *(__int32 **)(v6 + 64);
          v11 = *(unsigned int *)(v6 + 72);
          v152 = v10;
          v153 = v11;
          if (v7)
          {
            if (*(_BYTE *)(v7 + 16) == 91)
            {
              v12 = *(_QWORD *)(v7 - 64);
              if (v12)
              {
                v13 = *(_QWORD *)(v7 - 32);
                if (v13)
                {
                  if ((_DWORD)v11 == *(_DWORD *)(v7 + 72) && !memcmp(v10, *(const void **)(v7 + 64), 4 * v11))
                  {
                    v74 = *(_QWORD *)(v6 + 8);
                    if (v74)
                    {
                      if (!*(_QWORD *)(v74 + 8))
                      {
                        v75 = *(_QWORD *)(v7 + 8);
                        if (v75)
                        {
                          if (!*(_QWORD *)(v75 + 8)
                            && llvm::ShuffleVectorInst::isConcat((llvm::ShuffleVectorInst *)v6)
                            && llvm::ShuffleVectorInst::isConcat((llvm::ShuffleVectorInst *)v7))
                          {
                            v76 = *(_QWORD *)(a1 + 24);
                            LOWORD(v161) = 257;
                            v77 = sub_1C4773860(v76, v5, v8, v12, (uint64_t)&__p, 0);
                            v78 = v77;
                            if (v77)
                            {
                              v79 = v77[16];
                              if (v79 >= 0x1C && v79 - 59 >= 0xFFFFFFEE)
                                llvm::Instruction::copyIRFlags((uint64_t)v77, (uint64_t)a2, 1);
                            }
                            v80 = *(_QWORD *)(a1 + 24);
                            LOWORD(v161) = 257;
                            v81 = sub_1C4773860(v80, v5, v9, v13, (uint64_t)&__p, 0);
                            v82 = v81;
                            if (v81)
                            {
                              v83 = v81[16];
                              if (v83 >= 0x1C && v83 - 59 >= 0xFFFFFFEE)
                                llvm::Instruction::copyIRFlags((uint64_t)v81, (uint64_t)a2, 1);
                            }
                            v84 = (char *)operator new(0xA8uLL);
                            *((_DWORD *)v84 + 21) = *((_DWORD *)v84 + 21) & 0x38000000 | 2;
                            v14 = (uint64_t)(v84 + 64);
                            *(_QWORD *)v84 = 0;
                            *((_QWORD *)v84 + 1) = 0;
                            *((_QWORD *)v84 + 2) = 0;
                            *((_QWORD *)v84 + 3) = v84 + 64;
                            *((_QWORD *)v84 + 4) = 0;
                            *((_QWORD *)v84 + 5) = 0;
                            *((_QWORD *)v84 + 6) = 0;
                            *((_QWORD *)v84 + 7) = v84 + 64;
                            v72 = v152;
                            v73 = v153;
                            LOWORD(v161) = 257;
                            v70 = (_BYTE **)(v84 + 64);
                            v71 = (llvm::PoisonValue **)v78;
                            v69 = v82;
LABEL_99:
                            llvm::ShuffleVectorInst::ShuffleVectorInst(v70, v71, (uint64_t)v69, v72, v73, (uint64_t)&__p, 0);
                            return v14;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  v14 = 0;
  if (llvm::isSafeToSpeculativelyExecute((uint64_t)a2, 0, 0, 0))
  {
    v150 = 0;
    v151 = 0;
    __p = &v151;
    v159 = &v152;
    if (sub_1C57907A8((uint64_t)&__p, v6))
    {
      v162 = (uint64_t *)&v150;
      v164 = (uint64_t)&v152;
      if (sub_1C5790824((uint64_t)&v162, v7))
      {
        if (*v151 == *v150
          && ((v59 = *(_QWORD *)(v6 + 8)) != 0 && !*(_QWORD *)(v59 + 8)
           || (v60 = *(_QWORD *)(v7 + 8)) != 0 && !*(_QWORD *)(v60 + 8)
           || v6 == v7))
        {
          v61 = v152;
          v62 = v153;
          v63 = *(_QWORD *)(a1 + 24);
          LOWORD(v161) = 257;
          v64 = sub_1C4773860(v63, (v4 - 28), v151, (uint64_t)v150, (uint64_t)&__p, 0);
          v65 = (llvm::PoisonValue **)v64;
          if (v64)
          {
            v66 = v64[16];
            if (v66 >= 0x1C && v66 - 59 >= 0xFFFFFFEE)
              llvm::Instruction::copyIRFlags((uint64_t)v64, (uint64_t)a2, 1);
          }
          v67 = operator new(0xA8uLL);
          v67[21] = v67[21] & 0x38000000 | 2;
          v14 = (uint64_t)(v67 + 16);
          *(_QWORD *)v67 = 0;
          *((_QWORD *)v67 + 1) = 0;
          *((_QWORD *)v67 + 2) = 0;
          *((_QWORD *)v67 + 3) = v67 + 16;
          *((_QWORD *)v67 + 4) = 0;
          *((_QWORD *)v67 + 5) = 0;
          *((_QWORD *)v67 + 6) = 0;
          *((_QWORD *)v67 + 7) = v67 + 16;
          LOWORD(v161) = 257;
          v69 = llvm::PoisonValue::get(*v65, v68);
          v70 = (_BYTE **)v14;
          v71 = v65;
          v72 = v61;
          v73 = v62;
          goto LABEL_99;
        }
      }
    }
    if (llvm::Instruction::isCommutative((llvm::Instruction *)a2))
    {
      if (v6)
      {
        if (*(_BYTE *)(v6 + 16) == 91)
        {
          v15 = *(_QWORD *)(v6 - 64);
          if (v15)
          {
            v151 = *(_QWORD **)(v6 - 64);
            v16 = *(_QWORD *)(v6 - 32);
            if (v16)
            {
              v150 = *(_QWORD **)(v6 - 32);
              v17 = *(__int32 **)(v6 + 64);
              v18 = *(unsigned int *)(v6 + 72);
              v152 = v17;
              v153 = v18;
              if (v7)
              {
                if (*(_BYTE *)(v7 + 16) == 91
                  && v16 == *(_QWORD *)(v7 - 64)
                  && v15 == *(_QWORD *)(v7 - 32)
                  && (_DWORD)v18 == *(_DWORD *)(v7 + 72)
                  && !memcmp(v17, *(const void **)(v7 + 64), 4 * v18)
                  && *(_DWORD *)(**(_QWORD **)(v6 - 64) + 32) == (_DWORD)v18
                  && llvm::ShuffleVectorInst::isSelectMask(v17, v18))
                {
                  v19 = wmemchr(v17, -1, v18);
                  v20 = v19 ? v19 : &v17[v18];
                  if (v18 == v20 - v17)
                  {
                    v21 = *(unsigned int *)(**(_QWORD **)(v7 - 64) + 32);
                    if ((_DWORD)v21 == *(_DWORD *)(v7 + 72))
                    {
                      v22 = *(__int32 **)(v7 + 64);
                      if (llvm::ShuffleVectorInst::isSelectMask(v22, *(unsigned int *)(**(_QWORD **)(v7 - 64) + 32)))
                      {
                        v23 = wmemchr(v22, -1, v21);
                        v24 = v23 ? v23 : &v22[v21];
                        if (v21 == v24 - v22)
                        {
                          v25 = v150;
                          v26 = v151;
                          LOWORD(v161) = 257;
                          v27 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v27 + 5) = 0;
                          v28 = v27 + 40;
                          *((_QWORD *)v27 + 6) = 0;
                          *((_QWORD *)v27 + 8) = *v26;
                          v14 = (uint64_t)(v27 + 64);
                          *((_QWORD *)v27 + 3) = v27 + 64;
                          *((_QWORD *)v27 + 7) = v27 + 64;
                          *((_QWORD *)v27 + 9) = 0;
                          v27[80] = v5 + 28;
                          v27[81] = 0;
                          *((_WORD *)v27 + 41) = 0;
                          *((_DWORD *)v27 + 21) = 2;
                          *(_OWORD *)(v27 + 88) = 0u;
                          *(_OWORD *)(v27 + 104) = 0u;
                          *((_DWORD *)v27 + 30) = 0;
                          *(_QWORD *)v27 = v26;
                          v31 = v26[1];
                          v30 = v26 + 1;
                          v29 = v31;
                          *((_QWORD *)v27 + 1) = v31;
                          if (v31)
                            *(_QWORD *)(v29 + 16) = v27 + 8;
                          *((_QWORD *)v27 + 2) = v30;
                          *v30 = v27;
                          *((_QWORD *)v27 + 4) = v25;
                          if (v25)
                          {
                            v34 = v25[1];
                            v33 = v25 + 1;
                            v32 = v34;
                            *v28 = v34;
                            if (v34)
                              *(_QWORD *)(v32 + 16) = v28;
                            *((_QWORD *)v27 + 6) = v33;
                            *v33 = v27 + 32;
                          }
                          llvm::Value::setName((uint64_t ***)v27 + 8, (uint64_t)&__p);
                          llvm::Instruction::copyIRFlags(v14, (uint64_t)a2, 1);
                          return v14;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    v149 = 0;
    v14 = *(_QWORD *)a2;
    if (!*(_QWORD *)a2 || *(_BYTE *)(v14 + 8) != 18)
      goto LABEL_142;
    __p = &v151;
    v159 = &v152;
    v160 = &v149;
    v161 = 0;
    v35 = *((_QWORD *)a2 - 8);
    v36 = *(_QWORD *)(v35 + 8);
    if (!v36
      || *(_QWORD *)(v36 + 8)
      || !sub_1C57907A8((uint64_t)&__p, v35)
      || (v38 = (unsigned __int8 *)*((_QWORD *)a2 - 4)) == 0
      || (v39 = v38[16], v39 > 0x14)
      || (*v160 = (llvm::Constant *)v38, v39 == 5))
    {
      v40 = *((_QWORD *)a2 - 4);
      v41 = *(_QWORD *)(v40 + 8);
      if (!v41)
        goto LABEL_142;
      if (*(_QWORD *)(v41 + 8))
        goto LABEL_142;
      if (!sub_1C57907A8((uint64_t)&__p, v40))
        goto LABEL_142;
      v42 = (unsigned __int8 *)*((_QWORD *)a2 - 8);
      if (!v42)
        goto LABEL_142;
      v43 = v42[16];
      if (v43 > 0x14)
        goto LABEL_142;
      *v160 = (llvm::Constant *)v42;
      if (v43 == 5)
        goto LABEL_142;
    }
    if (*(_DWORD *)(*v151 + 32) > *(_DWORD *)(v14 + 32))
      goto LABEL_142;
    v143 = *(unsigned int *)(*v151 + 32);
    v44 = *(llvm::UndefValue **)v149;
    if ((*(_DWORD *)(*(_QWORD *)v149 + 8) & 0xFE) == 0x12)
      v44 = (llvm::UndefValue *)**((_QWORD **)v44 + 2);
    v145 = v152;
    v142 = *(unsigned __int8 *)(v7 + 16);
    v45 = llvm::UndefValue::get(v44, v37);
    __p = &v159;
    v158 = 0x1000000000;
    v141 = v45;
    sub_1C4848C0C((unsigned int *)&__p, v143, (uint64_t)v45);
    v144 = (llvm::Type *)*(unsigned int *)(v14 + 32);
    if ((_DWORD)v144)
    {
      for (i = 0; v144 != (llvm::Type *)i; ++i)
      {
        v47 = (llvm *)v5;
        AggregateElement = llvm::Constant::getAggregateElement(v149, (llvm::Type *)i);
        v50 = AggregateElement;
        v51 = v145[i];
        if ((v51 & 0x80000000) == 0)
        {
          if (!AggregateElement)
            goto LABEL_122;
          v52 = 0;
          v53 = (llvm::UndefValue *)*((_QWORD *)__p + v51);
          v55 = *((unsigned __int8 *)v53 + 16) - 11 < 2 || v53 == AggregateElement;
          if (i >= v143 || !v55)
            goto LABEL_139;
          *((_QWORD *)__p + v51) = AggregateElement;
          v5 = (uint64_t)v47;
          continue;
        }
        if (v142 > 0x14)
        {
          v56 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v47, AggregateElement, v141, v49);
          if (v56)
            goto LABEL_82;
          v57 = *(_QWORD ***)v50;
          if (*(_QWORD *)v50)
          {
            v154 = v50;
            v155 = v141;
            goto LABEL_87;
          }
        }
        else
        {
          v56 = (uint64_t)llvm::ConstantFoldBinaryInstruction(v47, v141, AggregateElement, v49);
          if (v56)
            goto LABEL_82;
          v57 = *(_QWORD ***)v141;
          if (*(_QWORD *)v141)
          {
            v154 = v141;
            v155 = v50;
LABEL_87:
            v58 = **v57 + 1512;
            LODWORD(v162) = v47;
            v163 = (uint64_t)&v154;
            v164 = 2;
            v165 = 0u;
            v166 = 0u;
            v167 = 0;
            v56 = sub_1C537D4FC(v58, (uint64_t)v57, (unsigned __int8 *)&v162);
            goto LABEL_82;
          }
        }
        v56 = 0;
LABEL_82:
        v5 = (uint64_t)v47;
        if (!sub_1C4E7B480(v56))
        {
LABEL_122:
          v52 = 0;
          goto LABEL_139;
        }
      }
    }
    v85 = (llvm::FixedVectorType ***)__p;
    v86 = v158;
    Impl = llvm::ConstantVector::getImpl((llvm::FixedVectorType ***)__p, (llvm::Type *)v158);
    if (!Impl)
    {
      llvm::FixedVectorType::get(**v85, (llvm::Type *)v86);
      Impl = (llvm::Constant *)sub_1C537B3A4(**v88 + 1288, (uint64_t)v88, v85, v86);
    }
    v89 = a2[16];
    if (v89 <= 0x33 && ((1 << v89) & 0xD800000000000) != 0 || v89 - 53 <= 2 && v142 <= 0x14)
    {
      v47 = (llvm *)v5;
      Impl = sub_1C62A7210((llvm::ConstantExpr *)v5, Impl, (llvm::Type *)(v142 < 0x15));
    }
    else
    {
      v47 = (llvm *)v5;
    }
    v90 = v152;
    if (v142 >= 0x15)
      v91 = Impl;
    else
      v91 = (llvm::Constant *)v151;
    if (v142 >= 0x15)
      v92 = (llvm::Constant *)v151;
    else
      v92 = Impl;
    v93 = v153;
    v94 = *(_QWORD *)(a1 + 24);
    WORD4(v165) = 257;
    v95 = sub_1C4773860(v94, (uint64_t)v47, v91, (uint64_t)v92, (uint64_t)&v162, 0);
    v96 = (llvm::PoisonValue **)v95;
    if (v95)
    {
      v97 = v95[16];
      if (v97 >= 0x1C && v97 - 59 >= 0xFFFFFFEE)
        llvm::Instruction::copyIRFlags((uint64_t)v95, (uint64_t)a2, 1);
    }
    v99 = operator new(0xA8uLL);
    v99[21] = v99[21] & 0x38000000 | 2;
    v14 = (uint64_t)(v99 + 16);
    *(_QWORD *)v99 = 0;
    *((_QWORD *)v99 + 1) = 0;
    *((_QWORD *)v99 + 2) = 0;
    *((_QWORD *)v99 + 3) = v99 + 16;
    *((_QWORD *)v99 + 4) = 0;
    *((_QWORD *)v99 + 5) = 0;
    *((_QWORD *)v99 + 6) = 0;
    *((_QWORD *)v99 + 7) = v99 + 16;
    WORD4(v165) = 257;
    v101 = llvm::PoisonValue::get(*v96, v100);
    llvm::ShuffleVectorInst::ShuffleVectorInst((_BYTE **)v14, v96, (uint64_t)v101, v90, v93, (uint64_t)&v162, 0);
    v52 = 1;
LABEL_139:
    if (__p != &v159)
      free(__p);
    v5 = (uint64_t)v47;
    if ((v52 & 1) == 0)
    {
LABEL_142:
      v102 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 5) + 56) + 40) + 216);
      WORD4(v165) = 260;
      v162 = v102;
      llvm::Triple::Triple((uint64_t)&__p, (llvm::Twine *)&v162);
      if (v160 > 0x31 || ((1 << (char)v160) & 0x300003C000000) == 0)
      {
        v14 = 0;
        switch(a2[16])
        {
          case ')':
          case '-':
            goto LABEL_150;
          case '*':
          case '.':
            if ((~a2[17] & 0x12) != 0)
              goto LABEL_144;
            goto LABEL_150;
          case '+':
          case ',':
            goto LABEL_145;
          default:
            if (a2[16] - 56 >= 3)
              goto LABEL_145;
LABEL_150:
            if (!llvm::Instruction::isCommutative((llvm::Instruction *)a2))
              goto LABEL_144;
            v104 = *(unsigned __int8 *)(v7 + 16);
            v105 = v104 == 91 ? v6 : v7;
            v106 = v104 == 91 ? v7 : v6;
            v147 = 0;
            v148 = 0;
            v146 = 0;
            v162 = (uint64_t *)&v148;
            v164 = (uint64_t)&v146;
            v107 = *(_QWORD *)(v106 + 8);
            if (!v107 || *(_QWORD *)(v107 + 8) || !sub_1C57907A8((uint64_t)&v162, v106) || !v147)
              goto LABEL_144;
            v109 = v146;
            v110 = 4 * v147;
            v111 = 4 * v147;
            v112 = v146;
            break;
        }
        while (1)
        {
          v113 = (const llvm::Value *)*v112;
          if ((_DWORD)v113 != -1)
            break;
          ++v112;
          v111 -= 4;
          if (!v111)
            goto LABEL_144;
        }
        while ((_DWORD)v113 == *v109 || *v109 == -1)
        {
          ++v109;
          v110 -= 4;
          if (!v110)
          {
            if (*v148 != *(_QWORD *)a2)
              break;
            v115 = *(_QWORD *)(v105 + 8);
            if (!v115 || *(_QWORD *)(v115 + 8))
              break;
            v116 = v105;
            v117 = *(unsigned __int8 *)(v105 + 16);
            if (v4 == v117)
            {
              v118 = *(const void ***)(v105 - 64);
              if (!v118)
                break;
              v119 = *(const void ***)(v116 - 32);
              if (!v119)
                break;
            }
            else
            {
              if (v117 != 5)
                break;
              if ((_DWORD)v5 != *(unsigned __int16 *)(v105 + 18))
                break;
              v122 = (const void ***)(v105 - 32 * (*(_DWORD *)(v105 + 20) & 0x7FFFFFF));
              v118 = *v122;
              if (!*v122)
                break;
              v119 = v122[4];
              if (!v119)
                break;
            }
            if ((llvm::isSplatValue(v119, (const llvm::Value *)*v112, 0, v108) & 1) != 0)
            {
              v121 = (uint64_t)v119;
              v119 = v118;
            }
            else
            {
              isSplatValue = llvm::isSplatValue(v118, v113, 0, v120);
              v121 = (uint64_t)v118;
              if (!isSplatValue)
                break;
            }
            v124 = *(_QWORD *)(a1 + 24);
            WORD4(v165) = 257;
            v125 = sub_1C4773860(v124, v5, v148, v121, (uint64_t)&v162, 0);
            v162 = &v164;
            v163 = 0x800000000;
            sub_1C4893E04((char *)&v162, v147, (int)v113);
            v126 = *(_QWORD *)(a1 + 24);
            v127 = v162;
            v128 = v163;
            v156 = 257;
            v130 = llvm::PoisonValue::get(*(llvm::PoisonValue **)v125, v129);
            v131 = (_QWORD *)sub_1C486AD20(v126, (uint64_t)v125, (uint64_t)v130, v127, v128, (uint64_t)&v154);
            v156 = 257;
            v132 = (char *)operator new(0x80uLL);
            v133 = v132;
            *((_QWORD *)v132 + 6) = 0;
            *((_QWORD *)v132 + 5) = 0;
            *((_QWORD *)v132 + 8) = *v131;
            v14 = (uint64_t)(v132 + 64);
            *((_QWORD *)v132 + 3) = v132 + 64;
            *((_QWORD *)v132 + 7) = v132 + 64;
            *((_QWORD *)v132 + 9) = 0;
            v132[80] = v5 + 28;
            v132[81] = 0;
            *((_WORD *)v132 + 41) = 0;
            *((_DWORD *)v132 + 21) = 2;
            *(_OWORD *)(v132 + 88) = 0u;
            *(_OWORD *)(v132 + 104) = 0u;
            *((_DWORD *)v132 + 30) = 0;
            *(_QWORD *)v132 = v131;
            v136 = v131[1];
            v135 = v131 + 1;
            v134 = v136;
            *((_QWORD *)v132 + 1) = v136;
            if (v136)
              *(_QWORD *)(v134 + 16) = v132 + 8;
            *((_QWORD *)v132 + 2) = v135;
            *v135 = v132;
            *((_QWORD *)v132 + 4) = v119;
            v139 = v119[1];
            v138 = v119 + 1;
            v137 = v139;
            *((_QWORD *)v132 + 5) = v139;
            if (v139)
              v137[2] = v132 + 40;
            *((_QWORD *)v132 + 6) = v138;
            *v138 = v132 + 32;
            llvm::Value::setName((uint64_t ***)v132 + 8, (uint64_t)&v154);
            if (sub_1C4774A9C(v14))
            {
              v133[81] = a2[17] & 0xFE | v133[81] & 1;
              llvm::Instruction::andIRFlags(v14, v116);
            }
            v140 = v125[16];
            if (v140 >= 0x1C && v140 - 59 >= 0xFFFFFFEE)
              llvm::Instruction::copyIRFlags((uint64_t)v125, v14, 1);
            if (v162 != &v164)
              free(v162);
            goto LABEL_145;
          }
        }
      }
LABEL_144:
      v14 = 0;
LABEL_145:
      if (SHIBYTE(v159) < 0)
        operator delete(__p);
    }
  }
  return v14;
}

void sub_1C57833C8(_QWORD *a1, unsigned __int8 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  const llvm::DominatorTree *v9;
  llvm::Value *v10;
  llvm::UndefValue *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  const llvm::DataLayout *v18;
  const llvm::Value *v19;
  const llvm::Instruction *v20;
  int v21;
  const llvm::DataLayout *v22;
  const llvm::Value *v23;
  const llvm::Instruction *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  char v29;
  llvm::Value **v30;
  llvm::UndefValue **v31;
  __int16 v32;
  llvm::UndefValue *v33;
  llvm::Value *v34;

  v4 = a2[16];
  if (v4 == 43)
    v5 = *((_QWORD *)a2 - 8);
  else
    v5 = *((_QWORD *)a2 - 4);
  if (v4 == 43)
    v6 = *((_QWORD *)a2 - 4);
  else
    v6 = *((_QWORD *)a2 - 8);
  v34 = 0;
  v30 = &v34;
  v7 = sub_1C4B037F8(&v30, v6);
  if ((v7 & 1) != 0)
  {
    v8 = 40;
  }
  else
  {
    v30 = &v34;
    if ((sub_1C4B0378C(&v30, v6) & 1) == 0)
      return;
    v8 = 39;
  }
  v33 = 0;
  v30 = &v33;
  v31 = &v33;
  if (((sub_1C4B0378C(&v30, v5) & 1) != 0 || sub_1C4B037F8(&v31, v5))
    && (v11 = v33, v10 = v34, *(_QWORD *)v34 == *(_QWORD *)v33)
    && (!v5 || (v12 = *(unsigned __int8 *)(v5 + 16), v12 <= 0x1B)
      ? (v13 = *(unsigned __int16 *)(v5 + 18))
      : (v13 = v12 - 28),
        v13 == v8))
  {
    v14 = *(_QWORD *)(v6 + 8);
    if (v14 && !*(_QWORD *)(v14 + 8))
      goto LABEL_33;
    v15 = *(_QWORD *)(v5 + 8);
    if (v15)
    {
      if (!*(_QWORD *)(v15 + 8))
        goto LABEL_33;
    }
  }
  else
  {
    v14 = *(_QWORD *)(v6 + 8);
  }
  if (!v14 || *(_QWORD *)(v14 + 8))
    return;
  if (*(unsigned __int8 *)(v5 + 16) > 0x14u || v5 == 0)
    return;
  v11 = sub_1C537D3B8((llvm *)0x26, v5, *(llvm::Constant **)v34, 0);
  if (llvm::ConstantExpr::getCast(v8) != v5)
    return;
  v33 = v11;
  v10 = v34;
LABEL_33:
  v17 = a2[16];
  if (v17 == 43)
  {
    v33 = v10;
    v34 = v11;
    v18 = (const llvm::DataLayout *)a1[7];
    v20 = (const llvm::Instruction *)a1[9];
    v19 = (const llvm::Value *)a1[10];
    if ((v7 & 1) != 0)
      v21 = llvm::computeOverflowForSignedSub(v11, v10, v19, v18, (llvm::AssumptionCache *)a2, v20, v9);
    else
      v21 = llvm::computeOverflowForUnsignedSub(v11, v10, v19, v18, (llvm::AssumptionCache *)a2, v20, v9);
  }
  else if (v17 == 45)
  {
    v22 = (const llvm::DataLayout *)a1[7];
    v24 = (const llvm::Instruction *)a1[9];
    v23 = (const llvm::Value *)a1[10];
    if (v7)
      v21 = llvm::computeOverflowForSignedMul(v10, v11, v23, v22, (llvm::AssumptionCache *)a2, v24, (const llvm::DominatorTree *)1);
    else
      v21 = llvm::computeOverflowForUnsignedMul(v10, v11, v23, v22, (llvm::AssumptionCache *)a2, v24, (const llvm::DominatorTree *)1);
  }
  else if (v7)
  {
    v21 = sub_1C4F8C45C((uint64_t)v10, (uint64_t)v11, 0, a1[10], a1[7], (uint64_t)a2, a1[9]);
  }
  else
  {
    v21 = llvm::computeOverflowForUnsignedAdd(v10, v11, (const llvm::Value *)a1[10], (const llvm::DataLayout *)a1[7], (llvm::AssumptionCache *)a2, (const llvm::Instruction *)a1[9], (const llvm::DominatorTree *)1);
  }
  if (v21 == 3)
  {
    v25 = a1[3];
    v26 = a2[16] - 28;
    v30 = (llvm::Value **)"narrow";
    v32 = 259;
    v27 = sub_1C4773860(v25, v26, v34, (uint64_t)v33, (uint64_t)&v30, 0);
    if (v27)
    {
      v28 = v27[16];
      if (v28 >= 0x1C && v28 - 59 >= 0xFFFFFFEE)
      {
        if (v7)
          v29 = 4;
        else
          v29 = 2;
        v27[17] |= v29;
      }
    }
    v32 = 257;
    llvm::CastInst::Create(v8);
  }
}

BOOL sub_1C5783688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BOOL8 result;

  result = 1;
  if (sub_1C535A110(a1))
  {
    if ((sub_1C535A110(a2) & 1) == 0)
    {
      v3 = *(_QWORD *)(a2 + 8);
      if (!v3 || *(_QWORD *)(v3 + 8))
        return 0;
    }
  }
  return result;
}

uint64_t sub_1C57836D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a1 + 17) & 2) != 0)
    goto LABEL_5;
  if ((*(_BYTE *)(a2 + 17) & 2) == 0)
    return 0;
  result = sub_1C535A110(a1);
  if ((_DWORD)result)
  {
LABEL_5:
    if ((*(_BYTE *)(a2 + 17) & 2) != 0)
      return 1;
    else
      return sub_1C535A110(a2);
  }
  return result;
}

_QWORD *sub_1C578372C(llvm::GetElementPtrInst *TypeAtIndex, uint64_t *a2, llvm::Value *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  BOOL v13;
  _QWORD *v14;
  _QWORD *v15;
  llvm::Value *v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  llvm::Type **v20;
  uint64_t v21;
  llvm::Type *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t **v25;
  uint64_t v26;
  uint64_t ***v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  llvm::ValueSymbolTable *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;

  v12 = (a4 + 1);
  v13 = (_DWORD)a4 == -1;
  v14 = operator new(32 * v12 + 80);
  v15 = &v14[4 * v12];
  *((_DWORD *)v15 + 5) = *((_DWORD *)v15 + 5) & 0x38000000 | v12 & 0x7FFFFFF;
  if (!v13)
  {
    do
    {
      *v14 = 0;
      v14[1] = 0;
      v14[2] = 0;
      v14[3] = v15;
      v14 += 4;
    }
    while (v14 != v15);
  }
  sub_1C4774650(TypeAtIndex, a2, a3, a4);
  *v15 = v17;
  v15[1] = 0;
  v18 = *((_DWORD *)v15 + 5) & 0xC0000000 | v12 & 0x7FFFFFF;
  *((_DWORD *)v15 + 4) = 62;
  *((_DWORD *)v15 + 5) = v18;
  *(_OWORD *)(v15 + 3) = 0u;
  v19 = v15 + 3;
  *(_OWORD *)(v15 + 5) = 0u;
  *((_DWORD *)v15 + 14) = 0;
  if (a6)
  {
    v31 = *(_QWORD *)(a6 + 40);
    v32 = (uint64_t *)(a6 + 24);
    v15[5] = v31;
    *(_WORD *)(v31 + 18) &= ~0x8000u;
    if ((*((_BYTE *)v15 + 23) & 0x10) != 0)
    {
      v34 = *(_QWORD *)(v31 + 56);
      if (v34)
      {
        v35 = *(llvm::ValueSymbolTable **)(v34 + 104);
        if (v35)
          llvm::ValueSymbolTable::reinsertValue(v35, (llvm::Value *)v15);
      }
    }
    v33 = *v32;
    v15[3] = *v32;
    v15[4] = v32;
    *(_QWORD *)(v33 + 8) = v19;
    *v32 = (uint64_t)v19;
  }
  v15[8] = TypeAtIndex;
  if (a4)
  {
    v20 = (llvm::Type **)((char *)a3 + 8);
    v21 = 8 * a4 - 8;
    do
    {
      if (!v21)
        break;
      v22 = *v20++;
      TypeAtIndex = (llvm::GetElementPtrInst *)llvm::GetElementPtrInst::getTypeAtIndex(TypeAtIndex, v22, v16);
      v21 -= 8;
    }
    while (TypeAtIndex);
  }
  v15[9] = TypeAtIndex;
  v23 = *((_DWORD *)v15 + 5) & 0x7FFFFFF;
  v24 = -v23;
  v25 = (uint64_t **)&v15[-4 * v23];
  if (*v25)
  {
    v36 = &v15[4 * v24];
    v38 = (_QWORD *)v36[2];
    v37 = v36 + 2;
    *v38 = *(v37 - 1);
    v39 = *(v37 - 1);
    if (v39)
      *(_QWORD *)(v39 + 16) = *v37;
  }
  *v25 = a2;
  if (a2)
  {
    v28 = a2[1];
    v27 = (uint64_t ***)(a2 + 1);
    v26 = v28;
    v29 = &v15[4 * v24];
    v29[1] = v28;
    if (v28)
      *(_QWORD *)(v26 + 16) = v29 + 1;
    v29[2] = v27;
    *v27 = v25;
  }
  sub_1C5382FD4((uint64_t)&v40, (uint64_t *)a3, (uint64_t *)a3 + a4, (uint64_t)&v15[-4 * (*((_DWORD *)v15 + 5) & 0x7FFFFFF) + 4]);
  llvm::Value::setName((uint64_t ***)v15, a5);
  *((_BYTE *)v15 + 17) |= 2u;
  return v15;
}

llvm::UndefValue **sub_1C5783930(uint64_t a1, uint64_t a2)
{
  llvm::Constant **v2;
  uint64_t v4;
  _QWORD *v5;
  llvm::Constant **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  llvm::Value *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  llvm::Constant *v16;
  unsigned __int8 *v17;
  llvm::UndefValue **v18;
  int v19;
  __int128 v20;
  __int128 v21;
  llvm::UndefValue *v22;
  BOOL v23;
  unsigned int v24;
  void *v25;
  llvm::Value *v26;
  uint64_t v27;
  llvm::Value *v28;
  uint64_t **v29;
  uint64_t **v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  llvm::Constant **v37;
  uint64_t v38;
  llvm::Constant **v39;
  llvm::Constant **v40;
  char v41;
  llvm::Constant **v42;
  llvm::Constant *v43;
  llvm::Type *v44;
  llvm::Constant *v45;
  llvm::Constant *v46;
  uint64_t v47;
  unint64_t v48;
  llvm::UndefValue *AggregateElement;
  BOOL v50;
  unsigned int *v51;
  unsigned int *v52;
  unsigned int *v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  llvm::Type *v58;
  char v59;
  llvm::Constant *v60;
  llvm::Value **NullValue;
  llvm::Constant *v62;
  llvm::Constant ***v63;
  llvm::Value *v64;
  llvm::Value *v65;
  uint64_t *v67;
  llvm::Constant *v68;
  unsigned __int8 *v69;
  llvm::Constant *v70;
  llvm::Constant ***v71;
  llvm::Constant *v72;
  llvm::Constant *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t *v78;
  llvm::Value *v79;
  uint64_t v80;
  llvm::Constant **v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  llvm::Value *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *i;
  _QWORD *v90;
  uint64_t *v91;
  uint64_t *v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  unint64_t v98;
  llvm::GetElementPtrInst *TypeAtIndex;
  uint64_t v100;
  llvm::Constant **v101;
  llvm::Type *v102;
  llvm::Type *v103;
  uint64_t v104;
  llvm::Value *v105;
  uint64_t v106;
  unsigned __int8 *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  _QWORD *v112;
  uint64_t v113;
  unsigned int v114;
  uint64_t v115;
  _QWORD *v117;
  uint64_t v118;
  int v119;
  _QWORD **v120;
  uint64_t *v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD ***v127;
  _QWORD ***v128;
  char v129;
  unsigned __int8 *v130;
  int v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  llvm::GetElementPtrInst *v135;
  int v136;
  uint64_t **v137;
  int v138;
  _QWORD ***v139;
  uint64_t **v140;
  uint64_t v141;
  llvm::ValueSymbolTable *v142;
  llvm::Constant *v143;
  llvm *v144;
  __int128 v145;
  llvm::ValueHandleBase *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  char v150;
  int v151;
  uint64_t *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t **v158;
  uint64_t *v159;
  int v160;
  int v161;
  uint64_t *v162;
  llvm::Value *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t **v168;
  uint64_t *v169;
  int v170;
  int v171;
  _QWORD ***v172;
  uint64_t v173;
  _QWORD ***v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t *v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  BOOL v198;
  _QWORD *v199;
  llvm::Value *v200;
  uint64_t v201;
  int v202;
  llvm::Type **v203;
  uint64_t v204;
  llvm::Type *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t **v208;
  uint64_t v209;
  uint64_t ***v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  int v214;
  uint64_t v215;
  _QWORD **v216;
  uint64_t v217;
  unsigned int v218;
  uint64_t v219;
  _QWORD **v220;
  int v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  BOOL isLoopInvariant;
  uint64_t **v226;
  _QWORD ***v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t *v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  unsigned int v242;
  unsigned int v243;
  uint64_t v244;
  int PrimitiveSizeInBits;
  llvm::DataLayout *v246;
  uint64_t v247;
  llvm **v248;
  llvm *v249;
  llvm *v250;
  uint64_t v251;
  int v252;
  unint64_t *v253;
  _QWORD **v254;
  unint64_t *v255;
  int v256;
  int v257;
  unint64_t *v258;
  unint64_t v259;
  int v260;
  llvm *UnderlyingObject;
  llvm::Value *v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  _QWORD **v269;
  char *v270;
  BOOL v271;
  llvm::APInt *v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  int v276;
  int v277;
  int v278;
  BOOL v279;
  uint64_t v280;
  unsigned int v281;
  unsigned int v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t v285;
  llvm::Type **v286;
  const char *v287;
  unsigned int v288;
  unint64_t v289;
  unsigned __int8 *v290;
  int v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  llvm::Type *v296;
  uint64_t v297;
  uint64_t **v298;
  uint64_t *v299;
  int v300;
  int v301;
  uint64_t v302;
  BOOL v303;
  uint64_t v304;
  unsigned int v305;
  llvm::Constant *v306;
  llvm::Type *v307;
  llvm::Value **v308;
  int v309;
  _QWORD **v310;
  uint64_t *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t **v316;
  uint64_t *v317;
  int v318;
  int v319;
  llvm *v320;
  int v321;
  int v322;
  unsigned int v323;
  char *v324;
  char *v325;
  _QWORD *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  int v332;
  llvm::Value *v333;
  _QWORD *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t **v341;
  uint64_t *v342;
  int v343;
  int v344;
  unsigned int v346;
  unsigned int v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  llvm::Type **v351;
  const char *v352;
  unsigned int v353;
  unint64_t v354;
  unsigned __int8 *v355;
  llvm::Constant *v356;
  llvm::Type *v357;
  int v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t **v363;
  uint64_t *v364;
  int v365;
  int v366;
  uint64_t *v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  llvm::GetElementPtrInst *v371;
  uint64_t v372;
  int v374;
  llvm::Value *v375;
  llvm::Value *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  unint64_t v386;
  int v387;
  char v388;
  uint64_t v389;
  int v390;
  _BOOL4 v391;
  uint64_t v392;
  unint64_t v393;
  char v394;
  uint64_t v395;
  uint64_t v396;
  unint64_t v397;
  int v398;
  char v399;
  uint64_t v400;
  int v401;
  _BOOL4 v402;
  uint64_t v403;
  unint64_t v404;
  char v405;
  uint64_t v406;
  unint64_t v407;
  uint64_t v408;
  int v409;
  llvm::Value *v410;
  _QWORD *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t *v414;
  llvm::Value *v415;
  uint64_t v416;
  int v417;
  const llvm::APInt *v418;
  llvm::DataLayout *v419;
  unsigned int v420;
  uint64_t v421;
  unsigned int v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t *v425;
  uint64_t v426;
  _QWORD *v427;
  int v428;
  uint64_t *v429;
  uint64_t v430;
  uint64_t *v431;
  unsigned int v432;
  uint64_t v433;
  int v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  BOOL v438;
  uint64_t v439;
  uint64_t *v441;
  unint64_t v442;
  uint64_t v443;
  int v444;
  llvm::Value *v445;
  _QWORD *v446;
  uint64_t v447;
  uint64_t v448;
  llvm::GetElementPtrInst *v449;
  _QWORD *v450;
  uint64_t v451;
  uint64_t v452;
  unint64_t v453;
  llvm::GetElementPtrInst *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t **v459;
  uint64_t *v460;
  int v461;
  int v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  uint64_t v466;
  char *v467;
  unsigned int v468;
  uint64_t v469;
  _QWORD *v470;
  uint64_t v471;
  uint64_t v472;
  _QWORD *v473;
  uint64_t v474;
  uint64_t *v475;
  uint64_t v476;
  uint64_t **v477;
  uint64_t v478;
  void *v479;
  int v480;
  int64_t v481;
  unint64_t v482;
  unsigned int v483;
  llvm::UndefValue **v484;
  llvm::UndefValue **v485;
  uint64_t v486;
  llvm::UndefValue *v487;
  int v488;
  uint64_t v489;
  int v490;
  unsigned int v491;
  _DWORD *v492;
  uint64_t v493;
  unsigned __int8 *v494;
  unsigned int v495;
  unsigned int v496;
  unint64_t v497;
  const llvm::APInt *v498;
  llvm::Type *v499;
  int v500;
  int64_t v501;
  unint64_t v502;
  unsigned int v503;
  uint64_t v504;
  llvm::ValueHandleBase *v505;
  uint64_t v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t *v510;
  llvm::Value *v511;
  uint64_t *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  char v516;
  uint64_t v517;
  int v518;
  uint64_t v519;
  int v520;
  unsigned int v521;
  _DWORD *v522;
  uint64_t v523;
  llvm::Value *v524;
  unsigned int v525;
  uint64_t v526;
  int v527;
  _DWORD *v528;
  uint64_t v529;
  uint64_t *v530;
  char *v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  _QWORD *v535;
  _QWORD *v536;
  llvm::Value *v537;
  uint64_t v538;
  int v539;
  llvm::Type **v540;
  uint64_t v541;
  llvm::Type *v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t **v545;
  uint64_t v546;
  uint64_t ***v547;
  uint64_t v548;
  _QWORD *v549;
  uint64_t v550;
  unsigned int v551;
  _DWORD *v552;
  uint64_t *v553;
  uint64_t v554;
  unint64_t *v555;
  uint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  uint64_t v560;
  int v561;
  llvm::Value *v562;
  _QWORD *v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t *v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t **v571;
  uint64_t *v572;
  int v573;
  int v574;
  uint64_t *v575;
  uint64_t v576;
  char *v577;
  uint64_t v578;
  llvm::GetElementPtrInst *v579;
  uint64_t *v581;
  uint64_t v582;
  char *v583;
  uint64_t v584;
  uint64_t v585;
  int v586;
  uint64_t v587;
  uint64_t *v588;
  uint64_t v589;
  uint64_t *v590;
  uint64_t v591;
  int v592;
  uint64_t v593;
  int v594;
  uint64_t v595;
  _QWORD ***v596;
  _QWORD ***v597;
  _QWORD **v598;
  _QWORD **v599;
  _QWORD *v600;
  _QWORD **v601;
  _QWORD ***v602;
  uint64_t *v603;
  uint64_t v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  int v609;
  int v610;
  unsigned int v611;
  uint64_t v612;
  uint64_t *v613;
  _QWORD ***v614;
  uint64_t *v615;
  _QWORD **v616;
  _QWORD **v617;
  uint64_t **v618;
  _QWORD **v619;
  uint64_t *v620;
  uint64_t *v621;
  _QWORD **v622;
  _QWORD **v623;
  uint64_t **v624;
  _QWORD **v625;
  uint64_t v626;
  uint64_t v627;
  unsigned __int8 **v628;
  int v629;
  unsigned __int8 *v630;
  unsigned __int8 *v631;
  unsigned __int8 *v632;
  uint64_t v633;
  unsigned __int8 *v634;
  uint64_t v635;
  uint64_t *v636;
  llvm::GetElementPtrInst *v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  llvm::Value **v642;
  llvm::Value *v643;
  int v644;
  int v645;
  uint64_t v646;
  llvm::ValueSymbolTable *v647;
  uint64_t v648;
  _DWORD *v649;
  unint64_t v650;
  unint64_t v651;
  unint64_t v652;
  llvm::Value *v653;
  char *v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t ***v657;
  uint64_t *v658;
  llvm::GetElementPtrInst *v659;
  char *v660;
  uint64_t v661;
  unsigned int v662;
  uint64_t v663;
  uint64_t v664;
  _QWORD *v665;
  uint64_t v666;
  uint64_t v667;
  _QWORD *v668;
  _QWORD *v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  _QWORD *v674;
  _QWORD *v675;
  _QWORD *v676;
  uint64_t v677;
  uint64_t v678;
  int v679[2];
  uint64_t v680;
  uint64_t v681;
  llvm::UndefValue **v682;
  llvm::Type *v683;
  uint64_t v684;
  int v685;
  _BOOL4 v686;
  _BOOL4 v687;
  uint64_t *v688;
  unint64_t v689;
  unsigned int v690;
  unint64_t v691;
  unsigned int v692;
  llvm::UndefValue **v693;
  uint64_t v694;
  void *v695;
  unsigned int v696;
  unint64_t v697;
  unsigned int v698;
  __int16 v699;
  llvm *v700;
  unsigned int IndexTypeSizeInBits;
  llvm::Type *v702;
  void *v703;
  uint64_t v704;
  _BYTE v705[64];
  __int128 v706;
  __int128 v707;
  llvm::Constant **v708;
  uint64_t v709;
  _BYTE v710[32];
  __int128 v711;
  uint64_t v712;

  v2 = (llvm::Constant **)a2;
  v712 = *MEMORY[0x1E0C80C00];
  v4 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
  v5 = (_QWORD *)(a2 - 32 * v4);
  v8 = *v5;
  v6 = (llvm::Constant **)(v5 + 4);
  v7 = v8;
  v703 = v705;
  v704 = 0x800000000;
  v9 = a2 - (_QWORD)v6;
  if ((unint64_t)(a2 - (_QWORD)v6) >= 0x101)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v703, (uint64_t)v705, v9 >> 5, 8);
    v10 = v704;
    v12 = (llvm::Value *)v703;
    v11 = v704;
  }
  else
  {
    v10 = 0;
    v11 = 0;
    v12 = (llvm::Value *)v705;
  }
  if (v6 != v2)
  {
    v13 = (_QWORD *)((char *)v12 + 8 * v10);
    v14 = 32 - 32 * v4;
    do
    {
      *v13++ = *(llvm::Constant **)((char *)v2 + v14);
      v14 += 32;
    }
    while (v14);
    v12 = (llvm::Value *)v703;
  }
  v15 = v11 + ((unint64_t)v9 >> 5);
  LODWORD(v704) = v11 + ((unint64_t)v9 >> 5);
  v16 = *v2;
  v17 = (unsigned __int8 *)v2[8];
  v18 = (llvm::UndefValue **)v17[8];
  v19 = (*((unsigned __int8 *)v2 + 17) >> 1) & 1;
  v20 = *(_OWORD *)(a1 + 120);
  v21 = *(_OWORD *)(a1 + 104);
  v706 = *(_OWORD *)(a1 + 88);
  v707 = v21;
  v709 = *((_QWORD *)&v20 + 1);
  v708 = v2;
  v22 = sub_1C4E6B244((llvm::GetElementPtrInst *)v17, (unsigned __int8 *)v7, v12, v15, v19, (uint64_t)&v706);
  if (v22)
  {
    v18 = sub_1C577F888(a1, (llvm::ValueAsMetadata *)v2, v22);
    goto LABEL_345;
  }
  v685 = (int)v18;
  v684 = (uint64_t)v17;
  v23 = *((_BYTE *)v16 + 8) != 18 || v16 == 0;
  v688 = (uint64_t *)v2;
  if (!v23)
  {
    v24 = *((_DWORD *)v16 + 8);
    DWORD2(v706) = v24;
    if (v24 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v706, 0, 0);
      *(_DWORD *)&v710[8] = v24;
      llvm::APInt::initSlowCase((llvm::APInt *)v710, -1, 1);
      v24 = *(_DWORD *)&v710[8];
      v696 = *(_DWORD *)&v710[8];
      if (*(_DWORD *)&v710[8] > 0x40u)
      {
        v695 = (void *)operator new[]();
        v25 = *(void **)v710;
        memcpy(v695, *(const void **)v710, (((unint64_t)v696 + 63) >> 3) & 0x3FFFFFF8);
        goto LABEL_19;
      }
      v25 = *(void **)v710;
    }
    else
    {
      *(_QWORD *)&v706 = 0;
      *(_DWORD *)&v710[8] = v24;
      if (v24)
        v25 = (void *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v24);
      else
        v25 = 0;
      *(_QWORD *)v710 = v25;
      v696 = v24;
    }
    v695 = v25;
LABEL_19:
    v26 = (llvm::Value *)sub_1C58553C4(a1, (uint64_t ***)v2, (unsigned int *)&v695, (unsigned int *)&v706, 0, 0);
    if (v696 >= 0x41 && v695)
      MEMORY[0x1CAA32F9C](v695, 0x1000C8000313F17);
    if (v26)
    {
      v18 = v2;
      if (v26 != (llvm::Value *)v2)
        v18 = sub_1C577F888(a1, (llvm::ValueAsMetadata *)v2, v26);
    }
    if (v24 >= 0x41 && v25)
      MEMORY[0x1CAA32F9C](v25, 0x1000C8000313F17);
    if (DWORD2(v706) >= 0x41 && (_QWORD)v706)
      MEMORY[0x1CAA32F9C](v706, 0x1000C8000313F17);
    if (v26)
      goto LABEL_345;
  }
  v27 = *(_QWORD *)v2[-4 * (*((_DWORD *)v2 + 5) & 0x7FFFFFF)];
  if ((*(_DWORD *)(v27 + 8) & 0xFE) == 0x12)
    v27 = **(_QWORD **)(v27 + 16);
  v682 = v18;
  v683 = v16;
  llvm::DataLayout::getIndexType(*(llvm::DataLayout **)(a1 + 80), (llvm::Type *)v27);
  v30 = v29;
  if (*((_BYTE *)v2 + 16) == 62)
    v31 = (uint64_t *)(v2 + 8);
  else
    v31 = (uint64_t *)(v2 + 3);
  v32 = *v31;
  v33 = *((_DWORD *)v2 + 5);
  v34 = a1;
  if ((v33 & 0x40000000) != 0)
  {
    v37 = (llvm::Constant **)*(v2 - 1);
    v36 = -(uint64_t)(v33 & 0x7FFFFFF);
  }
  else
  {
    v35 = v33 & 0x7FFFFFF;
    v36 = -v35;
    v37 = &v2[-4 * v35];
  }
  v38 = v32 | 4;
  v693 = v37 + 4;
  v694 = v38;
  v39 = &v2[4 * v36];
  v40 = v39 + 4;
  if (v39 + 4 == v2)
    goto LABEL_95;
  v681 = v7;
  v41 = 0;
  while (1)
  {
    v42 = v40;
    if ((v38 & 4) == 0)
      break;
    v43 = *(llvm::Constant **)*v40;
    if ((*((_DWORD *)v43 + 2) & 0xFE) == 0x12)
    {
      v44 = (llvm::Type *)*((unsigned int *)v43 + 8);
      if (*((_DWORD *)v43 + 2) == 19)
        llvm::ScalableVectorType::get(v30, v44);
      else
        llvm::FixedVectorType::get((llvm::FixedVectorType *)v30, v44);
      v46 = v45;
      v38 = v694;
      v47 = v694 & 4;
    }
    else
    {
      v47 = 1;
      v46 = (llvm::Constant *)v30;
    }
    v48 = v38 & 0xFFFFFFFFFFFFFFF8;
    if (!v47 || !v48)
    {
      AggregateElement = *v693;
      if (*v693)
        v50 = *((_BYTE *)*v693 + 16) == 16;
      else
        v50 = 0;
      if (!v50)
        AggregateElement = llvm::Constant::getAggregateElement(AggregateElement, 0);
      v53 = (unsigned int *)*((_QWORD *)AggregateElement + 3);
      v51 = (unsigned int *)((char *)AggregateElement + 24);
      v52 = v53;
      if (v51[2] < 0x41)
        v52 = v51;
      v48 = *(_QWORD *)(*(_QWORD *)(v48 + 16) + 8 * *v52);
    }
    v54 = *(unsigned __int8 *)(v48 + 8);
    if (v54 > 0x11)
      goto LABEL_76;
    if (((1 << v54) & 0xAC7F) == 0)
    {
      if (((1 << v54) & 0x30000) == 0)
      {
LABEL_76:
        if ((v54 & 0xFE) != 0x12 && v54 != 21)
          goto LABEL_80;
      }
      if (!llvm::Type::isSizedDerivedType(v48, 0))
        goto LABEL_80;
    }
    v55 = *(_QWORD *)(v34 + 80);
    sub_1C4768AD0(v55, v48);
    v57 = (unint64_t)(v56 + 7) >> 3;
    llvm::DataLayout::getAlignment(v55, v48);
    if ((v57 + ~(-1 << v59)) >> v59)
    {
      v2 = (llvm::Constant **)v688;
    }
    else
    {
      v60 = *v42;
      v2 = (llvm::Constant **)v688;
      if (*((unsigned __int8 *)*v42 + 16) > 0x14u
        || (llvm::Constant::isNullValue(*v42) & 1) == 0 && (sub_1C4E71060((uint64_t)&v706, v60) & 1) == 0)
      {
        NullValue = llvm::Constant::getNullValue(v46, v58);
        if (*v42)
        {
          *(_QWORD *)v39[6] = v39[5];
          v62 = v39[5];
          if (v62)
            *((_QWORD *)v62 + 2) = v39[6];
        }
        *v42 = (llvm::Constant *)NullValue;
        if (NullValue)
        {
          v65 = NullValue[1];
          v63 = (llvm::Constant ***)(NullValue + 1);
          v64 = v65;
          v39[5] = v65;
          if (v65)
            *((_QWORD *)v64 + 2) = v39 + 5;
          v39[6] = (llvm::Constant *)v63;
          *v63 = v42;
        }
        v41 = 1;
      }
    }
LABEL_80:
    if (v43 == v46)
      break;
    v67 = *(uint64_t **)(v34 + 24);
    v68 = *v42;
    LOWORD(v708) = 257;
    v69 = sub_1C4D8D514(v67, (unsigned __int8 *)v68, (uint64_t)v46, 1, (uint64_t)&v706);
    if (*v42)
    {
      *(_QWORD *)v39[6] = v39[5];
      v70 = v39[5];
      if (v70)
        *((_QWORD *)v70 + 2) = v39[6];
    }
    *v42 = (llvm::Constant *)v69;
    if (v69)
    {
      v73 = (llvm::Constant *)*((_QWORD *)v69 + 1);
      v71 = (llvm::Constant ***)(v69 + 8);
      v72 = v73;
      v39[5] = v73;
      if (v73)
        *((_QWORD *)v72 + 2) = v39 + 5;
      v39[6] = (llvm::Constant *)v71;
      *v71 = v42;
    }
    sub_1C4774E38((uint64_t)&v693);
    v40 = v42 + 4;
    if (v42 + 4 == v2)
      goto LABEL_94;
    v41 = 1;
LABEL_91:
    v38 = v694;
    v39 = v42;
  }
  sub_1C4774E38((uint64_t)&v693);
  v40 = v42 + 4;
  if (v42 + 4 != v2)
    goto LABEL_91;
  v7 = v681;
  if ((v41 & 1) != 0)
  {
LABEL_94:
    v74 = (uint64_t)v2;
    goto LABEL_344;
  }
LABEL_95:
  v75 = *(unsigned __int8 *)(v7 + 16);
  if (v75 != 83)
  {
    v79 = (llvm::Value *)v7;
    v76 = v34;
    goto LABEL_160;
  }
  v76 = v34;
  if (!v7)
  {
    v79 = 0;
    goto LABEL_160;
  }
  v77 = *(_DWORD *)(v7 + 20);
  if ((v77 & 0x40000000) != 0)
    v78 = *(uint64_t **)(v7 - 8);
  else
    v78 = (uint64_t *)(v7 - 32 * (v77 & 0x7FFFFFF));
  v74 = 0;
  v80 = *v78;
  if (*(_BYTE *)(v80 + 16) == 62)
    v81 = (llvm::Constant **)v80;
  else
    v81 = 0;
  if (v81)
    v82 = v81 == v2;
  else
    v82 = 1;
  if (v82)
    goto LABEL_344;
  if ((v77 & 0x40000000) != 0)
  {
    v84 = *(_QWORD *)(v7 - 8);
    v83 = v77 & 0x7FFFFFF;
  }
  else
  {
    v83 = v77 & 0x7FFFFFF;
    v84 = v7 - 32 * v83;
  }
  if (v83 == 1)
    goto LABEL_113;
  v91 = (uint64_t *)(v84 + 32 * v83);
  v92 = (uint64_t *)(v84 + 32);
  v93 = -1;
  *(_QWORD *)v679 = v76;
  do
  {
    v74 = 0;
    v94 = *v92;
    if (!*v92 || *(_BYTE *)(v94 + 16) != 62)
      goto LABEL_344;
    v95 = *((_DWORD *)v81 + 5) & 0x7FFFFFF;
    if ((_DWORD)v95 != (*(_DWORD *)(v94 + 20) & 0x7FFFFFF))
      goto LABEL_343;
    if ((uint64_t *)v94 == v688 || v81[8] != *(llvm::Constant **)(v94 + 64))
      goto LABEL_343;
    v97 = v7;
    if ((_DWORD)v95)
    {
      v98 = 0;
      TypeAtIndex = 0;
      v100 = *v92;
      v101 = v81;
      do
      {
        v102 = v101[-4 * (*((_DWORD *)v81 + 5) & 0x7FFFFFF)];
        v103 = *(llvm::Type **)(v100 - 32 * (*(_DWORD *)(v94 + 20) & 0x7FFFFFF));
        if (*(_QWORD *)v102 != *(_QWORD *)v103)
          goto LABEL_343;
        if (v102 != v103)
        {
          if (v93 != -1 || v98 > 1 && *((_BYTE *)TypeAtIndex + 8) == 16)
            goto LABEL_343;
          v93 = v98;
        }
        if ((_DWORD)v98)
        {
          if ((_DWORD)v98 == 1)
            TypeAtIndex = v81[8];
          else
            TypeAtIndex = (llvm::GetElementPtrInst *)llvm::GetElementPtrInst::getTypeAtIndex(TypeAtIndex, v102, v28);
        }
        ++v98;
        v101 += 4;
        v100 += 32;
      }
      while (v95 != v98);
    }
    v92 += 4;
    v76 = *(_QWORD *)v679;
    v7 = v97;
  }
  while (v92 != v91);
  if (v93 == -1)
  {
LABEL_113:
    llvm::Instruction::clone((llvm::Instruction *)v81);
    v79 = v85;
    v86 = (uint64_t)v688;
LABEL_114:
    v87 = *(_QWORD *)(v86 + 40);
    v88 = (_QWORD *)(v87 + 40);
    for (i = *(_QWORD **)(v87 + 48); i != v88; i = (_QWORD *)i[1])
    {
      v90 = i - 3;
      if (!i)
        v90 = 0;
      if (*((_BYTE *)v90 + 16) != 83)
      {
        v114 = *((unsigned __int8 *)i - 8) - 38;
        v438 = v114 > 0x38;
        v115 = (1 << v114) & 0x100060000000001;
        if (v438 || v115 == 0)
          v88 = i;
        else
          v88 = (_QWORD *)i[1];
        break;
      }
    }
    *((_QWORD *)v79 + 5) = v87;
    *(_WORD *)(v87 + 18) &= ~0x8000u;
    if ((*((_BYTE *)v79 + 23) & 0x10) != 0)
    {
      v141 = *(_QWORD *)(v87 + 56);
      if (v141)
      {
        v142 = *(llvm::ValueSymbolTable **)(v141 + 104);
        if (v142)
          llvm::ValueSymbolTable::reinsertValue(v142, v79);
      }
    }
    v117 = (_QWORD *)*v88;
    *((_QWORD *)v79 + 4) = v88;
    *((_QWORD *)v79 + 3) = v117;
    v117[1] = (char *)v79 + 24;
    *v88 = (char *)v79 + 24;
    sub_1C577E2C8(v76, v86, 0, (uint64_t)v79);
    v75 = *((unsigned __int8 *)v79 + 16);
LABEL_160:
    if (v75 != 62 && (v75 != 5 || *((_WORD *)v79 + 9) != 34))
      goto LABEL_299;
    v23 = v75 == 62;
    v118 = 32;
    if (v23)
      v118 = 72;
    if (*(_QWORD *)((char *)v79 + v118) != v688[8] || !sub_1C5783688((uint64_t)v688, (uint64_t)v79))
      goto LABEL_299;
    v119 = *((_DWORD *)v79 + 5);
    if ((v119 & 0x7FFFFFF) != 2
      || (*((_DWORD *)v688 + 5) & 0x7FFFFFF) != 2
      || (v120 = (_QWORD **)*((_QWORD *)v79 + 1)) == 0
      || v120[1]
      || ((v173 = *(v688 - 4), (v119 & 0x40000000) != 0)
        ? (v174 = (_QWORD ***)*((_QWORD *)v79 - 1))
        : (v174 = (_QWORD ***)((char *)v79 - 64)),
          (v213 = *(uint64_t **)(v76 + 160)) == 0 || (v214 = *((_DWORD *)v213 + 4)) == 0))
    {
LABEL_171:
      if ((v119 & 0x40000000) != 0)
        v121 = (uint64_t *)*((_QWORD *)v79 - 1);
      else
        v121 = (uint64_t *)((char *)v79 - 32 * (v119 & 0x7FFFFFF));
      v122 = *v121;
      v123 = *(unsigned __int8 *)(*v121 + 16);
      if ((v123 == 62 || v123 == 5 && *(_WORD *)(v122 + 18) == 34) && (*(_DWORD *)(v122 + 20) & 0x7FFFFFF) == 2)
      {
        if (sub_1C5783688((uint64_t)v79, v122))
          goto LABEL_299;
        v119 = *((_DWORD *)v79 + 5);
      }
      *(_QWORD *)&v706 = &v707;
      *((_QWORD *)&v706 + 1) = 0x800000000;
      v124 = 24;
      if (*((_BYTE *)v79 + 16) == 62)
        v124 = 64;
      v125 = *(_QWORD *)((char *)v79 + v124);
      if ((v119 & 0x40000000) != 0)
      {
        v127 = (_QWORD ***)*((_QWORD *)v79 - 1);
        v126 = v119 & 0x7FFFFFF;
      }
      else
      {
        v126 = v119 & 0x7FFFFFF;
        v127 = (_QWORD ***)((char *)v79 - 32 * v126);
      }
      *(_QWORD *)v710 = v127 + 4;
      *(_QWORD *)&v710[8] = v125 | 4;
      v74 = (uint64_t)v688;
      if (v126 == 1)
        goto LABEL_189;
      v128 = &v127[4 * v126];
      do
      {
        v129 = v710[8];
        sub_1C4774E38((uint64_t)v710);
      }
      while (*(_QWORD ****)v710 != v128);
      if ((v129 & 4) != 0)
      {
        v138 = *((_DWORD *)v79 + 5);
        if ((v138 & 0x40000000) != 0)
          v139 = (_QWORD ***)*((_QWORD *)v79 - 1);
        else
          v139 = (_QWORD ***)((char *)v79 - 32 * (v138 & 0x7FFFFFF));
        v143 = (llvm::Constant *)v139[4 * (v138 & 0x7FFFFFFu) - 4];
        v144 = (llvm *)v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF) + 4];
        if (*(_QWORD *)v143 != *(_QWORD *)v144)
          goto LABEL_295;
        v145 = *(_OWORD *)(v76 + 120);
        *(_OWORD *)&v710[16] = *(_OWORD *)(v76 + 104);
        v711 = v145;
        *(_OWORD *)v710 = *(_OWORD *)(v76 + 88);
        *(_QWORD *)&v711 = v688;
        v146 = sub_1C4E62AE0(v144, v143, 0, 0, (uint64_t)v710, (llvm::DSOLocalEquivalent **)3);
        if (!v146)
          goto LABEL_295;
        v147 = (uint64_t)v146;
        v148 = *((_DWORD *)v79 + 5);
        v149 = v148 & 0x7FFFFFF;
        if ((v148 & 0x7FFFFFF) == 2)
        {
          if (sub_1C57836D4((uint64_t)v79, (uint64_t)v688))
            v150 = 2;
          else
            v150 = 0;
          *((_BYTE *)v688 + 17) = *((_BYTE *)v688 + 17) & 0xFD | v150;
          v151 = *((_DWORD *)v79 + 5);
          if ((v151 & 0x40000000) != 0)
            v152 = (uint64_t *)*((_QWORD *)v79 - 1);
          else
            v152 = (uint64_t *)((char *)v79 - 32 * (v151 & 0x7FFFFFF));
          sub_1C577E2C8(v76, (uint64_t)v688, 0, *v152);
          sub_1C577E2C8(v76, (uint64_t)v688, 1u, v147);
          goto LABEL_296;
        }
        if ((v148 & 0x40000000) != 0)
        {
          v227 = (_QWORD ***)*((_QWORD *)v79 - 1);
        }
        else
        {
          v149 = v149;
          v227 = (_QWORD ***)((char *)v79 - 32 * v149);
        }
        v228 = 32 * (v149 - 1) - 32;
        v229 = DWORD2(v706);
        v230 = DWORD2(v706) + (v228 >> 5);
        if (v230 > HIDWORD(v706))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v230, 8);
          v229 = DWORD2(v706);
        }
        if (v149 != 2)
        {
          v231 = (uint64_t *)(v227 + 4);
          v232 = (_QWORD *)(v706 + 8 * v229);
          v233 = 32 * v149 - 64;
          do
          {
            v234 = *v231;
            v231 += 4;
            *v232++ = v234;
            v233 -= 32;
          }
          while (v233);
        }
        v235 = v229 + ((unint64_t)v228 >> 5);
        DWORD2(v706) = v235;
        if (v235 >= HIDWORD(v706))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v235 + 1, 8);
          LODWORD(v235) = DWORD2(v706);
        }
        *(_QWORD *)(v706 + 8 * v235) = v147;
        ++DWORD2(v706);
        v182 = DWORD2(v706);
        v236 = *((_DWORD *)v688 + 5) & 0x7FFFFFF;
        v184 = -(-32 * v236 + 64);
        v237 = DWORD2(v706) + (v184 >> 5);
        if (v237 > HIDWORD(v706))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v237, 8);
          v182 = DWORD2(v706);
        }
        if (&v688[-4 * v236 + 8] != v688)
        {
          v238 = (_QWORD *)(v706 + 8 * v182);
          v239 = 64 - 32 * v236;
          do
          {
            *v238++ = *(uint64_t *)((char *)v688 + v239);
            v239 += 32;
          }
          while (v239);
        }
      }
      else
      {
LABEL_189:
        v130 = (unsigned __int8 *)v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF) + 4];
        if (v130[16] > 0x14u
          || !llvm::Constant::isNullValue((llvm::Constant *)v130)
          || (v131 = *((_DWORD *)v79 + 5), v132 = v131 & 0x7FFFFFF, (v131 & 0x7FFFFFF) == 1))
        {
          if (DWORD2(v706))
            goto LABEL_193;
          goto LABEL_295;
        }
        if ((v131 & 0x40000000) != 0)
        {
          v172 = (_QWORD ***)*((_QWORD *)v79 - 1);
        }
        else
        {
          v132 = v132;
          v172 = (_QWORD ***)((char *)v79 - 32 * v132);
        }
        v175 = 32 * v132 - 32;
        v176 = DWORD2(v706);
        v177 = DWORD2(v706) + (v175 >> 5);
        if (v177 > HIDWORD(v706))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v177, 8);
          v176 = DWORD2(v706);
        }
        if (v132 != 1)
        {
          v178 = (uint64_t *)(v172 + 4);
          v179 = (_QWORD *)(v706 + 8 * v176);
          v180 = 32 * v132 - 32;
          do
          {
            v181 = *v178;
            v178 += 4;
            *v179++ = v181;
            v180 -= 32;
          }
          while (v180);
        }
        v182 = v176 + ((unint64_t)v175 >> 5);
        DWORD2(v706) = v182;
        v183 = *((_DWORD *)v688 + 5) & 0x7FFFFFF;
        v184 = -(-32 * v183 + 64);
        v185 = v182 + (v184 >> 5);
        if (v185 > HIDWORD(v706))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v185, 8);
          v182 = DWORD2(v706);
        }
        if (&v688[-4 * v183 + 8] != v688)
        {
          v186 = (_QWORD *)(v706 + 8 * v182);
          v187 = 64 - 32 * v183;
          do
          {
            *v186++ = *(uint64_t *)((char *)v688 + v187);
            v187 += 32;
          }
          while (v187);
        }
      }
      DWORD2(v706) = v182 + ((unint64_t)v184 >> 5);
      if (DWORD2(v706))
      {
LABEL_193:
        v133 = sub_1C57836D4((uint64_t)v79, (uint64_t)v688);
        v134 = 24;
        if (*((_BYTE *)v79 + 16) == 62)
          v134 = 64;
        v135 = *(llvm::GetElementPtrInst **)((char *)v79 + v134);
        v136 = *((_DWORD *)v79 + 5);
        if (v133)
        {
          if ((v136 & 0x40000000) != 0)
            v137 = (uint64_t **)*((_QWORD *)v79 - 1);
          else
            v137 = (uint64_t **)((char *)v79 - 32 * (v136 & 0x7FFFFFF));
          v153 = *v137;
          if ((*((_BYTE *)v688 + 23) & 0x10) == 0)
          {
            v190 = 0;
            v189 = &byte_1C871356D;
            goto LABEL_249;
          }
          v154 = **(_QWORD **)*v688;
          v155 = *(_QWORD *)(v154 + 152);
          v156 = *(unsigned int *)(v154 + 168);
          if ((_DWORD)v156)
          {
            LODWORD(v157) = (v156 - 1) & ((v688 >> 4) ^ (v688 >> 9));
            v158 = (uint64_t **)(v155 + 16 * v157);
            v159 = *v158;
            if (*v158 == v688)
            {
LABEL_248:
              v188 = v158[1];
              v191 = *v188;
              v189 = (char *)(v188 + 2);
              v190 = v191;
LABEL_249:
              LOWORD(v711) = 261;
              *(_QWORD *)v710 = v189;
              *(_QWORD *)&v710[8] = v190;
              v74 = (uint64_t)sub_1C578372C(v135, v153, (llvm::Value *)v706, DWORD2(v706), (uint64_t)v710, 0);
              goto LABEL_296;
            }
            v160 = 1;
            while (v159 != (uint64_t *)-4096)
            {
              v161 = v157 + v160++;
              v157 = v161 & (v156 - 1);
              v159 = *(uint64_t **)(v155 + 16 * v157);
              if (v159 == v688)
              {
                v158 = (uint64_t **)(v155 + 16 * v157);
                goto LABEL_248;
              }
            }
          }
          v158 = (uint64_t **)(v155 + 16 * v156);
          goto LABEL_248;
        }
        if ((v136 & 0x40000000) != 0)
          v140 = (uint64_t **)*((_QWORD *)v79 - 1);
        else
          v140 = (uint64_t **)((char *)v79 - 32 * (v136 & 0x7FFFFFF));
        v162 = *v140;
        v163 = (llvm::Value *)v706;
        if ((*((_BYTE *)v688 + 23) & 0x10) == 0)
        {
          v194 = 0;
          v193 = &byte_1C871356D;
          goto LABEL_252;
        }
        v164 = **(_QWORD **)*v688;
        v165 = *(_QWORD *)(v164 + 152);
        v166 = *(unsigned int *)(v164 + 168);
        if ((_DWORD)v166)
        {
          LODWORD(v167) = (v166 - 1) & ((v688 >> 4) ^ (v688 >> 9));
          v168 = (uint64_t **)(v165 + 16 * v167);
          v169 = *v168;
          if (*v168 == v688)
          {
LABEL_251:
            v192 = v168[1];
            v195 = *v192;
            v193 = (char *)(v192 + 2);
            v194 = v195;
LABEL_252:
            LOWORD(v711) = 261;
            *(_QWORD *)v710 = v193;
            *(_QWORD *)&v710[8] = v194;
            v196 = DWORD2(v706);
            v197 = (DWORD2(v706) + 1);
            v198 = DWORD2(v706) == -1;
            v199 = operator new(32 * v197 + 80);
            v74 = (uint64_t)&v199[4 * v197];
            *(_DWORD *)(v74 + 20) = *(_DWORD *)(v74 + 20) & 0x38000000 | v197 & 0x7FFFFFF;
            if (!v198)
            {
              do
              {
                *v199 = 0;
                v199[1] = 0;
                v199[2] = 0;
                v199[3] = v74;
                v199 += 4;
              }
              while (v199 != (_QWORD *)v74);
            }
            sub_1C4774650(v135, v162, v163, v196);
            *(_QWORD *)v74 = v201;
            *(_QWORD *)(v74 + 8) = 0;
            v202 = *(_DWORD *)(v74 + 20) & 0xC0000000 | v197 & 0x7FFFFFF;
            *(_DWORD *)(v74 + 16) = 62;
            *(_DWORD *)(v74 + 20) = v202;
            *(_OWORD *)(v74 + 24) = 0u;
            *(_OWORD *)(v74 + 40) = 0u;
            *(_DWORD *)(v74 + 56) = 0;
            *(_QWORD *)(v74 + 64) = v135;
            if ((_DWORD)v196)
            {
              v203 = (llvm::Type **)((char *)v163 + 8);
              v204 = 8 * v196 - 8;
              do
              {
                if (!v204)
                  break;
                v205 = *v203++;
                v135 = (llvm::GetElementPtrInst *)llvm::GetElementPtrInst::getTypeAtIndex(v135, v205, v200);
                v204 -= 8;
              }
              while (v135);
              v206 = *(_DWORD *)(v74 + 20) & 0x7FFFFFF;
            }
            else
            {
              v206 = 1;
            }
            *(_QWORD *)(v74 + 72) = v135;
            v207 = -v206;
            v208 = (uint64_t **)(v74 - 32 * v206);
            if (*v208)
            {
              v667 = v74 + 32 * v207;
              v669 = *(_QWORD **)(v667 + 16);
              v668 = (_QWORD *)(v667 + 16);
              *v669 = *(v668 - 1);
              v670 = *(v668 - 1);
              if (v670)
                *(_QWORD *)(v670 + 16) = *v668;
            }
            *v208 = v162;
            if (v162)
            {
              v211 = v162[1];
              v210 = (uint64_t ***)(v162 + 1);
              v209 = v211;
              v212 = v74 + 32 * v207;
              *(_QWORD *)(v212 + 8) = v211;
              if (v211)
                *(_QWORD *)(v209 + 16) = v212 + 8;
              *(_QWORD *)(v212 + 16) = v210;
              *v210 = v208;
            }
            sub_1C5382FD4((uint64_t)&v697, (uint64_t *)v163, (uint64_t *)v163 + v196, v74 - 32 * (*(_DWORD *)(v74 + 20) & 0x7FFFFFF) + 32);
            llvm::Value::setName((uint64_t ***)v74, (uint64_t)v710);
LABEL_296:
            if ((__int128 *)v706 != &v707)
              free((void *)v706);
            if (v74)
              goto LABEL_344;
LABEL_299:
            v240 = v688;
            if ((*((_DWORD *)v688 + 5) & 0x7FFFFFF) != 2 || v685 == 19)
              goto LABEL_342;
            v241 = *(_QWORD *)*(v688 - 8);
            v242 = *(_DWORD *)(v241 + 8);
            if ((v242 & 0xFE) == 0x12)
              v242 = *(_DWORD *)(**(_QWORD **)(v241 + 16) + 8);
            v243 = v242 >> 8;
            v244 = *(_QWORD *)*(v688 - 4);
            if ((*(_DWORD *)(v244 + 8) & 0xFE) == 0x12)
              v244 = **(_QWORD **)(v244 + 16);
            PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v244);
            v246 = *(llvm::DataLayout **)(v76 + 80);
            if (*(_DWORD *)(llvm::DataLayout::getPointerAlignElem(v246, v243) + 12) != PrimitiveSizeInBits)
              goto LABEL_342;
            v247 = sub_1C4E3D148((uint64_t)v246, v684);
            *(_QWORD *)v710 = 0;
            v697 = 0;
            v248 = (llvm **)&v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF)];
            v249 = v248[4];
            if (v247 == 1)
            {
              v697 = (unint64_t)v248[4];
              v700 = 0;
              v250 = *v248;
LABEL_333:
              v259 = v697;
              *(_QWORD *)&v706 = &v700;
              *((_QWORD *)&v706 + 1) = v250;
              v260 = *(unsigned __int8 *)(v697 + 16);
              if (v260 == 5)
              {
                if (*(_WORD *)(v697 + 18) != 15
                  || !sub_1C4E714F4((_QWORD **)&v706, *(_QWORD *)(v697 - 32 * (*(_DWORD *)(v697 + 20) & 0x7FFFFFF)))|| !sub_1C4E75A04((_QWORD *)&v706 + 1, *(_QWORD *)(v259 - 32 * (*(_DWORD *)(v259 + 20) & 0x7FFFFFF) + 32)))
                {
                  goto LABEL_342;
                }
              }
              else if (v260 != 43
                     || !sub_1C4E714F4((_QWORD **)&v706, *(_QWORD *)(v697 - 64))
                     || (sub_1C4E75A04((_QWORD *)&v706 + 1, *(_QWORD *)(v259 - 32)) & 1) == 0)
              {
                goto LABEL_342;
              }
              UnderlyingObject = llvm::getUnderlyingObject(v250, (const llvm::Value *)6);
              if (UnderlyingObject == llvm::getUnderlyingObject(v700, (const llvm::Value *)6))
              {
                v320 = v700;
                LOWORD(v708) = 257;
                v321 = *(_DWORD *)(*(_QWORD *)v700 + 8);
                if ((v321 & 0xFE) == 0x12)
                  v321 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v700 + 16) + 8);
                v322 = *((_DWORD *)v683 + 2);
                if ((v322 & 0xFE) == 0x12)
                  v322 = *(_DWORD *)(**((_QWORD **)v683 + 2) + 8);
                v323 = v322 ^ v321;
                v324 = (char *)operator new(0x60uLL);
                *((_QWORD *)v324 + 4) = v683;
                v74 = (uint64_t)(v324 + 32);
                *((_QWORD *)v324 + 1) = 0;
                v325 = v324 + 8;
                *(_QWORD *)v324 = 0;
                *((_QWORD *)v324 + 3) = v324 + 32;
                *((_QWORD *)v324 + 5) = 0;
                v326 = (_QWORD *)((char *)v320 + 8);
                if (v323 >= 0x100)
                  v327 = 78;
                else
                  v327 = 77;
                *((_QWORD *)v324 + 6) = v327 & 0xFFFF0000FFFFFFFFLL | 0x100000000;
                *(_OWORD *)(v324 + 56) = 0u;
                *(_OWORD *)(v324 + 72) = 0u;
                *((_DWORD *)v324 + 22) = 0;
                *(_QWORD *)v324 = v320;
                v328 = *((_QWORD *)v320 + 1);
                goto LABEL_783;
              }
LABEL_342:
              if ((*((_DWORD *)v683 + 2) & 0xFE) == 0x12)
                goto LABEL_343;
              v680 = v76;
              v263 = llvm::Value::stripPointerCasts(v79);
              if (v263 == v79)
                goto LABEL_482;
              v264 = (uint64_t *)v263;
              v265 = *(_QWORD *)v263;
              if (!*(_QWORD *)(*(_QWORD *)v263 + 24))
                goto LABEL_482;
              v266 = **(_QWORD **)(v265 + 16);
              v267 = *((_DWORD *)v688 + 5) & 0x7FFFFFF;
              v268 = &v688[-4 * v267];
              v270 = (char *)(v268 + 4);
              v269 = (_QWORD **)v268[4];
              if (v269)
                v271 = *((_BYTE *)v269 + 16) == 16;
              else
                v271 = 0;
              if (!v271)
              {
LABEL_357:
                if ((_DWORD)v267 != 2 || v685 == 19)
                  goto LABEL_482;
                if (*(_BYTE *)(v266 + 8) != 17
                  || ((v274 = sub_1C4E3D148(*(_QWORD *)(v76 + 80), **(_QWORD **)(v266 + 16)),
                       v275 = v266,
                       v277 = v276,
                       v274 == sub_1C4E3D148(*(_QWORD *)(v76 + 80), v684))
                    ? (v279 = v277 == v278)
                    : (v279 = 0),
                      v266 = v275,
                      !v279))
                {
                  v280 = v266;
                  v281 = *(unsigned __int8 *)(v684 + 8);
                  if (v281 > 0x11)
                    goto LABEL_435;
                  if (((1 << v281) & 0xAC7F) != 0)
                  {
LABEL_366:
                    v282 = *(unsigned __int8 *)(v266 + 8);
                    if (v282 <= 0x11)
                    {
                      if (((1 << v282) & 0xAC7F) != 0)
                        goto LABEL_368;
                      if (((1 << v282) & 0x30000) != 0)
                        goto LABEL_896;
                    }
                    if ((v282 & 0xFE) == 0x12 || v282 == 21)
                    {
LABEL_896:
                      if (llvm::Type::isSizedDerivedType(v266, 0))
                      {
LABEL_368:
                        v283 = sub_1C4E3D148(*(_QWORD *)(v76 + 80), v684);
                        v284 = sub_1C4E3D148(*(_QWORD *)(v76 + 80), v280);
                        if (v283)
                        {
                          v285 = v284 / v283;
                          if (!(v284 % v283))
                          {
                            v286 = (llvm::Type **)v240[-4 * (*((_DWORD *)v240 + 5) & 0x7FFFFFF) + 4];
                            v288 = llvm::Type::getPrimitiveSizeInBits(*v286);
                            if ((_DWORD)v287 == 1)
                            v710[0] = 0;
                            v692 = v288;
                            if (v288 > 0x40)
                            {
                              llvm::APInt::initSlowCase((llvm::APInt *)&v691, v285, 0);
                            }
                            else
                            {
                              v289 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v288;
                              if (!v288)
                                v289 = 0;
                              v691 = v289 & v285;
                            }
                            v290 = sub_1C5781D30(v76, (llvm::Constant *)v286, (void **)&v691, v710);
                            if (v692 >= 0x41 && v691)
                              MEMORY[0x1CAA32F9C](v691, 0x1000C8000313F17);
                            if (v290)
                            {
                              v291 = (v710[0] != 0) & (*((unsigned __int8 *)v240 + 17) >> 1);
                              v292 = *(uint64_t **)(v76 + 24);
                              if ((*((_BYTE *)v240 + 23) & 0x10) == 0)
                              {
                                v576 = 0;
                                v577 = &byte_1C871356D;
                                v296 = v683;
                                if (v291)
                                  goto LABEL_720;
                                goto LABEL_775;
                              }
                              v293 = **(_QWORD **)*v240;
                              v294 = *(_QWORD *)(v293 + 152);
                              v295 = *(unsigned int *)(v293 + 168);
                              v296 = v683;
                              if ((_DWORD)v295)
                              {
                                LODWORD(v297) = (v295 - 1) & ((v240 >> 4) ^ (v240 >> 9));
                                v298 = (uint64_t **)(v294 + 16 * v297);
                                v299 = *v298;
                                if (*v298 == v240)
                                  goto LABEL_719;
                                v300 = 1;
                                while (v299 != (uint64_t *)-4096)
                                {
                                  v301 = v297 + v300++;
                                  v297 = v301 & (v295 - 1);
                                  v299 = *(uint64_t **)(v294 + 16 * v297);
                                  if (v299 == v240)
                                  {
                                    v298 = (uint64_t **)(v294 + 16 * v297);
                                    goto LABEL_719;
                                  }
                                }
                              }
                              v298 = (uint64_t **)(v294 + 16 * v295);
LABEL_719:
                              v575 = v298[1];
                              v578 = *v575;
                              v577 = (char *)(v575 + 2);
                              v576 = v578;
                              if (v291)
                              {
LABEL_720:
                                LOWORD(v708) = 261;
                                *(_QWORD *)&v706 = v577;
                                *((_QWORD *)&v706 + 1) = v576;
                                v372 = (uint64_t)sub_1C5098FF4(v292, (llvm::GetElementPtrInst *)v280, v264, (uint64_t)v290, (uint64_t)&v706);
                                goto LABEL_776;
                              }
LABEL_775:
                              LOWORD(v708) = 261;
                              *(_QWORD *)&v706 = v577;
                              *((_QWORD *)&v706 + 1) = v576;
                              v372 = (uint64_t)sub_1C4867B70(v292, (llvm::GetElementPtrInst *)v280, v264, (uint64_t)v290, (uint64_t)&v706);
                              goto LABEL_776;
                            }
                          }
                        }
                      }
                    }
LABEL_441:
                    v346 = *(unsigned __int8 *)(v684 + 8);
                    if (v346 > 0x11)
                      goto LABEL_472;
                    if (((1 << v346) & 0xAC7F) != 0)
                    {
LABEL_443:
                      v347 = *(unsigned __int8 *)(v280 + 8);
                      if (v347 > 0x11)
                        goto LABEL_478;
                      if (((1 << v347) & 0xAC7F) != 0)
                      {
LABEL_445:
                        if (v347 == 17)
                        {
                          v348 = sub_1C4E3D148(*(_QWORD *)(v76 + 80), v684);
                          v349 = sub_1C4E3D148(*(_QWORD *)(v680 + 80), **(_QWORD **)(v280 + 16));
                          if (v348)
                          {
                            v350 = v349 / v348;
                            if (!(v349 % v348))
                            {
                              v351 = (llvm::Type **)v240[-4 * (*((_DWORD *)v240 + 5) & 0x7FFFFFF) + 4];
                              v353 = llvm::Type::getPrimitiveSizeInBits(*v351);
                              if ((_DWORD)v352 == 1)
                              LOBYTE(v697) = 0;
                              v690 = v353;
                              if (v353 > 0x40)
                              {
                                llvm::APInt::initSlowCase((llvm::APInt *)&v689, v350, 0);
                              }
                              else
                              {
                                v354 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v353;
                                if (!v353)
                                  v354 = 0;
                                v689 = v354 & v350;
                              }
                              v296 = v683;
                              v355 = sub_1C5781D30(v680, (llvm::Constant *)v351, (void **)&v689, &v697);
                              if (v690 >= 0x41 && v689)
                                MEMORY[0x1CAA32F9C](v689, 0x1000C8000313F17);
                              if (v355)
                              {
                                llvm::DataLayout::getIndexType(*(llvm::DataLayout **)(v680 + 80), v683);
                                *(_QWORD *)v710 = llvm::Constant::getNullValue(v356, v357);
                                *(_QWORD *)&v710[8] = v355;
                                v358 = ((_BYTE)v697 != 0) & (*((unsigned __int8 *)v240 + 17) >> 1);
                                v311 = *(uint64_t **)(v680 + 24);
                                if ((*((_BYTE *)v240 + 23) & 0x10) == 0)
                                {
                                  v582 = 0;
                                  v583 = &byte_1C871356D;
                                  if (v358)
                                    goto LABEL_738;
LABEL_824:
                                  LOWORD(v708) = 261;
                                  *(_QWORD *)&v706 = v583;
                                  *((_QWORD *)&v706 + 1) = v582;
                                  v371 = (llvm::GetElementPtrInst *)v280;
                                  goto LABEL_477;
                                }
                                v359 = **(_QWORD **)*v240;
                                v360 = *(_QWORD *)(v359 + 152);
                                v361 = *(unsigned int *)(v359 + 168);
                                if ((_DWORD)v361)
                                {
                                  LODWORD(v362) = (v361 - 1) & ((v240 >> 4) ^ (v240 >> 9));
                                  v363 = (uint64_t **)(v360 + 16 * v362);
                                  v364 = *v363;
                                  if (*v363 == v240)
                                    goto LABEL_737;
                                  v365 = 1;
                                  while (v364 != (uint64_t *)-4096)
                                  {
                                    v366 = v362 + v365++;
                                    v362 = v366 & (v361 - 1);
                                    v364 = *(uint64_t **)(v360 + 16 * v362);
                                    if (v364 == v240)
                                    {
                                      v363 = (uint64_t **)(v360 + 16 * v362);
                                      goto LABEL_737;
                                    }
                                  }
                                }
                                v363 = (uint64_t **)(v360 + 16 * v361);
LABEL_737:
                                v581 = v363[1];
                                v584 = *v581;
                                v583 = (char *)(v581 + 2);
                                v582 = v584;
                                if (v358)
                                {
LABEL_738:
                                  LOWORD(v708) = 261;
                                  *(_QWORD *)&v706 = v583;
                                  *((_QWORD *)&v706 + 1) = v582;
                                  v579 = (llvm::GetElementPtrInst *)v280;
                                  goto LABEL_725;
                                }
                                goto LABEL_824;
                              }
                            }
                          }
                        }
LABEL_482:
                        v374 = *((unsigned __int8 *)v79 + 16);
                        v375 = v79;
                        if (v374 == 78)
                        {
                          v376 = (llvm::Value *)*((_QWORD *)v79 - 4);
                          if (*((_BYTE *)v376 + 16) != 77)
                            v376 = 0;
                          if (v376)
                            v375 = v376;
                          else
                            v375 = v79;
                          v374 = *((unsigned __int8 *)v375 + 16);
                        }
                        v377 = v680;
                        if (v374 != 77)
                          goto LABEL_529;
                        v378 = *((_QWORD *)v375 - 4);
                        v379 = *(_QWORD *)v378;
                        if (!*(_QWORD *)(*(_QWORD *)v378 + 24))
                          goto LABEL_529;
                        v380 = **(_QWORD **)(v379 + 16);
                        v381 = (uint64_t)v688;
                        if ((*((_DWORD *)v688 + 5) & 0x7FFFFFF) == 3)
                        {
                          v382 = v688[8];
                          v383 = *(unsigned __int8 *)(v382 + 8);
                          if (v383 == 17
                            && *(_BYTE *)(v380 + 8) == 18
                            && **(_QWORD **)(v382 + 16) == *(_QWORD *)(v380 + 24)
                            && *(_QWORD *)(v382 + 32) == *(_DWORD *)(v380 + 32))
                          {
                            v384 = *(_QWORD *)(v680 + 80);
                            sub_1C4768AD0(v384, v688[8]);
                            v386 = (unint64_t)(v385 + 7) >> 3;
                            v686 = v387 == 1;
                            llvm::DataLayout::getAlignment(v384, v382);
                            v389 = ((1 << v388) + v386 - 1) & -(1 << v388);
                            sub_1C4768AD0(v384, v380);
                            v391 = v390 == 1;
                            v393 = (unint64_t)(v392 + 7) >> 3;
                            llvm::DataLayout::getAlignment(v384, v380);
                            v23 = v389 == (((1 << v394) + v393 - 1) & -(1 << v394));
                            v381 = (uint64_t)v688;
                            if (v23 && ((v686 ^ v391 ^ 1) & 1) != 0)
                            {
LABEL_507:
                              v406 = *(_DWORD *)(v381 + 20) & 0x7FFFFFF;
                              *(_QWORD *)&v706 = &v707;
                              *((_QWORD *)&v706 + 1) = 0x800000000;
                              v407 = -(-32 * v406 + 32);
                              if (v407 >= 0x101)
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, (uint64_t)v407 >> 5, 8);
                                v408 = DWORD2(v706);
                                v410 = (llvm::Value *)v706;
                                v409 = DWORD2(v706);
                              }
                              else
                              {
                                v408 = 0;
                                v409 = 0;
                                v410 = (llvm::Value *)&v707;
                              }
                              if (v381 - 32 * v406 + 32 != v381)
                              {
                                v411 = (_QWORD *)((char *)v410 + 8 * v408);
                                v412 = 32 - 32 * v406;
                                do
                                {
                                  *v411++ = *(_QWORD *)(v381 + v412);
                                  v412 += 32;
                                }
                                while (v412);
                                v410 = (llvm::Value *)v706;
                              }
                              v413 = v409 + (v407 >> 5);
                              DWORD2(v706) = v409 + (v407 >> 5);
                              v414 = *(uint64_t **)(v680 + 24);
                              if ((*(_BYTE *)(v381 + 17) & 2) != 0)
                              {
                                LOWORD(v711) = 257;
                                v415 = (llvm::Value *)sub_1C53901A0(v414, (llvm::GetElementPtrInst *)v380, (uint64_t *)v378, v410, v413, (uint64_t)v710);
                              }
                              else
                              {
                                LOWORD(v711) = 257;
                                v415 = (llvm::Value *)sub_1C509D7B0(v414, (llvm::GetElementPtrInst *)v380, (uint64_t *)v378, v410, v413, (uint64_t)v710);
                              }
                              v524 = v415;
                              llvm::Value::takeName(v415, (llvm::Value *)v381);
                              v525 = *(_DWORD *)(*(_QWORD *)v524 + 8);
                              v377 = v680;
                              if ((v525 & 0xFE) == 0x12)
                                v525 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v524 + 16) + 8);
                              v526 = **(_QWORD **)(v381 - 32 * (*(_DWORD *)(v381 + 20) & 0x7FFFFFF));
                              v527 = *(_DWORD *)(v526 + 8);
                              if ((v527 & 0xFE) == 0x12)
                                v527 = *(_DWORD *)(**(_QWORD **)(v526 + 16) + 8);
                              if ((v527 ^ v525) >= 0x100)
                              {
                                v528 = operator new(0x60uLL);
                                v74 = (uint64_t)(v528 + 8);
                                v528[13] = v528[13] & 0x38000000 | 1;
                                *(_QWORD *)v528 = 0;
                                *((_QWORD *)v528 + 1) = 0;
                                *((_QWORD *)v528 + 2) = 0;
                                *((_QWORD *)v528 + 3) = v528 + 8;
                                v529 = *(_QWORD *)v381;
                                LOWORD(v711) = 257;
                                llvm::AddrSpaceCastInst::AddrSpaceCastInst((uint64_t)(v528 + 8), (uint64_t)v524, v529, (uint64_t)v710, 0);
                              }
                              else
                              {
                                v74 = (uint64_t)sub_1C577F888(v680, (llvm::ValueAsMetadata *)v381, v524);
                              }
                              if ((__int128 *)v706 != &v707)
                                free((void *)v706);
                              goto LABEL_528;
                            }
                            v383 = *(unsigned __int8 *)(v382 + 8);
                          }
                          if (v383 == 18
                            && *(_BYTE *)(v380 + 8) == 17
                            && **(_QWORD **)(v380 + 16) == *(_QWORD *)(v382 + 24)
                            && *(_QWORD *)(v380 + 32) == *(_DWORD *)(v382 + 32))
                          {
                            v395 = *(_QWORD *)(v680 + 80);
                            sub_1C4768AD0(v395, v380);
                            v397 = (unint64_t)(v396 + 7) >> 3;
                            v687 = v398 == 1;
                            llvm::DataLayout::getAlignment(v395, v380);
                            v400 = ((1 << v399) + v397 - 1) & -(1 << v399);
                            sub_1C4768AD0(v395, v382);
                            v402 = v401 == 1;
                            v404 = (unint64_t)(v403 + 7) >> 3;
                            llvm::DataLayout::getAlignment(v395, v382);
                            v23 = v400 == (((1 << v405) + v404 - 1) & -(1 << v405));
                            v381 = (uint64_t)v688;
                            if (v23 && ((v687 ^ v402 ^ 1) & 1) != 0)
                              goto LABEL_507;
                          }
                        }
                        IndexTypeSizeInBits = llvm::DataLayout::getIndexTypeSizeInBits(*(_QWORD *)(v680 + 80), *(_QWORD *)v381);
                        if (IndexTypeSizeInBits > 0x40)
                          llvm::APInt::initSlowCase((llvm::APInt *)&v700, 0, 0);
                        else
                          v700 = 0;
                        if (*(_BYTE *)(v378 + 16) == 77
                          || !llvm::GEPOperator::accumulateConstantOffset(v381, *(llvm::DataLayout **)(v680 + 80), (uint64_t)&v700, 0, v416)|| (byte_1ED82E438 ? (v417 = 59) : (v417 = 63), sub_1C4EBF808(v378, v417, *(uint64_t **)(v680 + 64), &v706), BYTE8(v707)))
                        {
LABEL_523:
                          v74 = 0;
LABEL_524:
                          if (IndexTypeSizeInBits >= 0x41 && v700)
                            MEMORY[0x1CAA32F9C](v700, 0x1000C8000313F17);
                          v377 = v680;
LABEL_528:
                          if (v74)
                            goto LABEL_344;
LABEL_529:
                          if ((*((_BYTE *)v688 + 17) & 2) != 0)
                            goto LABEL_547;
                          v419 = *(llvm::DataLayout **)(v377 + 80);
                          v420 = *(_DWORD *)(*(_QWORD *)v79 + 8);
                          if ((v420 & 0xFE) == 0x12)
                            v420 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v79 + 16) + 8);
                          v422 = *(_DWORD *)(llvm::DataLayout::getPointerAlignElem(*(llvm::DataLayout **)(v377 + 80), v420 >> 8)+ 12);
                          *(_DWORD *)&v710[8] = v422;
                          if (v422 > 0x40)
                          {
                            llvm::APInt::initSlowCase((llvm::APInt *)v710, 0, 0);
                            v419 = *(llvm::DataLayout **)(v377 + 80);
                          }
                          else
                          {
                            *(_QWORD *)v710 = 0;
                          }
                          v423 = llvm::Value::stripAndAccumulateConstantOffsets((uint64_t)v79, v419, (const void **)v710, 0, 0, 0, v421);
                          v425 = v688;
                          if (!v423
                            || (v426 = v423, *(_BYTE *)(v423 + 16) != 59)
                            || !llvm::GEPOperator::accumulateConstantOffset((uint64_t)v688, *(llvm::DataLayout **)(v377 + 80), (uint64_t)v710, 0, v424)|| (*(_DWORD *)&v710[8] >= 0x41u? (v427 = (_QWORD *)(*(_QWORD *)v710 + 8* ((*(_DWORD *)&v710[8] - 1) >> 6))): (v427 = v710), ((*v427 >> (v710[8] - 1)) & 1) != 0))
                          {
                            v74 = (uint64_t)v682;
                            goto LABEL_542;
                          }
                          v452 = sub_1C4E3D148(*(_QWORD *)(v377 + 80), *(_QWORD *)(v426 + 64));
                          v698 = v422;
                          if (v422 > 0x40)
                          {
                            llvm::APInt::initSlowCase((llvm::APInt *)&v697, v452, 0);
                          }
                          else
                          {
                            if (v422)
                              v453 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v422;
                            else
                              v453 = 0;
                            v697 = v453 & v452;
                          }
                          if (*(_DWORD *)&v710[8] > 0x40u)
                          {
                            v650 = (((unint64_t)*(unsigned int *)&v710[8] + 63) >> 3) & 0x3FFFFFF8;
                            v425 = v688;
                            v377 = v680;
                            while (v650)
                            {
                              v651 = *(_QWORD *)(*(_QWORD *)v710 - 8 + v650);
                              v652 = *(_QWORD *)(v697 - 8 + v650);
                              v650 -= 8;
                              if (v651 != v652)
                              {
                                v425 = v688;
                                v377 = v680;
                                if (v651 <= v652)
                                  break;
                                goto LABEL_851;
                              }
                            }
                          }
                          else if (*(_QWORD *)v710 > v697)
                          {
LABEL_851:
                            v516 = 0;
                            v74 = (uint64_t)v682;
                            goto LABEL_852;
                          }
                          v454 = (llvm::GetElementPtrInst *)v425[8];
                          if ((*((_BYTE *)v425 + 23) & 0x10) == 0)
                          {
                            v514 = 0;
                            v513 = &byte_1C871356D;
                            goto LABEL_661;
                          }
                          v455 = **(_QWORD **)*v425;
                          v456 = *(_QWORD *)(v455 + 152);
                          v457 = *(unsigned int *)(v455 + 168);
                          if ((_DWORD)v457)
                          {
                            LODWORD(v458) = (v457 - 1) & ((v425 >> 4) ^ (v425 >> 9));
                            v459 = (uint64_t **)(v456 + 16 * v458);
                            v460 = *v459;
                            if (*v459 == v425)
                            {
LABEL_660:
                              v512 = v459[1];
                              v515 = *v512;
                              v513 = (char *)(v512 + 2);
                              v514 = v515;
LABEL_661:
                              LOWORD(v708) = 261;
                              *(_QWORD *)&v706 = v513;
                              *((_QWORD *)&v706 + 1) = v514;
                              v74 = (uint64_t)sub_1C578372C(v454, (uint64_t *)v79, (llvm::Value *)v703, v704, (uint64_t)&v706, 0);
                              v516 = 1;
LABEL_852:
                              if (v698 >= 0x41 && v697)
                                MEMORY[0x1CAA32F9C](v697, 0x1000C8000313F17);
                              if ((v516 & 1) != 0)
                              {
                                v428 = 0;
                                goto LABEL_543;
                              }
LABEL_542:
                              v428 = 1;
LABEL_543:
                              if (*(_DWORD *)&v710[8] >= 0x41u && *(_QWORD *)v710)
                                MEMORY[0x1CAA32F9C](*(_QWORD *)v710, 0x1000C8000313F17);
                              if (!v428)
                                goto LABEL_344;
LABEL_547:
                              v429 = *(uint64_t **)(v377 + 24);
                              v430 = *((_DWORD *)v688 + 5) & 0x7FFFFFF;
                              v431 = &v688[-4 * v430];
                              if ((_DWORD)v430 != 1)
                              {
                                v432 = 1;
                                while (*(_BYTE *)(v431[4 * v432] + 16) == 16)
                                {
                                  if ((_DWORD)v430 == ++v432)
                                    goto LABEL_551;
                                }
                                goto LABEL_343;
                              }
LABEL_551:
                              v74 = 0;
                              v433 = *v431;
                              if (!*v431 || *(_BYTE *)(v433 + 16) != 85)
                                goto LABEL_344;
                              v434 = *(_DWORD *)(v433 + 20);
                              if ((v434 & 0x40000000) != 0)
                                v435 = *(uint64_t **)(v433 - 8);
                              else
                                v435 = (uint64_t *)(v433 - 32 * (v434 & 0x7FFFFFF));
                              v436 = *v435;
                              if (!*v435)
                                goto LABEL_343;
                              v437 = v435[4];
                              v438 = !v437 || *(unsigned __int8 *)(v437 + 16) > 0x14u;
                              if (v438)
                                goto LABEL_343;
                              v439 = v435[8];
                              if (!v439 || *(unsigned __int8 *)(v439 + 16) > 0x14u)
                                goto LABEL_343;
                              v441 = v431 + 4;
                              *(_QWORD *)&v706 = &v707;
                              *((_QWORD *)&v706 + 1) = 0x400000000;
                              v442 = -(-32 * v430 + 32);
                              if (v442 >= 0x81)
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, (uint64_t)v442 >> 5, 8);
                                v443 = DWORD2(v706);
                                v445 = (llvm::Value *)v706;
                                v444 = DWORD2(v706);
                              }
                              else
                              {
                                v443 = 0;
                                v444 = 0;
                                v445 = (llvm::Value *)&v707;
                              }
                              if (v441 != v688)
                              {
                                v446 = (_QWORD *)((char *)v445 + 8 * v443);
                                v447 = 32 - 32 * v430;
                                do
                                {
                                  *v446++ = *(uint64_t *)((char *)v688 + v447);
                                  v447 += 32;
                                }
                                while (v447);
                                v445 = (llvm::Value *)v706;
                              }
                              v448 = v444 + (v442 >> 5);
                              DWORD2(v706) = v444 + (v442 >> 5);
                              v449 = (llvm::GetElementPtrInst *)v688[8];
                              if ((*((_BYTE *)v688 + 17) & 2) != 0)
                              {
                                LOWORD(v711) = 257;
                                v450 = (_QWORD *)sub_1C53901A0(v429, v449, (uint64_t *)v437, v445, v448, (uint64_t)v710);
                                LOWORD(v711) = 257;
                                v451 = sub_1C53901A0(v429, v449, (uint64_t *)v439, (llvm::Value *)v706, DWORD2(v706), (uint64_t)v710);
                              }
                              else
                              {
                                v699 = 257;
                                v450 = (_QWORD *)sub_1C509D7B0(v429, v449, (uint64_t *)v437, v445, v448, (uint64_t)&v697);
                                v699 = 257;
                                v451 = sub_1C509D7B0(v429, v449, (uint64_t *)v439, (llvm::Value *)v706, DWORD2(v706), (uint64_t)&v697);
                              }
                              v464 = v451;
                              LOWORD(v711) = 257;
                              v465 = (char *)operator new(0xA0uLL);
                              v466 = 0;
                              v74 = (uint64_t)(v465 + 96);
                              *((_DWORD *)v465 + 29) = *((_DWORD *)v465 + 29) & 0x38000000 | 3;
                              do
                              {
                                v467 = &v465[v466];
                                *(_QWORD *)v467 = 0;
                                *((_QWORD *)v467 + 1) = 0;
                                *((_QWORD *)v467 + 2) = 0;
                                *((_QWORD *)v467 + 3) = v74;
                                v466 += 32;
                              }
                              while (v466 != 96);
                              *((_QWORD *)v465 + 12) = *v450;
                              *((_QWORD *)v465 + 13) = 0;
                              v468 = *((_DWORD *)v465 + 29) & 0xC0000000 | 3;
                              *((_DWORD *)v465 + 28) = 85;
                              *((_DWORD *)v465 + 29) = v468;
                              *(_OWORD *)(v465 + 120) = 0u;
                              *(_OWORD *)(v465 + 136) = 0u;
                              *((_DWORD *)v465 + 38) = 0;
                              if (*(_QWORD *)v465)
                              {
                                **((_QWORD **)v465 + 2) = *((_QWORD *)v465 + 1);
                                v671 = *((_QWORD *)v465 + 1);
                                if (v671)
                                  *(_QWORD *)(v671 + 16) = *((_QWORD *)v465 + 2);
                              }
                              *(_QWORD *)v465 = v436;
                              v471 = *(_QWORD *)(v436 + 8);
                              v470 = (_QWORD *)(v436 + 8);
                              v469 = v471;
                              *((_QWORD *)v465 + 1) = v471;
                              if (v471)
                                *(_QWORD *)(v469 + 16) = v465 + 8;
                              *((_QWORD *)v465 + 2) = v470;
                              *v470 = v465;
                              if (*((_QWORD *)v465 + 4))
                              {
                                **((_QWORD **)v465 + 6) = *((_QWORD *)v465 + 5);
                                v672 = *((_QWORD *)v465 + 5);
                                if (v672)
                                  *(_QWORD *)(v672 + 16) = *((_QWORD *)v465 + 6);
                              }
                              *((_QWORD *)v465 + 4) = v450;
                              v474 = v450[1];
                              v473 = v450 + 1;
                              v472 = v474;
                              *((_QWORD *)v465 + 5) = v474;
                              if (v474)
                                *(_QWORD *)(v472 + 16) = v465 + 40;
                              *((_QWORD *)v465 + 6) = v473;
                              *v473 = v465 + 32;
                              v475 = (uint64_t *)(v465 + 64);
                              if (*((_QWORD *)v465 + 8))
                              {
                                **((_QWORD **)v465 + 10) = *((_QWORD *)v465 + 9);
                                v673 = *((_QWORD *)v465 + 9);
                                if (v673)
                                  *(_QWORD *)(v673 + 16) = *((_QWORD *)v465 + 10);
                              }
                              *v475 = v464;
                              if (v464)
                              {
                                v478 = *(_QWORD *)(v464 + 8);
                                v477 = (uint64_t **)(v464 + 8);
                                v476 = v478;
                                *((_QWORD *)v465 + 9) = v478;
                                if (v478)
                                  *(_QWORD *)(v476 + 16) = v465 + 72;
                                *((_QWORD *)v465 + 10) = v477;
                                *v477 = v475;
                              }
                              llvm::Value::setName((uint64_t ***)v465 + 12, (uint64_t)v710);
                              llvm::Instruction::copyMetadata(v74, v433, 0, 0);
                              v479 = (void *)v706;
                              if ((__int128 *)v706 == &v707)
                                goto LABEL_344;
LABEL_846:
                              free(v479);
                              goto LABEL_344;
                            }
                            v461 = 1;
                            while (v460 != (uint64_t *)-4096)
                            {
                              v462 = v458 + v461++;
                              v458 = v462 & (v457 - 1);
                              v460 = *(uint64_t **)(v456 + 16 * v458);
                              if (v460 == v425)
                              {
                                v459 = (uint64_t **)(v456 + 16 * v458);
                                goto LABEL_660;
                              }
                            }
                          }
                          v459 = (uint64_t **)(v456 + 16 * v457);
                          goto LABEL_660;
                        }
                        if (IndexTypeSizeInBits > 0x40)
                        {
                          v480 = 0;
                          v481 = ((unint64_t)IndexTypeSizeInBits + 63) >> 6;
                          do
                          {
                            v438 = v481-- < 1;
                            if (v438)
                              break;
                            v482 = *((_QWORD *)v700 + v481);
                            v480 += __clz(v482);
                          }
                          while (!v482);
                          v483 = IndexTypeSizeInBits | 0xFFFFFFC0;
                          if ((IndexTypeSizeInBits & 0x3F) == 0)
                            v483 = 0;
                          if (v480 + v483 != IndexTypeSizeInBits)
                          {
                            *(_QWORD *)&v706 = &v707;
                            *((_QWORD *)&v706 + 1) = 0x800000000;
                            v463 = *(_QWORD *)v700;
                            goto LABEL_623;
                          }
                        }
                        else if (v700)
                        {
                          *(_QWORD *)&v706 = &v707;
                          *((_QWORD *)&v706 + 1) = 0x800000000;
                          v463 = (uint64_t)((_QWORD)v700 << -(char)IndexTypeSizeInBits) >> -(char)IndexTypeSizeInBits;
LABEL_623:
                          v74 = *(_QWORD *)(v680 + 80);
                          v494 = **(unsigned __int8 ***)(v379 + 16);
                          v702 = (llvm::Type *)v494;
                          v495 = v494[8];
                          if (v495 > 0x11)
                            goto LABEL_726;
                          if (((1 << v495) & 0xAC7F) != 0)
                            goto LABEL_625;
                          if (((1 << v495) & 0x30000) == 0)
                          {
LABEL_726:
                            if ((v495 & 0xFE) != 0x12 && v495 != 21)
                              goto LABEL_730;
                          }
                          if (!llvm::Type::isSizedDerivedType((uint64_t)v494, 0))
                            goto LABEL_730;
LABEL_625:
                          v496 = llvm::DataLayout::getIndexTypeSizeInBits(v74, v379);
                          v698 = v496;
                          if (v496 > 0x40)
                          {
                            llvm::APInt::initSlowCase((llvm::APInt *)&v697, v463, 0);
                          }
                          else
                          {
                            v497 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v496;
                            if (!v496)
                              v497 = 0;
                            v697 = v497 & v463;
                          }
                          llvm::DataLayout::getGEPIndicesForOffset((llvm::DataLayout *)v74, &v702, (llvm::APInt *)&v697, v710);
                          if (v698 > 0x40)
                          {
                            v500 = 0;
                            v501 = ((unint64_t)v698 + 63) >> 6;
                            do
                            {
                              v438 = v501-- < 1;
                              if (v438)
                                break;
                              v502 = *(_QWORD *)(v697 + 8 * v501);
                              v500 += __clz(v502);
                            }
                            while (!v502);
                            v503 = v698 | 0xFFFFFFC0;
                            if ((v698 & 0x3F) == 0)
                              v503 = 0;
                            if (v500 + v503 != v698)
                              goto LABEL_631;
                          }
                          else if (v697)
                          {
LABEL_631:
                            v499 = 0;
                            goto LABEL_644;
                          }
                          if (*(_DWORD *)&v710[8])
                          {
                            v74 = *(_QWORD *)v710;
                            v504 = 16 * *(unsigned int *)&v710[8];
                            do
                            {
                              v505 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v379, (llvm::LLVMContext *)v74, v498);
                              v506 = DWORD2(v706);
                              if (DWORD2(v706) >= (unint64_t)HIDWORD(v706))
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, DWORD2(v706) + 1, 8);
                                v506 = DWORD2(v706);
                              }
                              *(_QWORD *)(v706 + 8 * v506) = v505;
                              ++DWORD2(v706);
                              v74 += 16;
                              v504 -= 16;
                            }
                            while (v504);
                          }
                          v499 = v702;
LABEL_644:
                          v507 = *(char **)v710;
                          if (*(_DWORD *)&v710[8])
                          {
                            v508 = 16 * *(unsigned int *)&v710[8];
                            do
                            {
                              if (*(_DWORD *)&v507[v508 - 8] >= 0x41u)
                              {
                                v509 = *(_QWORD *)&v507[v508 - 16];
                                if (v509)
                                  MEMORY[0x1CAA32F9C](v509, 0x1000C8000313F17);
                              }
                              v508 -= 16;
                            }
                            while (v508);
                            v507 = *(char **)v710;
                          }
                          if (v507 != &v710[16])
                            free(v507);
                          if (v698 >= 0x41 && v697)
                            MEMORY[0x1CAA32F9C](v697, 0x1000C8000313F17);
                          if (v499)
                          {
                            v510 = *(uint64_t **)(v680 + 24);
                            if ((*(_BYTE *)(v381 + 17) & 2) != 0)
                            {
                              LOWORD(v711) = 257;
                              v511 = (llvm::Value *)sub_1C53901A0(v510, (llvm::GetElementPtrInst *)v380, (uint64_t *)v378, (llvm::Value *)v706, DWORD2(v706), (uint64_t)v710);
                            }
                            else
                            {
                              LOWORD(v711) = 257;
                              v511 = (llvm::Value *)sub_1C509D7B0(v510, (llvm::GetElementPtrInst *)v380, (uint64_t *)v378, (llvm::Value *)v706, DWORD2(v706), (uint64_t)v710);
                            }
                            v517 = (uint64_t)v511;
                            if (*(_QWORD *)v511 == *(_QWORD *)v381)
                            {
                              v74 = (uint64_t)sub_1C577F888(v680, (llvm::ValueAsMetadata *)v381, v511);
                            }
                            else
                            {
                              llvm::Value::takeName(v511, (llvm::Value *)v381);
                              v518 = *(_DWORD *)(*(_QWORD *)v517 + 8);
                              if ((v518 & 0xFE) == 0x12)
                                v518 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v517 + 16) + 8);
                              v519 = **(_QWORD **)(v381 - 32 * (*(_DWORD *)(v381 + 20) & 0x7FFFFFF));
                              v520 = *(_DWORD *)(v519 + 8);
                              if ((v520 & 0xFE) == 0x12)
                                v520 = *(_DWORD *)(**(_QWORD **)(v519 + 16) + 8);
                              v521 = v520 ^ v518;
                              v522 = operator new(0x60uLL);
                              v74 = (uint64_t)(v522 + 8);
                              v522[13] = v522[13] & 0x38000000 | 1;
                              *(_QWORD *)v522 = 0;
                              *((_QWORD *)v522 + 1) = 0;
                              *((_QWORD *)v522 + 2) = 0;
                              *((_QWORD *)v522 + 3) = v522 + 8;
                              v523 = *(_QWORD *)v381;
                              LOWORD(v711) = 257;
                              if (v521 >= 0x100)
                                llvm::AddrSpaceCastInst::AddrSpaceCastInst((uint64_t)(v522 + 8), v517, v523, (uint64_t)v710, 0);
                              else
                                llvm::BitCastInst::BitCastInst((uint64_t)(v522 + 8), v517, v523, (uint64_t)v710, 0);
                            }
                            v558 = 0;
LABEL_731:
                            if ((__int128 *)v706 != &v707)
                              free((void *)v706);
                            if (!v558)
                              goto LABEL_524;
                            goto LABEL_523;
                          }
LABEL_730:
                          v558 = 1;
                          goto LABEL_731;
                        }
                        if (*(_BYTE *)(v378 + 16) == 59 && (v484 = sub_1C57E5AA4(v680, v375, v418)) != 0)
                        {
                          v485 = v484;
                          v74 = v381;
                          if (v484 != (llvm::UndefValue **)v375)
                          {
                            llvm::Value::takeName((llvm::Value *)v484, v375);
                            v486 = *((_QWORD *)v375 + 5);
                            v485[5] = (llvm::UndefValue *)v486;
                            *(_WORD *)(v486 + 18) &= ~0x8000u;
                            if ((*((_BYTE *)v485 + 23) & 0x10) != 0)
                            {
                              v646 = *(_QWORD *)(v486 + 56);
                              if (v646)
                              {
                                v647 = *(llvm::ValueSymbolTable **)(v646 + 104);
                                if (v647)
                                  llvm::ValueSymbolTable::reinsertValue(v647, (llvm::Value *)v485);
                              }
                            }
                            v487 = (llvm::UndefValue *)*((_QWORD *)v375 + 3);
                            v485[4] = (llvm::Value *)((char *)v375 + 24);
                            v485[3] = v487;
                            *((_QWORD *)v487 + 1) = v485 + 3;
                            *((_QWORD *)v375 + 3) = v485 + 3;
                            sub_1C577F888(v680, v375, (llvm::Value *)v485);
                            v74 = v381;
                          }
                        }
                        else
                        {
                          v488 = *(_DWORD *)(v379 + 8);
                          if ((v488 & 0xFE) == 0x12)
                            v488 = *(_DWORD *)(**(_QWORD **)(v379 + 16) + 8);
                          v489 = **(_QWORD **)(v381 - 32 * (*(_DWORD *)(v381 + 20) & 0x7FFFFFF));
                          v490 = *(_DWORD *)(v489 + 8);
                          if ((v490 & 0xFE) == 0x12)
                            v490 = *(_DWORD *)(**(_QWORD **)(v489 + 16) + 8);
                          v491 = v490 ^ v488;
                          v492 = operator new(0x60uLL);
                          v74 = (uint64_t)(v492 + 8);
                          v492[13] = v492[13] & 0x38000000 | 1;
                          *(_QWORD *)v492 = 0;
                          *((_QWORD *)v492 + 1) = 0;
                          *((_QWORD *)v492 + 2) = 0;
                          *((_QWORD *)v492 + 3) = v492 + 8;
                          v493 = *(_QWORD *)v381;
                          LOWORD(v708) = 257;
                          if (v491 >= 0x100)
                            llvm::AddrSpaceCastInst::AddrSpaceCastInst((uint64_t)(v492 + 8), v378, v493, (uint64_t)&v706, 0);
                          else
                            llvm::BitCastInst::BitCastInst((uint64_t)(v492 + 8), v378, v493, (uint64_t)&v706, 0);
                        }
                        goto LABEL_524;
                      }
                      if (((1 << v347) & 0x30000) == 0)
                      {
LABEL_478:
                        if ((v347 & 0xFE) != 0x12 && v347 != 21)
                          goto LABEL_482;
                      }
                      if (!llvm::Type::isSizedDerivedType(v280, 0))
                        goto LABEL_482;
                      v347 = *(unsigned __int8 *)(v280 + 8);
                      goto LABEL_445;
                    }
                    if (((1 << v346) & 0x30000) == 0)
                    {
LABEL_472:
                      if ((v346 & 0xFE) != 0x12 && v346 != 21)
                        goto LABEL_482;
                    }
                    if (!llvm::Type::isSizedDerivedType(v684, 0))
                      goto LABEL_482;
                    goto LABEL_443;
                  }
                  if (((1 << v281) & 0x30000) == 0)
                  {
LABEL_435:
                    if ((v281 & 0xFE) != 0x12 && v281 != 21)
                      goto LABEL_441;
                  }
                  if (!llvm::Type::isSizedDerivedType(v684, 0))
                    goto LABEL_441;
                  goto LABEL_366;
                }
                v296 = v683;
                llvm::DataLayout::getIndexType(*(llvm::DataLayout **)(v76 + 80), v683);
                v308 = llvm::Constant::getNullValue(v306, v307);
                v309 = *((_DWORD *)v240 + 5);
                v310 = (_QWORD **)v240[-4 * (v309 & 0x7FFFFFF) + 4];
                *(_QWORD *)v710 = v308;
                *(_QWORD *)&v710[8] = v310;
                v311 = *(uint64_t **)(v76 + 24);
                if ((v309 & 0x10000000) == 0)
                {
                  v368 = 0;
                  v369 = &byte_1C871356D;
                  if ((*((_BYTE *)v240 + 17) & 2) == 0)
                    goto LABEL_476;
                  goto LABEL_724;
                }
                v312 = **(_QWORD **)*v240;
                v313 = *(_QWORD *)(v312 + 152);
                v314 = *(unsigned int *)(v312 + 168);
                if ((_DWORD)v314)
                {
                  LODWORD(v315) = (v314 - 1) & ((v240 >> 4) ^ (v240 >> 9));
                  v316 = (uint64_t **)(v313 + 16 * v315);
                  v317 = *v316;
                  if (*v316 == v240)
                    goto LABEL_475;
                  v318 = 1;
                  while (v317 != (uint64_t *)-4096)
                  {
                    v319 = v315 + v318++;
                    v315 = v319 & (v314 - 1);
                    v317 = *(uint64_t **)(v313 + 16 * v315);
                    if (v317 == v240)
                    {
                      v316 = (uint64_t **)(v313 + 16 * v315);
                      goto LABEL_475;
                    }
                  }
                }
                v316 = (uint64_t **)(v313 + 16 * v314);
LABEL_475:
                v367 = v316[1];
                v370 = *v367;
                v369 = (char *)(v367 + 2);
                v368 = v370;
                if ((*((_BYTE *)v240 + 17) & 2) == 0)
                {
LABEL_476:
                  LOWORD(v708) = 261;
                  *(_QWORD *)&v706 = v369;
                  *((_QWORD *)&v706 + 1) = v368;
                  v371 = (llvm::GetElementPtrInst *)v266;
LABEL_477:
                  v372 = sub_1C509D7B0(v311, v371, v264, (llvm::Value *)v710, 2, (uint64_t)&v706);
LABEL_776:
                  v608 = v372;
                  LOWORD(v708) = 257;
                  v609 = *(_DWORD *)(*(_QWORD *)v372 + 8);
                  if ((v609 & 0xFE) == 0x12)
                    v609 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v372 + 16) + 8);
                  v610 = *((_DWORD *)v296 + 2);
                  if ((v610 & 0xFE) == 0x12)
                    v610 = *(_DWORD *)(**((_QWORD **)v296 + 2) + 8);
                  v611 = v610 ^ v609;
                  v324 = (char *)operator new(0x60uLL);
                  *((_QWORD *)v324 + 4) = v296;
                  v74 = (uint64_t)(v324 + 32);
                  *((_QWORD *)v324 + 1) = 0;
                  v325 = v324 + 8;
                  *(_QWORD *)v324 = 0;
                  *((_QWORD *)v324 + 3) = v324 + 32;
                  *((_QWORD *)v324 + 5) = 0;
                  v326 = (_QWORD *)(v608 + 8);
                  if (v611 >= 0x100)
                    v612 = 78;
                  else
                    v612 = 77;
                  *((_QWORD *)v324 + 6) = v612 & 0xFFFF0000FFFFFFFFLL | 0x100000000;
                  *(_OWORD *)(v324 + 56) = 0u;
                  *(_OWORD *)(v324 + 72) = 0u;
                  *((_DWORD *)v324 + 22) = 0;
                  *(_QWORD *)v324 = v608;
                  v328 = *(_QWORD *)(v608 + 8);
LABEL_783:
                  *((_QWORD *)v324 + 1) = v328;
                  if (v328)
                    *(_QWORD *)(v328 + 16) = v325;
                  *((_QWORD *)v324 + 2) = v326;
                  *v326 = v324;
                  llvm::Value::setName((uint64_t ***)v74, (uint64_t)&v706);
                  goto LABEL_344;
                }
LABEL_724:
                LOWORD(v708) = 261;
                *(_QWORD *)&v706 = v369;
                *((_QWORD *)&v706 + 1) = v368;
                v579 = (llvm::GetElementPtrInst *)v266;
LABEL_725:
                v372 = sub_1C53901A0(v311, v579, v264, (llvm::Value *)v710, 2, (uint64_t)&v706);
                goto LABEL_776;
              }
              v272 = (llvm::APInt *)(v269 + 3);
              v273 = *((_DWORD *)v269 + 8);
              if (v273 > 0x40)
              {
                v23 = llvm::APInt::countLeadingZerosSlowCase(v272) == v273;
                v240 = v688;
                if (!v23)
                  goto LABEL_357;
              }
              else
              {
                v240 = v688;
                if (*(_QWORD *)v272)
                  goto LABEL_357;
              }
              if (!v684 || *(_BYTE *)(v684 + 8) != 17)
                goto LABEL_482;
              v302 = *(_QWORD *)(v684 + 24);
              if (v302 != v266)
              {
                v303 = *(_BYTE *)(v266 + 8) != 17 || v266 == 0;
                if (v303 || v302 != *(_QWORD *)(v266 + 24))
                  goto LABEL_482;
                v304 = *(_QWORD *)*v268;
                v305 = *(_DWORD *)(v304 + 8);
                if ((v305 & 0xFE) == 0x12)
                  v305 = *(_DWORD *)(**(_QWORD **)(v304 + 16) + 8);
                if ((v305 ^ *(_DWORD *)(v265 + 8)) <= 0xFF)
                {
                  v240[8] = v266;
                  v74 = sub_1C577E2C8(v76, (uint64_t)v240, 0, (uint64_t)v264);
                  goto LABEL_344;
                }
                *(_QWORD *)&v706 = &v707;
                *((_QWORD *)&v706 + 1) = 0x800000000;
                v559 = (char *)v240 - v270;
                if ((unint64_t)((char *)v240 - v270) >= 0x101)
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v559 >> 5, 8);
                  v560 = DWORD2(v706);
                  v562 = (llvm::Value *)v706;
                  v561 = DWORD2(v706);
                }
                else
                {
                  v560 = 0;
                  v561 = 0;
                  v562 = (llvm::Value *)&v707;
                }
                if (v270 != (char *)v688)
                {
                  v563 = (_QWORD *)((char *)v562 + 8 * v560);
                  v564 = 32 - 32 * v267;
                  do
                  {
                    *v563++ = *(uint64_t *)((char *)v688 + v564);
                    v564 += 32;
                  }
                  while (v564);
                  v562 = (llvm::Value *)v706;
                }
                v565 = v561 + ((unint64_t)v559 >> 5);
                DWORD2(v706) = v561 + ((unint64_t)v559 >> 5);
                v566 = *(uint64_t **)(v76 + 24);
                if ((*((_BYTE *)v688 + 23) & 0x10) == 0)
                {
                  v604 = 0;
                  v605 = &byte_1C871356D;
                  if ((*((_BYTE *)v688 + 17) & 2) == 0)
                    goto LABEL_772;
                  goto LABEL_842;
                }
                v567 = **(_QWORD **)*v688;
                v568 = *(_QWORD *)(v567 + 152);
                v569 = *(unsigned int *)(v567 + 168);
                if ((_DWORD)v569)
                {
                  LODWORD(v570) = (v569 - 1) & ((v688 >> 4) ^ (v688 >> 9));
                  v571 = (uint64_t **)(v568 + 16 * v570);
                  v572 = *v571;
                  if (*v571 == v688)
                    goto LABEL_771;
                  v573 = 1;
                  while (v572 != (uint64_t *)-4096)
                  {
                    v574 = v570 + v573++;
                    v570 = v574 & (v569 - 1);
                    v572 = *(uint64_t **)(v568 + 16 * v570);
                    if (v572 == v688)
                    {
                      v571 = (uint64_t **)(v568 + 16 * v570);
                      goto LABEL_771;
                    }
                  }
                }
                v571 = (uint64_t **)(v568 + 16 * v569);
LABEL_771:
                v603 = v571[1];
                v606 = *v603;
                v605 = (char *)(v603 + 2);
                v604 = v606;
                if ((*((_BYTE *)v688 + 17) & 2) == 0)
                {
LABEL_772:
                  LOWORD(v711) = 261;
                  *(_QWORD *)v710 = v605;
                  *(_QWORD *)&v710[8] = v604;
                  v607 = sub_1C509D7B0(v566, (llvm::GetElementPtrInst *)v266, v264, v562, v565, (uint64_t)v710);
LABEL_843:
                  v648 = v607;
                  v649 = operator new(0x60uLL);
                  v649[13] = v649[13] & 0x38000000 | 1;
                  v74 = (uint64_t)(v649 + 8);
                  *(_QWORD *)v649 = 0;
                  *((_QWORD *)v649 + 1) = 0;
                  *((_QWORD *)v649 + 2) = 0;
                  *((_QWORD *)v649 + 3) = v649 + 8;
                  LOWORD(v711) = 257;
                  v555 = (unint64_t *)v710;
                  v556 = (uint64_t)(v649 + 8);
                  v557 = v648;
                  goto LABEL_844;
                }
LABEL_842:
                LOWORD(v711) = 261;
                *(_QWORD *)v710 = v605;
                *(_QWORD *)&v710[8] = v604;
                v607 = sub_1C53901A0(v566, (llvm::GetElementPtrInst *)v266, v264, v562, v565, (uint64_t)v710);
                goto LABEL_843;
              }
              v329 = (char *)(v268 + 8);
              *(_QWORD *)&v706 = &v707;
              *((_QWORD *)&v706 + 1) = 0x800000000;
              v330 = (char *)v240 - v329;
              if ((unint64_t)((char *)v240 - v329) >= 0x101)
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v706, (uint64_t)&v707, v330 >> 5, 8);
                v331 = DWORD2(v706);
                v333 = (llvm::Value *)v706;
                v332 = DWORD2(v706);
              }
              else
              {
                v331 = 0;
                v332 = 0;
                v333 = (llvm::Value *)&v707;
              }
              if (v329 != (char *)v688)
              {
                v334 = (_QWORD *)((char *)v333 + 8 * v331);
                v335 = 64 - 32 * v267;
                do
                {
                  *v334++ = *(uint64_t *)((char *)v688 + v335);
                  v335 += 32;
                }
                while (v335);
                v333 = (llvm::Value *)v706;
              }
              v336 = v332 + ((unint64_t)v330 >> 5);
              DWORD2(v706) = v332 + ((unint64_t)v330 >> 5);
              if ((*((_BYTE *)v688 + 23) & 0x10) == 0)
              {
                v532 = 0;
                v531 = &byte_1C871356D;
                goto LABEL_684;
              }
              v337 = **(_QWORD **)*v688;
              v338 = *(_QWORD *)(v337 + 152);
              v339 = *(unsigned int *)(v337 + 168);
              if ((_DWORD)v339)
              {
                LODWORD(v340) = (v339 - 1) & ((v688 >> 4) ^ (v688 >> 9));
                v341 = (uint64_t **)(v338 + 16 * v340);
                v342 = *v341;
                if (*v341 == v688)
                {
LABEL_683:
                  v530 = v341[1];
                  v533 = *v530;
                  v531 = (char *)(v530 + 2);
                  v532 = v533;
LABEL_684:
                  LOWORD(v711) = 261;
                  *(_QWORD *)v710 = v531;
                  *(_QWORD *)&v710[8] = v532;
                  v534 = (v336 + 1);
                  v535 = operator new(32 * v534 + 80);
                  v536 = &v535[4 * v534];
                  *((_DWORD *)v536 + 5) = *((_DWORD *)v536 + 5) & 0x38000000 | v534 & 0x7FFFFFF;
                  if ((_DWORD)v336 != -1)
                  {
                    do
                    {
                      *v535 = 0;
                      v535[1] = 0;
                      v535[2] = 0;
                      v535[3] = v536;
                      v535 += 4;
                    }
                    while (v535 != v536);
                  }
                  sub_1C4774650((llvm::GetElementPtrInst *)v266, v264, v333, v336);
                  *v536 = v538;
                  v536[1] = 0;
                  v539 = *((_DWORD *)v536 + 5) & 0xC0000000 | v534 & 0x7FFFFFF;
                  *((_DWORD *)v536 + 4) = 62;
                  *((_DWORD *)v536 + 5) = v539;
                  *(_OWORD *)(v536 + 3) = 0u;
                  *(_OWORD *)(v536 + 5) = 0u;
                  *((_DWORD *)v536 + 14) = 0;
                  v536[8] = v266;
                  if ((_DWORD)v336)
                  {
                    v540 = (llvm::Type **)((char *)v333 + 8);
                    v541 = 8 * v336 - 8;
                    do
                    {
                      if (!v541)
                        break;
                      v542 = *v540++;
                      v266 = llvm::GetElementPtrInst::getTypeAtIndex((llvm::GetElementPtrInst *)v266, v542, v537);
                      v541 -= 8;
                    }
                    while (v266);
                    v543 = *((_DWORD *)v536 + 5) & 0x7FFFFFF;
                  }
                  else
                  {
                    v543 = 1;
                  }
                  v536[9] = v266;
                  v544 = -v543;
                  v545 = (uint64_t **)&v536[-4 * v543];
                  if (*v545)
                  {
                    v674 = &v536[4 * v544];
                    v676 = (_QWORD *)v674[2];
                    v675 = v674 + 2;
                    *v676 = *(v675 - 1);
                    v677 = *(v675 - 1);
                    if (v677)
                      *(_QWORD *)(v677 + 16) = *v675;
                  }
                  *v545 = v264;
                  v548 = v264[1];
                  v547 = (uint64_t ***)(v264 + 1);
                  v546 = v548;
                  v549 = &v536[4 * v544];
                  v549[1] = v548;
                  if (v548)
                    *(_QWORD *)(v546 + 16) = v549 + 1;
                  v549[2] = v547;
                  *v547 = v545;
                  sub_1C5382FD4((uint64_t)&v697, (uint64_t *)v333, (uint64_t *)v333 + v336, (uint64_t)&v536[-4 * (*((_DWORD *)v536 + 5) & 0x7FFFFFF) + 4]);
                  llvm::Value::setName((uint64_t ***)v536, (uint64_t)v710);
                  *((_BYTE *)v536 + 17) = *((_BYTE *)v536 + 17) & 0xFD | *((_BYTE *)v688 + 17) & 2;
                  v550 = *(_QWORD *)v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF)];
                  v551 = *(_DWORD *)(v550 + 8);
                  if ((v551 & 0xFE) == 0x12)
                    v551 = *(_DWORD *)(**(_QWORD **)(v550 + 16) + 8);
                  if ((v551 ^ *(_DWORD *)(v265 + 8)) < 0x100)
                  {
                    v74 = (uint64_t)v536;
                    goto LABEL_845;
                  }
                  v552 = operator new(0x60uLL);
                  v74 = (uint64_t)(v552 + 8);
                  v552[13] = v552[13] & 0x38000000 | 1;
                  *(_QWORD *)v552 = 0;
                  *((_QWORD *)v552 + 1) = 0;
                  *((_QWORD *)v552 + 2) = 0;
                  *((_QWORD *)v552 + 3) = v552 + 8;
                  v553 = *(uint64_t **)(v680 + 24);
                  LOWORD(v711) = 257;
                  (*(void (**)(uint64_t, _QWORD *, _BYTE *, uint64_t, uint64_t))(*(_QWORD *)v553[10] + 16))(v553[10], v536, v710, v553[6], v553[7]);
                  v554 = *((unsigned int *)v553 + 2);
                  if (!(_DWORD)v554)
                  {
LABEL_699:
                    v699 = 257;
                    v555 = &v697;
                    v556 = v74;
                    v557 = (uint64_t)v536;
LABEL_844:
                    llvm::AddrSpaceCastInst::AddrSpaceCastInst(v556, v557, (uint64_t)v683, (uint64_t)v555, 0);
LABEL_845:
                    v479 = (void *)v706;
                    if ((__int128 *)v706 == &v707)
                      goto LABEL_344;
                    goto LABEL_846;
                  }
                  v626 = *v553;
                  v627 = *v553 + 16 * v554;
                  v628 = (unsigned __int8 **)(v536 + 6);
                  while (1)
                  {
                    v629 = *(_DWORD *)v626;
                    v630 = *(unsigned __int8 **)(v626 + 8);
                    if (v630)
                    {
                      if (!v629)
                      {
                        v697 = *(_QWORD *)(v626 + 8);
                        llvm::MetadataTracking::track((uint64_t)&v697, v630, 2);
                        v631 = *v628;
                        goto LABEL_819;
                      }
                    }
                    else
                    {
                      v631 = *v628;
                      if (!*v628 && (*((_BYTE *)v536 + 23) & 0x20) == 0)
                        goto LABEL_816;
                      if (!v629)
                      {
                        v697 = 0;
LABEL_819:
                        if (v631)
                          llvm::MetadataTracking::untrack((uint64_t)(v536 + 6), v631);
                        v632 = (unsigned __int8 *)v697;
                        *v628 = (unsigned __int8 *)v697;
                        if (v632)
                          llvm::MetadataTracking::retrack((uint64_t)&v697, v632, (uint64_t)(v536 + 6));
                        goto LABEL_816;
                      }
                    }
                    llvm::Value::setMetadata((llvm::Value *)v536, *(_DWORD *)v626, (llvm::MDNode *)v630);
LABEL_816:
                    v626 += 16;
                    if (v626 == v627)
                      goto LABEL_699;
                  }
                }
                v343 = 1;
                while (v342 != (uint64_t *)-4096)
                {
                  v344 = v340 + v343++;
                  v340 = v344 & (v339 - 1);
                  v342 = *(uint64_t **)(v338 + 16 * v340);
                  if (v342 == v688)
                  {
                    v341 = (uint64_t **)(v338 + 16 * v340);
                    goto LABEL_683;
                  }
                }
              }
              v341 = (uint64_t **)(v338 + 16 * v339);
              goto LABEL_683;
            }
            v251 = v247;
            *(_QWORD *)&v706 = &v697;
            *((_QWORD *)&v706 + 1) = v710;
            v252 = *((unsigned __int8 *)v249 + 16);
            if (v252 == 5)
            {
              if (*((_WORD *)v249 + 9) != 27
                || (v253 = (unint64_t *)((char *)v249 - 32 * (*((_DWORD *)v249 + 5) & 0x7FFFFFF)), !*v253)
                || (v697 = *v253, (sub_1C4E7B154((_QWORD **)&v706 + 1, v253[4]) & 1) == 0))
              {
LABEL_318:
                v254 = (_QWORD **)v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF) + 4];
                v255 = &v697;
                *(_QWORD *)&v706 = &v697;
                *((_QWORD *)&v706 + 1) = v710;
                v256 = *((unsigned __int8 *)v254 + 16);
                if (v256 == 48)
                {
                  v257 = 0;
                  if (*(v254 - 8))
                  {
                    v697 = (unint64_t)*(v254 - 8);
                    if ((sub_1C4E7B154((_QWORD **)&v706 + 1, (uint64_t)*(v254 - 4)) & 1) != 0)
                      v257 = 1;
                  }
                }
                else
                {
                  if (v256 == 5)
                    LOBYTE(v255) = *((_WORD *)v254 + 9) == 20
                                && (v258 = (unint64_t *)&v254[-4 * (*((_DWORD *)v254 + 5) & 0x7FFFFFF)], *v258)
                                && (v697 = *v258, (sub_1C4E7B154((_QWORD **)&v706 + 1, v258[4]) & 1) != 0);
                  v257 = (v256 == 5) & v255;
                }
                v700 = 0;
                if (!v257 || v251 != *(_QWORD *)v710)
                  goto LABEL_342;
                goto LABEL_332;
              }
            }
            else
            {
              if (v252 != 55)
                goto LABEL_318;
              if (!*((_QWORD *)v249 - 8))
                goto LABEL_318;
              v697 = *((_QWORD *)v249 - 8);
              if (!sub_1C4E7B154((_QWORD **)&v706 + 1, *((_QWORD *)v249 - 4)))
                goto LABEL_318;
            }
            v700 = 0;
            if (v251 != 1 << v710[0])
              goto LABEL_342;
LABEL_332:
            v250 = (llvm *)v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF)];
            goto LABEL_333;
          }
          v170 = 1;
          while (v169 != (uint64_t *)-4096)
          {
            v171 = v167 + v170++;
            v167 = v171 & (v166 - 1);
            v169 = *(uint64_t **)(v165 + 16 * v167);
            if (v169 == v688)
            {
              v168 = (uint64_t **)(v165 + 16 * v167);
              goto LABEL_251;
            }
          }
        }
        v168 = (uint64_t **)(v165 + 16 * v166);
        goto LABEL_251;
      }
LABEL_295:
      v74 = 0;
      goto LABEL_296;
    }
    v215 = (uint64_t)v174[4];
    v216 = (_QWORD **)v688[5];
    v217 = *v213;
    v218 = v214 - 1;
    v219 = ((v216 >> 4) ^ (v216 >> 9)) & (v214 - 1);
    v220 = *(_QWORD ***)(v217 + 16 * v219);
    if (v216 != v220)
    {
      v221 = 1;
      while (v220 != (_QWORD **)-4096)
      {
        v222 = v219 + v221++;
        v219 = v222 & v218;
        v220 = *(_QWORD ***)(v217 + 16 * v219);
        if (v216 == v220)
          goto LABEL_272;
      }
      goto LABEL_171;
    }
LABEL_272:
    v223 = v217 + 16 * v219;
    v224 = *(_QWORD *)(v223 + 8);
    if (!v224)
      goto LABEL_171;
    if (!llvm::Loop::isLoopInvariant(*(_QWORD *)(v223 + 8), *(v688 - 4)))
    {
      v119 = *((_DWORD *)v79 + 5);
      goto LABEL_171;
    }
    isLoopInvariant = llvm::Loop::isLoopInvariant(v224, v215);
    v119 = *((_DWORD *)v79 + 5);
    if (isLoopInvariant)
      goto LABEL_171;
    if ((v119 & 0x40000000) != 0)
      v226 = (uint64_t **)*((_QWORD *)v79 - 1);
    else
      v226 = (uint64_t **)((char *)v79 - 32 * (v119 & 0x7FFFFFF));
    if ((*(_DWORD *)(*v688 + 8) & 0xFE) != 0x12 || (v613 = *v226, (*(_DWORD *)(**v226 + 8) & 0xFE) == 0x12))
    {
      if ((v119 & 0x40000000) != 0)
        v614 = (_QWORD ***)*((_QWORD *)v79 - 1);
      else
        v614 = (_QWORD ***)((char *)v79 - 32 * (v119 & 0x7FFFFFF));
      v615 = (uint64_t *)(v614 + 4);
      if (v614[4])
      {
        *v614[6] = v614[5];
        v616 = v614[5];
        if (v616)
          v616[2] = v614[6];
      }
      *v615 = v173;
      if (v173)
      {
        v619 = *(_QWORD ***)(v173 + 8);
        v618 = (uint64_t **)(v173 + 8);
        v617 = v619;
        v614[5] = v619;
        if (v619)
          v617[2] = v614 + 5;
        v614[6] = v618;
        *v618 = v615;
      }
      v620 = &v688[-4 * (*((_DWORD *)v688 + 5) & 0x7FFFFFF)];
      v621 = v620 + 4;
      if (v620[4])
      {
        *(_QWORD *)v620[6] = v620[5];
        v622 = (_QWORD **)v620[5];
        if (v622)
          v622[2] = (_QWORD *)v620[6];
      }
      *v621 = v215;
      if (v215)
      {
        v625 = *(_QWORD ***)(v215 + 8);
        v624 = (uint64_t **)(v215 + 8);
        v623 = v625;
        v620[5] = (uint64_t)v625;
        if (v625)
          v623[2] = v620 + 5;
        v620[6] = (uint64_t)v624;
        *v624 = v621;
      }
      v74 = (uint64_t)v688;
      goto LABEL_344;
    }
    v633 = *(_QWORD *)(v76 + 24);
    *(_QWORD *)(v633 + 48) = *((_QWORD *)v79 + 5);
    *(_QWORD *)(v633 + 56) = (char *)v79 + 24;
    v634 = (unsigned __int8 *)*((_QWORD *)v79 + 6);
    *(_QWORD *)&v706 = v634;
    if (v634)
    {
      llvm::MetadataTracking::track((uint64_t)&v706, v634, 2);
      v635 = v706;
    }
    else
    {
      v635 = 0;
    }
    sub_1C4774EF4(v633, 0, v635);
    if ((_QWORD)v706)
      llvm::MetadataTracking::untrack((uint64_t)&v706, (unsigned __int8 *)v706);
    v636 = *(uint64_t **)(v76 + 24);
    v637 = (llvm::GetElementPtrInst *)v688[8];
    if ((*((_BYTE *)v79 + 23) & 0x10) == 0)
    {
      v655 = 0;
      v654 = &byte_1C871356D;
LABEL_862:
      LOWORD(v708) = 261;
      *(_QWORD *)&v706 = v654;
      *((_QWORD *)&v706 + 1) = v655;
      v657 = sub_1C4867B70(v636, v637, v613, v173, (uint64_t)&v706);
      v658 = (uint64_t *)v657;
      if (v657 && *((_BYTE *)v657 + 16) == 62)
        *((_BYTE *)v657 + 17) = *((_BYTE *)v657 + 17) & 0xFD | *((_BYTE *)v79 + 17) & 2;
      v659 = (llvm::GetElementPtrInst *)v688[8];
      *(_QWORD *)v710 = v215;
      LOWORD(v708) = 257;
      v660 = (char *)operator new(0x90uLL);
      *((_DWORD *)v660 + 21) = *((_DWORD *)v660 + 21) & 0x38000000 | 2;
      v74 = (uint64_t)(v660 + 64);
      *(_QWORD *)v660 = 0;
      *((_QWORD *)v660 + 1) = 0;
      *((_QWORD *)v660 + 2) = 0;
      *((_QWORD *)v660 + 3) = v660 + 64;
      *((_QWORD *)v660 + 4) = 0;
      *((_QWORD *)v660 + 5) = 0;
      *((_QWORD *)v660 + 6) = 0;
      *((_QWORD *)v660 + 7) = v660 + 64;
      sub_1C4774650(v659, v658, (llvm::Value *)v710, 1);
      *((_QWORD *)v660 + 8) = v661;
      *((_QWORD *)v660 + 9) = 0;
      v662 = *((_DWORD *)v660 + 21) & 0xC0000000 | 2;
      *((_DWORD *)v660 + 20) = 62;
      *((_DWORD *)v660 + 21) = v662;
      *(_OWORD *)(v660 + 88) = 0u;
      *(_OWORD *)(v660 + 104) = 0u;
      *((_DWORD *)v660 + 30) = 0;
      v663 = *(_QWORD *)v660;
      *((_QWORD *)v660 + 16) = v659;
      *((_QWORD *)v660 + 17) = v659;
      if (v663)
      {
        **((_QWORD **)v660 + 2) = *((_QWORD *)v660 + 1);
        v678 = *((_QWORD *)v660 + 1);
        if (v678)
          *(_QWORD *)(v678 + 16) = *((_QWORD *)v660 + 2);
      }
      *(_QWORD *)v660 = v658;
      v666 = v658[1];
      v665 = v658 + 1;
      v664 = v666;
      *((_QWORD *)v660 + 1) = v666;
      if (v666)
        *(_QWORD *)(v664 + 16) = v660 + 8;
      *((_QWORD *)v660 + 2) = v665;
      *v665 = v660;
      sub_1C5382FD4((uint64_t)&v697, (uint64_t *)v710, (uint64_t *)&v710[8], v74 - 32 * (*((_DWORD *)v660 + 21) & 0x7FFFFFF) + 32);
      llvm::Value::setName((uint64_t ***)v74, (uint64_t)&v706);
      v660[81] = v660[81] & 0xFD | *((_BYTE *)v688 + 17) & 2;
      goto LABEL_344;
    }
    v638 = ***(_QWORD ***)v79;
    v639 = *(_QWORD *)(v638 + 152);
    v640 = *(unsigned int *)(v638 + 168);
    if ((_DWORD)v640)
    {
      LODWORD(v641) = (v640 - 1) & ((v79 >> 4) ^ (v79 >> 9));
      v642 = (llvm::Value **)(v639 + 16 * v641);
      v643 = *v642;
      if (*v642 == v79)
      {
LABEL_861:
        v653 = v642[1];
        v656 = *(_QWORD *)v653;
        v654 = (char *)v653 + 16;
        v655 = v656;
        goto LABEL_862;
      }
      v644 = 1;
      while (v643 != (llvm::Value *)-4096)
      {
        v645 = v641 + v644++;
        v641 = v645 & (v640 - 1);
        v643 = *(llvm::Value **)(v639 + 16 * v641);
        if (v643 == v79)
        {
          v642 = (llvm::Value **)(v639 + 16 * v641);
          goto LABEL_861;
        }
      }
    }
    v642 = (llvm::Value **)(v639 + 16 * v640);
    goto LABEL_861;
  }
  v104 = *(_QWORD *)(v97 + 8);
  if (v104 && !*(_QWORD *)(v104 + 8))
  {
    llvm::Instruction::clone((llvm::Instruction *)v81);
    v79 = v105;
    *(_QWORD *)v710 = *(_QWORD *)(*(_QWORD *)v679 + 24);
    *(_OWORD *)&v710[8] = *(_OWORD *)(*(_QWORD *)v710 + 48);
    llvm::IRBuilderBase::getCurrentDebugLocation(*(unsigned int **)v710, (unsigned __int8 **)&v710[24]);
    v106 = *(_QWORD *)(*(_QWORD *)v679 + 24);
    *(_QWORD *)(v106 + 48) = *(_QWORD *)(v97 + 40);
    *(_QWORD *)(v106 + 56) = v97 + 24;
    v107 = *(unsigned __int8 **)(v97 + 48);
    *(_QWORD *)&v706 = v107;
    if (v107)
    {
      llvm::MetadataTracking::track((uint64_t)&v706, v107, 2);
      v108 = v706;
    }
    else
    {
      v108 = 0;
    }
    sub_1C4774EF4(v106, 0, v108);
    if ((_QWORD)v706)
      llvm::MetadataTracking::untrack((uint64_t)&v706, (unsigned __int8 *)v706);
    v109 = *(_QWORD *)(*(_QWORD *)v679 + 24);
    v110 = *(_QWORD *)*(&v81[4 * v93] - 4 * (*((_DWORD *)v81 + 5) & 0x7FFFFFF));
    v111 = *(_DWORD *)(v97 + 20) & 0x7FFFFFF;
    LOWORD(v708) = 257;
    v112 = (_QWORD *)sub_1C4867E94(v109, v110, v111, (uint64_t)&v706);
    v113 = *(_QWORD *)v710;
    if (*(_QWORD *)&v710[8])
    {
      sub_1C4D8AE2C(*(uint64_t *)v710, *(uint64_t *)&v710[8], *(uint64_t *)&v710[16]);
      v113 = *(_QWORD *)v710;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)v710 + 48) = 0;
      *(_QWORD *)(v113 + 56) = 0;
    }
    *(_QWORD *)&v706 = *(_QWORD *)&v710[24];
    if (*(_QWORD *)&v710[24])
    {
      llvm::MetadataTracking::track((uint64_t)&v706, *(unsigned __int8 **)&v710[24], 2);
      v585 = v706;
    }
    else
    {
      v585 = 0;
    }
    sub_1C4774EF4(v113, 0, v585);
    if ((_QWORD)v706)
      llvm::MetadataTracking::untrack((uint64_t)&v706, (unsigned __int8 *)v706);
    if (*(_QWORD *)&v710[24])
      llvm::MetadataTracking::untrack((uint64_t)&v710[24], *(unsigned __int8 **)&v710[24]);
    v586 = *(_DWORD *)(v97 + 20);
    if ((v586 & 0x40000000) != 0)
    {
      v588 = *(uint64_t **)(v97 - 8);
      v587 = v586 & 0x7FFFFFF;
    }
    else
    {
      v587 = v586 & 0x7FFFFFF;
      v588 = (uint64_t *)(v97 - 32 * v587);
    }
    if (v587)
    {
      v589 = 32 * v587;
      v590 = v588;
      do
      {
        v591 = *v588;
        v592 = *(_DWORD *)(*v588 + 20);
        if ((v592 & 0x40000000) != 0)
          v593 = *(_QWORD *)(v591 - 8);
        else
          v593 = v591 - 32 * (v592 & 0x7FFFFFF);
        v594 = *(_DWORD *)(v97 + 20);
        if ((v594 & 0x40000000) != 0)
          v595 = *(_QWORD *)(v97 - 8);
        else
          v595 = v97 - 32 * (v594 & 0x7FFFFFF);
        sub_1C477667C((llvm::PHINode *)v112, *(_QWORD *)(v593 + 32 * v93), *(_QWORD *)(v595+ 32 * *(unsigned int *)(v97 + 60)+ 8 * (((unint64_t)v590 - v595) >> 5)));
        v588 += 4;
        v590 += 4;
        v589 -= 32;
      }
      while (v589);
    }
    v596 = (_QWORD ***)((char *)v79 - 32 * (*((_DWORD *)v79 + 5) & 0x7FFFFFF));
    v597 = &v596[4 * v93];
    if (*v597)
    {
      *v597[2] = v597[1];
      v598 = v597[1];
      if (v598)
        v598[2] = v597[2];
    }
    *v597 = (_QWORD **)v112;
    if (v112)
    {
      v601 = (_QWORD **)v112[1];
      v600 = v112 + 1;
      v599 = v601;
      v602 = &v596[4 * v93];
      v602[1] = v601;
      if (v601)
        v599[2] = v602 + 1;
      v602[2] = (_QWORD **)v600;
      *v600 = v597;
    }
    v86 = (uint64_t)v688;
    v76 = *(_QWORD *)v679;
    goto LABEL_114;
  }
LABEL_343:
  v74 = 0;
LABEL_344:
  v18 = (llvm::UndefValue **)v74;
LABEL_345:
  if (v703 != v705)
    free(v703);
  return v18;
}

uint64_t sub_1C57871C4(llvm::DataLayout **a1, uint64_t a2)
{
  char *v4;
  uint64_t *v5;
  llvm::Type *v6;
  const llvm::APInt *v7;
  llvm::DIBuilder *v8;
  int v9;
  unsigned int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  llvm::ValueHandleBase *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _QWORD *v23;
  int v24;
  llvm::ValueHandleBase *v25;
  int v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  llvm::APInt *v34;
  unsigned int v35;
  int v36;
  int32x2_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  llvm::Value *v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  int32x2_t *v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  llvm::DbgVariableIntrinsic *v60;
  int v61;
  uint64_t v62;
  unsigned int v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v67;
  llvm::ConstantInt *v68;
  unint64_t v69;
  unint64_t v70;
  llvm::Value *v71;
  llvm **v72;
  uint64_t v73;
  uint64_t ****v74;
  uint64_t v75;
  uint64_t ***v76;
  _QWORD *v77;
  uint64_t **v78;
  uint64_t **v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int32x2_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t *v86;
  uint64_t v87;
  int32x2_t *v88;
  unint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  int v95;
  int v96;
  uint64_t Declaration;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  llvm::StoreInst *v104;
  uint64_t v105;
  void *__s2;
  uint64_t v107;
  char v108;
  void *__s1;
  size_t __n;
  char v111;
  char v112;
  __int16 v113;
  char v114;
  void *v115;
  uint64_t v116;
  _BYTE v117[64];
  void *v118;
  uint64_t v119;
  _BYTE v120[1536];
  _QWORD *v121;
  uint64_t v122;
  _QWORD v123[6];

  v123[4] = *MEMORY[0x1E0C80C00];
  v4 = v120;
  v118 = v120;
  v119 = 0x4000000000;
  v115 = v117;
  v116 = 0x800000000;
  if (*(_BYTE *)(a2 + 16) == 59)
  {
    llvm::findDbgUsers((uint64_t)&v115, a2);
    v104 = (llvm::StoreInst *)operator new();
    llvm::DIBuilder::DIBuilder((uint64_t)v104, *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 40) + 56) + 40), 0, 0);
  }
  else
  {
    v104 = 0;
  }
  v5 = (uint64_t *)a1[8];
  v121 = v123;
  v122 = 0x400000000;
  llvm::getAllocationFamily(a2, v5, (uint64_t)&__s2);
  v9 = v122;
  if (v122 >= HIDWORD(v122))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v121, (uint64_t)v123, v122 + 1, 8);
    v9 = v122;
  }
  v121[v9] = a2;
  v10 = v122 + 1;
  while (1)
  {
    v11 = (_QWORD *)v121[--v10];
    LODWORD(v122) = v10;
    v12 = v11[1];
    if (v12)
      break;
LABEL_103:
    if (!v10)
    {
      v36 = 1;
      goto LABEL_106;
    }
  }
  while (1)
  {
    v13 = *(_QWORD *)(v12 + 24);
    v105 = v13;
    v14 = *(unsigned __int8 *)(v13 + 16);
    if (v14 <= 0x4C)
    {
      if (v14 == 61)
      {
        if ((*(_WORD *)(v13 + 18) & 1) != 0)
          goto LABEL_105;
        v23 = *(_QWORD **)(v13 - 32);
        goto LABEL_48;
      }
      if (v14 != 62)
        goto LABEL_105;
      goto LABEL_32;
    }
    if (v14 - 77 < 2)
      goto LABEL_32;
    if (v14 == 81)
      break;
    if (v14 != 84)
      goto LABEL_105;
    v15 = *(_QWORD *)(v13 - 32);
    if (v15
      && !*(_BYTE *)(v15 + 16)
      && *(_QWORD *)(v15 + 24) == *(_QWORD *)(v13 + 72)
      && (*(_BYTE *)(v15 + 33) & 0x20) != 0)
    {
      v30 = *(_DWORD *)(v15 + 36);
      if (v30 <= 235)
      {
        v31 = (v30 - 163);
        if (v31 <= 0x24)
        {
          if (((1 << (v30 + 93)) & 0x33) != 0)
            goto LABEL_49;
          if (((1 << (v30 + 93)) & 0x1480000000) != 0)
          {
            v102 = v4;
            v32 = (_QWORD *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
            v33 = v32[12];
            v34 = (llvm::APInt *)(v33 + 24);
            v35 = *(_DWORD *)(v33 + 32);
            if (v35 > 0x40)
            {
              v27 = llvm::APInt::countLeadingZerosSlowCase(v34) == v35;
              v4 = v102;
              if (!v27)
                goto LABEL_105;
            }
            else
            {
              v4 = v102;
              if (*(_QWORD *)v34)
                goto LABEL_105;
            }
            v23 = (_QWORD *)*v32;
LABEL_48:
            if (v23 != v11)
              goto LABEL_105;
LABEL_49:
            v24 = v119;
            if (v119 >= HIDWORD(v119))
              goto LABEL_93;
            v25 = (llvm::ValueHandleBase *)((char *)v118 + 24 * v119);
            *(_QWORD *)v25 = 6;
            *((_QWORD *)v25 + 1) = 0;
            *((_QWORD *)v25 + 2) = v13;
            if (v13 != -8192 && v13 != -4096 && v13)
              goto LABEL_68;
            goto LABEL_69;
          }
          if (v31 == 3)
            goto LABEL_32;
        }
        if (v30 != 7)
          goto LABEL_105;
        goto LABEL_49;
      }
      if (v30 == 236)
        goto LABEL_49;
      if (v30 != 290)
        goto LABEL_105;
LABEL_32:
      v17 = v119;
      if (v119 < HIDWORD(v119))
      {
        v18 = (llvm::ValueHandleBase *)((char *)v118 + 24 * v119);
        *(_QWORD *)v18 = 6;
        *((_QWORD *)v18 + 1) = 0;
        *((_QWORD *)v18 + 2) = v13;
        if (v13 != -8192 && v13 != -4096 && v13)
        {
LABEL_36:
          llvm::ValueHandleBase::AddToUseList(v18);
          v17 = v119;
        }
LABEL_37:
        LODWORD(v119) = v17 + 1;
LABEL_38:
        v19 = v105;
        v20 = v122;
        if (v122 >= (unint64_t)HIDWORD(v122))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v121, (uint64_t)v123, v122 + 1, 8);
          v20 = v122;
        }
        v121[v20] = v19;
        LODWORD(v122) = v122 + 1;
        goto LABEL_70;
      }
LABEL_92:
      sub_1C578EDF4((unsigned int *)&v118, &v105);
      goto LABEL_38;
    }
    if (*(_QWORD *)(v13 + 8)
      || !llvm::Instruction::willReturn((llvm::Instruction *)v13)
      || ((v16 = *(_QWORD *)(v13 + 64)) == 0 || (*(_BYTE *)(v16 + 16) & 0x20) == 0)
      && !llvm::CallBase::hasFnAttrOnCalledFunction(v13, 37)
      || (llvm::MemoryLocation::getForDest(v13, v5, (uint64_t)&__s1), !v114)
      || __s1 != v11)
    {
      if (!llvm::isFreeCall(v105, v5))
        goto LABEL_72;
      llvm::getAllocationFamily(v105, v5, (uint64_t)&__s1);
      if (v111 && v108)
      {
        v7 = (const llvm::APInt *)__n;
        if (__n != v107 || __n && memcmp(__s1, __s2, __n))
        {
LABEL_72:
          sub_1C4EBF808(v105, 16, v5, &__s1);
          if (!v112)
            goto LABEL_105;
          llvm::getAllocationFamily(v105, v5, (uint64_t)&__s1);
          if (v111 && v108)
          {
            v7 = (const llvm::APInt *)__n;
            if (__n != v107 || __n && memcmp(__s1, __s2, __n))
              goto LABEL_105;
          }
          else if ((v111 == 0) == (v108 != 0))
          {
            goto LABEL_105;
          }
          v17 = v119;
          if (v119 < HIDWORD(v119))
          {
            v29 = v105;
            v18 = (llvm::ValueHandleBase *)((char *)v118 + 24 * v119);
            *(_QWORD *)v18 = 6;
            *((_QWORD *)v18 + 1) = 0;
            *((_QWORD *)v18 + 2) = v29;
            if (v29 != -8192 && v29 != -4096 && v29)
              goto LABEL_36;
            goto LABEL_37;
          }
          goto LABEL_92;
        }
      }
      else if ((v111 == 0) == (v108 != 0))
      {
        goto LABEL_72;
      }
    }
LABEL_64:
    v24 = v119;
    if (v119 >= HIDWORD(v119))
    {
LABEL_93:
      sub_1C578EDF4((unsigned int *)&v118, &v105);
      goto LABEL_70;
    }
    v28 = v105;
    v25 = (llvm::ValueHandleBase *)((char *)v118 + 24 * v119);
    *(_QWORD *)v25 = 6;
    *((_QWORD *)v25 + 1) = 0;
    *((_QWORD *)v25 + 2) = v28;
    if (v28 != -8192 && v28 != -4096 && v28)
    {
LABEL_68:
      llvm::ValueHandleBase::AddToUseList(v25);
      v24 = v119;
    }
LABEL_69:
    LODWORD(v119) = v24 + 1;
LABEL_70:
    v12 = *(_QWORD *)(v12 + 8);
    if (!v12)
    {
      v10 = v122;
      goto LABEL_103;
    }
  }
  if ((*(_WORD *)(v13 + 18) & 0x3E) != 0x20)
    goto LABEL_105;
  v21 = *(_QWORD *)(v13 - 64 + 32 * (*(_QWORD *)(v13 - 64) == (_QWORD)v11));
  v22 = *(unsigned __int8 *)(v21 + 16);
  if (v22 == 19)
    goto LABEL_64;
  if (v22 == 60)
  {
    if (*(_BYTE *)(*(_QWORD *)(v21 - 32) + 16) != 3)
      goto LABEL_105;
    goto LABEL_64;
  }
  if (byte_1ED82E438)
    v26 = 43;
  else
    v26 = 47;
  sub_1C4EBF808(v21, v26, v5, &__s1);
  v27 = v21 == a2 || v112 == 0;
  if (!v27)
    goto LABEL_64;
LABEL_105:
  v36 = 0;
LABEL_106:
  if (v121 != v123)
    free(v121);
  v37 = (int32x2_t *)&unk_1C640E000;
  if (v36)
  {
    v103 = v4;
    v38 = v119;
    if ((_DWORD)v119)
    {
      v39 = 0;
      do
      {
        v40 = *((_QWORD *)v118 + 3 * v39 + 2);
        if (v40)
        {
          if (*(_BYTE *)(v40 + 16) == 84)
          {
            v41 = *(_QWORD *)(v40 - 32);
            if (v41)
            {
              if (!*(_BYTE *)(v41 + 16)
                && *(_QWORD *)(v41 + 24) == *(_QWORD *)(v40 + 72)
                && (*(_BYTE *)(v41 + 33) & 0x20) != 0
                && *(_DWORD *)(v41 + 36) == 236)
              {
                v42 = llvm::lowerObjectSizeCall(v40, a1[10], a1[8], a1[6], 1);
                sub_1C577F888((uint64_t)a1, (llvm::ValueAsMetadata *)v40, v42);
                sub_1C57813F4((uint64_t)a1, v40);
                v43 = (char *)v118 + 24 * v39;
                v44 = v43[2];
                if (v44)
                {
                  if ((v44 | 0x1000) != 0xFFFFFFFFFFFFF000)
                  {
                    v45 = *v43 & 0xFFFFFFFFFFFFFFF8;
                    *(_QWORD *)v45 = v43[1];
                    v46 = (unint64_t *)v43[1];
                    if (v46)
                    {
                      *v46 = *v46 & 7 | v45;
                    }
                    else
                    {
                      v47 = v43[2];
                      v48 = ***(int32x2_t ****)v47;
                      v49 = (unint64_t)v48[303];
                      if (v49 <= v45)
                      {
                        v50 = v48[305].u32[0];
                        if (v49 + 16 * v50 > v45)
                        {
                          v51 = v50 - 1;
                          LODWORD(v52) = v51 & ((v47 >> 4) ^ (v47 >> 9));
                          v53 = (uint64_t *)(v49 + 16 * v52);
                          v54 = *v53;
                          if (v47 == *v53)
                          {
LABEL_131:
                            *v53 = -8192;
                            v48[304] = vadd_s32(v48[304], (int32x2_t)0x1FFFFFFFFLL);
                            v47 = v43[2];
                          }
                          else
                          {
                            v55 = 1;
                            while (v54 != -4096)
                            {
                              v56 = v52 + v55++;
                              v52 = v56 & v51;
                              v54 = *(_QWORD *)(v49 + 16 * v52);
                              if (v47 == v54)
                              {
                                v53 = (uint64_t *)(v49 + 16 * v52);
                                goto LABEL_131;
                              }
                            }
                          }
                          *(_BYTE *)(v47 + 17) &= ~1u;
                        }
                      }
                    }
                  }
                  v43[2] = 0;
                }
              }
            }
          }
        }
        ++v39;
      }
      while (v39 != v38);
      v58 = v119;
      if ((_DWORD)v119)
      {
        v59 = 0;
        do
        {
          v60 = (llvm::DbgVariableIntrinsic *)*((_QWORD *)v118 + 3 * v59 + 2);
          if (v60)
          {
            v61 = *((unsigned __int8 *)v60 + 16);
            if (v61 == 61)
            {
              if ((_DWORD)v116)
              {
                v72 = (llvm **)v115;
                v73 = 8 * v116;
                do
                {
                  if (*(_DWORD *)(*((_QWORD *)*v72 - 4) + 36) != 58)
                    llvm::ConvertDebugDeclareToDebugValue(*v72, v60, v104, v8);
                  ++v72;
                  v73 -= 8;
                }
                while (v73);
              }
            }
            else
            {
              if (v61 == 81)
              {
                v62 = ***(_QWORD ***)v60;
                v63 = *((_WORD *)v60 + 9) & 0x3F;
                v64 = v63 > 0x28;
                v65 = (1 << v63) & 0x15600000055;
                v67 = !v64 && v65 != 0;
                v68 = *(llvm::ConstantInt **)(v62 + 1888);
                v69 = *(unsigned int *)(v62 + 1896);
                LODWORD(__n) = v69 >> 8;
                if (v69 >> 8 > 0x40)
                {
                  llvm::APInt::initSlowCase((llvm::APInt *)&__s1, v67, 0);
                }
                else
                {
                  if (v69 <= 0xFF)
                    v70 = 0;
                  else
                    v70 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v69);
                  __s1 = (void *)(v70 & v67);
                }
                v71 = llvm::ConstantInt::get(v68, (llvm::LLVMContext *)&__s1, v7);
                if (__n >= 0x41 && __s1)
                  MEMORY[0x1CAA32F9C](__s1, 0x1000C8000313F17);
              }
              else
              {
                v71 = (llvm::Value *)llvm::PoisonValue::get(*(llvm::PoisonValue **)v60, v6);
              }
              sub_1C577F888((uint64_t)a1, v60, v71);
            }
            sub_1C57813F4((uint64_t)a1, (uint64_t)v60);
          }
          ++v59;
        }
        while (v59 != v58);
      }
    }
    if (*(_BYTE *)(a2 + 16) == 33)
    {
      Declaration = llvm::Intrinsic::getDeclaration(*(uint64_t **)(*(_QWORD *)(*(_QWORD *)(a2 + 40) + 56) + 40), 60, 0, 0);
      v99 = 0;
      if (Declaration)
        v99 = *(_QWORD *)(Declaration + 24);
      v100 = *(_QWORD *)(a2 - 96);
      v101 = *(_QWORD *)(a2 - 64);
      v113 = 257;
      sub_1C62A76A8(v99, Declaration, v100, v101, (uint64_t)&__s1, *(llvm::BasicBlock **)(a2 + 40));
    }
    if ((_DWORD)v116)
    {
      v74 = (uint64_t ****)v115;
      v75 = 8 * v116;
      do
      {
        v76 = *v74;
        if (*((_DWORD *)*(*v74 - 4) + 9) != 58
          || (v77 = (_QWORD *)v76[-4 * (*((_DWORD *)v76 + 5) & 0x7FFFFFF) + 8][3][3],
              ((v76[-4 * (*((_DWORD *)v76 + 5) & 0x7FFFFFF) + 8][3][4] - (_QWORD)v77) & 0x7FFFFFFF8) != 0)
          && *v77 == 6)
        {
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList((uint64_t)(v76[5] + 5), *v74);
          v78 = v76[3];
          v79 = v76[4];
          *v79 = (uint64_t *)v78;
          v78[1] = (uint64_t *)v79;
          v76[3] = 0;
          v76[4] = 0;
          llvm::Value::deleteValue((llvm::Value *)v76);
        }
        ++v74;
        v75 -= 8;
      }
      while (v75);
    }
    v57 = sub_1C57813F4((uint64_t)a1, a2);
    v4 = v103;
    v37 = (int32x2_t *)&unk_1C640E000;
  }
  else
  {
    v57 = 0;
  }
  if (v104)
  {
    v80 = sub_1C50F023C((uint64_t)v104);
    MEMORY[0x1CAA32FC0](v80, 0x10A0C40E3738E52);
  }
  if (v115 != v117)
    free(v115);
  v81 = (char *)v118;
  if ((_DWORD)v119)
  {
    v82 = (char *)v118 + 24 * v119;
    v83 = v37[212];
    do
    {
      v84 = *((_QWORD *)v82 - 1);
      if (v84 && v84 != -8192 && v84 != -4096)
      {
        v85 = *((_QWORD *)v82 - 3) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v85 = *((_QWORD *)v82 - 2);
        v86 = (unint64_t *)*((_QWORD *)v82 - 2);
        if (v86)
        {
          *v86 = *v86 & 7 | v85;
        }
        else
        {
          v87 = *((_QWORD *)v82 - 1);
          v88 = ***(int32x2_t ****)v87;
          v89 = (unint64_t)v88[303];
          if (v89 <= v85)
          {
            v90 = v88[305].u32[0];
            if (v89 + 16 * v90 > v85)
            {
              v91 = v90 - 1;
              LODWORD(v92) = v91 & ((v87 >> 4) ^ (v87 >> 9));
              v93 = (uint64_t *)(v89 + 16 * v92);
              v94 = *v93;
              if (v87 == *v93)
              {
LABEL_192:
                *v93 = -8192;
                v88[304] = vadd_s32(v88[304], v83);
                v87 = *((_QWORD *)v82 - 1);
              }
              else
              {
                v95 = 1;
                while (v94 != -4096)
                {
                  v96 = v92 + v95++;
                  v92 = v96 & v91;
                  v94 = *(_QWORD *)(v89 + 16 * v92);
                  if (v87 == v94)
                  {
                    v93 = (uint64_t *)(v89 + 16 * v92);
                    goto LABEL_192;
                  }
                }
              }
              *(_BYTE *)(v87 + 17) &= ~1u;
            }
          }
        }
      }
      v82 -= 24;
    }
    while (v82 != v81);
    v81 = (char *)v118;
  }
  if (v81 != v4)
    free(v81);
  return v57;
}

uint64_t sub_1C5787D30(uint64_t a1, llvm::Instruction *a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  llvm::UndefValue **v9;
  const llvm::DataLayout *v10;
  llvm::Value *v11;
  llvm::BasicBlock *v12;
  uint64_t SinglePredecessor;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  llvm::Value *v39;
  uint64_t v40;
  llvm::Value *v41;
  unsigned __int8 *v42;
  uint64_t v43;
  int v44;
  _QWORD *v45;
  llvm::Instruction *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t AttributeAtIndex;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  __int128 v57;
  _BYTE v58[24];
  _BYTE *v59;
  __int128 v60;
  _BYTE v61[24];
  _BYTE *v62;
  __int128 v63;
  _BYTE v64[24];
  _BYTE *v65;
  __int128 v66;
  _BYTE v67[24];
  _BYTE *v68;
  uint64_t v69;

  v2 = (uint64_t)a2;
  v69 = *MEMORY[0x1E0C80C00];
  v4 = *((_QWORD *)a2 - 4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF));
  v5 = *(unsigned __int8 *)(v4 + 16);
  if ((v5 - 11) <= 1)
  {
    sub_1C62A7364(a1, a2);
    return sub_1C57813F4(a1, v2);
  }
  if (v5 == 84)
  {
    v7 = *(_QWORD *)(v4 + 8);
    if (v7)
    {
      if (!*(_QWORD *)(v7 + 8))
      {
        sub_1C4EBF808(*((_QWORD *)a2 - 4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)), 16, *(uint64_t **)(a1 + 64), &v63);
        if (v64[8])
        {
          v9 = sub_1C577F888(a1, (llvm::ValueAsMetadata *)v4, *(llvm::Value **)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF)));
          return sub_1C57813F4(a1, (uint64_t)v9);
        }
      }
    }
  }
  else if (v5 == 19)
  {
    return sub_1C57813F4(a1, v2);
  }
  if (!*(_BYTE *)(a1 + 40))
    return 0;
  v56 = 0;
  if (!sub_1C4ECD910(*(uint64_t **)(a1 + 64), v2, (int *)&v56))
    return 0;
  v8 = *(_QWORD **)(a1 + 64);
  if (((*(_QWORD *)(v8[1] + (((unint64_t)v56 >> 3) & 0x1FFFFFF8)) >> v56) & 1) != 0)
    return 0;
  if (v56 != 259)
    return 0;
  if ((*(_BYTE *)(*v8 + 64) & 0xC0) == 0)
    return 0;
  v10 = *(const llvm::DataLayout **)(a1 + 80);
  v11 = *(llvm::Value **)(v2 - 32 * (*(_DWORD *)(v2 + 20) & 0x7FFFFFF));
  v12 = *(llvm::BasicBlock **)(v2 + 40);
  SinglePredecessor = llvm::BasicBlock::getSinglePredecessor(v12);
  if (!SinglePredecessor)
    return 0;
  v15 = (_QWORD *)((char *)v12 + 40);
  v14 = (_QWORD *)*((_QWORD *)v12 + 5);
  if (v14 == (_QWORD *)((char *)v12 + 40))
    return 0;
  v16 = v14 ? (uint64_t)(v14 - 3) : 0;
  v17 = *(unsigned __int8 *)(v16 + 16) - 40;
  v18 = v17 >= 0xFFFFFFF5 ? v16 : 0;
  if (!v14)
    return 0;
  v19 = *(_BYTE *)(v18 + 16) == 30 && v17 >= 0xFFFFFFF5;
  if (!v19 || (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) != 1)
    return 0;
  v20 = SinglePredecessor;
  v55 = *(_QWORD *)(v18 - 32);
  v21 = 3;
  v22 = (_QWORD *)((char *)v12 + 40);
  do
  {
    v22 = (_QWORD *)v22[1];
    --v21;
  }
  while (v22 != v15);
  if (v21)
  {
    llvm::BasicBlock::instructionsWithoutDebug(v12, 1, (uint64_t)&v63);
    v60 = v63;
    v23 = v61;
    if (v65)
    {
      if (v65 == v64)
      {
        v62 = v61;
        (*(void (**)(void))(*(_QWORD *)v65 + 24))();
      }
      else
      {
        v62 = (_BYTE *)(*(uint64_t (**)(void))(*(_QWORD *)v65 + 16))();
      }
    }
    else
    {
      v62 = 0;
    }
    v57 = v66;
    v24 = v58;
    if (v68)
    {
      if (v68 == v67)
      {
        v59 = v58;
        (*(void (**)(void))(*(_QWORD *)v68 + 24))();
      }
      else
      {
        v59 = (_BYTE *)(*(uint64_t (**)(void))(*(_QWORD *)v68 + 16))();
      }
    }
    else
    {
      v59 = 0;
    }
LABEL_45:
    v25 = v60;
    while (v25 != (_QWORD)v57)
    {
      if (v25)
        v26 = (unsigned __int8 *)(v25 - 24);
      else
        v26 = 0;
      if (v26 != (unsigned __int8 *)v2 && v26 != (unsigned __int8 *)v18)
      {
        if (!v25
          || v26[16] - 79 < 0xFFFFFFF3
          || (llvm::CastInst::isNoopCast((llvm::CastInst *)v26, v10), !v28))
        {
          if (v59 == v58)
          {
            v30 = 4;
LABEL_113:
            (*(void (**)(_QWORD *))(*v24 + 8 * v30))(v24);
          }
          else if (v59)
          {
            v30 = 5;
            v24 = v59;
            goto LABEL_113;
          }
          if (v62 == v61)
          {
            v47 = 4;
LABEL_118:
            (*(void (**)(_QWORD *))(*v23 + 8 * v47))(v23);
          }
          else if (v62)
          {
            v47 = 5;
            v23 = v62;
            goto LABEL_118;
          }
          v48 = v68;
          if (v68 == v67)
          {
            v49 = 4;
            v48 = v67;
            goto LABEL_121;
          }
          if (v68)
          {
            v49 = 5;
LABEL_121:
            (*(void (**)(void))(*v48 + 8 * v49))();
          }
          v50 = v65;
          if (v65 == v64)
          {
            v51 = 4;
            v50 = v64;
            goto LABEL_124;
          }
          if (v65)
          {
            v51 = 5;
LABEL_124:
            (*(void (**)(void))(*v50 + 8 * v51))();
          }
          return 0;
        }
      }
      while (1)
      {
        v25 = *(_QWORD *)(v60 + 8);
        *(_QWORD *)&v60 = v25;
        if (v25 == *((_QWORD *)&v60 + 1))
          break;
        if (!v62)
        {
          sub_1C485C2F0();
          goto LABEL_129;
        }
        if ((*(unsigned int (**)(void))(*(_QWORD *)v62 + 48))())
          goto LABEL_45;
      }
    }
    if (v59 == v58)
    {
      v29 = 4;
    }
    else
    {
      if (!v59)
        goto LABEL_69;
      v29 = 5;
      v24 = v59;
    }
    (*(void (**)(_QWORD *))(*v24 + 8 * v29))(v24);
LABEL_69:
    if (v62 == v61)
    {
      v31 = 4;
    }
    else
    {
      if (!v62)
        goto LABEL_74;
      v31 = 5;
      v23 = v62;
    }
    (*(void (**)(_QWORD *))(*v23 + 8 * v31))(v23);
LABEL_74:
    v32 = v68;
    if (v68 == v67)
    {
      v33 = 4;
      v32 = v67;
    }
    else
    {
LABEL_129:
      if (!v32)
        goto LABEL_77;
      v33 = 5;
    }
    (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_77:
    v34 = v65;
    if (v65 == v64)
    {
      v35 = 4;
      v34 = v64;
LABEL_79:
      (*(void (**)(void))(*v34 + 8 * v35))();
      goto LABEL_80;
    }
    if (v65)
    {
      v35 = 5;
      goto LABEL_79;
    }
  }
LABEL_80:
  v36 = *(_QWORD *)(v20 + 40);
  if (v36 == v20 + 40)
  {
    v38 = 0;
  }
  else
  {
    if (v36)
      v37 = v36 - 24;
    else
      v37 = 0;
    if (*(unsigned __int8 *)(v37 + 16) - 29 >= 0xB)
      v38 = 0;
    else
      v38 = v37;
  }
  v39 = llvm::Value::stripPointerCasts(v11);
  if (!v38)
    return 0;
  if (*(_BYTE *)(v38 + 16) != 30)
    return 0;
  if ((*(_DWORD *)(v38 + 20) & 0x7FFFFFF) != 3)
    return 0;
  v40 = *(_QWORD *)(v38 - 96);
  if (!v40)
    return 0;
  if (*(_BYTE *)(v40 + 16) != 81)
    return 0;
  v41 = *(llvm::Value **)(v40 - 64);
  if (v11 != v41 && v39 != v41)
    return 0;
  v42 = *(unsigned __int8 **)(v40 - 32);
  if (!v42
    || v42[16] > 0x14u
    || (llvm::Constant::isNullValue(*(llvm::Constant **)(v40 - 32)) & 1) == 0
    && (sub_1C4E71060((uint64_t)&v63, (llvm::Constant *)v42) & 1) == 0)
  {
    return 0;
  }
  v43 = *(_QWORD *)(v38 - 32);
  if (!v43)
    return 0;
  if (!*(_QWORD *)(v38 - 64))
    return 0;
  v44 = *(_WORD *)(v40 + 18) & 0x3F;
  if ((v44 - 34) < 0xFFFFFFFE)
    return 0;
  if (v44 != 32)
    v43 = *(_QWORD *)(v38 - 64);
  if (v55 != v43)
    return 0;
  v45 = (_QWORD *)*((_QWORD *)v12 + 6);
  while (v45 != v15)
  {
    v46 = v45 ? (llvm::Instruction *)(v45 - 3) : 0;
    if (v46 == (llvm::Instruction *)v18)
      break;
    v45 = (_QWORD *)v45[1];
    llvm::Instruction::moveBefore(v46, (llvm::Instruction *)v38);
  }
  *(_QWORD *)&v63 = *(_QWORD *)(v2 + 64);
  v52 = llvm::AttributeList::removeAttributeAtIndex((uint64_t *)&v63, **(uint64_t ***)v2, 1, 39);
  *(_QWORD *)&v63 = v52;
  AttributeAtIndex = llvm::AttributeList::getAttributeAtIndex((uint64_t *)&v63, 1, 76);
  if (AttributeAtIndex)
  {
    v54 = *(_QWORD *)(AttributeAtIndex + 16);
    *(_QWORD *)&v63 = llvm::AttributeList::removeAttributeAtIndex((uint64_t *)&v63, **(uint64_t ***)v2, 1, 76);
    v52 = llvm::AttributeList::addDereferenceableOrNullParamAttr((llvm::AttributeList *)&v63, **(llvm::LLVMContext ***)v2, 0, v54);
  }
  *(_QWORD *)(v2 + 64) = v52;
  return v2;
}

llvm::LandingPadInst *sub_1C5788418(llvm::LandingPadInst *a1, const llvm::Value *a2)
{
  llvm::LandingPadInst *v2;
  uint64_t v3;
  int v4;
  llvm::Value **v5;
  unsigned __int8 v6;
  llvm::Type *v7;
  llvm::Instruction *v8;
  int v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  llvm::LandingPadInst *v16;
  llvm::Value **v17;
  llvm::Value *v18;
  uint64_t v19;
  llvm::Value **NullValue;
  llvm::Value **v21;
  int v22;
  llvm::Constant *v23;
  uint64_t v24;
  unint64_t v25;
  llvm::Value **v26;
  llvm::Value *v27;
  llvm::Constant *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  char v34;
  unint64_t v35;
  llvm::PoisonValue *v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  unsigned int v40;
  const std::nothrow_t *v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unint64_t v46;
  char *v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t *v50;
  BOOL v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  int v65;
  char *v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  llvm::Value *v72;
  uint64_t v73;
  uint64_t *v74;
  __int16 v75;
  char v76;
  llvm::LandingPadInst *v78;
  llvm::LandingPadInst *v79;
  unint64_t v80;
  llvm::LandingPadInst *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char v85;
  int v86;
  int v87;
  llvm::LandingPadInst *v88;
  uint64_t v89;
  BOOL (*v90)(uint64_t, uint64_t);
  BOOL (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  int v93;
  _WORD v94[64];
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  int v98;
  _BYTE v99[128];
  void *v100;
  uint64_t v101;
  _BYTE v102[128];
  char *v103;
  uint64_t v104;
  _QWORD v105[18];

  v2 = a1;
  v105[16] = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(*((_QWORD *)a1 + 5) + 56);
  v4 = *(_DWORD *)(v3 + 20);
  if ((v4 & 0x40000000) != 0)
    v5 = *(llvm::Value ***)(v3 - 8);
  else
    v5 = (llvm::Value **)(v3 - 32 * (v4 & 0x7FFFFFF));
  v6 = llvm::classifyEHPersonality(*v5, a2);
  v103 = (char *)v105;
  v104 = 0x1000000000;
  v85 = *((_WORD *)v2 + 9) & 1;
  v95 = v99;
  v96 = v99;
  v97 = 16;
  v98 = 0;
  v9 = *((_DWORD *)v2 + 5);
  v10 = v9 & 0x7FFFFFF;
  v88 = v2;
  if ((v9 & 0x7FFFFFF) != 0)
  {
    v11 = v6;
    v12 = 0;
    v13 = 0;
    v84 = v9 & 0x7FFFFFF;
    while (1)
    {
      v14 = 32 * v12++;
      v15 = *((_DWORD *)v2 + 5);
      v16 = (v15 & 0x40000000) != 0
          ? (llvm::LandingPadInst *)*((_QWORD *)v2 - 1)
          : (llvm::LandingPadInst *)((char *)v2 - 32 * (v15 & 0x7FFFFFF));
      v17 = *(llvm::Value ***)((char *)v16 + v14);
      v18 = *v17;
      if (*((_BYTE *)*v17 + 8) == 17)
        break;
      v23 = llvm::Value::stripPointerCasts((llvm::Value *)v17);
      sub_1C4774094((llvm::SmallPtrSetImplBase *)&v95, (uint64_t)v23);
      if ((_BYTE)v7)
      {
        v24 = v104;
        if (v104 >= (unint64_t)HIDWORD(v104))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v103, (uint64_t)v105, v104 + 1, 8);
          v24 = v104;
        }
        *(_QWORD *)&v103[8 * v24] = v17;
        LODWORD(v104) = v104 + 1;
      }
      else
      {
        v13 = 1;
      }
      v2 = v88;
      if (((1 << v11) & 0x37F0) != 0 && llvm::Constant::isNullValue(v23))
      {
        v85 = 0;
        v13 |= (_DWORD)v10 != (_DWORD)v12;
        goto LABEL_61;
      }
LABEL_55:
      if (v12 == v10)
        goto LABEL_61;
    }
    v19 = *((_QWORD *)v18 + 4);
    if (!(_DWORD)v19)
    {
      v38 = v104;
      if (v104 >= HIDWORD(v104))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v103, (uint64_t)v105, v104 + 1, 8);
        v38 = v104;
      }
      v85 = 0;
      *(_QWORD *)&v103[8 * v38] = v17;
      v39 = (v104 + 1);
      LODWORD(v104) = v104 + 1;
      v13 |= (_DWORD)v10 != (_DWORD)v12;
      v2 = v88;
      goto LABEL_62;
    }
    v100 = v102;
    v101 = 0x1000000000;
    if (*((_BYTE *)v17 + 16) == 13)
    {
      NullValue = llvm::Constant::getNullValue(*((llvm::Constant **)v18 + 3), v7);
      v21 = NullValue;
      if (((1 << v11) & 0x37F0) != 0 && (llvm::Constant::isNullValue((llvm::Constant *)NullValue) & 1) != 0)
      {
        v22 = 4;
        v13 = 1;
        goto LABEL_52;
      }
      v31 = v101;
      if (v101 >= (unint64_t)HIDWORD(v101))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, v101 + 1, 8);
        v31 = v101;
      }
      *((_QWORD *)v100 + v31) = v21;
      v32 = v101 + 1;
      LODWORD(v101) = v101 + 1;
      if (v19 <= 1)
      {
        v33 = 0;
LABEL_47:
        v37 = v104;
        v10 = v84;
        if (v104 >= (unint64_t)HIDWORD(v104))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v103, (uint64_t)v105, v104 + 1, 8);
          v37 = v104;
        }
        *(_QWORD *)&v103[8 * v37] = v17;
        LODWORD(v104) = v104 + 1;
        v85 &= !(v33 & ((_DWORD)v101 == 0));
        if ((v33 & ((_DWORD)v101 == 0)) != 0)
          v22 = 2;
        else
          v22 = 0;
LABEL_52:
        v2 = v88;
        if (v100 != v102)
          free(v100);
        if ((v22 | 4) != 4)
          goto LABEL_61;
        goto LABEL_55;
      }
    }
    else
    {
      v86 = v13;
      v25 = v19;
      v90 = (BOOL (*)(uint64_t, uint64_t))v94;
      v91 = (BOOL (*)(uint64_t, uint64_t))v94;
      v92 = 16;
      v93 = 0;
      if (v19 >= 0x11uLL)
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, v19, 8);
      v26 = v17;
      while (1)
      {
        v27 = v26[-4 * (*((_DWORD *)v17 + 5) & 0x7FFFFFF)];
        v28 = llvm::Value::stripPointerCasts(v27);
        v29 = (uint64_t)v28;
        if (((1 << v11) & 0x37F0) != 0 && (llvm::Constant::isNullValue(v28) & 1) != 0)
          break;
        sub_1C4774094((llvm::SmallPtrSetImplBase *)&v90, v29);
        if ((_BYTE)v7)
        {
          v30 = v101;
          if (v101 >= (unint64_t)HIDWORD(v101))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, v101 + 1, 8);
            v30 = v101;
          }
          *((_QWORD *)v100 + v30) = v27;
          LODWORD(v101) = v101 + 1;
        }
        v26 += 4;
        LODWORD(v19) = v19 - 1;
        if (!(_DWORD)v19)
        {
          v34 = 0;
          v22 = 0;
          goto LABEL_39;
        }
      }
      v22 = 4;
      v86 = 1;
      v34 = 1;
LABEL_39:
      v35 = v101;
      if (v91 != v90)
        free(v91);
      if ((v34 & 1) != 0)
      {
        v13 = v86;
        v10 = v84;
        goto LABEL_52;
      }
      if (v25 <= v35)
      {
        v33 = 0;
        v13 = v86;
        goto LABEL_47;
      }
      v32 = v101;
    }
    llvm::ArrayType::get(*((llvm::ArrayType **)v18 + 3), (llvm::Type *)v32);
    v17 = llvm::ConstantArray::get(v36, (llvm::Type *)v100, v101);
    v33 = 1;
    v13 = 1;
    goto LABEL_47;
  }
  v13 = 0;
LABEL_61:
  v39 = v104;
LABEL_62:
  if (v39 >= 2)
  {
    v40 = 0;
    v41 = (const std::nothrow_t *)MEMORY[0x1E0DE4E10];
    do
    {
      v42 = v40;
      v43 = v39;
      if (v40 != (_DWORD)v39)
      {
        while (*(_BYTE *)(**(_QWORD **)&v103[8 * v42] + 8) == 17)
        {
          if ((_DWORD)v39 == ++v42)
          {
            v43 = v39;
            goto LABEL_69;
          }
        }
        v43 = v42;
      }
LABEL_69:
      v44 = v40;
      while (1)
      {
        v45 = v44 + 1;
        if (v44 + 1 >= v43)
          break;
        v46 = *(_QWORD *)(**(_QWORD **)&v103[8 * v44++] + 32);
        if (*(_QWORD *)(**(_QWORD **)&v103[8 * v45] + 32) < v46)
        {
          v47 = &v103[8 * v40];
          v48 = (uint64_t *)&v103[8 * v43];
          v90 = sub_1C5788CA8;
          if ((char *)v48 - v47 < 1025)
          {
LABEL_76:
            sub_1C57908A8((uint64_t)v47, v48, (uint64_t (**)(uint64_t, uint64_t))&v90, ((char *)v48 - v47) >> 3, 0, 0);
          }
          else
          {
            v49 = ((char *)v48 - v47) >> 3;
            while (1)
            {
              v50 = (uint64_t *)operator new(8 * v49, v41);
              if (v50)
                break;
              v51 = v49 > 1;
              v49 >>= 1;
              if (!v51)
                goto LABEL_76;
            }
            v52 = v50;
            sub_1C57908A8((uint64_t)v47, v48, (uint64_t (**)(uint64_t, uint64_t))&v90, ((char *)v48 - v47) >> 3, v50, v49);
            operator delete(v52);
          }
          v13 = 1;
          break;
        }
      }
      v40 = v43 + 1;
    }
    while (v43 + 2 < v39);
    v39 = v104;
    if (v104 >= 2)
    {
      v53 = 0;
      v54 = 1;
      while (1)
      {
        v55 = *(_QWORD *)&v103[8 * v53];
        if (*(_QWORD *)v55 && *(_BYTE *)(*(_QWORD *)v55 + 8) == 17)
        {
          v57 = (v39 - 1);
          if (v53 != v57)
            break;
        }
LABEL_119:
        ++v54;
        ++v53;
        if (v54 >= v39)
          goto LABEL_120;
      }
      v58 = *(_QWORD *)(*(_QWORD *)v55 + 32);
      v83 = v54;
      v89 = *(_QWORD *)&v103[8 * v53];
      while (1)
      {
        v59 = v103;
        v60 = &v103[8 * v57];
        v61 = *(uint64_t **)v60;
        v62 = **(_QWORD **)v60;
        if (v62)
          v63 = *(_BYTE *)(v62 + 8) == 17;
        else
          v63 = 0;
        if (!v63)
          goto LABEL_116;
        if (!(_DWORD)v58)
          break;
        v64 = *(_QWORD *)(v62 + 32);
        if (v58 <= v64)
        {
          v65 = *(unsigned __int8 *)(v55 + 16);
          if (*((_BYTE *)v61 + 16) != 13)
          {
            v69 = v64;
            if (v65 == 13)
            {
              v70 = *(uint64_t **)v60;
              while (!llvm::Constant::isNullValue((llvm::Constant *)v70[-4
                                                                                     * (*((_DWORD *)v61 + 5) & 0x7FFFFFF)]))
              {
                v70 += 4;
                if (!--v69)
                  goto LABEL_116;
              }
            }
            else
            {
              v87 = v13;
              v71 = 0;
              do
              {
                v72 = llvm::Value::stripPointerCasts(*(llvm::Value **)(v55
                                                                     - 32 * (*(_DWORD *)(v55 + 20) & 0x7FFFFFF)
                                                                     + 32 * v71));
                v73 = v69;
                v74 = v61;
                while (llvm::Value::stripPointerCasts((llvm::Value *)v74[-4 * (*((_DWORD *)v61 + 5) & 0x7FFFFFF)]) != v72)
                {
                  v74 += 4;
                  if (!--v73)
                  {
                    v13 = v87;
                    v55 = v89;
                    goto LABEL_116;
                  }
                }
                ++v71;
                v55 = v89;
              }
              while (v71 != v58);
            }
            v66 = v60 + 8;
            v59 = v103;
LABEL_113:
            v67 = v104;
            v68 = &v59[8 * v104];
            if (v68 != v66)
            {
LABEL_114:
              memmove(v60, v66, v68 - v66);
              v67 = v104;
            }
LABEL_115:
            LODWORD(v104) = v67 - 1;
            v13 = 1;
            goto LABEL_116;
          }
          if (v65 == 13)
          {
            v66 = v60 + 8;
            goto LABEL_113;
          }
        }
LABEL_116:
        v57 = (v57 - 1);
        if (v53 == v57)
        {
          v39 = v104;
          v54 = v83;
          goto LABEL_119;
        }
      }
      v66 = v60 + 8;
      v67 = v104;
      v68 = &v103[8 * v104];
      if (v68 != v60 + 8)
        goto LABEL_114;
      goto LABEL_115;
    }
LABEL_120:
    v2 = v88;
  }
  if ((v13 & 1) != 0)
  {
    v78 = *(llvm::LandingPadInst **)v2;
    v94[0] = 257;
    v79 = llvm::LandingPadInst::Create(v78, (llvm::Type *)v39, (const llvm::Twine *)&v90, 0, v8);
    v2 = v79;
    if ((_DWORD)v104)
    {
      v80 = 0;
      v81 = v79;
      v82 = 8 * v104;
      do
      {
        llvm::LandingPadInst::addClause(v81, *(llvm::Constant **)&v103[v80]);
        v80 += 8;
      }
      while (v82 != v80);
      v76 = ((_DWORD)v104 == 0) | v85;
      v2 = v81;
    }
    else
    {
      v76 = 1;
    }
    v75 = *((_WORD *)v2 + 9);
    goto LABEL_123;
  }
  v75 = *((_WORD *)v2 + 9);
  v76 = v85;
  if ((v85 & 1) != (v75 & 1))
  {
LABEL_123:
    *((_WORD *)v2 + 9) = v75 & 0xFFFE | v76 & 1;
    goto LABEL_125;
  }
  v2 = 0;
LABEL_125:
  if (v96 != v95)
    free(v96);
  if (v103 != (char *)v105)
    free(v103);
  return v2;
}

BOOL sub_1C5788CA8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 32) < *(_QWORD *)(*(_QWORD *)a2 + 32);
}

_QWORD *sub_1C5788CC4(_QWORD *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  int v15;
  BOOL v16;
  unsigned int v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *a2;
  if (*a2)
    v6 = *(unsigned __int8 *)(*a2 + 16) >= 0x1Cu;
  else
    v6 = 0;
  if (!v6)
  {
LABEL_26:
    *(_QWORD *)a2[2] = a2[1];
    v21 = a2[1];
    if (v21)
      *(_QWORD *)(v21 + 16) = a2[2];
    goto LABEL_28;
  }
  v7 = result[4];
  v25 = *a2;
  if ((*(_BYTE *)(v7 + 2088) & 1) != 0)
  {
    v9 = v7 + 2096;
    v8 = 16;
  }
  else
  {
    v8 = *(_DWORD *)(v7 + 2104);
    if (!v8)
    {
      v18 = 0;
LABEL_23:
      result = sub_1C4E08FFC(v7 + 2088, (uint64_t)&v25, &v25, v18);
      *result = v25;
      v19 = v25;
      v20 = *(unsigned int *)(v7 + 2232);
      if (v20 >= *(_DWORD *)(v7 + 2236))
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod(v7 + 2224, v7 + 2240, v20 + 1, 8);
        LODWORD(v20) = *(_DWORD *)(v7 + 2232);
      }
      *(_QWORD *)(*(_QWORD *)(v7 + 2224) + 8 * v20) = v19;
      ++*(_DWORD *)(v7 + 2232);
      if (*a2)
        goto LABEL_26;
      goto LABEL_28;
    }
    v9 = *(_QWORD *)(v7 + 2096);
  }
  v10 = v8 - 1;
  v11 = v10 & ((v5 >> 4) ^ (v5 >> 9));
  v12 = (_QWORD *)(v9 + 8 * v11);
  v13 = *v12;
  if (v5 == *v12)
    goto LABEL_26;
  v14 = 0;
  v15 = 1;
  do
  {
    if (v13 == -4096)
    {
      if (v14)
        v18 = v14;
      else
        v18 = v12;
      goto LABEL_23;
    }
    if (v14)
      v16 = 0;
    else
      v16 = v13 == -8192;
    if (v16)
      v14 = v12;
    v17 = v11 + v15++;
    v11 = v17 & v10;
    v12 = (_QWORD *)(v9 + 8 * v11);
    v13 = *v12;
  }
  while (v5 != *v12);
  if (v5)
    goto LABEL_26;
LABEL_28:
  *a2 = a3;
  if (a3)
  {
    v24 = *(_QWORD *)(a3 + 8);
    v23 = (_QWORD *)(a3 + 8);
    v22 = v24;
    a2[1] = v24;
    if (v24)
      *(_QWORD *)(v22 + 16) = a2 + 1;
    a2[2] = (uint64_t)v23;
    *v23 = a2;
  }
  return result;
}

uint64_t sub_1C5788E44(uint64_t a1)
{
  int32x2_t *v2;
  unsigned __int32 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  int v16;
  BOOL v17;
  unsigned int v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t ***v22;
  __int32 v23;
  unsigned int v24;
  int32x2_t v25;
  __int32 v26;
  uint64_t v27;
  uint64_t ****v28;
  uint64_t ***v29;
  int v30;
  int v31;
  int v32;
  uint64_t ***v33;
  llvm::UndefValue *v34;
  uint64_t **v35;
  unsigned int v36;
  llvm::BasicBlock *v37;
  llvm::BasicBlock *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  int v52;
  uint64_t *v53;
  uint64_t **v54;
  unsigned __int8 v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t **v60;
  void *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  unsigned int v73;
  _QWORD *v74;
  _QWORD ***v75;
  _QWORD *v76;
  int v77;
  BOOL v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  _QWORD *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t **v87;
  int v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t **v93;
  uint64_t v94;
  uint64_t *v95;
  int v96;
  int v97;
  uint64_t v98;
  int v99;
  unsigned int v100;
  _QWORD *v101;
  void *v102;
  _QWORD *v103;
  int v104;
  BOOL v105;
  unsigned int v106;
  _QWORD *v107;
  _QWORD *v108;
  unint64_t v109;
  int v110;
  int v111;
  uint64_t v112;
  int v113;
  unsigned int v114;
  uint64_t ****v115;
  uint64_t ***v116;
  uint64_t ****v117;
  int v118;
  BOOL v119;
  unsigned int v120;
  uint64_t ****v121;
  _QWORD *v122;
  unint64_t v123;
  unsigned int v124;
  BOOL v125;
  uint64_t v126;
  int v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t **v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  int v141;
  int v142;
  uint64_t v143;
  int v144;
  unsigned int v145;
  _QWORD *v146;
  void *v147;
  _QWORD *v148;
  int v149;
  BOOL v150;
  unsigned int v151;
  _QWORD *v152;
  _QWORD *v153;
  unint64_t v154;
  int v155;
  int v156;
  uint64_t v157;
  int v158;
  unsigned int v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  int v163;
  BOOL v164;
  unsigned int v165;
  _QWORD *v166;
  _QWORD *v167;
  unint64_t v168;
  uint64_t *v169;
  llvm::ValueSymbolTable *v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t *v174;
  _BYTE *v175;
  uint64_t *v176;
  unsigned int v177;
  llvm *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  unsigned int v193;
  int v194;
  llvm::Value **v195;
  uint64_t *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  llvm::ValueSymbolTable *v204;
  int v205;
  uint64_t v206;
  void **v207;
  void **v208;
  void *v209;
  BOOL v210;
  uint64_t v211;
  int v212;
  int v213;
  uint64_t v214;
  int v215;
  unsigned int v216;
  _QWORD *v217;
  void *v218;
  _QWORD *v219;
  int v220;
  BOOL v221;
  unsigned int v222;
  _QWORD *v223;
  _QWORD *v224;
  unint64_t v225;
  uint64_t **v226;
  uint64_t UniquePredecessor;
  uint64_t **v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  char hasFnAttrOnCalledFunction;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int v241;
  int v242;
  uint64_t **v244;
  int v245;
  unsigned int v246;
  llvm *UnderlyingObject;
  uint64_t i;
  uint64_t v249;
  char v250;
  uint64_t v251;
  unsigned int v252;
  _BYTE *v253;
  unsigned int v254;
  uint64_t v255;
  unsigned int v256;
  int v257;
  uint64_t j;
  uint64_t v260;
  char v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t ***v264;
  uint64_t ***v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unsigned int v269;
  int v270;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  _BYTE v276[160];
  _QWORD **v277;
  _QWORD *v278[2];
  void *v279;
  uint64_t v280;
  _BYTE v281[16];
  void *v282;
  uint64_t v283;
  _BYTE v284[16];
  unint64_t v285;
  int8x16_t v286;
  int v287;
  _QWORD v288[4];
  llvm *v289;
  uint64_t v290;
  _BYTE v291[40];
  uint64_t v292;

  v292 = *MEMORY[0x1E0C80C00];
  while (1)
  {
    v2 = *(int32x2_t **)(a1 + 32);
    v3 = v2[1].u32[0];
    v4 = v2[279].u32[0];
    if (v3)
    {
      if (v2[279].i32[0])
        goto LABEL_6;
      goto LABEL_32;
    }
    if (!v2[279].i32[0])
      break;
LABEL_6:
    while (1)
    {
      v5 = *(_QWORD *)&v2[278] + 8 * v4;
      v6 = *(_QWORD **)(v5 - 8);
      sub_1C4E094A8((uint64_t)&v2[261], (_QWORD *)(v5 - 8));
      --v2[279].i32[0];
      if (!v6)
        break;
      if (v6[1] || !llvm::wouldInstructionBeTriviallyDead((uint64_t)v6, *(uint64_t **)(a1 + 64)))
      {
        v7 = *(_QWORD *)(a1 + 32);
        v8 = *(_DWORD *)(v7 + 8);
        v274 = v6;
        LODWORD(v275) = v8;
        v9 = *(_DWORD *)(v7 + 2080);
        if (!v9)
        {
          v19 = 0;
LABEL_22:
          v20 = sub_1C4D8D8F4((_DWORD *)(v7 + 2064), (uint64_t)&v274, (uint64_t *)&v274, v19);
          *v20 = v274;
          *((_DWORD *)v20 + 2) = v275;
          v21 = *(unsigned int *)(v7 + 8);
          if (v21 >= *(unsigned int *)(v7 + 12))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod(v7, v7 + 16, v21 + 1, 8);
            v21 = *(unsigned int *)(v7 + 8);
          }
          *(_QWORD *)(*(_QWORD *)v7 + 8 * v21) = v6;
          ++*(_DWORD *)(v7 + 8);
          goto LABEL_25;
        }
        v10 = *(_QWORD *)(v7 + 2064);
        v11 = v9 - 1;
        v12 = v11 & ((v6 >> 4) ^ (v6 >> 9));
        v13 = (_QWORD *)(v10 + 16 * v12);
        v14 = (_QWORD *)*v13;
        if ((_QWORD *)*v13 != v6)
        {
          v15 = 0;
          v16 = 1;
          while (v14 != (_QWORD *)-4096)
          {
            if (v15)
              v17 = 0;
            else
              v17 = v14 == (_QWORD *)-8192;
            if (v17)
              v15 = v13;
            v18 = v12 + v16++;
            v12 = v18 & v11;
            v13 = (_QWORD *)(v10 + 16 * v12);
            v14 = (_QWORD *)*v13;
            if ((_QWORD *)*v13 == v6)
              goto LABEL_25;
          }
          if (v15)
            v19 = v15;
          else
            v19 = v13;
          goto LABEL_22;
        }
      }
      else
      {
        sub_1C57813F4(a1, (uint64_t)v6);
      }
LABEL_25:
      v2 = *(int32x2_t **)(a1 + 32);
      v4 = v2[279].u32[0];
      if (!(_DWORD)v4)
        goto LABEL_31;
    }
    v2 = *(int32x2_t **)(a1 + 32);
LABEL_31:
    v3 = v2[1].u32[0];
    if (!v3)
      continue;
LABEL_32:
    v22 = *(uint64_t ****)(*(_QWORD *)v2 + 8 * v3 - 8);
    v2[1].i32[0] = v3 - 1;
    v23 = v2[260].i32[0];
    v24 = v22 >> 4;
    if (v23)
    {
      v25 = v2[258];
      v26 = v23 - 1;
      LODWORD(v27) = (v24 ^ (v22 >> 9)) & (v23 - 1);
      v28 = (uint64_t ****)(*(_QWORD *)&v25 + 16 * v27);
      v29 = *v28;
      if (v22 == *v28)
      {
LABEL_38:
        *v28 = (uint64_t ***)-8192;
        v2[259] = vadd_s32(v2[259], (int32x2_t)0x1FFFFFFFFLL);
      }
      else
      {
        v30 = 1;
        while (v29 != (uint64_t ***)-4096)
        {
          v31 = v27 + v30++;
          v27 = v31 & v26;
          v29 = *(uint64_t ****)(*(_QWORD *)&v25 + 16 * v27);
          if (v22 == v29)
          {
            v28 = (uint64_t ****)(*(_QWORD *)&v25 + 16 * v27);
            goto LABEL_38;
          }
        }
      }
    }
    if (!v22)
      continue;
    if (!v22[1])
    {
      if (llvm::wouldInstructionBeTriviallyDead((uint64_t)v22, *(uint64_t **)(a1 + 64)))
      {
        sub_1C57813F4(a1, (uint64_t)v22);
        continue;
      }
      if (!v22[1])
        goto LABEL_461;
    }
    if (((v32 = *((_DWORD *)v22 + 5), (v32 & 0x7FFFFFF) == 0)
       || ((v32 & 0x40000000) != 0 ? (v33 = (uint64_t ***)*(v22 - 1)) : (v33 = &v22[-4 * (v32 & 0x7FFFFFF)]),
           *((unsigned __int8 *)*v33 + 16) <= 0x14u))
      && (v34 = llvm::ConstantFoldInstruction((uint64_t)v22, *(llvm::Type **)(a1 + 80), *(llvm::DSOLocalEquivalent ***)(a1 + 64))) != 0)
    {
      sub_1C577F888(a1, (llvm::ValueAsMetadata *)v22, v34);
      if (!v22[1])
      {
        if (llvm::wouldInstructionBeTriviallyDead((uint64_t)v22, *(uint64_t **)(a1 + 64)))
          sub_1C57813F4(a1, (uint64_t)v22);
      }
      *(_BYTE *)(a1 + 168) = 1;
    }
    else
    {
LABEL_461:
      if (!byte_1ED810B18)
        goto LABEL_101;
      v35 = v22[1];
      if (!v35)
        goto LABEL_101;
      v36 = 0;
      v37 = 0;
      v38 = (llvm::BasicBlock *)v22[5];
      do
      {
        v39 = (uint64_t)v35[3];
        if (!sub_1C4D9F8B4(v39) && !sub_1C509DDB0(v39))
        {
          if (v36 > dword_1ED810BD8)
            goto LABEL_101;
          if (v39 && *(_BYTE *)(v39 + 16) == 83)
          {
            v40 = *(_DWORD *)(v39 + 20);
            v41 = v40 & 0x7FFFFFF;
            if ((v40 & 0x7FFFFFF) != 0)
            {
              v42 = 0;
              v43 = 0;
              v44 = 32 * v41;
              v45 = v39 - 32 * v41;
              do
              {
                v46 = v45;
                if ((v40 & 0x40000000) != 0)
                  v46 = *(_QWORD *)(v39 - 8);
                if (*(uint64_t ****)(v46 + v43) == v22)
                {
                  if (v37)
                  {
                    v47 = v45;
                    if ((v40 & 0x40000000) != 0)
                      v47 = *(_QWORD *)(v39 - 8);
                    if (v37 != *(llvm::BasicBlock **)(v47 + 32 * *(unsigned int *)(v39 + 60) + v42))
                      goto LABEL_101;
                  }
                  v48 = v45;
                  if ((v40 & 0x40000000) != 0)
                    v48 = *(_QWORD *)(v39 - 8);
                  v37 = *(llvm::BasicBlock **)(v48 + 32 * *(unsigned int *)(v39 + 60) + v42);
                }
                v43 += 32;
                v42 += 8;
              }
              while (v44 != v43);
            }
LABEL_76:
            if (v36)
              goto LABEL_77;
          }
          else
          {
            if (v37)
            {
              if (v37 != *(llvm::BasicBlock **)(v39 + 40))
                goto LABEL_101;
              goto LABEL_76;
            }
            v37 = *(llvm::BasicBlock **)(v39 + 40);
            if (v36)
            {
LABEL_77:
              ++v36;
              goto LABEL_78;
            }
          }
          if (v37 == v38
            || !llvm::DominatorTreeBase<llvm::BasicBlock,false>::isReachableFromEntry(*(_QWORD *)(a1 + 72), (uint64_t)v37))
          {
            goto LABEL_101;
          }
          v49 = (_QWORD *)*((_QWORD *)v37 + 5);
          if (v49 == (_QWORD *)((char *)v37 + 40))
          {
            v51 = 0;
          }
          else
          {
            if (v49)
              v50 = v49 - 3;
            else
              v50 = 0;
            if (*((unsigned __int8 *)v50 + 16) - 29 >= 0xB)
              v51 = 0;
            else
              v51 = v50;
          }
          if ((llvm::BasicBlock *)llvm::BasicBlock::getUniquePredecessor(v37) != v38 && v51)
          {
            v52 = *((unsigned __int8 *)v51 + 16);
            if (v52 != 30)
              __asm { BR              X9 }
            goto LABEL_101;
          }
          goto LABEL_77;
        }
LABEL_78:
        v35 = (uint64_t **)v35[1];
      }
      while (v35);
      if (!v37)
        goto LABEL_101;
      v53 = *(uint64_t **)(a1 + 64);
      v54 = v22[5];
      v55 = atomic_load((unsigned __int8 *)qword_1ED810A90);
      if ((v55 & 1) == 0 && __cxa_guard_acquire(qword_1ED810A90))
      {
        byte_1ED810A88 = 0;
        __cxa_guard_release(qword_1ED810A90);
      }
      v56 = *((unsigned __int8 *)v22 + 16);
      if (byte_1ED810A88)
      {
        if (v56 == 60)
          goto LABEL_101;
      }
      v57 = v56 - 38;
      if (v57 <= 0x38 && ((1 << v57) & 0x100260000000001) != 0)
        goto LABEL_101;
      if ((llvm::Instruction::mayThrow((llvm::Instruction *)v22) & 1) != 0)
        goto LABEL_101;
      if (!llvm::Instruction::willReturn((llvm::Instruction *)v22))
        goto LABEL_101;
      v128 = *((unsigned __int8 *)v22 + 16);
      if (v128 == 59 || (v128 - 29) < 0xB)
        goto LABEL_101;
      v130 = (_QWORD *)((char *)v37 + 40);
      v129 = *((_QWORD *)v37 + 5);
      if (v129)
        v131 = v129 - 24;
      else
        v131 = 0;
      if (*(unsigned __int8 *)(v131 + 16) - 29 >= 0xB)
        v131 = 0;
      if (*(_BYTE *)(v131 + 16) == 38)
        goto LABEL_101;
      if (v128 == 84)
      {
        v132 = v22[8];
        if (v132 && (*((_BYTE *)v132 + 12) & 0x40) != 0
          || (llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)v22, 6) & 1) != 0)
        {
          goto LABEL_101;
        }
        v128 = *((unsigned __int8 *)v22 + 16);
      }
      v133 = (v128 - 33);
      if (v133 <= 0x37)
      {
        if (((1 << (v128 - 33)) & 0x8000000000041) != 0)
        {
          v244 = v22[8];
          if (!v244 || (*((_BYTE *)v244 + 17) & 0x30) == 0)
          {
            v245 = *((_DWORD *)v22 + 5);
            if (v245 < 0)
            {
              v264 = &v22[-4 * (v245 & 0x7FFFFFF)];
              v267 = (uint64_t)*(v264 - 1);
              v265 = v264 - 1;
              v266 = v267;
              if (v267)
              {
                v268 = -v266;
                do
                {
                  v269 = (*(_DWORD **)((char *)v265 + v268))[2];
                  v125 = v269 > 7;
                  v270 = (1 << v269) & 0x83;
                  if (v125 || v270 == 0)
                    goto LABEL_402;
                  v268 += 16;
                }
                while (v268);
              }
            }
            if ((llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)v22, 45) & 1) == 0
              && (llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)v22, 44) & 1) == 0)
            {
              v128 = *((unsigned __int8 *)v22 + 16);
              goto LABEL_402;
            }
          }
        }
        else if (v133 == 27)
        {
          if ((*((_WORD *)v22 + 9) & 0x301) != 0)
            goto LABEL_101;
        }
        else
        {
          if (((1 << (v128 - 33)) & 0x808001D0000010) == 0)
            goto LABEL_220;
LABEL_402:
          v246 = v128 - 33;
          if (v246 > 0x33)
            goto LABEL_101;
          if (((1 << v246) & 0x8000000000041) == 0)
            goto LABEL_101;
          llvm::MemoryLocation::getForDest((uint64_t)v22, v53, (uint64_t)&v289);
          if (!v291[32])
            goto LABEL_101;
          UnderlyingObject = llvm::getUnderlyingObject(v289, (const llvm::Value *)6);
          if (!UnderlyingObject || *((_BYTE *)UnderlyingObject + 16) != 59)
            goto LABEL_101;
          v274 = v276;
          v275 = 0x600000000;
          v285 = (unint64_t)v288;
          v286.i64[0] = (uint64_t)v288;
          v286.i64[1] = 4;
          v287 = 0;
          for (i = *((_QWORD *)UnderlyingObject + 1); i; i = *(_QWORD *)(i + 8))
          {
            v249 = *(_QWORD *)(i + 24);
            sub_1C4774094((llvm::SmallPtrSetImplBase *)&v285, v249);
            if (v250)
            {
              v251 = v275;
              if (v275 >= (unint64_t)HIDWORD(v275))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v274, (uint64_t)v276, v275 + 1, 8);
                v251 = v275;
              }
              *((_QWORD *)v274 + v251) = v249;
              LODWORD(v275) = v275 + 1;
            }
          }
LABEL_417:
          v252 = v275;
          v253 = v274;
          do
          {
            v254 = v252;
            if (!v252)
              break;
            v255 = *((_QWORD *)v274 + --v252);
            LODWORD(v275) = v254 - 1;
            v256 = *(unsigned __int8 *)(v255 + 16) - 62;
            v125 = v256 > 0x10;
            v257 = (1 << v256) & 0x18001;
            if (!v125 && v257 != 0)
            {
              for (j = *(_QWORD *)(v255 + 8); j; j = *(_QWORD *)(j + 8))
              {
                v260 = *(_QWORD *)(j + 24);
                sub_1C4774094((llvm::SmallPtrSetImplBase *)&v285, v260);
                if (v261)
                {
                  v262 = v275;
                  if (v275 >= (unint64_t)HIDWORD(v275))
                  {
                    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v274, (uint64_t)v276, v275 + 1, 8);
                    v262 = v275;
                  }
                  *((_QWORD *)v274 + v262) = v260;
                  LODWORD(v275) = v275 + 1;
                }
              }
              goto LABEL_417;
            }
          }
          while ((uint64_t ***)v255 == v22);
          if (v286.i64[0] != v285)
          {
            free((void *)v286.i64[0]);
            v253 = v274;
          }
          if (v253 != v276)
            free(v253);
          if (v254)
            goto LABEL_101;
        }
        v128 = *((unsigned __int8 *)v22 + 16);
      }
LABEL_220:
      v134 = (v128 - 33);
      if (v134 > 0x37)
        goto LABEL_224;
      if (((1 << v134) & 0x8000000000041) != 0)
      {
        v226 = v22[8];
        if (!v226 || (*((_BYTE *)v226 + 20) & 4) == 0 && (*((_BYTE *)v226 + 17) & 0x10) == 0)
        {
          LODWORD(v274) = 7;
          if (sub_1C53E4BBC((uint64_t)v22, (__int32 *)&v274, 1uLL))
          {
            v263 = (uint64_t)*(v22 - 4);
            if (!v263 || *(_BYTE *)(v263 + 16) || *(uint64_t ***)(v263 + 24) != v22[9] || *(_DWORD *)(v263 + 36) != 7)
              goto LABEL_368;
          }
          if ((llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)v22, 66) & 1) == 0
            && (llvm::CallBase::hasFnAttrOnCalledFunction((uint64_t)v22, 44) & 1) == 0)
          {
            goto LABEL_368;
          }
        }
LABEL_224:
        v274 = v37;
        llvm::Value::dropDroppableUses((uint64_t)v22, (unsigned int (*)(uint64_t, uint64_t))sub_1C578EEB0, (uint64_t)&v274);
        v135 = (_QWORD *)*((_QWORD *)v37 + 6);
        if (v135 != v130)
        {
          while (1)
          {
            v136 = v135 - 3;
            if (!v135)
              v136 = 0;
            if (*((_BYTE *)v136 + 16) != 83)
              break;
            v135 = (_QWORD *)v135[1];
            if (v135 == v130)
              goto LABEL_281;
          }
          v171 = *((unsigned __int8 *)v135 - 8) - 38;
          v125 = v171 > 0x38;
          v172 = (1 << v171) & 0x100060000000001;
          if (v125 || v172 == 0)
            v130 = v135;
          else
            v130 = (_QWORD *)v135[1];
        }
LABEL_281:
        if (v130)
          v174 = v130 - 3;
        else
          v174 = 0;
        llvm::Instruction::moveBefore((llvm::Instruction *)v22, (llvm::Instruction *)v174);
        v289 = (llvm *)v291;
        v290 = 0x200000000;
        llvm::findDbgUsers((uint64_t)&v289, (uint64_t)v22);
        v175 = v284;
        v282 = v284;
        v283 = 0x200000000;
        v176 = (uint64_t *)v284;
        if (!(_DWORD)v290)
          goto LABEL_293;
        v177 = 0;
        v178 = v289;
        v179 = 8 * v290;
        do
        {
          v180 = *(_QWORD *)v178;
          if (*(uint64_t ***)(*(_QWORD *)v178 + 40) == v54)
          {
            if (v177 >= HIDWORD(v283))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v282, (uint64_t)v284, v177 + 1, 8);
              v177 = v283;
            }
            *((_QWORD *)v282 + v177) = v180;
            v177 = v283 + 1;
            LODWORD(v283) = v283 + 1;
          }
          v178 = (llvm *)((char *)v178 + 8);
          v179 -= 8;
        }
        while (v179);
        v175 = v282;
        v176 = (uint64_t *)((char *)v282 + 8 * v177);
        if (v177)
          v181 = 126 - 2 * __clz(v177);
        else
LABEL_293:
          v181 = 0;
        sub_1C578EEE0((unint64_t)v175, v176, v181, 1);
        v279 = v281;
        v280 = 0x200000000;
        v274 = v276;
        v275 = 0x400000000;
        v278[0] = 0;
        v278[1] = 0;
        v277 = v278;
        if ((_DWORD)v283)
        {
          v182 = (uint64_t *)v282;
          v183 = 8 * v283;
          do
          {
            v184 = *v182;
            if (*(_DWORD *)(*(_QWORD *)(*v182 - 32) + 36) != 56)
            {
              v185 = *(_QWORD *)(v184 + 48);
              v186 = *(_DWORD *)(v185 + 8) == 2 ? *(_QWORD *)(v185 - 8) : 0;
              v187 = v184 - 32 * (*(_DWORD *)(v184 + 20) & 0x7FFFFFF);
              v188 = *(_QWORD *)(*(_QWORD *)(v187 + 32) + 24);
              v189 = *(_QWORD *)(*(_QWORD *)(v187 + 64) + 24);
              v285 = v188;
              if (v189)
              {
                llvm::DIExpression::getFragmentInfo(*(uint64_t **)(v189 + 24), *(uint64_t **)(v189 + 32), &v286);
              }
              else
              {
                v286.i8[0] = 0;
                LOBYTE(v287) = 0;
              }
              v288[0] = v186;
              if ((sub_1C52FC1E8((uint64_t)&v274, &v285) & 0x100000000) != 0)
              {
                llvm::Instruction::clone((llvm::Instruction *)v184);
                v191 = v190;
                v192 = v280;
                if (v280 >= HIDWORD(v280))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v279, (uint64_t)v281, v280 + 1, 8);
                  *((_QWORD *)v279 + v280) = v191;
                  v192 = v280;
                }
                else
                {
                  *((_QWORD *)v279 + v280) = v190;
                }
                v193 = v192 + 1;
                LODWORD(v280) = v193;
                if (*(_DWORD *)(*(_QWORD *)(v184 - 32) + 36) == 56
                  && *((unsigned __int8 *)v22 + 16) - 66 <= 0xC)
                {
                  v194 = *((_DWORD *)v22 + 5);
                  if ((v194 & 0x40000000) != 0)
                    v195 = (llvm::Value **)*(v22 - 1);
                  else
                    v195 = (llvm::Value **)&v22[-4 * (v194 & 0x7FFFFFF)];
                  llvm::DbgVariableIntrinsic::replaceVariableLocationOp(*((llvm::DbgVariableIntrinsic **)v279 + v193 - 1), (llvm::Value *)v22, *v195);
                }
              }
            }
            ++v182;
            v183 -= 8;
          }
          while (v183);
          if ((_DWORD)v280)
          {
            llvm::salvageDebugInfoForDbgValues((llvm::CastInst *)v22, (uint64_t *)v289, v290);
            if ((_DWORD)v280)
            {
              v196 = v174 + 3;
              v197 = 8 * v280;
              v198 = (char *)v279 - 8;
              do
              {
                v199 = *(_QWORD *)&v198[v197];
                v200 = v174[5];
                *(_QWORD *)(v199 + 40) = v200;
                *(_WORD *)(v200 + 18) &= ~0x8000u;
                if ((*(_BYTE *)(v199 + 23) & 0x10) != 0)
                {
                  v203 = *(_QWORD *)(v200 + 56);
                  if (v203)
                  {
                    v204 = *(llvm::ValueSymbolTable **)(v203 + 104);
                    if (v204)
                      llvm::ValueSymbolTable::reinsertValue(v204, (llvm::Value *)v199);
                  }
                }
                v201 = *v196;
                *(_QWORD *)(v199 + 24) = *v196;
                *(_QWORD *)(v199 + 32) = v196;
                v202 = v199 + 24;
                *(_QWORD *)(v201 + 8) = v202;
                *v196 = v202;
                v197 -= 8;
              }
              while (v197);
            }
          }
        }
        sub_1C61247C0((uint64_t)&v277, v278[0]);
        if (v274 != v276)
          free(v274);
        if (v279 != v281)
          free(v279);
        if (v282 != v284)
          free(v282);
        if (v289 != (llvm *)v291)
          free(v289);
        *(_BYTE *)(a1 + 168) = 1;
        v205 = *((_DWORD *)v22 + 5);
        if ((v205 & 0x40000000) != 0)
        {
          v207 = (void **)*(v22 - 1);
          v206 = v205 & 0x7FFFFFF;
        }
        else
        {
          v206 = v205 & 0x7FFFFFF;
          v207 = (void **)&v22[-4 * v206];
        }
        if (!v206)
          goto LABEL_101;
        v208 = &v207[4 * v206];
        while (2)
        {
          v209 = *v207;
          if (*v207)
            v210 = *((unsigned __int8 *)*v207 + 16) >= 0x1Cu;
          else
            v210 = 0;
          if (v210)
          {
            v211 = *(_QWORD *)(a1 + 32);
            v212 = *(_DWORD *)(v211 + 8);
            v274 = *v207;
            LODWORD(v275) = v212;
            v213 = *(_DWORD *)(v211 + 2080);
            if (v213)
            {
              v214 = *(_QWORD *)(v211 + 2064);
              v215 = v213 - 1;
              v216 = v215 & ((v209 >> 4) ^ (v209 >> 9));
              v217 = (_QWORD *)(v214 + 16 * v216);
              v218 = (void *)*v217;
              if ((void *)*v217 == v209)
                goto LABEL_359;
              v219 = 0;
              v220 = 1;
              while (v218 != (void *)-4096)
              {
                if (v219)
                  v221 = 0;
                else
                  v221 = v218 == (void *)-8192;
                if (v221)
                  v219 = v217;
                v222 = v216 + v220++;
                v216 = v222 & v215;
                v217 = (_QWORD *)(v214 + 16 * v216);
                v218 = (void *)*v217;
                if ((void *)*v217 == v209)
                  goto LABEL_359;
              }
              if (v219)
                v223 = v219;
              else
                v223 = v217;
            }
            else
            {
              v223 = 0;
            }
            v224 = sub_1C4D8D8F4((_DWORD *)(v211 + 2064), (uint64_t)&v274, (uint64_t *)&v274, v223);
            *v224 = v274;
            *((_DWORD *)v224 + 2) = v275;
            v225 = *(unsigned int *)(v211 + 8);
            if (v225 >= *(unsigned int *)(v211 + 12))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod(v211, v211 + 16, v225 + 1, 8);
              v225 = *(unsigned int *)(v211 + 8);
            }
            *(_QWORD *)(*(_QWORD *)v211 + 8 * v225) = v209;
            ++*(_DWORD *)(v211 + 8);
          }
LABEL_359:
          v207 += 4;
          if (v207 == v208)
            goto LABEL_101;
          continue;
        }
      }
      if (((1 << v134) & 0x808001C8000010) == 0 && (v134 != 28 || (*((_WORD *)v22 + 9) & 0x301) == 0))
        goto LABEL_224;
LABEL_368:
      UniquePredecessor = llvm::BasicBlock::getUniquePredecessor(v37);
      if ((uint64_t **)UniquePredecessor != v22[5])
        goto LABEL_101;
      v228 = v22[4];
      v229 = UniquePredecessor + 40;
      if (v228 == (uint64_t **)(UniquePredecessor + 40))
        goto LABEL_224;
      v273 = UniquePredecessor + 40;
      while (1)
      {
        if (v228)
          v230 = (uint64_t)(v228 - 3);
        else
          v230 = 0;
        v231 = *(unsigned __int8 *)(v230 + 16) - 33;
        if (v231 > 0x37)
          goto LABEL_378;
        if (((1 << (*(_BYTE *)(v230 + 16) - 33)) & 0x8000000000041) == 0)
        {
          if (v231 == 27)
          {
            if ((*(_WORD *)(v230 + 18) & 0x301) != 0)
              goto LABEL_101;
          }
          else if (((1 << (*(_BYTE *)(v230 + 16) - 33)) & 0x808001D0000010) != 0)
          {
            goto LABEL_101;
          }
          goto LABEL_378;
        }
        v232 = *(_QWORD *)(v230 + 64);
        if (v232 && (*(_BYTE *)(v232 + 17) & 0x30) != 0)
          goto LABEL_378;
        v233 = *(_DWORD *)(v230 + 20);
        if (v233 < 0)
        {
          v236 = v230 - 32 * (v233 & 0x7FFFFFF);
          v239 = *(_QWORD *)(v236 - 8);
          v237 = v236 - 8;
          v238 = v239;
          if (v239)
            break;
        }
LABEL_383:
        hasFnAttrOnCalledFunction = llvm::CallBase::hasFnAttrOnCalledFunction(v230, 45);
        v229 = v273;
        if ((hasFnAttrOnCalledFunction & 1) == 0)
        {
          v235 = llvm::CallBase::hasFnAttrOnCalledFunction(v230, 44);
          v229 = v273;
          if (!v235)
            goto LABEL_101;
        }
LABEL_378:
        v228 = (uint64_t **)v228[1];
        if (v228 == (uint64_t **)v229)
          goto LABEL_224;
      }
      v240 = -v238;
      while (1)
      {
        v241 = *(_DWORD *)(*(_QWORD *)(v237 + v240) + 8);
        v125 = v241 > 7;
        v242 = (1 << v241) & 0x83;
        if (v125 || v242 == 0)
          break;
        v240 += 16;
        if (!v240)
          goto LABEL_383;
      }
LABEL_101:
      v58 = *(_QWORD *)(a1 + 24);
      v59 = (uint64_t *)(v22 + 3);
      *(_QWORD *)(v58 + 48) = v22[5];
      *(_QWORD *)(v58 + 56) = v22 + 3;
      v60 = v22[6];
      v274 = v60;
      if (v60)
      {
        llvm::MetadataTracking::track((uint64_t)&v274, (unsigned __int8 *)v60, 2);
        v61 = v274;
      }
      else
      {
        v61 = 0;
      }
      sub_1C4774EF4(v58, 0, (uint64_t)v61);
      if (v274)
        llvm::MetadataTracking::untrack((uint64_t)&v274, (unsigned __int8 *)v274);
      v62 = 0;
      v63 = 0;
      v64 = *(_QWORD *)(a1 + 24);
      v285 = 0x1E00000000;
      v65 = v24 ^ (v22 >> 9);
      while (2)
      {
        v66 = v62;
        v67 = *((_DWORD *)&v285 + v63);
        v68 = (uint64_t)v22[6];
        if (!v68 && (*((_BYTE *)v22 + 23) & 0x20) == 0)
        {
LABEL_108:
          v68 = 0;
          goto LABEL_109;
        }
        if (v67)
        {
          if ((*((_BYTE *)v22 + 23) & 0x20) == 0)
            goto LABEL_108;
          v69 = ***v22;
          v274 = v22;
          v70 = *(_DWORD *)(v69 + 2496);
          if (!v70)
          {
            v83 = 0;
            goto LABEL_132;
          }
          v71 = *(_QWORD *)(v69 + 2480);
          v72 = v70 - 1;
          v73 = v72 & v65;
          v74 = (_QWORD *)(v71 + 40 * (v72 & v65));
          v75 = (_QWORD ***)*v74;
          if ((uint64_t ***)*v74 != v22)
          {
            v76 = 0;
            v77 = 1;
            while (v75 != (_QWORD ***)-4096)
            {
              if (v76)
                v78 = 0;
              else
                v78 = v75 == (_QWORD ***)-8192;
              if (v78)
                v76 = v74;
              v79 = v73 + v77++;
              v73 = v79 & v72;
              v74 = (_QWORD *)(v71 + 40 * v73);
              v75 = (_QWORD ***)*v74;
              if ((uint64_t ***)*v74 == v22)
                goto LABEL_123;
            }
            if (v76)
              v83 = v76;
            else
              v83 = v74;
LABEL_132:
            v74 = sub_1C541AB24(v69 + 2480, (uint64_t)&v274, (uint64_t *)&v274, v83);
            v84 = v274;
            v74[4] = 0;
            v74[3] = 0;
            *v74 = v84;
            v74[1] = v74 + 3;
            v74[2] = 0x100000000;
          }
LABEL_123:
          v80 = *((unsigned int *)v74 + 4);
          if (!(_DWORD)v80)
            goto LABEL_108;
          v81 = (uint64_t *)(v74[1] + 8);
          v82 = 16 * v80;
          while (*((_DWORD *)v81 - 2) != v67)
          {
            v68 = 0;
            v81 += 2;
            v82 -= 16;
            if (!v82)
              goto LABEL_109;
          }
          v68 = *v81;
        }
LABEL_109:
        sub_1C4774EF4(v64, v67, v68);
        v62 = 1;
        v63 = 1;
        if ((v66 & 1) == 0)
          continue;
        break;
      }
      sub_1C578A5A4(a1, (uint64_t)v22);
      if (!v85)
        continue;
      v86 = v85;
      if ((uint64_t ***)v85 != v22)
      {
        v274 = (void *)0x1E00000000;
        llvm::Instruction::copyMetadata(v85, (uint64_t)v22, (int *)&v274, 2);
        llvm::Value::doRAUW((llvm::ValueAsMetadata *)v22, (llvm::Value *)v86, (llvm::Value *)1);
        llvm::Value::takeName((llvm::Value *)v86, (llvm::Value *)v22);
        v87 = v22[5];
        v88 = *((unsigned __int8 *)v22 + 16);
        if ((*(_BYTE *)(v86 + 16) == 83) != (v88 == 83))
        {
          v59 = (uint64_t *)(v87 + 5);
          v89 = v87[6];
          if (v88 == 83)
          {
            while (v89 != v59)
            {
              v90 = v89 - 3;
              if (!v89)
                v90 = 0;
              if (*((_BYTE *)v90 + 16) != 83)
              {
                v124 = *((unsigned __int8 *)v89 - 8) - 38;
                v125 = v124 > 0x38;
                v126 = (1 << v124) & 0x100060000000001;
                if (v125 || v126 == 0)
                  v59 = v89;
                else
                  v59 = (uint64_t *)v89[1];
                break;
              }
              v89 = (uint64_t *)v89[1];
            }
          }
          else
          {
            while (v89 != v59)
            {
              v91 = v89 - 3;
              if (v89)
                v92 = v89 - 3;
              else
                v92 = 0;
              if (*((_BYTE *)v92 + 16) != 83)
                goto LABEL_231;
              v89 = (uint64_t *)v89[1];
            }
            v91 = 0;
LABEL_231:
            v59 = v91 + 3;
          }
        }
        *(_QWORD *)(v86 + 40) = v87;
        *((_WORD *)v87 + 9) &= ~0x8000u;
        if ((*(_BYTE *)(v86 + 23) & 0x10) != 0)
        {
          v169 = v87[7];
          if (v169)
          {
            v170 = (llvm::ValueSymbolTable *)v169[13];
            if (v170)
              llvm::ValueSymbolTable::reinsertValue(v170, (llvm::Value *)v86);
          }
        }
        v137 = *v59;
        *(_QWORD *)(v86 + 24) = *v59;
        *(_QWORD *)(v86 + 32) = v59;
        *(_QWORD *)(v137 + 8) = v86 + 24;
        *v59 = v86 + 24;
        v138 = *(_QWORD *)(a1 + 32);
        v139 = *(_QWORD *)(v86 + 8);
        if (v139)
        {
          while (2)
          {
            v140 = *(void **)(v139 + 24);
            v141 = *(_DWORD *)(v138 + 8);
            v274 = v140;
            LODWORD(v275) = v141;
            v142 = *(_DWORD *)(v138 + 2080);
            if (v142)
            {
              v143 = *(_QWORD *)(v138 + 2064);
              v144 = v142 - 1;
              v145 = v144 & ((v140 >> 4) ^ (v140 >> 9));
              v146 = (_QWORD *)(v143 + 16 * v145);
              v147 = (void *)*v146;
              if ((void *)*v146 != v140)
              {
                v148 = 0;
                v149 = 1;
                while (v147 != (void *)-4096)
                {
                  if (v148)
                    v150 = 0;
                  else
                    v150 = v147 == (void *)-8192;
                  if (v150)
                    v148 = v146;
                  v151 = v145 + v149++;
                  v145 = v151 & v144;
                  v146 = (_QWORD *)(v143 + 16 * v145);
                  v147 = (void *)*v146;
                  if ((void *)*v146 == v140)
                    goto LABEL_251;
                }
                if (v148)
                  v152 = v148;
                else
                  v152 = v146;
LABEL_248:
                v153 = sub_1C4D8D8F4((_DWORD *)(v138 + 2064), (uint64_t)&v274, (uint64_t *)&v274, v152);
                *v153 = v274;
                *((_DWORD *)v153 + 2) = v275;
                v154 = *(unsigned int *)(v138 + 8);
                if (v154 >= *(unsigned int *)(v138 + 12))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod(v138, v138 + 16, v154 + 1, 8);
                  v154 = *(unsigned int *)(v138 + 8);
                }
                *(_QWORD *)(*(_QWORD *)v138 + 8 * v154) = v140;
                ++*(_DWORD *)(v138 + 8);
              }
LABEL_251:
              v139 = *(_QWORD *)(v139 + 8);
              if (!v139)
              {
                v138 = *(_QWORD *)(a1 + 32);
                goto LABEL_254;
              }
              continue;
            }
            break;
          }
          v152 = 0;
          goto LABEL_248;
        }
LABEL_254:
        v155 = *(_DWORD *)(v138 + 8);
        v274 = (void *)v86;
        LODWORD(v275) = v155;
        v156 = *(_DWORD *)(v138 + 2080);
        if (!v156)
        {
          v166 = 0;
          goto LABEL_268;
        }
        v157 = *(_QWORD *)(v138 + 2064);
        v158 = v156 - 1;
        v159 = v158 & ((v86 >> 4) ^ (v86 >> 9));
        v160 = (_QWORD *)(v157 + 16 * v159);
        v161 = *v160;
        if (*v160 != v86)
        {
          v162 = 0;
          v163 = 1;
          while (v161 != -4096)
          {
            if (v162)
              v164 = 0;
            else
              v164 = v161 == -8192;
            if (v164)
              v162 = v160;
            v165 = v159 + v163++;
            v159 = v165 & v158;
            v160 = (_QWORD *)(v157 + 16 * v159);
            v161 = *v160;
            if (*v160 == v86)
              goto LABEL_271;
          }
          if (v162)
            v166 = v162;
          else
            v166 = v160;
LABEL_268:
          v167 = sub_1C4D8D8F4((_DWORD *)(v138 + 2064), (uint64_t)&v274, (uint64_t *)&v274, v166);
          *v167 = v274;
          *((_DWORD *)v167 + 2) = v275;
          v168 = *(unsigned int *)(v138 + 8);
          if (v168 >= *(unsigned int *)(v138 + 12))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod(v138, v138 + 16, v168 + 1, 8);
            v168 = *(unsigned int *)(v138 + 8);
          }
          *(_QWORD *)(*(_QWORD *)v138 + 8 * v168) = v86;
          ++*(_DWORD *)(v138 + 8);
        }
LABEL_271:
        sub_1C57813F4(a1, (uint64_t)v22);
        goto LABEL_272;
      }
      v93 = v22[1];
      if (v93)
      {
        v94 = *(_QWORD *)(a1 + 32);
        goto LABEL_151;
      }
      if (llvm::wouldInstructionBeTriviallyDead((uint64_t)v22, *(uint64_t **)(a1 + 64)))
        goto LABEL_271;
      v93 = v22[1];
      v94 = *(_QWORD *)(a1 + 32);
      if (v93)
      {
LABEL_151:
        while (1)
        {
          v95 = v93[3];
          v96 = *(_DWORD *)(v94 + 8);
          v274 = v95;
          LODWORD(v275) = v96;
          v97 = *(_DWORD *)(v94 + 2080);
          if (!v97)
            break;
          v98 = *(_QWORD *)(v94 + 2064);
          v99 = v97 - 1;
          v100 = v99 & ((v95 >> 4) ^ (v95 >> 9));
          v101 = (_QWORD *)(v98 + 16 * v100);
          v102 = (void *)*v101;
          if ((uint64_t *)*v101 != v95)
          {
            v103 = 0;
            v104 = 1;
            while (v102 != (void *)-4096)
            {
              if (v103)
                v105 = 0;
              else
                v105 = v102 == (void *)-8192;
              if (v105)
                v103 = v101;
              v106 = v100 + v104++;
              v100 = v106 & v99;
              v101 = (_QWORD *)(v98 + 16 * v100);
              v102 = (void *)*v101;
              if ((uint64_t *)*v101 == v95)
                goto LABEL_168;
            }
            if (v103)
              v107 = v103;
            else
              v107 = v101;
            goto LABEL_165;
          }
LABEL_168:
          v93 = (uint64_t **)v93[1];
          if (!v93)
          {
            v94 = *(_QWORD *)(a1 + 32);
            goto LABEL_171;
          }
        }
        v107 = 0;
LABEL_165:
        v108 = sub_1C4D8D8F4((_DWORD *)(v94 + 2064), (uint64_t)&v274, (uint64_t *)&v274, v107);
        *v108 = v274;
        *((_DWORD *)v108 + 2) = v275;
        v109 = *(unsigned int *)(v94 + 8);
        if (v109 >= *(unsigned int *)(v94 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod(v94, v94 + 16, v109 + 1, 8);
          v109 = *(unsigned int *)(v94 + 8);
        }
        *(_QWORD *)(*(_QWORD *)v94 + 8 * v109) = v95;
        ++*(_DWORD *)(v94 + 8);
        goto LABEL_168;
      }
LABEL_171:
      v110 = *(_DWORD *)(v94 + 8);
      v274 = v22;
      LODWORD(v275) = v110;
      v111 = *(_DWORD *)(v94 + 2080);
      if (v111)
      {
        v112 = *(_QWORD *)(v94 + 2064);
        v113 = v111 - 1;
        v114 = v113 & v65;
        v115 = (uint64_t ****)(v112 + 16 * (v113 & v65));
        v116 = *v115;
        if (*v115 == v22)
          goto LABEL_272;
        v117 = 0;
        v118 = 1;
        while (v116 != (uint64_t ***)-4096)
        {
          if (v117)
            v119 = 0;
          else
            v119 = v116 == (uint64_t ***)-8192;
          if (v119)
            v117 = v115;
          v120 = v114 + v118++;
          v114 = v120 & v113;
          v115 = (uint64_t ****)(v112 + 16 * v114);
          v116 = *v115;
          if (*v115 == v22)
            goto LABEL_272;
        }
        if (v117)
          v121 = v117;
        else
          v121 = v115;
      }
      else
      {
        v121 = 0;
      }
      v122 = sub_1C4D8D8F4((_DWORD *)(v94 + 2064), (uint64_t)&v274, (uint64_t *)&v274, v121);
      *v122 = v274;
      *((_DWORD *)v122 + 2) = v275;
      v123 = *(unsigned int *)(v94 + 8);
      if (v123 >= *(unsigned int *)(v94 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(v94, v94 + 16, v123 + 1, 8);
        v123 = *(unsigned int *)(v94 + 8);
      }
      *(_QWORD *)(*(_QWORD *)v94 + 8 * v123) = v22;
      ++*(_DWORD *)(v94 + 8);
LABEL_272:
      *(_BYTE *)(a1 + 168) = 1;
    }
  }
  sub_1C4D8D8A8(&v2[258]);
  return *(unsigned __int8 *)(a1 + 168);
}

void sub_1C578A5A4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

llvm::UndefValue **sub_1C578A600()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1C5822AA4(v1, v0);
}

double llvm::InstCombinePass::InstCombinePass(llvm::InstCombinePass *this)
{
  uint64_t v1;
  int64x2_t v2;
  double result;

  *(_QWORD *)this = (char *)this + 16;
  *((_QWORD *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((_QWORD *)this + 261) = 1;
  v1 = 2096;
  v2 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v1) = v2;
    v1 += 16;
  }
  while (v1 != 2224);
  *((_QWORD *)this + 278) = (char *)this + 2240;
  *(_QWORD *)&result = 0x1000000000;
  *((_QWORD *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = dword_1ED8337E0;
  return result;
}

{
  uint64_t v1;
  int64x2_t v2;
  double result;

  *(_QWORD *)this = (char *)this + 16;
  *((_QWORD *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((_QWORD *)this + 261) = 1;
  v1 = 2096;
  v2 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v1) = v2;
    v1 += 16;
  }
  while (v1 != 2224);
  *((_QWORD *)this + 278) = (char *)this + 2240;
  *(_QWORD *)&result = 0x1000000000;
  *((_QWORD *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = dword_1ED8337E0;
  return result;
}

double llvm::InstCombinePass::InstCombinePass(llvm::InstCombinePass *this, int a2)
{
  uint64_t v2;
  int64x2_t v3;
  double result;

  *(_QWORD *)this = (char *)this + 16;
  *((_QWORD *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((_QWORD *)this + 261) = 1;
  v2 = 2096;
  v3 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v2) = v3;
    v2 += 16;
  }
  while (v2 != 2224);
  *((_QWORD *)this + 278) = (char *)this + 2240;
  *(_QWORD *)&result = 0x1000000000;
  *((_QWORD *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = a2;
  return result;
}

{
  uint64_t v2;
  int64x2_t v3;
  double result;

  *(_QWORD *)this = (char *)this + 16;
  *((_QWORD *)this + 1) = 0x10000000000;
  *((_OWORD *)this + 129) = 0u;
  *((_DWORD *)this + 520) = 0;
  *((_QWORD *)this + 261) = 1;
  v2 = 2096;
  v3 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v2) = v3;
    v2 += 16;
  }
  while (v2 != 2224);
  *((_QWORD *)this + 278) = (char *)this + 2240;
  *(_QWORD *)&result = 0x1000000000;
  *((_QWORD *)this + 279) = 0x1000000000;
  *((_DWORD *)this + 592) = a2;
  return result;
}

_QWORD *llvm::InstCombinePass::run@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t CachedResultImpl;
  uint64_t v12;
  uint64_t v13;
  uint64_t ResultImpl;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v21 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::AssumptionAnalysis::Key, a2) + 8;
  v20 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::DominatorTreeAnalysis::Key, a2) + 8;
  v8 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::TargetLibraryAnalysis::Key, a2) + 8;
  v9 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::OptimizationRemarkEmitterAnalysis::Key, a2) + 8;
  v10 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::TargetIRAnalysis::Key, a2) + 8;
  CachedResultImpl = llvm::AnalysisManager<llvm::Function>::getCachedResultImpl(a3, (uint64_t)&llvm::LoopAnalysis::Key, a2);
  if (CachedResultImpl)
    v12 = CachedResultImpl + 8;
  else
    v12 = 0;
  v13 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::AAManager::Key, a2) + 8;
  ResultImpl = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>,llvm::Function>::Key, a2);
  v15 = sub_1C4E60FE0((uint64_t *)(ResultImpl + 8), *(_QWORD *)(a2 + 40));
  v16 = v15;
  if (v15)
  {
    v17 = *(_QWORD *)(v15 + 8);
    if (v17)
      v17 = llvm::AnalysisManager<llvm::Function>::getResultImpl(a3, &llvm::BlockFrequencyAnalysis::Key, a2) + 8;
  }
  else
  {
    v17 = 0;
  }
  v18 = sub_1C578D40C(a2, a1, v13, v21, v8, v10, v20, v9, v17, v16, *(_DWORD *)(a1 + 2368), v12);
  *(_QWORD *)a4 = a4 + 32;
  *(_QWORD *)(a4 + 8) = a4 + 32;
  *(_QWORD *)(a4 + 16) = 2;
  *(_DWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 48) = a4 + 80;
  *(_QWORD *)(a4 + 56) = a4 + 80;
  *(_QWORD *)(a4 + 64) = 2;
  *(_DWORD *)(a4 + 72) = 0;
  if ((v18 & 1) != 0)
    return sub_1C4D8B5A8((llvm::SmallPtrSetImplBase *)a4, (uint64_t)&llvm::CFGAnalyses::SetKey);
  else
    return sub_1C4774094((llvm::SmallPtrSetImplBase *)a4, (uint64_t)&llvm::PreservedAnalyses::AllAnalysesKey);
}

uint64_t sub_1C578D40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12)
{
  llvm *v12;
  llvm::Function *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  llvm::DSOLocalEquivalent **v18;
  llvm::DSOLocalEquivalent **v19;
  uint64_t v20;
  llvm::Function *v21;
  llvm *v22;
  int v23;
  uint64_t v24;
  llvm::Type *v25;
  char v26;
  unsigned int v27;
  unsigned int v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t ***v38;
  uint64_t ***v39;
  int v40;
  uint64_t ***v41;
  llvm::UndefValue *v42;
  uint64_t **v43;
  uint64_t **v44;
  int v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  int v50;
  BOOL v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  int v57;
  BOOL v58;
  unsigned int v59;
  uint64_t v60;
  llvm::UndefValue *v61;
  _QWORD **v62;
  uint64_t **v63;
  _QWORD **v64;
  _QWORD **v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t *v68;
  int v69;
  BOOL v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  int v74;
  BOOL v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  unsigned int v83;
  uint64_t ****v84;
  uint64_t ***v85;
  uint64_t ****v86;
  int v87;
  BOOL v88;
  unsigned int v89;
  uint64_t v90;
  unsigned __int8 **v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  unsigned int v97;
  _QWORD *v98;
  _QWORD ***v99;
  _QWORD *v100;
  int v101;
  BOOL v102;
  unsigned int v103;
  uint64_t v104;
  unsigned __int8 **v105;
  uint64_t v106;
  unsigned __int8 *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 *v116;
  uint64_t ****v117;
  uint64_t ***v118;
  _QWORD *v119;
  void *v120;
  _QWORD *v121;
  llvm::Instruction *v122;
  BOOL v123;
  uint64_t v124;
  unsigned int v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  int v133;
  uint64_t *v134;
  uint64_t v135;
  int v136;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t i;
  llvm *v147;
  char *v148;
  llvm::BasicBlock *v149;
  uint64_t *v150;
  unint64_t v151;
  int v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unsigned int v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 *v162;
  char *v163;
  uint64_t *v164;
  char *v165;
  uint64_t *v166;
  int v167;
  int v168;
  uint64_t v169;
  int v170;
  unsigned int v171;
  _QWORD *v172;
  uint64_t v173;
  _QWORD *v174;
  int v175;
  BOOL v176;
  unsigned int v177;
  _QWORD *v178;
  _QWORD *v179;
  unint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  char v184;
  uint64_t (***v185)();
  uint64_t v186;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unsigned int v196;
  unsigned int v197;
  llvm *v198;
  _DWORD *v199;
  char *v200;
  _QWORD *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  int v205;
  _WORD v206[32];
  char *v207;
  char *v208;
  uint64_t v209;
  int v210;
  _BYTE v211[64];
  uint64_t v212;
  uint64_t v213;
  unsigned int v214;
  const char *v215;
  char *v216;
  uint64_t v217;
  int v218;
  _WORD v219[44];
  void *v220;
  uint64_t v221;
  _WORD v222[12];
  uint64_t (**v223)();
  __int128 v224;
  uint64_t (***v225)();
  void (**v226)(llvm::IRBuilderCallbackInserter *__hidden);
  uint64_t (**v227)();
  __int128 v228;
  uint64_t (***v229)();
  void *v230[2];
  _QWORD v231[10];
  int v232;
  __int16 v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD v237[2];
  void (**v238)(llvm::IRBuilderCallbackInserter *__hidden);
  uint64_t (**v239)();
  __int128 v240;
  uint64_t (***v241)();
  void *v242;
  uint64_t v243;
  _BYTE v244[1024];
  void *v245;
  uint64_t v246;
  _QWORD v247[3];
  char v248;
  uint64_t v249;
  uint64_t v250;
  llvm::DSOLocalEquivalent **v251;
  uint64_t v252;
  llvm::Type *v253;
  llvm::Type *v254;
  llvm::DSOLocalEquivalent **v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  __int16 v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;

  v12 = (llvm *)MEMORY[0x1E0C80A78](a1, a2, a3, a4);
  v194 = v15;
  v195 = v16;
  v193 = v17;
  v19 = v18;
  v191 = v20;
  v21 = v13;
  v22 = v12;
  v23 = a11;
  v265 = *MEMORY[0x1E0C80C00];
  v24 = **(_QWORD **)v12;
  v25 = (llvm::Type *)(*((_QWORD *)v12 + 5) + 272);
  v223 = &off_1E817D2F8;
  *(_QWORD *)&v224 = v13;
  if (dword_1ED8337E0 < a11)
    v23 = dword_1ED8337E0;
  v196 = v23;
  v192 = v14;
  *((_QWORD *)&v224 + 1) = v14;
  v225 = &v223;
  v229 = &v227;
  v228 = v224;
  v230[0] = v231;
  v230[1] = (void *)0x200000000;
  v231[6] = v24;
  v231[7] = v237;
  v231[8] = &v238;
  v231[9] = 0;
  v232 = 0;
  v233 = 512;
  v234 = 7;
  v231[5] = 0;
  v231[4] = 0;
  v236 = 0;
  v235 = 0;
  v237[0] = &unk_1E8135C10;
  v237[1] = v25;
  v241 = &v239;
  v238 = &off_1E8167568;
  v239 = &off_1E817D2F8;
  v240 = v224;
  v227 = &off_1E817D2F8;
  v226 = &off_1E8167568;
  if (dword_1ED810E18)
    v26 = llvm::LowerDbgDeclare(v12, v13);
  else
    v26 = 0;
  v27 = 0;
  v198 = v22;
  v200 = (char *)v22 + 72;
  v188 = (uint64_t)v21 + 16;
  v199 = (_DWORD *)((char *)v21 + 2064);
  v190 = (uint64_t)v21;
  do
  {
    v28 = v27 + 1;
    if (v28 > dword_1ED810C98)
    {
      v215 = "Instruction Combining seems stuck in an infinite loop after ";
      v219[0] = 259;
      v206[0] = 264;
      LODWORD(v202) = dword_1ED810C98;
      sub_1C6131AAC((uint64_t *)&v215, (uint64_t *)&v202, (uint64_t)&v242);
      v220 = " iterations.";
      v222[8] = 259;
      sub_1C6131AAC((uint64_t *)&v242, (uint64_t *)&v220, (uint64_t)&v245);
      llvm::report_fatal_error((uint64_t)&v245, 1);
    }
    v29 = v26;
    if (v28 > v196)
      goto LABEL_279;
    v189 = v26;
    v197 = v28;
    v30 = 0;
    v215 = (const char *)v219;
    v216 = (char *)v219;
    v217 = 32;
    v218 = 0;
    v245 = v247;
    v31 = *((_QWORD *)v198 + 10);
    v51 = v31 == 0;
    v32 = v31 - 24;
    if (v51)
      v32 = 0;
    v247[0] = v32;
    v246 = 0x10000000001;
    v242 = v244;
    v243 = 0x8000000000;
    v212 = 0;
    v213 = 0;
    v214 = 0;
    v202 = (char *)v206;
    v203 = (char *)v206;
    v204 = 8;
    v205 = 0;
    v207 = v211;
    v208 = v211;
    v209 = 8;
    v33 = 1;
    v210 = 0;
    do
    {
      while (1)
      {
        v34 = *((_QWORD *)v245 + v33 - 1);
        LODWORD(v246) = v33 - 1;
        sub_1C4774094((llvm::SmallPtrSetImplBase *)&v215, v34);
        if (v35)
          break;
LABEL_198:
        v33 = v246;
        if (!(_DWORD)v246)
          goto LABEL_212;
      }
      v36 = (_QWORD *)(v34 + 40);
      v37 = *(_QWORD **)(v34 + 48);
      v201 = (_QWORD *)(v34 + 40);
      while (v37 != v36)
      {
        v38 = (uint64_t ***)(v37 - 3);
        v51 = v37 == 0;
        v37 = (_QWORD *)v37[1];
        if (v51)
          v39 = 0;
        else
          v39 = v38;
        if (v39[1])
        {
          v40 = *((_DWORD *)v39 + 5);
          if ((v40 & 0x7FFFFFF) == 0
            || ((v40 & 0x40000000) != 0 ? (v41 = (uint64_t ***)*(v39 - 1)) : (v41 = &v39[-4 * (v40 & 0x7FFFFFF)]),
                *((unsigned __int8 *)*v41 + 16) <= 0x14u))
          {
            v42 = llvm::ConstantFoldInstruction((uint64_t)v39, v25, v19);
            if (v42)
            {
              v30 = 1;
              llvm::Value::doRAUW((llvm::ValueAsMetadata *)v39, v42, (llvm::Value *)1);
              if (!v39[1])
              {
                if (llvm::wouldInstructionBeTriviallyDead((uint64_t)v39, (uint64_t *)v19))
                {
                  llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList((uint64_t)(v39[5] + 5), v39);
                  v43 = v39[3];
                  v44 = v39[4];
                  *v44 = (uint64_t *)v43;
                  v43[1] = (uint64_t *)v44;
                  v39[3] = 0;
                  v39[4] = 0;
                  llvm::Value::deleteValue((llvm::Value *)v39);
                }
              }
              goto LABEL_100;
            }
          }
        }
        v45 = *((_DWORD *)v39 + 5);
        if ((v45 & 0x40000000) != 0)
        {
          v47 = (uint64_t *)*(v39 - 1);
          v46 = v45 & 0x7FFFFFF;
        }
        else
        {
          v46 = v45 & 0x7FFFFFF;
          v47 = (uint64_t *)&v39[-4 * v46];
        }
        v48 = &v47[4 * v46];
        if (v46)
        {
          while (1)
          {
            v49 = *v47;
            v50 = *(unsigned __int8 *)(*v47 + 16);
            v51 = v50 == 10 || v50 == 5;
            if (v51)
              break;
LABEL_67:
            v47 += 4;
            if (v47 == v48)
              goto LABEL_95;
          }
          v52 = v49 >> 4;
          if (!v214)
          {
            v54 = 0;
            goto LABEL_50;
          }
          v53 = (v214 - 1) & (v52 ^ (v49 >> 9));
          v54 = (uint64_t *)(v212 + 16 * v53);
          v55 = *v54;
          if (v49 != *v54)
          {
            v56 = 0;
            v57 = 1;
            while (v55 != -4096)
            {
              if (v56)
                v58 = 0;
              else
                v58 = v55 == -8192;
              if (v58)
                v56 = v54;
              v59 = v53 + v57++;
              v53 = v59 & (v214 - 1);
              v54 = (uint64_t *)(v212 + 16 * v53);
              v55 = *v54;
              if (v49 == *v54)
                goto LABEL_56;
            }
            if (v56)
              v54 = v56;
LABEL_50:
            if (4 * (int)v213 + 4 < 3 * v214)
            {
              if (v214 + ~(_DWORD)v213 - HIDWORD(v213) > v214 >> 3)
                goto LABEL_52;
              sub_1C4964094((uint64_t)&v212, v214);
              if (v214)
              {
                v72 = (v214 - 1) & (v52 ^ (v49 >> 9));
                v54 = (uint64_t *)(v212 + 16 * v72);
                v73 = *v54;
                if (*v54 != v49)
                {
                  v68 = 0;
                  v74 = 1;
                  while (v73 != -4096)
                  {
                    if (v68)
                      v75 = 0;
                    else
                      v75 = v73 == -8192;
                    if (v75)
                      v68 = v54;
                    v76 = v72 + v74++;
                    v72 = v76 & (v214 - 1);
                    v54 = (uint64_t *)(v212 + 16 * v72);
                    v73 = *v54;
                    if (*v54 == v49)
                      goto LABEL_52;
                  }
                  goto LABEL_91;
                }
              }
              else
              {
                v54 = 0;
              }
              goto LABEL_52;
            }
            sub_1C4964094((uint64_t)&v212, 2 * v214);
            v66 = (v214 - 1) & (v52 ^ (v49 >> 9));
            v54 = (uint64_t *)(v212 + 16 * v66);
            v67 = *v54;
            if (v49 == *v54)
            {
LABEL_78:
              v60 = v49;
            }
            else
            {
              v68 = 0;
              v69 = 1;
              while (v67 != -4096)
              {
                if (v68)
                  v70 = 0;
                else
                  v70 = v67 == -8192;
                if (v70)
                  v68 = v54;
                v71 = v66 + v69++;
                v66 = v71 & (v214 - 1);
                v54 = (uint64_t *)(v212 + 16 * v66);
                v67 = *v54;
                if (v49 == *v54)
                  goto LABEL_78;
              }
LABEL_91:
              if (v68)
                v54 = v68;
LABEL_52:
              v60 = *v54;
            }
            LODWORD(v213) = v213 + 1;
            if (v60 != -4096)
              --HIDWORD(v213);
            *v54 = v49;
            v54[1] = 0;
          }
LABEL_56:
          v61 = (llvm::UndefValue *)v54[1];
          if (!v61)
          {
            v61 = llvm::ConstantFoldConstant(v49, v25, (uint64_t)v19);
            v54[1] = (uint64_t)v61;
          }
          if (v61 != (llvm::UndefValue *)v49)
          {
            if (*v47)
            {
              *(_QWORD *)v47[2] = v47[1];
              v62 = (_QWORD **)v47[1];
              if (v62)
                v62[2] = (_QWORD *)v47[2];
            }
            *v47 = (uint64_t)v61;
            if (v61)
            {
              v65 = (_QWORD **)*((_QWORD *)v61 + 1);
              v63 = (uint64_t **)((char *)v61 + 8);
              v64 = v65;
              v47[1] = (uint64_t)v65;
              if (v65)
                v64[2] = v47 + 1;
              v47[2] = (uint64_t)v63;
              *v63 = v47;
            }
            v30 = 1;
          }
          goto LABEL_67;
        }
LABEL_95:
        if (sub_1C4D99D08((uint64_t)v39) || sub_1C509DDB0((uint64_t)v39))
          goto LABEL_100;
        v77 = v243;
        if (v243 >= (unint64_t)HIDWORD(v243))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v242, (uint64_t)v244, v243 + 1, 8);
          v77 = v243;
        }
        *((_QWORD *)v242 + v77) = v39;
        LODWORD(v243) = v243 + 1;
        if ((*((_BYTE *)v39 + 23) & 0x20) == 0)
          goto LABEL_100;
        v78 = ***v39;
        v220 = v39;
        v79 = *(_DWORD *)(v78 + 2496);
        v80 = v39 >> 4;
        if (v79)
        {
          v81 = *(_QWORD *)(v78 + 2480);
          v82 = v79 - 1;
          v83 = v82 & (v80 ^ (v39 >> 9));
          v84 = (uint64_t ****)(v81 + 40 * v83);
          v85 = *v84;
          if (*v84 == v39)
            goto LABEL_111;
          v86 = 0;
          v87 = 1;
          while (v85 != (uint64_t ***)-4096)
          {
            if (v86)
              v88 = 0;
            else
              v88 = v85 == (uint64_t ***)-8192;
            if (v88)
              v86 = v84;
            v89 = v83 + v87++;
            v83 = v89 & v82;
            v84 = (uint64_t ****)(v81 + 40 * v83);
            v85 = *v84;
            if (*v84 == v39)
              goto LABEL_111;
          }
          if (v86)
            v117 = v86;
          else
            v117 = v84;
        }
        else
        {
          v117 = 0;
        }
        v84 = (uint64_t ****)sub_1C541AB24(v78 + 2480, (uint64_t)&v220, (uint64_t *)&v220, v117);
        v118 = (uint64_t ***)v220;
        v84[4] = 0;
        v84[3] = 0;
        *v84 = v118;
        v84[1] = (uint64_t ***)(v84 + 3);
        v84[2] = (uint64_t ***)0x100000000;
LABEL_111:
        v90 = *((unsigned int *)v84 + 4);
        if ((_DWORD)v90)
        {
          v91 = (unsigned __int8 **)(v84[1] + 1);
          v92 = 16 * v90;
          while (*((_DWORD *)v91 - 2) != 7)
          {
            v91 += 2;
            v92 -= 16;
            if (!v92)
              goto LABEL_115;
          }
          v107 = *v91;
          if (*v91)
          {
            if (*v107 - 4 <= 0x1E)
            {
              sub_1C4774094((llvm::SmallPtrSetImplBase *)&v202, (uint64_t)v107);
              if (v108)
              {
                v109 = *((unsigned int *)v107 + 2);
                if ((_DWORD)v109)
                {
                  v110 = -8 * v109;
                  do
                  {
                    v111 = *(unsigned __int8 **)&v107[v110];
                    if (*v111 - 4 <= 0x1E)
                      sub_1C4774094((llvm::SmallPtrSetImplBase *)&v202, (uint64_t)v111);
                    v110 += 8;
                  }
                  while (v110);
                }
              }
            }
          }
        }
LABEL_115:
        if ((*((_BYTE *)v39 + 23) & 0x20) != 0)
        {
          v93 = ***v39;
          v220 = v39;
          v94 = *(_DWORD *)(v93 + 2496);
          if (v94)
          {
            v95 = *(_QWORD *)(v93 + 2480);
            v96 = v94 - 1;
            v97 = v96 & (v80 ^ (v39 >> 9));
            v98 = (_QWORD *)(v95 + 40 * v97);
            v99 = (_QWORD ***)*v98;
            if ((uint64_t ***)*v98 != v39)
            {
              v100 = 0;
              v101 = 1;
              while (v99 != (_QWORD ***)-4096)
              {
                if (v100)
                  v102 = 0;
                else
                  v102 = v99 == (_QWORD ***)-8192;
                if (v102)
                  v100 = v98;
                v103 = v97 + v101++;
                v97 = v103 & v96;
                v98 = (_QWORD *)(v95 + 40 * v97);
                v99 = (_QWORD ***)*v98;
                if ((uint64_t ***)*v98 == v39)
                  goto LABEL_126;
              }
              if (v100)
                v119 = v100;
              else
                v119 = v98;
LABEL_156:
              v98 = sub_1C541AB24(v93 + 2480, (uint64_t)&v220, (uint64_t *)&v220, v119);
              v120 = v220;
              v98[4] = 0;
              v98[3] = 0;
              *v98 = v120;
              v98[1] = v98 + 3;
              v98[2] = 0x100000000;
            }
LABEL_126:
            v104 = *((unsigned int *)v98 + 4);
            if ((_DWORD)v104)
            {
              v105 = (unsigned __int8 **)(v98[1] + 8);
              v106 = 16 * v104;
              while (*((_DWORD *)v105 - 2) != 8)
              {
                v105 += 2;
                v106 -= 16;
                if (!v106)
                  goto LABEL_100;
              }
              v112 = *v105;
              if (*v105)
              {
                if (*v112 - 4 <= 0x1E)
                {
                  sub_1C4774094((llvm::SmallPtrSetImplBase *)&v207, (uint64_t)v112);
                  if (v113)
                  {
                    v114 = *((unsigned int *)v112 + 2);
                    if ((_DWORD)v114)
                    {
                      v115 = -8 * v114;
                      do
                      {
                        v116 = *(unsigned __int8 **)&v112[v115];
                        if (*v116 - 4 <= 0x1E)
                          sub_1C4774094((llvm::SmallPtrSetImplBase *)&v207, (uint64_t)v116);
                        v115 += 8;
                      }
                      while (v115);
                    }
                  }
                }
              }
            }
            goto LABEL_100;
          }
          v119 = 0;
          goto LABEL_156;
        }
LABEL_100:
        v36 = v201;
      }
      v121 = (_QWORD *)*v201;
      if ((_QWORD *)*v201 == v201)
      {
        v122 = 0;
        goto LABEL_191;
      }
      v122 = (llvm::Instruction *)(v121 - 3);
      v123 = v121 == 0;
      if (v121)
        v124 = (uint64_t)(v121 - 3);
      else
        v124 = 0;
      v125 = *(unsigned __int8 *)(v124 + 16) - 40;
      if (v125 >= 0xFFFFFFF5)
        v126 = v124;
      else
        v126 = 0;
      v127 = *(unsigned __int8 *)(v126 + 16);
      if (v125 < 0xFFFFFFF5)
        v123 = 1;
      if (v127 != 30 || v123)
      {
        v132 = v127 != 31 || v123;
        if ((v132 & 1) == 0)
        {
          v133 = *(_DWORD *)(v126 + 20);
          v134 = (v133 & 0x40000000) != 0 ? *(uint64_t **)(v126 - 8) : (uint64_t *)(v126 - 32 * (v133 & 0x7FFFFFF));
          v135 = *v134;
          v136 = *(unsigned __int8 *)(*v134 + 16);
          if (v135 && v136 == 16)
          {
            sub_1C4E5D490(v126, v135);
            v142 = *(_DWORD *)(v126 + 20);
            if ((v142 & 0x40000000) != 0)
              v143 = *(_QWORD *)(v126 - 8);
            else
              v143 = v126 - 32 * (v142 & 0x7FFFFFF);
            if (v141 == 4294967294)
              v144 = 1;
            else
              v144 = (2 * v141 + 3);
            v131 = *(_QWORD *)(v143 + 32 * v144);
            goto LABEL_207;
          }
        }
        if (v123)
        {
LABEL_191:
          v138 = 0;
        }
        else
        {
LABEL_192:
          v139 = *((unsigned __int8 *)v121 - 8);
          if (v139 != 30)
            __asm { BR              X11 }
          if ((*((_DWORD *)v121 - 1) & 0x7FFFFFF) == 3)
            v140 = 2;
          else
            v140 = 1;
          v138 = v140;
        }
        sub_1C4DFBE40((unsigned int *)&v245, (uint64_t)v245 + 8 * v246, v122, 0, (uint64_t)v122, v138);
        goto LABEL_198;
      }
      if ((*(_DWORD *)(v126 + 20) & 0x7FFFFFF) != 3)
        goto LABEL_192;
      v128 = *(_QWORD *)(v126 - 96);
      if (*(_BYTE *)(v128 + 16) != 16)
        goto LABEL_192;
      v129 = (_QWORD *)(v128 + 24);
      if (*(_DWORD *)(v128 + 32) >= 0x41u)
        v129 = (_QWORD *)*v129;
      if (*v129)
        v130 = 0;
      else
        v130 = -1;
      v131 = *(_QWORD *)(v126 + 32 * v130 - 32);
LABEL_207:
      v145 = v246;
      if (v246 >= (unint64_t)HIDWORD(v246))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v245, (uint64_t)v247, v246 + 1, 8);
        v145 = v246;
      }
      *((_QWORD *)v245 + v145) = v131;
      v33 = v246 + 1;
      LODWORD(v246) = v33;
    }
    while (v33);
LABEL_212:
    for (i = *((_QWORD *)v198 + 10); (char *)i != v200; i = *(_QWORD *)(i + 8))
    {
      if (i)
        v147 = (llvm *)(i - 24);
      else
        v147 = 0;
      v148 = (char *)sub_1C477672C((uint64_t)&v215, (uint64_t)v147);
      if (v216 == v215)
        v150 = (uint64_t *)((char *)&v217 + 4);
      else
        v150 = &v217;
      if (v148 == &v216[8 * *(unsigned int *)v150])
      {
        v151 = llvm::removeAllNonTerminatorAndEHPadInstructions(v147, v149);
        v30 |= (_DWORD)v151 + HIDWORD(v151) != 0;
      }
    }
    v152 = v243;
    v153 = v243 + 16;
    if (v153 > *(unsigned int *)(v190 + 12))
      llvm::SmallVectorBase<unsigned int>::grow_pod(v190, v188, v153, 8);
    if (v152)
    {
      v154 = (4 * v152 / 3u + 1) | ((unint64_t)(4 * v152 / 3u + 1) >> 1);
      v155 = v154 | (v154 >> 2) | ((v154 | (v154 >> 2)) >> 4);
      v156 = ((v155 | (v155 >> 8)) >> 16) | v155 | (v155 >> 8);
      if (*(_DWORD *)(v190 + 2080) <= v156)
        sub_1C4D8DA28((uint64_t)v199, v156 + 1);
    }
    if ((_DWORD)v243)
    {
      v157 = (char *)v242;
      v158 = (char *)v242 + 8 * v243;
      while (1)
      {
        v160 = *((_QWORD *)v158 - 1);
        v158 -= 8;
        v159 = v160;
        if (!*(_QWORD *)(v160 + 8) && (llvm::wouldInstructionBeTriviallyDead(v159, (uint64_t *)v19) & 1) != 0
          || sub_1C5790664(v159)
          && ((v161 = *(_QWORD *)(*(_QWORD *)(v159 - 32 * (*(_DWORD *)(v159 + 20) & 0x7FFFFFF)) + 24),
               v162 = *(unsigned __int8 **)(v161 - 8 * *(unsigned int *)(v161 + 8)),
               *v162 - 4 > 0x1E)
           || ((v163 = (char *)sub_1C477672C((uint64_t)&v202, (uint64_t)v162), v203 != v202)
             ? (v164 = &v204)
             : (v164 = (uint64_t *)((char *)&v204 + 4)),
               v163 == &v203[8 * *(unsigned int *)v164]
            || ((v165 = (char *)sub_1C477672C((uint64_t)&v207, (uint64_t)v162), v208 != v207)
              ? (v166 = &v209)
              : (v166 = (uint64_t *)((char *)&v209 + 4)),
                v165 == &v208[8 * *(unsigned int *)v166]))))
        {
          v220 = v222;
          v221 = 0x100000000;
          llvm::findDbgUsers((uint64_t)&v220, v159);
          llvm::salvageDebugInfoForDbgValues((llvm::CastInst *)v159, (uint64_t *)v220, v221);
          if (v220 != v222)
            free(v220);
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(v159 + 40) + 40, (uint64_t ***)v159);
          v181 = *(_QWORD *)(v159 + 24);
          v182 = *(_QWORD **)(v159 + 32);
          *v182 = v181;
          *(_QWORD *)(v181 + 8) = v182;
          *(_QWORD *)(v159 + 24) = 0;
          *(_QWORD *)(v159 + 32) = 0;
          llvm::Value::deleteValue((llvm::Value *)v159);
          v30 = 1;
          goto LABEL_262;
        }
        v167 = *(_DWORD *)(v190 + 8);
        v220 = (void *)v159;
        LODWORD(v221) = v167;
        v168 = *(_DWORD *)(v190 + 2080);
        if (!v168)
          break;
        v169 = *(_QWORD *)(v190 + 2064);
        v170 = v168 - 1;
        v171 = v170 & ((v159 >> 4) ^ (v159 >> 9));
        v172 = (_QWORD *)(v169 + 16 * v171);
        v173 = *v172;
        if (*v172 != v159)
        {
          v174 = 0;
          v175 = 1;
          while (v173 != -4096)
          {
            if (v174)
              v176 = 0;
            else
              v176 = v173 == -8192;
            if (v176)
              v174 = v172;
            v177 = v171 + v175++;
            v171 = v177 & v170;
            v172 = (_QWORD *)(v169 + 16 * v171);
            v173 = *v172;
            if (*v172 == v159)
              goto LABEL_262;
          }
          if (v174)
            v178 = v174;
          else
            v178 = v172;
          goto LABEL_255;
        }
LABEL_262:
        if (v158 == v157)
          goto LABEL_265;
      }
      v178 = 0;
LABEL_255:
      v179 = sub_1C4D8D8F4(v199, (uint64_t)&v220, (uint64_t *)&v220, v178);
      *v179 = v220;
      *((_DWORD *)v179 + 2) = v221;
      v180 = *(unsigned int *)(v190 + 8);
      if (v180 >= *(unsigned int *)(v190 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(v190, v188, v180 + 1, 8);
        v180 = *(unsigned int *)(v190 + 8);
      }
      *(_QWORD *)(*(_QWORD *)v190 + 8 * v180) = v159;
      ++*(_DWORD *)(v190 + 8);
      goto LABEL_262;
    }
LABEL_265:
    if (v208 != v207)
      free(v208);
    if (v203 != v202)
      free(v203);
    MEMORY[0x1CAA32FB4](v212, 8);
    if (v242 != v244)
      free(v242);
    if (v245 != v247)
      free(v245);
    if (v216 != v215)
      free(v216);
    v183 = *((_QWORD *)v198 + 14);
    if (v183)
      LOBYTE(v183) = *(char *)(v183 + 13) < 0;
    v247[2] = v190;
    v248 = v183;
    v249 = v191;
    v250 = v192;
    v251 = v19;
    v252 = v194;
    v253 = v25;
    v254 = v25;
    v255 = v19;
    v256 = v194;
    v257 = v192;
    v258 = 0;
    v259 = 257;
    v260 = v195;
    v261 = a9;
    v262 = a10;
    v263 = a12;
    v264 = 0;
    v246 = v193;
    v245 = &off_1E817D460;
    v247[1] = v230;
    v247[0] = dword_1ED810D58;
    v184 = sub_1C5788E44((uint64_t)&v245);
    v26 = 1;
    v27 = v197;
  }
  while ((v184 & 1) != 0);
  v29 = v189 | v30;
LABEL_279:
  v238 = &off_1E8167568;
  v185 = &v239;
  if (v241 == &v239)
  {
    v186 = 4;
    goto LABEL_281;
  }
  if (v241)
  {
    v186 = 5;
    v185 = v241;
LABEL_281:
    (*v185)[v186]();
  }
  if (v230[0] != v231)
    free(v230[0]);
  return v29 & 1;
}

uint64_t llvm::InstructionCombiningPass::runOnFunction(llvm::InstructionCombiningPass *this, llvm::Function *a2)
{
  void **v2;
  uint64_t v3;
  void **v6;
  void *v7;
  uint64_t v8;
  char **v9;
  char *v10;
  llvm::AssumptionCacheTracker *v11;
  uint64_t AssumptionCache;
  char **v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  char **v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  void **v29;
  void *v30;
  uint64_t v31;
  uint64_t AnalysisPass;
  char **v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char **v38;
  char *v39;
  uint64_t v40;
  uint64_t v41[2];
  int v42;
  uint64_t v43[2];
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  void *__src;
  unsigned int v50;
  uint64_t v51[2];
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  if ((llvm::FunctionPass::skipFunction(this, a2) & 1) == 0)
  {
    v6 = (void **)**((_QWORD **)this + 1);
    do
    {
      v7 = *v6;
      v6 += 2;
    }
    while (v7 != &llvm::AAResultsWrapperPass::ID);
    v8 = *(_QWORD *)((*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v6 - 1) + 96))(*(v6 - 1), &llvm::AAResultsWrapperPass::ID)+ 32);
    v9 = (char **)**((_QWORD **)this + 1);
    do
    {
      v10 = *v9;
      v9 += 2;
    }
    while (v10 != llvm::AssumptionCacheTracker::ID);
    v11 = (llvm::AssumptionCacheTracker *)(*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v9 - 1) + 96))(*(v9 - 1), llvm::AssumptionCacheTracker::ID);
    AssumptionCache = llvm::AssumptionCacheTracker::getAssumptionCache(v11, a2);
    v13 = (char **)**((_QWORD **)this + 1);
    do
    {
      v14 = *v13;
      v13 += 2;
    }
    while (v14 != llvm::TargetLibraryInfoWrapperPass::ID);
    v15 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v13 - 1) + 96))(*(v13 - 1), llvm::TargetLibraryInfoWrapperPass::ID);
    v16 = v43;
    v41[0] = 0;
    v41[1] = 0;
    v42 = 0;
    v43[0] = 0;
    v43[1] = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
    v47 = 0;
    llvm::TargetLibraryAnalysis::run(v15 + 32, (uint64_t)a2, (uint64_t)&v48);
    *(_QWORD *)(v15 + 240) = v48;
    v17 = (uint64_t *)(v15 + 240);
    if (!*(_BYTE *)(v15 + 320))
    {
      *(_QWORD *)(v15 + 248) = v15 + 264;
      *(_QWORD *)(v15 + 256) = 0x600000000;
      if (v50)
        sub_1C49DA960(v15 + 248, (uint64_t)&__src);
      *(_DWORD *)(v15 + 312) = v56;
      *(_BYTE *)(v15 + 320) = 1;
LABEL_18:
      if (__src != v51)
        free(__src);
      MEMORY[0x1CAA32FB4](0, 8);
      sub_1C4D8B440(v43);
      sub_1C4D8B52C(v41);
      v19 = (char **)**((_QWORD **)this + 1);
      do
      {
        v20 = *v19;
        v19 += 2;
      }
      while (v20 != llvm::TargetTransformInfoWrapperPass::ID);
      v21 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v19 - 1) + 96))(*(v19 - 1), llvm::TargetTransformInfoWrapperPass::ID);
      v48 = 0;
      __src = 0;
      v50 = 0;
      v51[0] = 0;
      v51[1] = 0;
      v52 = 0;
      v53 = 0;
      v54 = 0;
      v55 = 0;
      v22 = *(_QWORD *)(v21 + 56);
      if (v22)
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t, llvm::Function *))(*(_QWORD *)v22 + 48))(v41, v22, a2);
        v16 = (uint64_t *)(v21 + 64);
        v23 = v41[0];
        if (*(_BYTE *)(v21 + 72))
        {
          v41[0] = 0;
          v24 = *v16;
          *v16 = v23;
          if (v24)
          {
            (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
            v25 = v41[0];
            v41[0] = 0;
            if (v25)
              (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
          }
        }
        else
        {
          *(_QWORD *)(v21 + 64) = v41[0];
          *(_BYTE *)(v21 + 72) = 1;
        }
        MEMORY[0x1CAA32FB4](0, 8);
        sub_1C4D8B440(v51);
        sub_1C4D8B52C(&v48);
        v26 = (void **)**((_QWORD **)this + 1);
        do
        {
          v27 = *v26;
          v26 += 2;
        }
        while (v27 != &llvm::DominatorTreeWrapperPass::ID);
        v28 = (*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v26 - 1) + 96))(*(v26 - 1), &llvm::DominatorTreeWrapperPass::ID);
        v29 = (void **)**((_QWORD **)this + 1);
        do
        {
          v30 = *v29;
          v29 += 2;
        }
        while (v30 != &llvm::OptimizationRemarkEmitterWrapperPass::ID);
        v15 = v28 + 32;
        v21 = *(_QWORD *)((*(uint64_t (**)(_QWORD, void *))(*(_QWORD *)*(v29 - 1) + 96))(*(v29 - 1), &llvm::OptimizationRemarkEmitterWrapperPass::ID)+ 32);
        v31 = *((_QWORD *)this + 1);
        AnalysisPass = llvm::PMDataManager::findAnalysisPass(*(llvm::PMDataManager **)(v31 + 24), llvm::LoopInfoWrapperPass::ID, 1);
        if (AnalysisPass)
        {
          AnalysisPass = (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)AnalysisPass + 96))(AnalysisPass, llvm::LoopInfoWrapperPass::ID);
          v31 = *((_QWORD *)this + 1);
        }
        v33 = *(char ***)v31;
        do
        {
          v34 = *v33;
          v33 += 2;
        }
        while (v34 != llvm::ProfileSummaryInfoWrapperPass::ID);
        if (AnalysisPass)
          v2 = (void **)(AnalysisPass + 32);
        else
          v2 = 0;
        v35 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v33 - 1) + 96))(*(v33 - 1), llvm::ProfileSummaryInfoWrapperPass::ID);
        v36 = 0;
        v3 = *(_QWORD *)(v35 + 32);
        if (!*(_QWORD *)(v3 + 8))
          return sub_1C578D40C((uint64_t)a2, (uint64_t)this + 32, v8, AssumptionCache, (uint64_t)v17, (uint64_t)v16, v15, v21, v36, v3, *((_DWORD *)this + 600), (uint64_t)v2);
      }
      else
      {
        sub_1C485C2F0();
      }
      v38 = (char **)**((_QWORD **)this + 1);
      do
      {
        v39 = *v38;
        v38 += 2;
      }
      while (v39 != llvm::LazyBlockFrequencyInfoPass::ID);
      v40 = (*(uint64_t (**)(_QWORD, char *))(*(_QWORD *)*(v38 - 1) + 96))(*(v38 - 1), llvm::LazyBlockFrequencyInfoPass::ID);
      v36 = sub_1C619C0A4(v40 + 32);
      return sub_1C578D40C((uint64_t)a2, (uint64_t)this + 32, v8, AssumptionCache, (uint64_t)v17, (uint64_t)v16, v15, v21, v36, v3, *((_DWORD *)this + 600), (uint64_t)v2);
    }
    if (v17 == &v48)
    {
LABEL_17:
      *(_DWORD *)(v15 + 312) = v56;
      goto LABEL_18;
    }
    v2 = (void **)(v15 + 248);
    v18 = v50;
    v3 = *(unsigned int *)(v15 + 256);
    if (v3 >= v50)
    {
      if (v50)
        memmove(*v2, __src, 8 * v50);
      goto LABEL_16;
    }
    if (*(_DWORD *)(v15 + 260) < v50)
    {
      *(_DWORD *)(v15 + 256) = 0;
      llvm::SmallVectorBase<unsigned int>::grow_pod(v15 + 248, v15 + 264, v18, 8);
    }
    else if ((_DWORD)v3)
    {
      memmove(*v2, __src, 8 * v3);
LABEL_14:
      if (v3 != v50)
        memcpy((char *)*v2 + 8 * v3, (char *)__src + 8 * v3, 8 * v50 - 8 * v3);
LABEL_16:
      *(_DWORD *)(v15 + 256) = v18;
      goto LABEL_17;
    }
    v3 = 0;
    goto LABEL_14;
  }
  return 0;
}

void llvm::initializeInstructionCombiningPassPass(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED810A80);
  if (v2 != -1)
  {
    v5[0] = sub_1C578EB10;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED810A80, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

llvm::InstructionCombiningPass *llvm::InstructionCombiningPass::InstructionCombiningPass(llvm::InstructionCombiningPass *this, int a2)
{
  uint64_t v3;
  int64x2_t v4;
  unint64_t v6;
  unint64_t v8;
  _QWORD *v9;
  _QWORD v10[2];

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = &llvm::InstructionCombiningPass::ID;
  *((_DWORD *)this + 6) = 2;
  *(_QWORD *)this = &off_1E817D258;
  *((_QWORD *)this + 4) = (char *)this + 48;
  *((_QWORD *)this + 5) = 0x10000000000;
  *((_OWORD *)this + 131) = 0u;
  *((_DWORD *)this + 528) = 0;
  *((_QWORD *)this + 265) = 1;
  v3 = 2128;
  v4 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)((char *)this + v3) = v4;
    v3 += 16;
  }
  while (v3 != 2256);
  *((_QWORD *)this + 282) = (char *)this + 2272;
  *((_QWORD *)this + 283) = 0x1000000000;
  *((_DWORD *)this + 600) = a2;
  if (!atomic_load(qword_1ED830BC0))
    llvm::ManagedStaticBase::RegisterManagedStatic((llvm::ManagedStaticBase *)qword_1ED830BC0, (void *(*)(void))sub_1C624602C, (void (*)(void *))sub_1C62460B0);
  v8 = qword_1ED830BC0[0];
  v6 = atomic_load(&qword_1ED810A80);
  if (v6 != -1)
  {
    v10[0] = sub_1C578EB10;
    v10[1] = &v8;
    v9 = v10;
    std::__call_once(&qword_1ED810A80, &v9, (void (__cdecl *)(void *))sub_1C4776838);
  }
  return this;
}

uint64_t sub_1C578EB10(llvm *a1)
{
  llvm::PassRegistry *v2;
  llvm::PassRegistry *v3;
  llvm::PassRegistry *v4;
  llvm::PassRegistry *v5;
  llvm::PassRegistry *v6;
  uint64_t v7;

  llvm::initializeAssumptionCacheTrackerPass((uint64_t)a1);
  llvm::initializeTargetLibraryInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeTargetTransformInfoWrapperPassPass((uint64_t)a1);
  llvm::initializeDominatorTreeWrapperPassPass((uint64_t)a1);
  llvm::initializeAAResultsWrapperPassPass(a1, v2);
  llvm::initializeGlobalsAAWrapperPassPass(a1, v3);
  llvm::initializeOptimizationRemarkEmitterWrapperPassPass(a1, v4);
  llvm::initializeLazyBlockFrequencyInfoPassPass(a1, v5);
  llvm::initializeProfileSummaryInfoWrapperPassPass(a1, v6);
  v7 = operator new();
  *(_QWORD *)v7 = "Combine redundant instructions";
  *(_QWORD *)(v7 + 8) = 30;
  *(_QWORD *)(v7 + 16) = "instcombine";
  *(_QWORD *)(v7 + 24) = 11;
  *(_QWORD *)(v7 + 32) = &llvm::InstructionCombiningPass::ID;
  *(_WORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 42) = 0;
  *(_QWORD *)(v7 + 48) = 0;
  *(_QWORD *)(v7 + 56) = 0;
  *(_QWORD *)(v7 + 64) = 0;
  *(_QWORD *)(v7 + 72) = llvm::callDefaultCtor<llvm::InstructionCombiningPass>;
  llvm::PassRegistry::registerPass((uint64_t)a1, (_QWORD *)v7, 1);
  return v7;
}

void llvm::initializeInstCombine(llvm *this, llvm::PassRegistry *a2)
{
  unint64_t v2;
  llvm *v3;
  _QWORD *v4;
  _QWORD v5[2];

  v3 = this;
  v2 = atomic_load(&qword_1ED810A80);
  if (v2 != -1)
  {
    v5[0] = sub_1C578EB10;
    v5[1] = &v3;
    v4 = v5;
    std::__call_once(&qword_1ED810A80, &v4, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

void LLVMInitializeInstCombine(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD v4[2];

  v2 = a1;
  v1 = atomic_load(&qword_1ED810A80);
  if (v1 != -1)
  {
    v4[0] = sub_1C578EB10;
    v4[1] = &v2;
    v3 = v4;
    std::__call_once(&qword_1ED810A80, &v3, (void (__cdecl *)(void *))sub_1C4776838);
  }
}

llvm::InstructionCombiningPass *llvm::createInstructionCombiningPass(llvm *this)
{
  int v1;
  llvm::InstructionCombiningPass *v2;

  v1 = (int)this;
  v2 = (llvm::InstructionCombiningPass *)operator new();
  return llvm::InstructionCombiningPass::InstructionCombiningPass(v2, v1);
}

{
  llvm::InstructionCombiningPass *v1;

  v1 = (llvm::InstructionCombiningPass *)operator new();
  return llvm::InstructionCombiningPass::InstructionCombiningPass(v1);
}

uint64_t LLVMAddInstructionCombiningPass(uint64_t a1)
{
  llvm::InstructionCombiningPass *v2;

  v2 = (llvm::InstructionCombiningPass *)operator new();
  llvm::InstructionCombiningPass::InstructionCombiningPass(v2);
  return (*(uint64_t (**)(uint64_t, llvm::InstructionCombiningPass *))(*(_QWORD *)a1 + 16))(a1, v2);
}

BOOL sub_1C578ED28(uint64_t a1, uint64_t a2)
{
  _BOOL4 v3;
  _BOOL8 result;
  unsigned int v5;
  unsigned int v6;
  int v7;
  llvm::Constant **v8;
  int v9;
  llvm::Constant **v10;
  char v11;
  char v12;

  v3 = sub_1C4774A9C(a2);
  result = 0;
  if (!a2 || !v3)
    return result;
  v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 > 0x1B)
    v6 = v5 - 28;
  else
    v6 = *(unsigned __int16 *)(a2 + 18);
  if (v6 == 12)
    return 1;
  if (v6 != 16)
    return 0;
  if ((*(_BYTE *)(a2 + 17) & 0x10) != 0)
  {
    v9 = *(_DWORD *)(a2 + 20);
    if ((v9 & 0x40000000) != 0)
      v10 = *(llvm::Constant ***)(a2 - 8);
    else
      v10 = (llvm::Constant **)(a2 - 32 * (v9 & 0x7FFFFFF));
    return sub_1C4E5C310((uint64_t)&v12, *v10);
  }
  v7 = *(_DWORD *)(a2 + 20);
  if ((v7 & 0x40000000) != 0)
    v8 = *(llvm::Constant ***)(a2 - 8);
  else
    v8 = (llvm::Constant **)(a2 - 32 * (v7 & 0x7FFFFFF));
  result = sub_1C4E5C46C((uint64_t)&v11, *v8);
  if (result)
    return 1;
  return result;
}

uint64_t sub_1C578EDF4(unsigned int *a1, uint64_t *a2)
{
  unint64_t *v4;
  llvm::ValueHandleBase *v5;
  uint64_t v6;
  unsigned int v8;
  unsigned int v9;
  unint64_t v11;

  v11 = 0;
  v4 = (unint64_t *)llvm::SmallVectorBase<unsigned int>::mallocForGrow((uint64_t)a1, 0, 24, &v11);
  v5 = (llvm::ValueHandleBase *)&v4[3 * a1[2]];
  v6 = *a2;
  *(_QWORD *)v5 = 6;
  *((_QWORD *)v5 + 1) = 0;
  *((_QWORD *)v5 + 2) = v6;
  if (v6 != -8192 && v6 != -4096 && v6 != 0)
    llvm::ValueHandleBase::AddToUseList(v5);
  sub_1C5087F44(a1, v4);
  v8 = v11;
  if (*(unsigned int **)a1 != a1 + 4)
    free(*(void **)a1);
  *(_QWORD *)a1 = v4;
  v9 = a1[2] + 1;
  a1[2] = v9;
  a1[3] = v8;
  return (uint64_t)&v4[3 * v9 - 3];
}

BOOL sub_1C578EEB0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;

  v2 = *(_QWORD *)(a2 + 24);
  if (v2)
    v3 = *(unsigned __int8 *)(v2 + 16) >= 0x1Cu;
  else
    v3 = 0;
  return !v3 || *(_QWORD *)(v2 + 40) != *a1;
}

unint64_t sub_1C578EEE0(unint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  BOOL v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t *v111;
  BOOL v113;
  uint64_t *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  unsigned int v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  int64_t v130;
  int64_t v131;
  int64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  uint64_t *v157;
  int v158;
  uint64_t *v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  unsigned int v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  uint64_t *v190;
  int v191;
  uint64_t *v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  unsigned int v200;
  uint64_t *v201;
  uint64_t v202;
  int v203;
  int v204;
  uint64_t *v205;
  uint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;

  v7 = (uint64_t *)result;
LABEL_2:
  v8 = a2 - 1;
  v9 = v7;
  while (2)
  {
    v7 = v9;
    v10 = (char *)a2 - (char *)v9;
    v11 = a2 - v9;
    switch(v11)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v89 = *(a2 - 1);
        v90 = *v9;
        v91 = *(_QWORD *)(*v9 + 40);
        v92 = *(__int16 *)(v91 + 18);
        if ((v92 & 0x80000000) == 0)
        {
          v207 = *(_QWORD *)(v91 + 48);
          if (v207 != v91 + 40)
          {
            v208 = 0;
            do
            {
              v209 = v207 - 24;
              if (!v207)
                v209 = 0;
              *(_DWORD *)(v209 + 56) = v208++;
              v207 = *(_QWORD *)(v207 + 8);
            }
            while (v207 != v91 + 40);
          }
          *(_WORD *)(v91 + 18) = v92 | 0x8000;
        }
        if (*(_DWORD *)(v90 + 56) < *(_DWORD *)(v89 + 56))
        {
          *v9 = v89;
          *(a2 - 1) = v90;
        }
        return result;
      case 3:
        return (unint64_t)sub_1C578FD7C(v9, v9 + 1, a2 - 1);
      case 4:
        return (unint64_t)sub_1C579033C(v9, v9 + 1, v9 + 2, a2 - 1);
      case 5:
        v93 = v9 + 1;
        v94 = v9 + 2;
        v95 = v9 + 3;
        result = (unint64_t)sub_1C579033C(v9, v9 + 1, v9 + 2, v9 + 3);
        v96 = *(a2 - 1);
        v97 = v9[3];
        v98 = *(_QWORD *)(v97 + 40);
        v99 = *(__int16 *)(v98 + 18);
        if ((v99 & 0x80000000) == 0)
        {
          v210 = *(_QWORD *)(v98 + 48);
          if (v210 != v98 + 40)
          {
            v211 = 0;
            do
            {
              v212 = v210 - 24;
              if (!v210)
                v212 = 0;
              *(_DWORD *)(v212 + 56) = v211++;
              v210 = *(_QWORD *)(v210 + 8);
            }
            while (v210 != v98 + 40);
          }
          *(_WORD *)(v98 + 18) = v99 | 0x8000;
        }
        if (*(_DWORD *)(v97 + 56) < *(_DWORD *)(v96 + 56))
        {
          *v95 = v96;
          *(a2 - 1) = v97;
          v100 = *v95;
          v101 = *v94;
          v102 = *(_QWORD *)(*v94 + 40);
          v103 = *(__int16 *)(v102 + 18);
          if ((v103 & 0x80000000) == 0)
          {
            v213 = *(_QWORD *)(v102 + 48);
            if (v213 != v102 + 40)
            {
              v214 = 0;
              do
              {
                v215 = v213 - 24;
                if (!v213)
                  v215 = 0;
                *(_DWORD *)(v215 + 56) = v214++;
                v213 = *(_QWORD *)(v213 + 8);
              }
              while (v213 != v102 + 40);
            }
            *(_WORD *)(v102 + 18) = v103 | 0x8000;
          }
          v104 = *(_DWORD *)(v100 + 56);
          if (*(_DWORD *)(v101 + 56) < v104)
          {
            *v94 = v100;
            *v95 = v101;
            v105 = *v93;
            v106 = *(_QWORD *)(*v93 + 40);
            v107 = *(__int16 *)(v106 + 18);
            if ((v107 & 0x80000000) == 0)
            {
              v216 = *(_QWORD *)(v106 + 48);
              if (v216 != v106 + 40)
              {
                v217 = 0;
                do
                {
                  v218 = v216 - 24;
                  if (!v216)
                    v218 = 0;
                  *(_DWORD *)(v218 + 56) = v217++;
                  v216 = *(_QWORD *)(v216 + 8);
                }
                while (v216 != v106 + 40);
                v104 = *(_DWORD *)(v100 + 56);
              }
              *(_WORD *)(v106 + 18) = v107 | 0x8000;
            }
            if (*(_DWORD *)(v105 + 56) < v104)
            {
              v9[1] = v100;
              v9[2] = v105;
              v108 = *v9;
              v109 = *(_QWORD *)(*v9 + 40);
              v110 = *(__int16 *)(v109 + 18);
              if ((v110 & 0x80000000) == 0)
              {
                v219 = *(_QWORD *)(v109 + 48);
                if (v219 != v109 + 40)
                {
                  v220 = 0;
                  do
                  {
                    v221 = v219 - 24;
                    if (!v219)
                      v221 = 0;
                    *(_DWORD *)(v221 + 56) = v220++;
                    v219 = *(_QWORD *)(v219 + 8);
                  }
                  while (v219 != v109 + 40);
                  v104 = *(_DWORD *)(v100 + 56);
                }
                *(_WORD *)(v109 + 18) = v110 | 0x8000;
              }
              if (*(_DWORD *)(v108 + 56) < v104)
              {
                *v9 = v100;
                v9[1] = v108;
              }
            }
          }
        }
        return result;
      default:
        if (v10 <= 191)
        {
          v111 = v9 + 1;
          v113 = v9 == a2 || v111 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v113)
            {
              v114 = v9;
              do
              {
                v115 = v111;
                v117 = *v114;
                v116 = v114[1];
                v118 = *(_QWORD *)(*v114 + 40);
                v119 = *(__int16 *)(v118 + 18);
                if ((v119 & 0x80000000) == 0)
                {
                  v127 = *(_QWORD *)(v118 + 48);
                  if (v127 != v118 + 40)
                  {
                    v128 = 0;
                    do
                    {
                      v129 = v127 - 24;
                      if (!v127)
                        v129 = 0;
                      *(_DWORD *)(v129 + 56) = v128++;
                      v127 = *(_QWORD *)(v127 + 8);
                    }
                    while (v127 != v118 + 40);
                  }
                  *(_WORD *)(v118 + 18) = v119 | 0x8000;
                }
                v120 = *(_DWORD *)(v116 + 56);
                if (*(_DWORD *)(v117 + 56) < v120)
                {
                  v121 = v115;
                  while (1)
                  {
                    *v121 = v117;
                    if (v114 == v9)
                      break;
                    v121 = v114;
                    v122 = *--v114;
                    v117 = v122;
                    v123 = *(_QWORD *)(v122 + 40);
                    v124 = *(__int16 *)(v123 + 18);
                    if ((v124 & 0x80000000) == 0)
                    {
                      v125 = *(_QWORD *)(v123 + 48);
                      if (v125 != v123 + 40)
                      {
                        v126 = 0;
                        do
                        {
                          result = v125 - 24;
                          if (!v125)
                            result = 0;
                          *(_DWORD *)(result + 56) = v126++;
                          v125 = *(_QWORD *)(v125 + 8);
                        }
                        while (v125 != v123 + 40);
                        v120 = *(_DWORD *)(v116 + 56);
                      }
                      *(_WORD *)(v123 + 18) = v124 | 0x8000;
                    }
                    if (*(_DWORD *)(v117 + 56) >= v120)
                      goto LABEL_166;
                  }
                  v121 = v9;
LABEL_166:
                  *v121 = v116;
                }
                v111 = v115 + 1;
                v114 = v115;
              }
              while (v115 + 1 != a2);
            }
          }
          else if (!v113)
          {
            do
            {
              v163 = v111;
              v165 = *v7;
              v164 = v7[1];
              v166 = *(_QWORD *)(*v7 + 40);
              v167 = *(__int16 *)(v166 + 18);
              if ((v167 & 0x80000000) == 0)
              {
                v176 = *(_QWORD *)(v166 + 48);
                if (v176 != v166 + 40)
                {
                  v177 = 0;
                  do
                  {
                    v178 = v176 - 24;
                    if (!v176)
                      v178 = 0;
                    *(_DWORD *)(v178 + 56) = v177++;
                    v176 = *(_QWORD *)(v176 + 8);
                  }
                  while (v176 != v166 + 40);
                }
                *(_WORD *)(v166 + 18) = v167 | 0x8000;
              }
              v168 = *(_DWORD *)(v164 + 56);
              if (*(_DWORD *)(v165 + 56) < v168)
              {
                v169 = v163;
                do
                {
                  *v169 = v165;
                  v169 = v7;
                  v170 = *--v7;
                  v165 = v170;
                  v171 = *(_QWORD *)(v170 + 40);
                  v172 = *(__int16 *)(v171 + 18);
                  if ((v172 & 0x80000000) == 0)
                  {
                    v173 = *(_QWORD *)(v171 + 48);
                    if (v173 != v171 + 40)
                    {
                      v174 = 0;
                      do
                      {
                        v175 = v173 - 24;
                        if (!v173)
                          v175 = 0;
                        *(_DWORD *)(v175 + 56) = v174++;
                        v173 = *(_QWORD *)(v173 + 8);
                      }
                      while (v173 != v171 + 40);
                      v168 = *(_DWORD *)(v164 + 56);
                    }
                    *(_WORD *)(v171 + 18) = v172 | 0x8000;
                  }
                }
                while (*(_DWORD *)(v165 + 56) < v168);
                *v169 = v164;
              }
              v111 = v163 + 1;
              v7 = v163;
            }
            while (v163 + 1 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v9 != a2)
          {
            v130 = (unint64_t)(v11 - 2) >> 1;
            v131 = v130;
            do
            {
              v132 = v131;
              if (v130 >= v131)
              {
                v133 = (2 * v131) | 1;
                v134 = &v9[v133];
                if (2 * v132 + 2 < v11)
                {
                  v135 = *v134;
                  v136 = v134[1];
                  v137 = *(_QWORD *)(v136 + 40);
                  result = *(__int16 *)(v137 + 18);
                  if ((result & 0x80000000) == 0)
                  {
                    v160 = *(_QWORD *)(v137 + 48);
                    if (v160 != v137 + 40)
                    {
                      v161 = 0;
                      do
                      {
                        v162 = v160 - 24;
                        if (!v160)
                          v162 = 0;
                        *(_DWORD *)(v162 + 56) = v161++;
                        v160 = *(_QWORD *)(v160 + 8);
                      }
                      while (v160 != v137 + 40);
                    }
                    result = result | 0x8000;
                    *(_WORD *)(v137 + 18) = result;
                  }
                  if (*(_DWORD *)(v136 + 56) < *(_DWORD *)(v135 + 56))
                  {
                    ++v134;
                    v133 = 2 * v132 + 2;
                  }
                }
                v138 = &v9[v132];
                v139 = *v134;
                v140 = *v138;
                v141 = *(_QWORD *)(*v138 + 40);
                v142 = *(__int16 *)(v141 + 18);
                if ((v142 & 0x80000000) == 0)
                {
                  result = v141 + 40;
                  v157 = *(uint64_t **)(v141 + 48);
                  if (v157 != (uint64_t *)(v141 + 40))
                  {
                    v158 = 0;
                    do
                    {
                      v159 = v157 - 3;
                      if (!v157)
                        v159 = 0;
                      *((_DWORD *)v159 + 14) = v158++;
                      v157 = (uint64_t *)v157[1];
                    }
                    while (v157 != (uint64_t *)result);
                  }
                  *(_WORD *)(v141 + 18) = v142 | 0x8000;
                }
                if (*(_DWORD *)(v140 + 56) >= *(_DWORD *)(v139 + 56))
                {
                  do
                  {
                    v143 = v134;
                    *v138 = v139;
                    if (v130 < v133)
                      break;
                    v144 = (2 * v133) | 1;
                    v134 = &v9[v144];
                    v133 = 2 * v133 + 2;
                    if (v133 >= v11)
                    {
                      v133 = v144;
                    }
                    else
                    {
                      v145 = *v134;
                      v146 = v134[1];
                      v147 = *(_QWORD *)(v146 + 40);
                      v148 = *(__int16 *)(v147 + 18);
                      if ((v148 & 0x80000000) == 0)
                      {
                        v154 = *(_QWORD *)(v147 + 48);
                        if (v154 != v147 + 40)
                        {
                          v155 = 0;
                          do
                          {
                            v156 = v154 - 24;
                            if (!v154)
                              v156 = 0;
                            *(_DWORD *)(v156 + 56) = v155++;
                            v154 = *(_QWORD *)(v154 + 8);
                          }
                          while (v154 != v147 + 40);
                        }
                        *(_WORD *)(v147 + 18) = v148 | 0x8000;
                      }
                      if (*(_DWORD *)(v146 + 56) >= *(_DWORD *)(v145 + 56))
                        v133 = v144;
                      else
                        ++v134;
                    }
                    v139 = *v134;
                    v149 = *(_QWORD *)(v140 + 40);
                    v150 = *(__int16 *)(v149 + 18);
                    if ((v150 & 0x80000000) == 0)
                    {
                      v151 = *(_QWORD *)(v149 + 48);
                      if (v151 != v149 + 40)
                      {
                        v152 = 0;
                        do
                        {
                          v153 = v151 - 24;
                          if (!v151)
                            v153 = 0;
                          *(_DWORD *)(v153 + 56) = v152++;
                          v151 = *(_QWORD *)(v151 + 8);
                        }
                        while (v151 != v149 + 40);
                      }
                      *(_WORD *)(v149 + 18) = v150 | 0x8000;
                    }
                    result = *(unsigned int *)(v139 + 56);
                    v138 = v143;
                  }
                  while (*(_DWORD *)(v140 + 56) >= result);
                  *v143 = v140;
                }
              }
              v131 = v132 - 1;
            }
            while (v132);
            do
            {
              v181 = 0;
              v182 = *v9;
              v183 = v9;
              do
              {
                v184 = &v183[v181 + 1];
                v185 = (2 * v181) | 1;
                v186 = 2 * v181 + 2;
                if (v186 < v11)
                {
                  v187 = *v184;
                  v188 = v184[1];
                  result = *(_QWORD *)(v188 + 40);
                  v189 = *(__int16 *)(result + 18);
                  if ((v189 & 0x80000000) == 0)
                  {
                    v190 = *(uint64_t **)(result + 48);
                    if (v190 != (uint64_t *)(result + 40))
                    {
                      v191 = 0;
                      do
                      {
                        v192 = v190 - 3;
                        if (!v190)
                          v192 = 0;
                        *((_DWORD *)v192 + 14) = v191++;
                        v190 = (uint64_t *)v190[1];
                      }
                      while (v190 != (uint64_t *)(result + 40));
                    }
                    *(_WORD *)(result + 18) = v189 | 0x8000;
                  }
                  if (*(_DWORD *)(v188 + 56) < *(_DWORD *)(v187 + 56))
                  {
                    ++v184;
                    v185 = v186;
                  }
                }
                *v183 = *v184;
                v183 = v184;
                v181 = v185;
              }
              while (v185 <= (uint64_t)((unint64_t)(v11 - 2) >> 1));
              if (v184 == --a2)
              {
                *v184 = v182;
              }
              else
              {
                *v184 = *a2;
                *a2 = v182;
                v193 = (char *)v184 - (char *)v9 + 8;
                if (v193 >= 9)
                {
                  v194 = (((unint64_t)v193 >> 3) - 2) >> 1;
                  v195 = &v9[v194];
                  v196 = *v195;
                  v197 = *v184;
                  v198 = *(_QWORD *)(*v184 + 40);
                  v199 = *(__int16 *)(v198 + 18);
                  if ((v199 & 0x80000000) == 0)
                  {
                    v179 = *(_QWORD *)(v198 + 48);
                    if (v179 != v198 + 40)
                    {
                      LODWORD(result) = 0;
                      do
                      {
                        v180 = v179 - 24;
                        if (!v179)
                          v180 = 0;
                        *(_DWORD *)(v180 + 56) = result;
                        result = (result + 1);
                        v179 = *(_QWORD *)(v179 + 8);
                      }
                      while (v179 != v198 + 40);
                    }
                    *(_WORD *)(v198 + 18) = v199 | 0x8000;
                  }
                  v200 = *(_DWORD *)(v197 + 56);
                  if (v200 < *(_DWORD *)(v196 + 56))
                  {
                    do
                    {
                      v201 = v195;
                      *v184 = v196;
                      if (!v194)
                        break;
                      v194 = (v194 - 1) >> 1;
                      v195 = &v9[v194];
                      v196 = *v195;
                      v202 = *(_QWORD *)(v197 + 40);
                      v203 = *(__int16 *)(v202 + 18);
                      if ((v203 & 0x80000000) == 0)
                      {
                        result = *(_QWORD *)(v202 + 48);
                        if (result != v202 + 40)
                        {
                          v204 = 0;
                          do
                          {
                            v205 = (uint64_t *)(result - 24);
                            if (!result)
                              v205 = 0;
                            *((_DWORD *)v205 + 14) = v204++;
                            result = *(_QWORD *)(result + 8);
                          }
                          while (result != v202 + 40);
                          v200 = *(_DWORD *)(v197 + 56);
                        }
                        *(_WORD *)(v202 + 18) = v203 | 0x8000;
                      }
                      v184 = v201;
                    }
                    while (v200 < *(_DWORD *)(v196 + 56));
                    *v201 = v197;
                  }
                }
              }
            }
            while (v11-- > 2);
          }
          return result;
        }
        v12 = (unint64_t)v11 >> 1;
        v13 = &v9[(unint64_t)v11 >> 1];
        if ((unint64_t)v10 < 0x401)
        {
          result = (unint64_t)sub_1C578FD7C(&v7[(unint64_t)v11 >> 1], v7, a2 - 1);
        }
        else
        {
          sub_1C578FD7C(v7, &v7[(unint64_t)v11 >> 1], a2 - 1);
          sub_1C578FD7C(v7 + 1, v13 - 1, a2 - 2);
          sub_1C578FD7C(v7 + 2, &v7[v12 + 1], a2 - 3);
          result = (unint64_t)sub_1C578FD7C(v13 - 1, v13, &v7[v12 + 1]);
          v14 = *v7;
          *v7 = *v13;
          *v13 = v14;
        }
        --a3;
        v15 = *v7;
        if ((a4 & 1) == 0)
        {
          v18 = *(v7 - 1);
          v16 = *(_QWORD *)(v15 + 40);
          v17 = *(__int16 *)(v16 + 18);
          if ((v17 & 0x80000000) == 0)
          {
            v44 = *(_QWORD *)(v16 + 48);
            if (v44 != v16 + 40)
            {
              v45 = 0;
              do
              {
                v46 = v44 - 24;
                if (!v44)
                  v46 = 0;
                *(_DWORD *)(v46 + 56) = v45++;
                v44 = *(_QWORD *)(v44 + 8);
              }
              while (v44 != v16 + 40);
            }
            LOWORD(v17) = v17 | 0x8000;
            *(_WORD *)(v16 + 18) = v17;
          }
          v19 = *(_DWORD *)(v15 + 56);
          if (v19 < *(_DWORD *)(v18 + 56))
            goto LABEL_13;
          v47 = *v8;
          v48 = *(_QWORD *)(*v8 + 40);
          v49 = *(__int16 *)(v48 + 18);
          if ((v49 & 0x80000000) == 0)
          {
            v86 = *(_QWORD *)(v48 + 48);
            if (v86 != v48 + 40)
            {
              v87 = 0;
              do
              {
                v88 = v86 - 24;
                if (!v86)
                  v88 = 0;
                *(_DWORD *)(v88 + 56) = v87++;
                v86 = *(_QWORD *)(v86 + 8);
              }
              while (v86 != v48 + 40);
              v19 = *(_DWORD *)(v15 + 56);
            }
            *(_WORD *)(v48 + 18) = v49 | 0x8000;
          }
          v9 = v7;
          if (*(_DWORD *)(v47 + 56) >= v19)
          {
            do
            {
              if (++v9 >= a2)
                break;
              v57 = *v9;
              v58 = *(_QWORD *)(*v9 + 40);
              v59 = *(__int16 *)(v58 + 18);
              if ((v59 & 0x80000000) == 0)
              {
                v60 = *(_QWORD *)(v58 + 48);
                if (v60 != v58 + 40)
                {
                  v61 = 0;
                  do
                  {
                    v62 = v60 - 24;
                    if (!v60)
                      v62 = 0;
                    *(_DWORD *)(v62 + 56) = v61++;
                    v60 = *(_QWORD *)(v60 + 8);
                  }
                  while (v60 != v58 + 40);
                  v19 = *(_DWORD *)(v15 + 56);
                }
                *(_WORD *)(v58 + 18) = v59 | 0x8000;
              }
            }
            while (*(_DWORD *)(v57 + 56) >= v19);
          }
          else
          {
            do
            {
              v51 = v9[1];
              ++v9;
              v50 = v51;
              v52 = *(_QWORD *)(v51 + 40);
              v53 = *(__int16 *)(v52 + 18);
              if ((v53 & 0x80000000) == 0)
              {
                v54 = *(_QWORD *)(v52 + 48);
                if (v54 != v52 + 40)
                {
                  v55 = 0;
                  do
                  {
                    v56 = v54 - 24;
                    if (!v54)
                      v56 = 0;
                    *(_DWORD *)(v56 + 56) = v55++;
                    v54 = *(_QWORD *)(v54 + 8);
                  }
                  while (v54 != v52 + 40);
                  v19 = *(_DWORD *)(v15 + 56);
                }
                *(_WORD *)(v52 + 18) = v53 | 0x8000;
              }
            }
            while (*(_DWORD *)(v50 + 56) >= v19);
          }
          v63 = a2;
          if (v9 < a2)
          {
            do
            {
              v65 = *--v63;
              v64 = v65;
              v66 = *(_QWORD *)(v65 + 40);
              v67 = *(__int16 *)(v66 + 18);
              if ((v67 & 0x80000000) == 0)
              {
                v68 = *(_QWORD *)(v66 + 48);
                if (v68 != v66 + 40)
                {
                  v69 = 0;
                  do
                  {
                    v70 = v68 - 24;
                    if (!v68)
                      v70 = 0;
                    *(_DWORD *)(v70 + 56) = v69++;
                    v68 = *(_QWORD *)(v68 + 8);
                  }
                  while (v68 != v66 + 40);
                  v19 = *(_DWORD *)(v15 + 56);
                }
                *(_WORD *)(v66 + 18) = v67 | 0x8000;
              }
            }
            while (*(_DWORD *)(v64 + 56) < v19);
          }
          if (v9 < v63)
          {
            v71 = *v9;
            v72 = *v63;
            do
            {
              *v9 = v72;
              *v63 = v71;
              do
              {
                v73 = v9[1];
                ++v9;
                v71 = v73;
                v74 = *(_QWORD *)(v73 + 40);
                v75 = *(__int16 *)(v74 + 18);
                if ((v75 & 0x80000000) == 0)
                {
                  v76 = *(_QWORD *)(v74 + 48);
                  if (v76 != v74 + 40)
                  {
                    v77 = 0;
                    do
                    {
                      v78 = v76 - 24;
                      if (!v76)
                        v78 = 0;
                      *(_DWORD *)(v78 + 56) = v77++;
                      v76 = *(_QWORD *)(v76 + 8);
                    }
                    while (v76 != v74 + 40);
                    v19 = *(_DWORD *)(v15 + 56);
                  }
                  *(_WORD *)(v74 + 18) = v75 | 0x8000;
                }
              }
              while (*(_DWORD *)(v71 + 56) >= v19);
              do
              {
                v82 = *--v63;
                v72 = v82;
                v83 = *(_QWORD *)(v82 + 40);
                v84 = *(__int16 *)(v83 + 18);
                if ((v84 & 0x80000000) == 0)
                {
                  v79 = *(_QWORD *)(v83 + 48);
                  if (v79 != v83 + 40)
                  {
                    v80 = 0;
                    do
                    {
                      v81 = v79 - 24;
                      if (!v79)
                        v81 = 0;
                      *(_DWORD *)(v81 + 56) = v80++;
                      v79 = *(_QWORD *)(v79 + 8);
                    }
                    while (v79 != v83 + 40);
                    v19 = *(_DWORD *)(v15 + 56);
                  }
                  *(_WORD *)(v83 + 18) = v84 | 0x8000;
                }
              }
              while (*(_DWORD *)(v72 + 56) < v19);
            }
            while (v9 < v63);
          }
          v85 = v9 - 1;
          if (v9 - 1 != v7)
            *v7 = *v85;
          a4 = 0;
          *v85 = v15;
          continue;
        }
        v16 = *(_QWORD *)(v15 + 40);
        LOWORD(v17) = *(_WORD *)(v16 + 18);
LABEL_13:
        v20 = v16 + 40;
        v21 = v7;
        do
        {
          v22 = v21;
          v24 = v21[1];
          ++v21;
          v23 = v24;
          if ((v17 & 0x8000) == 0)
          {
            v26 = *(_QWORD *)(v16 + 48);
            if (v26 != v20)
            {
              v27 = 0;
              do
              {
                v28 = v26 - 24;
                if (!v26)
                  v28 = 0;
                *(_DWORD *)(v28 + 56) = v27++;
                v26 = *(_QWORD *)(v26 + 8);
              }
              while (v26 != v20);
            }
            LOWORD(v17) = v17 | 0x8000;
            *(_WORD *)(v16 + 18) = v17;
          }
          v25 = *(_DWORD *)(v15 + 56);
        }
        while (v25 < *(_DWORD *)(v23 + 56));
        v29 = a2;
        if (v22 == v7)
        {
          v29 = a2;
          do
          {
            if (v21 >= v29)
              break;
            v31 = *--v29;
          }
          while (v25 >= *(_DWORD *)(v31 + 56));
        }
        else
        {
          do
            v30 = *--v29;
          while (v25 >= *(_DWORD *)(v30 + 56));
        }
        if (v21 >= v29)
        {
          v9 = v21;
        }
        else
        {
          v32 = *v29;
          v9 = v21;
          v33 = v29;
          do
          {
            *v9 = v32;
            *v33 = v23;
            v34 = *(_QWORD *)(v15 + 40);
            v35 = *(_WORD *)(v34 + 18);
            v36 = v34 + 40;
            do
            {
              v37 = v9[1];
              ++v9;
              v23 = v37;
              if ((v35 & 0x8000) == 0)
              {
                v38 = *(_QWORD *)(v34 + 48);
                if (v38 != v36)
                {
                  v39 = 0;
                  do
                  {
                    v40 = v38 - 24;
                    if (!v38)
                      v40 = 0;
                    *(_DWORD *)(v40 + 56) = v39++;
                    v38 = *(_QWORD *)(v38 + 8);
                  }
                  while (v38 != v36);
                  v25 = *(_DWORD *)(v15 + 56);
                }
                v35 |= 0x8000u;
                *(_WORD *)(v34 + 18) = v35;
              }
            }
            while (v25 < *(_DWORD *)(v23 + 56));
            do
            {
              v41 = *--v33;
              v32 = v41;
            }
            while (v25 >= *(_DWORD *)(v41 + 56));
          }
          while (v9 < v33);
        }
        v42 = v9 - 1;
        if (v9 - 1 != v7)
          *v7 = *v42;
        *v42 = v15;
        if (v21 < v29)
        {
LABEL_51:
          result = sub_1C578EEE0(v7, v9 - 1, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v43 = sub_1C578FF44(v7, v9 - 1);
        result = sub_1C578FF44(v9, a2);
        if (!(_DWORD)result)
        {
          if (v43)
            continue;
          goto LABEL_51;
        }
        a2 = v9 - 1;
        if (!v43)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t *sub_1C578FD7C(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v3 = *a2;
  v4 = *result;
  v5 = *(_QWORD *)(*result + 40);
  v6 = *(__int16 *)(v5 + 18);
  if ((v6 & 0x80000000) == 0)
  {
    v21 = *(_QWORD *)(v5 + 48);
    if (v21 != v5 + 40)
    {
      v22 = 0;
      do
      {
        v23 = v21 - 24;
        if (!v21)
          v23 = 0;
        *(_DWORD *)(v23 + 56) = v22++;
        v21 = *(_QWORD *)(v21 + 8);
      }
      while (v21 != v5 + 40);
    }
    *(_WORD *)(v5 + 18) = v6 | 0x8000;
  }
  v7 = *(_DWORD *)(v4 + 56);
  v8 = *(_DWORD *)(v3 + 56);
  v9 = *a3;
  v10 = *(_QWORD *)(v3 + 40);
  v11 = *(__int16 *)(v10 + 18);
  if (v11 < 0)
  {
    v12 = *(_DWORD *)(v3 + 56);
  }
  else
  {
    v24 = *(_QWORD *)(v10 + 48);
    v12 = *(_DWORD *)(v3 + 56);
    if (v24 != v10 + 40)
    {
      v25 = 0;
      do
      {
        v26 = v24 - 24;
        if (!v24)
          v26 = 0;
        *(_DWORD *)(v26 + 56) = v25++;
        v24 = *(_QWORD *)(v24 + 8);
      }
      while (v24 != v10 + 40);
      v12 = *(_DWORD *)(v3 + 56);
    }
    *(_WORD *)(v10 + 18) = v11 | 0x8000;
  }
  v13 = *(_DWORD *)(v9 + 56);
  if (v7 >= v8)
  {
    if (v12 < v13)
    {
      *a2 = v9;
      *a3 = v3;
      v14 = *a2;
      v15 = *result;
      v16 = *(_QWORD *)(*result + 40);
      v17 = *(__int16 *)(v16 + 18);
      if ((v17 & 0x80000000) == 0)
      {
        v27 = *(_QWORD *)(v16 + 48);
        if (v27 != v16 + 40)
        {
          v28 = 0;
          do
          {
            v29 = v27 - 24;
            if (!v27)
              v29 = 0;
            *(_DWORD *)(v29 + 56) = v28++;
            v27 = *(_QWORD *)(v27 + 8);
          }
          while (v27 != v16 + 40);
        }
        *(_WORD *)(v16 + 18) = v17 | 0x8000;
      }
      if (*(_DWORD *)(v15 + 56) < *(_DWORD *)(v14 + 56))
      {
        *result = v14;
        *a2 = v15;
      }
    }
  }
  else
  {
    if (v12 < v13)
    {
      *result = v9;
LABEL_14:
      *a3 = v4;
      return result;
    }
    *result = v3;
    *a2 = v4;
    v18 = *a3;
    v19 = *(_QWORD *)(v4 + 40);
    v20 = *(__int16 *)(v19 + 18);
    if ((v20 & 0x80000000) == 0)
    {
      v30 = *(_QWORD *)(v19 + 48);
      if (v30 != v19 + 40)
      {
        v31 = 0;
        do
        {
          v32 = v30 - 24;
          if (!v30)
            v32 = 0;
          *(_DWORD *)(v32 + 56) = v31++;
          v30 = *(_QWORD *)(v30 + 8);
        }
        while (v30 != v19 + 40);
      }
      *(_WORD *)(v19 + 18) = v20 | 0x8000;
    }
    if (*(_DWORD *)(v4 + 56) < *(_DWORD *)(v18 + 56))
    {
      *a2 = v18;
      goto LABEL_14;
    }
  }
  return result;
}

BOOL sub_1C578FF44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = *a1;
      v8 = *(_QWORD *)(*a1 + 40);
      v9 = *(__int16 *)(v8 + 18);
      if ((v9 & 0x80000000) == 0)
      {
        v46 = *(_QWORD *)(v8 + 48);
        if (v46 != v8 + 40)
        {
          v47 = 0;
          do
          {
            v48 = v46 - 24;
            if (!v46)
              v48 = 0;
            *(_DWORD *)(v48 + 56) = v47++;
            v46 = *(_QWORD *)(v46 + 8);
          }
          while (v46 != v8 + 40);
        }
        *(_WORD *)(v8 + 18) = v9 | 0x8000;
      }
      if (*(_DWORD *)(v7 + 56) < *(_DWORD *)(v6 + 56))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      sub_1C578FD7C(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_1C579033C(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      v28 = a1 + 1;
      v29 = a1 + 2;
      v30 = a1 + 3;
      sub_1C579033C(a1, a1 + 1, a1 + 2, a1 + 3);
      v31 = *(a2 - 1);
      v32 = a1[3];
      v33 = *(_QWORD *)(v32 + 40);
      v34 = *(__int16 *)(v33 + 18);
      if ((v34 & 0x80000000) == 0)
      {
        v49 = *(_QWORD *)(v33 + 48);
        if (v49 != v33 + 40)
        {
          v50 = 0;
          do
          {
            v51 = v49 - 24;
            if (!v49)
              v51 = 0;
            *(_DWORD *)(v51 + 56) = v50++;
            v49 = *(_QWORD *)(v49 + 8);
          }
          while (v49 != v33 + 40);
        }
        *(_WORD *)(v33 + 18) = v34 | 0x8000;
      }
      if (*(_DWORD *)(v32 + 56) < *(_DWORD *)(v31 + 56))
      {
        *v30 = v31;
        *(a2 - 1) = v32;
        v35 = *v30;
        v36 = *v29;
        v37 = *(_QWORD *)(*v29 + 40);
        v38 = *(__int16 *)(v37 + 18);
        if ((v38 & 0x80000000) == 0)
        {
          v52 = *(_QWORD *)(v37 + 48);
          if (v52 != v37 + 40)
          {
            v53 = 0;
            do
            {
              v54 = v52 - 24;
              if (!v52)
                v54 = 0;
              *(_DWORD *)(v54 + 56) = v53++;
              v52 = *(_QWORD *)(v52 + 8);
            }
            while (v52 != v37 + 40);
          }
          *(_WORD *)(v37 + 18) = v38 | 0x8000;
        }
        v39 = *(_DWORD *)(v35 + 56);
        if (*(_DWORD *)(v36 + 56) < v39)
        {
          *v29 = v35;
          *v30 = v36;
          v40 = *v28;
          v41 = *(_QWORD *)(*v28 + 40);
          v42 = *(__int16 *)(v41 + 18);
          if ((v42 & 0x80000000) == 0)
          {
            v55 = *(_QWORD *)(v41 + 48);
            if (v55 != v41 + 40)
            {
              v56 = 0;
              do
              {
                v57 = v55 - 24;
                if (!v55)
                  v57 = 0;
                *(_DWORD *)(v57 + 56) = v56++;
                v55 = *(_QWORD *)(v55 + 8);
              }
              while (v55 != v41 + 40);
              v39 = *(_DWORD *)(v35 + 56);
            }
            *(_WORD *)(v41 + 18) = v42 | 0x8000;
          }
          if (*(_DWORD *)(v40 + 56) < v39)
          {
            a1[1] = v35;
            a1[2] = v40;
            v43 = *a1;
            v44 = *(_QWORD *)(*a1 + 40);
            v45 = *(__int16 *)(v44 + 18);
            if ((v45 & 0x80000000) == 0)
            {
              v58 = *(_QWORD *)(v44 + 48);
              if (v58 != v44 + 40)
              {
                v59 = 0;
                do
                {
                  v60 = v58 - 24;
                  if (!v58)
                    v60 = 0;
                  *(_DWORD *)(v60 + 56) = v59++;
                  v58 = *(_QWORD *)(v58 + 8);
                }
                while (v58 != v44 + 40);
                v39 = *(_DWORD *)(v35 + 56);
              }
              *(_WORD *)(v44 + 18) = v45 | 0x8000;
            }
            if (*(_DWORD *)(v43 + 56) < v39)
            {
              *a1 = v35;
              a1[1] = v43;
            }
          }
        }
      }
      return 1;
    default:
      v10 = a1 + 2;
      sub_1C578FD7C(a1, a1 + 1, a1 + 2);
      v11 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v12 = 0;
      break;
  }
  while (1)
  {
    v13 = *v11;
    v14 = *v10;
    v15 = *(_QWORD *)(*v10 + 40);
    v16 = *(__int16 *)(v15 + 18);
    if ((v16 & 0x80000000) == 0)
    {
      v25 = *(_QWORD *)(v15 + 48);
      if (v25 != v15 + 40)
      {
        v26 = 0;
        do
        {
          v27 = v25 - 24;
          if (!v25)
            v27 = 0;
          *(_DWORD *)(v27 + 56) = v26++;
          v25 = *(_QWORD *)(v25 + 8);
        }
        while (v25 != v15 + 40);
      }
      *(_WORD *)(v15 + 18) = v16 | 0x8000;
    }
    v17 = *(_DWORD *)(v13 + 56);
    if (*(_DWORD *)(v14 + 56) < v17)
    {
      v18 = v11;
      while (1)
      {
        *v18 = v14;
        if (v10 == a1)
          break;
        v18 = v10;
        v19 = *--v10;
        v14 = v19;
        v20 = *(_QWORD *)(v19 + 40);
        v21 = *(__int16 *)(v20 + 18);
        if ((v21 & 0x80000000) == 0)
        {
          v22 = *(_QWORD *)(v20 + 48);
          if (v22 != v20 + 40)
          {
            v23 = 0;
            do
            {
              v24 = v22 - 24;
              if (!v22)
                v24 = 0;
              *(_DWORD *)(v24 + 56) = v23++;
              v22 = *(_QWORD *)(v22 + 8);
            }
            while (v22 != v20 + 40);
            v17 = *(_DWORD *)(v13 + 56);
          }
          *(_WORD *)(v20 + 18) = v21 | 0x8000;
        }
        if (*(_DWORD *)(v14 + 56) >= v17)
          goto LABEL_22;
      }
      v18 = a1;
LABEL_22:
      *v18 = v13;
      if (++v12 == 8)
        return v11 + 1 == a2;
    }
    v10 = v11++;
    if (v11 == a2)
      return 1;
  }
}

uint64_t *sub_1C579033C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  result = sub_1C578FD7C(a1, a2, a3);
  v9 = *a4;
  v10 = *a3;
  v11 = *(_QWORD *)(*a3 + 40);
  v12 = *(__int16 *)(v11 + 18);
  if ((v12 & 0x80000000) == 0)
  {
    v21 = *(_QWORD *)(v11 + 48);
    if (v21 != v11 + 40)
    {
      v22 = 0;
      do
      {
        v23 = v21 - 24;
        if (!v21)
          v23 = 0;
        *(_DWORD *)(v23 + 56) = v22++;
        v21 = *(_QWORD *)(v21 + 8);
      }
      while (v21 != v11 + 40);
    }
    *(_WORD *)(v11 + 18) = v12 | 0x8000;
  }
  if (*(_DWORD *)(v10 + 56) < *(_DWORD *)(v9 + 56))
  {
    *a3 = v9;
    *a4 = v10;
    v13 = *a3;
    v14 = *a2;
    v15 = *(_QWORD *)(*a2 + 40);
    v16 = *(__int16 *)(v15 + 18);
    if ((v16 & 0x80000000) == 0)
    {
      v24 = *(_QWORD *)(v15 + 48);
      if (v24 != v15 + 40)
      {
        v25 = 0;
        do
        {
          v26 = v24 - 24;
          if (!v24)
            v26 = 0;
          *(_DWORD *)(v26 + 56) = v25++;
          v24 = *(_QWORD *)(v24 + 8);
        }
        while (v24 != v15 + 40);
      }
      *(_WORD *)(v15 + 18) = v16 | 0x8000;
    }
    if (*(_DWORD *)(v14 + 56) < *(_DWORD *)(v13 + 56))
    {
      *a2 = v13;
      *a3 = v14;
      v17 = *a2;
      v18 = *a1;
      v19 = *(_QWORD *)(*a1 + 40);
      v20 = *(__int16 *)(v19 + 18);
      if ((v20 & 0x80000000) == 0)
      {
        v27 = *(_QWORD *)(v19 + 48);
        if (v27 != v19 + 40)
        {
          v28 = 0;
          do
          {
            v29 = v27 - 24;
            if (!v27)
              v29 = 0;
            *(_DWORD *)(v29 + 56) = v28++;
            v27 = *(_QWORD *)(v27 + 8);
          }
          while (v27 != v19 + 40);
        }
        *(_WORD *)(v19 + 18) = v20 | 0x8000;
      }
      if (*(_DWORD *)(v18 + 56) < *(_DWORD *)(v17 + 56))
      {
        *a1 = v17;
        *a2 = v18;
      }
    }
  }
  return result;
}

void sub_1C57904B8()
{
  JUMPOUT(0x1CAA32FC0);
}

__n128 sub_1C57904CC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_1E817D2F8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1C5790504(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E817D2F8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

char **sub_1C5790524(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  BOOL v13;
  unsigned int v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char **result;
  uint64_t v20;

  v3 = *a2;
  v4 = *(_QWORD *)(a1 + 8);
  v20 = *a2;
  if ((*(_BYTE *)(v4 + 2088) & 1) != 0)
  {
    v6 = v4 + 2096;
    v5 = 16;
  }
  else
  {
    v5 = *(_DWORD *)(v4 + 2104);
    if (!v5)
    {
      v15 = 0;
      goto LABEL_17;
    }
    v6 = *(_QWORD *)(v4 + 2096);
  }
  v7 = v5 - 1;
  v8 = v7 & ((v3 >> 4) ^ (v3 >> 9));
  v9 = (_QWORD *)(v6 + 8 * v8);
  v10 = *v9;
  if (v3 == *v9)
    goto LABEL_20;
  v11 = 0;
  v12 = 1;
  while (v10 != -4096)
  {
    if (v11)
      v13 = 0;
    else
      v13 = v10 == -8192;
    if (v13)
      v11 = v9;
    v14 = v8 + v12++;
    v8 = v14 & v7;
    v9 = (_QWORD *)(v6 + 8 * v8);
    v10 = *v9;
    if (v3 == *v9)
      goto LABEL_20;
  }
  if (v11)
    v15 = v11;
  else
    v15 = v9;
LABEL_17:
  v16 = sub_1C4E08FFC(v4 + 2088, (uint64_t)&v20, &v20, v15);
  *v16 = v20;
  v17 = v20;
  v18 = *(unsigned int *)(v4 + 2232);
  if (v18 >= *(_DWORD *)(v4 + 2236))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod(v4 + 2224, v4 + 2240, v18 + 1, 8);
    LODWORD(v18) = *(_DWORD *)(v4 + 2232);
  }
  *(_QWORD *)(*(_QWORD *)(v4 + 2224) + 8 * v18) = v17;
  ++*(_DWORD *)(v4 + 2232);
LABEL_20:
  result = (char **)sub_1C4D9F8B4(v3);
  if (v3)
  {
    if ((_DWORD)result)
      return llvm::AssumptionCache::registerAssumption(*(char ***)(a1 + 16), v3);
  }
  return result;
}

BOOL sub_1C5790664(uint64_t a1)
{
  uint64_t v1;

  return *(_BYTE *)(a1 + 16) == 84
      && (v1 = *(_QWORD *)(a1 - 32)) != 0
      && !*(_BYTE *)(v1 + 16)
      && *(_QWORD *)(v1 + 24) == *(_QWORD *)(a1 + 72)
      && (*(_BYTE *)(v1 + 33) & 0x20) != 0
      && *(_DWORD *)(v1 + 36) == 126;
}

uint64_t sub_1C57906B0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 2224);
  if (v2 != (void *)(a1 + 2240))
    free(v2);
  if ((*(_BYTE *)(a1 + 2088) & 1) == 0)
    MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 2096), 8);
  MEMORY[0x1CAA32FB4](*(_QWORD *)(a1 + 2064), 8);
  if (*(_QWORD *)a1 != a1 + 16)
    free(*(void **)a1);
  return a1;
}

__n128 sub_1C5790724(__n128 *a1, int **a2, _WORD *a3)
{
  __n128 result;
  int *v7;

  llvm::cl::Option::setArgStr((uint64_t)&qword_1ED810C18, "instcombine-infinite-loop-threshold", 0x23uLL);
  result = *a1;
  xmmword_1ED810C38 = (__int128)*a1;
  v7 = *a2;
  dword_1ED810C98 = **a2;
  byte_1ED810CAC = 1;
  dword_1ED810CA8 = *v7;
  word_1ED810C22 = (32 * (*a3 & 3)) | word_1ED810C22 & 0xFF9F;
  return result;
}

uint64_t sub_1C57907A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;
  uint64_t v7;
  _QWORD *v8;

  LODWORD(v2) = *(unsigned __int8 *)(a2 + 16);
  if (a2)
    v3 = (_DWORD)v2 == 91;
  else
    v3 = 0;
  v4 = v3;
  if (v3)
  {
    v2 = *(_QWORD *)(a2 - 64);
    if (v2)
    {
      **(_QWORD **)a1 = v2;
      if (sub_1C4E7B480(*(_QWORD *)(a2 - 32)))
      {
        v7 = *(unsigned int *)(a2 + 72);
        v8 = *(_QWORD **)(a1 + 16);
        *v8 = *(_QWORD *)(a2 + 64);
        v8[1] = v7;
        LODWORD(v2) = 1;
      }
      else
      {
        LODWORD(v2) = 0;
      }
    }
  }
  return v4 & v2;
}

uint64_t sub_1C5790824(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = 0;
  if (a2 && *(_BYTE *)(a2 + 16) == 91)
  {
    v5 = *(_QWORD *)(a2 - 64);
    if (!v5)
      return 0;
    **(_QWORD **)a1 = v5;
    result = sub_1C4E7B480(*(_QWORD *)(a2 - 32));
    if (!(_DWORD)result)
      return result;
    v6 = *(unsigned int *)(a2 + 72);
    v7 = *(_QWORD *)(a1 + 16);
    return *(_QWORD *)(v7 + 8) == v6 && memcmp(*(const void **)v7, *(const void **)(a2 + 64), 4 * v6) == 0;
  }
  return result;
}

uint64_t sub_1C57908A8(uint64_t result, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t), unint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  if (a4 >= 2)
  {
    v8 = (uint64_t *)result;
    if (a4 == 2)
    {
      result = (*a3)(*(a2 - 1), *(_QWORD *)result);
      if ((_DWORD)result)
      {
        v9 = *v8;
        *v8 = *(a2 - 1);
        *(a2 - 1) = v9;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      v20 = (char *)a5;
      v21 = a4 >> 1;
      v22 = (uint64_t *)(result + 8 * (a4 >> 1));
      v23 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_1C5790AF0((uint64_t *)result, v22, a3, v23, a5);
        v24 = (uint64_t *)&v20[8 * v21];
        result = (uint64_t)sub_1C5790AF0(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v24);
        v25 = &v20[8 * a4];
        v26 = v24;
        while (v26 != (uint64_t *)v25)
        {
          result = (*a3)(*v26, *(_QWORD *)v20);
          if ((_DWORD)result)
            v27 = (char *)v26;
          else
            v27 = v20;
          v20 += 8 * (result ^ 1);
          v26 += result;
          *v8++ = *(_QWORD *)v27;
          if (v20 == (char *)v24)
          {
            if (v26 != (uint64_t *)v25)
            {
              v28 = 0;
              do
              {
                v8[v28] = v26[v28];
                ++v28;
              }
              while (&v26[v28] != (uint64_t *)v25);
            }
            return result;
          }
        }
        if (v20 != (char *)v24)
        {
          v29 = 0;
          do
          {
            v8[v29] = *(_QWORD *)&v20[v29 * 8];
            ++v29;
          }
          while (&v20[v29 * 8] != (char *)v24);
        }
      }
      else
      {
        sub_1C57908A8(result, v22, a3, v23, a5, a6);
        sub_1C57908A8(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), v20, a6);
        return sub_1C5790CE4((uint64_t)v8, &v8[a4 >> 1], a2, (unsigned int (**)(_QWORD, _QWORD))a3, a4 >> 1, a4 - (a4 >> 1), v20, a6);
      }
    }
    else if ((uint64_t *)result != a2)
    {
      v11 = (uint64_t *)(result + 8);
      if ((uint64_t *)(result + 8) != a2)
      {
        v12 = 0;
        v13 = (uint64_t *)result;
        do
        {
          v15 = *v13;
          v14 = v13[1];
          v13 = v11;
          result = (*a3)(v14, v15);
          if ((_DWORD)result)
          {
            v16 = *v13;
            v17 = v12;
            while (1)
            {
              *(uint64_t *)((char *)v8 + v17 + 8) = *(uint64_t *)((char *)v8 + v17);
              if (!v17)
                break;
              result = (*a3)(v16, *(uint64_t *)((char *)v8 + v17 - 8));
              v17 -= 8;
              if ((result & 1) == 0)
              {
                v18 = (uint64_t *)((char *)v8 + v17 + 8);
                goto LABEL_15;
              }
            }
            v18 = v8;
LABEL_15:
            *v18 = v16;
          }
          v11 = v13 + 1;
          v12 += 8;
        }
        while (v13 + 1 != a2);
      }
    }
  }
  return result;
}

uint64_t *sub_1C5790AF0(uint64_t *result, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t), unint64_t a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  if (a4)
  {
    v5 = a5;
    v7 = result;
    if (a4 == 1)
    {
LABEL_9:
      *v5 = *v7;
      return result;
    }
    if (a4 == 2)
    {
      v10 = a2 - 1;
      result = (uint64_t *)(*a3)(*(a2 - 1), *result);
      if ((_DWORD)result)
        v11 = v10;
      else
        v11 = v7;
      *v5++ = *v11;
      if (!(_DWORD)result)
        v7 = v10;
      goto LABEL_9;
    }
    if ((uint64_t)a4 > 8)
    {
      v20 = &result[a4 >> 1];
      sub_1C57908A8(result, v20, a3, a4 >> 1, a5, a4 >> 1);
      result = (uint64_t *)sub_1C57908A8(&v7[a4 >> 1], a2, a3, a4 - (a4 >> 1), &v5[a4 >> 1], a4 - (a4 >> 1));
      v21 = &v7[a4 >> 1];
      while (v21 != a2)
      {
        result = (uint64_t *)(*a3)(*v21, *v7);
        if ((_DWORD)result)
          v22 = v21;
        else
          v22 = v7;
        v21 += result;
        v7 += result ^ 1;
        *v5++ = *v22;
        if (v7 == v20)
        {
          if (v21 != a2)
          {
            v23 = 0;
            do
            {
              v5[v23] = v21[v23];
              ++v23;
            }
            while (&v21[v23] != a2);
          }
          return result;
        }
      }
      if (v7 != v20)
      {
        v24 = 0;
        do
        {
          v5[v24] = v7[v24];
          ++v24;
        }
        while (&v7[v24] != v20);
      }
    }
    else if (result != a2)
    {
      v12 = result + 1;
      *a5 = *result;
      if (result + 1 != a2)
      {
        v13 = 0;
        v14 = a5;
        do
        {
          v15 = v14;
          v16 = *v14++;
          result = (uint64_t *)(*a3)(*v12, v16);
          v17 = v14;
          if ((_DWORD)result)
          {
            v15[1] = *v15;
            v17 = v5;
            if (v15 != v5)
            {
              v18 = v13;
              while (1)
              {
                v17 = (uint64_t *)((char *)v5 + v18);
                result = (uint64_t *)(*a3)(*v12, *(uint64_t *)((char *)v5 + v18 - 8));
                if (!(_DWORD)result)
                  break;
                *v17 = *(v17 - 1);
                v18 -= 8;
                if (!v18)
                {
                  v17 = v5;
                  break;
                }
              }
            }
          }
          v19 = *v12++;
          *v17 = v19;
          v13 += 8;
        }
        while (v12 != a2);
      }
    }
  }
  return result;
}

uint64_t sub_1C5790CE4(uint64_t result, _QWORD *a2, _QWORD *a3, unsigned int (**a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v10;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  unsigned int (**v21)(_QWORD, uint64_t);
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, _QWORD);
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  BOOL v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  char *v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (**v63)(_QWORD, _QWORD);
  _QWORD *v64;
  char *__src;
  uint64_t v66;

  if (!a6)
    return result;
  v10 = a6;
  v15 = (_QWORD *)result;
  while (a5 > a8 && v10 > a8)
  {
    if (!a5)
      return result;
    while (1)
    {
      result = ((uint64_t (*)(_QWORD, _QWORD))*a4)(*a2, *v15);
      if ((result & 1) != 0)
        break;
      ++v15;
      if (!--a5)
        return result;
    }
    v64 = a3;
    __src = a7;
    v66 = v10;
    if (a5 >= v10)
    {
      if (a5 == 1)
      {
        v59 = *v15;
        *v15 = *a2;
        *a2 = v59;
        return result;
      }
      if (a5 >= 0)
        v25 = a5;
      else
        v25 = a5 + 1;
      v19 = v25 >> 1;
      v20 = &v15[v25 >> 1];
      v36 = a3 == a2;
      v18 = a3;
      v17 = a3 - a2;
      v63 = a4;
      if (v36)
        goto LABEL_34;
      v61 = a8;
      v26 = *a4;
      v18 = a2;
      do
      {
        v27 = &v18[v17 >> 1];
        v29 = *v27;
        v28 = v27 + 1;
        v30 = v26(v29, *v20);
        if (v30)
          v17 += ~(v17 >> 1);
        else
          v17 >>= 1;
        if (v30)
          v18 = v28;
      }
      while (v17);
      v17 = v18 - a2;
    }
    else
    {
      if (v10 >= 0)
        v16 = v10;
      else
        v16 = v10 + 1;
      v17 = v16 >> 1;
      v18 = &a2[v16 >> 1];
      v19 = a2 - v15;
      if (a2 == v15)
      {
        v15 = a2;
        v20 = a2;
        a2 += v16 >> 1;
        goto LABEL_51;
      }
      v61 = a8;
      v20 = v15;
      v21 = a4;
      do
      {
        v22 = &v20[v19 >> 1];
        v24 = *v22;
        v23 = v22 + 1;
        if ((*v21)(*v18, v24))
        {
          v19 >>= 1;
        }
        else
        {
          v20 = v23;
          v19 += ~(v19 >> 1);
        }
      }
      while (v19);
      v63 = v21;
      v19 = v20 - v15;
    }
    a8 = v61;
LABEL_34:
    if (v20 == a2)
    {
      v20 = a2;
      a2 = v18;
    }
    else if (a2 == v18)
    {
      v18 = a2;
      a2 = v20;
    }
    else if (v20 + 1 == a2)
    {
      v37 = *v20;
      memmove(v20, a2, (char *)v18 - (char *)a2);
      a2 = (_QWORD *)((char *)v20 + (char *)v18 - (char *)a2);
      *a2 = v37;
    }
    else
    {
      if (a2 + 1 == v18)
      {
        v62 = a8;
        v39 = *(v18 - 1);
        a2 = v20 + 1;
        if (v18 - 1 != v20)
          memmove(v20 + 1, v20, (char *)(v18 - 1) - (char *)v20);
        *v20 = v39;
        a8 = v62;
        a4 = v63;
        goto LABEL_51;
      }
      v31 = a2 - v20;
      if (v31 != v18 - a2)
      {
        v40 = v18 - a2;
        v41 = a2 - v20;
        do
        {
          v42 = v41;
          v41 = v40;
          v40 = v42 % v40;
        }
        while (v40);
        a4 = v63;
        if (v41)
        {
          v43 = &v20[v41];
          do
          {
            v45 = *--v43;
            v44 = v45;
            v46 = &v43[v31];
            v47 = v43;
            do
            {
              v48 = v47;
              v47 = v46;
              *v48 = *v46;
              v49 = __OFSUB__(v31, v18 - v46);
              v51 = v31 - (v18 - v46);
              v50 = (v51 < 0) ^ v49;
              v46 = &v20[v51];
              if (v50)
                v46 = &v47[v31];
            }
            while (v46 != v43);
            *v47 = v44;
          }
          while (v43 != v20);
        }
        a2 = &v20[v18 - a2];
        goto LABEL_51;
      }
      v32 = 0;
      do
      {
        v33 = v20[v32];
        v20[v32] = a2[v32];
        v34 = (uint64_t)&v20[v32 + 1];
        a2[v32] = v33;
        v35 = (uint64_t)&a2[++v32];
        v36 = (_QWORD *)v34 == a2 || v35 == (_QWORD)v18;
      }
      while (!v36);
    }
    a4 = v63;
LABEL_51:
    a5 -= v19;
    v38 = v66 - v17;
    if ((uint64_t)(v17 + v19) >= (uint64_t)(v66 - v17 + a5))
    {
      a7 = __src;
      result = sub_1C5790CE4(a2, v18, v64, a4, a5, v66 - v17, __src, a8);
      v18 = v20;
      v10 = v17;
      a5 = v19;
      a3 = a2;
    }
    else
    {
      result = sub_1C5790CE4(v15, v20, a2, a4, v19, v17, __src, a8);
      v15 = a2;
      a3 = v64;
      v10 = v38;
      a7 = __src;
    }
    a2 = v18;
    if (!v10)
      return result;
  }
  if (a5 <= v10)
  {
    if (v15 != a2)
    {
      v56 = 0;
      do
      {
        *(_QWORD *)&a7[v56] = v15[v56 / 8];
        v56 += 8;
      }
      while (&v15[v56 / 8] != a2);
      if (v56)
      {
        v57 = a7;
        while (a2 != a3)
        {
          result = ((uint64_t (*)(_QWORD, _QWORD))*a4)(*a2, *(_QWORD *)v57);
          if ((_DWORD)result)
            v58 = (char *)a2;
          else
            v58 = v57;
          v57 += 8 * (result ^ 1);
          a2 += result;
          *v15++ = *(_QWORD *)v58;
          if (&a7[v56] == v57)
            return result;
        }
        return (uint64_t)memmove(v15, v57, a7 - v57 + v56);
      }
    }
  }
  else if (a2 != a3)
  {
    v52 = 0;
    do
    {
      *(_QWORD *)&a7[v52 * 8] = a2[v52];
      ++v52;
    }
    while (&a2[v52] != a3);
    if (v52 * 8)
    {
      v53 = &a7[v52 * 8];
      v54 = a3 - 1;
      while (a2 != v15)
      {
        result = ((uint64_t (*)(_QWORD, _QWORD))*a4)(*((_QWORD *)v53 - 1), *(a2 - 1));
        if ((_DWORD)result)
          v55 = (char *)a2;
        else
          v55 = v53;
        if ((_DWORD)result)
          --a2;
        else
          v53 -= 8;
        *v54-- = *((_QWORD *)v55 - 1);
        if (v53 == a7)
          return result;
      }
      if (v53 != a7)
      {
        v60 = 0;
        do
        {
          v54[v60] = *(_QWORD *)&v53[v60 * 8 - 8];
          --v60;
        }
        while (&v53[v60 * 8] != a7);
      }
    }
  }
  return result;
}

BOOL sub_1C57911DC(uint64_t a1, llvm::Use *a2)
{
  _BOOL8 result;

  result = llvm::DominatorTree::dominates(*(llvm::DominatorTree **)(*(_QWORD *)a1 + 72), *(const llvm::Value **)(a1 + 8), a2);
  **(_BYTE **)(a1 + 16) |= result;
  return result;
}

uint64_t sub_1C5791218()
{
  __n128 v1;
  int v2;
  int *v3;

  dword_1ED810A8C = sub_1C4D9A2C4("instcombine-visit", 0x11uLL, "Controls which instructions are visited", 0x27uLL);
  v1.n128_u64[0] = (unint64_t)"Enable code sinking";
  v1.n128_u64[1] = 19;
  LOBYTE(v2) = 1;
  v3 = &v2;
  sub_1C6136B80((uint64_t)&qword_1ED810A90[1], "instcombine-code-sinking", &v1, (_BYTE **)&v3);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &qword_1ED810A90[1], &dword_1C475E000);
  v2 = 32;
  v3 = &v2;
  v1.n128_u64[0] = (unint64_t)"Maximum number of undroppable users for instruction sinking";
  v1.n128_u64[1] = 59;
  sub_1C62A77A0(&v3, (__int128 *)&v1);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, qword_1ED810B58, &dword_1C475E000);
  v1.n128_u64[0] = (unint64_t)"Limit the maximum number of instruction combining iterations";
  v1.n128_u64[1] = 60;
  v3 = (int *)&unk_1C8660830;
  sub_1C62A7860((__int128 *)&v1, &v3);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &qword_1ED833760, &dword_1C475E000);
  v1.n128_u64[0] = (unint64_t)"Number of instruction combining iterations considered an infinite loop";
  v1.n128_u64[1] = 70;
  v3 = (int *)&unk_1C8660834;
  v2 = 1;
  sub_1C62A7924(&v1, &v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &qword_1ED810C18, &dword_1C475E000);
  v2 = 1024;
  v3 = &v2;
  v1.n128_u64[0] = (unint64_t)"Maximum array size considered when doing a combine";
  v1.n128_u64[1] = 50;
  sub_1C62A79C8(&v3, (__int128 *)&v1);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, qword_1ED810CD8, &dword_1C475E000);
  LODWORD(v3) = 1;
  LOBYTE(v2) = 1;
  v1.n128_u64[0] = (unint64_t)&v2;
  sub_1C62A7A88(&v3, (unsigned __int8 **)&v1);
  return __cxa_atexit((void (*)(void *))sub_1C4785FB8, &qword_1ED810D98, &dword_1C475E000);
}

uint64_t sub_1C57913EC(uint64_t a1, _QWORD *a2, _QWORD *a3, _BYTE *a4)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  const void **v18;
  uint64_t v19;
  uint64_t result;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  uint8x8_t v26;
  const void **v27;
  uint64_t v28;
  size_t v29;
  unsigned int v30;
  void *v31;
  unsigned int v32;
  uint64_t v33;
  void *v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v41 = 0;
  *a4 = 0;
  v38 = a2;
  v39 = &v41;
  v40 = 0;
  v8 = *(unsigned __int8 *)(a1 + 16);
  if (v8 != 5)
  {
    if (v8 != 51)
      goto LABEL_10;
    v9 = *(_QWORD *)(a1 - 64);
    if (!v9)
      goto LABEL_10;
    *a2 = v9;
    if (!sub_1C4D89F84((uint64_t)&v39, *(unsigned __int8 **)(a1 - 32)))
      goto LABEL_10;
LABEL_9:
    *a4 = 1;
    goto LABEL_18;
  }
  if (*(_WORD *)(a1 + 18) == 23)
  {
    v10 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (v10)
    {
      *a2 = v10;
      if ((sub_1C4D8A004((uint64_t)&v39, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) != 0)goto LABEL_9;
    }
  }
LABEL_10:
  v38 = a2;
  v39 = &v41;
  v40 = 0;
  v11 = *(unsigned __int8 *)(a1 + 16);
  if (v11 != 5)
  {
    if (v11 != 50)
      goto LABEL_21;
    v12 = *(_QWORD *)(a1 - 64);
    if (!v12)
      goto LABEL_21;
    *a2 = v12;
    if (!sub_1C4D89F84((uint64_t)&v39, *(unsigned __int8 **)(a1 - 32)))
      goto LABEL_21;
LABEL_18:
    v14 = v41;
    if (*((_DWORD *)a3 + 2) > 0x40u || *(_DWORD *)(v41 + 8) > 0x40u)
    {
      if ((_QWORD *)v41 != a3)
      {
        llvm::APInt::reallocate((uint64_t)a3, *(_DWORD *)(v41 + 8));
        v33 = *((unsigned int *)a3 + 2);
        if (v33 <= 0x40)
          *a3 = *(_QWORD *)v14;
        else
          memcpy((void *)*a3, *(const void **)v14, ((unint64_t)(v33 + 63) >> 3) & 0x3FFFFFF8);
      }
    }
    else
    {
      *a3 = *(_QWORD *)v41;
      *((_DWORD *)a3 + 2) = *(_DWORD *)(v14 + 8);
    }
    return 1;
  }
  if (*(_WORD *)(a1 + 18) == 22)
  {
    v13 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (v13)
    {
      *a2 = v13;
      if ((sub_1C4D8A004((uint64_t)&v39, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) != 0)goto LABEL_18;
    }
  }
LABEL_21:
  v38 = a2;
  v39 = &v41;
  v40 = 0;
  v15 = *(unsigned __int8 *)(a1 + 16);
  if (v15 == 5)
  {
    if (*(_WORD *)(a1 + 18) != 28)
      return 0;
    v17 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (!v17)
      return 0;
    *a2 = v17;
    if (!sub_1C4D8A004((uint64_t)&v39, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)))return 0;
  }
  else
  {
    if (v15 != 56)
      return 0;
    v16 = *(_QWORD *)(a1 - 64);
    if (!v16)
      return 0;
    *a2 = v16;
    if ((sub_1C4D89F84((uint64_t)&v39, *(unsigned __int8 **)(a1 - 32)) & 1) == 0)
      return 0;
  }
  v18 = (const void **)v41;
  v19 = *(unsigned int *)(v41 + 8);
  v37 = v19;
  if (v19 > 0x40)
  {
    v21 = ((unint64_t)(v19 + 63) >> 3) & 0x3FFFFFF8;
    v36 = operator new[]();
    memcpy((void *)v36, *v18, v21);
  }
  else
  {
    v36 = *(_QWORD *)v41;
  }
  llvm::APInt::operator+=((uint64_t)&v36, 1uLL);
  v22 = v37;
  result = v36;
  v37 = 0;
  if (v22 > 0x40)
  {
    v23 = 0;
    v24 = 0;
    v25 = ((unint64_t)(v22 + 63) >> 3) & 0x3FFFFFF8;
    do
    {
      v26 = (uint8x8_t)vcnt_s8(*(int8x8_t *)(v36 + v23));
      v26.i16[0] = vaddlv_u8(v26);
      v24 += v26.i32[0];
      v23 += 8;
    }
    while (v25 != v23);
    if (v36)
    {
      MEMORY[0x1CAA32F9C](v36, 0x1000C8000313F17);
      if (v37 >= 0x41)
      {
        if (v36)
          MEMORY[0x1CAA32F9C](v36, 0x1000C8000313F17);
      }
    }
    if (v24 != 1)
      return 0;
    goto LABEL_46;
  }
  if (!v36)
    return result;
  if ((v36 & (v36 - 1)) == 0)
  {
LABEL_46:
    v27 = (const void **)v41;
    v28 = *(unsigned int *)(v41 + 8);
    v35 = v28;
    if (v28 > 0x40)
    {
      v29 = ((unint64_t)(v28 + 63) >> 3) & 0x3FFFFFF8;
      v34 = (void *)operator new[]();
      memcpy(v34, *v27, v29);
    }
    else
    {
      v34 = *(void **)v41;
    }
    llvm::APInt::operator+=((uint64_t)&v34, 1uLL);
    v30 = v35;
    v31 = v34;
    v35 = 0;
    if (*((_DWORD *)a3 + 2) > 0x40u && *a3)
    {
      MEMORY[0x1CAA32F9C](*a3, 0x1000C8000313F17);
      v32 = v35;
      *a3 = v31;
      *((_DWORD *)a3 + 2) = v30;
      if (v32 >= 0x41)
      {
        if (v34)
          MEMORY[0x1CAA32F9C](v34, 0x1000C8000313F17);
      }
    }
    else
    {
      *a3 = v34;
      *((_DWORD *)a3 + 2) = v30;
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1C5791810(uint64_t a1, _QWORD *a2, llvm::APInt *a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  llvm::APInt *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v18;
  _QWORD *v19;
  llvm::APInt **v20;
  uint64_t v21;
  llvm::APInt *v22;

  v21 = 0;
  v22 = 0;
  v19 = a2;
  v20 = &v22;
  v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 == 5)
  {
    if (*(_WORD *)(a1 + 18) != 17)
      goto LABEL_12;
    v8 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (!v8)
      goto LABEL_12;
    *a2 = v8;
    if ((sub_1C4D8A004((uint64_t)&v20, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)goto LABEL_12;
LABEL_9:
    v9 = v22;
    if (*((_DWORD *)a3 + 2) > 0x40u || *((_DWORD *)v22 + 2) > 0x40u)
    {
      if (v22 != a3)
      {
        llvm::APInt::reallocate((uint64_t)a3, *((_DWORD *)v22 + 2));
        v18 = *((unsigned int *)a3 + 2);
        if (v18 <= 0x40)
          *(_QWORD *)a3 = *(_QWORD *)v9;
        else
          memcpy(*(void **)a3, *(const void **)v9, ((unint64_t)(v18 + 63) >> 3) & 0x3FFFFFF8);
      }
    }
    else
    {
      *(_QWORD *)a3 = *(_QWORD *)v22;
      *((_DWORD *)a3 + 2) = *((_DWORD *)v9 + 2);
    }
    return 1;
  }
  if (v6 == 45)
  {
    v7 = *(_QWORD *)(a1 - 64);
    if (v7)
    {
      *a2 = v7;
      if (sub_1C4D89F84((uint64_t)&v20, *(unsigned __int8 **)(a1 - 32)))
        goto LABEL_9;
    }
  }
LABEL_12:
  v19 = a2;
  v20 = &v22;
  v21 = 0;
  v10 = *(unsigned __int8 *)(a1 + 16);
  if (v10 == 5)
  {
    if (*(_WORD *)(a1 + 18) != 25)
      return 0;
    v12 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
    if (!v12)
      return 0;
    *a2 = v12;
    if ((sub_1C4D8A004((uint64_t)&v20, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)return 0;
  }
  else
  {
    if (v10 != 53)
      return 0;
    v11 = *(_QWORD *)(a1 - 64);
    if (!v11)
      return 0;
    *a2 = v11;
    if (!sub_1C4D89F84((uint64_t)&v20, *(unsigned __int8 **)(a1 - 32)))
      return 0;
  }
  v13 = *((_DWORD *)v22 + 2);
  LODWORD(v20) = v13;
  if (v13 > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v19, 1, 0);
  }
  else
  {
    if (v13)
      v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    else
      LOBYTE(v14) = 0;
    v19 = (_QWORD *)(v14 & 1);
  }
  if (*((_DWORD *)a3 + 2) >= 0x41u)
  {
    if (*(_QWORD *)a3)
      MEMORY[0x1CAA32F9C](*(_QWORD *)a3, 0x1000C8000313F17);
  }
  *(_QWORD *)a3 = v19;
  v15 = v20;
  *((_DWORD *)a3 + 2) = (_DWORD)v20;
  v16 = sub_1C47EE5B8((uint64_t ***)v22, v15);
  sub_1C4888094((uint64_t)a3, v16);
  return 1;
}

llvm::Value *sub_1C5791A5C(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  llvm::Type *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  llvm::APInt ***v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  llvm::Constant *v25;
  llvm::Type *v26;
  unsigned int PrimitiveSizeInBits;
  llvm::Type *v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  int v38;
  uint64_t v39;
  llvm::Constant *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  llvm::Constant *v45;
  llvm::Constant *v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  llvm::Constant **v51;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ****v59;
  uint64_t ***v60;
  int v61;
  int v62;
  uint64_t ***v63;
  char *v64;
  uint64_t *v65;
  uint64_t *v66;
  char *v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char v78;
  llvm::Constant *v79;
  char v80;
  llvm::Constant *v81;
  int v82;
  llvm::Constant *v83;
  unsigned int v84;
  llvm::APInt *v85[2];
  uint64_t *v86;
  llvm::Constant *v87;
  llvm::Constant **v88;
  uint64_t *v89;
  llvm::APInt **v90;
  _QWORD *v91;
  llvm::Constant **v92;
  _QWORD v93[2];
  uint64_t ***v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;

  v96 = 0;
  v97 = 0;
  v94 = 0;
  v95 = 0;
  v88 = (llvm::Constant **)&v97;
  v89 = &v95;
  v90 = (llvm::APInt **)&v94;
  v91 = &v97;
  v92 = (llvm::Constant **)&v95;
  v93[0] = &v94;
  v93[1] = &v96;
  v4 = sub_1C57A18A0(&v88, *(_QWORD *)(a2 - 64));
  v5 = *(_QWORD *)(a2 - 32);
  if (!v4 || !v5)
  {
    if (!sub_1C57A18A0(&v88, v5))
      return 0;
    v5 = *(_QWORD *)(a2 - 64);
    if (!v5)
      return 0;
  }
  v96 = v5;
  if (*(_BYTE *)(a2 + 16) == 43 && *(_QWORD *)(a2 - 32) != v5)
    return 0;
  v6 = (llvm::Type *)*v97;
  v7 = *(_QWORD *)a2;
  if (*(_QWORD *)a2 != *v97)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a2 - 64) + 8);
    if (!v8 || *(_QWORD *)(v8 + 8))
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a2 - 32) + 8);
      if (!v9 || *(_QWORD *)(v9 + 8))
        return 0;
    }
  }
  v86 = 0;
  v87 = 0;
  v10 = v95;
  v88 = &v87;
  v89 = (uint64_t *)&v86;
  v90 = (llvm::APInt **)&v86;
  v91 = &v87;
  v92 = (llvm::Constant **)&v86;
  v93[0] = &v86;
  if (v95)
  {
    v11 = *(unsigned __int8 *)(v95 + 16);
    v12 = v11 > 0x1B ? v11 - 28 : *(unsigned __int16 *)(v95 + 18);
    if (v12 == 39)
    {
      v13 = &v90;
      v14 = *(_DWORD *)(v95 + 20);
      if ((v14 & 0x40000000) != 0)
        v15 = *(uint64_t **)(v95 - 8);
      else
        v15 = (uint64_t *)(v95 - 32 * (v14 & 0x7FFFFFF));
      v16 = *v15;
      v17 = *(unsigned __int8 *)(v16 + 16);
      if (v17 == 5)
      {
        if (*(_WORD *)(v16 + 18) != 15 || !*(_QWORD *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF)))
          goto LABEL_32;
        v87 = *(llvm::Constant **)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF));
        v20 = *(_QWORD *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF) + 32);
        if ((sub_1C4B0378C(&v89, v20) & 1) != 0)
          goto LABEL_46;
      }
      else
      {
        if (v17 != 43)
          goto LABEL_32;
        v18 = *(_QWORD *)(v16 - 64);
        if (!v18 || *(unsigned __int8 *)(v18 + 16) > 0x14u)
          goto LABEL_32;
        v87 = *(llvm::Constant **)(v16 - 64);
        v20 = *(_QWORD *)(v16 - 32);
        if ((sub_1C4B0378C(&v89, v20) & 1) != 0)
          goto LABEL_46;
      }
      if (v20)
      {
LABEL_39:
        v23 = *v13;
LABEL_45:
        *v23 = v20;
        goto LABEL_46;
      }
    }
  }
LABEL_32:
  v21 = *(unsigned __int8 *)(v10 + 16);
  if (v21 == 5)
  {
    if (*(_WORD *)(v10 + 18) != 15)
      return 0;
    v24 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
    if (!v24)
      return 0;
    *v91 = v24;
    v20 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
    if ((sub_1C4B0378C(&v92, v20) & 1) == 0)
    {
      if (!v20)
        return 0;
      v23 = (_QWORD *)v93[0];
      goto LABEL_45;
    }
  }
  else
  {
    if (v21 != 43)
      return 0;
    v22 = *(_QWORD *)(v10 - 64);
    if (!v22 || *(unsigned __int8 *)(v22 + 16) > 0x14u)
      return 0;
    *v91 = v22;
    v20 = *(_QWORD *)(v10 - 32);
    if ((sub_1C4B0378C(&v92, v20) & 1) == 0)
    {
      if (!v20)
        return 0;
      v13 = (llvm::APInt ***)v93;
      goto LABEL_39;
    }
  }
LABEL_46:
  v25 = v87;
  v26 = *(llvm::Type **)v87;
  if ((*(_DWORD *)(*(_QWORD *)v87 + 8) & 0xFE) == 0x12)
    v26 = (llvm::Type *)**((_QWORD **)v26 + 2);
  PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v26);
  v28 = (llvm::Type *)*v97;
  if ((*(_DWORD *)(*v97 + 8) & 0xFE) == 0x12)
    v28 = (llvm::Type *)**((_QWORD **)v28 + 2);
  v29 = llvm::Type::getPrimitiveSizeInBits(v28);
  v84 = PrimitiveSizeInBits;
  if (PrimitiveSizeInBits > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v83, v29, 0);
  }
  else
  {
    if (PrimitiveSizeInBits)
      v30 = 0xFFFFFFFFFFFFFFFFLL >> -(char)PrimitiveSizeInBits;
    else
      v30 = 0;
    v83 = (llvm::Constant *)(v30 & v29);
  }
  v85[0] = (llvm::APInt *)32;
  v85[1] = (llvm::APInt *)&v83;
  sub_1C57A1A3C((uint64_t)v85, v25);
  v32 = v31;
  if (v84 >= 0x41 && v83)
    MEMORY[0x1CAA32F9C](v83, 0x1000C8000313F17);
  if (!v32)
    return 0;
  v33 = v96;
  if (*(_BYTE *)(a2 + 16) == 43)
  {
    v88 = (llvm::Constant **)&v96;
    v89 = &v96;
    v34 = sub_1C4B0378C(&v88, v96);
    if (!v33)
      goto LABEL_64;
  }
  else
  {
    v88 = (llvm::Constant **)&v96;
    v89 = &v96;
    v34 = sub_1C4B037F8(&v88, v96);
    if (!v33)
      goto LABEL_64;
  }
  if ((v34 & 1) == 0)
    *v89 = v33;
LABEL_64:
  v82 = 0;
  v85[0] = 0;
  v83 = 0;
  v81 = 0;
  v80 = 0;
  v35 = v96;
  v88 = (llvm::Constant **)&v82;
  v89 = v97;
  v90 = v85;
  v91 = 0;
  v92 = &v83;
  v93[0] = &v81;
  if (*(_BYTE *)(v96 + 16) != 85)
    return 0;
  v36 = *(_DWORD *)(v96 + 20);
  v37 = (v36 & 0x40000000) != 0 ? *(uint64_t **)(v96 - 8) : (uint64_t *)(v96 - 32 * (v36 & 0x7FFFFFF));
  if (!sub_1C57A1B48((uint64_t)&v88, *v37))
    return 0;
  v38 = *(_DWORD *)(v35 + 20);
  v39 = (v38 & 0x40000000) != 0 ? *(_QWORD *)(v35 - 8) : v35 - 32 * (v38 & 0x7FFFFFF);
  v40 = *(llvm::Constant **)(v39 + 32);
  if (!v40)
    return 0;
  *v92 = v40;
  v41 = *(_DWORD *)(v35 + 20);
  v42 = (v41 & 0x40000000) != 0 ? *(_QWORD *)(v35 - 8) : v35 - 32 * (v41 & 0x7FFFFFF);
  v43 = *(_QWORD *)(v42 + 64);
  if (!v43)
    return 0;
  *(_QWORD *)v93[0] = v43;
  if (!sub_1C57921EC(v82, v85[0], &v80))
    return 0;
  v44 = (unsigned __int8 *)v81;
  if (!v80)
  {
    v45 = v83;
    v83 = v81;
    v81 = v45;
    v44 = (unsigned __int8 *)v45;
  }
  if (!v44
    || v44[16] > 0x14u
    || (llvm::Constant::isNullValue((llvm::Constant *)v44) & 1) == 0
    && (sub_1C4E71060((uint64_t)&v88, (llvm::Constant *)v44) & 1) == 0)
  {
    return 0;
  }
  v46 = v83;
  if (*(_BYTE *)(a2 + 16) == 43)
  {
    v88 = &v83;
    v89 = (uint64_t *)&v83;
    v47 = sub_1C4B0378C(&v88, (uint64_t)v83);
    if (!v46)
      goto LABEL_90;
  }
  else
  {
    v88 = &v83;
    v89 = (uint64_t *)&v83;
    v47 = sub_1C4B037F8(&v88, (uint64_t)v83);
    if (!v46)
      goto LABEL_90;
  }
  if ((v47 & 1) == 0)
    *v89 = (uint64_t)v46;
LABEL_90:
  v88 = &v79;
  v89 = v86;
  v90 = (llvm::APInt **)v86;
  v48 = *((unsigned __int8 *)v83 + 16);
  if (v48 == 5)
  {
    if (*((_WORD *)v83 + 9) != 25)
      return 0;
    v51 = (llvm::Constant **)((char *)v83 - 32 * (*((_DWORD *)v83 + 5) & 0x7FFFFFF));
    if (!*v51)
      return 0;
    v79 = *v51;
    v50 = (uint64_t)v51[4];
    if ((sub_1C57A1BB8(&v89, v50) & 1) != 0)
      goto LABEL_100;
    goto LABEL_99;
  }
  if (v48 != 53)
    return 0;
  v49 = *((_QWORD *)v83 - 8);
  if (!v49 || *(unsigned __int8 *)(v49 + 16) > 0x14u)
    return 0;
  v79 = (llvm::Constant *)*((_QWORD *)v83 - 8);
  v50 = *((_QWORD *)v83 - 4);
  if ((sub_1C57A1BB8(&v89, v50) & 1) == 0)
  {
LABEL_99:
    if (v90 == (llvm::APInt **)v50)
      goto LABEL_100;
    return 0;
  }
LABEL_100:
  if (*(_BYTE *)(a2 + 16) == 43)
  {
    if ((sub_1C4D89E3C((uint64_t)&v88, v79) & 1) == 0)
      return 0;
  }
  else if (!sub_1C4D9EED4((uint64_t)&v78, v79))
  {
    return 0;
  }
  v53 = v97;
  v54 = v95;
  if ((*((_BYTE *)v94 + 23) & 0x10) == 0)
  {
    v65 = 0;
    v64 = &byte_1C871356D;
    goto LABEL_114;
  }
  v55 = ***v94;
  v56 = *(_QWORD *)(v55 + 152);
  v57 = *(unsigned int *)(v55 + 168);
  if (!(_DWORD)v57)
    goto LABEL_112;
  LODWORD(v58) = (v57 - 1) & ((v94 >> 4) ^ (v94 >> 9));
  v59 = (uint64_t ****)(v56 + 16 * v58);
  v60 = *v59;
  if (*v59 != v94)
  {
    v61 = 1;
    while (v60 != (uint64_t ***)-4096)
    {
      v62 = v58 + v61++;
      v58 = v62 & (v57 - 1);
      v60 = *(uint64_t ****)(v56 + 16 * v58);
      if (v60 == v94)
      {
        v59 = (uint64_t ****)(v56 + 16 * v58);
        goto LABEL_113;
      }
    }
LABEL_112:
    v59 = (uint64_t ****)(v56 + 16 * v57);
  }
LABEL_113:
  v63 = v59[1];
  v66 = (uint64_t *)*v63;
  v64 = (char *)(v63 + 2);
  v65 = v66;
LABEL_114:
  LOWORD(v92) = 773;
  v88 = (llvm::Constant **)v64;
  v89 = v65;
  v90 = (llvm::APInt **)".sext";
  v67 = (char *)operator new(0x80uLL);
  *((_QWORD *)v67 + 5) = 0;
  v68 = v67 + 40;
  *((_QWORD *)v67 + 6) = 0;
  *((_QWORD *)v67 + 8) = *v53;
  *((_QWORD *)v67 + 3) = v67 + 64;
  v69 = (uint64_t *)(v67 + 64);
  *((_QWORD *)v67 + 7) = v67 + 64;
  *((_QWORD *)v67 + 9) = 0;
  v67[80] = 55;
  v67[81] = 0;
  *((_WORD *)v67 + 41) = 0;
  *((_DWORD *)v67 + 21) = 2;
  *(_OWORD *)(v67 + 88) = 0u;
  *(_OWORD *)(v67 + 104) = 0u;
  *((_DWORD *)v67 + 30) = 0;
  *(_QWORD *)v67 = v53;
  v72 = v53[1];
  v71 = v53 + 1;
  v70 = v72;
  *((_QWORD *)v67 + 1) = v72;
  if (v72)
    *(_QWORD *)(v70 + 16) = v67 + 8;
  *((_QWORD *)v67 + 2) = v71;
  *v71 = v67;
  *((_QWORD *)v67 + 4) = v54;
  if (v54)
  {
    v75 = *(_QWORD *)(v54 + 8);
    v74 = (_QWORD *)(v54 + 8);
    v73 = v75;
    *v68 = v75;
    if (v75)
      *(_QWORD *)(v73 + 16) = v68;
    *((_QWORD *)v67 + 6) = v74;
    *v74 = v67 + 32;
  }
  llvm::Value::setName((uint64_t ***)v67 + 8, (uint64_t)&v88);
  llvm::Instruction::copyIRFlags((uint64_t)v69, (uint64_t)v94, 1);
  if ((llvm::Type *)v7 == v6)
    return (llvm::Value *)v69;
  v76 = *(uint64_t **)(a1 + 24);
  LOWORD(v92) = 257;
  sub_1C4773754(v76, (uint64_t)v69, (uint64_t)&v88);
  v77 = *(_QWORD *)a2;
  LOWORD(v92) = 257;
  return llvm::CastInst::CreateTruncOrBitCast(v69, v77, (uint64_t)&v88, 0);
}

BOOL sub_1C57921EC(int a1, llvm::APInt *this, _BYTE *a3)
{
  _BOOL8 result;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  switch(a1)
  {
    case '"':
      *a3 = 1;
      v4 = *((_DWORD *)this + 2);
      if (v4 <= 0x40)
      {
        v5 = *(_QWORD *)this;
        v6 = ~(-1 << (v4 - 1));
        return v5 == v6;
      }
      v10 = v4 - 1;
      if (((*(_QWORD *)(*(_QWORD *)this + 8 * ((v4 - 1) >> 6)) >> (v4 - 1)) & 1) != 0)
        return 0;
      goto LABEL_26;
    case '#':
      *a3 = 1;
      return sub_1C535BACC((uint64_t)this);
    case '$':
      *a3 = 0;
      v9 = *((_DWORD *)this + 2);
      if (v9 <= 0x40)
      {
        v5 = *(_QWORD *)this;
        v6 = 1 << (v9 - 1);
        return v5 == v6;
      }
      v10 = v9 - 1;
      if (((*(_QWORD *)(*(_QWORD *)this + 8 * ((v9 - 1) >> 6)) >> (v9 - 1)) & 1) == 0)
        return 0;
      v11 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)this);
      return v11 == v10;
    case '%':
      *a3 = 0;
      return sub_1C579EBB0(this);
    case '&':
      *a3 = 0;
      v10 = *((_DWORD *)this + 2);
      if (v10)
        goto LABEL_16;
      return 1;
    case '\'':
      *a3 = 0;
      goto LABEL_11;
    case '(':
      *a3 = 1;
LABEL_11:
      v8 = *((_DWORD *)this + 2);
      if (v8 > 0x40)
        return llvm::APInt::countLeadingZerosSlowCase(this) == v8;
      else
        return *(_QWORD *)this == 0;
    case ')':
      result = 1;
      *a3 = 1;
      v10 = *((_DWORD *)this + 2);
      if (!v10)
        return result;
LABEL_16:
      if (v10 > 0x40)
      {
LABEL_26:
        v11 = llvm::APInt::countTrailingOnesSlowCase(this);
        return v11 == v10;
      }
      else
      {
        return *(_QWORD *)this == 0xFFFFFFFFFFFFFFFFLL >> -(char)v10;
      }
    default:
      return 0;
  }
}

llvm::Value *sub_1C579237C(uint64_t a1, const llvm::Value **a2)
{
  llvm *v4;
  uint64_t *v5;
  llvm::Constant *v6;
  unsigned int v7;
  __int128 v8;
  __int128 v9;
  uint64_t Intrinsic;
  llvm::Value *v11;
  uint64_t v12;
  llvm::ValueAsMetadata *v13;
  uint64_t v14;
  uint64_t ***Not;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  unsigned __int8 *v21;
  llvm::APInt *v22;
  uint64_t v23;
  llvm::ValueHandleBase *v24;
  uint64_t v25;
  uint64_t v26;
  llvm::APInt *v27;
  llvm::Type *v28;
  llvm::Value **v29;
  uint64_t *Sub;
  llvm::Type *v31;
  llvm::Value **v32;
  llvm::Value *v33;
  llvm::Value **v34;
  llvm::ValueHandleBase *v35;
  llvm::APInt *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  int v45;
  llvm *v46;
  llvm::ConstantExpr *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  llvm::APInt *v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  char v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  llvm::APInt *v75;
  llvm::APInt *v76;
  unsigned int v77;
  uint64_t v78;
  unsigned int v79;
  const void *v80;
  unint64_t v81;
  const llvm::APInt *v82;
  unsigned int v83;
  unint64_t v84;
  uint64_t v85;
  BOOL v86;
  int v87;
  llvm::Value **v88;
  char *v89;
  llvm::Value **v90;
  uint64_t v91;
  llvm::Value *v92;
  _QWORD *v93;
  llvm::Value *v94;
  unsigned int v95;
  char *v96;
  char *v97;
  char v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  unsigned int v102;
  int v103;
  int v104;
  uint64_t *v105;
  uint64_t v106;
  int v107;
  llvm::APInt **v108;
  llvm::APInt *v109;
  unsigned int v110;
  llvm::Type *v111;
  unsigned int PrimitiveSizeInBits;
  uint64_t v113;
  int v114;
  int v115;
  const llvm::APInt *v116;
  llvm::APInt **v117;
  const void **v118;
  uint64_t v119;
  llvm::APInt *v120;
  void *v121;
  llvm::Value **v122;
  char *v123;
  llvm::Value **v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  llvm::Value *v128;
  _QWORD *v129;
  llvm::Value *v130;
  void *v131;
  uint64_t v132;
  llvm::APInt *v133;
  const llvm::APInt *v134;
  const void **v135;
  uint64_t v136;
  size_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  unint64_t v142;
  void *v143;
  char v144;
  uint64_t v145;
  llvm::ConstantInt **v146;
  unint64_t v147;
  unint64_t *v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  _BOOL4 v152;
  llvm::Value **v153;
  llvm::APInt *v154;
  char *v155;
  llvm::APInt **v156;
  llvm::Value *v157;
  _QWORD *v158;
  llvm::Value *v159;
  uint64_t v160;
  llvm::APInt ***v161;
  uint64_t v162;
  llvm::APInt *v163;
  llvm::APInt *v164;
  unsigned int v165;
  uint64_t v166;
  unsigned int v167;
  const void *v168;
  unint64_t v169;
  unsigned int v170;
  void *v171;
  uint64_t v172;
  BOOL v173;
  int v174;
  llvm::Type *v175;
  unsigned int v176;
  llvm::APInt *v177;
  uint64_t v178;
  llvm::ConstantInt **v179;
  uint8x8_t v180;
  int v181;
  unint64_t v182;
  int8x8_t *v183;
  int8x8_t v184;
  uint8x8_t v185;
  uint8x8_t v186;
  int v187;
  int v188;
  unint64_t v189;
  int8x8_t *v190;
  int8x8_t v191;
  uint8x8_t v192;
  int v193;
  uint64_t v194;
  llvm *v195;
  _BOOL4 IsZero;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  unsigned int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int v206;
  int v207;
  int v208;
  uint64_t *v209;
  unsigned int *v210;
  unsigned int v211;
  unsigned int v212;
  _QWORD *v213;
  unint64_t v214;
  unsigned int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  BOOL v220;
  _BOOL4 v221;
  int v222;
  uint64_t v223;
  unsigned int v224;
  int v225;
  int v226;
  uint64_t *v227;
  uint64_t v228;
  unsigned int v229;
  unsigned int v230;
  unint64_t v231;
  int v232;
  unsigned int v234;
  unsigned int v235;
  unint64_t v236;
  int v237;
  unsigned int v239;
  int v240;
  int v241;
  uint64_t *v242;
  llvm::UndefValue *v243;
  llvm::ValueHandleBase *Add;
  unsigned __int8 *v245;
  uint64_t *v246;
  uint64_t v247;
  _QWORD *v248;
  char *v249;
  _QWORD *v250;
  char v251;
  int v252;
  char *v253;
  uint64_t *v254;
  uint64_t v255;
  _QWORD *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t **v259;
  uint64_t v260;
  void **v261;
  int v262;
  uint64_t v263;
  llvm::Value **v264;
  char *v265;
  char *v266;
  llvm::Value ***v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  llvm::Value *v271;
  llvm::Value ****v272;
  llvm::Value *v273;
  int v274;
  uint64_t v275;
  int v276;
  uint64_t v277;
  const llvm::Value *v278;
  char *v279;
  const llvm::Value **v280;
  uint64_t v281;
  _QWORD *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  int v289;
  llvm::APInt **v290;
  llvm::APInt *v291;
  int v292;
  llvm::APInt **v293;
  int v294;
  uint64_t v295;
  const llvm::Value *v296;
  llvm *v297;
  uint64_t *v298;
  char *v299;
  _QWORD *v300;
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  uint64_t v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  const llvm::Value ***v312;
  uint64_t v313;
  llvm::APInt **v314;
  llvm::APInt *v315;
  int v316;
  llvm::APInt **v317;
  int v318;
  const llvm::APInt *v319;
  int v320;
  uint64_t v321;
  int v322;
  const llvm::APInt *v323;
  uint64_t v324;
  llvm::UndefValue *v325;
  llvm::Type *v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  llvm::APInt *v330;
  llvm::Type *v331;
  int v332;
  unsigned int v333;
  uint64_t v334;
  llvm::APInt **v335;
  unint64_t **v336;
  uint64_t v337;
  unsigned int v338;
  int8x8_t v339;
  llvm::Constant **v340;
  const void **v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  const void *v345;
  llvm::ConstantInt *v346;
  llvm::APInt *v347;
  const llvm::APInt *v348;
  int v349;
  unint64_t v350;
  _QWORD *v351;
  llvm::Value **v352;
  char *v353;
  uint64_t v354;
  int v355;
  unint64_t v356;
  int8x8_t *v357;
  int8x8_t v358;
  uint8x8_t v359;
  int v360;
  llvm::APInt *v361;
  uint64_t v362;
  llvm::ConstantInt **v363;
  llvm::ConstantInt **v364;
  uint64_t v365;
  BOOL v366;
  int v367;
  llvm::Constant *v368;
  llvm::Value **v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  int v373;
  const llvm::APInt *v374;
  llvm::Constant **v375;
  llvm::APInt *v376;
  uint64_t v377;
  llvm::ConstantInt ***v378;
  uint64_t v379;
  unint64_t v380;
  uint64_t *v381;
  uint64_t v382;
  uint64_t v383;
  int v384;
  llvm::APInt **v385;
  int v386;
  llvm::APInt **v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  uint64_t v391;
  int v392;
  uint64_t v393;
  int v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  int v398;
  int v399;
  uint64_t v400;
  int v401;
  uint64_t v402;
  _QWORD *v403;
  uint64_t v404;
  uint64_t v405;
  _QWORD *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  int v411;
  uint64_t v412;
  int v413;
  llvm *v414;
  unsigned __int8 *v415;
  unsigned int v416;
  uint64_t *v417;
  unsigned int v418;
  int v419;
  uint64_t v420;
  llvm *v421;
  llvm *v422;
  int v423;
  uint64_t v424;
  llvm *v425;
  uint64_t v426;
  uint64_t v427;
  int v428;
  llvm::Constant *v429;
  unsigned int v430;
  const llvm::Value *v431;
  uint64_t v432;
  uint64_t v433;
  int v434;
  unsigned int v435;
  int v436;
  uint64_t v437;
  llvm::Value **v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  char *v443;
  uint64_t *v444;
  uint64_t v445;
  _QWORD *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t **v449;
  uint64_t v450;
  llvm::Constant **v451;
  uint64_t v452;
  llvm::Constant **v453;
  llvm::APInt *v454;
  const void **v455;
  llvm::Constant **v456;
  int v457;
  unsigned int v458;
  uint64_t v459;
  unsigned int v460;
  llvm::Constant **v461;
  llvm::APInt *v462;
  uint64_t v463;
  int v464;
  int v465;
  int v466;
  llvm::APInt **v467;
  uint64_t v468;
  llvm::APInt **v469;
  unsigned int v470;
  int v471;
  llvm::APInt **v472;
  unsigned int v473;
  unint64_t v474;
  unsigned int v475;
  int v476;
  int v477;
  uint64_t v478;
  int v479;
  uint64_t v480;
  int v481;
  uint64_t v482;
  uint64_t v483;
  unsigned int v484;
  unint64_t v485;
  const void **v486;
  unsigned int v487;
  unint64_t v488;
  uint64_t ***v489;
  unsigned int v490;
  unint64_t v491;
  unsigned int v492;
  const llvm::APInt *v493;
  BOOL v494;
  int v495;
  llvm::Value **v496;
  char *v497;
  llvm::Value ***v498;
  uint64_t v499;
  llvm::Value *v500;
  llvm::Value ****v501;
  llvm::Value *v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t *v507;
  uint64_t v508;
  uint64_t ***v509;
  uint64_t v510;
  int v511;
  llvm *v512;
  llvm *v513;
  uint64_t v514;
  uint64_t v515;
  int v516;
  uint64_t *v517;
  uint64_t *v518;
  uint64_t v519;
  uint64_t v520;
  int v521;
  llvm *v522;
  llvm *v523;
  llvm **v524;
  uint64_t v525;
  int v526;
  llvm **v527;
  llvm *v528;
  llvm *v529;
  uint64_t **v530;
  int v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t *v534;
  uint64_t v535;
  int v536;
  llvm **v537;
  char *v538;
  uint64_t v539;
  _QWORD *v540;
  uint64_t v541;
  uint64_t v542;
  _QWORD *v543;
  uint64_t v544;
  unsigned int v545;
  void *v546;
  uint64_t v547;
  BOOL v548;
  int v549;
  const void **v550;
  uint64_t v551;
  unint64_t v552;
  llvm::APInt *v553;
  llvm **v554;
  llvm *v555;
  const llvm::Value *v556;
  llvm *v557;
  const llvm::Value *v558;
  llvm **v559;
  const llvm::Value *v560;
  const llvm::Value *v561;
  llvm **v562;
  llvm *v563;
  const llvm::Value *v564;
  llvm **v565;
  char v566;
  int v567;
  int v568;
  uint64_t v569;
  int v570;
  uint64_t v571;
  uint64_t v572;
  int v573;
  uint64_t v574;
  const llvm::Value *v575;
  _QWORD *v576;
  int v577;
  int v578;
  uint64_t v579;
  char v580;
  uint64_t *v581;
  int v582;
  uint64_t v583;
  int v584;
  const void **v585;
  uint64_t v586;
  uint64_t v587;
  unint64_t v588;
  const void *v589;
  const llvm::Value *v590;
  int v591;
  uint64_t v592;
  void **v593;
  unsigned __int8 *v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  int v598;
  _QWORD *v599;
  llvm::Type *v600;
  uint64_t v601;
  unsigned __int8 *v602;
  unsigned __int8 *v603;
  unsigned __int8 *v604;
  unsigned __int8 *v605;
  int v608;
  size_t v609;
  char *v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  llvm::APInt **v614;
  uint64_t v615;
  BOOL v616;
  int v617;
  uint64_t Declaration;
  const llvm::APInt *v619;
  uint64_t v620;
  llvm::ValueHandleBase *AllOnesValue;
  uint64_t v622;
  unsigned int v623;
  char v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  const llvm::Value ***v629;
  const llvm::Value **v630;
  int v631;
  int v632;
  uint64_t v633;
  unint64_t v634;
  llvm::ConstantInt **v635;
  const llvm::APInt *v636;
  llvm::Value **v637;
  uint64_t *v638;
  unsigned __int8 *v639;
  size_t v640;
  llvm::Value **v641;
  uint64_t v642;
  char *v643;
  uint64_t v644;
  char *v645;
  uint64_t *v646;
  uint64_t v647;
  uint64_t **v648;
  uint64_t v649;
  size_t v650;
  unint64_t v651;
  int8x8_t v652;
  uint64_t v653;
  uint64_t v654;
  _BOOL4 v655;
  unint64_t v656;
  unint64_t v657;
  unint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t *p_p_s2;
  void **v664;
  uint64_t *v665;
  int v666;
  uint64_t v667;
  uint64_t v668;
  llvm::APInt *v669;
  llvm::Value **v670;
  const llvm::APInt *v671;
  _QWORD *v672;
  char *v673;
  llvm::Value **v674;
  uint64_t v675;
  uint64_t v676;
  _QWORD *v677;
  uint64_t v678;
  llvm::Value *v679;
  _QWORD *v680;
  llvm::Value *v681;
  uint64_t v682;
  _QWORD *v683;
  uint64_t v684;
  const llvm::Value **v685;
  char *v686;
  const llvm::Value *v687;
  const llvm::Value *v688;
  uint64_t v689;
  unint64_t *v690;
  uint64_t *v691;
  unint64_t v692;
  unint64_t v693;
  uint64_t v694;
  unint64_t v695;
  _BOOL4 v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  llvm::ConstantInt **v706;
  unint64_t v707;
  _QWORD *v708;
  uint64_t v709;
  BOOL v710;
  uint64_t v711;
  llvm::APInt *v712;
  llvm::Type *v713;
  llvm::Type *v714;
  llvm::Type *v715;
  void *v716;
  unsigned int v717;
  const llvm::Value *v718;
  llvm *v719;
  llvm::APInt *v720;
  int v721;
  uint64_t v722;
  void *v723[2];
  __int128 v724;
  const llvm::Value **v725;
  const llvm::Value **v726;
  void *__s2;
  unsigned int v728;
  llvm::APInt *v729;
  unsigned __int8 v730;
  llvm::Constant *v731;
  llvm::APInt *v732;
  llvm::APInt *v733;
  uint64_t p_s2;
  const llvm::Value *v735;
  const llvm::Value **v736;
  unsigned int v737;
  __int16 v738;
  llvm::ConstantInt **v739;
  unsigned int v740;
  unint64_t v741;
  unsigned int v742;
  uint64_t v743;

  v743 = *MEMORY[0x1E0C80C00];
  v5 = (uint64_t *)(a2 - 8);
  v4 = *(a2 - 8);
  v6 = *(a2 - 4);
  v7 = *((unsigned __int8 *)a2 + 17);
  v8 = *(_OWORD *)(a1 + 120);
  v9 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)v723 = *(_OWORD *)(a1 + 88);
  v724 = v9;
  v726 = (const llvm::Value **)*((_QWORD *)&v8 + 1);
  v725 = a2;
  Intrinsic = (uint64_t)sub_1C4E62AE0(v4, v6, (v7 & 4) != 0, (v7 >> 1) & 1, (uint64_t)v723, (llvm::DSOLocalEquivalent **)3);
  if (Intrinsic)
    goto LABEL_2;
  if ((sub_1C577D620(a1, (llvm::Instruction *)a2) & 1) != 0)
    return (llvm::Value *)a2;
  Not = (uint64_t ***)sub_1C57826B8(a1, (unsigned __int8 *)a2);
  if (!Not)
  {
    Not = (uint64_t ***)sub_1C578171C(a1, (uint64_t)a2);
    if (!Not)
    {
      Intrinsic = (uint64_t)sub_1C577ECF0(a1, (unsigned __int8 *)a2);
      if (Intrinsic)
        goto LABEL_2;
      Not = (uint64_t ***)sub_1C5797778((uint64_t)a2, *(_QWORD *)(a1 + 24));
      if (Not)
        return (llvm::Value *)Not;
      v17 = (uint64_t)*(a2 - 8);
      v18 = (uint64_t)*(a2 - 4);
      v19 = *(unsigned __int8 *)(v18 + 16);
      if (v19 == 5 || !v18 || v19 >= 0x15)
      {
LABEL_273:
        v203 = (uint64_t)*a2;
        if (v19 >= 0x15)
          goto LABEL_344;
        v204 = *(_QWORD *)(a1 + 24);
        v739 = 0;
        __s2 = 0;
        v720 = 0;
        p_s2 = (uint64_t)&__s2;
        v735 = 0;
        if (sub_1C4D89F84((uint64_t)&p_s2, (unsigned __int8 *)v18))
        {
          v723[0] = &v739;
          v723[1] = &v720;
          *(_QWORD *)&v724 = 0;
          v205 = *(_QWORD *)(v17 + 8);
          if (v205)
          {
            if (!*(_QWORD *)(v205 + 8))
            {
              v206 = *(unsigned __int8 *)(v17 + 16);
              if (v206 > 0x1B || v206 == 5)
              {
                v207 = v206 > 0x1B ? v206 - 28 : *(unsigned __int16 *)(v17 + 18);
                if (v207 == 39)
                {
                  v208 = *(_DWORD *)(v17 + 20);
                  v209 = (v208 & 0x40000000) != 0
                       ? *(uint64_t **)(v17 - 8)
                       : (uint64_t *)(v17 - 32 * (v208 & 0x7FFFFFF));
                  if (sub_1C579EC1C((_QWORD **)v723, *v209))
                  {
                    v210 = (unsigned int *)__s2;
                    v211 = *((_DWORD *)__s2 + 2);
                    v212 = v211 - 1;
                    v213 = __s2;
                    if (v211 >= 0x41)
                      v213 = (_QWORD *)(*(_QWORD *)__s2 + 8 * (v212 >> 6));
                    if (((*v213 >> v212) & 1) != 0)
                    {
                      llvm::APInt::sext(v720, v211, (llvm::APInt *)&v741);
                      if (v742 > 0x40)
                      {
                        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v741);
                      }
                      else
                      {
                        v214 = v742 ? 0xFFFFFFFFFFFFFFFFLL >> -(char)v742 : 0;
                        v741 = v214 & ~v741;
                      }
                      llvm::APInt::operator++((uint64_t)&v741);
                      v215 = v742;
                      v742 = 0;
                      v216 = v210[2];
                      if (v216 > 0x40)
                      {
                        v633 = *(_QWORD *)(*(_QWORD *)v210 + 8 * ((v216 - 1) >> 6)) & (1 << (v216 - 1));
                        v634 = v741;
                        if (v215 >= 0x41)
                          v634 = *(_QWORD *)(v741 + 8 * ((v215 - 1) >> 6));
                        if ((v633 != 0) == ((v634 & (1 << (v215 - 1))) != 0))
                        {
                          v656 = ((unint64_t)(v216 + 63) >> 3) & 0x3FFFFFF8;
                          do
                          {
                            if (!v656)
                            {
                              v222 = 0;
                              goto LABEL_299;
                            }
                            v657 = *(_QWORD *)(*(_QWORD *)v210 - 8 + v656);
                            v658 = *(_QWORD *)(v741 - 8 + v656);
                            v656 -= 8;
                          }
                          while (v657 == v658);
                          v222 = v657 > v658 ? 1 : -1;
                        }
                        else
                        {
                          v222 = v633 ? -1 : 1;
                        }
                      }
                      else
                      {
                        v217 = -v216;
                        v218 = (uint64_t)(*(_QWORD *)v210 << v217) >> v217;
                        v219 = (uint64_t)(v741 << v217) >> v217;
                        v220 = v218 < v219;
                        v221 = v218 > v219;
                        v222 = v220 ? -1 : v221;
                      }
LABEL_299:
                      if (v215 >= 0x41)
                      {
                        if (v741)
                        {
                          MEMORY[0x1CAA32F9C](v741, 0x1000C8000313F17);
                          if (v742 >= 0x41)
                          {
                            if (v741)
                              MEMORY[0x1CAA32F9C](v741, 0x1000C8000313F17);
                          }
                        }
                      }
                      if ((v222 & 0x80000000) == 0)
                      {
                        v346 = *v739;
                        v347 = v720;
                        llvm::APInt::trunc((llvm::APInt *)__s2, *((_DWORD *)v720 + 2), (llvm::APInt *)&p_s2);
                        v349 = (int)v735;
                        if (v735 >= 0x41)
                        {
                          v689 = 0;
                          v690 = (unint64_t *)p_s2;
                          v691 = *(uint64_t **)v347;
                          v692 = ((unint64_t)v735 + 63) >> 6;
                          v693 = v692;
                          do
                          {
                            v694 = *v691++;
                            v695 = v694 + *v690;
                            v696 = v695 + 1 <= *v690;
                            if (v689)
                            {
                              ++v695;
                              v689 = v696;
                            }
                            else
                            {
                              v689 = v695 < *v690;
                            }
                            *v690++ = v695;
                            --v693;
                          }
                          while (v693);
                          *(_QWORD *)(p_s2 + 8 * (v692 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v349;
                          v349 = (int)v735;
                          v351 = (_QWORD *)p_s2;
                        }
                        else
                        {
                          v350 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v735;
                          if (!(_DWORD)v735)
                            v350 = 0;
                          v351 = (_QWORD *)(v350 & (p_s2 + *(_QWORD *)v347));
                          p_s2 = (uint64_t)v351;
                        }
                        LODWORD(v723[1]) = v349;
                        v723[0] = v351;
                        LODWORD(v735) = 0;
                        v352 = llvm::ConstantInt::get((llvm::ConstantInt **)v346, (llvm::Type *)v723, v348);
                        if (LODWORD(v723[1]) >= 0x41 && v723[0])
                          MEMORY[0x1CAA32F9C](v723[0], 0x1000C8000313F17);
                        if (v735 >= 0x41 && p_s2)
                          MEMORY[0x1CAA32F9C](p_s2, 0x1000C8000313F17);
                        v353 = (char *)operator new(0x60uLL);
                        Not = (uint64_t ***)(v353 + 32);
                        *((_DWORD *)v353 + 13) = *((_DWORD *)v353 + 13) & 0x38000000 | 1;
                        *(_QWORD *)v353 = 0;
                        *((_QWORD *)v353 + 1) = 0;
                        *((_QWORD *)v353 + 2) = 0;
                        *((_QWORD *)v353 + 3) = v353 + 32;
                        LOWORD(v725) = 257;
                        v354 = sub_1C622AE3C(v204, v739, (uint64_t)v352, (uint64_t)v723);
                        v738 = 257;
                        llvm::ZExtInst::ZExtInst((uint64_t)Not, v354, v203, (uint64_t)&p_s2, 0);
                        return (llvm::Value *)Not;
                      }
                    }
                  }
                }
              }
            }
          }
        }
        p_s2 = 0;
        v223 = *(_QWORD *)(v17 + 8);
        if (!v223)
        {
LABEL_343:
          v17 = (uint64_t)*(a2 - 8);
          v18 = (uint64_t)*(a2 - 4);
          v203 = (uint64_t)*a2;
LABEL_344:
          v252 = *(_DWORD *)(v203 + 8);
          if ((v252 & 0xFE) == 0x12)
            v252 = *(_DWORD *)(**(_QWORD **)(v203 + 16) + 8);
          if (v252 == 269)
          {
            LOWORD(v725) = 257;
            v253 = (char *)operator new(0x80uLL);
            *(_QWORD *)v253 = 0;
            *((_QWORD *)v253 + 2) = 0;
            *((_QWORD *)v253 + 1) = 0;
            *((_QWORD *)v253 + 5) = 0;
            *((_QWORD *)v253 + 6) = 0;
            *((_QWORD *)v253 + 4) = 0;
            v254 = (uint64_t *)(v253 + 32);
            *((_QWORD *)v253 + 8) = *(_QWORD *)v17;
            Not = (uint64_t ***)(v253 + 64);
            *((_QWORD *)v253 + 3) = v253 + 64;
            *((_QWORD *)v253 + 7) = v253 + 64;
            *((_QWORD *)v253 + 9) = 0;
            v253[80] = 58;
            v253[81] = 0;
            *((_WORD *)v253 + 41) = 0;
            *((_DWORD *)v253 + 21) = 2;
            *((_DWORD *)v253 + 30) = 0;
            *(_OWORD *)(v253 + 104) = 0u;
            *(_OWORD *)(v253 + 88) = 0u;
            *(_QWORD *)v253 = v17;
            v257 = *(_QWORD *)(v17 + 8);
            v256 = (_QWORD *)(v17 + 8);
            v255 = v257;
            *((_QWORD *)v253 + 1) = v257;
            if (v257)
              *(_QWORD *)(v255 + 16) = v253 + 8;
            *((_QWORD *)v253 + 2) = v256;
            *v256 = v253;
            if (*((_QWORD *)v253 + 4))
            {
              **((_QWORD **)v253 + 6) = *((_QWORD *)v253 + 5);
              v697 = *((_QWORD *)v253 + 5);
              if (v697)
                *(_QWORD *)(v697 + 16) = *((_QWORD *)v253 + 6);
            }
            *v254 = v18;
            if (v18)
            {
              v260 = *(_QWORD *)(v18 + 8);
              v259 = (uint64_t **)(v18 + 8);
              v258 = v260;
              *((_QWORD *)v253 + 5) = v260;
              if (v260)
                *(_QWORD *)(v258 + 16) = v253 + 40;
              *((_QWORD *)v253 + 6) = v259;
              *v259 = v254;
            }
            goto LABEL_354;
          }
          if (v17 == v18)
          {
            v264 = llvm::ConstantInt::get((llvm::ConstantInt *)v203, 1, 0);
            LOWORD(v725) = 257;
            v265 = (char *)operator new(0x80uLL);
            v266 = v265;
            *(_QWORD *)v265 = 0;
            *((_QWORD *)v265 + 2) = 0;
            *((_QWORD *)v265 + 1) = 0;
            *((_QWORD *)v265 + 5) = 0;
            *((_QWORD *)v265 + 6) = 0;
            *((_QWORD *)v265 + 4) = 0;
            v267 = (llvm::Value ***)(v265 + 32);
            *((_QWORD *)v265 + 8) = *(_QWORD *)v18;
            Not = (uint64_t ***)(v265 + 64);
            *((_QWORD *)v265 + 3) = v265 + 64;
            *((_QWORD *)v265 + 7) = v265 + 64;
            *((_QWORD *)v265 + 9) = 0;
            v265[80] = 53;
            v265[81] = 0;
            *((_WORD *)v265 + 41) = 0;
            *((_DWORD *)v265 + 21) = 2;
            *((_DWORD *)v265 + 30) = 0;
            *(_OWORD *)(v265 + 104) = 0u;
            *(_OWORD *)(v265 + 88) = 0u;
            *(_QWORD *)v265 = v18;
            v270 = *(_QWORD *)(v18 + 8);
            v269 = (_QWORD *)(v18 + 8);
            v268 = v270;
            *((_QWORD *)v265 + 1) = v270;
            if (v270)
              *(_QWORD *)(v268 + 16) = v265 + 8;
            *((_QWORD *)v265 + 2) = v269;
            *v269 = v265;
            if (*((_QWORD *)v265 + 4))
            {
              **((_QWORD **)v265 + 6) = *((_QWORD *)v265 + 5);
              v698 = *((_QWORD *)v265 + 5);
              if (v698)
                *(_QWORD *)(v698 + 16) = *((_QWORD *)v265 + 6);
            }
            *v267 = v264;
            if (v264)
            {
              v273 = v264[1];
              v272 = (llvm::Value ****)(v264 + 1);
              v271 = v273;
              *((_QWORD *)v265 + 5) = v273;
              if (v273)
                *((_QWORD *)v271 + 2) = v265 + 40;
              *((_QWORD *)v265 + 6) = v272;
              *v272 = v267;
            }
            llvm::Value::setName((uint64_t ***)v265 + 8, (uint64_t)v723);
            v266[81] = v266[81] & 0xF9 | *((_BYTE *)a2 + 17) & 6;
            return (llvm::Value *)Not;
          }
          v718 = 0;
          v719 = 0;
          v723[1] = &v719;
          v262 = *(unsigned __int8 *)(v17 + 16);
          if (v262 == 5)
          {
            if (*(_WORD *)(v17 + 18) != 15)
              goto LABEL_378;
            if (!sub_1C4E71060((uint64_t)v723, *(llvm::Constant **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF))))goto LABEL_378;
            v263 = *(_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF) + 32);
            if (!v263)
              goto LABEL_378;
          }
          else if (v262 != 43
                 || !sub_1C4D8AC3C((uint64_t)v723, *(llvm::Constant **)(v17 - 64))
                 || (v263 = *(_QWORD *)(v17 - 32)) == 0)
          {
LABEL_378:
            v723[1] = &v718;
            v276 = *(unsigned __int8 *)(v18 + 16);
            if (v276 == 5)
            {
              if (*(_WORD *)(v18 + 18) != 15)
                goto LABEL_389;
              if (!sub_1C4E71060((uint64_t)v723, *(llvm::Constant **)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF))))goto LABEL_389;
              v277 = *(_QWORD *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32);
              if (!v277)
                goto LABEL_389;
            }
            else if (v276 != 43
                   || !sub_1C4D8AC3C((uint64_t)v723, *(llvm::Constant **)(v18 - 64))
                   || (v277 = *(_QWORD *)(v18 - 32)) == 0)
            {
LABEL_389:
              v284 = *(_QWORD *)(a1 + 24);
              v285 = (uint64_t)*(a2 - 8);
              v286 = (uint64_t)*(a2 - 4);
              v287 = *(_QWORD *)(v285 + 8);
              if (!v287 || *(_QWORD *)(v287 + 8))
              {
                v288 = *(_QWORD *)(v286 + 8);
                if (!v288 || *(_QWORD *)(v288 + 8))
                  goto LABEL_563;
              }
              v732 = 0;
              v733 = 0;
              v731 = 0;
              v729 = 0;
              v722 = 0;
              v723[0] = &v733;
              v289 = *(unsigned __int8 *)(v286 + 16);
              if (v289 == 5)
              {
                if (*(_WORD *)(v286 + 18) != 13)
                  goto LABEL_402;
                v290 = (llvm::APInt **)(v286 - 32 * (*(_DWORD *)(v286 + 20) & 0x7FFFFFF));
                if (!*v290)
                  goto LABEL_402;
                v733 = *v290;
                if ((sub_1C4D89E3C((uint64_t)&v723[1], v290[4]) & 1) == 0)
                  goto LABEL_402;
              }
              else if (v289 != 41
                     || !*(_QWORD *)(v286 - 64)
                     || (v733 = *(llvm::APInt **)(v286 - 64),
                         !sub_1C4D89CC8((uint64_t)&v723[1], *(llvm::Constant **)(v286 - 32))))
              {
LABEL_402:
                v291 = (llvm::APInt *)v286;
LABEL_403:
                v723[0] = &v733;
                v292 = *(unsigned __int8 *)(v285 + 16);
                if (v292 == 5)
                {
                  if (*(_WORD *)(v285 + 18) != 13
                    || (v293 = (llvm::APInt **)(v285 - 32 * (*(_DWORD *)(v285 + 20) & 0x7FFFFFF)), !*v293)
                    || (v733 = *v293, (sub_1C4D89E3C((uint64_t)&v723[1], v293[4]) & 1) == 0))
                  {
LABEL_539:
                    v382 = (uint64_t)*(a2 - 8);
                    v383 = (uint64_t)*(a2 - 4);
                    v723[0] = &v732;
                    v723[1] = &v729;
                    *(_QWORD *)&v724 = 0;
                    v384 = *(unsigned __int8 *)(v383 + 16);
                    if (v384 == 5)
                    {
                      if (*(_WORD *)(v383 + 18) != 30)
                        goto LABEL_548;
                      v385 = (llvm::APInt **)(v383 - 32 * (*(_DWORD *)(v383 + 20) & 0x7FFFFFF));
                      if (!*v385)
                        goto LABEL_548;
                      v732 = *v385;
                      if ((sub_1C4D8A004((uint64_t)&v723[1], v385[4]) & 1) == 0)
                        goto LABEL_548;
                    }
                    else if (v384 != 58
                           || !*(_QWORD *)(v383 - 64)
                           || (v732 = *(llvm::APInt **)(v383 - 64),
                               !sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v383 - 32))))
                    {
LABEL_548:
                      v291 = (llvm::APInt *)v383;
                      goto LABEL_549;
                    }
                    v291 = (llvm::APInt *)v382;
                    v382 = v383;
LABEL_549:
                    v723[0] = &v732;
                    v723[1] = &v729;
                    *(_QWORD *)&v724 = 0;
                    v386 = *(unsigned __int8 *)(v382 + 16);
                    if (v386 == 5)
                    {
                      if (*(_WORD *)(v382 + 18) != 30)
                        goto LABEL_563;
                      v387 = (llvm::APInt **)(v382 - 32 * (*(_DWORD *)(v382 + 20) & 0x7FFFFFF));
                      if (!*v387)
                        goto LABEL_563;
                      v732 = *v387;
                      if ((sub_1C4D8A004((uint64_t)&v723[1], v387[4]) & 1) == 0)
                        goto LABEL_563;
                    }
                    else
                    {
                      if (v386 != 58)
                        goto LABEL_563;
                      if (!*(_QWORD *)(v382 - 64))
                        goto LABEL_563;
                      v732 = *(llvm::APInt **)(v382 - 64);
                      if (!sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v382 - 32)))
                        goto LABEL_563;
                    }
                    v388 = *((_DWORD *)v729 + 2);
                    if (v388 > 0x40)
                    {
                      v390 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v729);
                    }
                    else
                    {
                      v389 = __clz(__rbit64(*(_QWORD *)v729));
                      if (v388 >= v389)
                        v390 = v389;
                      else
                        v390 = *((_DWORD *)v729 + 2);
                    }
                    if (v390)
                      goto LABEL_563;
                    v723[0] = &v731;
                    v723[1] = &v722;
                    *(_QWORD *)&v724 = 0;
                    v436 = *((unsigned __int8 *)v732 + 16);
                    if (v436 == 5)
                    {
                      if (*((_WORD *)v732 + 9) != 28)
                        goto LABEL_563;
                      v453 = (llvm::Constant **)((char *)v732 - 32 * (*((_DWORD *)v732 + 5) & 0x7FFFFFF));
                      if (!*v453)
                        goto LABEL_563;
                      v731 = *v453;
                      if (!sub_1C4D8A004((uint64_t)&v723[1], v453[4]))
                        goto LABEL_563;
                    }
                    else
                    {
                      if (v436 != 56)
                        goto LABEL_563;
                      if (!*((_QWORD *)v732 - 8))
                        goto LABEL_563;
                      v731 = (llvm::Constant *)*((_QWORD *)v732 - 8);
                      if ((sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v732 - 4)) & 1) == 0)
                        goto LABEL_563;
                    }
                    v454 = v729;
                    v455 = (const void **)v722;
                    v728 = *(_DWORD *)(v722 + 8);
                    if (v728 > 0x40)
                    {
                      __s2 = (void *)operator new[]();
                      memcpy(__s2, *v455, (((unint64_t)v728 + 63) >> 3) & 0x3FFFFFF8);
                    }
                    else
                    {
                      __s2 = *(void **)v722;
                    }
                    llvm::APInt::operator+=((uint64_t)&__s2, 1uLL);
                    v545 = v728;
                    v546 = __s2;
                    v728 = 0;
                    v547 = *((unsigned int *)v454 + 2);
                    if (v547 > 0x40)
                      v548 = memcmp(*(const void **)v454, __s2, ((unint64_t)(v547 + 63) >> 3) & 0x3FFFFFF8) == 0;
                    else
                      v548 = *(_QWORD *)v454 == (_QWORD)__s2;
                    v549 = v548;
                    if (v545 >= 0x41)
                    {
                      if (v546)
                      {
                        MEMORY[0x1CAA32F9C](v546, 0x1000C8000313F17);
                        if (v728 >= 0x41)
                        {
                          if (__s2)
                            MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
                        }
                      }
                    }
                    if (!v549)
                    {
LABEL_563:
                      v723[0] = &v719;
                      *(_QWORD *)&v724 = &v718;
                      v391 = *v5;
                      v392 = *(unsigned __int8 *)(*v5 + 16);
                      if (v392 == 5)
                      {
                        if (*(_WORD *)(v391 + 18) != 13)
                          goto LABEL_572;
                        if (!*(_QWORD *)(v391 - 32 * (*(_DWORD *)(v391 + 20) & 0x7FFFFFF)))
                          goto LABEL_572;
                        v719 = *(llvm **)(v391 - 32 * (*(_DWORD *)(v391 + 20) & 0x7FFFFFF));
                        if (!sub_1C4D89E3C((uint64_t)&v723[1], *(llvm::Constant **)(v391- 32 * (*(_DWORD *)(v391 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_572;
                      }
                      else
                      {
                        if (v392 != 41)
                          goto LABEL_572;
                        if (!*(_QWORD *)(v391 - 64))
                          goto LABEL_572;
                        v719 = *(llvm **)(v391 - 64);
                        if ((sub_1C4D89CC8((uint64_t)&v723[1], *(llvm::Constant **)(v391 - 32)) & 1) == 0)
                          goto LABEL_572;
                      }
                      if (sub_1C4D9EC28((_QWORD **)&v724, 30, (uint64_t)*(a2 - 4)))
                        goto LABEL_594;
LABEL_572:
                      v393 = (uint64_t)*(a2 - 4);
                      v394 = *(unsigned __int8 *)(v393 + 16);
                      if (v394 == 5)
                      {
                        if (*(_WORD *)(v393 + 18) != 13)
                          goto LABEL_581;
                        v396 = *(_QWORD *)(v393 - 32 * (*(_DWORD *)(v393 + 20) & 0x7FFFFFF));
                        if (!v396)
                          goto LABEL_581;
                        *(_QWORD *)v723[0] = v396;
                        if ((sub_1C4D89E3C((uint64_t)&v723[1], *(llvm::Constant **)(v393 - 32 * (*(_DWORD *)(v393 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)goto LABEL_581;
                      }
                      else if (v394 != 41
                             || (v395 = *(_QWORD *)(v393 - 64)) == 0
                             || (*(_QWORD *)v723[0] = v395,
                                 (sub_1C4D89CC8((uint64_t)&v723[1], *(llvm::Constant **)(v393 - 32)) & 1) == 0))
                      {
LABEL_581:
                        p_s2 = (uint64_t)&v718;
                        v736 = &v719;
                        v397 = *v5;
                        v398 = *(unsigned __int8 *)(*v5 + 16);
                        if (v398 == 5)
                        {
                          if (*(_WORD *)(v397 + 18) != 13
                            || ((v401 = sub_1C4D9EC28((_QWORD **)&p_s2, 30, *(_QWORD *)(v397 - 32 * (*(_DWORD *)(v397 + 20) & 0x7FFFFFF))), v400 = *(_QWORD *)(v397 - 32 * (*(_DWORD *)(v397 + 20) & 0x7FFFFFF) + 32), !v401)|| !v400)&& (!sub_1C4D9EC28((_QWORD **)&p_s2, 30, v400)|| (v400 = *(_QWORD *)(v397 - 32 * (*(_DWORD *)(v397 + 20) & 0x7FFFFFF))) == 0))
                          {
LABEL_601:
                            v409 = v17 + 8;
                            v408 = *(_QWORD *)(v17 + 8);
                            if (!v408 || *(_QWORD *)(v408 + 8))
                            {
LABEL_603:
                              v410 = *(_QWORD *)(v18 + 8);
                              v715 = (llvm::Type *)(v18 + 8);
                              if (!v410 || *(_QWORD *)(v410 + 8))
                              {
LABEL_605:
                                v411 = *((unsigned __int8 *)a2 + 16);
                                if (v411 != 5)
                                {
                                  if (v411 != 41)
                                    goto LABEL_726;
                                  v412 = *v5;
                                  v413 = *(unsigned __int8 *)(*v5 + 16);
                                  if (v413 == 5)
                                  {
                                    if (*(_WORD *)(v412 + 18) != 13)
                                      goto LABEL_689;
                                    v426 = v412 - 32 * (*(_DWORD *)(v412 + 20) & 0x7FFFFFF);
                                    v414 = *(llvm **)v426;
                                    if (!*(_QWORD *)v426)
                                      goto LABEL_689;
                                    v719 = *(llvm **)v426;
                                    v415 = *(unsigned __int8 **)(v426 + 32);
                                    if (!v415)
                                      goto LABEL_689;
                                    v416 = v415[16];
                                  }
                                  else if (v413 != 41
                                         || (v414 = *(llvm **)(v412 - 64)) == 0
                                         || (v719 = *(llvm **)(v412 - 64),
                                             (v415 = *(unsigned __int8 **)(v412 - 32)) == 0)
                                         || (v416 = v415[16], v416 > 0x14))
                                  {
LABEL_689:
                                    v452 = (uint64_t)*(a2 - 4);
LABEL_700:
                                    v457 = *(unsigned __int8 *)(v452 + 16);
                                    if (v457 == 5)
                                    {
                                      if (*(_WORD *)(v452 + 18) != 13)
                                        goto LABEL_726;
                                      v459 = v452 - 32 * (*(_DWORD *)(v452 + 20) & 0x7FFFFFF);
                                      v414 = *(llvm **)v459;
                                      if (!*(_QWORD *)v459)
                                        goto LABEL_726;
                                      v719 = *(llvm **)v459;
                                      v415 = *(unsigned __int8 **)(v459 + 32);
                                      if (!v415)
                                        goto LABEL_726;
                                      v458 = v415[16];
                                    }
                                    else
                                    {
                                      if (v457 != 41)
                                        goto LABEL_726;
                                      v414 = *(llvm **)(v452 - 64);
                                      if (!v414)
                                        goto LABEL_726;
                                      v719 = *(llvm **)(v452 - 64);
                                      v415 = *(unsigned __int8 **)(v452 - 32);
                                      if (!v415)
                                        goto LABEL_726;
                                      v458 = v415[16];
                                      if (v458 > 0x14)
                                        goto LABEL_726;
                                    }
                                    if (v458 == 5)
                                    {
LABEL_726:
                                      v462 = *(a2 - 8);
                                      v463 = (uint64_t)*(a2 - 4);
                                      v732 = 0;
                                      v733 = 0;
                                      LODWORD(v735) = 1;
                                      p_s2 = 0;
                                      v742 = 1;
                                      v741 = 0;
                                      LOBYTE(v722) = 0;
                                      if ((!sub_1C57913EC((uint64_t)v462, &v733, &p_s2, &v722)
                                         || (sub_1C5791810(v463, &v732, (llvm::APInt *)&v741) & 1) == 0)
                                        && (!sub_1C57913EC(v463, &v733, &p_s2, &v722)
                                         || !sub_1C5791810((uint64_t)v462, &v732, (llvm::APInt *)&v741)))
                                      {
                                        goto LABEL_788;
                                      }
                                      if (v735 > 0x40)
                                      {
                                        if (memcmp((const void *)p_s2, (const void *)v741, (((unint64_t)v735 + 63) >> 3) & 0x3FFFFFF8))
                                        {
                                          goto LABEL_788;
                                        }
                                      }
                                      else if (p_s2 != v741)
                                      {
                                        goto LABEL_788;
                                      }
                                      v731 = 0;
                                      v740 = 1;
                                      v739 = 0;
                                      v730 = 0;
                                      if (!sub_1C57913EC((uint64_t)v732, &v731, &v739, &v730))
                                        goto LABEL_783;
                                      v464 = v722;
                                      if (v722 != v730)
                                        goto LABEL_783;
                                      v729 = 0;
                                      v728 = 1;
                                      __s2 = 0;
                                      v462 = v731;
                                      v720 = 0;
                                      if ((_BYTE)v722)
                                      {
                                        v723[0] = &v729;
                                        v723[1] = &v720;
                                        *(_QWORD *)&v724 = 0;
                                        v465 = *((unsigned __int8 *)v731 + 16);
                                        if (v465 == 5)
                                        {
                                          if (*((_WORD *)v731 + 9) != 20)
                                            goto LABEL_778;
                                          v467 = (llvm::APInt **)((char *)v731 - 32
                                                                               * (*((_DWORD *)v731 + 5) & 0x7FFFFFF));
                                          if (!*v467)
                                            goto LABEL_778;
                                          v729 = *v467;
                                          if ((sub_1C4D8A004((uint64_t)&v723[1], v467[4]) & 1) == 0)
                                            goto LABEL_778;
                                        }
                                        else
                                        {
                                          if (v465 != 48)
                                            goto LABEL_778;
                                          if (!*((_QWORD *)v731 - 8))
                                            goto LABEL_778;
                                          v729 = (llvm::APInt *)*((_QWORD *)v731 - 8);
                                          if (!sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v731 - 4)))goto LABEL_778;
                                        }
                                        goto LABEL_755;
                                      }
                                      v723[0] = &v729;
                                      v723[1] = &v720;
                                      *(_QWORD *)&v724 = 0;
                                      v466 = *((unsigned __int8 *)v731 + 16);
                                      if (v466 == 5)
                                      {
                                        if (*((_WORD *)v731 + 9) != 19)
                                          goto LABEL_758;
                                        v469 = (llvm::APInt **)((char *)v731 - 32 * (*((_DWORD *)v731 + 5) & 0x7FFFFFF));
                                        if (!*v469)
                                          goto LABEL_758;
                                        v729 = *v469;
                                        if ((sub_1C4D8A004((uint64_t)&v723[1], v469[4]) & 1) == 0)
                                          goto LABEL_758;
                                      }
                                      else if (v466 != 47
                                             || !*((_QWORD *)v731 - 8)
                                             || (v729 = (llvm::APInt *)*((_QWORD *)v731 - 8),
                                                 !sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v731 - 4))))
                                      {
LABEL_758:
                                        v723[0] = &v729;
                                        v723[1] = &v720;
                                        *(_QWORD *)&v724 = 0;
                                        v471 = *((unsigned __int8 *)v462 + 16);
                                        if (v471 == 5)
                                        {
                                          if (*((_WORD *)v462 + 9) != 26)
                                            goto LABEL_778;
                                          v472 = (llvm::APInt **)((char *)v462 - 32
                                                                               * (*((_DWORD *)v462 + 5) & 0x7FFFFFF));
                                          if (!*v472)
                                            goto LABEL_778;
                                          v729 = *v472;
                                          if ((sub_1C4D8A004((uint64_t)&v723[1], v472[4]) & 1) == 0)
                                            goto LABEL_778;
                                        }
                                        else
                                        {
                                          if (v471 != 54)
                                            goto LABEL_778;
                                          if (!*((_QWORD *)v462 - 8))
                                            goto LABEL_778;
                                          v729 = (llvm::APInt *)*((_QWORD *)v462 - 8);
                                          if (!sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v462 - 4)))goto LABEL_778;
                                        }
                                        v473 = *((_DWORD *)v720 + 2);
                                        LODWORD(v723[1]) = v473;
                                        if (v473 > 0x40)
                                        {
                                          llvm::APInt::initSlowCase((llvm::APInt *)v723, 1, 0);
                                        }
                                        else
                                        {
                                          if (v473)
                                            v474 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v473;
                                          else
                                            LOBYTE(v474) = 0;
                                          v723[0] = (void *)(v474 & 1);
                                        }
                                        if (v728 >= 0x41 && __s2)
                                          MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
                                        __s2 = v723[0];
                                        v728 = v723[1];
                                        v475 = sub_1C47EE5B8((uint64_t ***)v720, LODWORD(v723[1]));
                                        sub_1C4888094((uint64_t)&__s2, v475);
LABEL_777:
                                        if (v733 == v729)
                                        {
                                          if (v735 > 0x40)
                                          {
                                            if (memcmp((const void *)p_s2, __s2, (((unint64_t)v735 + 63) >> 3) & 0x3FFFFFF8))
                                            {
                                              goto LABEL_778;
                                            }
                                          }
                                          else if ((void *)p_s2 != __s2)
                                          {
                                            goto LABEL_778;
                                          }
                                          LOBYTE(v720) = 0;
                                          if (v464)
                                            llvm::APInt::smul_ov((const void **)&p_s2, (const llvm::APInt *)&v739, (BOOL *)&v720, (llvm::APInt *)v723);
                                          else
                                            llvm::APInt::umul_ov((llvm::APInt *)&p_s2, (uint64_t **)&v739, (BOOL *)&v720, (uint64_t)v723);
                                          if (LODWORD(v723[1]) >= 0x41 && v723[0])
                                            MEMORY[0x1CAA32F9C](v723[0], 0x1000C8000313F17);
                                          if (!(_BYTE)v720)
                                          {
                                            v635 = *(llvm::ConstantInt ***)v733;
                                            llvm::APInt::operator*((uint64_t)&p_s2, &v739, (uint64_t)v723);
                                            v637 = llvm::ConstantInt::get(v635, (llvm::Type *)v723, v636);
                                            if (LODWORD(v723[1]) >= 0x41 && v723[0])
                                              MEMORY[0x1CAA32F9C](v723[0], 0x1000C8000313F17);
                                            v638 = *(uint64_t **)(a1 + 24);
                                            if (v464)
                                            {
                                              v723[0] = "srem";
                                              LOWORD(v725) = 259;
                                              v639 = sub_1C622AECC(v638, v733, (uint64_t)v637, (uint64_t)v723);
                                            }
                                            else
                                            {
                                              v723[0] = "urem";
                                              LOWORD(v725) = 259;
                                              v639 = sub_1C538EDCC(v638, v733, (uint64_t)v637, (uint64_t)v723);
                                            }
                                            v462 = (llvm::APInt *)v639;
                                            v476 = 0;
LABEL_779:
                                            if (v728 >= 0x41 && __s2)
                                              MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
                                            if (!v476)
                                            {
LABEL_784:
                                              if (v740 >= 0x41 && v739)
                                                MEMORY[0x1CAA32F9C](v739, 0x1000C8000313F17);
                                              if (!v476)
                                              {
LABEL_789:
                                                if (v742 >= 0x41 && v741)
                                                  MEMORY[0x1CAA32F9C](v741, 0x1000C8000313F17);
                                                if (v735 >= 0x41 && p_s2)
                                                  MEMORY[0x1CAA32F9C](p_s2, 0x1000C8000313F17);
                                                if (v462)
                                                {
                                                  v12 = a1;
                                                  v13 = (llvm::ValueAsMetadata *)a2;
                                                  v11 = v462;
                                                  return (llvm::Value *)sub_1C577F888(v12, v13, v11);
                                                }
                                                v731 = 0;
                                                v729 = 0;
                                                v723[0] = (void *)v18;
                                                v723[1] = &v731;
                                                *(_QWORD *)&v724 = 0;
                                                *((_QWORD *)&v724 + 1) = &v729;
                                                v725 = 0;
                                                v477 = *(unsigned __int8 *)(v17 + 16);
                                                if (v477 == 5)
                                                {
                                                  if (*(_WORD *)(v17 + 18) != 25)
                                                    goto LABEL_856;
                                                  v480 = *(_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
                                                  v481 = *(unsigned __int8 *)(v480 + 16);
                                                  if (v481 == 5)
                                                  {
                                                    if (*(_WORD *)(v480 + 18) != 20)
                                                      goto LABEL_856;
                                                    v483 = v480 - 32 * (*(_DWORD *)(v480 + 20) & 0x7FFFFFF);
                                                    if (v18 != *(_QWORD *)v483
                                                      || !sub_1C4D8A004((uint64_t)&v723[1], *(llvm::Constant **)(v483 + 32)))
                                                    {
                                                      goto LABEL_856;
                                                    }
                                                  }
                                                  else if (v481 != 48
                                                         || v18 != *(_QWORD *)(v480 - 64)
                                                         || (sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v480 - 32)) & 1) == 0)
                                                  {
                                                    goto LABEL_856;
                                                  }
                                                  if ((sub_1C4D8A004((uint64_t)&v724 + 8, *(llvm::Constant **)(v17- 32* (*(_DWORD *)(v17 + 20) & 0x7FFFFFF)+ 32)) & 1) == 0)goto LABEL_856;
                                                }
                                                else
                                                {
                                                  if (v477 != 53)
                                                    goto LABEL_856;
                                                  v478 = *(_QWORD *)(v17 - 64);
                                                  v479 = *(unsigned __int8 *)(v478 + 16);
                                                  if (v479 == 5)
                                                  {
                                                    if (*(_WORD *)(v478 + 18) != 20)
                                                      goto LABEL_856;
                                                    v482 = v478 - 32 * (*(_DWORD *)(v478 + 20) & 0x7FFFFFF);
                                                    if (v18 != *(_QWORD *)v482
                                                      || !sub_1C4D8A004((uint64_t)&v723[1], *(llvm::Constant **)(v482 + 32)))
                                                    {
                                                      goto LABEL_856;
                                                    }
                                                  }
                                                  else if (v479 != 48
                                                         || v18 != *(_QWORD *)(v478 - 64)
                                                         || (sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v478 - 32)) & 1) == 0)
                                                  {
                                                    goto LABEL_856;
                                                  }
                                                  if (!sub_1C4D89F84((uint64_t)&v724 + 8, *(unsigned __int8 **)(v17 - 32)))goto LABEL_856;
                                                }
                                                v484 = *((_DWORD *)v729 + 2);
                                                LODWORD(v735) = v484;
                                                if (v484 > 0x40)
                                                {
                                                  llvm::APInt::initSlowCase((llvm::APInt *)&p_s2, 1, 0);
                                                }
                                                else
                                                {
                                                  if (v484)
                                                    v485 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v484;
                                                  else
                                                    LOBYTE(v485) = 0;
                                                  p_s2 = v485 & 1;
                                                }
                                                v486 = (const void **)v731;
                                                v487 = *((_DWORD *)v731 + 2);
                                                v717 = v487;
                                                if (v487 <= 0x40)
                                                {
                                                  if (v487)
                                                    v488 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v487;
                                                  else
                                                    v488 = 0;
                                                  v716 = (void *)(v488 & ~*(_QWORD *)v731);
                                                }
                                                else
                                                {
                                                  v716 = (void *)operator new[]();
                                                  memcpy(v716, *v486, (((unint64_t)v717 + 63) >> 3) & 0x3FFFFFF8);
                                                  llvm::APInt::flipAllBitsSlowCase((uint64_t)&v716);
                                                }
                                                llvm::APInt::operator++((uint64_t)&v716);
                                                v742 = v717;
                                                v741 = (unint64_t)v716;
                                                v717 = 0;
                                                v489 = (uint64_t ***)v729;
                                                v490 = v735;
                                                LODWORD(v723[1]) = (_DWORD)v735;
                                                if (v735 > 0x40)
                                                {
                                                  v723[0] = (void *)operator new[]();
                                                  v491 = LODWORD(v723[1]);
                                                  v711 = p_s2;
                                                  memcpy(v723[0], (const void *)p_s2, (((unint64_t)LODWORD(v723[1]) + 63) >> 3) & 0x3FFFFFF8);
                                                }
                                                else
                                                {
                                                  v711 = p_s2;
                                                  v723[0] = (void *)p_s2;
                                                  v491 = v735;
                                                }
                                                v492 = sub_1C47EE5B8(v489, v491);
                                                sub_1C4888094((uint64_t)v723, v492);
                                                Not = (uint64_t ***)v723[0];
                                                if (v742 > 0x40)
                                                  v494 = memcmp((const void *)v741, v723[0], (((unint64_t)v742 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                                else
                                                  v494 = (void *)v741 == v723[0];
                                                v495 = v494;
                                                if (LODWORD(v723[1]) >= 0x41 && Not)
                                                  MEMORY[0x1CAA32F9C](Not, 0x1000C8000313F17);
                                                if (v495)
                                                {
                                                  v496 = llvm::ConstantInt::get(*(llvm::ConstantInt ***)v18, (llvm::Type *)&v741, v493);
                                                  LOWORD(v725) = 257;
                                                  v497 = (char *)operator new(0x80uLL);
                                                  *(_QWORD *)v497 = 0;
                                                  *((_QWORD *)v497 + 2) = 0;
                                                  *((_QWORD *)v497 + 1) = 0;
                                                  *((_QWORD *)v497 + 5) = 0;
                                                  *((_QWORD *)v497 + 6) = 0;
                                                  *((_QWORD *)v497 + 4) = 0;
                                                  v498 = (llvm::Value ***)(v497 + 32);
                                                  *((_QWORD *)v497 + 8) = *(_QWORD *)v18;
                                                  Not = (uint64_t ***)(v497 + 64);
                                                  *((_QWORD *)v497 + 3) = v497 + 64;
                                                  *((_QWORD *)v497 + 7) = v497 + 64;
                                                  *((_QWORD *)v497 + 9) = 0;
                                                  v497[80] = 51;
                                                  v497[81] = 0;
                                                  *((_WORD *)v497 + 41) = 0;
                                                  *((_DWORD *)v497 + 21) = 2;
                                                  *((_DWORD *)v497 + 30) = 0;
                                                  *(_OWORD *)(v497 + 104) = 0u;
                                                  *(_OWORD *)(v497 + 88) = 0u;
                                                  *(_QWORD *)v497 = v18;
                                                  v499 = *(_QWORD *)(v18 + 8);
                                                  *((_QWORD *)v497 + 1) = v499;
                                                  if (v499)
                                                    *(_QWORD *)(v499 + 16) = v497 + 8;
                                                  *((_QWORD *)v497 + 2) = v715;
                                                  *(_QWORD *)v715 = v497;
                                                  if (*((_QWORD *)v497 + 4))
                                                  {
                                                    **((_QWORD **)v497 + 6) = *((_QWORD *)v497 + 5);
                                                    v704 = *((_QWORD *)v497 + 5);
                                                    if (v704)
                                                      *(_QWORD *)(v704 + 16) = *((_QWORD *)v497 + 6);
                                                  }
                                                  *v498 = v496;
                                                  if (v496)
                                                  {
                                                    v502 = v496[1];
                                                    v501 = (llvm::Value ****)(v496 + 1);
                                                    v500 = v502;
                                                    *((_QWORD *)v497 + 5) = v502;
                                                    if (v502)
                                                      *((_QWORD *)v500 + 2) = v497 + 40;
                                                    *((_QWORD *)v497 + 6) = v501;
                                                    *v501 = v498;
                                                  }
                                                  llvm::Value::setName((uint64_t ***)v497 + 8, (uint64_t)v723);
                                                }
                                                if (v742 >= 0x41 && v741)
                                                  MEMORY[0x1CAA32F9C](v741, 0x1000C8000313F17);
                                                if (v490 >= 0x41 && v711)
                                                  MEMORY[0x1CAA32F9C](v711, 0x1000C8000313F17);
                                                if ((v495 & 1) != 0)
                                                  return (llvm::Value *)Not;
LABEL_856:
                                                if (llvm::haveNoCommonBitsSet((llvm *)v17, (const llvm::Value *)v18, *(void ***)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1))
                                                {
                                                  LOWORD(v725) = 257;
                                                  v503 = (char *)operator new(0x80uLL);
                                                  *(_QWORD *)v503 = 0;
                                                  *((_QWORD *)v503 + 2) = 0;
                                                  *((_QWORD *)v503 + 1) = 0;
                                                  *((_QWORD *)v503 + 5) = 0;
                                                  *((_QWORD *)v503 + 6) = 0;
                                                  *((_QWORD *)v503 + 4) = 0;
                                                  *((_QWORD *)v503 + 8) = *(_QWORD *)v17;
                                                  Not = (uint64_t ***)(v503 + 64);
                                                  *((_QWORD *)v503 + 3) = v503 + 64;
                                                  *((_QWORD *)v503 + 7) = v503 + 64;
                                                  *((_QWORD *)v503 + 9) = 0;
                                                  v503[80] = 57;
                                                  v503[81] = 0;
                                                  *((_WORD *)v503 + 41) = 0;
                                                  *((_DWORD *)v503 + 21) = 2;
                                                  *((_DWORD *)v503 + 30) = 0;
                                                  *(_OWORD *)(v503 + 104) = 0u;
                                                  *(_OWORD *)(v503 + 88) = 0u;
                                                  *(_QWORD *)v503 = v17;
                                                  v504 = *(_QWORD *)(v17 + 8);
                                                  *((_QWORD *)v503 + 1) = v504;
                                                  if (v504)
                                                    *(_QWORD *)(v504 + 16) = v503 + 8;
                                                  *((_QWORD *)v503 + 2) = v409;
                                                  *(_QWORD *)v409 = v503;
                                                  if (*((_QWORD *)v503 + 4))
                                                  {
                                                    **((_QWORD **)v503 + 6) = *((_QWORD *)v503 + 5);
                                                    v700 = *((_QWORD *)v503 + 5);
                                                    if (v700)
                                                      *(_QWORD *)(v700 + 16) = *((_QWORD *)v503 + 6);
                                                  }
                                                  *((_QWORD *)v503 + 4) = v18;
                                                  v505 = *(_QWORD *)(v18 + 8);
                                                  *((_QWORD *)v503 + 5) = v505;
                                                  if (v505)
                                                    *(_QWORD *)(v505 + 16) = v503 + 40;
                                                  *((_QWORD *)v503 + 6) = v715;
                                                  *(_QWORD *)v715 = v503 + 32;
                                                  goto LABEL_354;
                                                }
                                                v506 = v17;
                                                v507 = (uint64_t *)v18;
                                                if (*(_BYTE *)(v17 + 16) != 85
                                                  && (v506 = v18, v507 = (uint64_t *)v17, *(_BYTE *)(v18 + 16) != 85)
                                                  || (v508 = *(_QWORD *)(v506 + 8)) == 0
                                                  || *(_QWORD *)(v508 + 8))
                                                {
LABEL_867:
                                                  sub_1C57833C8((_QWORD *)a1, (unsigned __int8 *)a2);
                                                  Not = v509;
                                                  if (v509)
                                                    return (llvm::Value *)Not;
                                                  v510 = *v5;
                                                  v511 = *(unsigned __int8 *)(*v5 + 16);
                                                  if (v511 == 5)
                                                  {
                                                    if (*(_WORD *)(v510 + 18) != 30)
                                                      goto LABEL_893;
                                                    v519 = v510 - 32 * (*(_DWORD *)(v510 + 20) & 0x7FFFFFF);
                                                    v512 = *(llvm **)v519;
                                                    if (!*(_QWORD *)v519)
                                                      goto LABEL_893;
                                                    v719 = *(llvm **)v519;
                                                    v513 = *(llvm **)(v519 + 32);
                                                    if (!v513)
                                                      goto LABEL_893;
                                                  }
                                                  else
                                                  {
                                                    if (v511 != 58)
                                                      goto LABEL_893;
                                                    v512 = *(llvm **)(v510 - 64);
                                                    if (!v512)
                                                      goto LABEL_893;
                                                    v719 = *(llvm **)(v510 - 64);
                                                    v513 = *(llvm **)(v510 - 32);
                                                    if (!v513)
                                                      goto LABEL_893;
                                                  }
                                                  v718 = v513;
                                                  v520 = (uint64_t)*(a2 - 4);
                                                  v521 = *(unsigned __int8 *)(v520 + 16);
                                                  if (v521 == 5)
                                                  {
                                                    if (*(_WORD *)(v520 + 18) == 28)
                                                    {
                                                      v524 = (llvm **)(v520 - 32
                                                                            * (*(_DWORD *)(v520 + 20) & 0x7FFFFFF));
                                                      v522 = *v524;
                                                      v523 = v524[4];
LABEL_889:
                                                      if (v512 == v522 && v513 == v523 || v512 == v523 && v513 == v522)
                                                        goto LABEL_929;
                                                    }
                                                  }
                                                  else if (v521 == 56)
                                                  {
                                                    v522 = *(llvm **)(v520 - 64);
                                                    v523 = *(llvm **)(v520 - 32);
                                                    goto LABEL_889;
                                                  }
LABEL_893:
                                                  v525 = (uint64_t)*(a2 - 4);
                                                  v526 = *(unsigned __int8 *)(v525 + 16);
                                                  if (v526 == 5)
                                                  {
                                                    if (*(_WORD *)(v525 + 18) != 30)
                                                      goto LABEL_954;
                                                    v527 = (llvm **)(v525 - 32 * (*(_DWORD *)(v525 + 20) & 0x7FFFFFF));
                                                    v512 = *v527;
                                                    if (!*v527)
                                                      goto LABEL_954;
                                                    v719 = *v527;
                                                    v513 = v527[4];
                                                    if (!v513)
                                                      goto LABEL_954;
                                                  }
                                                  else
                                                  {
                                                    if (v526 != 58)
                                                      goto LABEL_954;
                                                    v512 = *(llvm **)(v525 - 64);
                                                    if (!v512)
                                                      goto LABEL_954;
                                                    v719 = *(llvm **)(v525 - 64);
                                                    v513 = *(llvm **)(v525 - 32);
                                                    if (!v513)
                                                      goto LABEL_954;
                                                  }
                                                  v718 = v513;
                                                  switch(v511)
                                                  {
                                                    case 5:
                                                      v536 = *(unsigned __int16 *)(v510 + 18);
                                                      if (v536 != 28)
                                                        goto LABEL_957;
                                                      v537 = (llvm **)(v510 - 32
                                                                            * (*(_DWORD *)(v510 + 20) & 0x7FFFFFF));
                                                      v528 = *v537;
                                                      v529 = v537[4];
                                                      break;
                                                    case 57:
                                                      goto LABEL_961;
                                                    case 56:
                                                      v528 = *(llvm **)(v510 - 64);
                                                      v529 = *(llvm **)(v510 - 32);
                                                      break;
                                                    default:
                                                      goto LABEL_975;
                                                  }
                                                  if (v512 != v528 || v513 != v529)
                                                  {
                                                    if (v512 != v529)
                                                      goto LABEL_975;
                                                    if (v513 != v528)
                                                    {
LABEL_954:
                                                      if (v511 != 57)
                                                      {
                                                        if (v511 != 5)
                                                          goto LABEL_975;
                                                        v536 = *(unsigned __int16 *)(v510 + 18);
LABEL_957:
                                                        if (v536 != 29)
                                                          goto LABEL_975;
                                                        v554 = (llvm **)(v510
                                                                       - 32 * (*(_DWORD *)(v510 + 20) & 0x7FFFFFF));
                                                        v555 = *v554;
                                                        if (!*v554)
                                                          goto LABEL_975;
                                                        v719 = *v554;
                                                        v556 = v554[4];
                                                        if (!v556)
                                                          goto LABEL_975;
LABEL_963:
                                                        v718 = v556;
                                                        switch(v526)
                                                        {
                                                          case 5:
                                                            if (*(_WORD *)(v525 + 18) != 28)
                                                              goto LABEL_980;
                                                            v559 = (llvm **)(v525
                                                                           - 32 * (*(_DWORD *)(v525 + 20) & 0x7FFFFFF));
                                                            v557 = *v559;
                                                            v560 = v559[4];
                                                            if (v555 == v557 && v556 == v560)
                                                              goto LABEL_990;
                                                            if (v555 != v560)
                                                              goto LABEL_980;
                                                            break;
                                                          case 57:
                                                            goto LABEL_977;
                                                          case 56:
                                                            v557 = *(llvm **)(v525 - 64);
                                                            v558 = *(const llvm::Value **)(v525 - 32);
                                                            if (v555 == v557 && v556 == v558)
                                                            {
LABEL_990:
                                                              sub_1C577E2C8(a1, (uint64_t)a2, 0, (uint64_t)v555);
                                                              sub_1C577E2C8(a1, (uint64_t)a2, 1u, (uint64_t)v718);
                                                              return (llvm::Value *)a2;
                                                            }
                                                            if (v555 != v558)
                                                              goto LABEL_993;
                                                            break;
                                                          default:
                                                            goto LABEL_993;
                                                        }
                                                        if (v556 == v557)
                                                          goto LABEL_990;
LABEL_975:
                                                        if (v526 != 5)
                                                        {
                                                          if (v526 != 57)
                                                            goto LABEL_993;
LABEL_977:
                                                          v555 = *(llvm **)(v525 - 64);
                                                          if (!v555)
                                                            goto LABEL_993;
                                                          v719 = *(llvm **)(v525 - 64);
                                                          v561 = *(const llvm::Value **)(v525 - 32);
                                                          if (!v561)
                                                            goto LABEL_993;
LABEL_983:
                                                          v718 = v561;
                                                          if (v511 == 5)
                                                          {
                                                            if (*(_WORD *)(v510 + 18) != 28)
                                                              goto LABEL_993;
                                                            v565 = (llvm **)(v510
                                                                           - 32 * (*(_DWORD *)(v510 + 20) & 0x7FFFFFF));
                                                            v563 = *v565;
                                                            v564 = v565[4];
                                                          }
                                                          else
                                                          {
                                                            if (v511 != 56)
                                                              goto LABEL_993;
                                                            v563 = *(llvm **)(v510 - 64);
                                                            v564 = *(const llvm::Value **)(v510 - 32);
                                                          }
                                                          if ((v555 != v563 || v561 != v564)
                                                            && (v555 != v564 || v561 != v563))
                                                          {
                                                            goto LABEL_993;
                                                          }
                                                          goto LABEL_990;
                                                        }
LABEL_980:
                                                        if (*(_WORD *)(v525 + 18) != 29
                                                          || (v562 = (llvm **)(v525
                                                                             - 32
                                                                             * (*(_DWORD *)(v525 + 20) & 0x7FFFFFF)),
                                                              (v555 = *v562) == 0)
                                                          || (v719 = *v562, (v561 = v562[4]) == 0))
                                                        {
LABEL_993:
                                                          v566 = *((_BYTE *)a2 + 17);
                                                          if ((v566 & 4) != 0
                                                            || (v567 = sub_1C4F8C45C(v17, v18, 0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 56), (uint64_t)a2, *(_QWORD *)(a1 + 72)), v566 = *((_BYTE *)a2 + 17), v567 != 3))
                                                          {
                                                            v568 = 0;
                                                          }
                                                          else
                                                          {
                                                            v566 |= 4u;
                                                            *((_BYTE *)a2 + 17) = v566;
                                                            v568 = 1;
                                                          }
                                                          if ((v566 & 2) == 0
                                                            && llvm::computeOverflowForUnsignedAdd((llvm *)v17, (const llvm::Value *)v18, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1) == 3)
                                                          {
                                                            *((_BYTE *)a2 + 17) |= 2u;
                                                            v568 = 1;
                                                          }
                                                          v569 = *(_QWORD *)(a1 + 24);
                                                          p_s2 = 0;
                                                          v723[1] = &p_s2;
                                                          v570 = *((unsigned __int8 *)a2 + 16);
                                                          if (v570 == 41)
                                                          {
                                                            v571 = *v5;
                                                            v572 = *(_QWORD *)(*v5 + 8);
                                                            if (!v572 || *(_QWORD *)(v572 + 8))
                                                              goto LABEL_1012;
                                                            v573 = *(unsigned __int8 *)(v571 + 16);
                                                            if (v573 == 5)
                                                            {
                                                              if (*(_WORD *)(v571 + 18) != 25)
                                                                goto LABEL_1012;
                                                              if (!sub_1C4D89E3C((uint64_t)v723, *(llvm::Constant **)(v571 - 32 * (*(_DWORD *)(v571 + 20) & 0x7FFFFFF))))goto LABEL_1012;
                                                              v574 = *(_QWORD *)(v571
                                                                               - 32
                                                                               * (*(_DWORD *)(v571 + 20) & 0x7FFFFFF)
                                                                               + 32);
                                                              if (!v574)
                                                                goto LABEL_1012;
                                                            }
                                                            else
                                                            {
                                                              if (v573 != 53)
                                                                goto LABEL_1012;
                                                              if (!sub_1C4D89CC8((uint64_t)v723, *(llvm::Constant **)(v571 - 64)))goto LABEL_1012;
                                                              v574 = *(_QWORD *)(v571 - 32);
                                                              if (!v574)
                                                                goto LABEL_1012;
                                                            }
                                                            *(_QWORD *)v723[1] = v574;
                                                            if (!sub_1C4D9ED34((uint64_t)&v724, *(a2 - 4)))
                                                              goto LABEL_1012;
                                                          }
                                                          else
                                                          {
                                                            if (v570 != 5)
                                                              goto LABEL_1012;
                                                            if (*((_WORD *)a2 + 9) != 13)
                                                              goto LABEL_1012;
                                                            v575 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                            v576 = (_QWORD *)*((_QWORD *)v575 + 1);
                                                            if (!v576 || v576[1])
                                                              goto LABEL_1012;
                                                            v598 = *((unsigned __int8 *)v575 + 16);
                                                            if (v598 == 5)
                                                            {
                                                              if (*((_WORD *)v575 + 9) != 25)
                                                                goto LABEL_1012;
                                                              if (!sub_1C4D89E3C((uint64_t)v723, *((llvm::Constant **)v575- 4* (*((_DWORD *)v575 + 5) & 0x7FFFFFF))))goto LABEL_1012;
                                                              v599 = (_QWORD *)((_QWORD *)v575
                                                                              - 4 * (*((_DWORD *)v575 + 5) & 0x7FFFFFF))[4];
                                                              if (!v599)
                                                                goto LABEL_1012;
                                                            }
                                                            else
                                                            {
                                                              if (v598 != 53)
                                                                goto LABEL_1012;
                                                              if (!sub_1C4D89CC8((uint64_t)v723, *((llvm::Constant **)v575 - 8)))goto LABEL_1012;
                                                              v599 = (_QWORD *)*((_QWORD *)v575 - 4);
                                                              if (!v599)
                                                                goto LABEL_1012;
                                                            }
                                                            *(_QWORD *)v723[1] = v599;
                                                            if ((sub_1C4D9EED4((uint64_t)&v724, a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4]) & 1) == 0)goto LABEL_1012;
                                                          }
                                                          AllOnesValue = llvm::Constant::getAllOnesValue(*(llvm::Constant **)p_s2, v600);
                                                          v723[0] = "notmask";
                                                          LOWORD(v725) = 259;
                                                          v622 = sub_1C506E874(v569, (uint64_t)AllOnesValue, p_s2, (uint64_t)v723, 0, 0);
                                                          if (v622)
                                                          {
                                                            v623 = *(unsigned __int8 *)(v622 + 16);
                                                            if (v623 >= 0x1C && v623 - 59 >= 0xFFFFFFEE)
                                                            {
                                                              v624 = *(_BYTE *)(v622 + 17) | 4;
                                                              *(_BYTE *)(v622 + 17) = v624;
                                                              *(_BYTE *)(v622 + 17) = *((_BYTE *)a2 + 17) & 2 | v624 & 0xFD;
                                                            }
                                                          }
                                                          if ((*((_BYTE *)a2 + 23) & 0x10) == 0)
                                                          {
                                                            v687 = 0;
                                                            v686 = &byte_1C871356D;
LABEL_1200:
                                                            LOWORD(v725) = 261;
                                                            v723[0] = v686;
                                                            v723[1] = v687;
                                                            Not = (uint64_t ***)llvm::BinaryOperator::CreateNot(v622, (llvm::Type *)v723, 0);
                                                            if (Not)
                                                              return (llvm::Value *)Not;
LABEL_1012:
                                                            Not = (uint64_t ***)sub_1C5791A5C(a1, (uint64_t)a2);
                                                            if (Not)
                                                              return (llvm::Value *)Not;
                                                            v739 = (llvm::ConstantInt **)*a2;
                                                            __s2 = 0;
                                                            v720 = 0;
                                                            v723[0] = &__s2;
                                                            v723[1] = &v720;
                                                            *((_QWORD *)&v724 + 1) = &v720;
                                                            v577 = *((unsigned __int8 *)a2 + 16);
                                                            if (v577 == 5)
                                                            {
                                                              if (*((_WORD *)a2 + 9) != 13)
                                                                goto LABEL_1025;
                                                              v582 = sub_1C579EDE0((uint64_t **)v723, (uint64_t)a2[-4* (*((_DWORD *)a2 + 5) & 0x7FFFFFF)]);
                                                              v583 = (uint64_t)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)
                                                                               + 4];
                                                              if (v582 && **((_QWORD **)&v724 + 1) == v583)
                                                                goto LABEL_1044;
                                                              if (!sub_1C579EDE0((uint64_t **)v723, v583))
                                                                goto LABEL_1025;
                                                              v581 = (uint64_t *)&a2[-4
                                                                                  * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                            }
                                                            else
                                                            {
                                                              if (v577 != 41)
                                                                goto LABEL_1025;
                                                              v578 = sub_1C579EDE0((uint64_t **)v723, (uint64_t)*(a2 - 8));
                                                              v579 = (uint64_t)*(a2 - 4);
                                                              if (v578 && **((_QWORD **)&v724 + 1) == v579)
                                                                goto LABEL_1044;
                                                              v580 = sub_1C579EDE0((uint64_t **)v723, v579);
                                                              v581 = v5;
                                                              if ((v580 & 1) == 0)
                                                              {
LABEL_1025:
                                                                v732 = 0;
                                                                v733 = 0;
                                                                v723[0] = &__s2;
                                                                v723[1] = &v732;
                                                                *(_QWORD *)&v724 = 0;
                                                                *((_QWORD *)&v724 + 1) = &v733;
                                                                v725 = 0;
                                                                v584 = *((unsigned __int8 *)a2 + 16);
                                                                if (v584 == 41)
                                                                {
                                                                  if (sub_1C579EF20((unsigned __int8 ***)v723, *v5)
                                                                    && (sub_1C4D89F84((uint64_t)&v724 + 8, (unsigned __int8 *)*(a2 - 4)) & 1) != 0)
                                                                  {
LABEL_1028:
                                                                    v585 = (const void **)v732;
                                                                    v712 = v733;
                                                                    v586 = *((unsigned int *)v732 + 2);
                                                                    v742 = v586;
                                                                    if (v586 > 0x40)
                                                                    {
                                                                      v741 = operator new[]();
                                                                      memcpy((void *)v741, *v585, ((unint64_t)(v586 + 63) >> 3) & 0x3FFFFFF8);
                                                                      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v741);
                                                                      LODWORD(v586) = v742;
                                                                      v589 = (const void *)v741;
                                                                    }
                                                                    else
                                                                    {
                                                                      v587 = ~*(_QWORD *)v732;
                                                                      if ((_DWORD)v586)
                                                                        v588 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v586;
                                                                      else
                                                                        v588 = 0;
                                                                      v589 = (const void *)(v588 & v587);
                                                                      v741 = v588 & v587;
                                                                    }
                                                                    v615 = *((unsigned int *)v712 + 2);
                                                                    if (v615 > 0x40)
                                                                      v616 = memcmp(*(const void **)v712, v589, ((unint64_t)(v615 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                                                    else
                                                                      v616 = *(_QWORD *)v712 == (_QWORD)v589;
                                                                    v617 = v616;
                                                                    if (v586 >= 0x41 && v589)
                                                                      MEMORY[0x1CAA32F9C](v589, 0x1000C8000313F17);
                                                                    if (v617)
                                                                    {
                                                                      Declaration = llvm::Intrinsic::getDeclaration(*(uint64_t **)(*((_QWORD *)a2[5] + 7)+ 40), 300, (uint64_t *)&v739, 1);
                                                                      v596 = Declaration;
                                                                      if (Declaration)
                                                                        v620 = *(_QWORD *)(Declaration + 24);
                                                                      else
                                                                        v620 = 0;
                                                                      p_s2 = (uint64_t)__s2;
                                                                      v735 = (const llvm::Value *)llvm::ConstantInt::get(v739, v733, v619);
                                                                      LOWORD(v725) = 257;
                                                                      v643 = (char *)operator new(0xB0uLL);
                                                                      v611 = (uint64_t)v643;
                                                                      v644 = 0;
                                                                      Not = (uint64_t ***)(v643 + 96);
                                                                      *((_DWORD *)v643 + 29) = *((_DWORD *)v643 + 29) & 0x38000000 | 3;
                                                                      do
                                                                      {
                                                                        v645 = &v643[v644];
                                                                        *(_QWORD *)v645 = 0;
                                                                        *((_QWORD *)v645 + 1) = 0;
                                                                        *((_QWORD *)v645 + 2) = 0;
                                                                        *((_QWORD *)v645 + 3) = Not;
                                                                        v644 += 32;
                                                                      }
                                                                      while (v644 != 96);
                                                                      *((_QWORD *)v643 + 12) = **(_QWORD **)(v620 + 16);
                                                                      *((_QWORD *)v643 + 13) = 0;
                                                                      v643[112] = 84;
                                                                      v643[113] = 0;
                                                                      *((_WORD *)v643 + 57) = 0;
                                                                      *((_DWORD *)v643 + 29) = *((_DWORD *)v643 + 29) & 0xC0000000 | 3;
                                                                      *(_OWORD *)(v643 + 120) = 0u;
                                                                      *(_OWORD *)(v643 + 136) = 0u;
                                                                      *((_DWORD *)v643 + 38) = 0;
                                                                      *((_QWORD *)v643 + 20) = 0;
                                                                      *((_QWORD *)v643 + 21) = v620;
                                                                      v614 = (llvm::APInt **)&v722;
LABEL_1139:
                                                                      sub_1C5382FD4((uint64_t)v614, &p_s2, (uint64_t *)&v736, v611);
                                                                      v646 = (uint64_t *)(v611 + 64);
                                                                      if (*(_QWORD *)(v611 + 64))
                                                                      {
                                                                        **(_QWORD **)(v611 + 80) = *(_QWORD *)(v611 + 72);
                                                                        v703 = *(_QWORD *)(v611 + 72);
                                                                        if (v703)
                                                                          *(_QWORD *)(v703 + 16) = *(_QWORD *)(v611 + 80);
                                                                      }
                                                                      *v646 = v596;
                                                                      if (v596)
                                                                      {
                                                                        v649 = *(_QWORD *)(v596 + 8);
                                                                        v648 = (uint64_t **)(v596 + 8);
                                                                        v647 = v649;
                                                                        *(_QWORD *)(v611 + 72) = v649;
                                                                        if (v649)
                                                                          *(_QWORD *)(v647 + 16) = v611 + 72;
                                                                        *(_QWORD *)(v611 + 80) = v648;
                                                                        *v648 = v646;
                                                                      }
                                                                      llvm::CallBase::populateBundleOperandInfos((uint64_t)Not, 0, 0, 2u);
                                                                      goto LABEL_354;
                                                                    }
                                                                  }
                                                                }
                                                                else if (v584 == 5 && *((_WORD *)a2 + 9) == 13)
                                                                {
                                                                  v590 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                                                  v591 = *((unsigned __int8 *)v590 + 16);
                                                                  if (v591 == 85)
                                                                  {
                                                                    v601 = *((_QWORD *)v590 - 12);
                                                                    if (!v601 || *(_BYTE *)(v601 + 16) != 81)
                                                                      goto LABEL_1161;
                                                                    v602 = (unsigned __int8 *)*((_QWORD *)v590 - 8);
                                                                    v603 = (unsigned __int8 *)*((_QWORD *)v590 - 4);
                                                                    v604 = *(unsigned __int8 **)(v601 - 64);
                                                                    v605 = *(unsigned __int8 **)(v601 - 32);
                                                                    if ((v602 != v604 || v603 != v605)
                                                                      && (v602 != v605 || v603 != v604))
                                                                    {
                                                                      goto LABEL_1161;
                                                                    }
                                                                    v608 = *(_WORD *)(v601 + 18) & 0x3E;
                                                                    if (v602 == v604)
                                                                    {
                                                                      if (!v602 || v608 != 36)
                                                                        goto LABEL_1161;
                                                                    }
                                                                    else if (!v604 || v608 != 34)
                                                                    {
                                                                      goto LABEL_1161;
                                                                    }
                                                                    __s2 = v604;
                                                                    if (!sub_1C4D89F84((uint64_t)&v723[1], v605))goto LABEL_1161;
                                                                  }
                                                                  else
                                                                  {
                                                                    if (v591 != 84)
                                                                      goto LABEL_1161;
                                                                    v592 = *((_QWORD *)v590 - 4);
                                                                    if (!v592)
                                                                      goto LABEL_1161;
                                                                    if (*(_BYTE *)(v592 + 16))
                                                                      goto LABEL_1161;
                                                                    if (*(_QWORD *)(v592 + 24) != *((_QWORD *)v590 + 9))
                                                                      goto LABEL_1161;
                                                                    if ((*(_BYTE *)(v592 + 33) & 0x20) == 0)
                                                                      goto LABEL_1161;
                                                                    if (*(_DWORD *)(v592 + 36) != 306)
                                                                      goto LABEL_1161;
                                                                    v593 = (void **)((char *)v590
                                                                                   - 32
                                                                                   * (*((_DWORD *)v590 + 5) & 0x7FFFFFF));
                                                                    if (!*v593)
                                                                      goto LABEL_1161;
                                                                    v594 = (unsigned __int8 *)v593[4];
                                                                    __s2 = *v593;
                                                                    if ((sub_1C4D89F84((uint64_t)&v723[1], v594) & 1) == 0)goto LABEL_1161;
                                                                  }
                                                                  if (sub_1C4D8A004((uint64_t)&v724 + 8, a2[-4* (*((_DWORD *)a2 + 5) & 0x7FFFFFF)+ 4]))goto LABEL_1028;
                                                                }
LABEL_1161:
                                                                LODWORD(v723[0]) = 311;
                                                                v723[1] = 0;
                                                                *(_QWORD *)&v724 = &v719;
                                                                *((_QWORD *)&v724 + 1) = 1;
                                                                v725 = &v718;
                                                                v726 = &v718;
                                                                v659 = *(_QWORD *)(*v5 + 8);
                                                                if (v659
                                                                  && !*(_QWORD *)(v659 + 8)
                                                                  && sub_1C57A1C20((uint64_t)v723, *v5)
                                                                  && *v726 == *(a2 - 4)
                                                                  || (v660 = (uint64_t)*(a2 - 4),
                                                                      (v661 = *(_QWORD *)(v660 + 8)) != 0)
                                                                  && !*(_QWORD *)(v661 + 8)
                                                                  && sub_1C57A1C20((uint64_t)v723, v660)
                                                                  && *v726 == (const llvm::Value *)*v5)
                                                                {
                                                                  v665 = *(uint64_t **)(a1 + 24);
                                                                  v741 = (unint64_t)*a2;
                                                                  p_s2 = (uint64_t)v719;
                                                                  v735 = v718;
                                                                  LOWORD(v725) = 257;
                                                                  p_p_s2 = &p_s2;
                                                                  v664 = v723;
                                                                  v666 = 305;
                                                                  v667 = 2;
                                                                }
                                                                else
                                                                {
                                                                  LODWORD(v723[0]) = 53;
                                                                  v723[1] = 0;
                                                                  *(_QWORD *)&v724 = &v719;
                                                                  if (!*(_QWORD *)v409
                                                                    || *(_QWORD *)(*(_QWORD *)v409 + 8)
                                                                    || !sub_1C4E75A6C((uint64_t)v723, v17)
                                                                    || (LODWORD(p_s2) = 53,
                                                                        v735 = 0,
                                                                        v736 = &v718,
                                                                        !*(_QWORD *)v715)
                                                                    || *(_QWORD *)(*(_QWORD *)v715 + 8)
                                                                    || !sub_1C4E75A6C((uint64_t)&p_s2, v18)
                                                                    || !llvm::haveNoCommonBitsSet(v719, v718, *(void ***)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1))
                                                                  {
                                                                    if (v568)
                                                                      return (llvm::Value *)a2;
                                                                    else
                                                                      return 0;
                                                                  }
                                                                  v662 = *(_QWORD *)(a1 + 24);
                                                                  v741 = (unint64_t)*a2;
                                                                  LOWORD(v725) = 257;
                                                                  v739 = (llvm::ConstantInt **)sub_1C4773594(v662, v719, (uint64_t)v718, (uint64_t)v723);
                                                                  v738 = 257;
                                                                  p_p_s2 = (uint64_t *)&v739;
                                                                  v664 = (void **)&p_s2;
                                                                  v665 = (uint64_t *)v662;
                                                                  v666 = 53;
                                                                  v667 = 1;
                                                                }
                                                                Intrinsic = llvm::IRBuilderBase::CreateIntrinsic(v665, v666, (uint64_t *)&v741, 1, p_p_s2, v667, 0, (uint64_t)v664);
LABEL_2:
                                                                v11 = (llvm::Value *)Intrinsic;
LABEL_3:
                                                                v12 = a1;
                                                                v13 = (llvm::ValueAsMetadata *)a2;
                                                                return (llvm::Value *)sub_1C577F888(v12, v13, v11);
                                                              }
                                                            }
                                                            if (**((_QWORD **)&v724 + 1) != *v581)
                                                              goto LABEL_1025;
LABEL_1044:
                                                            v595 = llvm::Intrinsic::getDeclaration(*(uint64_t **)(*((_QWORD *)a2[5] + 7) + 40), 300, (uint64_t *)&v739, 1);
                                                            v596 = v595;
                                                            if (v595)
                                                              v597 = *(_QWORD *)(v595 + 24);
                                                            else
                                                              v597 = 0;
                                                            p_s2 = (uint64_t)__s2;
                                                            v735 = v720;
                                                            LOWORD(v725) = 257;
                                                            v610 = (char *)operator new(0xB0uLL);
                                                            v611 = (uint64_t)v610;
                                                            v612 = 0;
                                                            Not = (uint64_t ***)(v610 + 96);
                                                            *((_DWORD *)v610 + 29) = *((_DWORD *)v610 + 29) & 0x38000000 | 3;
                                                            do
                                                            {
                                                              v613 = &v610[v612];
                                                              *(_QWORD *)v613 = 0;
                                                              *((_QWORD *)v613 + 1) = 0;
                                                              *((_QWORD *)v613 + 2) = 0;
                                                              *((_QWORD *)v613 + 3) = Not;
                                                              v612 += 32;
                                                            }
                                                            while (v612 != 96);
                                                            *((_QWORD *)v610 + 12) = **(_QWORD **)(v597 + 16);
                                                            *((_QWORD *)v610 + 13) = 0;
                                                            v610[112] = 84;
                                                            v610[113] = 0;
                                                            *((_WORD *)v610 + 57) = 0;
                                                            *((_DWORD *)v610 + 29) = *((_DWORD *)v610 + 29) & 0xC0000000 | 3;
                                                            *(_OWORD *)(v610 + 120) = 0u;
                                                            *(_OWORD *)(v610 + 136) = 0u;
                                                            *((_DWORD *)v610 + 38) = 0;
                                                            *((_QWORD *)v610 + 20) = 0;
                                                            *((_QWORD *)v610 + 21) = v597;
                                                            v614 = &v733;
                                                            goto LABEL_1139;
                                                          }
                                                          v625 = **(_QWORD **)*a2;
                                                          v626 = *(_QWORD *)(v625 + 152);
                                                          v627 = *(unsigned int *)(v625 + 168);
                                                          if ((_DWORD)v627)
                                                          {
                                                            LODWORD(v628) = (v627 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                                                            v629 = (const llvm::Value ***)(v626
                                                                                         + 16 * v628);
                                                            v630 = *v629;
                                                            if (*v629 == a2)
                                                            {
LABEL_1199:
                                                              v685 = v629[1];
                                                              v688 = *v685;
                                                              v686 = (char *)(v685 + 2);
                                                              v687 = v688;
                                                              goto LABEL_1200;
                                                            }
                                                            v631 = 1;
                                                            while (v630 != (const llvm::Value **)-4096)
                                                            {
                                                              v632 = v628 + v631++;
                                                              v628 = v632 & (v627 - 1);
                                                              v630 = *(const llvm::Value ***)(v626
                                                                                            + 16 * v628);
                                                              if (v630 == a2)
                                                              {
                                                                v629 = (const llvm::Value ***)(v626 + 16 * v628);
                                                                goto LABEL_1199;
                                                              }
                                                            }
                                                          }
                                                          v629 = (const llvm::Value ***)(v626 + 16 * v627);
                                                          goto LABEL_1199;
                                                        }
                                                        goto LABEL_983;
                                                      }
LABEL_961:
                                                      v555 = *(llvm **)(v510 - 64);
                                                      if (!v555)
                                                        goto LABEL_975;
                                                      v719 = *(llvm **)(v510 - 64);
                                                      v556 = *(const llvm::Value **)(v510 - 32);
                                                      if (!v556)
                                                        goto LABEL_975;
                                                      goto LABEL_963;
                                                    }
                                                  }
LABEL_929:
                                                  LOWORD(v725) = 257;
                                                  v538 = (char *)operator new(0x80uLL);
                                                  *(_QWORD *)v538 = 0;
                                                  *((_QWORD *)v538 + 2) = 0;
                                                  *((_QWORD *)v538 + 1) = 0;
                                                  *((_QWORD *)v538 + 5) = 0;
                                                  *((_QWORD *)v538 + 6) = 0;
                                                  *((_QWORD *)v538 + 4) = 0;
                                                  *((_QWORD *)v538 + 8) = *(_QWORD *)v512;
                                                  Not = (uint64_t ***)(v538 + 64);
                                                  *((_QWORD *)v538 + 3) = v538 + 64;
                                                  *((_QWORD *)v538 + 7) = v538 + 64;
                                                  *((_QWORD *)v538 + 9) = 0;
                                                  v538[80] = 57;
                                                  v538[81] = 0;
                                                  *((_WORD *)v538 + 41) = 0;
                                                  *((_DWORD *)v538 + 21) = 2;
                                                  *((_DWORD *)v538 + 30) = 0;
                                                  *(_OWORD *)(v538 + 104) = 0u;
                                                  *(_OWORD *)(v538 + 88) = 0u;
                                                  *(_QWORD *)v538 = v512;
                                                  v541 = *((_QWORD *)v512 + 1);
                                                  v540 = (_QWORD *)((char *)v512 + 8);
                                                  v539 = v541;
                                                  *((_QWORD *)v538 + 1) = v541;
                                                  if (v541)
                                                    *(_QWORD *)(v539 + 16) = v538 + 8;
                                                  *((_QWORD *)v538 + 2) = v540;
                                                  *v540 = v538;
                                                  if (*((_QWORD *)v538 + 4))
                                                  {
                                                    **((_QWORD **)v538 + 6) = *((_QWORD *)v538 + 5);
                                                    v702 = *((_QWORD *)v538 + 5);
                                                    if (v702)
                                                      *(_QWORD *)(v702 + 16) = *((_QWORD *)v538 + 6);
                                                  }
                                                  *((_QWORD *)v538 + 4) = v513;
                                                  v544 = *((_QWORD *)v513 + 1);
                                                  v543 = (_QWORD *)((char *)v513 + 8);
                                                  v542 = v544;
                                                  *((_QWORD *)v538 + 5) = v544;
                                                  if (v544)
                                                    *(_QWORD *)(v542 + 16) = v538 + 40;
                                                  *((_QWORD *)v538 + 6) = v543;
                                                  *v543 = v538 + 32;
                                                  goto LABEL_354;
                                                }
                                                v514 = *(_QWORD *)(v506 - 64);
                                                v515 = *(_QWORD *)(v506 - 32);
                                                if (!v515
                                                  || *(unsigned __int8 *)(v515 + 16) > 0x14u
                                                  || (llvm::Constant::isNullValue(*(llvm::Constant **)(v506 - 32)) & 1) == 0
                                                  && (sub_1C4E71060((uint64_t)v723, (llvm::Constant *)v515) & 1) == 0)
                                                {
                                                  goto LABEL_909;
                                                }
                                                v516 = *(unsigned __int8 *)(v514 + 16);
                                                if (v516 == 5)
                                                {
                                                  if (*(_WORD *)(v514 + 18) != 15)
                                                    goto LABEL_909;
                                                  v530 = (uint64_t **)(v514 - 32 * (*(_DWORD *)(v514 + 20) & 0x7FFFFFF));
                                                  v517 = *v530;
                                                  if (!*v530)
                                                    goto LABEL_909;
                                                  v518 = v530[4];
                                                }
                                                else
                                                {
                                                  if (v516 != 43)
                                                    goto LABEL_909;
                                                  v517 = *(uint64_t **)(v514 - 64);
                                                  if (!v517)
                                                    goto LABEL_909;
                                                  v518 = *(uint64_t **)(v514 - 32);
                                                }
                                                if (v507 == v518)
                                                {
                                                  v535 = *(_QWORD *)(v506 - 96);
                                                  LOWORD(v725) = 257;
                                                  v532 = (uint64_t)v507;
                                                  return sub_1C4FC8748(v535, v517, v532, (uint64_t)v723, 0, 0);
                                                }
LABEL_909:
                                                if (!v514
                                                  || *(unsigned __int8 *)(v514 + 16) > 0x14u
                                                  || (llvm::Constant::isNullValue((llvm::Constant *)v514) & 1) == 0
                                                  && (sub_1C4E71060((uint64_t)v723, (llvm::Constant *)v514) & 1) == 0)
                                                {
                                                  goto LABEL_867;
                                                }
                                                v531 = *(unsigned __int8 *)(v515 + 16);
                                                if (v531 == 5)
                                                {
                                                  if (*(_WORD *)(v515 + 18) != 15)
                                                    goto LABEL_867;
                                                  v534 = (uint64_t *)(v515 - 32 * (*(_DWORD *)(v515 + 20) & 0x7FFFFFF));
                                                  v532 = *v534;
                                                  if (!*v534)
                                                    goto LABEL_867;
                                                  v533 = v534[4];
                                                }
                                                else
                                                {
                                                  if (v531 != 43)
                                                    goto LABEL_867;
                                                  v532 = *(_QWORD *)(v515 - 64);
                                                  if (!v532)
                                                    goto LABEL_867;
                                                  v533 = *(_QWORD *)(v515 - 32);
                                                }
                                                if (v507 != (uint64_t *)v533)
                                                  goto LABEL_867;
                                                v535 = *(_QWORD *)(v506 - 96);
                                                LOWORD(v725) = 257;
                                                v517 = v507;
                                                return sub_1C4FC8748(v535, v517, v532, (uint64_t)v723, 0, 0);
                                              }
LABEL_788:
                                              v462 = 0;
                                              goto LABEL_789;
                                            }
LABEL_783:
                                            v476 = 1;
                                            goto LABEL_784;
                                          }
                                        }
LABEL_778:
                                        v476 = 1;
                                        goto LABEL_779;
                                      }
LABEL_755:
                                      v462 = v720;
                                      if (v728 > 0x40 || (v470 = *((_DWORD *)v720 + 2), v470 > 0x40))
                                      {
                                        if (&__s2 != (void **)v720)
                                        {
                                          llvm::APInt::reallocate((uint64_t)&__s2, *((_DWORD *)v720 + 2));
                                          if (v728 <= 0x40)
                                            __s2 = *(void **)v462;
                                          else
                                            memcpy(__s2, *(const void **)v462, (((unint64_t)v728 + 63) >> 3) & 0x3FFFFFF8);
                                        }
                                      }
                                      else
                                      {
                                        __s2 = *(void **)v720;
                                        v728 = v470;
                                      }
                                      goto LABEL_777;
                                    }
                                    if (v413 == 5)
                                    {
                                      if (*(_WORD *)(v412 + 18) != 15)
                                        goto LABEL_726;
                                      v461 = (llvm::Constant **)(v412 - 32 * (*(_DWORD *)(v412 + 20) & 0x7FFFFFF));
                                      v429 = *v461;
                                      if (!*v461)
                                        goto LABEL_726;
                                      if (*((_BYTE *)v429 + 16) == 5)
                                        goto LABEL_726;
                                      v431 = v461[4];
                                      if (!v431)
                                        goto LABEL_726;
                                    }
                                    else
                                    {
                                      if (v413 != 43)
                                        goto LABEL_726;
                                      v429 = *(llvm::Constant **)(v412 - 64);
                                      if (!v429)
                                        goto LABEL_726;
                                      v460 = *((unsigned __int8 *)v429 + 16);
                                      if (v460 > 0x14)
                                        goto LABEL_726;
                                      if (v460 == 5)
                                        goto LABEL_726;
                                      v431 = *(const llvm::Value **)(v412 - 32);
                                      if (!v431)
                                        goto LABEL_726;
                                    }
LABEL_722:
                                    v718 = v431;
                                    if (v408 && !*(_QWORD *)(v408 + 8) || v410 && !*(_QWORD *)(v410 + 8))
                                    {
                                      v468 = *(_QWORD *)(a1 + 24);
                                      LOWORD(v725) = 257;
                                      v248 = (_QWORD *)sub_1C47733F8(v468, (uint64_t)v414, (uint64_t)v431, (uint64_t)v723, 0, 0);
                                      Add = llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v415, v429, 0, 0);
                                      goto LABEL_342;
                                    }
                                    goto LABEL_726;
                                  }
                                  if (v416 != 5)
                                  {
                                    v427 = (uint64_t)*(a2 - 4);
                                    v428 = *(unsigned __int8 *)(v427 + 16);
                                    if (v428 == 5)
                                    {
                                      if (*(_WORD *)(v427 + 18) == 15)
                                      {
                                        v451 = (llvm::Constant **)(v427 - 32 * (*(_DWORD *)(v427 + 20) & 0x7FFFFFF));
                                        v429 = *v451;
                                        if (*v451)
                                        {
                                          if (*((_BYTE *)v429 + 16) != 5)
                                          {
                                            v431 = v451[4];
                                            if (v431)
                                              goto LABEL_722;
                                          }
                                        }
                                      }
                                    }
                                    else if (v428 == 43)
                                    {
                                      v429 = *(llvm::Constant **)(v427 - 64);
                                      if (v429)
                                      {
                                        v430 = *((unsigned __int8 *)v429 + 16);
                                        if (v430 <= 0x14 && v430 != 5)
                                        {
                                          v431 = *(const llvm::Value **)(v427 - 32);
                                          if (v431)
                                            goto LABEL_722;
                                        }
                                      }
                                    }
                                  }
                                  goto LABEL_689;
                                }
                                if (*((_WORD *)a2 + 9) != 13)
                                  goto LABEL_726;
                                v417 = (uint64_t *)&a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
                                v412 = *v417;
                                v413 = *(unsigned __int8 *)(*v417 + 16);
                                if (v413 == 5)
                                {
                                  if (*(_WORD *)(v412 + 18) != 13)
                                    goto LABEL_699;
                                  v432 = v412 - 32 * (*(_DWORD *)(v412 + 20) & 0x7FFFFFF);
                                  v414 = *(llvm **)v432;
                                  if (!*(_QWORD *)v432)
                                    goto LABEL_699;
                                  v719 = *(llvm **)v432;
                                  v415 = *(unsigned __int8 **)(v432 + 32);
                                  if (!v415)
                                    goto LABEL_699;
                                  v418 = v415[16];
                                }
                                else if (v413 != 41
                                       || (v414 = *(llvm **)(v412 - 64)) == 0
                                       || (v719 = *(llvm **)(v412 - 64), (v415 = *(unsigned __int8 **)(v412 - 32)) == 0)
                                       || (v418 = v415[16], v418 > 0x14))
                                {
LABEL_699:
                                  v452 = v417[4];
                                  goto LABEL_700;
                                }
                                if (v418 != 5)
                                {
                                  v433 = v417[4];
                                  v434 = *(unsigned __int8 *)(v433 + 16);
                                  if (v434 == 5)
                                  {
                                    if (*(_WORD *)(v433 + 18) == 15)
                                    {
                                      v456 = (llvm::Constant **)(v433 - 32 * (*(_DWORD *)(v433 + 20) & 0x7FFFFFF));
                                      v429 = *v456;
                                      if (*v456)
                                      {
                                        if (*((_BYTE *)v429 + 16) != 5)
                                        {
                                          v431 = v456[4];
                                          if (v431)
                                            goto LABEL_722;
                                        }
                                      }
                                    }
                                  }
                                  else if (v434 == 43)
                                  {
                                    v429 = *(llvm::Constant **)(v433 - 64);
                                    if (v429)
                                    {
                                      v435 = *((unsigned __int8 *)v429 + 16);
                                      if (v435 <= 0x14 && v435 != 5)
                                      {
                                        v431 = *(const llvm::Value **)(v433 - 32);
                                        if (v431)
                                          goto LABEL_722;
                                      }
                                    }
                                  }
                                }
                                goto LABEL_699;
                              }
                              v423 = *(unsigned __int8 *)(v18 + 16);
                              if (v423 == 5)
                              {
                                if (*(_WORD *)(v18 + 18) != 13)
                                  goto LABEL_605;
                                v424 = v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF);
                                v421 = *(llvm **)v424;
                                if (!*(_QWORD *)v424)
                                {
                                  v425 = *(llvm **)(v424 + 32);
                                  goto LABEL_674;
                                }
                                v719 = *(llvm **)v424;
                                v425 = *(llvm **)(v424 + 32);
                              }
                              else
                              {
                                if (v423 != 41)
                                  goto LABEL_605;
                                v424 = v18 - 64;
                                v421 = *(llvm **)(v18 - 64);
                                if (!v421)
                                {
                                  v425 = *(llvm **)(v18 - 32);
                                  goto LABEL_674;
                                }
                                v719 = *(llvm **)(v18 - 64);
                                v425 = *(llvm **)(v18 - 32);
                              }
                              if ((llvm *)v17 == v425)
                              {
LABEL_676:
                                v441 = *(_QWORD *)(a1 + 24);
                                v723[0] = "reass.add";
                                LOWORD(v725) = 259;
                                v438 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v17, 1, 0);
                                v439 = v441;
                                v440 = v17;
                                goto LABEL_677;
                              }
LABEL_674:
                              if (!v425)
                                goto LABEL_605;
                              v719 = v425;
                              v421 = v425;
                              if (v17 != *(_QWORD *)v424)
                                goto LABEL_605;
                              goto LABEL_676;
                            }
                            v419 = *(unsigned __int8 *)(v17 + 16);
                            if (v419 == 5)
                            {
                              if (*(_WORD *)(v17 + 18) != 13)
                                goto LABEL_603;
                              v420 = v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF);
                              v421 = *(llvm **)v420;
                              if (*(_QWORD *)v420)
                              {
                                v719 = *(llvm **)v420;
                                v422 = *(llvm **)(v420 + 32);
LABEL_643:
                                if ((llvm *)v18 == v422)
                                  goto LABEL_672;
                                goto LABEL_670;
                              }
                              v422 = *(llvm **)(v420 + 32);
                            }
                            else
                            {
                              if (v419 != 41)
                                goto LABEL_603;
                              v420 = v17 - 64;
                              v421 = *(llvm **)(v17 - 64);
                              if (v421)
                              {
                                v719 = *(llvm **)(v17 - 64);
                                v422 = *(llvm **)(v17 - 32);
                                goto LABEL_643;
                              }
                              v422 = *(llvm **)(v17 - 32);
                            }
LABEL_670:
                            if (!v422)
                              goto LABEL_603;
                            v719 = v422;
                            v421 = v422;
                            if (v18 != *(_QWORD *)v420)
                              goto LABEL_603;
LABEL_672:
                            v437 = *(_QWORD *)(a1 + 24);
                            v723[0] = "reass.add";
                            LOWORD(v725) = 259;
                            v438 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v18, 1, 0);
                            v439 = v437;
                            v440 = v18;
LABEL_677:
                            v442 = sub_1C506E874(v439, v440, (uint64_t)v438, (uint64_t)v723, 0, 0);
                            v738 = 257;
                            v443 = (char *)operator new(0x80uLL);
                            *(_QWORD *)v443 = 0;
                            *((_QWORD *)v443 + 2) = 0;
                            *((_QWORD *)v443 + 1) = 0;
                            *((_QWORD *)v443 + 5) = 0;
                            *((_QWORD *)v443 + 6) = 0;
                            *((_QWORD *)v443 + 4) = 0;
                            v444 = (uint64_t *)(v443 + 32);
                            *((_QWORD *)v443 + 8) = *(_QWORD *)v421;
                            Not = (uint64_t ***)(v443 + 64);
                            *((_QWORD *)v443 + 3) = v443 + 64;
                            *((_QWORD *)v443 + 7) = v443 + 64;
                            *((_QWORD *)v443 + 9) = 0;
                            v443[80] = 41;
                            v443[81] = 0;
                            *((_WORD *)v443 + 41) = 0;
                            *((_DWORD *)v443 + 21) = 2;
                            *((_DWORD *)v443 + 30) = 0;
                            *(_OWORD *)(v443 + 104) = 0u;
                            *(_OWORD *)(v443 + 88) = 0u;
                            *(_QWORD *)v443 = v421;
                            v447 = *((_QWORD *)v421 + 1);
                            v446 = (_QWORD *)((char *)v421 + 8);
                            v445 = v447;
                            *((_QWORD *)v443 + 1) = v447;
                            if (v447)
                              *(_QWORD *)(v445 + 16) = v443 + 8;
                            *((_QWORD *)v443 + 2) = v446;
                            *v446 = v443;
                            if (*((_QWORD *)v443 + 4))
                            {
                              **((_QWORD **)v443 + 6) = *((_QWORD *)v443 + 5);
                              v701 = *((_QWORD *)v443 + 5);
                              if (v701)
                                *(_QWORD *)(v701 + 16) = *((_QWORD *)v443 + 6);
                            }
                            *v444 = v442;
                            if (v442)
                            {
                              v450 = *(_QWORD *)(v442 + 8);
                              v449 = (uint64_t **)(v442 + 8);
                              v448 = v450;
                              *((_QWORD *)v443 + 5) = v450;
                              if (v450)
                                *(_QWORD *)(v448 + 16) = v443 + 40;
                              *((_QWORD *)v443 + 6) = v449;
                              *v449 = v444;
                            }
LABEL_684:
                            v261 = (void **)&p_s2;
                            goto LABEL_355;
                          }
                        }
                        else
                        {
                          if (v398 != 41)
                            goto LABEL_601;
                          v399 = sub_1C4D9EC28((_QWORD **)&p_s2, 30, *(_QWORD *)(v397 - 64));
                          v400 = *(_QWORD *)(v397 - 32);
                          if (!v399 || !v400)
                          {
                            if (!sub_1C4D9EC28((_QWORD **)&p_s2, 30, v400))
                              goto LABEL_601;
                            v400 = *(_QWORD *)(v397 - 64);
                            if (!v400)
                              goto LABEL_601;
                          }
                        }
                        *v736 = (const llvm::Value *)v400;
                        if (!sub_1C4D89CC8((uint64_t)&v737, *(a2 - 4)))
                          goto LABEL_601;
LABEL_594:
                        Add = v718;
                        v248 = v719;
                        LOWORD(v725) = 257;
                        v249 = (char *)operator new(0x80uLL);
                        *((_QWORD *)v249 + 5) = 0;
                        v250 = v249 + 40;
                        *((_QWORD *)v249 + 6) = 0;
                        *((_QWORD *)v249 + 8) = *v248;
                        Not = (uint64_t ***)(v249 + 64);
                        *((_QWORD *)v249 + 3) = v249 + 64;
                        *((_QWORD *)v249 + 7) = v249 + 64;
                        *((_QWORD *)v249 + 9) = 0;
                        v251 = 43;
                        goto LABEL_595;
                      }
                      if ((sub_1C4D9EC28((_QWORD **)&v724, 30, *v5) & 1) != 0)
                        goto LABEL_594;
                      goto LABEL_581;
                    }
                    v378 = (llvm::ConstantInt ***)v731;
                    v550 = (const void **)v722;
                    v551 = *(unsigned int *)(v722 + 8);
                    v721 = v551;
                    if (v551 > 0x40)
                    {
                      v609 = ((unint64_t)(v551 + 63) >> 3) & 0x3FFFFFF8;
                      v720 = (llvm::APInt *)operator new[]();
                      memcpy(v720, *v550, v609);
                      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v720);
                      LODWORD(v551) = v721;
                      v553 = v720;
                    }
                    else
                    {
                      if ((_DWORD)v551)
                        v552 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v551;
                      else
                        v552 = 0;
                      v553 = (llvm::APInt *)(v552 & ~*(_QWORD *)v722);
                      v720 = v553;
                    }
                    v742 = v551;
                    v741 = (unint64_t)v553;
                    v721 = 0;
                    goto LABEL_1129;
                  }
                }
                else
                {
                  if (v292 != 41)
                    goto LABEL_539;
                  if (!*(_QWORD *)(v285 - 64))
                    goto LABEL_539;
                  v733 = *(llvm::APInt **)(v285 - 64);
                  if (!sub_1C4D89CC8((uint64_t)&v723[1], *(llvm::Constant **)(v285 - 32)))
                    goto LABEL_539;
                }
                v723[0] = &v732;
                v723[1] = &v729;
                *(_QWORD *)&v724 = 0;
                v294 = *((unsigned __int8 *)v291 + 16);
                if (v294 == 5)
                {
                  if (*((_WORD *)v291 + 9) != 30
                    || (v314 = (llvm::APInt **)((char *)v291 - 32 * (*((_DWORD *)v291 + 5) & 0x7FFFFFF)), !*v314)
                    || (v732 = *v314, (sub_1C4D8A004((uint64_t)&v723[1], v314[4]) & 1) == 0))
                  {
LABEL_440:
                    v723[0] = &v732;
                    v723[1] = &v729;
                    *(_QWORD *)&v724 = 0;
                    v316 = *((unsigned __int8 *)v733 + 16);
                    if (v316 == 5)
                    {
                      if (*((_WORD *)v733 + 9) != 30)
                        goto LABEL_539;
                      v317 = (llvm::APInt **)((char *)v733 - 32 * (*((_DWORD *)v733 + 5) & 0x7FFFFFF));
                      if (!*v317)
                        goto LABEL_539;
                      v732 = *v317;
                      if ((sub_1C4D8A004((uint64_t)&v723[1], v317[4]) & 1) == 0)
                        goto LABEL_539;
                    }
                    else
                    {
                      if (v316 != 58)
                        goto LABEL_539;
                      if (!*((_QWORD *)v733 - 8))
                        goto LABEL_539;
                      v732 = (llvm::APInt *)*((_QWORD *)v733 - 8);
                      if (!sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v733 - 4)))
                        goto LABEL_539;
                    }
                    v723[0] = &v731;
                    v723[1] = &v722;
                    *(_QWORD *)&v724 = 0;
                    v318 = *((unsigned __int8 *)v732 + 16);
                    if (v318 == 5)
                    {
                      if (*((_WORD *)v732 + 9) != 29)
                        goto LABEL_524;
                      v340 = (llvm::Constant **)((char *)v732 - 32 * (*((_DWORD *)v732 + 5) & 0x7FFFFFF));
                      if (!*v340)
                        goto LABEL_524;
                      v731 = *v340;
                      if (!sub_1C4D8A004((uint64_t)&v723[1], v340[4]))
                        goto LABEL_524;
                    }
                    else
                    {
                      if (v318 != 57)
                        goto LABEL_524;
                      if (!*((_QWORD *)v732 - 8))
                        goto LABEL_524;
                      v731 = (llvm::Constant *)*((_QWORD *)v732 - 8);
                      if ((sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v732 - 4)) & 1) == 0)
                        goto LABEL_524;
                    }
                    v714 = (llvm::Type *)v722;
                    v341 = (const void **)v729;
                    v342 = *((unsigned int *)v729 + 2);
                    LODWORD(v735) = v342;
                    if (v342 > 0x40)
                    {
                      p_s2 = operator new[]();
                      memcpy((void *)p_s2, *v341, ((unint64_t)(v342 + 63) >> 3) & 0x3FFFFFF8);
                      llvm::APInt::flipAllBitsSlowCase((uint64_t)&p_s2);
                      LODWORD(v342) = (_DWORD)v735;
                      v345 = (const void *)p_s2;
                    }
                    else
                    {
                      v343 = ~*(_QWORD *)v729;
                      if ((_DWORD)v342)
                        v344 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v342;
                      else
                        v344 = 0;
                      v345 = (const void *)(v344 & v343);
                      p_s2 = v344 & v343;
                    }
                    LODWORD(v735) = 0;
                    v365 = *((unsigned int *)v714 + 2);
                    if (v365 > 0x40)
                      v366 = memcmp(*(const void **)v714, v345, ((unint64_t)(v365 + 63) >> 3) & 0x3FFFFFF8) == 0;
                    else
                      v366 = *(_QWORD *)v714 == (_QWORD)v345;
                    v367 = v366;
                    if (v342 >= 0x41 && v345)
                      MEMORY[0x1CAA32F9C](v345, 0x1000C8000313F17);
                    if (v367)
                    {
                      v368 = v731;
                      LOWORD(v725) = 257;
                      v369 = llvm::ConstantInt::get(*(llvm::ConstantInt ***)v731, v729, v319);
                      v370 = sub_1C4D89BCC(v284, v368, (uint64_t)v369, (uint64_t)v723);
                      v723[0] = "sub";
                      LOWORD(v725) = 259;
                      v371 = v284;
                      v372 = (uint64_t)v291;
                      goto LABEL_1133;
                    }
LABEL_524:
                    v723[0] = &v731;
                    v723[1] = &v722;
                    *(_QWORD *)&v724 = 0;
                    v373 = *((unsigned __int8 *)v732 + 16);
                    if (v373 == 5)
                    {
                      if (*((_WORD *)v732 + 9) != 28)
                        goto LABEL_539;
                      v375 = (llvm::Constant **)((char *)v732 - 32 * (*((_DWORD *)v732 + 5) & 0x7FFFFFF));
                      if (!*v375)
                        goto LABEL_539;
                      v731 = *v375;
                      if (!sub_1C4D8A004((uint64_t)&v723[1], v375[4]))
                        goto LABEL_539;
                    }
                    else
                    {
                      if (v373 != 56)
                        goto LABEL_539;
                      if (!*((_QWORD *)v732 - 8))
                        goto LABEL_539;
                      v731 = (llvm::Constant *)*((_QWORD *)v732 - 8);
                      if ((sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v732 - 4)) & 1) == 0)
                        goto LABEL_539;
                    }
                    v376 = v729;
                    v377 = *((unsigned int *)v729 + 2);
                    if (v377 > 0x40)
                    {
                      if (memcmp(*(const void **)v729, *(const void **)v722, ((unint64_t)(v377 + 63) >> 3) & 0x3FFFFFF8))
                      {
                        goto LABEL_539;
                      }
                    }
                    else if (*(_QWORD *)v729 != *(_QWORD *)v722)
                    {
                      goto LABEL_539;
                    }
                    v378 = (llvm::ConstantInt ***)v731;
                    v379 = *((unsigned int *)v376 + 2);
                    v740 = v379;
                    if (v379 > 0x40)
                    {
                      v640 = ((unint64_t)(v379 + 63) >> 3) & 0x3FFFFFF8;
                      v739 = (llvm::ConstantInt **)operator new[]();
                      memcpy(v739, *(const void **)v376, v640);
                      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v739);
                      LODWORD(v379) = v740;
                      v381 = (uint64_t *)v739;
                    }
                    else
                    {
                      if ((_DWORD)v379)
                        v380 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v379;
                      else
                        v380 = 0;
                      v381 = (uint64_t *)(v380 & ~*(_QWORD *)v376);
                      v739 = (llvm::ConstantInt **)v381;
                    }
                    v742 = v379;
                    v741 = (unint64_t)v381;
                    v740 = 0;
LABEL_1129:
                    LOWORD(v725) = 257;
                    v641 = llvm::ConstantInt::get(*v378, (llvm::Type *)&v741, v374);
                    v642 = sub_1C4773594(v284, v378, (uint64_t)v641, (uint64_t)v723);
                    if (v742 >= 0x41 && v741)
                      MEMORY[0x1CAA32F9C](v741, 0x1000C8000313F17);
                    v723[0] = "sub";
                    LOWORD(v725) = 259;
                    v371 = v284;
                    v372 = (uint64_t)v291;
                    v370 = v642;
LABEL_1133:
                    v11 = (llvm::Value *)sub_1C47733F8(v371, v372, v370, (uint64_t)v723, 0, 0);
                    if (v11)
                      goto LABEL_3;
                    goto LABEL_563;
                  }
                }
                else
                {
                  if (v294 != 58)
                    goto LABEL_440;
                  if (!*((_QWORD *)v291 - 8))
                    goto LABEL_440;
                  v732 = (llvm::APInt *)*((_QWORD *)v291 - 8);
                  if (!sub_1C4D89F84((uint64_t)&v723[1], *((unsigned __int8 **)v291 - 4)))
                    goto LABEL_440;
                }
                v315 = v733;
                v733 = v291;
                v291 = v315;
                goto LABEL_440;
              }
              v291 = (llvm::APInt *)v285;
              v285 = v286;
              goto LABEL_403;
            }
            *(_QWORD *)v723[1] = v277;
            v278 = v718;
            LOWORD(v725) = 257;
            v279 = (char *)operator new(0x80uLL);
            *(_QWORD *)v279 = 0;
            *((_QWORD *)v279 + 2) = 0;
            *((_QWORD *)v279 + 1) = 0;
            *((_QWORD *)v279 + 5) = 0;
            *((_QWORD *)v279 + 6) = 0;
            *((_QWORD *)v279 + 4) = 0;
            v280 = (const llvm::Value **)(v279 + 32);
            *((_QWORD *)v279 + 8) = *(_QWORD *)v17;
            Not = (uint64_t ***)(v279 + 64);
            *((_QWORD *)v279 + 3) = v279 + 64;
            *((_QWORD *)v279 + 7) = v279 + 64;
            *((_QWORD *)v279 + 9) = 0;
            v279[80] = 43;
            v279[81] = 0;
            *((_WORD *)v279 + 41) = 0;
            *((_DWORD *)v279 + 21) = 2;
            *((_DWORD *)v279 + 30) = 0;
            *(_OWORD *)(v279 + 104) = 0u;
            *(_OWORD *)(v279 + 88) = 0u;
            *(_QWORD *)v279 = v17;
            v283 = *(_QWORD *)(v17 + 8);
            v282 = (_QWORD *)(v17 + 8);
            v281 = v283;
            *((_QWORD *)v279 + 1) = v283;
            if (v283)
              *(_QWORD *)(v281 + 16) = v279 + 8;
            *((_QWORD *)v279 + 2) = v282;
            *v282 = v279;
LABEL_431:
            if (*((_QWORD *)v279 + 4))
            {
              **((_QWORD **)v279 + 6) = *((_QWORD *)v279 + 5);
              v699 = *((_QWORD *)v279 + 5);
              if (v699)
                *(_QWORD *)(v699 + 16) = *((_QWORD *)v279 + 6);
            }
            *v280 = v278;
            if (v278)
            {
              v313 = *((_QWORD *)v278 + 1);
              v312 = (const llvm::Value ***)((char *)v278 + 8);
              v311 = v313;
              *((_QWORD *)v279 + 5) = v313;
              if (v313)
                *(_QWORD *)(v311 + 16) = v279 + 40;
              *((_QWORD *)v279 + 6) = v312;
              *v312 = v280;
            }
            goto LABEL_354;
          }
          *(_QWORD *)v723[1] = v263;
          v723[1] = &v718;
          v274 = *(unsigned __int8 *)(v18 + 16);
          if (v274 == 5)
          {
            if (*(_WORD *)(v18 + 18) != 15)
              goto LABEL_428;
            if (!sub_1C4E71060((uint64_t)v723, *(llvm::Constant **)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF))))goto LABEL_428;
            v275 = *(_QWORD *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32);
            if (!v275)
              goto LABEL_428;
          }
          else if (v274 != 43
                 || !sub_1C4D8AC3C((uint64_t)v723, *(llvm::Constant **)(v18 - 64))
                 || (v275 = *(_QWORD *)(v18 - 32)) == 0)
          {
LABEL_428:
            v278 = v719;
            LOWORD(v725) = 257;
            v279 = (char *)operator new(0x80uLL);
            *(_QWORD *)v279 = 0;
            *((_QWORD *)v279 + 2) = 0;
            *((_QWORD *)v279 + 1) = 0;
            *((_QWORD *)v279 + 5) = 0;
            *((_QWORD *)v279 + 6) = 0;
            *((_QWORD *)v279 + 4) = 0;
            v280 = (const llvm::Value **)(v279 + 32);
            *((_QWORD *)v279 + 8) = *(_QWORD *)v18;
            Not = (uint64_t ***)(v279 + 64);
            *((_QWORD *)v279 + 3) = v279 + 64;
            *((_QWORD *)v279 + 7) = v279 + 64;
            *((_QWORD *)v279 + 9) = 0;
            v279[80] = 43;
            v279[81] = 0;
            *((_WORD *)v279 + 41) = 0;
            *((_DWORD *)v279 + 21) = 2;
            *((_DWORD *)v279 + 30) = 0;
            *(_OWORD *)(v279 + 104) = 0u;
            *(_OWORD *)(v279 + 88) = 0u;
            *(_QWORD *)v279 = v18;
            v310 = *(_QWORD *)(v18 + 8);
            v309 = (_QWORD *)(v18 + 8);
            v308 = v310;
            *((_QWORD *)v279 + 1) = v310;
            if (v310)
              *(_QWORD *)(v308 + 16) = v279 + 8;
            *((_QWORD *)v279 + 2) = v309;
            *v309 = v279;
            goto LABEL_431;
          }
          *(_QWORD *)v723[1] = v275;
          v295 = *(_QWORD *)(a1 + 24);
          v296 = v718;
          v297 = v719;
          v738 = 257;
          v298 = (uint64_t *)(*(uint64_t (**)(_QWORD, llvm *, const llvm::Value *, _QWORD, _QWORD))(**(_QWORD **)(v295 + 72) + 16))(*(_QWORD *)(v295 + 72), v719, v718, 0, 0);
          if (!v298)
          {
            LOWORD(v725) = 257;
            v299 = (char *)operator new(0x80uLL);
            *((_QWORD *)v299 + 5) = 0;
            v300 = v299 + 40;
            *((_QWORD *)v299 + 6) = 0;
            *((_QWORD *)v299 + 8) = *(_QWORD *)v297;
            v301 = (uint64_t)(v299 + 64);
            *((_QWORD *)v299 + 3) = v299 + 64;
            *((_QWORD *)v299 + 7) = v299 + 64;
            *((_QWORD *)v299 + 9) = 0;
            v299[80] = 41;
            v299[81] = 0;
            *((_WORD *)v299 + 41) = 0;
            *((_DWORD *)v299 + 21) = 2;
            *(_OWORD *)(v299 + 88) = 0u;
            *(_OWORD *)(v299 + 104) = 0u;
            *((_DWORD *)v299 + 30) = 0;
            *(_QWORD *)v299 = v297;
            v304 = *((_QWORD *)v297 + 1);
            v303 = (_QWORD *)((char *)v297 + 8);
            v302 = v304;
            *((_QWORD *)v299 + 1) = v304;
            if (v304)
              *(_QWORD *)(v302 + 16) = v299 + 8;
            *((_QWORD *)v299 + 2) = v303;
            *v303 = v299;
            *((_QWORD *)v299 + 4) = v296;
            if (v296)
            {
              v307 = *((_QWORD *)v296 + 1);
              v306 = (_QWORD *)((char *)v296 + 8);
              v305 = v307;
              *v300 = v307;
              if (v307)
                *(_QWORD *)(v305 + 16) = v300;
              *((_QWORD *)v299 + 6) = v306;
              *v306 = v299 + 32;
            }
            llvm::Value::setName((uint64_t ***)v299 + 8, (uint64_t)v723);
            v298 = (uint64_t *)sub_1C4773754((uint64_t *)v295, v301, (uint64_t)&p_s2);
          }
          LOWORD(v725) = 257;
          return llvm::BinaryOperator::CreateNeg(v298, (llvm::Type *)v723, 0);
        }
        if (!*(_QWORD *)(v223 + 8))
        {
          v224 = *(unsigned __int8 *)(v17 + 16);
          if (v224 > 0x1B || v224 == 5)
          {
            v225 = v224 <= 0x1B ? *(unsigned __int16 *)(v17 + 18) : v224 - 28;
            if (v225 == 40)
            {
              v226 = *(_DWORD *)(v17 + 20);
              if ((v226 & 0x40000000) != 0)
                v227 = *(uint64_t **)(v17 - 8);
              else
                v227 = (uint64_t *)(v17 - 32 * (v226 & 0x7FFFFFF));
              v228 = *v227;
              v229 = *(unsigned __int8 *)(v228 + 16);
              if (v229 < 0x1C)
              {
                if (v229 != 5)
                  goto LABEL_329;
                v234 = *(unsigned __int16 *)(v228 + 18);
                HIDWORD(v236) = v234 - 13;
                LODWORD(v236) = v234 - 13;
                v235 = v236 >> 1;
                v220 = v235 > 6;
                v237 = (1 << v235) & 0x47;
                if (v220 || v237 == 0)
                  goto LABEL_329;
              }
              else
              {
                HIDWORD(v231) = v229 - 41;
                LODWORD(v231) = v229 - 41;
                v230 = v231 >> 1;
                v220 = v230 > 6;
                v232 = (1 << v230) & 0x47;
                if (v220 || v232 == 0)
                  goto LABEL_329;
                v234 = v229 - 28;
              }
              if (v234 != 13 || (*(_BYTE *)(v228 + 17) & 4) == 0)
                goto LABEL_329;
              v320 = *(_DWORD *)(v228 + 20);
              if ((v320 & 0x40000000) != 0)
              {
                if (**(_QWORD **)(v228 - 8))
                {
                  v739 = **(llvm::ConstantInt ****)(v228 - 8);
                  v321 = *(_QWORD *)(v228 - 8);
                  goto LABEL_463;
                }
              }
              else
              {
                v321 = v228 - 32 * (v320 & 0x7FFFFFF);
                if (*(_QWORD *)v321)
                {
                  v739 = *(llvm::ConstantInt ***)v321;
LABEL_463:
                  v324 = *(_QWORD *)(v321 + 32);
                  if (v324 && *(unsigned __int8 *)(v324 + 16) <= 0x14u)
                  {
                    p_s2 = *(_QWORD *)(v321 + 32);
                    v325 = sub_1C537D3B8((llvm *)0x28, v324, (llvm::Constant *)v203, 0);
                    Add = llvm::ConstantExpr::getAdd(v325, (llvm::Constant *)v18, 0, 0);
                    v245 = (unsigned __int8 *)v739;
                    LOWORD(v725) = 257;
                    v246 = (uint64_t *)v204;
                    v247 = 40;
                    goto LABEL_341;
                  }
                }
              }
            }
          }
        }
LABEL_329:
        v723[0] = &v739;
        v723[1] = &p_s2;
        if (!*(_QWORD *)(v223 + 8))
        {
          v239 = *(unsigned __int8 *)(v17 + 16);
          if (v239 > 0x1B || v239 == 5)
          {
            v240 = v239 > 0x1B ? v239 - 28 : *(unsigned __int16 *)(v17 + 18);
            if (v240 == 39)
            {
              v241 = *(_DWORD *)(v17 + 20);
              v242 = (v241 & 0x40000000) != 0 ? *(uint64_t **)(v17 - 8) : (uint64_t *)(v17 - 32 * (v241 & 0x7FFFFFF));
              if (sub_1C579ECE4((_QWORD **)v723, *v242))
              {
                v243 = sub_1C537D3B8((llvm *)0x27, p_s2, (llvm::Constant *)v203, 0);
                Add = llvm::ConstantExpr::getAdd(v243, (llvm::Constant *)v18, 0, 0);
                v245 = (unsigned __int8 *)v739;
                LOWORD(v725) = 257;
                v246 = (uint64_t *)v204;
                v247 = 39;
LABEL_341:
                v248 = sub_1C4773E38(v246, v247, v245, v203, (uint64_t)v723);
LABEL_342:
                LOWORD(v725) = 257;
                v249 = (char *)operator new(0x80uLL);
                *((_QWORD *)v249 + 5) = 0;
                v250 = v249 + 40;
                *((_QWORD *)v249 + 6) = 0;
                *((_QWORD *)v249 + 8) = *v248;
                Not = (uint64_t ***)(v249 + 64);
                *((_QWORD *)v249 + 3) = v249 + 64;
                *((_QWORD *)v249 + 7) = v249 + 64;
                *((_QWORD *)v249 + 9) = 0;
                v251 = 41;
LABEL_595:
                v249[80] = v251;
                v249[81] = 0;
                *((_WORD *)v249 + 41) = 0;
                *((_DWORD *)v249 + 21) = 2;
                *(_OWORD *)(v249 + 88) = 0u;
                *(_OWORD *)(v249 + 104) = 0u;
                *((_DWORD *)v249 + 30) = 0;
                *(_QWORD *)v249 = v248;
                v404 = v248[1];
                v403 = v248 + 1;
                v402 = v404;
                *((_QWORD *)v249 + 1) = v404;
                if (v404)
                  *(_QWORD *)(v402 + 16) = v249 + 8;
                *((_QWORD *)v249 + 2) = v403;
                *v403 = v249;
                *((_QWORD *)v249 + 4) = Add;
                if (Add)
                {
                  v407 = *((_QWORD *)Add + 1);
                  v406 = (_QWORD *)((char *)Add + 8);
                  v405 = v407;
                  *v250 = v407;
                  if (v407)
                    *(_QWORD *)(v405 + 16) = v250;
                  *((_QWORD *)v249 + 6) = v406;
                  *v406 = v249 + 32;
                }
LABEL_354:
                v261 = v723;
LABEL_355:
                llvm::Value::setName(Not, (uint64_t)v261);
                return (llvm::Value *)Not;
              }
            }
          }
        }
        goto LABEL_343;
      }
      v14 = sub_1C5781CD4(a1, a2);
      if (v14)
        return (llvm::Value *)v14;
      v720 = 0;
      v20 = *(unsigned __int8 *)(v17 + 16);
      if (v20 == 43)
      {
        v21 = *(unsigned __int8 **)(v17 - 64);
        if (!v21)
          goto LABEL_27;
        if (v21[16] > 0x14u)
          goto LABEL_27;
        v22 = *(llvm::APInt **)(v17 - 32);
        if (!v22)
          goto LABEL_27;
      }
      else if (v20 != 5
             || *(_WORD *)(v17 + 18) != 15
             || (v23 = v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF), (v21 = *(unsigned __int8 **)v23) == 0)
             || (v22 = *(llvm::APInt **)(v23 + 32)) == 0)
      {
LABEL_27:
        v26 = v17 + 8;
        v25 = *(_QWORD *)(v17 + 8);
        if (!v25 || *(_QWORD *)(v25 + 8))
          goto LABEL_29;
        if (v20 == 43)
        {
          if (!*(_QWORD *)(v17 - 64))
            goto LABEL_29;
          v720 = *(llvm::APInt **)(v17 - 64);
          v49 = *(_QWORD *)(v17 - 32);
          if (!v49)
            goto LABEL_29;
        }
        else
        {
          if (v20 != 5)
            goto LABEL_29;
          if (*(_WORD *)(v17 + 18) != 15)
            goto LABEL_29;
          v61 = v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF);
          if (!*(_QWORD *)v61)
            goto LABEL_29;
          v720 = *(llvm::APInt **)v61;
          v49 = *(_QWORD *)(v61 + 32);
          if (!v49)
            goto LABEL_29;
        }
        if (sub_1C4D9ED34((uint64_t)v723, (llvm::Constant *)v18))
        {
          v50 = *(_QWORD *)(a1 + 24);
          LOWORD(v725) = 257;
          v51 = (_QWORD *)sub_1C506EAA0(v50, v49, (uint64_t)v723);
          v52 = v720;
          v738 = 257;
          v53 = (char *)operator new(0x80uLL);
          *((_QWORD *)v53 + 5) = 0;
          v54 = v53 + 40;
          *((_QWORD *)v53 + 6) = 0;
          *((_QWORD *)v53 + 8) = *v51;
          Not = (uint64_t ***)(v53 + 64);
          *((_QWORD *)v53 + 3) = v53 + 64;
          *((_QWORD *)v53 + 7) = v53 + 64;
          *((_QWORD *)v53 + 9) = 0;
          v53[80] = 41;
          v53[81] = 0;
          *((_WORD *)v53 + 41) = 0;
          *((_DWORD *)v53 + 21) = 2;
          *(_OWORD *)(v53 + 88) = 0u;
          *(_OWORD *)(v53 + 104) = 0u;
          *((_DWORD *)v53 + 30) = 0;
          *(_QWORD *)v53 = v51;
          v57 = v51[1];
          v56 = v51 + 1;
          v55 = v57;
          *((_QWORD *)v53 + 1) = v57;
          if (v57)
            *(_QWORD *)(v55 + 16) = v53 + 8;
          *((_QWORD *)v53 + 2) = v56;
          *v56 = v53;
          *((_QWORD *)v53 + 4) = v52;
          if (v52)
          {
            v60 = *((_QWORD *)v52 + 1);
            v59 = (_QWORD *)((char *)v52 + 8);
            v58 = v60;
            *v54 = v60;
            if (v60)
              *(_QWORD *)(v58 + 16) = v54;
            *((_QWORD *)v53 + 6) = v59;
            *v59 = v53 + 32;
          }
          goto LABEL_684;
        }
LABEL_29:
        v723[0] = &v720;
        if (sub_1C4B0378C((_QWORD **)v723, v17))
        {
          v27 = v720;
          v28 = *(llvm::Type **)v720;
          if ((*(_DWORD *)(*(_QWORD *)v720 + 8) & 0xFE) == 0x12)
            v28 = (llvm::Type *)**((_QWORD **)v28 + 2);
          if (llvm::Type::getPrimitiveSizeInBits(v28) == 1)
          {
            v29 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v18, 1, 0);
            Sub = (uint64_t *)llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v18, (llvm::Constant *)v29, 0, 0);
LABEL_39:
            LOWORD(v725) = 257;
            v33 = sub_1C4FC8748((uint64_t)v27, Sub, v18, (uint64_t)v723, 0, 0);
            goto LABEL_40;
          }
        }
        v723[0] = &v720;
        if (sub_1C4B037F8((_QWORD **)v723, v17))
        {
          v27 = v720;
          v31 = *(llvm::Type **)v720;
          if ((*(_DWORD *)(*(_QWORD *)v720 + 8) & 0xFE) == 0x12)
            v31 = (llvm::Type *)**((_QWORD **)v31 + 2);
          if (llvm::Type::getPrimitiveSizeInBits(v31) == 1)
          {
            v32 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v18, 1, 0);
            Sub = (uint64_t *)llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v18, (llvm::Constant *)v32, 0, 0);
            goto LABEL_39;
          }
        }
        v723[0] = &v720;
        if (sub_1C4D9EC28((_QWORD **)v723, 30, v17))
        {
          v34 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v18, 1, 0);
          v24 = llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v18, (llvm::Constant *)v34, 0, 0);
          goto LABEL_44;
        }
        v733 = 0;
        v723[0] = &v733;
        v723[1] = 0;
        Not = 0;
        if (!sub_1C4D89F84((uint64_t)v723, (unsigned __int8 *)v18))
          goto LABEL_271;
        v45 = *(unsigned __int8 *)(v17 + 16);
        if (v45 == 5)
        {
          v62 = *(unsigned __int16 *)(v17 + 18);
          if (v62 != 29
            || (v63 = v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF), (v46 = *(llvm **)v63) == 0)
            || (v720 = *(llvm::APInt **)v63, (v47 = *(llvm::ConstantExpr **)(v63 + 32)) == 0)
            || *((_BYTE *)v47 + 16) == 5)
          {
            v732 = 0;
            v723[1] = &v732;
            *(_QWORD *)&v724 = 0;
            goto LABEL_91;
          }
        }
        else
        {
          if (v45 != 57)
          {
LABEL_88:
            v732 = 0;
            v723[1] = &v732;
            *(_QWORD *)&v724 = 0;
            if (v45 == 57)
            {
LABEL_94:
              if ((sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v17 - 32)) & 1) == 0)
                goto LABEL_119;
              goto LABEL_95;
            }
            if (v45 != 5)
              goto LABEL_119;
            v62 = *(unsigned __int16 *)(v17 + 18);
LABEL_91:
            if (v62 != 29
              || !sub_1C4D8A004((uint64_t)&v723[1], *(llvm::Constant **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF) + 32)))
            {
              goto LABEL_119;
            }
LABEL_95:
            v75 = v732;
            v76 = v733;
            v77 = *((_DWORD *)v733 + 2);
            v742 = v77;
            if (v77 > 0x40)
            {
              v78 = operator new[]();
              v741 = v78;
              v80 = *(const void **)v76;
              v79 = v742;
              memcpy((void *)v78, v80, (((unint64_t)v742 + 63) >> 3) & 0x3FFFFFF8);
              if (v79 > 0x40)
              {
                llvm::APInt::flipAllBitsSlowCase((uint64_t)&v741);
                goto LABEL_101;
              }
            }
            else
            {
              v78 = *(_QWORD *)v733;
              v79 = v77;
            }
            if (v79)
              v81 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v79;
            else
              v81 = 0;
            v741 = v81 & ~v78;
LABEL_101:
            llvm::APInt::operator++((uint64_t)&v741);
            v83 = v742;
            v84 = v741;
            v742 = 0;
            v85 = *((unsigned int *)v75 + 2);
            if (v85 > 0x40)
              v86 = memcmp(*(const void **)v75, (const void *)v741, ((unint64_t)(v85 + 63) >> 3) & 0x3FFFFFF8) == 0;
            else
              v86 = *(_QWORD *)v75 == v741;
            v87 = v86;
            if (v83 >= 0x41)
            {
              if (v84)
              {
                MEMORY[0x1CAA32F9C](v84, 0x1000C8000313F17);
                if (v742 >= 0x41)
                {
                  if (v741)
                    MEMORY[0x1CAA32F9C](v741, 0x1000C8000313F17);
                }
              }
            }
            if (v87)
            {
              v88 = llvm::ConstantInt::get((llvm::ConstantInt **)*a2, v732, v82);
              LOWORD(v725) = 257;
              v89 = (char *)operator new(0x80uLL);
              *((_QWORD *)v89 + 6) = 0;
              *((_QWORD *)v89 + 5) = 0;
              v90 = (llvm::Value **)(v89 + 40);
              *((_QWORD *)v89 + 8) = *(_QWORD *)v17;
              Not = (uint64_t ***)(v89 + 64);
              *((_QWORD *)v89 + 3) = v89 + 64;
              *((_QWORD *)v89 + 7) = v89 + 64;
              *((_QWORD *)v89 + 9) = 0;
              v89[80] = 58;
              v89[81] = 0;
              *((_WORD *)v89 + 41) = 0;
              *((_DWORD *)v89 + 21) = 2;
              *(_OWORD *)(v89 + 88) = 0u;
              *(_OWORD *)(v89 + 104) = 0u;
              *((_DWORD *)v89 + 30) = 0;
              *(_QWORD *)v89 = v17;
              v91 = *(_QWORD *)(v17 + 8);
              *((_QWORD *)v89 + 1) = v91;
              if (v91)
                *(_QWORD *)(v91 + 16) = v89 + 8;
              *((_QWORD *)v89 + 2) = v26;
              *(_QWORD *)v26 = v89;
              *((_QWORD *)v89 + 4) = v88;
              if (v88)
              {
                v94 = v88[1];
                v93 = v88 + 1;
                v92 = v94;
                *v90 = v94;
                if (v94)
                  *((_QWORD *)v92 + 2) = v90;
                *((_QWORD *)v89 + 6) = v93;
                *v93 = v89 + 32;
              }
              goto LABEL_129;
            }
LABEL_119:
            v95 = *((_DWORD *)v733 + 2);
            if (v95 > 0x40)
            {
              if (((*(_QWORD *)(*(_QWORD *)v733 + 8 * ((v95 - 1) >> 6)) >> (v95 - 1)) & 1) != 0
                && llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v733) == v95 - 1)
              {
LABEL_121:
                if ((*((_BYTE *)a2 + 17) & 6) != 0)
                {
                  LOWORD(v725) = 257;
                  v96 = (char *)operator new(0x80uLL);
                  *((_QWORD *)v96 + 6) = 0;
                  *((_QWORD *)v96 + 8) = *(_QWORD *)v17;
                  Not = (uint64_t ***)(v96 + 64);
                  *((_QWORD *)v96 + 3) = v96 + 64;
                  v97 = v96 + 32;
                  *((_QWORD *)v96 + 7) = v96 + 64;
                  *((_QWORD *)v96 + 9) = 0;
                  v98 = 57;
                }
                else
                {
                  LOWORD(v725) = 257;
                  v96 = (char *)operator new(0x80uLL);
                  *((_QWORD *)v96 + 6) = 0;
                  *((_QWORD *)v96 + 8) = *(_QWORD *)v17;
                  Not = (uint64_t ***)(v96 + 64);
                  *((_QWORD *)v96 + 3) = v96 + 64;
                  v97 = v96 + 32;
                  *((_QWORD *)v96 + 7) = v96 + 64;
                  *((_QWORD *)v96 + 9) = 0;
                  v98 = 58;
                }
                v96[80] = v98;
                v96[81] = 0;
                *((_WORD *)v96 + 41) = 0;
                *((_DWORD *)v96 + 21) = 2;
                *(_OWORD *)(v96 + 88) = 0u;
                *(_OWORD *)(v96 + 104) = 0u;
                *((_DWORD *)v96 + 30) = 0;
                *(_QWORD *)v96 = v17;
                v99 = *(_QWORD *)(v17 + 8);
                *((_QWORD *)v96 + 1) = v99;
                if (v99)
                  *(_QWORD *)(v99 + 16) = v96 + 8;
                *((_QWORD *)v96 + 2) = v26;
                *(_QWORD *)v26 = v96;
                v100 = (_QWORD *)(v18 + 8);
                v101 = *(_QWORD *)(v18 + 8);
                *((_QWORD *)v96 + 5) = v101;
                *((_QWORD *)v96 + 4) = v18;
                if (v101)
                  *(_QWORD *)(v101 + 16) = v96 + 40;
                *((_QWORD *)v96 + 6) = v100;
                *v100 = v97;
                goto LABEL_129;
              }
            }
            else if (*(_QWORD *)v733 == 1 << (v95 - 1))
            {
              goto LABEL_121;
            }
            v713 = *a2;
            v723[0] = &v720;
            v723[1] = &v732;
            *(_QWORD *)&v724 = 0;
            v102 = *(unsigned __int8 *)(v17 + 16);
            if (v102 > 0x1B || v102 == 5)
            {
              v103 = v102 <= 0x1B ? *(unsigned __int16 *)(v17 + 18) : v102 - 28;
              if (v103 == 39)
              {
                v104 = *(_DWORD *)(v17 + 20);
                if ((v104 & 0x40000000) != 0)
                  v105 = *(uint64_t **)(v17 - 8);
                else
                  v105 = (uint64_t *)(v17 - 32 * (v104 & 0x7FFFFFF));
                v106 = *v105;
                v107 = *(unsigned __int8 *)(v106 + 16);
                if (v107 == 5)
                {
                  if (*(_WORD *)(v106 + 18) != 30)
                    goto LABEL_160;
                  v108 = (llvm::APInt **)(v106 - 32 * (*(_DWORD *)(v106 + 20) & 0x7FFFFFF));
                  if (!*v108)
                    goto LABEL_160;
                  v720 = *v108;
                  if (!sub_1C4D8A004((uint64_t)&v723[1], v108[4]))
                    goto LABEL_160;
                }
                else
                {
                  if (v107 != 58)
                    goto LABEL_160;
                  if (!*(_QWORD *)(v106 - 64))
                    goto LABEL_160;
                  v720 = *(llvm::APInt **)(v106 - 64);
                  if ((sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v106 - 32)) & 1) == 0)
                    goto LABEL_160;
                }
                v109 = v732;
                v110 = *((_DWORD *)v732 + 2);
                if (v110 > 0x40)
                {
                  if (((*(_QWORD *)(*(_QWORD *)v732 + 8 * ((v110 - 1) >> 6)) >> (v110 - 1)) & 1) == 0
                    || llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v732) != v110 - 1)
                  {
                    goto LABEL_160;
                  }
                }
                else if (*(_QWORD *)v732 != 1 << (v110 - 1))
                {
                  goto LABEL_160;
                }
                v111 = v713;
                if ((*((_DWORD *)v713 + 2) & 0xFE) == 0x12)
                  v111 = (llvm::Type *)**((_QWORD **)v713 + 2);
                PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v111);
                llvm::APInt::sext(v109, PrimitiveSizeInBits, (llvm::APInt *)&p_s2);
                if (v735 < 0x41)
                {
                  if (p_s2 != *(_QWORD *)v733)
                    goto LABEL_160;
LABEL_181:
                  LOWORD(v725) = 257;
                  llvm::CastInst::Create(40);
LABEL_40:
                  Not = (uint64_t ***)v33;
                  if (v33)
                    return (llvm::Value *)Not;
                  goto LABEL_272;
                }
                v113 = p_s2;
                v114 = memcmp((const void *)p_s2, *(const void **)v733, (((unint64_t)v735 + 63) >> 3) & 0x3FFFFFF8);
                if (v113)
                  MEMORY[0x1CAA32F9C](v113, 0x1000C8000313F17);
                if (!v114)
                  goto LABEL_181;
              }
            }
LABEL_160:
            v723[0] = &v720;
            v723[1] = &v732;
            *(_QWORD *)&v724 = 0;
            v115 = *(unsigned __int8 *)(v17 + 16);
            if (v115 == 5)
            {
              if (*(_WORD *)(v17 + 18) != 30)
                goto LABEL_262;
              v117 = (llvm::APInt **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
              if (!*v117)
                goto LABEL_262;
              v720 = *v117;
              if ((sub_1C4D8A004((uint64_t)&v723[1], v117[4]) & 1) == 0)
                goto LABEL_262;
            }
            else
            {
              if (v115 != 58)
                goto LABEL_262;
              if (!*(_QWORD *)(v17 - 64))
                goto LABEL_262;
              v720 = *(llvm::APInt **)(v17 - 64);
              if (!sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v17 - 32)))
                goto LABEL_262;
            }
            v118 = (const void **)v732;
            v119 = *((unsigned int *)v732 + 2);
            if (v119 > 0x40)
            {
              if (((*(_QWORD *)(*(_QWORD *)v732 + 8 * ((v119 - 1) >> 6)) >> (v119 - 1)) & 1) != 0
                && llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v732) == (_DWORD)v119 - 1)
              {
                v120 = v720;
                v121 = (void *)operator new[]();
                memcpy(v121, *v118, ((unint64_t)(v119 + 63) >> 3) & 0x3FFFFFF8);
                v706 = *(llvm::ConstantInt ***)v733;
                v707 = (unint64_t)(v119 + 63) >> 6;
                v708 = v121;
                do
                {
                  v709 = (uint64_t)*v706++;
                  *v708++ ^= v709;
                  --v707;
                }
                while (v707);
LABEL_171:
                LODWORD(v735) = v119;
                p_s2 = (uint64_t)v121;
                v122 = llvm::ConstantInt::get((llvm::ConstantInt **)v713, (llvm::Type *)&p_s2, v116);
                LOWORD(v725) = 257;
                v123 = (char *)operator new(0x80uLL);
                *((_QWORD *)v123 + 5) = 0;
                v124 = (llvm::Value **)(v123 + 40);
                *((_QWORD *)v123 + 6) = 0;
                *((_QWORD *)v123 + 8) = *(_QWORD *)v120;
                Not = (uint64_t ***)(v123 + 64);
                *((_QWORD *)v123 + 3) = v123 + 64;
                *((_QWORD *)v123 + 7) = v123 + 64;
                *((_QWORD *)v123 + 9) = 0;
                v123[80] = 41;
                v123[81] = 0;
                *((_WORD *)v123 + 41) = 0;
                *((_DWORD *)v123 + 21) = 2;
                *(_OWORD *)(v123 + 88) = 0u;
                *(_OWORD *)(v123 + 104) = 0u;
                *((_DWORD *)v123 + 30) = 0;
                *(_QWORD *)v123 = v120;
                v127 = *((_QWORD *)v120 + 1);
                v126 = (_QWORD *)((char *)v120 + 8);
                v125 = v127;
                *((_QWORD *)v123 + 1) = v127;
                if (v127)
                  *(_QWORD *)(v125 + 16) = v123 + 8;
                *((_QWORD *)v123 + 2) = v126;
                *v126 = v123;
                *((_QWORD *)v123 + 4) = v122;
                if (v122)
                {
                  v130 = v122[1];
                  v129 = v122 + 1;
                  v128 = v130;
                  *v124 = v130;
                  if (v130)
                    *((_QWORD *)v128 + 2) = v124;
                  *((_QWORD *)v123 + 6) = v129;
                  *v129 = v123 + 32;
                }
                llvm::Value::setName((uint64_t ***)v123 + 8, (uint64_t)v723);
                if (v735 >= 0x41 && p_s2)
                {
                  MEMORY[0x1CAA32F9C](p_s2, 0x1000C8000313F17);
                  if (Not)
                    return (llvm::Value *)Not;
                  goto LABEL_272;
                }
                goto LABEL_271;
              }
            }
            else if (*(_QWORD *)v732 == 1 << (v119 - 1))
            {
              v120 = v720;
              v121 = (void *)(*(_QWORD *)v733 ^ *(_QWORD *)v732);
              goto LABEL_171;
            }
            if (!sub_1C49AB31C((llvm::APInt *)v118))
            {
LABEL_217:
              if (!*(_QWORD *)v26 || *(_QWORD *)(*(_QWORD *)v26 + 8))
                goto LABEL_262;
              v164 = v732;
              v163 = v733;
              v165 = *((_DWORD *)v733 + 2);
              v728 = v165;
              if (v165 > 0x40)
              {
                v166 = operator new[]();
                __s2 = (void *)v166;
                v168 = *(const void **)v163;
                v167 = v728;
                memcpy((void *)v166, v168, (((unint64_t)v728 + 63) >> 3) & 0x3FFFFFF8);
                if (v167 > 0x40)
                {
                  llvm::APInt::flipAllBitsSlowCase((uint64_t)&__s2);
                  goto LABEL_225;
                }
              }
              else
              {
                v166 = *(_QWORD *)v733;
                v167 = v165;
              }
              v169 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v167;
              if (!v167)
                v169 = 0;
              __s2 = (void *)(v169 & ~v166);
LABEL_225:
              llvm::APInt::operator++((uint64_t)&__s2);
              v170 = v728;
              v171 = __s2;
              v728 = 0;
              v172 = *((unsigned int *)v164 + 2);
              if (v172 > 0x40)
                v173 = memcmp(*(const void **)v164, __s2, ((unint64_t)(v172 + 63) >> 3) & 0x3FFFFFF8) == 0;
              else
                v173 = *(_QWORD *)v164 == (_QWORD)__s2;
              v174 = v173;
              if (v170 >= 0x41)
              {
                if (v171)
                {
                  MEMORY[0x1CAA32F9C](v171, 0x1000C8000313F17);
                  if (v728 >= 0x41)
                  {
                    if (__s2)
                      MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
                  }
                }
              }
              if (!v174)
                goto LABEL_262;
              v175 = v713;
              if ((*((_DWORD *)v713 + 2) & 0xFE) == 0x12)
                v175 = (llvm::Type *)**((_QWORD **)v713 + 2);
              v176 = llvm::Type::getPrimitiveSizeInBits(v175);
              v177 = v733;
              v178 = *((unsigned int *)v733 + 2);
              if (v178 > 0x40)
              {
                v181 = 0;
                v182 = (unint64_t)(v178 + 63) >> 6;
                v183 = *(int8x8_t **)v733;
                do
                {
                  v184 = *v183++;
                  v185 = (uint8x8_t)vcnt_s8(v184);
                  v185.i16[0] = vaddlv_u8(v185);
                  v181 += v185.i32[0];
                  --v182;
                }
                while (v182);
                if (v181 == 1)
                  goto LABEL_251;
              }
              else
              {
                v179 = *(llvm::ConstantInt ***)v733;
                v180 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v733);
                v180.i16[0] = vaddlv_u8(v180);
                if (v180.u32[0] == 1)
                {
LABEL_247:
                  v187 = v178 + __clz((unint64_t)v179) - 64;
LABEL_252:
                  v193 = v187 - v178;
                  v194 = v187 - (_DWORD)v178 + v176;
                  if (v193 + v176)
                  {
                    v195 = v720;
                    LODWORD(v723[1]) = v176;
                    if (v176 > 0x40)
                    {
                      llvm::APInt::initSlowCase((llvm::APInt *)v723, 0, 0);
                      v176 = v723[1];
                    }
                    else
                    {
                      v723[0] = 0;
                    }
                    sub_1C4912E54(v723, v176 - v194, v176);
                    IsZero = llvm::MaskedValueIsZero(v195, (const llvm::Value *)v723, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v710);
                    if (LODWORD(v723[1]) >= 0x41 && v723[0])
                      MEMORY[0x1CAA32F9C](v723[0], 0x1000C8000313F17);
                    if (IsZero)
                    {
                      v65 = llvm::ConstantInt::get(v713, v194, 0);
                      v197 = *(_QWORD *)(a1 + 24);
                      v723[0] = "sext";
                      LOWORD(v725) = 259;
                      v198 = (_QWORD *)sub_1C506E874(v197, (uint64_t)v720, (uint64_t)v65, (uint64_t)v723, 0, 0);
                      LOWORD(v725) = 257;
                      v66 = (char *)operator new(0x80uLL);
                      *((_QWORD *)v66 + 5) = 0;
                      v67 = v66 + 40;
                      *((_QWORD *)v66 + 6) = 0;
                      *((_QWORD *)v66 + 8) = *v198;
                      Not = (uint64_t ***)(v66 + 64);
                      *((_QWORD *)v66 + 3) = v66 + 64;
                      *((_QWORD *)v66 + 7) = v66 + 64;
                      *((_QWORD *)v66 + 9) = 0;
                      v66[80] = 55;
                      v66[81] = 0;
                      *((_WORD *)v66 + 41) = 0;
                      *((_DWORD *)v66 + 21) = 2;
                      *(_OWORD *)(v66 + 88) = 0u;
                      *(_OWORD *)(v66 + 104) = 0u;
                      *((_DWORD *)v66 + 30) = 0;
                      *(_QWORD *)v66 = v198;
                      v201 = v198[1];
                      v200 = v198 + 1;
                      v199 = v201;
                      *((_QWORD *)v66 + 1) = v201;
                      if (v201)
                        *(_QWORD *)(v199 + 16) = v66 + 8;
                      *((_QWORD *)v66 + 2) = v200;
                      *v200 = v66;
                      goto LABEL_83;
                    }
                  }
LABEL_262:
                  v202 = *((_DWORD *)v733 + 2);
                  if (v202 > 0x40)
                  {
                    if (llvm::APInt::countLeadingZerosSlowCase(v733) != v202 - 1)
                      goto LABEL_268;
                  }
                  else if (*(_QWORD *)v733 != 1)
                  {
                    goto LABEL_268;
                  }
                  if (*(_QWORD *)v26 && !*(_QWORD *)(*(_QWORD *)v26 + 8))
                  {
                    v723[0] = &v720;
                    if (sub_1C4B037F8((_QWORD **)v723, v17))
                    {
                      v326 = *(llvm::Type **)v720;
                      if ((*(_DWORD *)(*(_QWORD *)v720 + 8) & 0xFE) == 0x12)
                        v326 = (llvm::Type *)**((_QWORD **)v326 + 2);
                      if (llvm::Type::getPrimitiveSizeInBits(v326) == 1)
                      {
                        v327 = (char *)operator new(0x60uLL);
                        Not = (uint64_t ***)(v327 + 32);
                        *((_DWORD *)v327 + 13) = *((_DWORD *)v327 + 13) & 0x38000000 | 1;
                        *(_QWORD *)v327 = 0;
                        *((_QWORD *)v327 + 1) = 0;
                        *((_QWORD *)v327 + 2) = 0;
                        *((_QWORD *)v327 + 3) = v327 + 32;
                        v328 = *(_QWORD *)(a1 + 24);
                        LOWORD(v725) = 257;
                        v329 = sub_1C506EAA0(v328, (uint64_t)v720, (uint64_t)v723);
                        v738 = 257;
                        llvm::ZExtInst::ZExtInst((uint64_t)Not, v329, (uint64_t)v713, (uint64_t)&p_s2, 0);
                        if (Not)
                          return (llvm::Value *)Not;
LABEL_272:
                        v17 = (uint64_t)*(a2 - 8);
                        v18 = (uint64_t)*(a2 - 4);
                        v19 = *(unsigned __int8 *)(v18 + 16);
                        goto LABEL_273;
                      }
                    }
                    p_s2 = 0;
                    v723[0] = &v720;
                    v723[1] = &v732;
                    *(_QWORD *)&v724 = 0;
                    *((_QWORD *)&v724 + 1) = &p_s2;
                    v725 = 0;
                    if (sub_1C57A16F4((_QWORD **)v723, 27, v17))
                    {
                      v330 = v732;
                      if (v732 == (llvm::APInt *)p_s2)
                      {
                        v331 = v713;
                        if ((*((_DWORD *)v713 + 2) & 0xFE) == 0x12)
                          v331 = (llvm::Type *)**((_QWORD **)v713 + 2);
                        v332 = llvm::Type::getPrimitiveSizeInBits(v331);
                        v333 = *((_DWORD *)v330 + 2);
                        if (v333 >= 0x41)
                        {
                          if (v333 - llvm::APInt::countLeadingZerosSlowCase(v330) > 0x40)
                            goto LABEL_268;
                          v330 = *(llvm::APInt **)v330;
                        }
                        if (*(_QWORD *)v330 == v332 - 1)
                        {
                          v334 = *(_QWORD *)(a1 + 24);
                          LOWORD(v725) = 257;
                          v64 = (_QWORD *)sub_1C506EAA0(v334, (uint64_t)v720, (uint64_t)v723);
                          v65 = llvm::ConstantInt::get(v713, 1, 0);
                          LOWORD(v725) = 257;
                          v66 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v66 + 5) = 0;
                          v67 = v66 + 40;
                          *((_QWORD *)v66 + 6) = 0;
                          *((_QWORD *)v66 + 8) = *v64;
                          Not = (uint64_t ***)(v66 + 64);
                          *((_QWORD *)v66 + 3) = v66 + 64;
                          *((_QWORD *)v66 + 7) = v66 + 64;
                          *((_QWORD *)v66 + 9) = 0;
                          v68 = 56;
                          goto LABEL_80;
                        }
                      }
                    }
                  }
LABEL_268:
                  v723[0] = &v720;
                  v723[1] = &v732;
                  *(_QWORD *)&v724 = 0;
                  if (!*(_QWORD *)v26 || *(_QWORD *)(*(_QWORD *)v26 + 8))
                    goto LABEL_270;
                  v322 = *(unsigned __int8 *)(v17 + 16);
                  if (v322 == 5)
                  {
                    if (*(_WORD *)(v17 + 18) != 28)
                      goto LABEL_270;
                    v335 = (llvm::APInt **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
                    if (!*v335)
                      goto LABEL_270;
                    v720 = *v335;
                    if (!sub_1C4D8A004((uint64_t)&v723[1], v335[4]))
                      goto LABEL_270;
                  }
                  else
                  {
                    if (v322 != 56)
                      goto LABEL_270;
                    if (!*(_QWORD *)(v17 - 64))
                      goto LABEL_270;
                    v720 = *(llvm::APInt **)(v17 - 64);
                    if ((sub_1C4D89F84((uint64_t)&v723[1], *(unsigned __int8 **)(v17 - 32)) & 1) == 0)
                      goto LABEL_270;
                  }
                  v336 = (unint64_t **)v732;
                  v337 = *((unsigned int *)v732 + 2);
                  v338 = v337 - 1;
                  if (v337 > 0x40)
                  {
                    v339 = *(int8x8_t *)v732;
                    if (((*(_QWORD *)(*(_QWORD *)v732 + 8 * (v338 >> 6)) >> v338) & 1) != 0)
                    {
                      v355 = 0;
                      v356 = (unint64_t)(v337 + 63) >> 6;
                      v357 = *(int8x8_t **)v732;
                      do
                      {
                        v358 = *v357++;
                        v359 = (uint8x8_t)vcnt_s8(v358);
                        v359.i16[0] = vaddlv_u8(v359);
                        v355 += v359.i32[0];
                        --v356;
                      }
                      while (v356);
                      v360 = llvm::APInt::countLeadingZerosSlowCase(v732);
                      if (v360 + llvm::APInt::countTrailingZerosSlowCase(v336) + v355 == (_DWORD)v337)
                      {
LABEL_510:
                        v361 = v733;
                        v362 = *((unsigned int *)v733 + 2);
                        if (v362 > 0x40)
                        {
                          v650 = ((unint64_t)(v362 + 63) >> 3) & 0x3FFFFFF8;
                          v364 = (llvm::ConstantInt **)operator new[]();
                          memcpy(v364, *(const void **)v361, v650);
                          v651 = 0;
                          v652 = *(int8x8_t *)v732;
                          do
                          {
                            v364[v651 / 8] = (llvm::ConstantInt *)((unint64_t)v364[v651 / 8] & *(_QWORD *)(*(_QWORD *)&v652 + v651));
                            v651 += 8;
                          }
                          while (v650 != v651);
                          v653 = *((unsigned int *)v361 + 2);
                          if (v653 > 0x40)
                          {
                            v655 = memcmp(*(const void **)v361, v364, ((unint64_t)(v653 + 63) >> 3) & 0x3FFFFFF8) == 0;
                            v654 = 1;
LABEL_1183:
                            if (v362 >= 0x41 && v654)
                              MEMORY[0x1CAA32F9C](v364, 0x1000C8000313F17);
                            if (!v655)
                              goto LABEL_270;
                            v668 = *(_QWORD *)(a1 + 24);
                            v669 = v720;
                            v670 = llvm::ConstantInt::get((llvm::ConstantInt **)v713, v733, v323);
                            v738 = 257;
                            v672 = (_QWORD *)(*(uint64_t (**)(_QWORD, llvm::APInt *, llvm::Value **, _QWORD, _QWORD))(**(_QWORD **)(v668 + 72) + 16))(*(_QWORD *)(v668 + 72), v669, v670, 0, 0);
                            if (!v672)
                            {
                              LOWORD(v725) = 257;
                              v673 = (char *)operator new(0x80uLL);
                              *((_QWORD *)v673 + 5) = 0;
                              v674 = (llvm::Value **)(v673 + 40);
                              *((_QWORD *)v673 + 6) = 0;
                              *((_QWORD *)v673 + 8) = *(_QWORD *)v669;
                              v675 = (uint64_t)(v673 + 64);
                              *((_QWORD *)v673 + 3) = v673 + 64;
                              *((_QWORD *)v673 + 7) = v673 + 64;
                              *((_QWORD *)v673 + 9) = 0;
                              v673[80] = 41;
                              v673[81] = 0;
                              *((_WORD *)v673 + 41) = 0;
                              *((_DWORD *)v673 + 21) = 2;
                              *(_OWORD *)(v673 + 88) = 0u;
                              *(_OWORD *)(v673 + 104) = 0u;
                              *((_DWORD *)v673 + 30) = 0;
                              *(_QWORD *)v673 = v669;
                              v678 = *((_QWORD *)v669 + 1);
                              v677 = (_QWORD *)((char *)v669 + 8);
                              v676 = v678;
                              *((_QWORD *)v673 + 1) = v678;
                              if (v678)
                                *(_QWORD *)(v676 + 16) = v673 + 8;
                              *((_QWORD *)v673 + 2) = v677;
                              *v677 = v673;
                              *((_QWORD *)v673 + 4) = v670;
                              if (v670)
                              {
                                v681 = v670[1];
                                v680 = v670 + 1;
                                v679 = v681;
                                *v674 = v681;
                                if (v681)
                                  *((_QWORD *)v679 + 2) = v674;
                                *((_QWORD *)v673 + 6) = v680;
                                *v680 = v673 + 32;
                              }
                              llvm::Value::setName((uint64_t ***)v673 + 8, (uint64_t)v723);
                              v672 = (_QWORD *)sub_1C4773754((uint64_t *)v668, v675, (uint64_t)&p_s2);
                            }
                            v65 = llvm::ConstantInt::get((llvm::ConstantInt **)v713, v732, v671);
                            LOWORD(v725) = 257;
                            v66 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v66 + 5) = 0;
                            v67 = v66 + 40;
                            *((_QWORD *)v66 + 6) = 0;
                            *((_QWORD *)v66 + 8) = *v672;
                            Not = (uint64_t ***)(v66 + 64);
                            *((_QWORD *)v66 + 3) = v66 + 64;
                            *((_QWORD *)v66 + 7) = v66 + 64;
                            *((_QWORD *)v66 + 9) = 0;
                            v66[80] = 56;
                            v66[81] = 0;
                            *((_WORD *)v66 + 41) = 0;
                            *((_DWORD *)v66 + 21) = 2;
                            *(_OWORD *)(v66 + 88) = 0u;
                            *(_OWORD *)(v66 + 104) = 0u;
                            *((_DWORD *)v66 + 30) = 0;
                            *(_QWORD *)v66 = v672;
                            v684 = v672[1];
                            v683 = v672 + 1;
                            v682 = v684;
                            *((_QWORD *)v66 + 1) = v684;
                            if (v684)
                              *(_QWORD *)(v682 + 16) = v66 + 8;
                            *((_QWORD *)v66 + 2) = v683;
                            *v683 = v66;
LABEL_83:
                            *((_QWORD *)v66 + 4) = v65;
                            if (v65)
                            {
                              v74 = v65[1];
                              v73 = v65 + 1;
                              v72 = v74;
                              *v67 = v74;
                              if (v74)
                                *(_QWORD *)(v72 + 16) = v67;
                              *((_QWORD *)v66 + 6) = v73;
                              *v73 = v66 + 32;
                            }
LABEL_129:
                            llvm::Value::setName(Not, (uint64_t)v723);
                            if (Not)
                              return (llvm::Value *)Not;
                            goto LABEL_272;
                          }
                          v363 = *(llvm::ConstantInt ***)v361;
                        }
                        else
                        {
                          v363 = *(llvm::ConstantInt ***)v733;
                          v364 = (llvm::ConstantInt **)(*(_QWORD *)v733 & *(_QWORD *)&v339);
                        }
                        v654 = (uint64_t)v364;
                        v655 = v363 == v364;
                        goto LABEL_1183;
                      }
                    }
                  }
                  else
                  {
                    v339 = *(int8x8_t *)v732;
                    if (((*(_QWORD *)v732 >> v338) & 1) != 0
                      && ((((*(_QWORD *)&v339 - 1) | *(_QWORD *)&v339) + 1) & ((*(_QWORD *)&v339 - 1) | *(_QWORD *)&v339)) == 0)
                    {
                      goto LABEL_510;
                    }
                  }
LABEL_270:
                  Not = 0;
                  goto LABEL_271;
                }
              }
              v177 = v732;
              v178 = *((unsigned int *)v732 + 2);
              if (v178 <= 0x40)
              {
                v179 = *(llvm::ConstantInt ***)v732;
                v186 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v732);
                v186.i16[0] = vaddlv_u8(v186);
                if (v186.u32[0] != 1)
                  goto LABEL_262;
                goto LABEL_247;
              }
              v188 = 0;
              v189 = (unint64_t)(v178 + 63) >> 6;
              v190 = *(int8x8_t **)v732;
              do
              {
                v191 = *v190++;
                v192 = (uint8x8_t)vcnt_s8(v191);
                v192.i16[0] = vaddlv_u8(v192);
                v188 += v192.i32[0];
                --v189;
              }
              while (v189);
              if (v188 != 1)
                goto LABEL_262;
LABEL_251:
              v187 = llvm::APInt::countLeadingZerosSlowCase(v177);
              goto LABEL_252;
            }
            v131 = *(void **)(a1 + 56);
            v132 = *(_QWORD *)(a1 + 72);
            v133 = (llvm::APInt *)a2;
            if (!a2[5])
            {
              if (!v720 || *((unsigned __int8 *)v720 + 16) < 0x1Cu || (v133 = v720, !*((_QWORD *)v720 + 5)))
                v133 = 0;
            }
            v723[0] = *(void **)(a1 + 80);
            v723[1] = v131;
            *(_QWORD *)&v724 = v133;
            *((_QWORD *)&v724 + 1) = v132;
            v725 = 0;
            LOBYTE(v726) = 1;
            sub_1C4F83784((uint64_t)v720, 0, (uint64_t *)v723, &p_s2);
            v135 = (const void **)v732;
            v136 = *((unsigned int *)v732 + 2);
            if (v136 >= 0x41)
            {
              v137 = ((unint64_t)(v136 + 63) >> 3) & 0x3FFFFFF8;
              v138 = (char *)operator new[]();
              memcpy(v138, *v135, v137);
              v139 = 0;
              v140 = p_s2;
              do
              {
                *(_QWORD *)&v138[v139] |= *(_QWORD *)(v140 + v139);
                v139 += 8;
              }
              while (v137 != v139);
              LODWORD(v723[1]) = v136;
              v723[0] = v138;
              v141 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)v723);
              MEMORY[0x1CAA32F9C](v138, 0x1000C8000313F17);
              if (v141 != (_DWORD)v136)
                goto LABEL_196;
              v135 = (const void **)v732;
              v136 = *((unsigned int *)v732 + 2);
              if (v136 >= 0x41)
              {
                v143 = (void *)operator new[]();
                memcpy(v143, *v135, ((unint64_t)(v136 + 63) >> 3) & 0x3FFFFFF8);
                v145 = 0;
                v146 = *(llvm::ConstantInt ***)v733;
                v147 = (unint64_t)(v136 + 63) >> 6;
                v148 = (unint64_t *)v143;
                v149 = v147;
                do
                {
                  v150 = (uint64_t)*v146++;
                  v151 = v150 + *v148;
                  v152 = v151 + 1 <= *v148;
                  if (v145)
                  {
                    ++v151;
                    v145 = v152;
                  }
                  else
                  {
                    v145 = v151 < *v148;
                  }
                  *v148++ = v151;
                  --v149;
                }
                while (v149);
                *((_QWORD *)v143 + (v147 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v136;
                goto LABEL_203;
              }
            }
            else if ((_DWORD)v136 && (*(_QWORD *)v732 | p_s2) != 0xFFFFFFFFFFFFFFFFLL >> -(char)v136)
            {
LABEL_196:
              v144 = 0;
              Not = 0;
              goto LABEL_214;
            }
            if ((_DWORD)v136)
              v142 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v136;
            else
              v142 = 0;
            v143 = (void *)(v142 & ((unint64_t)*v135 + *(_QWORD *)v733));
LABEL_203:
            v740 = v136;
            v739 = (llvm::ConstantInt **)v143;
            v153 = llvm::ConstantInt::get((llvm::ConstantInt **)v713, (llvm::Type *)&v739, v134);
            v154 = v720;
            LOWORD(v725) = 257;
            v155 = (char *)operator new(0x80uLL);
            *(_QWORD *)v155 = 0;
            *((_QWORD *)v155 + 2) = 0;
            *((_QWORD *)v155 + 1) = 0;
            *((_QWORD *)v155 + 5) = 0;
            *((_QWORD *)v155 + 6) = 0;
            *((_QWORD *)v155 + 4) = 0;
            v156 = (llvm::APInt **)(v155 + 32);
            *((_QWORD *)v155 + 8) = *v153;
            Not = (uint64_t ***)(v155 + 64);
            *((_QWORD *)v155 + 3) = v155 + 64;
            *((_QWORD *)v155 + 7) = v155 + 64;
            *((_QWORD *)v155 + 9) = 0;
            v155[80] = 43;
            v155[81] = 0;
            *((_WORD *)v155 + 41) = 0;
            *((_DWORD *)v155 + 21) = 2;
            *((_DWORD *)v155 + 30) = 0;
            *(_OWORD *)(v155 + 104) = 0u;
            *(_OWORD *)(v155 + 88) = 0u;
            *(_QWORD *)v155 = v153;
            v159 = v153[1];
            v158 = v153 + 1;
            v157 = v159;
            *((_QWORD *)v155 + 1) = v159;
            if (v159)
              *((_QWORD *)v157 + 2) = v155 + 8;
            *((_QWORD *)v155 + 2) = v158;
            *v158 = v155;
            if (*((_QWORD *)v155 + 4))
            {
              **((_QWORD **)v155 + 6) = *((_QWORD *)v155 + 5);
              v705 = *((_QWORD *)v155 + 5);
              if (v705)
                *(_QWORD *)(v705 + 16) = *((_QWORD *)v155 + 6);
            }
            *v156 = v154;
            if (v154)
            {
              v162 = *((_QWORD *)v154 + 1);
              v161 = (llvm::APInt ***)((char *)v154 + 8);
              v160 = v162;
              *((_QWORD *)v155 + 5) = v162;
              if (v162)
                *(_QWORD *)(v160 + 16) = v155 + 40;
              *((_QWORD *)v155 + 6) = v161;
              *v161 = v156;
            }
            llvm::Value::setName((uint64_t ***)v155 + 8, (uint64_t)v723);
            if (v740 >= 0x41 && v739)
              MEMORY[0x1CAA32F9C](v739, 0x1000C8000313F17);
            v144 = 1;
LABEL_214:
            if (v737 >= 0x41 && v736)
              MEMORY[0x1CAA32F9C](v736, 0x1000C8000313F17);
            if (v735 >= 0x41 && p_s2)
              MEMORY[0x1CAA32F9C](p_s2, 0x1000C8000313F17);
            if ((v144 & 1) != 0)
            {
LABEL_271:
              if (Not)
                return (llvm::Value *)Not;
              goto LABEL_272;
            }
            goto LABEL_217;
          }
          v46 = *(llvm **)(v17 - 64);
          if (!v46
            || (v720 = *(llvm::APInt **)(v17 - 64),
                v47 = *(llvm::ConstantExpr **)(v17 - 32),
                v48 = *((unsigned __int8 *)v47 + 16),
                v48 == 5)
            || !v47
            || v48 > 0x14)
          {
            v732 = 0;
            v723[1] = &v732;
            *(_QWORD *)&v724 = 0;
            goto LABEL_94;
          }
        }
        if (llvm::haveNoCommonBitsSet(v46, v47, *(void ***)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1))
        {
          v64 = v720;
          v65 = llvm::ConstantExpr::getAdd(v47, (llvm::Constant *)v18, 0, 0);
          LOWORD(v725) = 257;
          v66 = (char *)operator new(0x80uLL);
          *((_QWORD *)v66 + 5) = 0;
          v67 = v66 + 40;
          *((_QWORD *)v66 + 6) = 0;
          *((_QWORD *)v66 + 8) = *v64;
          Not = (uint64_t ***)(v66 + 64);
          *((_QWORD *)v66 + 3) = v66 + 64;
          *((_QWORD *)v66 + 7) = v66 + 64;
          *((_QWORD *)v66 + 9) = 0;
          v68 = 41;
LABEL_80:
          v66[80] = v68;
          v66[81] = 0;
          *((_WORD *)v66 + 41) = 0;
          *((_DWORD *)v66 + 21) = 2;
          *(_OWORD *)(v66 + 88) = 0u;
          *(_OWORD *)(v66 + 104) = 0u;
          *((_DWORD *)v66 + 30) = 0;
          *(_QWORD *)v66 = v64;
          v71 = v64[1];
          v70 = v64 + 1;
          v69 = v71;
          *((_QWORD *)v66 + 1) = v71;
          if (v71)
            *(_QWORD *)(v69 + 16) = v66 + 8;
          *((_QWORD *)v66 + 2) = v70;
          *v70 = v66;
          goto LABEL_83;
        }
        v45 = *(unsigned __int8 *)(v17 + 16);
        goto LABEL_88;
      }
      v720 = v22;
      v24 = llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v21, (llvm::Constant *)v18, 0, 0);
LABEL_44:
      v35 = v24;
      v36 = v720;
      LOWORD(v725) = 257;
      v37 = (char *)operator new(0x80uLL);
      *((_QWORD *)v37 + 5) = 0;
      v38 = v37 + 40;
      *((_QWORD *)v37 + 6) = 0;
      *((_QWORD *)v37 + 8) = *(_QWORD *)v35;
      Not = (uint64_t ***)(v37 + 64);
      *((_QWORD *)v37 + 3) = v37 + 64;
      *((_QWORD *)v37 + 7) = v37 + 64;
      *((_QWORD *)v37 + 9) = 0;
      v37[80] = 43;
      v37[81] = 0;
      *((_WORD *)v37 + 41) = 0;
      *((_DWORD *)v37 + 21) = 2;
      *(_OWORD *)(v37 + 88) = 0u;
      *(_OWORD *)(v37 + 104) = 0u;
      *((_DWORD *)v37 + 30) = 0;
      *(_QWORD *)v37 = v35;
      v41 = *((_QWORD *)v35 + 1);
      v40 = (_QWORD *)((char *)v35 + 8);
      v39 = v41;
      *((_QWORD *)v37 + 1) = v41;
      if (v41)
        *(_QWORD *)(v39 + 16) = v37 + 8;
      *((_QWORD *)v37 + 2) = v40;
      *v40 = v37;
      *((_QWORD *)v37 + 4) = v36;
      if (v36)
      {
        v44 = *((_QWORD *)v36 + 1);
        v43 = (_QWORD *)((char *)v36 + 8);
        v42 = v44;
        *v38 = v44;
        if (v44)
          *(_QWORD *)(v42 + 16) = v38;
        *((_QWORD *)v37 + 6) = v43;
        *v43 = v37 + 32;
      }
      goto LABEL_354;
    }
  }
  return (llvm::Value *)Not;
}

char *sub_1C5797778(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v6;
  unsigned int v7;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  char v21;
  char v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  unsigned int v26;
  BOOL v27;
  char *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _BYTE v36[32];
  __int16 v37;

  v2 = 0;
  v3 = *(_QWORD *)(a1 - 64);
  v4 = *(unsigned __int8 *)(v3 + 16);
  if (v4 - 41 >= 0x12 || v4 <= 0x1B)
    v3 = 0;
  v6 = *(_QWORD *)(a1 - 32);
  v7 = *(unsigned __int8 *)(v6 + 16);
  if (v7 - 41 >= 0x12 || v7 <= 0x1B)
    v6 = 0;
  if (v3)
    v9 = v6 == 0;
  else
    v9 = 1;
  if (!v9)
  {
    v10 = *(_QWORD *)(v3 + 8);
    if (!v10 || *(_QWORD *)(v10 + 8))
    {
      v11 = *(_QWORD *)(v6 + 8);
      if (!v11 || *(_QWORD *)(v11 + 8))
        return 0;
    }
    v12 = *(unsigned __int8 *)(v3 + 16);
    if (v12 == 5)
    {
      if (*(_WORD *)(v3 + 18) != 25)
        return 0;
      v15 = v3 - 32 * (*(_DWORD *)(v3 + 20) & 0x7FFFFFF);
      v13 = *(_QWORD **)v15;
      if (!*(_QWORD *)v15)
        return 0;
      v14 = *(_QWORD *)(v15 + 32);
      if (!v14)
        return 0;
    }
    else
    {
      if (v12 != 53)
        return 0;
      v13 = *(_QWORD **)(v3 - 64);
      if (!v13)
        return 0;
      v14 = *(_QWORD *)(v3 - 32);
      if (!v14)
        return 0;
    }
    v16 = *(unsigned __int8 *)(v6 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 25)
        return 0;
      v19 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
      v17 = *v19;
      if (!*v19)
        return 0;
      v18 = v19[4];
    }
    else
    {
      if (v16 != 53)
        return 0;
      v17 = *(_QWORD *)(v6 - 64);
      if (!v17)
        return 0;
      v18 = *(_QWORD *)(v6 - 32);
    }
    if (v14 != v18)
      return 0;
    if ((*(_BYTE *)(a1 + 17) & 4) != 0 && (*(_BYTE *)(v3 + 17) & 4) != 0)
      v21 = *(_BYTE *)(v6 + 17) & 4;
    else
      v21 = 0;
    if ((*(_BYTE *)(a1 + 17) & 2) != 0 && (*(_BYTE *)(v3 + 17) & 2) != 0)
      v22 = *(_BYTE *)(v6 + 17) & 2;
    else
      v22 = 0;
    v23 = *(unsigned __int8 *)(a1 + 16) - 28;
    v37 = 257;
    v24 = sub_1C4773860(a2, v23, v13, v17, (uint64_t)v36, 0);
    v25 = v24;
    v26 = v24[16];
    if (v24)
      v27 = v26 >= 0x1C;
    else
      v27 = 0;
    if (v27 && v26 - 59 >= 0xFFFFFFEE)
      v24[17] = v21 | v22 | v24[17] & 0xF9;
    v37 = 257;
    v29 = (char *)operator new(0x80uLL);
    v30 = v29;
    *((_QWORD *)v29 + 6) = 0;
    *((_QWORD *)v29 + 8) = *(_QWORD *)v25;
    v2 = v29 + 64;
    *((_QWORD *)v29 + 3) = v29 + 64;
    *((_QWORD *)v29 + 7) = v29 + 64;
    *((_QWORD *)v29 + 9) = 0;
    v29[80] = 53;
    v29[81] = 0;
    *((_WORD *)v29 + 41) = 0;
    *((_DWORD *)v29 + 21) = 2;
    *(_OWORD *)(v29 + 88) = 0u;
    *(_OWORD *)(v29 + 104) = 0u;
    *((_DWORD *)v29 + 30) = 0;
    *(_QWORD *)v29 = v25;
    v33 = *((_QWORD *)v25 + 1);
    v32 = v25 + 8;
    v31 = v33;
    *((_QWORD *)v29 + 1) = v33;
    if (v33)
      *(_QWORD *)(v31 + 16) = v29 + 8;
    *((_QWORD *)v29 + 2) = v32;
    *v32 = v29;
    v34 = (_QWORD *)(v14 + 8);
    v35 = *(_QWORD *)(v14 + 8);
    *((_QWORD *)v29 + 5) = v35;
    *((_QWORD *)v29 + 4) = v14;
    if (v35)
      *(_QWORD *)(v35 + 16) = v29 + 40;
    *((_QWORD *)v29 + 6) = v34;
    *v34 = v29 + 32;
    llvm::Value::setName((uint64_t ***)v29 + 8, (uint64_t)v36);
    v30[81] = v21 | v22 | v30[81] & 0xF9;
  }
  return v2;
}

llvm::UndefValue **sub_1C5797A00(uint64_t a1, unsigned __int8 *a2)
{
  llvm *v4;
  llvm::Constant *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  int v9;
  llvm::Value **v10;
  uint64_t ***v12;
  llvm::ValueHandleBase *FAdd;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  llvm::UndefValue *v36;
  uint64_t v37;
  uint64_t v38;
  llvm::UndefValue *v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  llvm::Value *Intrinsic;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t ***v57;
  uint64_t v58;
  _QWORD *v59;
  llvm::ConstantFP **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  int v66;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  const llvm::APFloat *v75;
  llvm::Value **v76;
  llvm::Type *v77;
  llvm::ConstantExpr *v78;
  llvm::Constant *v79;
  llvm::Constant *v80;
  llvm::Constant *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  llvm::ValueHandleBase *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t **v88;
  uint64_t *v89;
  uint64_t **v90;
  __int128 v91;
  _BYTE v92[24];
  uint64_t **v93;
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  v4 = (llvm *)*((_QWORD *)a2 - 8);
  v5 = (llvm::Constant *)*((_QWORD *)a2 - 4);
  v6 = (unint64_t)a2[17] >> 1;
  v7 = *(_OWORD *)(a1 + 120);
  v8 = *(_OWORD *)(a1 + 104);
  v91 = *(_OWORD *)(a1 + 88);
  *(_OWORD *)v92 = v8;
  v93 = (uint64_t **)*((_QWORD *)&v7 + 1);
  *(_QWORD *)&v92[16] = a2;
  if ((_DWORD)v6 == 127)
    v9 = -1;
  else
    v9 = v6;
  v10 = sub_1C4E6C968(v4, v5, v9, (uint64_t)&v91, 0, (llvm::DSOLocalEquivalent **)1);
  if (v10)
    return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, (llvm::Value *)v10);
  if ((sub_1C577D620(a1, (llvm::Instruction *)a2) & 1) == 0)
  {
    v12 = (uint64_t ***)sub_1C57826B8(a1, a2);
    if (v12)
      return (llvm::UndefValue **)v12;
    v12 = (uint64_t ***)sub_1C578171C(a1, (uint64_t)a2);
    if (v12)
      return (llvm::UndefValue **)v12;
    v12 = (uint64_t ***)sub_1C5781CD4(a1, a2);
    if (v12)
      return (llvm::UndefValue **)v12;
    v84 = 0;
    v85 = 0;
    *(_QWORD *)&v91 = &v85;
    *((_QWORD *)&v91 + 1) = &v84;
    if (sub_1C57A1C8C((_QWORD **)&v91, 14, (uint64_t)a2))
    {
      v14 = v84;
      FAdd = v85;
      *(_WORD *)&v92[16] = 257;
LABEL_19:
      v18 = (char *)operator new(0x80uLL);
      *((_QWORD *)v18 + 5) = 0;
      v19 = v18 + 40;
      *((_QWORD *)v18 + 6) = 0;
      *((_QWORD *)v18 + 8) = *v14;
      v12 = (uint64_t ***)(v18 + 64);
      *((_QWORD *)v18 + 3) = v18 + 64;
      *((_QWORD *)v18 + 7) = v18 + 64;
      *((_QWORD *)v18 + 9) = 0;
      v20 = 44;
LABEL_20:
      v18[80] = v20;
      v18[81] = 0;
      *((_WORD *)v18 + 41) = 0;
      *((_DWORD *)v18 + 21) = 2;
      *(_OWORD *)(v18 + 88) = 0u;
      *(_OWORD *)(v18 + 104) = 0u;
      *((_DWORD *)v18 + 30) = 0;
      *(_QWORD *)v18 = v14;
      v23 = v14[1];
      v22 = v14 + 1;
      v21 = v23;
      *((_QWORD *)v18 + 1) = v23;
      if (v23)
        *(_QWORD *)(v21 + 16) = v18 + 8;
      *((_QWORD *)v18 + 2) = v22;
      *v22 = v18;
      *((_QWORD *)v18 + 4) = FAdd;
      if (FAdd)
      {
        v26 = *((_QWORD *)FAdd + 1);
        v25 = (_QWORD *)((char *)FAdd + 8);
        v24 = v26;
        *v19 = v26;
        if (v26)
          *(_QWORD *)(v24 + 16) = v19;
        *((_QWORD *)v18 + 6) = v25;
        *v25 = v18 + 32;
      }
      llvm::Value::setName(v12, (uint64_t)&v91);
      llvm::Instruction::copyIRFlags((uint64_t)v12, (uint64_t)a2, 1);
      return (llvm::UndefValue **)v12;
    }
    v83 = 0;
    *(_QWORD *)&v91 = &v85;
    *((_QWORD *)&v91 + 1) = &v84;
    *(_QWORD *)v92 = &v83;
    if (sub_1C57A1D98((_QWORD **)&v91, 14, (uint64_t)a2))
    {
      v15 = *(_QWORD *)(a1 + 24);
      *(_WORD *)&v92[16] = 257;
      v16 = sub_1C4867450(v15, (uint64_t *)v85, (uint64_t)v84, (uint64_t)a2, (uint64_t)&v91);
LABEL_18:
      FAdd = (llvm::ValueHandleBase *)v16;
      v14 = v83;
      *(_WORD *)&v92[16] = 257;
      goto LABEL_19;
    }
    *(_QWORD *)&v91 = &v85;
    *((_QWORD *)&v91 + 1) = &v84;
    *(_QWORD *)v92 = &v83;
    if (sub_1C57A1FFC((_QWORD **)&v91, 14, (uint64_t)a2)
      || (v88 = (uint64_t **)&v85, v89 = (uint64_t *)&v84, v90 = &v83, sub_1C57A22F8(&v88, 14, (uint64_t)a2)))
    {
      v17 = *(_QWORD *)(a1 + 24);
      *(_WORD *)&v92[16] = 257;
      v16 = sub_1C4867220(v17, (uint64_t *)v85, (uint64_t)v84, (uint64_t)a2, (uint64_t)&v91);
      goto LABEL_18;
    }
    v27 = *((_QWORD *)a2 - 8);
    v28 = *((_QWORD *)a2 - 4);
    if (v27 && *(_BYTE *)(v27 + 16) == 72)
    {
      v29 = *(_QWORD **)(v27 - 32);
      v30 = *(_QWORD *)v27;
      if (*(_BYTE *)(v28 + 16) == 17 && v28)
      {
        v31 = *v29;
        v32 = *(_QWORD *)v27;
        if ((*(_DWORD *)(v30 + 8) & 0xFE) == 0x12)
          v32 = **(_QWORD **)(v30 + 16);
        v33 = *v29;
        if ((*(_DWORD *)(v31 + 8) & 0xFE) == 0x12)
          v33 = **(_QWORD **)(v31 + 16);
        v34 = *(unsigned __int8 *)(v32 + 8);
        if ((_DWORD)v34 != 2)
          __asm { BR              X10 }
        if (*(_DWORD *)(v33 + 8) >> 8 <= 0x18u)
        {
          v35 = *(_QWORD *)v27;
          v36 = sub_1C537D3B8((llvm *)0x2A, *((_QWORD *)a2 - 4), (llvm::Constant *)v31, 0);
          v30 = v35;
          v37 = *(_QWORD *)(v27 + 8);
          if (v37)
          {
            if (!*(_QWORD *)(v37 + 8))
            {
              v38 = (uint64_t)v36;
              v39 = sub_1C537D3B8((llvm *)0x2C, (uint64_t)v36, *(llvm::Constant **)a2, 0);
              v30 = v35;
              if (v39 == (llvm::UndefValue *)v28)
              {
                v40 = sub_1C4F8C45C((uint64_t)v29, v38, 0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 56), (uint64_t)a2, *(_QWORD *)(a1 + 72));
                v30 = v35;
                if (v40 == 3)
                {
                  v41 = *(_QWORD *)(a1 + 24);
                  *(_QWORD *)&v91 = "addconv";
                  *(_WORD *)&v92[16] = 259;
                  v42 = v29;
                  v43 = v38;
LABEL_66:
                  v54 = sub_1C538E314(v41, v42, v43, (uint64_t)&v91);
                  v55 = (char *)operator new(0x60uLL);
                  v12 = (uint64_t ***)(v55 + 32);
                  *((_DWORD *)v55 + 13) = *((_DWORD *)v55 + 13) & 0x38000000 | 1;
                  *(_QWORD *)v55 = 0;
                  *((_QWORD *)v55 + 1) = 0;
                  *((_QWORD *)v55 + 2) = 0;
                  *((_QWORD *)v55 + 3) = v55 + 32;
                  v56 = *(_QWORD *)a2;
                  *(_WORD *)&v92[16] = 257;
                  v57 = (uint64_t ***)sub_1C4FCD80C((uint64_t)(v55 + 32), v56, 44, v54, 0);
                  llvm::Value::setName(v57, (uint64_t)&v91);
                  return (llvm::UndefValue **)v12;
                }
              }
            }
          }
        }
      }
      if (*(_BYTE *)(v28 + 16) == 72 && v28)
      {
        v44 = *v29;
        if ((*(_DWORD *)(v30 + 8) & 0xFE) == 0x12)
          v30 = **(_QWORD **)(v30 + 16);
        if ((*(_DWORD *)(v44 + 8) & 0xFE) == 0x12)
          v45 = **(_QWORD **)(v44 + 16);
        else
          v45 = *v29;
        v46 = *(_QWORD **)(v28 - 32);
        v47 = *(unsigned __int8 *)(v30 + 8);
        if ((_DWORD)v47 != 2)
          __asm { BR              X10 }
        if (*(_DWORD *)(v45 + 8) >> 8 <= 0x18u
          && v44 == *v46
          && ((v51 = *(_QWORD *)(v27 + 8)) != 0 && !*(_QWORD *)(v51 + 8)
           || (v52 = *(_QWORD *)(v28 + 8)) != 0 && !*(_QWORD *)(v52 + 8)))
        {
          v53 = *(_QWORD *)(v28 - 32);
          if (sub_1C4F8C45C((uint64_t)v29, (uint64_t)v46, 0, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 56), (uint64_t)a2, *(_QWORD *)(a1 + 72)) == 3)
          {
            v43 = v53;
            v41 = *(_QWORD *)(a1 + 24);
            *(_QWORD *)&v91 = "addconv";
            *(_WORD *)&v92[16] = 259;
            v42 = v29;
            goto LABEL_66;
          }
        }
      }
    }
    Intrinsic = sub_1C577F49C(a1, a2, (llvm *)v27, (llvm::Constant *)v28);
    if (Intrinsic)
      return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
    if ((~a2[17] & 0x12) == 0)
    {
      v12 = sub_1C5798394((uint64_t)a2, *(_QWORD *)(a1 + 24));
      if (v12)
        return (llvm::UndefValue **)v12;
      LODWORD(v91) = 319;
      *(_QWORD *)((char *)&v91 + 4) = 0;
      *(_QWORD *)v92 = 1;
      *(_QWORD *)&v92[8] = &v85;
      *(_QWORD *)&v92[16] = &v84;
      if (sub_1C57A2614((uint64_t)&v91, 14, (uint64_t)a2))
      {
        v49 = *(uint64_t **)(a1 + 24);
        v87 = *(_QWORD *)v85;
        v88 = (uint64_t **)v84;
        v89 = (uint64_t *)v85;
        *(_WORD *)&v92[16] = 257;
        v50 = &v87;
LABEL_59:
        Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateIntrinsic(v49, 319, v50, 1, (uint64_t *)&v88, 2, (uint64_t)a2, (uint64_t)&v91);
        return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
      }
      v87 = 0;
      v82 = 0;
      LODWORD(v91) = 319;
      DWORD2(v91) = 0;
      *(_QWORD *)v92 = &v87;
      *(_OWORD *)&v92[8] = xmmword_1C64632D0;
      v93 = (uint64_t **)&v85;
      v58 = *(_QWORD *)(v27 + 8);
      if (v58)
      {
        if (!*(_QWORD *)(v58 + 8) && sub_1C57A2804((uint64_t)&v91, v27))
        {
          v88 = (uint64_t **)&v82;
          v89 = 0;
          v59 = sub_1C4E7A604((uint64_t)&v88, (unsigned __int8 *)v28);
          if ((_DWORD)v59)
          {
            v60 = *(llvm::ConstantFP ***)a2;
            v61 = v82;
            v62 = v87;
            v63 = *(_QWORD *)(v82 + 8);
            if ((_UNKNOWN *)v63 == &unk_1C866F1C0)
            {
              llvm::detail::DoubleAPFloat::DoubleAPFloat((llvm::detail::DoubleAPFloat *)((char *)&v91 + 8), (const llvm::detail::DoubleAPFloat *)(v82 + 8));
            }
            else
            {
              *((_QWORD *)&v91 + 1) = *(_QWORD *)(v82 + 8);
              if ((*(_DWORD *)(v63 + 8) + 64) >= 0x80)
              {
                v59 = (_QWORD *)operator new[]();
                *(_QWORD *)v92 = v59;
                v64 = v92[12] & 0xF0;
              }
              else
              {
                v64 = 0;
              }
              v65 = *(_BYTE *)(v61 + 28);
              v66 = v65 & 7;
              v92[12] = v64 | v65 & 8 | v65 & 7;
              *(_DWORD *)&v92[8] = *(_DWORD *)(v61 + 24);
              v68 = (v65 & 6) != 0 && v66 != 3;
              if (v66 == 1 || v68)
              {
                v69 = *(unsigned int *)(*((_QWORD *)&v91 + 1) + 8);
                if ((v69 - 64) > 0xFFFFFF7F)
                  v59 = v92;
                v72 = *(uint64_t **)(v61 + 16);
                v71 = (uint64_t *)(v61 + 16);
                v70 = v72;
                if ((*(_DWORD *)(*(v71 - 1) + 8) - 64) >= 0xFFFFFF80)
                  v70 = v71;
                if (v69 <= 0xFFFFFFBF)
                {
                  v73 = (unint64_t)(v69 + 64) >> 6;
                  do
                  {
                    v74 = *v70++;
                    *v59++ = v74;
                    --v73;
                  }
                  while (v73);
                }
              }
            }
            sub_1C47B4138((uint64_t)&v91, v62, 1);
            v76 = llvm::ConstantFP::get(v60, (llvm::Type *)&v91, v75);
            if (*((_UNKNOWN **)&v91 + 1) == &unk_1C866F1C0)
            {
              sub_1C4773C74((uint64_t *)v92);
            }
            else if ((*(_DWORD *)(*((_QWORD *)&v91 + 1) + 8) - 64) <= 0xFFFFFF7F && *(_QWORD *)v92)
            {
              MEMORY[0x1CAA32F9C](*(_QWORD *)v92, 0x1000C8000313F17);
            }
            v49 = *(uint64_t **)(a1 + 24);
            v86 = *(_QWORD *)v85;
            v88 = (uint64_t **)v76;
            v89 = (uint64_t *)v85;
            *(_WORD *)&v92[16] = 257;
            v50 = &v86;
            goto LABEL_59;
          }
        }
      }
      v88 = 0;
      *(_QWORD *)&v91 = &v85;
      *((_QWORD *)&v91 + 1) = &v88;
      *(_QWORD *)v92 = 0;
      *(_QWORD *)&v92[8] = &v85;
      if (sub_1C57A28D8((_QWORD **)&v91, 14, (uint64_t)a2))
      {
        v78 = (llvm::ConstantExpr *)v88;
        v79 = llvm::ConstantFP::get(*(llvm::ConstantFP ***)a2, v77, 1.0);
        FAdd = llvm::ConstantExpr::getFAdd(v78, v79, v80, v81);
        v88 = (uint64_t **)FAdd;
        v14 = (uint64_t *)v85;
        *(_WORD *)&v92[16] = 257;
        v18 = (char *)operator new(0x80uLL);
        *((_QWORD *)v18 + 5) = 0;
        v19 = v18 + 40;
        *((_QWORD *)v18 + 6) = 0;
        *((_QWORD *)v18 + 8) = *v14;
        v12 = (uint64_t ***)(v18 + 64);
        *((_QWORD *)v18 + 3) = v18 + 64;
        *((_QWORD *)v18 + 7) = v18 + 64;
        *((_QWORD *)v18 + 9) = 0;
        v20 = 46;
        goto LABEL_20;
      }
      v91 = *(unint64_t *)(a1 + 24);
      Intrinsic = (llvm::Value *)sub_1C5798C50((uint64_t)&v91, a2);
      if (Intrinsic)
        return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
    }
    return 0;
  }
  return (llvm::UndefValue **)a2;
}

uint64_t ***sub_1C5798394(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ***v21;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t **v36;
  uint64_t *v37;
  uint64_t *v38;
  int v39;
  uint64_t **v40;
  uint64_t *v41;
  uint64_t *v42;
  int v43;
  uint64_t **v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t **v47;
  uint64_t *v48;
  uint64_t *v49;
  BOOL v50;
  uint64_t *v51;
  int v52;
  uint64_t **v53;
  uint64_t *v54;
  uint64_t **v55;
  uint64_t *v56;
  uint64_t *v57;
  int v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  uint64_t *v61;
  unsigned int v62;
  char *v63;
  char v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  char *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t **v88;
  uint64_t **v89;
  uint64_t **v90;
  uint64_t *v91;
  _QWORD *v92;
  uint64_t *v93;

  v92 = 0;
  v93 = 0;
  v86 = (uint64_t *)&v92;
  v87 = 0x3FF0000000000000;
  v88 = &v91;
  v89 = &v93;
  v90 = &v91;
  v91 = 0;
  v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 != 5)
  {
    if (v4 != 42)
      goto LABEL_24;
    v5 = *(_QWORD *)(a1 - 64);
    v6 = *(_QWORD *)(v5 + 8);
    if (!v6)
      goto LABEL_8;
    if (*(_QWORD *)(v6 + 8))
      goto LABEL_8;
    if (!sub_1C579F01C(&v86, v5))
      goto LABEL_8;
    v7 = *(_QWORD *)(a1 - 32);
    v8 = *(_QWORD *)(v7 + 8);
    if (!v8 || *(_QWORD *)(v8 + 8))
      goto LABEL_8;
    v39 = *(unsigned __int8 *)(v7 + 16);
    if (v39 == 5)
    {
      if (*(_WORD *)(v7 + 18) == 18)
      {
        v53 = (uint64_t **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
        if (*v53)
        {
          *v89 = *v53;
          v54 = *(uint64_t **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
          if (*v90 == v54)
            goto LABEL_153;
        }
        else
        {
          v54 = v53[4];
        }
        if (v54)
        {
          *v89 = v54;
          v40 = (uint64_t **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
LABEL_147:
          if (*v90 == *v40)
            goto LABEL_153;
        }
      }
    }
    else if (v39 == 46)
    {
      v40 = (uint64_t **)(v7 - 64);
      v41 = *(uint64_t **)(v7 - 64);
      if (v41)
      {
        *v89 = v41;
        v42 = *(uint64_t **)(v7 - 32);
        if (*v90 == v42)
          goto LABEL_153;
      }
      else
      {
        v42 = *(uint64_t **)(v7 - 32);
      }
      if (v42)
      {
        *v89 = v42;
        goto LABEL_147;
      }
    }
LABEL_8:
    v9 = *(_QWORD *)(a1 - 32);
    v10 = *(_QWORD *)(v9 + 8);
    if (v10 && !*(_QWORD *)(v10 + 8) && sub_1C579F01C(&v86, v9))
    {
      v11 = *(_QWORD *)(a1 - 64);
      goto LABEL_22;
    }
    goto LABEL_24;
  }
  if (*(_WORD *)(a1 + 18) != 14)
    goto LABEL_24;
  v12 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
  v13 = *(_QWORD *)(v12 + 8);
  if (v13)
  {
    if (!*(_QWORD *)(v13 + 8))
    {
      if (sub_1C579F01C(&v86, v12))
      {
        v14 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32);
        v15 = *(_QWORD *)(v14 + 8);
        if (v15)
        {
          if (!*(_QWORD *)(v15 + 8))
          {
            v43 = *(unsigned __int8 *)(v14 + 16);
            if (v43 == 5)
            {
              if (*(_WORD *)(v14 + 18) != 18)
                goto LABEL_18;
              v55 = (uint64_t **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
              if (*v55)
              {
                *v89 = *v55;
                v56 = *(uint64_t **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32);
                if (*v90 == v56)
                  goto LABEL_153;
              }
              else
              {
                v56 = v55[4];
              }
              if (!v56)
                goto LABEL_18;
              *v89 = v56;
              v44 = (uint64_t **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
            }
            else
            {
              if (v43 != 46)
                goto LABEL_18;
              v44 = (uint64_t **)(v14 - 64);
              v45 = *(uint64_t **)(v14 - 64);
              if (v45)
              {
                *v89 = v45;
                v46 = *(uint64_t **)(v14 - 32);
                if (*v90 == v46)
                  goto LABEL_153;
              }
              else
              {
                v46 = *(uint64_t **)(v14 - 32);
              }
              if (!v46)
                goto LABEL_18;
              *v89 = v46;
            }
            if (*v90 == *v44)
              goto LABEL_153;
          }
        }
      }
    }
  }
LABEL_18:
  v16 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32);
  v17 = *(_QWORD *)(v16 + 8);
  if (v17 && !*(_QWORD *)(v17 + 8) && sub_1C579F01C(&v86, v16))
  {
    v11 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
LABEL_22:
    v18 = *(_QWORD *)(v11 + 8);
    if (!v18 || *(_QWORD *)(v18 + 8))
      goto LABEL_24;
    v35 = *(unsigned __int8 *)(v11 + 16);
    if (v35 == 5)
    {
      if (*(_WORD *)(v11 + 18) != 18)
        goto LABEL_24;
      v47 = (uint64_t **)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      if (*v47)
      {
        *v89 = *v47;
        v48 = *(uint64_t **)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF) + 32);
        if (*v90 == v48)
          goto LABEL_153;
      }
      else
      {
        v48 = v47[4];
      }
      if (!v48)
        goto LABEL_24;
      *v89 = v48;
      v36 = (uint64_t **)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
    }
    else
    {
      if (v35 != 46)
        goto LABEL_24;
      v36 = (uint64_t **)(v11 - 64);
      v37 = *(uint64_t **)(v11 - 64);
      if (v37)
      {
        *v89 = v37;
        v38 = *(uint64_t **)(v11 - 32);
        if (*v90 == v38)
          goto LABEL_153;
      }
      else
      {
        v38 = *(uint64_t **)(v11 - 32);
      }
      if (!v38)
        goto LABEL_24;
      *v89 = v38;
    }
    if (*v90 != *v36)
      goto LABEL_24;
LABEL_153:
    LOWORD(v90) = 257;
    v75 = sub_1C4867680(a2, v93, (uint64_t)v92, a1, (uint64_t)&v86);
    LOWORD(v90) = 257;
    v76 = sub_1C4867450(a2, v91, v75, a1, (uint64_t)&v86);
    v77 = v92;
    LOWORD(v90) = 257;
    v78 = (char *)operator new(0x80uLL);
    *((_QWORD *)v78 + 5) = 0;
    v79 = v78 + 40;
    *((_QWORD *)v78 + 6) = 0;
    *((_QWORD *)v78 + 8) = *v77;
    v21 = (uint64_t ***)(v78 + 64);
    *((_QWORD *)v78 + 3) = v78 + 64;
    *((_QWORD *)v78 + 7) = v78 + 64;
    *((_QWORD *)v78 + 9) = 0;
    v78[80] = 42;
    v78[81] = 0;
    *((_WORD *)v78 + 41) = 0;
    *((_DWORD *)v78 + 21) = 2;
    *(_OWORD *)(v78 + 88) = 0u;
    *(_OWORD *)(v78 + 104) = 0u;
    *((_DWORD *)v78 + 30) = 0;
    *(_QWORD *)v78 = v77;
    v82 = v77[1];
    v81 = v77 + 1;
    v80 = v82;
    *((_QWORD *)v78 + 1) = v82;
    if (v82)
      *(_QWORD *)(v80 + 16) = v78 + 8;
    *((_QWORD *)v78 + 2) = v81;
    *v81 = v78;
    *((_QWORD *)v78 + 4) = v76;
    if (v76)
    {
      v85 = *(_QWORD *)(v76 + 8);
      v84 = (_QWORD *)(v76 + 8);
      v83 = v85;
      *v79 = v85;
      if (v85)
        *(_QWORD *)(v83 + 16) = v79;
      *((_QWORD *)v78 + 6) = v84;
      *v84 = v78 + 32;
    }
    goto LABEL_159;
  }
LABEL_24:
  v19 = *(_QWORD *)(a1 - 64);
  v20 = *(_QWORD *)(v19 + 8);
  if (!v20)
    return 0;
  if (*(_QWORD *)(v20 + 8))
    return 0;
  v23 = *(_QWORD *)(a1 - 32);
  v24 = *(_QWORD *)(v23 + 8);
  if (!v24 || *(_QWORD *)(v24 + 8))
    return 0;
  v25 = *(unsigned __int8 *)(v19 + 16);
  if (v25 == 46)
  {
    v26 = *(uint64_t **)(v19 - 64);
    if (!v26)
      return 0;
    v27 = *(_QWORD *)(v19 - 32);
    if (!v27)
      return 0;
    goto LABEL_33;
  }
  if (v25 != 49)
  {
    if (v25 != 5)
      return 0;
    v31 = *(unsigned __int16 *)(v19 + 18);
    if (v31 != 18)
      goto LABEL_128;
    v32 = *(_DWORD *)(v19 + 20) & 0x7FFFFFF;
    v33 = -v32;
    v34 = v19 - 32 * v32;
    v26 = *(uint64_t **)v34;
    if (!*(_QWORD *)v34)
      goto LABEL_79;
    v27 = *(_QWORD *)(v34 + 32);
    if (!v27)
      goto LABEL_79;
LABEL_33:
    v28 = *(unsigned __int8 *)(v23 + 16);
    if (v28 == 5)
    {
      if (*(_WORD *)(v23 + 18) == 18)
      {
        v49 = (uint64_t *)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
        v29 = *v49;
        v30 = v49[4];
        if (v29)
          v50 = v27 == v30;
        else
          v50 = 0;
        if (v50)
          goto LABEL_102;
LABEL_71:
        if (v30 && v27 == v29)
          goto LABEL_140;
      }
    }
    else if (v28 == 46)
    {
      v29 = *(_QWORD *)(v23 - 64);
      v30 = *(_QWORD *)(v23 - 32);
      if (v29 && v27 == v30)
        goto LABEL_102;
      goto LABEL_71;
    }
    if (v25 == 46)
    {
      v27 = *(_QWORD *)(v19 - 64);
      if (!v27)
        return 0;
      v26 = *(uint64_t **)(v19 - 32);
      if (!v26)
        return 0;
LABEL_81:
      v52 = *(unsigned __int8 *)(v23 + 16);
      if (v52 == 5)
      {
        if (*(_WORD *)(v23 + 18) == 18)
        {
          v57 = (uint64_t *)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
          v29 = *v57;
          v30 = v57[4];
          if (!v29)
            goto LABEL_124;
          goto LABEL_101;
        }
      }
      else if (v52 == 46)
      {
        v29 = *(_QWORD *)(v23 - 64);
        v30 = *(_QWORD *)(v23 - 32);
        if (!v29)
          goto LABEL_124;
LABEL_101:
        if (v27 == v30)
        {
LABEL_102:
          v58 = 1;
          goto LABEL_103;
        }
LABEL_124:
        if (!v30 || v27 != v29)
          goto LABEL_126;
LABEL_140:
        v58 = 1;
        v29 = v30;
        goto LABEL_103;
      }
LABEL_126:
      if (v25 != 5)
        return 0;
      v31 = *(unsigned __int16 *)(v19 + 18);
      goto LABEL_128;
    }
    v31 = *(unsigned __int16 *)(v19 + 18);
    if (v31 != 18)
    {
LABEL_128:
      if (v31 != 21)
        return 0;
      v71 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
      v26 = *(uint64_t **)v71;
      if (!*(_QWORD *)v71)
        return 0;
      v27 = *(_QWORD *)(v71 + 32);
      if (!v27)
        return 0;
      goto LABEL_131;
    }
    v33 = -(uint64_t)(*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
LABEL_79:
    v51 = (uint64_t *)(v19 + 32 * v33);
    v27 = *v51;
    if (!*v51)
      return 0;
    v26 = (uint64_t *)v51[4];
    if (!v26)
      return 0;
    goto LABEL_81;
  }
  v26 = *(uint64_t **)(v19 - 64);
  if (!v26)
    return 0;
  v27 = *(_QWORD *)(v19 - 32);
  if (!v27)
    return 0;
LABEL_131:
  v72 = *(unsigned __int8 *)(v23 + 16);
  if (v72 == 5)
  {
    if (*(_WORD *)(v23 + 18) != 21)
      return 0;
    v74 = (uint64_t *)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
    v29 = *v74;
    if (!*v74)
      return 0;
    v73 = v74[4];
  }
  else
  {
    if (v72 != 49)
      return 0;
    v29 = *(_QWORD *)(v23 - 64);
    if (!v29)
      return 0;
    v73 = *(_QWORD *)(v23 - 32);
  }
  if (v27 != v73)
    return 0;
  v58 = 0;
LABEL_103:
  if (*(_BYTE *)(a1 + 16) == 42)
  {
    LOWORD(v90) = 257;
    v59 = (unsigned __int8 *)sub_1C579E980(a2, v26, v29, a1, (uint64_t)&v86);
  }
  else
  {
    LOWORD(v90) = 257;
    v59 = (unsigned __int8 *)sub_1C4867680(a2, v26, v29, a1, (uint64_t)&v86);
  }
  v60 = v59;
  v93 = 0;
  v86 = (uint64_t *)&v93;
  v87 = 0;
  if (!sub_1C4E7A604((uint64_t)&v86, v59))
    goto LABEL_111;
  v61 = v93;
  if (!sub_1C4773C58((uint64_t)v93))
  {
    if ((_UNKNOWN *)v61[1] == &unk_1C866F1C0)
    {
      v62 = *(_BYTE *)(v61[2] + 28) & 7;
      if (v62 < 2)
        return 0;
    }
    else
    {
      v62 = *((_BYTE *)v61 + 28) & 7;
      if (v62 <= 1)
        return 0;
    }
    if (v62 != 3)
    {
LABEL_111:
      LOWORD(v90) = 257;
      v63 = (char *)operator new(0x80uLL);
      *((_QWORD *)v63 + 6) = 0;
      *((_QWORD *)v63 + 5) = 0;
      *((_QWORD *)v63 + 8) = *(_QWORD *)v60;
      v21 = (uint64_t ***)(v63 + 64);
      *((_QWORD *)v63 + 3) = v63 + 64;
      *((_QWORD *)v63 + 7) = v63 + 64;
      *((_QWORD *)v63 + 9) = 0;
      if (v58)
        v64 = 46;
      else
        v64 = 49;
      v63[80] = v64;
      v63[81] = 0;
      *((_WORD *)v63 + 41) = 0;
      *((_DWORD *)v63 + 21) = 2;
      *(_OWORD *)(v63 + 88) = 0u;
      *(_OWORD *)(v63 + 104) = 0u;
      *((_DWORD *)v63 + 30) = 0;
      *(_QWORD *)v63 = v60;
      v67 = *((_QWORD *)v60 + 1);
      v66 = v60 + 8;
      v65 = v67;
      *((_QWORD *)v63 + 1) = v67;
      if (v67)
        *(_QWORD *)(v65 + 16) = v63 + 8;
      *((_QWORD *)v63 + 2) = v66;
      *v66 = v63;
      *((_QWORD *)v63 + 4) = v27;
      v70 = *(_QWORD *)(v27 + 8);
      v69 = (_QWORD *)(v27 + 8);
      v68 = v70;
      *((_QWORD *)v63 + 5) = v70;
      if (v70)
        *(_QWORD *)(v68 + 16) = v63 + 40;
      *((_QWORD *)v63 + 6) = v69;
      *v69 = v63 + 32;
LABEL_159:
      llvm::Value::setName(v21, (uint64_t)&v86);
      llvm::Instruction::copyIRFlags((uint64_t)v21, a1, 1);
      return v21;
    }
  }
  return 0;
}

uint64_t sub_1C5798C50(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;
  int v5;
  int v6;
  int v7;
  int v8;
  _BOOL4 v9;
  unsigned int v10;
  int v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47[3];

  v47[2] = *MEMORY[0x1E0C80C00];
  if ((*(_DWORD *)(*(_QWORD *)a2 + 8) & 0xFE) == 0x12)
    return 0;
  *(_QWORD *)(a1 + 8) = a2;
  v45 = 0;
  v44 = 0;
  v41 = 0;
  v40 = 0;
  v37 = 0;
  v36 = 0;
  v33 = 0;
  v32 = 0;
  v29 = 0;
  v28 = 0;
  v25 = 0;
  v24 = 0;
  v5 = sub_1C579F290((uint64_t)a2, (uint64_t)&v44, (uint64_t)&v40);
  if (v44)
    v6 = sub_1C579FAA4((uint64_t)&v44, (unsigned __int8 *)&v36, (unsigned __int8 *)&v32);
  else
    v6 = 0;
  if (v5 == 2 && v40)
  {
    v7 = sub_1C579FAA4((uint64_t)&v40, (unsigned __int8 *)&v28, (unsigned __int8 *)&v24);
    v8 = v7;
    v9 = v6 != 0;
    if (v6 && v7)
    {
      v19 = &v21;
      v21 = &v36;
      v22 = &v28;
      v20 = 0x400000002;
      if (v6 == 2)
      {
        v23 = &v32;
        v10 = 3;
        LODWORD(v20) = 3;
      }
      else
      {
        v10 = 2;
      }
      if (v7 == 2)
      {
        (&v21)[v10] = &v24;
        LODWORD(v20) = v10 + 1;
      }
      v12 = a2[5];
      if ((v12 & 0x40000000) != 0)
        v13 = (_QWORD *)*((_QWORD *)a2 - 1);
      else
        v13 = &a2[-8 * (v12 & 0x7FFFFFF)];
      if (*(unsigned __int8 *)(*v13 + 16) >= 0x15u
        && (v14 = *(_QWORD *)(*v13 + 8)) != 0
        && !*(_QWORD *)(v14 + 8)
        && (v15 = v13[4], *(unsigned __int8 *)(v15 + 16) >= 0x15u))
      {
        v18 = *(_QWORD *)(v15 + 8);
        v16 = 1;
        if (v18)
        {
          if (*(_QWORD *)(v18 + 8))
            v16 = 1;
          else
            v16 = 2;
        }
      }
      else
      {
        v16 = 1;
      }
      v2 = sub_1C579FB38(a1, (unsigned int *)&v19, v16);
      if (v19 != &v21)
        free(v19);
      if (v2)
        goto LABEL_48;
      v9 = 1;
LABEL_36:
      v19 = &v21;
      v21 = &v44;
      v22 = &v28;
      v20 = 0x400000002;
      if (v8 == 2)
      {
        v23 = &v24;
        LODWORD(v20) = 3;
      }
      v2 = sub_1C579FB38(a1, (unsigned int *)&v19, 1uLL);
      if (v19 != &v21)
        free(v19);
      if (v2)
        goto LABEL_48;
      goto LABEL_41;
    }
    if (v7)
      goto LABEL_36;
LABEL_41:
    if (!v9)
      goto LABEL_47;
    v19 = &v21;
    v21 = &v40;
    v22 = &v36;
    v20 = 0x400000002;
    if (v6 == 2)
    {
      v23 = &v32;
      LODWORD(v20) = 3;
    }
    v2 = sub_1C579FB38(a1, (unsigned int *)&v19, 1uLL);
    if (v19 != &v21)
      free(v19);
    if (!v2)
LABEL_47:
      v2 = 0;
    goto LABEL_48;
  }
  v9 = v6 != 0;
  if (v5 == 2)
    goto LABEL_41;
  if (HIWORD(v45) == 1 && v45 == 0)
    v2 = v44;
  else
    v2 = 0;
LABEL_48:
  if (BYTE1(v25))
  {
    if ((_UNKNOWN *)v26 == &unk_1C866F1C0)
    {
      sub_1C4773C74(&v27);
    }
    else if ((*(_DWORD *)(v26 + 8) - 64) <= 0xFFFFFF7F && v27)
    {
      MEMORY[0x1CAA32F9C](v27, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v29))
  {
    if ((_UNKNOWN *)v30 == &unk_1C866F1C0)
    {
      sub_1C4773C74(&v31);
    }
    else if ((*(_DWORD *)(v30 + 8) - 64) <= 0xFFFFFF7F && v31)
    {
      MEMORY[0x1CAA32F9C](v31, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v33))
  {
    if ((_UNKNOWN *)v34 == &unk_1C866F1C0)
    {
      sub_1C4773C74(&v35);
    }
    else if ((*(_DWORD *)(v34 + 8) - 64) <= 0xFFFFFF7F && v35)
    {
      MEMORY[0x1CAA32F9C](v35, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v37))
  {
    if ((_UNKNOWN *)v38 == &unk_1C866F1C0)
    {
      sub_1C4773C74(&v39);
    }
    else if ((*(_DWORD *)(v38 + 8) - 64) <= 0xFFFFFF7F && v39)
    {
      MEMORY[0x1CAA32F9C](v39, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v41))
  {
    if ((_UNKNOWN *)v42 == &unk_1C866F1C0)
    {
      sub_1C4773C74(&v43);
    }
    else if ((*(_DWORD *)(v42 + 8) - 64) <= 0xFFFFFF7F && v43)
    {
      MEMORY[0x1CAA32F9C](v43, 0x1000C8000313F17);
    }
  }
  if (BYTE1(v45))
  {
    if ((_UNKNOWN *)v46 == &unk_1C866F1C0)
    {
      sub_1C4773C74(v47);
    }
    else if ((*(_DWORD *)(v46 + 8) - 64) <= 0xFFFFFF7F && v47[0])
    {
      MEMORY[0x1CAA32F9C](v47[0], 0x1000C8000313F17);
    }
  }
  return v2;
}

unsigned __int8 *sub_1C5799188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  llvm::Value **v17;
  llvm::Value *v18;
  int v19;
  llvm::Value **v20;
  llvm::Value *v21;
  unsigned __int8 *result;
  BOOL v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  llvm::Value **v41;
  unsigned __int8 *v42;
  llvm::Value **v43;
  int v44;
  uint64_t v45;
  uint64_t *v46;
  llvm::Value **v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[4];
  __int16 v51;

  v7 = a3;
  v9 = *(unsigned __int8 *)(a2 + 16);
  if (v9 == 62 || v9 == 5 && *(_WORD *)(a2 + 18) == 34)
  {
    v10 = 0;
    v11 = a2;
  }
  else
  {
    v12 = *(unsigned __int8 *)(a3 + 16);
    if (v12 == 62 || v12 == 5 && *(_WORD *)(a3 + 18) == 34)
    {
      v10 = 1;
      v9 = *(unsigned __int8 *)(a3 + 16);
      v11 = a3;
    }
    else
    {
      v10 = 0;
      v11 = a2;
      a2 = a3;
    }
    if (v9 == 62)
    {
      v7 = a2;
    }
    else
    {
      if (v9 != 5)
        return 0;
      v7 = a2;
      if (*(_WORD *)(v11 + 18) != 34)
        return 0;
    }
  }
  v13 = *(_DWORD *)(v11 + 20);
  if ((v13 & 0x40000000) != 0)
    v14 = *(uint64_t **)(v11 - 8);
  else
    v14 = (uint64_t *)(v11 - 32 * (v13 & 0x7FFFFFF));
  v15 = *v14;
  if (*v14 == v7)
  {
    v24 = 0;
    goto LABEL_60;
  }
  v16 = *(unsigned __int8 *)(v7 + 16);
  if (v16 != 62 && (v16 != 5 || *(_WORD *)(v7 + 18) != 34))
    return 0;
  if ((v13 & 0x40000000) != 0)
    v17 = *(llvm::Value ***)(v11 - 8);
  else
    v17 = (llvm::Value **)(v11 - 32 * (v13 & 0x7FFFFFF));
  v18 = llvm::Value::stripPointerCasts(*v17);
  v19 = *(_DWORD *)(v7 + 20);
  if ((v19 & 0x40000000) != 0)
    v20 = *(llvm::Value ***)(v7 - 8);
  else
    v20 = (llvm::Value **)(v7 - 32 * (v19 & 0x7FFFFFF));
  v21 = llvm::Value::stripPointerCasts(*v20);
  result = 0;
  v23 = v18 == v21;
  if (v18 == v21)
    v24 = v7;
  else
    v24 = 0;
  if (v23)
  {
    v25 = *(_DWORD *)(v11 + 20);
    if ((v25 & 0x40000000) != 0)
    {
      v27 = *(_QWORD *)(v11 - 8);
      v26 = v25 & 0x7FFFFFF;
    }
    else
    {
      v26 = v25 & 0x7FFFFFF;
      v27 = v11 - 32 * v26;
    }
    if (v26 == 1)
    {
      v28 = 0;
    }
    else
    {
      v28 = 0;
      v29 = (uint64_t *)(v27 + 32);
      v30 = 32 * v26 - 32;
      do
      {
        v31 = *v29;
        v29 += 4;
        if (*(_BYTE *)(v31 + 16) != 16)
          ++v28;
        v30 -= 32;
      }
      while (v30);
    }
    v32 = *(_DWORD *)(v24 + 20);
    if ((v32 & 0x40000000) != 0)
    {
      v34 = *(_QWORD *)(v24 - 8);
      v33 = v32 & 0x7FFFFFF;
    }
    else
    {
      v33 = v32 & 0x7FFFFFF;
      v34 = v24 - 32 * v33;
    }
    if (v33 == 1)
    {
      v35 = 0;
    }
    else
    {
      v35 = 0;
      v36 = (uint64_t *)(v34 + 32);
      v37 = 32 * v33 - 32;
      do
      {
        v38 = *v36;
        v36 += 4;
        if (*(_BYTE *)(v38 + 16) != 16)
          ++v35;
        v37 -= 32;
      }
      while (v37);
    }
    if ((v35 + v28) >= 2)
    {
      if (v28)
      {
        v39 = *(_QWORD *)(v11 + 8);
        if (!v39 || *(_QWORD *)(v39 + 8))
          return 0;
      }
      if (v35)
      {
        v40 = *(_QWORD *)(v24 + 8);
        if (!v40)
          return 0;
        v24 = v7;
        if (*(_QWORD *)(v40 + 8))
          return 0;
      }
    }
LABEL_60:
    v41 = sub_1C61A3B04(*(_QWORD *)(a1 + 24), *(llvm::DataLayout **)(a1 + 80), (llvm::GEPOperator *)v11, 0);
    v42 = (unsigned __int8 *)v41;
    if (*((unsigned __int8 *)v41 + 16) <= 0x1Bu)
      v43 = 0;
    else
      v43 = v41;
    v44 = a5 ^ 1;
    if (!v43)
      v44 = 1;
    if (v15 != v7)
      v44 = 1;
    if (((v10 | v44) & 1) == 0 && (*(_BYTE *)(v11 + 17) & 2) != 0 && *((_BYTE *)v43 + 16) == 45)
      *((_BYTE *)v43 + 17) |= 2u;
    if (v15 == v7)
    {
      if (!v10)
      {
LABEL_74:
        v46 = *(uint64_t **)(a1 + 24);
        v51 = 257;
        return sub_1C4D8D514(v46, v42, a4, 1, (uint64_t)v50);
      }
    }
    else
    {
      v47 = sub_1C61A3B04(*(_QWORD *)(a1 + 24), *(llvm::DataLayout **)(a1 + 80), (llvm::GEPOperator *)v24, 0);
      v48 = 0;
      v49 = *(_QWORD *)(a1 + 24);
      v50[0] = "gepdiff";
      v51 = 259;
      if ((*(_BYTE *)(v11 + 17) & 2) != 0)
        v48 = (*(unsigned __int8 *)(v24 + 17) >> 1) & 1;
      v42 = (unsigned __int8 *)sub_1C47733F8(v49, (uint64_t)v42, (uint64_t)v47, (uint64_t)v50, 0, v48);
      if (!v10)
        goto LABEL_74;
    }
    v45 = *(_QWORD *)(a1 + 24);
    v50[0] = "diff.neg";
    v51 = 259;
    v42 = sub_1C5346748(v45, (uint64_t)v42, (uint64_t)v50, 0, 0);
    goto LABEL_74;
  }
  return result;
}

llvm::UndefValue **sub_1C5799508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  llvm::Value *v9;
  uint64_t v11;
  std::string::size_type v13;
  uint64_t ***v14;
  llvm::UndefValue *v15;
  llvm::UndefValue *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  uint64_t *v30;
  int v31;
  int v32;
  uint64_t i;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  void **v48;
  const llvm::DominatorTree *v49;
  uint64_t v50;
  char v51;
  int v52;
  int v53;
  int v54;
  char *v55;
  uint64_t ***v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t **v60;
  _QWORD *v61;
  uint64_t **v62;
  llvm::ValueHandleBase *Sub;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  std::string::size_type v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t **v74;
  _BOOL8 v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  _QWORD *v83;
  std::string::size_type v84;
  int v85;
  unsigned int v86;
  std::string::size_type v87;
  uint64_t v88;
  _QWORD *v89;
  std::string::size_type v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t **v99;
  uint64_t v100;
  int v101;
  llvm::Value **v102;
  uint64_t *Add;
  int v104;
  llvm::Value **v105;
  void *v106;
  _QWORD *v107;
  llvm::Value **v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  char v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  int v123;
  unsigned __int8 *v124;
  unsigned int v125;
  unsigned __int8 *v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  std::string::size_type *v133;
  uint64_t v134;
  char *v135;
  uint64_t ***v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t **v141;
  _QWORD *v142;
  uint64_t **v143;
  char *v144;
  _QWORD *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  std::string *v152;
  int v153;
  std::string::size_type v154;
  unsigned __int8 **v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD ***v161;
  const void **v162;
  uint64_t v163;
  char v164;
  llvm::Value *v165;
  int v166;
  uint64_t *v167;
  uint64_t *v168;
  BOOL v169;
  uint64_t **v170;
  int v171;
  uint64_t ****v172;
  uint64_t **v173;
  uint64_t **v174;
  uint64_t ***v175;
  size_t v176;
  char *v177;
  uint64_t v178;
  std::string::size_type v179;
  char *v180;
  std::string::size_type *v181;
  _QWORD *v182;
  uint64_t **v183;
  uint64_t v184;
  uint64_t **v185;
  uint64_t **v186;
  std::string *p_dst;
  int v188;
  std::string::size_type v189;
  int v190;
  uint64_t ***v191;
  char *v192;
  char *v193;
  char v194;
  int v195;
  std::string::size_type v196;
  std::string::size_type v197;
  int v198;
  uint64_t **v199;
  uint64_t **v200;
  uint64_t **v201;
  uint64_t v202;
  uint64_t ***v203;
  uint64_t **v204;
  std::string::size_type v205;
  uint64_t **v206;
  uint64_t **v207;
  uint64_t ***v208;
  char *v209;
  uint64_t *v210;
  _QWORD *v211;
  uint64_t *v212;
  uint64_t *v213;
  _QWORD *v214;
  uint64_t *v215;
  std::string::size_type *v216;
  std::string::size_type *v217;
  std::string::size_type v218;
  uint64_t **v219;
  uint64_t **v220;
  uint64_t ***v221;
  uint64_t **v222;
  uint64_t **v223;
  uint64_t ***v224;
  uint64_t **v225;
  uint64_t **v226;
  uint64_t **v227;
  uint64_t v228;
  uint64_t ***v229;
  uint64_t **v230;
  std::string::size_type v231;
  uint64_t **v232;
  uint64_t **v233;
  uint64_t *v234;
  _QWORD *v235;
  uint64_t *v236;
  _QWORD *v237;
  uint64_t *v238;
  uint64_t ***v239;
  uint64_t **v240;
  uint64_t v241;
  uint64_t **v242;
  uint64_t *v243;
  uint64_t v244;
  int v245;
  uint64_t *v246;
  uint64_t *v247;
  uint64_t ***v248;
  uint64_t ***v249;
  int v250;
  uint64_t v251;
  int v252;
  uint64_t v253;
  uint64_t **v254;
  uint64_t **v255;
  int v256;
  int v257;
  uint64_t *v258;
  llvm::Value *Intrinsic;
  llvm::Constant *v260;
  uint64_t v261;
  uint64_t v262;
  std::string::size_type v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t ****v269;
  uint64_t ***v270;
  int v271;
  int v272;
  uint64_t ****v273;
  uint64_t *v274;
  uint64_t v275;
  int v276;
  llvm::Type *v277;
  uint64_t **v278;
  uint64_t ****v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int v284;
  uint64_t v285;
  std::string::size_type *v286;
  uint64_t *v287;
  int v288;
  std::string::size_type *v289;
  std::string::size_type *v290;
  uint64_t v291;
  _QWORD *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD *v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  uint64_t v303;
  char *v304;
  uint64_t ***v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  uint64_t v309;
  uint64_t **v310;
  _QWORD *v311;
  uint64_t **v312;
  char *v313;
  _QWORD *v314;
  uint64_t v315;
  _QWORD *v316;
  uint64_t v317;
  uint64_t v318;
  _QWORD *v319;
  uint64_t v320;
  uint64_t *v321;
  uint64_t ***v322;
  uint64_t **v323;
  int v324;
  uint64_t ***v325;
  char *v326;
  uint64_t **v327;
  uint64_t **v328;
  uint64_t v329;
  char *v330;
  uint64_t *v331;
  uint64_t **v332;
  _QWORD *v333;
  uint64_t **v334;
  uint64_t v335;
  uint64_t **v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  llvm::Type *v341;
  llvm::Value **NullValue;
  uint64_t *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t **v346;
  uint64_t v347;
  int v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  llvm::Type *v352;
  llvm::Value **v353;
  uint64_t *v354;
  uint64_t v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t *v359;
  uint64_t v360;
  uint64_t **v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t *v367;
  uint64_t v368;
  int v369;
  int v370;
  uint64_t v371;
  int v372;
  uint64_t ****v373;
  uint64_t **v374;
  uint64_t *v375;
  int v376;
  std::string::size_type v377;
  int v378;
  uint64_t v379;
  int v380;
  int v381;
  uint64_t v382;
  _BOOL8 v383;
  uint64_t **v384;
  int v385;
  int v386;
  uint64_t v387;
  _BOOL8 v388;
  _QWORD *v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  char *v394;
  _QWORD *v395;
  uint64_t v396;
  uint64_t v397;
  _QWORD *v398;
  uint64_t v399;
  uint64_t ***v400;
  llvm::Type *v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  int v405;
  llvm::APInt *v406;
  llvm::Type *v407;
  llvm::Type *v408;
  int PrimitiveSizeInBits;
  unsigned int v410;
  uint64_t v411;
  int v412;
  uint64_t ***v413;
  uint64_t ***v414;
  uint64_t v415;
  _QWORD *v416;
  std::string::size_type v417;
  char *v418;
  _QWORD *v419;
  uint64_t v420;
  _QWORD *v421;
  uint64_t v422;
  uint64_t v423;
  _QWORD *v424;
  uint64_t v425;
  uint64_t v426;
  int v427;
  const llvm::APInt *v428;
  int v429;
  _QWORD *v430;
  char v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  int v436;
  unint64_t v438;
  unsigned int v439;
  int v440;
  uint64_t v441;
  unint64_t v442;
  llvm::Constant *v443;
  size_t v444;
  llvm::Value **v445;
  char *v446;
  llvm::Value ***v447;
  uint64_t v448;
  llvm::Value *v449;
  llvm::Value ****v450;
  llvm::Value *v451;
  uint64_t **v452;
  uint64_t *v453;
  std::string *v454;
  std::string *v455;
  int v456;
  uint64_t **v457;
  uint64_t v458;
  uint64_t *v459;
  uint64_t *v460;
  llvm::Value *Neg;
  unsigned int v462;
  uint64_t **v463;
  _BOOL4 v464;
  uint64_t v465;
  llvm::Value *v466;
  const llvm::DominatorTree *v467;
  llvm::Value *v468;
  char v469;
  int v470;
  int v471;
  uint64_t v472;
  uint64_t ***v473;
  llvm::ValueHandleBase *AllOnesValue;
  uint64_t v475;
  char *v476;
  _QWORD *v477;
  uint64_t v478;
  uint64_t **v479;
  _QWORD *v480;
  uint64_t **v481;
  uint64_t v482;
  _QWORD *v483;
  uint64_t v484;
  uint64_t ****v485;
  uint64_t v486;
  llvm::Value **v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  void *v497;
  int v498;
  _QWORD *v499;
  llvm::APInt *v500;
  llvm::APInt *v501;
  uint64_t ***v502;
  __int128 v503;
  __int128 v504;
  std::string::size_type *v505;
  std::string::size_type *v506;
  _QWORD ***v507;
  std::string::size_type *v508;
  llvm::APInt *v509;
  _QWORD *v510;
  _QWORD *v511;
  void *__p[2];
  char v513;
  int v514;
  __int16 v515;
  std::string::size_type v516;
  std::string::size_type v517;
  uint64_t ***v518;
  uint64_t ***v519;
  uint64_t v520;
  llvm::Constant *v521;
  unsigned int v522;
  __int16 v523;
  std::string __dst;
  unsigned int v525;
  __int16 v526;
  uint64_t v527;

  v527 = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(a2 - 64);
  v5 = *(_QWORD *)(a2 - 32);
  v6 = *(unsigned __int8 *)(a2 + 17);
  v7 = *(_OWORD *)(a1 + 120);
  v8 = *(_OWORD *)(a1 + 104);
  v503 = *(_OWORD *)(a1 + 88);
  v504 = v8;
  v506 = (std::string::size_type *)*((_QWORD *)&v7 + 1);
  v505 = (std::string::size_type *)a2;
  v9 = (llvm::Value *)sub_1C4E62F88(v4, v5, (v6 >> 2) & 1, (v6 >> 1) & 1, (uint64_t)&v503, (llvm::DSOLocalEquivalent **)3);
  if (v9)
    return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v9);
  v11 = sub_1C57826B8(a1, (unsigned __int8 *)a2);
  if (!v11)
  {
    v11 = (uint64_t)sub_1C578171C(a1, a2);
    if (!v11)
    {
      v13 = *(_QWORD *)(a2 - 64);
      v14 = *(uint64_t ****)(a2 - 32);
      v15 = sub_1C577FA08(a1, (llvm::Constant **)v14);
      if (v15)
      {
        v16 = v15;
        LOWORD(v505) = 257;
        v17 = (char *)operator new(0x80uLL);
        v18 = v17;
        *((_QWORD *)v17 + 6) = 0;
        *((_QWORD *)v17 + 8) = *(_QWORD *)v13;
        v11 = (uint64_t)(v17 + 64);
        *((_QWORD *)v17 + 3) = v17 + 64;
        *((_QWORD *)v17 + 7) = v17 + 64;
        *((_QWORD *)v17 + 9) = 0;
        v17[80] = 41;
        v17[81] = 0;
        *((_WORD *)v17 + 41) = 0;
        *((_DWORD *)v17 + 21) = 2;
        *(_OWORD *)(v17 + 88) = 0u;
        *(_OWORD *)(v17 + 104) = 0u;
        *((_DWORD *)v17 + 30) = 0;
        *(_QWORD *)v17 = v13;
        v21 = *(_QWORD *)(v13 + 8);
        v20 = (_QWORD *)(v13 + 8);
        v19 = v21;
        *((_QWORD *)v17 + 1) = v21;
        if (v21)
          *(_QWORD *)(v19 + 16) = v17 + 8;
        *((_QWORD *)v17 + 2) = v20;
        *v20 = v17;
        v22 = (_QWORD *)((char *)v16 + 8);
        v23 = *((_QWORD *)v16 + 1);
        *((_QWORD *)v17 + 5) = v23;
        *((_QWORD *)v17 + 4) = v16;
        if (v23)
          *(_QWORD *)(v23 + 16) = v17 + 40;
        *((_QWORD *)v17 + 6) = v22;
        *v22 = v17 + 32;
        llvm::Value::setName((uint64_t ***)v17 + 8, (uint64_t)&v503);
        if (v14 && (v24 = *((unsigned __int8 *)v14 + 16), v24 >= 0x1C) && v24 - 59 >= 0xFFFFFFEE)
        {
          if ((*((_BYTE *)v14 + 17) & 4) == 0)
            return (llvm::UndefValue **)v11;
        }
        else if (!llvm::Constant::isNotMinSignedValue((unint64_t)v14))
        {
          return (llvm::UndefValue **)v11;
        }
        if ((*(_BYTE *)(a2 + 17) & 4) != 0)
          v18[81] |= 4u;
        return (llvm::UndefValue **)v11;
      }
      v11 = (uint64_t)sub_1C5797778(a2, *(_QWORD *)(a1 + 24));
      if (v11)
        return (llvm::UndefValue **)v11;
      if (v13)
      {
        v25 = *(unsigned __int8 *)(v13 + 16);
        if (v25 <= 0x14 && v25 != 5)
        {
          v26 = *((unsigned __int8 *)v14 + 16);
          if (v26 != 5)
          {
            if (v26 != 41)
              goto LABEL_35;
            v27 = (uint64_t)*(v14 - 8);
            if (!v27)
              goto LABEL_35;
            v28 = (unsigned __int8 *)*(v14 - 4);
            v29 = v28[16];
            if (v29 == 5 || !v28 || v29 > 0x14)
              goto LABEL_35;
LABEL_74:
            Sub = llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v13, (llvm::Constant *)v28, 0, 0);
            LOWORD(v505) = 257;
            v64 = (char *)operator new(0x80uLL);
            *((_QWORD *)v64 + 6) = 0;
            *((_QWORD *)v64 + 8) = *(_QWORD *)Sub;
            v11 = (uint64_t)(v64 + 64);
            *((_QWORD *)v64 + 3) = v64 + 64;
            *((_QWORD *)v64 + 7) = v64 + 64;
            *((_QWORD *)v64 + 9) = 0;
            v64[80] = 43;
            v64[81] = 0;
            *((_WORD *)v64 + 41) = 0;
            *((_DWORD *)v64 + 21) = 2;
            *(_OWORD *)(v64 + 88) = 0u;
            *(_OWORD *)(v64 + 104) = 0u;
            *((_DWORD *)v64 + 30) = 0;
            *(_QWORD *)v64 = Sub;
            v67 = *((_QWORD *)Sub + 1);
            v66 = (_QWORD *)((char *)Sub + 8);
            v65 = v67;
            *((_QWORD *)v64 + 1) = v67;
            if (v67)
              *(_QWORD *)(v65 + 16) = v64 + 8;
            *((_QWORD *)v64 + 2) = v66;
            *v66 = v64;
            v68 = (_QWORD *)(v27 + 8);
            v69 = *(_QWORD *)(v27 + 8);
            *((_QWORD *)v64 + 5) = v69;
            *((_QWORD *)v64 + 4) = v27;
            if (v69)
              *(_QWORD *)(v69 + 16) = v64 + 40;
            *((_QWORD *)v64 + 6) = v68;
            *v68 = v64 + 32;
            goto LABEL_57;
          }
          if (*((_WORD *)v14 + 9) == 13)
          {
            v30 = (uint64_t *)&v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
            v27 = *v30;
            if (*v30)
            {
              v28 = (unsigned __int8 *)v30[4];
              if (v28)
              {
                if (v28[16] != 5)
                  goto LABEL_74;
              }
            }
          }
        }
      }
LABEL_35:
      v31 = sub_1C4D8AC3C((uint64_t)&v503, (llvm::Constant *)v13);
      v32 = v31;
      if (v31)
      {
        for (i = *(_QWORD *)(a2 + 8); i; i = *(_QWORD *)(i + 8))
        {
          v34 = *(_QWORD *)(i + 24);
          if (v34 && *(_BYTE *)(v34 + 16) == 85)
          {
            v35 = *(_DWORD *)(v34 + 20);
            if ((v35 & 0x40000000) != 0)
            {
              v37 = *(_QWORD *)(v34 - 8);
              if (*(uint64_t ****)(v37 + 32) == v14 && *(_QWORD *)(v37 + 64) == a2)
                goto LABEL_59;
              v36 = *(_QWORD *)(v34 - 8);
            }
            else
            {
              v36 = v34 - 32 * (v35 & 0x7FFFFFF);
              if (*(uint64_t ****)(v36 + 32) == v14 && *(_QWORD *)(v36 + 64) == a2)
                goto LABEL_59;
            }
            if (*(_QWORD *)(v36 + 32) == a2 && *(uint64_t ****)(v36 + 64) == v14)
              goto LABEL_59;
          }
        }
      }
      v38 = llvm::Negator::Negate(v31, (llvm::Value *)v14, (_QWORD *)a1);
      if (v38)
      {
        v39 = (_QWORD *)v38;
        LOWORD(v505) = 257;
        v40 = (char *)operator new(0x80uLL);
        *((_QWORD *)v40 + 5) = 0;
        v41 = v40 + 40;
        *((_QWORD *)v40 + 6) = 0;
        *((_QWORD *)v40 + 8) = *v39;
        v11 = (uint64_t)(v40 + 64);
        *((_QWORD *)v40 + 3) = v40 + 64;
        *((_QWORD *)v40 + 7) = v40 + 64;
        *((_QWORD *)v40 + 9) = 0;
        v40[80] = 41;
        v40[81] = 0;
        *((_WORD *)v40 + 41) = 0;
        *((_DWORD *)v40 + 21) = 2;
        *(_OWORD *)(v40 + 88) = 0u;
        *(_OWORD *)(v40 + 104) = 0u;
        *((_DWORD *)v40 + 30) = 0;
        *(_QWORD *)v40 = v39;
        v44 = v39[1];
        v43 = v39 + 1;
        v42 = v44;
        *((_QWORD *)v40 + 1) = v44;
        if (v44)
          *(_QWORD *)(v42 + 16) = v40 + 8;
        *((_QWORD *)v40 + 2) = v43;
        *v43 = v40;
        *((_QWORD *)v40 + 4) = v13;
        if (v13)
        {
          v47 = *(_QWORD *)(v13 + 8);
          v46 = (_QWORD *)(v13 + 8);
          v45 = v47;
          *v41 = v47;
          if (v47)
            *(_QWORD *)(v45 + 16) = v41;
          *((_QWORD *)v40 + 6) = v46;
          *v46 = v40 + 32;
        }
LABEL_57:
        v48 = (void **)&v503;
LABEL_58:
        llvm::Value::setName((uint64_t ***)v11, (uint64_t)v48);
        return (llvm::UndefValue **)v11;
      }
LABEL_59:
      if (v32)
      {
        sub_1C57833C8((_QWORD *)a1, (unsigned __int8 *)a2);
        v11 = v50;
        if (!v50)
        {
          v51 = *(_BYTE *)(a2 + 17);
          if ((v51 & 4) != 0
            || (v52 = llvm::computeOverflowForSignedSub((llvm *)v13, (const llvm::Value *)v14, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v49), v51 = *(_BYTE *)(a2 + 17), v52 != 3))
          {
            v53 = 0;
          }
          else
          {
            v51 |= 4u;
            *(_BYTE *)(a2 + 17) = v51;
            v53 = 1;
          }
          if ((v51 & 2) != 0
            || llvm::computeOverflowForUnsignedSub((llvm *)v13, (const llvm::Value *)v14, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v49) != 3)
          {
            if (!v53)
              return 0;
          }
          else
          {
            *(_BYTE *)(a2 + 17) |= 2u;
          }
          return (llvm::UndefValue **)a2;
        }
        return (llvm::UndefValue **)v11;
      }
      v9 = sub_1C577ECF0(a1, (unsigned __int8 *)a2);
      if (v9)
        return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v9);
      v54 = *(_DWORD *)(*(_QWORD *)a2 + 8);
      if ((v54 & 0xFE) == 0x12)
        v54 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)a2 + 16) + 8);
      if (v54 == 269)
      {
        LOWORD(v505) = 257;
        v55 = (char *)operator new(0x80uLL);
        *((_QWORD *)v55 + 5) = 0;
        v56 = (uint64_t ***)(v55 + 40);
        *((_QWORD *)v55 + 6) = 0;
        *((_QWORD *)v55 + 8) = *(_QWORD *)v13;
        v11 = (uint64_t)(v55 + 64);
        *((_QWORD *)v55 + 3) = v55 + 64;
        *((_QWORD *)v55 + 7) = v55 + 64;
        *((_QWORD *)v55 + 9) = 0;
        v55[80] = 58;
        v55[81] = 0;
        *((_WORD *)v55 + 41) = 0;
        *((_DWORD *)v55 + 21) = 2;
        *(_OWORD *)(v55 + 88) = 0u;
        *(_OWORD *)(v55 + 104) = 0u;
        *((_DWORD *)v55 + 30) = 0;
        *(_QWORD *)v55 = v13;
        v59 = *(_QWORD *)(v13 + 8);
        v58 = (_QWORD *)(v13 + 8);
        v57 = v59;
        *((_QWORD *)v55 + 1) = v59;
        if (v59)
          *(_QWORD *)(v57 + 16) = v55 + 8;
        *((_QWORD *)v55 + 2) = v58;
        *v58 = v55;
        *((_QWORD *)v55 + 4) = v14;
        if (v14)
        {
          v62 = v14[1];
          v61 = v14 + 1;
          v60 = v62;
          *v56 = v62;
          if (v62)
            v60[2] = (uint64_t *)v56;
          *((_QWORD *)v55 + 6) = v61;
          *v61 = v55 + 32;
        }
        goto LABEL_57;
      }
      if (sub_1C4D9ED34((uint64_t)&v503, (llvm::Constant *)v13))
      {
        LOWORD(v505) = 257;
        return (llvm::UndefValue **)llvm::BinaryOperator::CreateNot((uint64_t)v14, (llvm::Type *)&v503, 0);
      }
      v516 = 0;
      v517 = 0;
      *(_QWORD *)&v503 = &v517;
      v71 = v13 + 8;
      v70 = *(_QWORD *)(v13 + 8);
      if (!v70 || *(_QWORD *)(v70 + 8))
      {
LABEL_90:
        v72 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) + 56) + 40) + 216;
        LOWORD(v505) = 260;
        *(_QWORD *)&v503 = v72;
        llvm::Triple::Triple((uint64_t)__p, (llvm::Twine *)&v503);
        if (!*(_QWORD *)v71 || *(_QWORD *)(*(_QWORD *)v71 + 8))
        {
          v73 = 0;
LABEL_93:
          if (!sub_1C579CB78(v13, v73)
            || ((v74 = v14[1]) == 0 ? (v75 = 0) : (v75 = v74[1] == 0),
                !sub_1C579CB78((uint64_t)v14, v75)))
          {
LABEL_131:
            v510 = 0;
            v511 = 0;
            LODWORD(v503) = 317;
            *((_QWORD *)&v503 + 1) = 0;
            *(_QWORD *)&v504 = &v511;
            if (*(_QWORD *)v71)
            {
              if (!*(_QWORD *)(*(_QWORD *)v71 + 8) && sub_1C4E75A6C((uint64_t)&v503, v13))
              {
                LODWORD(__dst.__r_.__value_.__l.__data_) = 317;
                __dst.__r_.__value_.__l.__size_ = 0;
                __dst.__r_.__value_.__r.__words[2] = (std::string::size_type)&v510;
                v99 = v14[1];
                if (v99)
                {
                  if (!v99[1] && sub_1C4E75A6C((uint64_t)&__dst, (uint64_t)v14) && *v511 == *v510)
                  {
                    v285 = *(_QWORD *)(a1 + 24);
                    LOWORD(v505) = 257;
                    v286 = (std::string::size_type *)sub_1C47733F8(v285, (uint64_t)v511, (uint64_t)v510, (uint64_t)&v503, 0, 0);
                    v287 = *(uint64_t **)(a1 + 24);
                    __dst.__r_.__value_.__r.__words[0] = *v286;
                    v521 = (llvm::Constant *)v286;
                    LOWORD(v505) = 257;
                    Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateIntrinsic(v287, 317, (uint64_t *)&__dst, 1, (uint64_t *)&v521, 1, 0, (uint64_t)&v503);
                    goto LABEL_637;
                  }
                }
              }
            }
            if (v13 && *(unsigned __int8 *)(v13 + 16) <= 0x14u)
            {
              __dst.__r_.__value_.__r.__words[0] = 0;
              *(_QWORD *)&v503 = &__dst;
              if (sub_1C4B0378C((_QWORD **)&v503, (uint64_t)v14))
              {
                v100 = __dst.__r_.__value_.__r.__words[0];
                v101 = *(_DWORD *)(*(_QWORD *)__dst.__r_.__value_.__l.__data_ + 8);
                if ((v101 & 0xFE) == 0x12)
                  v101 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)__dst.__r_.__value_.__l.__data_ + 16) + 8);
                if (v101 == 269)
                {
                  v102 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v13, 1, 0);
                  Add = (uint64_t *)llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v13, (llvm::Constant *)v102, 0, 0);
LABEL_150:
                  LOWORD(v505) = 257;
                  v106 = sub_1C4FC8748(v100, Add, v13, (uint64_t)&v503, 0, 0);
LABEL_638:
                  v11 = (uint64_t)v106;
                  goto LABEL_639;
                }
              }
              *(_QWORD *)&v503 = &__dst;
              if (sub_1C4B037F8((_QWORD **)&v503, (uint64_t)v14))
              {
                v100 = __dst.__r_.__value_.__r.__words[0];
                v104 = *(_DWORD *)(*(_QWORD *)__dst.__r_.__value_.__l.__data_ + 8);
                if ((v104 & 0xFE) == 0x12)
                  v104 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)__dst.__r_.__value_.__l.__data_ + 16) + 8);
                if (v104 == 269)
                {
                  v105 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v13, 1, 0);
                  Add = (uint64_t *)llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v13, (llvm::Constant *)v105, 0, 0);
                  goto LABEL_150;
                }
              }
              *(_QWORD *)&v503 = &__dst;
              if (sub_1C4D9EC28((_QWORD **)&v503, 30, (uint64_t)v14))
              {
                v107 = (_QWORD *)__dst.__r_.__value_.__r.__words[0];
                v108 = llvm::ConstantInt::get(*(llvm::ConstantInt **)v13, 1, 0);
                v109 = (uint64_t)llvm::ConstantExpr::getAdd((llvm::ConstantExpr *)v13, (llvm::Constant *)v108, 0, 0);
                LOWORD(v505) = 257;
                v110 = (char *)operator new(0x80uLL);
                *((_QWORD *)v110 + 5) = 0;
                v111 = v110 + 40;
                *((_QWORD *)v110 + 6) = 0;
                *((_QWORD *)v110 + 8) = *v107;
                v11 = (uint64_t)(v110 + 64);
                *((_QWORD *)v110 + 3) = v110 + 64;
                *((_QWORD *)v110 + 7) = v110 + 64;
                *((_QWORD *)v110 + 9) = 0;
                v112 = 41;
LABEL_153:
                v110[80] = v112;
                v110[81] = 0;
                *((_WORD *)v110 + 41) = 0;
                *((_DWORD *)v110 + 21) = 2;
                *(_OWORD *)(v110 + 88) = 0u;
                *(_OWORD *)(v110 + 104) = 0u;
                *((_DWORD *)v110 + 30) = 0;
                *(_QWORD *)v110 = v107;
                v115 = v107[1];
                v114 = v107 + 1;
                v113 = v115;
                *((_QWORD *)v110 + 1) = v115;
                if (v115)
                  *(_QWORD *)(v113 + 16) = v110 + 8;
                *((_QWORD *)v110 + 2) = v114;
                *v114 = v110;
LABEL_156:
                *((_QWORD *)v110 + 4) = v109;
                if (v109)
                {
                  v118 = *(_QWORD *)(v109 + 8);
                  v117 = (_QWORD *)(v109 + 8);
                  v116 = v118;
                  *v111 = v118;
                  if (v118)
                    *(_QWORD *)(v116 + 16) = v111;
                  *((_QWORD *)v110 + 6) = v117;
                  *v117 = v110 + 32;
                }
                goto LABEL_204;
              }
              v123 = *((unsigned __int8 *)v14 + 16);
              if (v14 && v123 == 85)
              {
                v11 = sub_1C577FF7C(a1, (_BYTE *)a2, v14, 0);
                if (v11)
                  goto LABEL_639;
                v123 = *((unsigned __int8 *)v14 + 16);
              }
              if (v123 == 83)
              {
                v11 = (uint64_t)sub_1C57808D4(a1, (llvm::Instruction *)a2, (uint64_t)v14);
                if (v11)
                  goto LABEL_639;
                v123 = *((unsigned __int8 *)v14 + 16);
              }
              if (v123 != 5)
              {
                if (v123 != 43)
                  goto LABEL_219;
                v124 = (unsigned __int8 *)*(v14 - 8);
                v125 = v124[16];
                if (v125 == 5)
                  goto LABEL_219;
                if (!v124)
                  goto LABEL_219;
                if (v125 > 0x14)
                  goto LABEL_219;
                v126 = (unsigned __int8 *)*(v14 - 4);
                if (!v126)
                  goto LABEL_219;
LABEL_216:
                __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v126;
                v109 = (uint64_t)llvm::ConstantExpr::getSub((llvm::ConstantExpr *)v13, (llvm::Constant *)v124, 0, 0);
                LOWORD(v505) = 257;
                v110 = (char *)operator new(0x80uLL);
                *((_QWORD *)v110 + 5) = 0;
                v111 = v110 + 40;
                *((_QWORD *)v110 + 6) = 0;
                *((_QWORD *)v110 + 8) = *(_QWORD *)v126;
                v11 = (uint64_t)(v110 + 64);
                *((_QWORD *)v110 + 3) = v110 + 64;
                *((_QWORD *)v110 + 7) = v110 + 64;
                *((_QWORD *)v110 + 9) = 0;
                v110[80] = 41;
                v110[81] = 0;
                *((_WORD *)v110 + 41) = 0;
                *((_DWORD *)v110 + 21) = 2;
                *(_OWORD *)(v110 + 88) = 0u;
                *(_OWORD *)(v110 + 104) = 0u;
                *((_DWORD *)v110 + 30) = 0;
                *(_QWORD *)v110 = v126;
                v158 = *((_QWORD *)v126 + 1);
                v157 = v126 + 8;
                v156 = v158;
                *((_QWORD *)v110 + 1) = v158;
                if (v158)
                  *(_QWORD *)(v156 + 16) = v110 + 8;
                *((_QWORD *)v110 + 2) = v157;
                *v157 = v110;
                goto LABEL_156;
              }
              if (*((_WORD *)v14 + 9) == 15)
              {
                v155 = (unsigned __int8 **)&v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                v124 = *v155;
                if (*v155)
                {
                  if (v124[16] != 5)
                  {
                    v126 = v155[4];
                    if (v126)
                      goto LABEL_216;
                  }
                }
              }
            }
LABEL_219:
            v509 = 0;
            v503 = (unint64_t)&v509;
            if (!sub_1C4D89F84((uint64_t)&v503, (unsigned __int8 *)v13)
              || !sub_1C49AB31C(v509))
            {
              goto LABEL_226;
            }
            v159 = *(_QWORD *)(a1 + 56);
            v160 = *(_QWORD *)(a1 + 72);
            v161 = (_QWORD ***)a2;
            if (!*(_QWORD *)(a2 + 40))
            {
              if (!v14 || *((unsigned __int8 *)v14 + 16) < 0x1Cu || (v161 = v14, !v14[5]))
                v161 = 0;
            }
            *(_QWORD *)&v503 = *(_QWORD *)(a1 + 80);
            *((_QWORD *)&v503 + 1) = v159;
            *(_QWORD *)&v504 = v161;
            *((_QWORD *)&v504 + 1) = v160;
            v505 = 0;
            LOBYTE(v506) = 1;
            sub_1C4F83784((uint64_t)v14, 0, (uint64_t *)&v503, &__dst);
            v162 = (const void **)v509;
            v163 = *((unsigned int *)v509 + 2);
            if (v163 >= 0x41)
            {
              v176 = ((unint64_t)(v163 + 63) >> 3) & 0x3FFFFFF8;
              v177 = (char *)operator new[]();
              memcpy(v177, *v162, v176);
              v178 = 0;
              v179 = __dst.__r_.__value_.__r.__words[0];
              do
              {
                *(_QWORD *)&v177[v178] |= *(_QWORD *)(v179 + v178);
                v178 += 8;
              }
              while (v176 != v178);
              DWORD2(v503) = v163;
              *(_QWORD *)&v503 = v177;
              v11 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v503);
              MEMORY[0x1CAA32F9C](v177, 0x1000C8000313F17);
              if ((_DWORD)v11 != (_DWORD)v163)
                goto LABEL_225;
            }
            else if ((_DWORD)v163
                   && (__dst.__r_.__value_.__r.__words[0] | *(_QWORD *)v509) != 0xFFFFFFFFFFFFFFFFLL >> -(char)v163)
            {
LABEL_225:
              v164 = 0;
              goto LABEL_267;
            }
            LOWORD(v505) = 257;
            v180 = (char *)operator new(0x80uLL);
            *(_QWORD *)v180 = 0;
            *((_QWORD *)v180 + 2) = 0;
            *((_QWORD *)v180 + 1) = 0;
            *((_QWORD *)v180 + 5) = 0;
            *((_QWORD *)v180 + 6) = 0;
            *((_QWORD *)v180 + 4) = 0;
            v181 = (std::string::size_type *)(v180 + 32);
            *((_QWORD *)v180 + 8) = *v14;
            v11 = (uint64_t)(v180 + 64);
            *((_QWORD *)v180 + 3) = v180 + 64;
            *((_QWORD *)v180 + 7) = v180 + 64;
            *((_QWORD *)v180 + 9) = 0;
            v180[80] = 58;
            v180[81] = 0;
            *((_WORD *)v180 + 41) = 0;
            *((_DWORD *)v180 + 21) = 2;
            *((_DWORD *)v180 + 30) = 0;
            *(_OWORD *)(v180 + 104) = 0u;
            *(_OWORD *)(v180 + 88) = 0u;
            *(_QWORD *)v180 = v14;
            v182 = v14 + 1;
            v183 = v14[1];
            *((_QWORD *)v180 + 1) = v183;
            if (v183)
              v183[2] = (uint64_t *)(v180 + 8);
            *((_QWORD *)v180 + 2) = v182;
            *v182 = v180;
            if (*((_QWORD *)v180 + 4))
            {
              **((_QWORD **)v180 + 6) = *((_QWORD *)v180 + 5);
              v491 = *((_QWORD *)v180 + 5);
              if (v491)
                *(_QWORD *)(v491 + 16) = *((_QWORD *)v180 + 6);
            }
            *v181 = v13;
            if (v13)
            {
              v184 = *(_QWORD *)v71;
              *((_QWORD *)v180 + 5) = *(_QWORD *)v71;
              if (v184)
                *(_QWORD *)(v184 + 16) = v180 + 40;
              *((_QWORD *)v180 + 6) = v71;
              *(_QWORD *)v71 = v181;
            }
            llvm::Value::setName((uint64_t ***)v180 + 8, (uint64_t)&v503);
            v164 = 1;
LABEL_267:
            if (v525 >= 0x41 && __dst.__r_.__value_.__r.__words[2])
              MEMORY[0x1CAA32F9C](__dst.__r_.__value_.__r.__words[2], 0x1000C8000313F17);
            if (LODWORD(__dst.__r_.__value_.__r.__words[1]) >= 0x41 && __dst.__r_.__value_.__r.__words[0])
              MEMORY[0x1CAA32F9C](__dst.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
            if ((v164 & 1) != 0)
              goto LABEL_639;
LABEL_226:
            v165 = (llvm::Value *)v11;
            v166 = *((unsigned __int8 *)v14 + 16);
            if (v166 == 5)
            {
              if (*((_WORD *)v14 + 9) == 13)
              {
                v170 = (uint64_t **)&v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                v167 = *v170;
                v168 = v170[4];
                if ((uint64_t *)v13 == *v170 && v168)
                  goto LABEL_279;
                if (v167)
                  v169 = v13 == (_QWORD)v168;
                else
                  v169 = 0;
LABEL_236:
                v168 = v167;
                if (v169)
                  goto LABEL_279;
              }
            }
            else if (v166 == 41)
            {
              v167 = (uint64_t *)*(v14 - 8);
              v168 = (uint64_t *)*(v14 - 4);
              if ((uint64_t *)v13 == v167 && v168)
                goto LABEL_279;
              if (v167)
              {
                v169 = v13 == (_QWORD)v168;
                goto LABEL_236;
              }
            }
            v171 = *(unsigned __int8 *)(v13 + 16);
            if (v171 == 5)
            {
              if (*(_WORD *)(v13 + 18) != 15
                || (v172 = (uint64_t ****)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF)), v14 != *v172)
                || (v168 = (uint64_t *)v172[4]) == 0)
              {
LABEL_244:
                if (v166 == 5)
                {
                  if (*((_WORD *)v14 + 9) != 28)
                    goto LABEL_298;
                  v175 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                  v173 = *v175;
                  if (!*v175)
                    goto LABEL_298;
                  v174 = v175[4];
                  if (!v174)
                    goto LABEL_298;
                }
                else
                {
                  if (v166 != 56)
                    goto LABEL_298;
                  v173 = *(v14 - 8);
                  if (!v173)
                    goto LABEL_298;
                  v174 = *(v14 - 4);
                  if (!v174)
                    goto LABEL_298;
                }
                if (*(unsigned __int8 *)(v13 + 16) > 0x37u)
                {
                  if (v171 == 56)
                    goto LABEL_312;
                  if (v171 != 57)
                    goto LABEL_366;
                  v185 = *(uint64_t ***)(v13 - 64);
                  v186 = *(uint64_t ***)(v13 - 32);
                }
                else
                {
                  if (v171 != 5)
                  {
                    if (v171 != 41)
                      goto LABEL_366;
                    goto LABEL_306;
                  }
                  v190 = *(unsigned __int16 *)(v13 + 18);
                  if (v190 != 29)
                  {
LABEL_302:
                    if (v190 != 13)
                      goto LABEL_356;
                    v197 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
                    v173 = *(uint64_t ***)v197;
                    if (!*(_QWORD *)v197)
                      goto LABEL_327;
                    v174 = *(uint64_t ***)(v197 + 32);
                    if (!v174)
                      goto LABEL_327;
                    v198 = 0;
LABEL_309:
                    if (v166 == 5)
                    {
                      if (*((_WORD *)v14 + 9) != 29)
                        goto LABEL_321;
                      v203 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                      v199 = *v203;
                      v200 = v203[4];
                    }
                    else
                    {
                      if (v166 != 57)
                        goto LABEL_321;
                      v199 = *(v14 - 8);
                      v200 = *(v14 - 4);
                    }
                    if (v173 == v199 && v174 == v200 || v173 == v200 && v174 == v199)
                      goto LABEL_408;
LABEL_321:
                    if (v198)
                    {
                      v173 = *(uint64_t ***)(v13 - 64);
                      if (!v173)
                        goto LABEL_354;
                      goto LABEL_323;
                    }
                    if (v171 != 5)
                      goto LABEL_366;
                    v190 = *(unsigned __int16 *)(v13 + 18);
                    if (v190 == 13)
                    {
LABEL_327:
                      v205 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
                      v173 = *(uint64_t ***)v205;
                      if (!*(_QWORD *)v205)
                        goto LABEL_366;
                      v204 = *(uint64_t ***)(v205 + 32);
                      if (!v204)
                        goto LABEL_366;
                      goto LABEL_329;
                    }
LABEL_356:
                    if (v190 == 28)
                    {
                      v218 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
                      v201 = *(uint64_t ***)v218;
                      if (*(_QWORD *)v218)
                      {
                        v202 = *(_QWORD *)(v218 + 32);
                        if (v202)
                        {
LABEL_359:
                          if (v166 != 5)
                          {
                            if (v166 != 58)
                            {
                              if (v166 != 57)
                                goto LABEL_391;
                              v219 = *(v14 - 8);
                              v220 = *(v14 - 4);
                              if (v201 != v219 || (uint64_t **)v202 != v220)
                              {
                                if (v201 != v220)
                                  goto LABEL_401;
LABEL_375:
                                if ((uint64_t **)v202 != v219)
                                  goto LABEL_380;
                              }
LABEL_376:
                              if (*(_QWORD *)v71 && !*(_QWORD *)(*(_QWORD *)v71 + 8)
                                || (v223 = v14[1]) != 0 && !v223[1])
                              {
                                v321 = *(uint64_t **)(a1 + 24);
                                LOWORD(v505) = 257;
                                v168 = (uint64_t *)sub_1C506EC1C(v321, v201, v202, (uint64_t)&v503);
                                goto LABEL_546;
                              }
LABEL_380:
                              if (v166 != 5)
                                goto LABEL_391;
                              goto LABEL_381;
                            }
LABEL_368:
                            v173 = *(v14 - 8);
                            if (v173)
                            {
                              v174 = *(v14 - 4);
                              if (v174)
                                goto LABEL_384;
                            }
                            goto LABEL_391;
                          }
                          if (*((_WORD *)v14 + 9) == 29)
                          {
                            v221 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                            v219 = *v221;
                            v222 = v221[4];
                            if (v201 == v219 && (uint64_t **)v202 == v222)
                              goto LABEL_376;
                            if (v201 == v222)
                              goto LABEL_375;
                          }
                          goto LABEL_381;
                        }
                      }
                    }
LABEL_366:
                    if (v166 != 5)
                    {
                      if (v166 != 58)
                        goto LABEL_391;
                      goto LABEL_368;
                    }
LABEL_381:
                    if (*((_WORD *)v14 + 9) == 30)
                    {
                      v224 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                      v173 = *v224;
                      if (*v224)
                      {
                        v174 = v224[4];
                        if (v174)
                        {
LABEL_384:
                          if (v171 == 5)
                          {
                            if (*(_WORD *)(v13 + 18) != 29)
                              goto LABEL_402;
                            v229 = (uint64_t ***)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                            v225 = *v229;
                            v230 = v229[4];
                            if (v173 != v225 || v174 != v230)
                            {
                              if (v173 != v230)
                                goto LABEL_402;
LABEL_400:
                              if (v174 != v225)
                              {
LABEL_401:
                                if (v171 != 5)
                                  goto LABEL_425;
LABEL_402:
                                if (*(_WORD *)(v13 + 18) != 30)
                                  goto LABEL_425;
                                v231 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
                                v227 = *(uint64_t ***)v231;
                                if (!*(_QWORD *)v231)
                                  goto LABEL_425;
                                v228 = *(_QWORD *)(v231 + 32);
                                if (!v228)
                                  goto LABEL_425;
LABEL_405:
                                if (v166 == 5)
                                {
                                  if (*((_WORD *)v14 + 9) != 29)
                                    goto LABEL_425;
                                  v239 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                                  v232 = *v239;
                                  v233 = v239[4];
                                }
                                else
                                {
                                  if (v166 != 57)
                                    goto LABEL_425;
                                  v232 = *(v14 - 8);
                                  v233 = *(v14 - 4);
                                }
                                if ((v227 == v232 && (uint64_t **)v228 == v233
                                   || v227 == v233 && (uint64_t **)v228 == v232)
                                  && (*(_QWORD *)v71 && !*(_QWORD *)(*(_QWORD *)v71 + 8)
                                   || (v240 = v14[1]) != 0 && !v240[1]))
                                {
                                  v241 = *(_QWORD *)(a1 + 24);
                                  LOWORD(v505) = 257;
                                  v168 = (uint64_t *)sub_1C4D89BCC(v241, v227, v228, (uint64_t)&v503);
LABEL_546:
                                  v526 = 257;
                                  p_dst = &__dst;
                                  goto LABEL_280;
                                }
LABEL_425:
                                if (!*(_QWORD *)v71 || *(_QWORD *)(*(_QWORD *)v71 + 8))
                                {
LABEL_427:
                                  v519 = 0;
                                  *(_QWORD *)&v503 = v14;
                                  *(_QWORD *)&v504 = &v519;
                                  if (!*(_QWORD *)v71 || *(_QWORD *)(*(_QWORD *)v71 + 8))
                                    goto LABEL_429;
                                  v250 = *(unsigned __int8 *)(v13 + 16);
                                  if (v250 == 5)
                                  {
                                    if (*(_WORD *)(v13 + 18) == 28)
                                    {
                                      v273 = (uint64_t ****)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                                      if (v14 == *v273)
                                      {
                                        v322 = v273[4];
                                        v323 = v322[1];
                                        if (v323)
                                        {
                                          if (!v323[1])
                                          {
                                            v324 = *((unsigned __int8 *)v322 + 16);
                                            if (v324 == 5)
                                            {
                                              if (*((_WORD *)v322 + 9) == 15)
                                              {
                                                if (sub_1C4E71060((uint64_t)&v503 + 8, (llvm::Constant *)v322[-4* (*((_DWORD *)v322 + 5) & 0x7FFFFFF)]))
                                                {
                                                  v278 = v322[-4 * (*((_DWORD *)v322 + 5) & 0x7FFFFFF) + 4];
                                                  if (v278)
                                                    goto LABEL_831;
                                                }
                                              }
                                            }
                                            else if (v324 == 43)
                                            {
                                              if (sub_1C4D8AC3C((uint64_t)&v503 + 8, (llvm::Constant *)*(v322 - 8)))
                                              {
                                                v278 = *(v322 - 4);
                                                if (v278)
                                                  goto LABEL_831;
                                              }
                                            }
                                          }
                                        }
                                      }
                                      v274 = (uint64_t *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                                      if ((_QWORD)v503 == v274[4])
                                      {
                                        v251 = *v274;
                                        goto LABEL_484;
                                      }
                                    }
                                  }
                                  else if (v250 == 56)
                                  {
                                    if (v14 == *(uint64_t ****)(v13 - 64))
                                    {
                                      v282 = *(_QWORD *)(v13 - 32);
                                      v283 = *(_QWORD *)(v282 + 8);
                                      if (v283)
                                      {
                                        if (!*(_QWORD *)(v283 + 8))
                                        {
                                          v284 = *(unsigned __int8 *)(v282 + 16);
                                          if (v284 == 5)
                                          {
                                            if (*(_WORD *)(v282 + 18) == 15)
                                            {
                                              if (sub_1C4E71060((uint64_t)&v503 + 8, *(llvm::Constant **)(v282- 32* (*(_DWORD *)(v282 + 20) & 0x7FFFFFF))))
                                              {
                                                v278 = *(uint64_t ***)(v282
                                                                    - 32 * (*(_DWORD *)(v282 + 20) & 0x7FFFFFF)
                                                                    + 32);
                                                if (v278)
                                                  goto LABEL_831;
                                              }
                                            }
                                          }
                                          else if (v284 == 43)
                                          {
                                            if (sub_1C4D8AC3C((uint64_t)&v503 + 8, *(llvm::Constant **)(v282 - 64)))
                                            {
                                              v278 = *(uint64_t ***)(v282 - 32);
                                              if (v278)
                                                goto LABEL_831;
                                            }
                                          }
                                        }
                                      }
                                    }
                                    if ((_QWORD)v503 == *(_QWORD *)(v13 - 32))
                                    {
                                      v251 = *(_QWORD *)(v13 - 64);
LABEL_484:
                                      v275 = *(_QWORD *)(v251 + 8);
                                      if (!v275 || *(_QWORD *)(v275 + 8))
                                        goto LABEL_429;
                                      v276 = *(unsigned __int8 *)(v251 + 16);
                                      if (v276 == 5)
                                      {
                                        if (*(_WORD *)(v251 + 18) != 15)
                                          goto LABEL_429;
                                        if (!sub_1C4E71060((uint64_t)&v503 + 8, *(llvm::Constant **)(v251- 32* (*(_DWORD *)(v251 + 20) & 0x7FFFFFF))))goto LABEL_429;
                                        v278 = *(uint64_t ***)(v251 - 32 * (*(_DWORD *)(v251 + 20) & 0x7FFFFFF) + 32);
                                        if (!v278)
                                          goto LABEL_429;
                                      }
                                      else
                                      {
                                        if (v276 != 43)
                                          goto LABEL_429;
                                        if (!sub_1C4D8AC3C((uint64_t)&v503 + 8, *(llvm::Constant **)(v251 - 64)))goto LABEL_429;
                                        v278 = *(uint64_t ***)(v251 - 32);
                                        if (!v278)
                                          goto LABEL_429;
                                      }
LABEL_831:
                                      *(_QWORD *)v504 = v278;
                                      v472 = *(_QWORD *)(a1 + 24);
                                      v473 = v519;
                                      AllOnesValue = llvm::Constant::getAllOnesValue(*(llvm::Constant **)a2, v277);
                                      v526 = 257;
                                      v475 = (*(uint64_t (**)(_QWORD, uint64_t ***, llvm::ValueHandleBase *, _QWORD, _QWORD))(**(_QWORD **)(v472 + 72) + 16))(*(_QWORD *)(v472 + 72), v473, AllOnesValue, 0, 0);
                                      if (!v475)
                                      {
                                        LOWORD(v505) = 257;
                                        v476 = (char *)operator new(0x80uLL);
                                        *((_QWORD *)v476 + 5) = 0;
                                        v477 = v476 + 40;
                                        *((_QWORD *)v476 + 6) = 0;
                                        *((_QWORD *)v476 + 8) = *v473;
                                        v478 = (uint64_t)(v476 + 64);
                                        *((_QWORD *)v476 + 3) = v476 + 64;
                                        *((_QWORD *)v476 + 7) = v476 + 64;
                                        *((_QWORD *)v476 + 9) = 0;
                                        v476[80] = 41;
                                        v476[81] = 0;
                                        *((_WORD *)v476 + 41) = 0;
                                        *((_DWORD *)v476 + 21) = 2;
                                        *(_OWORD *)(v476 + 88) = 0u;
                                        *(_OWORD *)(v476 + 104) = 0u;
                                        *((_DWORD *)v476 + 30) = 0;
                                        *(_QWORD *)v476 = v473;
                                        v481 = v473[1];
                                        v480 = v473 + 1;
                                        v479 = v481;
                                        *((_QWORD *)v476 + 1) = v481;
                                        if (v481)
                                          v479[2] = (uint64_t *)(v476 + 8);
                                        *((_QWORD *)v476 + 2) = v480;
                                        *v480 = v476;
                                        *((_QWORD *)v476 + 4) = AllOnesValue;
                                        if (AllOnesValue)
                                        {
                                          v484 = *((_QWORD *)AllOnesValue + 1);
                                          v483 = (_QWORD *)((char *)AllOnesValue + 8);
                                          v482 = v484;
                                          *v477 = v484;
                                          if (v484)
                                            *(_QWORD *)(v482 + 16) = v477;
                                          *((_QWORD *)v476 + 6) = v483;
                                          *v483 = v476 + 32;
                                        }
                                        llvm::Value::setName((uint64_t ***)v476 + 8, (uint64_t)&v503);
                                        v475 = sub_1C4773754((uint64_t *)v472, v478, (uint64_t)&__dst);
                                      }
                                      LOWORD(v505) = 257;
                                      v168 = (uint64_t *)sub_1C4D89BCC(v472, v14, v475, (uint64_t)&v503);
                                      v523 = 257;
LABEL_495:
                                      p_dst = (std::string *)&v521;
                                      goto LABEL_280;
                                    }
                                  }
LABEL_429:
                                  if (!*(_QWORD *)v71 || *(_QWORD *)(*(_QWORD *)v71 + 8))
                                  {
LABEL_431:
                                    if (sub_1C57A2C04((uint64_t)v14))
                                    {
                                      v242 = (uint64_t **)&v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                                      v243 = *v242;
                                      v244 = (uint64_t)v242[4];
                                      v245 = *(unsigned __int8 *)(v13 + 16);
                                      if (v245 == 5)
                                      {
                                        if (*(_WORD *)(v13 + 18) != 13)
                                          goto LABEL_463;
                                        v254 = (uint64_t **)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                                        v246 = *v254;
                                        v247 = v254[4];
                                      }
                                      else
                                      {
                                        if (v245 != 41)
                                          goto LABEL_463;
                                        v246 = *(uint64_t **)(v13 - 64);
                                        v247 = *(uint64_t **)(v13 - 32);
                                      }
                                      if ((v243 == v246 && (uint64_t *)v244 == v247
                                         || v243 == v247 && (uint64_t *)v244 == v246)
                                        && (*(_QWORD *)v71 && !*(_QWORD *)(*(_QWORD *)v71 + 8)
                                         || (v255 = v14[1]) != 0 && !v255[1]))
                                      {
                                        v256 = *((_DWORD *)*(v14 - 4) + 9);
                                        switch(v256)
                                        {
                                          case 306:
                                            v257 = 305;
                                            break;
                                          case 274:
                                            v257 = 275;
                                            break;
                                          case 275:
                                            v257 = 274;
                                            break;
                                          default:
                                            v257 = 306;
                                            break;
                                        }
                                        v258 = *(uint64_t **)(a1 + 24);
                                        LOWORD(v505) = 257;
                                        Intrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateBinaryIntrinsic(v258, v257, v243, v244, 0, (uint64_t)&v503);
                                        goto LABEL_637;
                                      }
                                    }
LABEL_463:
                                    v260 = *(llvm::Constant **)a2;
                                    v261 = *(_QWORD *)(a1 + 24);
                                    *(_QWORD *)&v503 = &v521;
                                    *((_QWORD *)&v503 + 1) = &v519;
                                    *(_QWORD *)&v504 = &v518;
                                    if (*(_QWORD *)v71)
                                    {
                                      if (!*(_QWORD *)(*(_QWORD *)v71 + 8))
                                      {
                                        v521 = 0;
                                        v518 = 0;
                                        v519 = 0;
                                        if (sub_1C4FA9CBC((_QWORD **)&v503, v13))
                                        {
                                          if (v519 == v14 || v518 == v14)
                                          {
                                            v262 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 40) + 56) + 40);
                                            if (*(char *)(v262 + 239) < 0)
                                              sub_1C47EBC30(&__dst, *(void **)(v262 + 216), *(_QWORD *)(v262 + 224));
                                            else
                                              __dst = *(std::string *)(v262 + 216);
                                            if (!std::string::compare(&__dst, 0, 4uLL, "agx1"))
                                            {
                                              v288 = 27;
                                            }
                                            else if (!std::string::compare(&__dst, 0, 4uLL, "agx2"))
                                            {
                                              v288 = 28;
                                            }
                                            else if (!std::string::compare(&__dst, 0, 4uLL, "agx3"))
                                            {
                                              v288 = 29;
                                            }
                                            else
                                            {
                                              v288 = 0;
                                            }
                                            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                                              operator delete(__dst.__r_.__value_.__l.__data_);
                                            if ((v288 - 27) >= 3)
                                            {
                                              v338 = (uint64_t)v519;
                                              v339 = (uint64_t)(v519 == v14 ? v518 : v519);
                                              LOWORD(v505) = 257;
                                              v340 = sub_1C47733F8(v261, v339, (uint64_t)v14, (uint64_t)&v503, 0, 0);
                                              NullValue = llvm::Constant::getNullValue(v260, v341);
                                              v343 = (uint64_t ***)v338 == v14 ? (uint64_t *)NullValue : (uint64_t *)v340;
                                              v344 = (uint64_t ***)v338 == v14 ? v340 : (uint64_t)NullValue;
                                              LOWORD(v505) = 257;
                                              v11 = (uint64_t)sub_1C4FC8748((uint64_t)v521, v343, v344, (uint64_t)&v503, 0, 0);
                                              llvm::Instruction::copyMetadata(v11, v13, 0, 0);
                                              if (v11)
                                                goto LABEL_639;
                                            }
                                          }
                                        }
                                      }
                                    }
                                    v345 = *(_QWORD *)(a1 + 24);
                                    *(_QWORD *)&v503 = &v521;
                                    *((_QWORD *)&v503 + 1) = &v519;
                                    *(_QWORD *)&v504 = &v518;
                                    v346 = v14[1];
                                    if (v346)
                                    {
                                      if (!v346[1])
                                      {
                                        v521 = 0;
                                        v518 = 0;
                                        v519 = 0;
                                        if (sub_1C4FA9CBC((_QWORD **)&v503, (uint64_t)v14))
                                        {
                                          if (v519 == (uint64_t ***)v13 || v518 == (uint64_t ***)v13)
                                          {
                                            v347 = v14[5][7][5];
                                            if (*(char *)(v347 + 239) < 0)
                                              sub_1C47EBC30(&__dst, *(void **)(v347 + 216), *(_QWORD *)(v347 + 224));
                                            else
                                              __dst = *(std::string *)(v347 + 216);
                                            if (!std::string::compare(&__dst, 0, 4uLL, "agx1"))
                                            {
                                              v348 = 27;
                                            }
                                            else if (!std::string::compare(&__dst, 0, 4uLL, "agx2"))
                                            {
                                              v348 = 28;
                                            }
                                            else if (!std::string::compare(&__dst, 0, 4uLL, "agx3"))
                                            {
                                              v348 = 29;
                                            }
                                            else
                                            {
                                              v348 = 0;
                                            }
                                            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
                                              operator delete(__dst.__r_.__value_.__l.__data_);
                                            if ((v348 - 27) >= 3)
                                            {
                                              v349 = (uint64_t)v519;
                                              v350 = (uint64_t)(v519 == (uint64_t ***)v13 ? v518 : v519);
                                              LOWORD(v505) = 257;
                                              v351 = sub_1C47733F8(v345, v13, v350, (uint64_t)&v503, 0, 0);
                                              v353 = llvm::Constant::getNullValue(v260, v352);
                                              v354 = v349 == v13 ? (uint64_t *)v353 : (uint64_t *)v351;
                                              v355 = v349 == v13 ? v351 : (uint64_t)v353;
                                              LOWORD(v505) = 257;
                                              v11 = (uint64_t)sub_1C4FC8748((uint64_t)v521, v354, v355, (uint64_t)&v503, 0, 0);
                                              llvm::Instruction::copyMetadata(v11, (uint64_t)v14, 0, 0);
                                              if (v11)
                                                goto LABEL_639;
                                            }
                                          }
                                        }
                                      }
                                    }
                                    v356 = *((unsigned __int8 *)v14 + 16);
                                    if (v356 == 5)
                                    {
                                      if (*((_WORD *)v14 + 9) != 28)
                                        goto LABEL_629;
                                      v359 = (uint64_t *)&v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                                      v358 = *v359;
                                      v360 = v359[4];
                                      if (v13 == v358)
                                      {
                                        v358 = v360;
                                        if (!v360)
                                          goto LABEL_629;
                                      }
                                      else if (!v358 || v13 != v360)
                                      {
                                        goto LABEL_629;
                                      }
                                    }
                                    else
                                    {
                                      if (v356 != 56)
                                        goto LABEL_629;
                                      v357 = (uint64_t)*(v14 - 8);
                                      v358 = (uint64_t)*(v14 - 4);
                                      if (v13 != v357)
                                      {
                                        if (!v357 || v13 != v358)
                                          goto LABEL_629;
                                        v516 = (std::string::size_type)*(v14 - 8);
                                        v358 = v357;
                                        goto LABEL_619;
                                      }
                                      if (!v358)
                                        goto LABEL_629;
                                    }
                                    v516 = v358;
LABEL_619:
                                    v361 = v14[1];
                                    if (v361 && !v361[1] || *(unsigned __int8 *)(v358 + 16) <= 0x14u)
                                    {
                                      v362 = *(_QWORD *)(a1 + 24);
                                      if ((*(_BYTE *)(v358 + 23) & 0x10) == 0)
                                      {
                                        v391 = 0;
                                        v390 = &byte_1C871356D;
                                        goto LABEL_683;
                                      }
                                      v363 = ***(_QWORD ***)v358;
                                      v364 = *(_QWORD *)(v363 + 152);
                                      v365 = *(unsigned int *)(v363 + 168);
                                      if ((_DWORD)v365)
                                      {
                                        LODWORD(v366) = (v365 - 1) & ((v358 >> 4) ^ (v358 >> 9));
                                        v367 = (uint64_t *)(v364 + 16 * v366);
                                        v368 = *v367;
                                        if (*v367 == v358)
                                        {
LABEL_682:
                                          v389 = (_QWORD *)v367[1];
                                          v392 = *v389;
                                          v390 = (char *)(v389 + 2);
                                          v391 = v392;
LABEL_683:
                                          LOWORD(v505) = 773;
                                          *(_QWORD *)&v503 = v390;
                                          *((_QWORD *)&v503 + 1) = v391;
                                          *(_QWORD *)&v504 = ".not";
                                          v393 = sub_1C506EAA0(v362, v358, (uint64_t)&v503);
                                          v526 = 257;
                                          v394 = (char *)operator new(0x80uLL);
                                          *((_QWORD *)v394 + 6) = 0;
                                          *((_QWORD *)v394 + 5) = 0;
                                          v395 = v394 + 40;
                                          *((_QWORD *)v394 + 8) = *(_QWORD *)v13;
                                          v11 = (uint64_t)(v394 + 64);
                                          *((_QWORD *)v394 + 3) = v394 + 64;
                                          *((_QWORD *)v394 + 7) = v394 + 64;
                                          *((_QWORD *)v394 + 9) = 0;
                                          v394[80] = 56;
                                          v394[81] = 0;
                                          *((_WORD *)v394 + 41) = 0;
                                          *((_DWORD *)v394 + 21) = 2;
                                          *(_OWORD *)(v394 + 88) = 0u;
                                          *(_OWORD *)(v394 + 104) = 0u;
                                          *((_DWORD *)v394 + 30) = 0;
                                          *(_QWORD *)v394 = v13;
                                          v396 = *(_QWORD *)(v13 + 8);
                                          *((_QWORD *)v394 + 1) = v396;
                                          if (v396)
                                            *(_QWORD *)(v396 + 16) = v394 + 8;
                                          *((_QWORD *)v394 + 2) = v71;
                                          *(_QWORD *)v71 = v394;
                                          *((_QWORD *)v394 + 4) = v393;
                                          if (v393)
                                          {
                                            v399 = *(_QWORD *)(v393 + 8);
                                            v398 = (_QWORD *)(v393 + 8);
                                            v397 = v399;
                                            *v395 = v399;
                                            if (v399)
                                              *(_QWORD *)(v397 + 16) = v395;
                                            *((_QWORD *)v394 + 6) = v398;
                                            *v398 = v394 + 32;
                                          }
LABEL_689:
                                          v152 = &__dst;
                                          goto LABEL_205;
                                        }
                                        v369 = 1;
                                        while (v368 != -4096)
                                        {
                                          v370 = v366 + v369++;
                                          v366 = v370 & (v365 - 1);
                                          v368 = *(_QWORD *)(v364 + 16 * v366);
                                          if (v368 == v358)
                                          {
                                            v367 = (uint64_t *)(v364 + 16 * v366);
                                            goto LABEL_682;
                                          }
                                        }
                                      }
                                      v367 = (uint64_t *)(v364 + 16 * v365);
                                      goto LABEL_682;
                                    }
LABEL_629:
                                    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v517;
                                    if (sub_1C4D9EC28(&__dst, 30, v13))
                                    {
                                      *(_QWORD *)&v503 = v13;
                                      *((_QWORD *)&v503 + 1) = &v516;
                                      *(_QWORD *)&v504 = v13;
                                      *((_QWORD *)&v504 + 1) = &v516;
                                      v505 = (std::string::size_type *)v13;
                                      v506 = &v516;
                                      v507 = (_QWORD ***)v13;
                                      v508 = &v516;
                                      if (sub_1C62A7BA4((uint64_t)&v503, (uint64_t)v14))
                                      {
                                        v379 = *(_QWORD *)v71;
                                        if (!*(_QWORD *)v71)
                                          goto LABEL_671;
                                        v380 = -2;
                                        do
                                        {
                                          v381 = v380;
                                          if (!v380)
                                            break;
                                          v379 = *(_QWORD *)(v379 + 8);
                                          ++v380;
                                        }
                                        while (v379);
                                        if (v381)
                                        {
LABEL_671:
                                          v382 = *(_QWORD *)(v516 + 8);
                                          v383 = v382 && *(_QWORD *)(v382 + 8) == 0;
                                          if (sub_1C579CB78(v516, v383))
                                          {
                                            v415 = *(_QWORD *)(a1 + 24);
                                            LOWORD(v505) = 257;
                                            v416 = (_QWORD *)sub_1C506EAA0(v415, (uint64_t)v14, (uint64_t)&v503);
                                            v417 = v517;
                                            LOWORD(v505) = 257;
                                            v418 = (char *)operator new(0x80uLL);
                                            *((_QWORD *)v418 + 5) = 0;
                                            v419 = v418 + 40;
                                            *((_QWORD *)v418 + 6) = 0;
                                            *((_QWORD *)v418 + 8) = *v416;
                                            v11 = (uint64_t)(v418 + 64);
                                            *((_QWORD *)v418 + 3) = v418 + 64;
                                            *((_QWORD *)v418 + 7) = v418 + 64;
                                            *((_QWORD *)v418 + 9) = 0;
                                            v418[80] = 43;
                                            v418[81] = 0;
                                            *((_WORD *)v418 + 41) = 0;
                                            *((_DWORD *)v418 + 21) = 2;
                                            *(_OWORD *)(v418 + 88) = 0u;
                                            *(_OWORD *)(v418 + 104) = 0u;
                                            *((_DWORD *)v418 + 30) = 0;
                                            *(_QWORD *)v418 = v416;
                                            v422 = v416[1];
                                            v421 = v416 + 1;
                                            v420 = v422;
                                            *((_QWORD *)v418 + 1) = v422;
                                            if (v422)
                                              *(_QWORD *)(v420 + 16) = v418 + 8;
                                            *((_QWORD *)v418 + 2) = v421;
                                            *v421 = v418;
                                            *((_QWORD *)v418 + 4) = v417;
                                            if (v417)
                                            {
                                              v425 = *(_QWORD *)(v417 + 8);
                                              v424 = (_QWORD *)(v417 + 8);
                                              v423 = v425;
                                              *v419 = v425;
                                              if (v425)
                                                *(_QWORD *)(v423 + 16) = v419;
                                              *((_QWORD *)v418 + 6) = v424;
                                              *v424 = v418 + 32;
                                            }
                                            goto LABEL_204;
                                          }
                                        }
                                      }
                                    }
                                    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v517;
                                    if (sub_1C4D9EC28(&__dst, 30, (uint64_t)v14))
                                    {
                                      *(_QWORD *)&v503 = v14;
                                      *((_QWORD *)&v503 + 1) = &v516;
                                      *(_QWORD *)&v504 = v14;
                                      *((_QWORD *)&v504 + 1) = &v516;
                                      v505 = (std::string::size_type *)v14;
                                      v506 = &v516;
                                      v507 = v14;
                                      v508 = &v516;
                                      if (sub_1C62A7BA4((uint64_t)&v503, v13))
                                      {
                                        v384 = v14[1];
                                        if (!v384)
                                          goto LABEL_679;
                                        v385 = -2;
                                        do
                                        {
                                          v386 = v385;
                                          if (!v385)
                                            break;
                                          v384 = (uint64_t **)v384[1];
                                          ++v385;
                                        }
                                        while (v384);
                                        if (v386)
                                        {
LABEL_679:
                                          v387 = *(_QWORD *)(v516 + 8);
                                          v388 = v387 && *(_QWORD *)(v387 + 8) == 0;
                                          if (sub_1C579CB78(v516, v388))
                                          {
                                            v426 = *(_QWORD *)(a1 + 24);
                                            LOWORD(v505) = 257;
                                            v109 = sub_1C506EAA0(v426, v13, (uint64_t)&v503);
                                            v107 = (_QWORD *)v517;
                                            LOWORD(v505) = 257;
                                            v110 = (char *)operator new(0x80uLL);
                                            *((_QWORD *)v110 + 5) = 0;
                                            v111 = v110 + 40;
                                            *((_QWORD *)v110 + 6) = 0;
                                            *((_QWORD *)v110 + 8) = *v107;
                                            v11 = (uint64_t)(v110 + 64);
                                            *((_QWORD *)v110 + 3) = v110 + 64;
                                            *((_QWORD *)v110 + 7) = v110 + 64;
                                            *((_QWORD *)v110 + 9) = 0;
                                            v112 = 43;
                                            goto LABEL_153;
                                          }
                                        }
                                      }
                                    }
                                    v518 = 0;
                                    v519 = 0;
                                    *(_QWORD *)&v503 = &v519;
                                    if (sub_1C4E714F4((_QWORD **)&v503, v13)
                                      && (__dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v518,
                                          sub_1C4E714F4(&__dst, (uint64_t)v14))
                                      && (Intrinsic = (llvm::Value *)sub_1C5799188(a1, (uint64_t)v519, (uint64_t)v518, *(_QWORD *)a2, (*(unsigned __int8 *)(a2 + 17) >> 1) & 1)) != 0|| (*(_QWORD *)&v503 = &v519, sub_1C57A30E4((_QWORD **)&v503, v13, &v519))&& (__dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v518, sub_1C57A30E4(&__dst, (uint64_t)v14, &v518))&& (Intrinsic = (llvm::Value *)sub_1C5799188(a1, (uint64_t)v519, (uint64_t)v518, *(_QWORD *)a2, 0)) != 0)
                                    {
LABEL_637:
                                      v106 = sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, Intrinsic);
                                      goto LABEL_638;
                                    }
                                    v501 = 0;
                                    v502 = 0;
                                    v371 = *(_QWORD *)a2;
                                    *(_QWORD *)&v503 = &v502;
                                    *((_QWORD *)&v503 + 1) = &v501;
                                    *(_QWORD *)&v504 = 0;
                                    v372 = *((unsigned __int8 *)v14 + 16);
                                    if (v372 == 5)
                                    {
                                      if (*((_WORD *)v14 + 9) != 27)
                                        goto LABEL_652;
                                      v373 = (uint64_t ****)&v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                                      if (!*v373)
                                        goto LABEL_652;
                                      v502 = *v373;
                                      if (!sub_1C4D8A004((uint64_t)&v503 + 8, (llvm::Constant *)v373[4]))
                                        goto LABEL_652;
                                    }
                                    else
                                    {
                                      if (v372 != 55)
                                        goto LABEL_652;
                                      if (!*(v14 - 8))
                                        goto LABEL_652;
                                      v502 = (uint64_t ***)*(v14 - 8);
                                      if ((sub_1C4D89F84((uint64_t)&v503 + 8, (unsigned __int8 *)*(v14 - 4)) & 1) == 0)goto LABEL_652;
                                    }
                                    v374 = v14[1];
                                    if (v374)
                                    {
                                      v375 = v374[1];
                                      if (v375)
                                      {
                                        if (!v375[1])
                                        {
                                          v406 = v501;
                                          v407 = (llvm::Type *)v371;
                                          if ((*(_DWORD *)(v371 + 8) & 0xFE) == 0x12)
                                            v407 = **(llvm::Type ***)(v371 + 16);
                                          PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v407);
                                          v410 = *((_DWORD *)v406 + 2);
                                          if (v410 >= 0x41)
                                          {
                                            if (v410 - llvm::APInt::countLeadingZerosSlowCase(v406) > 0x40)
                                              goto LABEL_652;
                                            v406 = *(llvm::APInt **)v406;
                                          }
                                          if (*(_QWORD *)v406 == PrimitiveSizeInBits - 1
                                            && *(_QWORD *)v71
                                            && !*(_QWORD *)(*(_QWORD *)v71 + 8))
                                          {
                                            v411 = (uint64_t)v502;
                                            v412 = *(unsigned __int8 *)(v13 + 16);
                                            if (v412 == 5)
                                            {
                                              if (*(_WORD *)(v13 + 18) != 30)
                                                goto LABEL_652;
                                              v485 = (uint64_t ****)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                                              v413 = *v485;
                                              v414 = v485[4];
                                            }
                                            else
                                            {
                                              if (v412 != 58)
                                                goto LABEL_652;
                                              v413 = *(uint64_t ****)(v13 - 64);
                                              v414 = *(uint64_t ****)(v13 - 32);
                                            }
                                            if (v502 == v413 && v14 == v414 || v502 == v414 && v14 == v413)
                                            {
                                              v486 = *(_QWORD *)(a1 + 24);
                                              v487 = llvm::Constant::getNullValue((llvm::Constant *)v371, v408);
                                              LOWORD(v505) = 257;
                                              v488 = sub_1C4774B48(v486, 40, v411, (uint64_t)v487, (uint64_t)&v503);
                                              v489 = *(_QWORD *)(a1 + 24);
                                              LOWORD(v505) = 257;
                                              v490 = (uint64_t *)sub_1C5346748(v489, (uint64_t)v502, (uint64_t)&v503, (*(unsigned __int8 *)(a2 + 17) >> 1) & 1, (*(unsigned __int8 *)(a2 + 17) >> 2) & 1);
                                              LOWORD(v505) = 257;
                                              Neg = sub_1C4FC8748(v488, v490, (uint64_t)v502, (uint64_t)&v503, 0, 0);
                                              goto LABEL_815;
                                            }
                                          }
                                        }
                                      }
                                    }
LABEL_652:
                                    v499 = 0;
                                    v500 = 0;
                                    *(_QWORD *)&v503 = &v517;
                                    *((_QWORD *)&v503 + 1) = &v500;
                                    *(_QWORD *)&v504 = 0;
                                    v376 = *(unsigned __int8 *)(v13 + 16);
                                    if (v376 == 5)
                                    {
                                      if (*(_WORD *)(v13 + 18) != 13)
                                        goto LABEL_774;
                                      v377 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
                                      if (!*(_QWORD *)v377)
                                        goto LABEL_774;
                                      v517 = *(_QWORD *)v377;
                                      if ((sub_1C4D8A004((uint64_t)&v503 + 8, *(llvm::Constant **)(v377 + 32)) & 1) == 0)goto LABEL_774;
                                    }
                                    else
                                    {
                                      if (v376 != 41)
                                        goto LABEL_774;
                                      if (!*(_QWORD *)(v13 - 64))
                                        goto LABEL_774;
                                      v517 = *(_QWORD *)(v13 - 64);
                                      if (!sub_1C4D89F84((uint64_t)&v503 + 8, *(unsigned __int8 **)(v13 - 32)))goto LABEL_774;
                                    }
                                    __dst.__r_.__value_.__r.__words[0] = v517;
                                    __dst.__r_.__value_.__l.__size_ = (std::string::size_type)&v499;
                                    __dst.__r_.__value_.__r.__words[2] = 0;
                                    v378 = *((unsigned __int8 *)v14 + 16);
                                    if (v378 == 5)
                                    {
                                      if (*((_WORD *)v14 + 9) != 28)
                                        goto LABEL_774;
                                      v400 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                                      if ((uint64_t **)v517 != *v400
                                        || (sub_1C4D8A004((uint64_t)&__dst.__r_.__value_.__l.__size_, (llvm::Constant *)v400[4]) & 1) == 0)
                                      {
                                        goto LABEL_774;
                                      }
                                    }
                                    else if (v378 != 56
                                           || (uint64_t **)v517 != *(v14 - 8)
                                           || !sub_1C4D89F84((uint64_t)&__dst.__r_.__value_.__l.__size_, (unsigned __int8 *)*(v14 - 4)))
                                    {
                                      goto LABEL_774;
                                    }
                                    v401 = (llvm::Type *)v371;
                                    if ((*(_DWORD *)(v371 + 8) & 0xFE) == 0x12)
                                      v401 = **(llvm::Type ***)(v371 + 16);
                                    v402 = llvm::Type::getPrimitiveSizeInBits(v401);
                                    v403 = *((_DWORD *)v500 + 2);
                                    if (v403 > 0x40)
                                    {
                                      v405 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v500);
                                    }
                                    else
                                    {
                                      v404 = __clz(__rbit64(*(_QWORD *)v500));
                                      if (v403 >= v404)
                                        v405 = v404;
                                      else
                                        v405 = *((_DWORD *)v500 + 2);
                                    }
                                    v427 = v405 - v402;
                                    LODWORD(__dst.__r_.__value_.__r.__words[1]) = v402;
                                    if (v402 > 0x40)
                                    {
                                      llvm::APInt::initSlowCase((llvm::APInt *)&__dst, 0, 0);
                                      v402 = __dst.__r_.__value_.__r.__words[1];
                                    }
                                    else
                                    {
                                      __dst.__r_.__value_.__r.__words[0] = 0;
                                    }
                                    sub_1C4912E54(&__dst, v427 + v402, v402);
                                    v429 = __dst.__r_.__value_.__r.__words[1];
                                    if (LODWORD(__dst.__r_.__value_.__r.__words[1]) >= 0x41)
                                    {
                                      v496 = LODWORD(__dst.__r_.__value_.__r.__words[1]) + 63;
                                      v432 = (char *)operator new[]();
                                      memcpy(v432, __dst.__r_.__value_.__l.__data_, (v496 >> 3) & 0x3FFFFFF8);
                                      v433 = 0;
                                      v434 = *v499;
                                      v435 = v496 >> 6;
                                      do
                                      {
                                        *(_QWORD *)&v432[v433] &= *(_QWORD *)(v434 + v433);
                                        v433 += 8;
                                      }
                                      while (8 * (v496 >> 6) != v433);
                                      v436 = 0;
                                      do
                                      {
                                        if (v435-- < 1)
                                          break;
                                        v438 = *(_QWORD *)&v432[8 * v435];
                                        v436 += __clz(v438);
                                      }
                                      while (!v438);
                                      v439 = v429 | 0xFFFFFFC0;
                                      if ((v429 & 0x3F) == 0)
                                        v439 = 0;
                                      v440 = v436 + v439;
                                      MEMORY[0x1CAA32F9C](v432, 0x1000C8000313F17);
                                      v431 = 0;
                                      if (v440 != v429)
                                      {
LABEL_770:
                                        if (LODWORD(__dst.__r_.__value_.__r.__words[1]) >= 0x41
                                          && __dst.__r_.__value_.__r.__words[0])
                                        {
                                          MEMORY[0x1CAA32F9C](__dst.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                                        }
                                        if ((v431 & 1) != 0)
                                          goto LABEL_827;
LABEL_774:
                                        v165 = sub_1C5791A5C(a1, a2);
                                        if (!v165)
                                        {
                                          LODWORD(v503) = 311;
                                          *((_QWORD *)&v503 + 1) = 0;
                                          *(_QWORD *)&v504 = v13;
                                          *((_QWORD *)&v504 + 1) = 1;
                                          v505 = &v516;
                                          v452 = v14[1];
                                          if (v452 && !v452[1] && sub_1C57A315C((uint64_t)&v503, (uint64_t)v14))
                                          {
                                            v453 = *(uint64_t **)(a1 + 24);
                                            v521 = *(llvm::Constant **)a2;
                                            __dst.__r_.__value_.__r.__words[0] = v13;
                                            __dst.__r_.__value_.__l.__size_ = v516;
                                            LOWORD(v505) = 257;
                                            v454 = &__dst;
                                            v455 = (std::string *)&v503;
                                            v456 = 306;
LABEL_788:
                                            v458 = 2;
LABEL_814:
                                            v466 = (llvm::Value *)llvm::IRBuilderBase::CreateIntrinsic(v453, v456, (uint64_t *)&v521, 1, (uint64_t *)v454, v458, 0, (uint64_t)v455);
                                            Neg = (llvm::Value *)sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v466);
                                            goto LABEL_815;
                                          }
                                          *(_QWORD *)&v503 = &v517;
                                          *((_QWORD *)&v503 + 1) = v14;
                                          if (*(_QWORD *)v71
                                            && !*(_QWORD *)(*(_QWORD *)v71 + 8)
                                            && sub_1C57A31C8((uint64_t)&v503, v13))
                                          {
                                            v453 = *(uint64_t **)(a1 + 24);
                                            v521 = (llvm::Constant *)v371;
                                            __dst.__r_.__value_.__r.__words[0] = v517;
                                            __dst.__r_.__value_.__l.__size_ = (std::string::size_type)v14;
LABEL_787:
                                            LOWORD(v505) = 257;
                                            v454 = &__dst;
                                            v455 = (std::string *)&v503;
                                            v456 = 311;
                                            goto LABEL_788;
                                          }
                                          *(_QWORD *)&v503 = &v517;
                                          *((_QWORD *)&v503 + 1) = v13;
                                          v457 = v14[1];
                                          if (v457 && !v457[1])
                                          {
                                            if (sub_1C57A32D8((uint64_t)&v503, (uint64_t)v14))
                                            {
                                              v453 = *(uint64_t **)(a1 + 24);
                                              v521 = (llvm::Constant *)v371;
                                              __dst.__r_.__value_.__r.__words[0] = v13;
                                              __dst.__r_.__value_.__l.__size_ = v517;
                                              goto LABEL_787;
                                            }
                                            v457 = v14[1];
                                          }
                                          *(_QWORD *)&v503 = &v517;
                                          *((_QWORD *)&v503 + 1) = v13;
                                          if (v457 && !v457[1] && sub_1C57A31C8((uint64_t)&v503, (uint64_t)v14))
                                          {
                                            v459 = *(uint64_t **)(a1 + 24);
                                            v521 = (llvm::Constant *)v371;
                                            __dst.__r_.__value_.__r.__words[0] = v517;
                                            __dst.__r_.__value_.__l.__size_ = v13;
LABEL_798:
                                            LOWORD(v505) = 257;
                                            v460 = (uint64_t *)llvm::IRBuilderBase::CreateIntrinsic(v459, 311, (uint64_t *)&v521, 1, (uint64_t *)&__dst, 2, 0, (uint64_t)&v503);
                                            LOWORD(v505) = 257;
                                            Neg = llvm::BinaryOperator::CreateNeg(v460, (llvm::Type *)&v503, 0);
LABEL_815:
                                            v165 = Neg;
                                            goto LABEL_827;
                                          }
                                          *(_QWORD *)&v503 = &v517;
                                          *((_QWORD *)&v503 + 1) = v14;
                                          if (*(_QWORD *)v71
                                            && !*(_QWORD *)(*(_QWORD *)v71 + 8)
                                            && sub_1C57A32D8((uint64_t)&v503, v13))
                                          {
                                            v459 = *(uint64_t **)(a1 + 24);
                                            v521 = (llvm::Constant *)v371;
                                            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
                                            __dst.__r_.__value_.__l.__size_ = v517;
                                            goto LABEL_798;
                                          }
                                          if ((*(_DWORD *)(v371 + 8) & 0xFE) == 0x12)
                                            v371 = **(_QWORD **)(v371 + 16);
                                          v462 = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v371);
                                          LODWORD(__dst.__r_.__value_.__r.__words[1]) = 64;
                                          __dst.__r_.__value_.__r.__words[0] = v462;
                                          if (sub_1C4D8A7F0((llvm::APInt *)&__dst, (unsigned __int8 *)v13))
                                          {
                                            LODWORD(v503) = 53;
                                            *((_QWORD *)&v503 + 1) = 0;
                                            *(_QWORD *)&v504 = &v517;
                                            v463 = v14[1];
                                            v464 = v463 && !v463[1] && sub_1C4E75A6C((uint64_t)&v503, (uint64_t)v14);
                                            if (LODWORD(__dst.__r_.__value_.__r.__words[1]) >= 0x41
                                              && __dst.__r_.__value_.__r.__words[0])
                                            {
                                              MEMORY[0x1CAA32F9C](__dst.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                                            }
                                            if (v464)
                                            {
                                              v465 = *(_QWORD *)(a1 + 24);
                                              v521 = *(llvm::Constant **)a2;
                                              LOWORD(v505) = 257;
                                              v520 = sub_1C506EAA0(v465, v517, (uint64_t)&v503);
                                              v526 = 257;
                                              v454 = (std::string *)&v520;
                                              v455 = &__dst;
                                              v453 = (uint64_t *)v465;
                                              v456 = 53;
                                              v458 = 1;
                                              goto LABEL_814;
                                            }
                                          }
                                          else if (LODWORD(__dst.__r_.__value_.__r.__words[1]) >= 0x41
                                                 && __dst.__r_.__value_.__r.__words[0])
                                          {
                                            MEMORY[0x1CAA32F9C](__dst.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                                          }
                                          sub_1C57833C8((_QWORD *)a1, (unsigned __int8 *)a2);
                                          v165 = v468;
                                          if (!v468)
                                          {
                                            v469 = *(_BYTE *)(a2 + 17);
                                            if ((v469 & 4) != 0
                                              || (v470 = llvm::computeOverflowForSignedSub((llvm *)v13, (const llvm::Value *)v14, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v467), v469 = *(_BYTE *)(a2 + 17), v470 != 3))
                                            {
                                              v471 = 0;
                                            }
                                            else
                                            {
                                              v469 |= 4u;
                                              *(_BYTE *)(a2 + 17) = v469;
                                              v471 = 1;
                                            }
                                            if ((v469 & 2) != 0
                                              || llvm::computeOverflowForUnsignedSub((llvm *)v13, (const llvm::Value *)v14, *(const llvm::Value **)(a1 + 80), *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), v467) != 3)
                                            {
                                              if (!v471)
                                              {
                                                v165 = 0;
                                                goto LABEL_827;
                                              }
                                            }
                                            else
                                            {
                                              *(_BYTE *)(a2 + 17) |= 2u;
                                            }
                                            v165 = (llvm::Value *)a2;
                                          }
                                        }
LABEL_827:
                                        v11 = (uint64_t)v165;
LABEL_639:
                                        if (v513 < 0)
                                          operator delete(__p[0]);
                                        return (llvm::UndefValue **)v11;
                                      }
                                      v430 = v499;
                                    }
                                    else
                                    {
                                      v430 = v499;
                                      if ((*v499 & __dst.__r_.__value_.__r.__words[0]) != 0)
                                      {
                                        v431 = 0;
                                        goto LABEL_770;
                                      }
                                    }
                                    v441 = *((unsigned int *)v430 + 2);
                                    v498 = v441;
                                    if (v441 > 0x40)
                                    {
                                      v444 = ((unint64_t)(v441 + 63) >> 3) & 0x3FFFFFF8;
                                      v497 = (void *)operator new[]();
                                      memcpy(v497, (const void *)*v430, v444);
                                      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v497);
                                      LODWORD(v441) = v498;
                                      v443 = (llvm::Constant *)v497;
                                    }
                                    else
                                    {
                                      if ((_DWORD)v441)
                                        v442 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v441;
                                      else
                                        v442 = 0;
                                      v443 = (llvm::Constant *)(v442 & ~*v430);
                                      v497 = v443;
                                    }
                                    v522 = v441;
                                    v521 = v443;
                                    v498 = 0;
                                    v445 = llvm::ConstantInt::get((llvm::ConstantInt **)v371, (llvm::Type *)&v521, v428);
                                    LOWORD(v505) = 257;
                                    v446 = (char *)operator new(0x80uLL);
                                    *(_QWORD *)v446 = 0;
                                    *((_QWORD *)v446 + 2) = 0;
                                    *((_QWORD *)v446 + 1) = 0;
                                    *((_QWORD *)v446 + 5) = 0;
                                    *((_QWORD *)v446 + 6) = 0;
                                    *((_QWORD *)v446 + 4) = 0;
                                    v447 = (llvm::Value ***)(v446 + 32);
                                    *((_QWORD *)v446 + 8) = *(_QWORD *)v13;
                                    v165 = (llvm::Value *)(v446 + 64);
                                    *((_QWORD *)v446 + 3) = v446 + 64;
                                    *((_QWORD *)v446 + 7) = v446 + 64;
                                    *((_QWORD *)v446 + 9) = 0;
                                    v446[80] = 56;
                                    v446[81] = 0;
                                    *((_WORD *)v446 + 41) = 0;
                                    *((_DWORD *)v446 + 21) = 2;
                                    *((_DWORD *)v446 + 30) = 0;
                                    *(_OWORD *)(v446 + 104) = 0u;
                                    *(_OWORD *)(v446 + 88) = 0u;
                                    *(_QWORD *)v446 = v13;
                                    v448 = *(_QWORD *)(v13 + 8);
                                    *((_QWORD *)v446 + 1) = v448;
                                    if (v448)
                                      *(_QWORD *)(v448 + 16) = v446 + 8;
                                    *((_QWORD *)v446 + 2) = v71;
                                    *(_QWORD *)v71 = v446;
                                    if (*((_QWORD *)v446 + 4))
                                    {
                                      **((_QWORD **)v446 + 6) = *((_QWORD *)v446 + 5);
                                      v495 = *((_QWORD *)v446 + 5);
                                      if (v495)
                                        *(_QWORD *)(v495 + 16) = *((_QWORD *)v446 + 6);
                                    }
                                    *v447 = v445;
                                    if (v445)
                                    {
                                      v451 = v445[1];
                                      v450 = (llvm::Value ****)(v445 + 1);
                                      v449 = v451;
                                      *((_QWORD *)v446 + 5) = v451;
                                      if (v451)
                                        *((_QWORD *)v449 + 2) = v446 + 40;
                                      *((_QWORD *)v446 + 6) = v450;
                                      *v450 = v447;
                                    }
                                    llvm::Value::setName((uint64_t ***)v446 + 8, (uint64_t)&v503);
                                    if (v522 >= 0x41 && v521)
                                      MEMORY[0x1CAA32F9C](v521, 0x1000C8000313F17);
                                    v431 = 1;
                                    goto LABEL_770;
                                  }
                                  v252 = *(unsigned __int8 *)(v13 + 16);
                                  if (v252 == 5)
                                  {
                                    if (*(_WORD *)(v13 + 18) != 28)
                                      goto LABEL_431;
                                    v279 = (uint64_t ****)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                                    if (v14 != *v279)
                                      goto LABEL_431;
                                    v253 = (uint64_t)v279[4];
                                    if (!v253)
                                      goto LABEL_431;
                                  }
                                  else
                                  {
                                    if (v252 != 56)
                                      goto LABEL_431;
                                    if (v14 != *(uint64_t ****)(v13 - 64))
                                      goto LABEL_431;
                                    v253 = *(_QWORD *)(v13 - 32);
                                    if (!v253 || *(unsigned __int8 *)(v253 + 16) > 0x14u)
                                      goto LABEL_431;
                                  }
                                  v280 = *(_QWORD *)(a1 + 24);
                                  LOWORD(v505) = 257;
                                  v281 = sub_1C506EAA0(v280, v253, (uint64_t)&v503);
                                  v526 = 257;
                                  v168 = (uint64_t *)sub_1C4D89BCC(v280, v14, v281, (uint64_t)&__dst);
                                  v523 = 257;
                                  goto LABEL_495;
                                }
                                if (v171 == 5)
                                {
                                  if (*(_WORD *)(v13 + 18) != 29)
                                    goto LABEL_427;
                                  v263 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
                                  v248 = *(uint64_t ****)v263;
                                  v249 = *(uint64_t ****)(v263 + 32);
                                  if (!v248)
                                    goto LABEL_496;
                                }
                                else
                                {
                                  if (v171 != 57)
                                    goto LABEL_427;
                                  v248 = *(uint64_t ****)(v13 - 64);
                                  v249 = *(uint64_t ****)(v13 - 32);
                                  if (!v248)
                                  {
LABEL_496:
                                    if (!v249)
                                      goto LABEL_427;
                                    v169 = v14 == v248;
                                    v248 = v249;
                                    if (!v169)
                                      goto LABEL_427;
LABEL_473:
                                    v264 = *(_QWORD *)(a1 + 24);
                                    if ((*((_BYTE *)v14 + 23) & 0x10) == 0)
                                    {
                                      v327 = 0;
                                      v326 = &byte_1C871356D;
                                      goto LABEL_556;
                                    }
                                    v265 = ***v14;
                                    v266 = *(_QWORD *)(v265 + 152);
                                    v267 = *(unsigned int *)(v265 + 168);
                                    if ((_DWORD)v267)
                                    {
                                      LODWORD(v268) = (v267 - 1) & ((v14 >> 4) ^ (v14 >> 9));
                                      v269 = (uint64_t ****)(v266 + 16 * v268);
                                      v270 = *v269;
                                      if (*v269 == v14)
                                      {
LABEL_555:
                                        v325 = v269[1];
                                        v328 = *v325;
                                        v326 = (char *)(v325 + 2);
                                        v327 = v328;
LABEL_556:
                                        LOWORD(v505) = 773;
                                        *(_QWORD *)&v503 = v326;
                                        *((_QWORD *)&v503 + 1) = v327;
                                        *(_QWORD *)&v504 = ".not";
                                        v329 = sub_1C506EAA0(v264, (uint64_t)v14, (uint64_t)&v503);
                                        v526 = 257;
                                        v330 = (char *)operator new(0x80uLL);
                                        *(_QWORD *)v330 = 0;
                                        *((_QWORD *)v330 + 2) = 0;
                                        *((_QWORD *)v330 + 1) = 0;
                                        *((_QWORD *)v330 + 5) = 0;
                                        *((_QWORD *)v330 + 6) = 0;
                                        *((_QWORD *)v330 + 4) = 0;
                                        v331 = (uint64_t *)(v330 + 32);
                                        *((_QWORD *)v330 + 8) = *v248;
                                        v11 = (uint64_t)(v330 + 64);
                                        *((_QWORD *)v330 + 3) = v330 + 64;
                                        *((_QWORD *)v330 + 7) = v330 + 64;
                                        *((_QWORD *)v330 + 9) = 0;
                                        v330[80] = 56;
                                        v330[81] = 0;
                                        *((_WORD *)v330 + 41) = 0;
                                        *((_DWORD *)v330 + 21) = 2;
                                        *((_DWORD *)v330 + 30) = 0;
                                        *(_OWORD *)(v330 + 104) = 0u;
                                        *(_OWORD *)(v330 + 88) = 0u;
                                        *(_QWORD *)v330 = v248;
                                        v334 = v248[1];
                                        v333 = v248 + 1;
                                        v332 = v334;
                                        *((_QWORD *)v330 + 1) = v334;
                                        if (v334)
                                          v332[2] = (uint64_t *)(v330 + 8);
                                        *((_QWORD *)v330 + 2) = v333;
                                        *v333 = v330;
                                        if (*((_QWORD *)v330 + 4))
                                        {
                                          **((_QWORD **)v330 + 6) = *((_QWORD *)v330 + 5);
                                          v492 = *((_QWORD *)v330 + 5);
                                          if (v492)
                                            *(_QWORD *)(v492 + 16) = *((_QWORD *)v330 + 6);
                                        }
                                        *v331 = v329;
                                        if (v329)
                                        {
                                          v337 = *(_QWORD *)(v329 + 8);
                                          v336 = (uint64_t **)(v329 + 8);
                                          v335 = v337;
                                          *((_QWORD *)v330 + 5) = v337;
                                          if (v337)
                                            *(_QWORD *)(v335 + 16) = v330 + 40;
                                          *((_QWORD *)v330 + 6) = v336;
                                          *v336 = v331;
                                        }
                                        goto LABEL_689;
                                      }
                                      v271 = 1;
                                      while (v270 != (uint64_t ***)-4096)
                                      {
                                        v272 = v268 + v271++;
                                        v268 = v272 & (v267 - 1);
                                        v270 = *(uint64_t ****)(v266 + 16 * v268);
                                        if (v270 == v14)
                                        {
                                          v269 = (uint64_t ****)(v266 + 16 * v268);
                                          goto LABEL_555;
                                        }
                                      }
                                    }
                                    v269 = (uint64_t ****)(v266 + 16 * v267);
                                    goto LABEL_555;
                                  }
                                }
                                if (v14 == v249)
                                  goto LABEL_473;
                                goto LABEL_496;
                              }
                            }
LABEL_408:
                            LOWORD(v505) = 257;
                            v192 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v192 + 6) = 0;
                            *((_QWORD *)v192 + 8) = *v173;
                            v11 = (uint64_t)(v192 + 64);
                            *((_QWORD *)v192 + 3) = v192 + 64;
                            v193 = v192 + 32;
                            *((_QWORD *)v192 + 7) = v192 + 64;
                            *((_QWORD *)v192 + 9) = 0;
                            v194 = 56;
                            goto LABEL_409;
                          }
                          if (v171 != 58)
                          {
                            if (v171 != 57)
                              goto LABEL_425;
                            v225 = *(uint64_t ***)(v13 - 64);
                            v226 = *(uint64_t ***)(v13 - 32);
                            if (v173 != v225 || v174 != v226)
                            {
                              if (v173 != v226)
                                goto LABEL_425;
                              goto LABEL_400;
                            }
                            goto LABEL_408;
                          }
LABEL_393:
                          v227 = *(uint64_t ***)(v13 - 64);
                          if (!v227)
                            goto LABEL_425;
                          v228 = *(_QWORD *)(v13 - 32);
                          if (!v228)
                            goto LABEL_425;
                          goto LABEL_405;
                        }
                      }
                    }
LABEL_391:
                    if (v171 == 5)
                      goto LABEL_402;
                    if (v171 != 58)
                      goto LABEL_425;
                    goto LABEL_393;
                  }
                  v191 = (uint64_t ***)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                  v185 = *v191;
                  v186 = v191[4];
                }
                if (v173 == v185 && v174 == v186)
                  goto LABEL_290;
                if (v173 != v186)
                  goto LABEL_366;
                if (v174 == v185)
                {
LABEL_290:
                  LOWORD(v505) = 257;
                  v192 = (char *)operator new(0x80uLL);
                  *((_QWORD *)v192 + 6) = 0;
                  *((_QWORD *)v192 + 8) = *v173;
                  v11 = (uint64_t)(v192 + 64);
                  *((_QWORD *)v192 + 3) = v192 + 64;
                  v193 = v192 + 32;
                  *((_QWORD *)v192 + 7) = v192 + 64;
                  *((_QWORD *)v192 + 9) = 0;
                  v194 = 58;
LABEL_409:
                  v192[80] = v194;
                  v192[81] = 0;
                  *((_WORD *)v192 + 41) = 0;
                  *((_DWORD *)v192 + 21) = 2;
                  *(_OWORD *)(v192 + 88) = 0u;
                  *(_OWORD *)(v192 + 104) = 0u;
                  *((_DWORD *)v192 + 30) = 0;
                  *(_QWORD *)v192 = v173;
                  v236 = v173[1];
                  v235 = v173 + 1;
                  v234 = v236;
                  *((_QWORD *)v192 + 1) = v236;
                  if (v236)
                    v234[2] = (uint64_t)(v192 + 8);
                  *((_QWORD *)v192 + 2) = v235;
                  *v235 = v192;
                  v237 = v174 + 1;
                  v238 = v174[1];
                  *((_QWORD *)v192 + 5) = v238;
                  *((_QWORD *)v192 + 4) = v174;
                  if (v238)
                    v238[2] = (uint64_t)(v192 + 40);
                  *((_QWORD *)v192 + 6) = v237;
                  *v237 = v193;
                  goto LABEL_204;
                }
LABEL_298:
                if (v171 != 56)
                {
                  if (v171 != 41)
                  {
                    if (v171 != 5)
                      goto LABEL_366;
                    v190 = *(unsigned __int16 *)(v13 + 18);
                    goto LABEL_302;
                  }
LABEL_306:
                  v173 = *(uint64_t ***)(v13 - 64);
                  if (!v173)
                    goto LABEL_366;
                  v174 = *(uint64_t ***)(v13 - 32);
                  if (!v174)
                  {
LABEL_323:
                    v204 = *(uint64_t ***)(v13 - 32);
                    if (!v204)
                      goto LABEL_354;
LABEL_329:
                    if (v166 == 5)
                    {
                      if (*((_WORD *)v14 + 9) == 28)
                      {
                        v208 = &v14[-4 * (*((_DWORD *)v14 + 5) & 0x7FFFFFF)];
                        v206 = *v208;
                        v207 = v208[4];
LABEL_334:
                        if (v173 == v206 && v204 == v207 || v173 == v207 && v204 == v206)
                        {
                          LOWORD(v505) = 257;
                          v209 = (char *)operator new(0x80uLL);
                          *(_QWORD *)v209 = 0;
                          *((_QWORD *)v209 + 2) = 0;
                          *((_QWORD *)v209 + 1) = 0;
                          *((_QWORD *)v209 + 5) = 0;
                          *((_QWORD *)v209 + 6) = 0;
                          *((_QWORD *)v209 + 4) = 0;
                          *((_QWORD *)v209 + 8) = *v173;
                          v11 = (uint64_t)(v209 + 64);
                          *((_QWORD *)v209 + 3) = v209 + 64;
                          *((_QWORD *)v209 + 7) = v209 + 64;
                          *((_QWORD *)v209 + 9) = 0;
                          v209[80] = 57;
                          v209[81] = 0;
                          *((_WORD *)v209 + 41) = 0;
                          *((_DWORD *)v209 + 21) = 2;
                          *((_DWORD *)v209 + 30) = 0;
                          *(_OWORD *)(v209 + 104) = 0u;
                          *(_OWORD *)(v209 + 88) = 0u;
                          *(_QWORD *)v209 = v173;
                          v212 = v173[1];
                          v211 = v173 + 1;
                          v210 = v212;
                          *((_QWORD *)v209 + 1) = v212;
                          if (v212)
                            v210[2] = (uint64_t)(v209 + 8);
                          *((_QWORD *)v209 + 2) = v211;
                          *v211 = v209;
                          if (*((_QWORD *)v209 + 4))
                          {
                            **((_QWORD **)v209 + 6) = *((_QWORD *)v209 + 5);
                            v493 = *((_QWORD *)v209 + 5);
                            if (v493)
                              *(_QWORD *)(v493 + 16) = *((_QWORD *)v209 + 6);
                          }
                          *((_QWORD *)v209 + 4) = v204;
                          v215 = v204[1];
                          v214 = v204 + 1;
                          v213 = (uint64_t)v215;
                          *((_QWORD *)v209 + 5) = v215;
                          if (v215)
                            *(_QWORD *)(v213 + 16) = v209 + 40;
                          *((_QWORD *)v209 + 6) = v214;
                          *v214 = v209 + 32;
                          goto LABEL_204;
                        }
                      }
                    }
                    else if (v166 == 56)
                    {
                      v206 = *(v14 - 8);
                      v207 = *(v14 - 4);
                      goto LABEL_334;
                    }
LABEL_354:
                    if (v171 != 5)
                      goto LABEL_366;
                    v190 = *(unsigned __int16 *)(v13 + 18);
                    goto LABEL_356;
                  }
                  v198 = 1;
                  goto LABEL_309;
                }
LABEL_312:
                v201 = *(uint64_t ***)(v13 - 64);
                if (v201)
                {
                  v202 = *(_QWORD *)(v13 - 32);
                  if (v202)
                    goto LABEL_359;
                }
                goto LABEL_366;
              }
            }
            else
            {
              if (v171 != 43)
                goto LABEL_244;
              if (v14 != *(uint64_t ****)(v13 - 64))
                goto LABEL_244;
              v168 = *(uint64_t **)(v13 - 32);
              if (!v168)
                goto LABEL_244;
            }
LABEL_279:
            LOWORD(v505) = 257;
            p_dst = (std::string *)&v503;
LABEL_280:
            v106 = llvm::BinaryOperator::CreateNeg(v168, (llvm::Type *)p_dst, 0);
            goto LABEL_638;
          }
          v85 = *(unsigned __int8 *)(v13 + 16);
          if (v85 == 5)
          {
            if (*(_WORD *)(v13 + 18) != 15)
              goto LABEL_160;
            v86 = *(unsigned __int8 *)(*(_QWORD *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF)) + 16);
          }
          else
          {
            if (v85 != 43)
              goto LABEL_160;
            v86 = *(unsigned __int8 *)(*(_QWORD *)(v13 - 64) + 16);
            if (v86 > 0x14)
              goto LABEL_160;
          }
          if (v86 != 5)
            goto LABEL_131;
LABEL_160:
          v119 = *(_QWORD *)(a1 + 24);
          LOWORD(v505) = 257;
          v120 = sub_1C506EAA0(v119, v13, (uint64_t)&v503);
          v121 = *(_QWORD *)(a1 + 24);
          LOWORD(v505) = 257;
          v122 = (_QWORD *)sub_1C506EAA0(v121, (uint64_t)v14, (uint64_t)&v503);
          LOWORD(v505) = 257;
LABEL_198:
          v144 = (char *)operator new(0x80uLL);
          *((_QWORD *)v144 + 5) = 0;
          v145 = v144 + 40;
          *((_QWORD *)v144 + 6) = 0;
          *((_QWORD *)v144 + 8) = *v122;
          v11 = (uint64_t)(v144 + 64);
          *((_QWORD *)v144 + 3) = v144 + 64;
          *((_QWORD *)v144 + 7) = v144 + 64;
          *((_QWORD *)v144 + 9) = 0;
          v144[80] = 43;
          v144[81] = 0;
          *((_WORD *)v144 + 41) = 0;
          *((_DWORD *)v144 + 21) = 2;
          *(_OWORD *)(v144 + 88) = 0u;
          *(_OWORD *)(v144 + 104) = 0u;
          *((_DWORD *)v144 + 30) = 0;
          *(_QWORD *)v144 = v122;
          v148 = v122[1];
          v147 = v122 + 1;
          v146 = v148;
          *((_QWORD *)v144 + 1) = v148;
          if (v148)
            *(_QWORD *)(v146 + 16) = v144 + 8;
          *((_QWORD *)v144 + 2) = v147;
          *v147 = v144;
          *((_QWORD *)v144 + 4) = v120;
          if (v120)
          {
            v151 = *(_QWORD *)(v120 + 8);
            v150 = (_QWORD *)(v120 + 8);
            v149 = v151;
            *v145 = v151;
            if (v151)
              *(_QWORD *)(v149 + 16) = v145;
            *((_QWORD *)v144 + 6) = v150;
            *v150 = v144 + 32;
          }
LABEL_204:
          v152 = (std::string *)&v503;
LABEL_205:
          llvm::Value::setName((uint64_t ***)v11, (uint64_t)v152);
          goto LABEL_639;
        }
        v77 = *(unsigned __int8 *)(v13 + 16);
        if (v77 != 5)
        {
          if (v77 != 41)
            goto LABEL_181;
          v78 = *(_QWORD *)(v13 - 64);
          v79 = *(_QWORD *)(v78 + 8);
          if (!v79 || *(_QWORD *)(v79 + 8))
          {
LABEL_105:
            v80 = *(_QWORD *)(v13 - 32);
            v81 = *(_QWORD *)(v80 + 8);
            if (!v81 || *(_QWORD *)(v81 + 8))
              goto LABEL_180;
            v82 = *(unsigned __int8 *)(v80 + 16);
            if (v82 == 5)
            {
              if (*(_WORD *)(v80 + 18) != 15)
                goto LABEL_180;
              v217 = (std::string::size_type *)(v80 - 32 * (*(_DWORD *)(v80 + 20) & 0x7FFFFFF));
              v83 = (_QWORD *)*v217;
              if (!*v217)
                goto LABEL_180;
              v517 = *v217;
              v84 = v217[4];
              if (!v84)
                goto LABEL_180;
            }
            else
            {
              if (v82 != 43)
                goto LABEL_180;
              v83 = *(_QWORD **)(v80 - 64);
              if (!v83)
                goto LABEL_180;
              v517 = *(_QWORD *)(v80 - 64);
              v84 = *(_QWORD *)(v80 - 32);
              if (!v84)
                goto LABEL_180;
            }
            v516 = v84;
            v11 = *(_QWORD *)(v13 - 64);
            if (!v11)
            {
LABEL_180:
              v77 = *(unsigned __int8 *)(v13 + 16);
LABEL_181:
              if (v77 == 5)
              {
                if (*(_WORD *)(v13 + 18) != 15)
                  goto LABEL_206;
                v133 = (std::string::size_type *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
                if (!*v133)
                  goto LABEL_206;
                v517 = *v133;
                v132 = (_QWORD *)v133[4];
                if (!v132)
                  goto LABEL_206;
              }
              else if (v77 != 43
                     || !*(_QWORD *)(v13 - 64)
                     || (v517 = *(_QWORD *)(v13 - 64), (v132 = *(_QWORD **)(v13 - 32)) == 0))
              {
LABEL_206:
                v73 = 1;
                goto LABEL_93;
              }
              v516 = (std::string::size_type)v132;
              v134 = *(_QWORD *)(a1 + 24);
              v526 = 257;
              v120 = (*(uint64_t (**)(_QWORD, _QWORD *, uint64_t ***, _QWORD, _QWORD))(**(_QWORD **)(v134 + 72)
                                                                                              + 16))(*(_QWORD *)(v134 + 72), v132, v14, 0, 0);
              if (!v120)
              {
                LOWORD(v505) = 257;
                v135 = (char *)operator new(0x80uLL);
                *((_QWORD *)v135 + 5) = 0;
                v136 = (uint64_t ***)(v135 + 40);
                *((_QWORD *)v135 + 6) = 0;
                *((_QWORD *)v135 + 8) = *v132;
                v137 = (uint64_t)(v135 + 64);
                *((_QWORD *)v135 + 3) = v135 + 64;
                *((_QWORD *)v135 + 7) = v135 + 64;
                *((_QWORD *)v135 + 9) = 0;
                v135[80] = 41;
                v135[81] = 0;
                *((_WORD *)v135 + 41) = 0;
                *((_DWORD *)v135 + 21) = 2;
                *(_OWORD *)(v135 + 88) = 0u;
                *(_OWORD *)(v135 + 104) = 0u;
                *((_DWORD *)v135 + 30) = 0;
                *(_QWORD *)v135 = v132;
                v140 = v132[1];
                v139 = v132 + 1;
                v138 = v140;
                *((_QWORD *)v135 + 1) = v140;
                if (v140)
                  *(_QWORD *)(v138 + 16) = v135 + 8;
                *((_QWORD *)v135 + 2) = v139;
                *v139 = v135;
                *((_QWORD *)v135 + 4) = v14;
                if (v14)
                {
                  v143 = v14[1];
                  v142 = v14 + 1;
                  v141 = v143;
                  *v136 = v143;
                  if (v143)
                    v141[2] = (uint64_t *)v136;
                  *((_QWORD *)v135 + 6) = v142;
                  *v142 = v135 + 32;
                }
                llvm::Value::setName((uint64_t ***)v135 + 8, (uint64_t)&v503);
                v120 = sub_1C4773754((uint64_t *)v134, v137, (uint64_t)&__dst);
              }
              v122 = (_QWORD *)v517;
              LOWORD(v505) = 257;
              goto LABEL_198;
            }
LABEL_523:
            if ((v514 - 26) >= 4)
            {
              v291 = *(_QWORD *)(a1 + 24);
              v526 = 257;
              v292 = (_QWORD *)(*(uint64_t (**)(_QWORD, _QWORD *, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v291 + 72) + 16))(*(_QWORD *)(v291 + 72), v83, v11, 0, 0);
              if (!v292)
              {
                LOWORD(v505) = 257;
                v293 = (char *)operator new(0x80uLL);
                *(_QWORD *)v293 = 0;
                *((_QWORD *)v293 + 2) = 0;
                *((_QWORD *)v293 + 1) = 0;
                *((_QWORD *)v293 + 5) = 0;
                *((_QWORD *)v293 + 6) = 0;
                *((_QWORD *)v293 + 4) = 0;
                *((_QWORD *)v293 + 8) = *v83;
                v294 = (uint64_t)(v293 + 64);
                *((_QWORD *)v293 + 3) = v293 + 64;
                *((_QWORD *)v293 + 7) = v293 + 64;
                *((_QWORD *)v293 + 9) = 0;
                v293[80] = 41;
                v293[81] = 0;
                *((_WORD *)v293 + 41) = 0;
                *((_DWORD *)v293 + 21) = 2;
                *((_DWORD *)v293 + 30) = 0;
                *(_OWORD *)(v293 + 104) = 0u;
                *(_OWORD *)(v293 + 88) = 0u;
                *(_QWORD *)v293 = v83;
                v297 = v83[1];
                v296 = v83 + 1;
                v295 = v297;
                *((_QWORD *)v293 + 1) = v297;
                if (v297)
                  *(_QWORD *)(v295 + 16) = v293 + 8;
                *((_QWORD *)v293 + 2) = v296;
                *v296 = v293;
                if (*((_QWORD *)v293 + 4))
                {
                  **((_QWORD **)v293 + 6) = *((_QWORD *)v293 + 5);
                  v494 = *((_QWORD *)v293 + 5);
                  if (v494)
                    *(_QWORD *)(v494 + 16) = *((_QWORD *)v293 + 6);
                }
                *((_QWORD *)v293 + 4) = v11;
                v300 = *(_QWORD *)(v11 + 8);
                v299 = (_QWORD *)(v11 + 8);
                v298 = v300;
                *((_QWORD *)v293 + 5) = v300;
                if (v300)
                  *(_QWORD *)(v298 + 16) = v293 + 40;
                *((_QWORD *)v293 + 6) = v299;
                *v299 = v293 + 32;
                llvm::Value::setName((uint64_t ***)v293 + 8, (uint64_t)&v503);
                v292 = (_QWORD *)sub_1C4773754((uint64_t *)v291, v294, (uint64_t)&__dst);
              }
              v301 = *(_QWORD *)(a1 + 24);
              v302 = (_QWORD *)v516;
              v526 = 257;
              v303 = (*(uint64_t (**)(_QWORD, std::string::size_type, uint64_t ***, _QWORD, _QWORD))(**(_QWORD **)(v301 + 72) + 16))(*(_QWORD *)(v301 + 72), v516, v14, 0, 0);
              if (!v303)
              {
                LOWORD(v505) = 257;
                v304 = (char *)operator new(0x80uLL);
                *((_QWORD *)v304 + 5) = 0;
                v305 = (uint64_t ***)(v304 + 40);
                *((_QWORD *)v304 + 6) = 0;
                *((_QWORD *)v304 + 8) = *v302;
                v306 = (uint64_t)(v304 + 64);
                *((_QWORD *)v304 + 3) = v304 + 64;
                *((_QWORD *)v304 + 7) = v304 + 64;
                *((_QWORD *)v304 + 9) = 0;
                v304[80] = 41;
                v304[81] = 0;
                *((_WORD *)v304 + 41) = 0;
                *((_DWORD *)v304 + 21) = 2;
                *(_OWORD *)(v304 + 88) = 0u;
                *(_OWORD *)(v304 + 104) = 0u;
                *((_DWORD *)v304 + 30) = 0;
                *(_QWORD *)v304 = v302;
                v309 = v302[1];
                v308 = v302 + 1;
                v307 = v309;
                *((_QWORD *)v304 + 1) = v309;
                if (v309)
                  *(_QWORD *)(v307 + 16) = v304 + 8;
                *((_QWORD *)v304 + 2) = v308;
                *v308 = v304;
                *((_QWORD *)v304 + 4) = v14;
                if (v14)
                {
                  v312 = v14[1];
                  v311 = v14 + 1;
                  v310 = v312;
                  *v305 = v312;
                  if (v312)
                    v310[2] = (uint64_t *)v305;
                  *((_QWORD *)v304 + 6) = v311;
                  *v311 = v304 + 32;
                }
                llvm::Value::setName((uint64_t ***)v304 + 8, (uint64_t)&v503);
                v303 = sub_1C4773754((uint64_t *)v301, v306, (uint64_t)&__dst);
              }
              LOWORD(v505) = 257;
              v313 = (char *)operator new(0x80uLL);
              *((_QWORD *)v313 + 5) = 0;
              v314 = v313 + 40;
              *((_QWORD *)v313 + 6) = 0;
              *((_QWORD *)v313 + 8) = *v292;
              v11 = (uint64_t)(v313 + 64);
              *((_QWORD *)v313 + 3) = v313 + 64;
              *((_QWORD *)v313 + 7) = v313 + 64;
              *((_QWORD *)v313 + 9) = 0;
              v313[80] = 43;
              v313[81] = 0;
              *((_WORD *)v313 + 41) = 0;
              *((_DWORD *)v313 + 21) = 2;
              *(_OWORD *)(v313 + 88) = 0u;
              *(_OWORD *)(v313 + 104) = 0u;
              *((_DWORD *)v313 + 30) = 0;
              *(_QWORD *)v313 = v292;
              v317 = v292[1];
              v316 = v292 + 1;
              v315 = v317;
              *((_QWORD *)v313 + 1) = v317;
              if (v317)
                *(_QWORD *)(v315 + 16) = v313 + 8;
              *((_QWORD *)v313 + 2) = v316;
              *v316 = v313;
              *((_QWORD *)v313 + 4) = v303;
              if (v303)
              {
                v320 = *(_QWORD *)(v303 + 8);
                v319 = (_QWORD *)(v303 + 8);
                v318 = v320;
                *v314 = v320;
                if (v320)
                  *(_QWORD *)(v318 + 16) = v314;
                *((_QWORD *)v313 + 6) = v319;
                *v319 = v313 + 32;
              }
              goto LABEL_204;
            }
            goto LABEL_180;
          }
          v153 = *(unsigned __int8 *)(v78 + 16);
          if (v153 == 5)
          {
            if (*(_WORD *)(v78 + 18) != 15)
              goto LABEL_105;
            v216 = (std::string::size_type *)(v78 - 32 * (*(_DWORD *)(v78 + 20) & 0x7FFFFFF));
            v83 = (_QWORD *)*v216;
            if (!*v216)
              goto LABEL_105;
            v517 = *v216;
            v154 = v216[4];
            if (!v154)
              goto LABEL_105;
          }
          else
          {
            if (v153 != 43)
              goto LABEL_105;
            v83 = *(_QWORD **)(v78 - 64);
            if (!v83)
              goto LABEL_105;
            v517 = *(_QWORD *)(v78 - 64);
            v154 = *(_QWORD *)(v78 - 32);
            if (!v154)
              goto LABEL_105;
          }
          v516 = v154;
          v11 = *(_QWORD *)(v13 - 32);
          if (v11)
            goto LABEL_523;
          goto LABEL_105;
        }
        if (*(_WORD *)(v13 + 18) != 13)
          goto LABEL_180;
        v127 = (uint64_t *)(v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF));
        v128 = *v127;
        v129 = *(_QWORD *)(*v127 + 8);
        if (!v129 || *(_QWORD *)(v129 + 8))
        {
LABEL_178:
          v130 = v127[4];
          v131 = *(_QWORD *)(v130 + 8);
          if (!v131 || *(_QWORD *)(v131 + 8))
            goto LABEL_180;
          v195 = *(unsigned __int8 *)(v130 + 16);
          if (v195 == 5)
          {
            if (*(_WORD *)(v130 + 18) != 15)
              goto LABEL_180;
            v290 = (std::string::size_type *)(v130 - 32 * (*(_DWORD *)(v130 + 20) & 0x7FFFFFF));
            v83 = (_QWORD *)*v290;
            if (!*v290)
              goto LABEL_180;
            v517 = *v290;
            v196 = v290[4];
            if (!v196)
              goto LABEL_180;
          }
          else
          {
            if (v195 != 43)
              goto LABEL_180;
            v83 = *(_QWORD **)(v130 - 64);
            if (!v83)
              goto LABEL_180;
            v517 = *(_QWORD *)(v130 - 64);
            v196 = *(_QWORD *)(v130 - 32);
            if (!v196)
              goto LABEL_180;
          }
          v516 = v196;
          v11 = *v127;
          if (!*v127)
            goto LABEL_180;
          goto LABEL_523;
        }
        v188 = *(unsigned __int8 *)(v128 + 16);
        if (v188 == 5)
        {
          if (*(_WORD *)(v128 + 18) != 15)
            goto LABEL_178;
          v289 = (std::string::size_type *)(v128 - 32 * (*(_DWORD *)(v128 + 20) & 0x7FFFFFF));
          v83 = (_QWORD *)*v289;
          if (!*v289)
            goto LABEL_178;
          v517 = *v289;
          v189 = v289[4];
          if (!v189)
            goto LABEL_178;
        }
        else
        {
          if (v188 != 43)
            goto LABEL_178;
          v83 = *(_QWORD **)(v128 - 64);
          if (!v83)
            goto LABEL_178;
          v517 = *(_QWORD *)(v128 - 64);
          v189 = *(_QWORD *)(v128 - 32);
          if (!v189)
            goto LABEL_178;
        }
        v516 = v189;
        v11 = v127[4];
        if (v11)
          goto LABEL_523;
        goto LABEL_178;
      }
      v76 = *(unsigned __int8 *)(v13 + 16);
      if (v76 == 5)
      {
        if (*(_WORD *)(v13 + 18) != 13)
          goto LABEL_90;
        v87 = v13 - 32 * (*(_DWORD *)(v13 + 20) & 0x7FFFFFF);
        if (!*(_QWORD *)v87)
          goto LABEL_90;
        v517 = *(_QWORD *)v87;
        if ((sub_1C4D9EED4((uint64_t)&v503 + 8, *(llvm::Constant **)(v87 + 32)) & 1) == 0)
          goto LABEL_90;
      }
      else
      {
        if (v76 != 41)
          goto LABEL_90;
        if (!*(_QWORD *)(v13 - 64))
          goto LABEL_90;
        v517 = *(_QWORD *)(v13 - 64);
        if (!sub_1C4D9ED34((uint64_t)&v503 + 8, *(llvm::Constant **)(v13 - 32)))
          goto LABEL_90;
      }
      v88 = *(_QWORD *)(a1 + 24);
      LOWORD(v505) = 257;
      v89 = (_QWORD *)sub_1C506EAA0(v88, (uint64_t)v14, (uint64_t)&v503);
      v90 = v517;
      v515 = 257;
      v91 = (char *)operator new(0x80uLL);
      *((_QWORD *)v91 + 5) = 0;
      v92 = v91 + 40;
      *((_QWORD *)v91 + 6) = 0;
      *((_QWORD *)v91 + 8) = *v89;
      v11 = (uint64_t)(v91 + 64);
      *((_QWORD *)v91 + 3) = v91 + 64;
      *((_QWORD *)v91 + 7) = v91 + 64;
      *((_QWORD *)v91 + 9) = 0;
      v91[80] = 41;
      v91[81] = 0;
      *((_WORD *)v91 + 41) = 0;
      *((_DWORD *)v91 + 21) = 2;
      *(_OWORD *)(v91 + 88) = 0u;
      *(_OWORD *)(v91 + 104) = 0u;
      *((_DWORD *)v91 + 30) = 0;
      *(_QWORD *)v91 = v89;
      v95 = v89[1];
      v94 = v89 + 1;
      v93 = v95;
      *((_QWORD *)v91 + 1) = v95;
      if (v95)
        *(_QWORD *)(v93 + 16) = v91 + 8;
      *((_QWORD *)v91 + 2) = v94;
      *v94 = v91;
      *((_QWORD *)v91 + 4) = v90;
      if (v90)
      {
        v98 = *(_QWORD *)(v90 + 8);
        v97 = (_QWORD *)(v90 + 8);
        v96 = v98;
        *v92 = v98;
        if (v98)
          *(_QWORD *)(v96 + 16) = v92;
        *((_QWORD *)v91 + 6) = v97;
        *v97 = v91 + 32;
      }
      v48 = __p;
      goto LABEL_58;
    }
  }
  return (llvm::UndefValue **)v11;
}

uint64_t sub_1C579CB78(uint64_t a1, uint64_t a2)
{
  int v4;
  unsigned int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  _QWORD v12[2];

  v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 5)
  {
    if (*(_WORD *)(a1 + 18) == 30
      && (sub_1C4D9EED4((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32))|| (sub_1C4D9EED4((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF))) & 1) != 0))
    {
      return 1;
    }
  }
  else if (v4 == 58
         && ((sub_1C4D9ED34((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 32)) & 1) != 0
          || (sub_1C4D9ED34((uint64_t)v12 + 1, *(llvm::Constant **)(a1 - 64)) & 1) != 0))
  {
    return 1;
  }
  if ((sub_1C57A0CAC((int)v12, (llvm::Constant *)a1) & 1) != 0)
    return 1;
  v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 < 0x1C || v6 - 81 >= 2)
  {
    if (v6 == 5)
    {
      v8 = *(unsigned __int16 *)(a1 + 18);
      if (v8 == 15)
      {
        v9 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF));
      }
      else
      {
        if (v8 != 13)
          goto LABEL_31;
        v9 = *(_QWORD *)(a1 - 32 * (*(_DWORD *)(a1 + 20) & 0x7FFFFFF) + 32);
      }
      v7 = *(unsigned __int8 *)(v9 + 16);
LABEL_30:
      if (v7 != 5)
        return a2;
      goto LABEL_31;
    }
    if (v6 != 43)
    {
      if (v6 != 41 || (v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 32) + 16), v7 > 0x14))
      {
LABEL_31:
        BYTE4(v12[0]) = 0;
        LODWORD(v12[0]) = 0;
        if ((sub_1C57A0D98((uint64_t)v12, a1) & 1) == 0)
        {
          v12[0] = 0;
          v12[1] = 0;
          return sub_1C57A0EA4((uint64_t)v12, a1) & a2;
        }
        return a2;
      }
      goto LABEL_30;
    }
    v10 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 64) + 16);
    if (v10 > 0x14 || v10 == 5)
      goto LABEL_31;
  }
  return a2;
}

llvm::UndefValue **sub_1C579CD1C(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, llvm::Type *a5)
{
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  llvm::Value *v10;
  uint64_t ***v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ****v20;
  uint64_t ***v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ****v39;
  uint64_t ***v40;
  int v41;
  int v42;
  uint64_t ***v43;
  char *v44;
  uint64_t **v45;
  uint64_t **v46;
  unsigned __int8 *v47;
  llvm::Value *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t ***v51;
  char *v52;
  uint64_t **v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t ***v58;
  uint64_t ***v59;
  __int128 v60;
  __int128 v61;
  _BYTE *v62;
  uint64_t v63;

  v7 = *((_QWORD *)a2 - 4);
  v8 = *(_OWORD *)(a1 + 120);
  v9 = *(_OWORD *)(a1 + 104);
  v60 = *(_OWORD *)(a1 + 88);
  v61 = v9;
  v63 = *((_QWORD *)&v8 + 1);
  v62 = a2;
  v10 = (llvm::Value *)sub_1C4E6C8F4((unsigned __int8 *)v7, (uint64_t)&v60, a3, a4, a5);
  if (v10)
    return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v10);
  v12 = sub_1C579D190((uint64_t)a2);
  if (v12)
    return (llvm::UndefValue **)v12;
  v58 = 0;
  v59 = 0;
  if ((a2[17] & 0x10) != 0)
  {
    v13 = *(_QWORD *)(v7 + 8);
    if (v13)
    {
      if (!*(_QWORD *)(v13 + 8))
      {
        v24 = *(unsigned __int8 *)(v7 + 16);
        if (v24 == 5)
        {
          if (*(_WORD *)(v7 + 18) != 16)
            goto LABEL_7;
          v27 = (uint64_t *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
          v25 = *v27;
          if (!*v27)
            goto LABEL_7;
          v59 = (uint64_t ***)*v27;
          v26 = (_QWORD *)v27[4];
          if (!v26)
            goto LABEL_7;
        }
        else
        {
          if (v24 != 44)
            goto LABEL_7;
          v25 = *(_QWORD *)(v7 - 64);
          if (!v25)
            goto LABEL_7;
          v59 = *(uint64_t ****)(v7 - 64);
          v26 = *(_QWORD **)(v7 - 32);
          if (!v26)
            goto LABEL_7;
        }
        LOWORD(v62) = 257;
        v28 = (char *)operator new(0x80uLL);
        *((_QWORD *)v28 + 6) = 0;
        *((_QWORD *)v28 + 8) = *v26;
        v12 = (uint64_t ***)(v28 + 64);
        *((_QWORD *)v28 + 3) = v28 + 64;
        *((_QWORD *)v28 + 7) = v28 + 64;
        *((_QWORD *)v28 + 9) = 0;
        v28[80] = 44;
        v28[81] = 0;
        *((_WORD *)v28 + 41) = 0;
        *((_DWORD *)v28 + 21) = 2;
        *(_OWORD *)(v28 + 88) = 0u;
        *(_OWORD *)(v28 + 104) = 0u;
        *((_DWORD *)v28 + 30) = 0;
        *(_QWORD *)v28 = v26;
        v31 = v26[1];
        v30 = v26 + 1;
        v29 = v31;
        *((_QWORD *)v28 + 1) = v31;
        if (v31)
          *(_QWORD *)(v29 + 16) = v28 + 8;
        *((_QWORD *)v28 + 2) = v30;
        *v30 = v28;
        v32 = (_QWORD *)(v25 + 8);
        v33 = *(_QWORD *)(v25 + 8);
        *((_QWORD *)v28 + 5) = v33;
        *((_QWORD *)v28 + 4) = v25;
        if (v33)
          *(_QWORD *)(v33 + 16) = v28 + 40;
        *((_QWORD *)v28 + 6) = v32;
        *v32 = v28 + 32;
        llvm::Value::setName((uint64_t ***)v28 + 8, (uint64_t)&v60);
        llvm::Instruction::copyIRFlags((uint64_t)v12, (uint64_t)a2, 1);
        return (llvm::UndefValue **)v12;
      }
    }
  }
LABEL_7:
  v12 = sub_1C579D6DC((uint64_t)a2, *(uint64_t **)(a1 + 24));
  if (!v12)
  {
    v57 = 0;
    *(_QWORD *)&v60 = &v57;
    *((_QWORD *)&v60 + 1) = &v59;
    *(_QWORD *)&v61 = &v58;
    v14 = *(_QWORD *)(v7 + 8);
    if (v14 && !*(_QWORD *)(v14 + 8) && sub_1C4FA9CBC((_QWORD **)&v60, v7))
    {
      v56 = 0;
      *(_QWORD *)&v60 = &v56;
      if (sub_1C4E7B6EC((_QWORD **)&v60, (uint64_t)v59))
      {
        v15 = *(uint64_t **)(a1 + 24);
        if ((*((_BYTE *)v58 + 23) & 0x10) == 0)
        {
          v45 = 0;
          v44 = &byte_1C871356D;
          goto LABEL_44;
        }
        v16 = ***v58;
        v17 = *(_QWORD *)(v16 + 152);
        v18 = *(unsigned int *)(v16 + 168);
        if ((_DWORD)v18)
        {
          LODWORD(v19) = (v18 - 1) & ((v58 >> 4) ^ (v58 >> 9));
          v20 = (uint64_t ****)(v17 + 16 * v19);
          v21 = *v20;
          if (*v20 == v58)
          {
LABEL_43:
            v43 = v20[1];
            v46 = *v43;
            v44 = (char *)(v43 + 2);
            v45 = v46;
LABEL_44:
            LOWORD(v62) = 773;
            *(_QWORD *)&v60 = v44;
            *((_QWORD *)&v60 + 1) = v45;
            *(_QWORD *)&v61 = ".neg";
            v47 = sub_1C579D8FC(v15, (uint64_t)v58, (uint64_t)a2, (uint64_t)&v60);
            LOWORD(v62) = 257;
            v48 = sub_1C4FC8748(v57, v56, (uint64_t)v47, (uint64_t)&v60, 0, 0);
            v12 = (uint64_t ***)v48;
            v49 = v56;
            v50 = (uint64_t)v58;
LABEL_48:
            *((_BYTE *)v48 + 17) = a2[17] & 0xFE | *((_BYTE *)v48 + 17) & 1;
            if (*(_BYTE *)(v7 + 16) == 85
              && v49 != (uint64_t *)v50
              && (*(_BYTE *)(v7 + 17) & 0x10) == 0
              && (sub_1C4F8BE80(*(uint64_t ****)(v7 - 96), 0, 0, 0, 0, 0) & 1) == 0)
            {
              *((_BYTE *)v12 + 17) &= ~0x10u;
            }
            return (llvm::UndefValue **)v12;
          }
          v22 = 1;
          while (v21 != (uint64_t ***)-4096)
          {
            v23 = v19 + v22++;
            v19 = v23 & (v18 - 1);
            v21 = *(uint64_t ****)(v17 + 16 * v19);
            if (v21 == v58)
            {
              v20 = (uint64_t ****)(v17 + 16 * v19);
              goto LABEL_43;
            }
          }
        }
        v20 = (uint64_t ****)(v17 + 16 * v18);
        goto LABEL_43;
      }
      *(_QWORD *)&v60 = &v56;
      if (sub_1C4E7B6EC((_QWORD **)&v60, (uint64_t)v58))
      {
        v34 = *(uint64_t **)(a1 + 24);
        if ((*((_BYTE *)v59 + 23) & 0x10) == 0)
        {
          v53 = 0;
          v52 = &byte_1C871356D;
          goto LABEL_47;
        }
        v35 = ***v59;
        v36 = *(_QWORD *)(v35 + 152);
        v37 = *(unsigned int *)(v35 + 168);
        if ((_DWORD)v37)
        {
          LODWORD(v38) = (v37 - 1) & ((v59 >> 4) ^ (v59 >> 9));
          v39 = (uint64_t ****)(v36 + 16 * v38);
          v40 = *v39;
          if (*v39 == v59)
          {
LABEL_46:
            v51 = v39[1];
            v54 = *v51;
            v52 = (char *)(v51 + 2);
            v53 = v54;
LABEL_47:
            LOWORD(v62) = 773;
            *(_QWORD *)&v60 = v52;
            *((_QWORD *)&v60 + 1) = v53;
            *(_QWORD *)&v61 = ".neg";
            v55 = (uint64_t *)sub_1C579D8FC(v34, (uint64_t)v59, (uint64_t)a2, (uint64_t)&v60);
            LOWORD(v62) = 257;
            v48 = sub_1C4FC8748(v57, v55, (uint64_t)v56, (uint64_t)&v60, 0, 0);
            v12 = (uint64_t ***)v48;
            v49 = v56;
            v50 = (uint64_t)v59;
            goto LABEL_48;
          }
          v41 = 1;
          while (v40 != (uint64_t ***)-4096)
          {
            v42 = v38 + v41++;
            v38 = v42 & (v37 - 1);
            v40 = *(uint64_t ****)(v36 + 16 * v38);
            if (v40 == v59)
            {
              v39 = (uint64_t ****)(v36 + 16 * v38);
              goto LABEL_46;
            }
          }
        }
        v39 = (uint64_t ****)(v36 + 16 * v37);
        goto LABEL_46;
      }
    }
    return 0;
  }
  return (llvm::UndefValue **)v12;
}

uint64_t ***sub_1C579D190(uint64_t a1)
{
  llvm::Type *v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t *v6;
  int v7;
  llvm::Constant **v8;
  uint64_t v9;
  int v10;
  llvm::Constant **v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t ***v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  unsigned __int8 *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  int v58;
  int v59;
  unsigned int v60;
  char v61;
  char v62;
  char v63;
  _BYTE v64[32];
  __int16 v65;

  if (!sub_1C4774A9C(a1))
    return 0;
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 0x1B)
    v4 = v3 - 28;
  else
    v4 = *(unsigned __int16 *)(a1 + 18);
  if (v4 == 12)
  {
    v5 = *(_DWORD *)(a1 + 20);
    if ((v5 & 0x40000000) != 0)
      v6 = *(uint64_t **)(a1 - 8);
    else
      v6 = (uint64_t *)(a1 - 32 * (v5 & 0x7FFFFFF));
    v9 = *v6;
  }
  else
  {
    if (v4 != 16)
      return 0;
    if ((*(_BYTE *)(a1 + 17) & 0x10) != 0)
    {
      v10 = *(_DWORD *)(a1 + 20);
      if ((v10 & 0x40000000) != 0)
        v11 = *(llvm::Constant ***)(a1 - 8);
      else
        v11 = (llvm::Constant **)(a1 - 32 * (v10 & 0x7FFFFFF));
      if (!sub_1C4E5C310((uint64_t)v64, *v11))
        return 0;
    }
    else
    {
      v7 = *(_DWORD *)(a1 + 20);
      if ((v7 & 0x40000000) != 0)
        v8 = *(llvm::Constant ***)(a1 - 8);
      else
        v8 = (llvm::Constant **)(a1 - 32 * (v7 & 0x7FFFFFF));
      if (!sub_1C4E5C46C((uint64_t)v64, *v8))
        return 0;
    }
    v12 = *(_DWORD *)(a1 + 20);
    if ((v12 & 0x40000000) != 0)
      v13 = *(_QWORD *)(a1 - 8);
    else
      v13 = a1 - 32 * (v12 & 0x7FFFFFF);
    v9 = *(_QWORD *)(v13 + 32);
  }
  v14 = *(_QWORD *)(v9 + 8);
  if (!v14)
    return 0;
  if (*(_QWORD *)(v14 + 8))
    return 0;
  v15 = *(unsigned __int8 *)(v9 + 16);
  if (v15 < 0x1C)
    return 0;
  if (v15 == 49)
  {
    v28 = *(_QWORD *)(v9 - 64);
    if (v28)
    {
      v29 = *(_QWORD *)(v9 - 32);
      if (v29)
        v30 = *(unsigned __int8 *)(v29 + 16) > 0x14u;
      else
        v30 = 1;
      if (!v30)
      {
        v41 = llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, *(unsigned __int8 **)(v9 - 32), 0, 0, v2);
        v65 = 257;
        v42 = (char *)operator new(0x80uLL);
        *((_QWORD *)v42 + 5) = 0;
        v43 = v42 + 40;
        *((_QWORD *)v42 + 6) = 0;
        *((_QWORD *)v42 + 8) = *(_QWORD *)v28;
        v21 = (uint64_t ***)(v42 + 64);
        *((_QWORD *)v42 + 3) = v42 + 64;
        *((_QWORD *)v42 + 7) = v42 + 64;
        *((_QWORD *)v42 + 9) = 0;
        v42[80] = 49;
        v42[81] = 0;
        *((_WORD *)v42 + 41) = 0;
        *((_DWORD *)v42 + 21) = 2;
        *(_OWORD *)(v42 + 88) = 0u;
        *(_OWORD *)(v42 + 104) = 0u;
        *((_DWORD *)v42 + 30) = 0;
        *(_QWORD *)v42 = v28;
        v46 = *(_QWORD *)(v28 + 8);
        v45 = (_QWORD *)(v28 + 8);
        v44 = v46;
        *((_QWORD *)v42 + 1) = v46;
        if (v46)
          *(_QWORD *)(v44 + 16) = v42 + 8;
        *((_QWORD *)v42 + 2) = v45;
        *v45 = v42;
        *((_QWORD *)v42 + 4) = v41;
        if (v41)
        {
          v49 = *(_QWORD *)(v41 + 8);
          v48 = (_QWORD *)(v41 + 8);
          v47 = v49;
          *v43 = v49;
          if (v49)
            *(_QWORD *)(v47 + 16) = v43;
          *((_QWORD *)v42 + 6) = v48;
          *v48 = v42 + 32;
        }
        goto LABEL_64;
      }
      if (*(unsigned __int8 *)(v28 + 16) <= 0x14u)
      {
        v50 = (_QWORD *)llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, *(unsigned __int8 **)(v9 - 64), 0, 0, v2);
        v65 = 257;
        v51 = (char *)operator new(0x80uLL);
        v52 = v51;
        *((_QWORD *)v51 + 6) = 0;
        *((_QWORD *)v51 + 8) = *v50;
        v21 = (uint64_t ***)(v51 + 64);
        *((_QWORD *)v51 + 3) = v51 + 64;
        *((_QWORD *)v51 + 7) = v51 + 64;
        *((_QWORD *)v51 + 9) = 0;
        v51[80] = 49;
        v51[81] = 0;
        *((_WORD *)v51 + 41) = 0;
        *((_DWORD *)v51 + 21) = 2;
        *(_OWORD *)(v51 + 88) = 0u;
        *(_OWORD *)(v51 + 104) = 0u;
        *((_DWORD *)v51 + 30) = 0;
        *(_QWORD *)v51 = v50;
        v55 = v50[1];
        v54 = v50 + 1;
        v53 = v55;
        *((_QWORD *)v51 + 1) = v55;
        if (v55)
          *(_QWORD *)(v53 + 16) = v51 + 8;
        *((_QWORD *)v51 + 2) = v54;
        *v54 = v51;
        v56 = (_QWORD *)(v29 + 8);
        v57 = *(_QWORD *)(v29 + 8);
        *((_QWORD *)v51 + 5) = v57;
        *((_QWORD *)v51 + 4) = v29;
        if (v57)
          *(_QWORD *)(v57 + 16) = v51 + 40;
        *((_QWORD *)v51 + 6) = v56;
        *v56 = v51 + 32;
        llvm::Value::setName((uint64_t ***)v51 + 8, (uint64_t)v64);
        llvm::Instruction::copyIRFlags((uint64_t)v21, a1, 1);
        v58 = *(unsigned __int8 *)(a1 + 17) >> 1;
        if (v58 == 127)
          v58 = -1;
        v59 = *(unsigned __int8 *)(v9 + 17) >> 1;
        if (v59 == 127)
          v59 = -1;
        v60 = v59 & v58;
        if (((v60 >> 3) & 1) != 0)
          v61 = 16;
        else
          v61 = 0;
        v62 = v61 | v52[81] & 0xE7;
        if (((v60 >> 2) & 1) != 0)
          v63 = 8;
        else
          v63 = 0;
        v52[81] = v62 | v63;
        return v21;
      }
    }
  }
  else if (v15 == 46)
  {
    v16 = *(_QWORD **)(v9 - 64);
    if (v16)
    {
      v17 = *(unsigned __int8 **)(v9 - 32);
      if (v17)
      {
        if (v17[16] <= 0x14u)
        {
          v18 = llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, v17, 0, 0, v2);
          v65 = 257;
          v19 = (char *)operator new(0x80uLL);
          *((_QWORD *)v19 + 5) = 0;
          v20 = v19 + 40;
          *((_QWORD *)v19 + 6) = 0;
          *((_QWORD *)v19 + 8) = *v16;
          v21 = (uint64_t ***)(v19 + 64);
          *((_QWORD *)v19 + 3) = v19 + 64;
          *((_QWORD *)v19 + 7) = v19 + 64;
          *((_QWORD *)v19 + 9) = 0;
          v19[80] = 46;
          v19[81] = 0;
          *((_WORD *)v19 + 41) = 0;
          *((_DWORD *)v19 + 21) = 2;
          *(_OWORD *)(v19 + 88) = 0u;
          *(_OWORD *)(v19 + 104) = 0u;
          *((_DWORD *)v19 + 30) = 0;
          *(_QWORD *)v19 = v16;
          v24 = v16[1];
          v23 = v16 + 1;
          v22 = v24;
          *((_QWORD *)v19 + 1) = v24;
          if (v24)
            *(_QWORD *)(v22 + 16) = v19 + 8;
          *((_QWORD *)v19 + 2) = v23;
          *v23 = v19;
          *((_QWORD *)v19 + 4) = v18;
          if (v18)
          {
            v27 = *(_QWORD *)(v18 + 8);
            v26 = (_QWORD *)(v18 + 8);
            v25 = v27;
            *v20 = v27;
            if (v27)
              *(_QWORD *)(v25 + 16) = v20;
            *((_QWORD *)v19 + 6) = v26;
            *v26 = v19 + 32;
          }
LABEL_64:
          llvm::Value::setName(v21, (uint64_t)v64);
          llvm::Instruction::copyIRFlags((uint64_t)v21, a1, 1);
          return v21;
        }
      }
    }
  }
  if ((*(_BYTE *)(a1 + 17) & 0x10) == 0)
    return 0;
  if (v15 != 42)
    return 0;
  v31 = *(_QWORD *)(v9 - 64);
  if (!v31)
    return 0;
  v21 = 0;
  v32 = *(unsigned __int8 **)(v9 - 32);
  if (v32 && v32[16] <= 0x14u)
  {
    v33 = (_QWORD *)llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, v32, 0, 0, v2);
    v65 = 257;
    v34 = (char *)operator new(0x80uLL);
    *((_QWORD *)v34 + 6) = 0;
    *((_QWORD *)v34 + 8) = *v33;
    v21 = (uint64_t ***)(v34 + 64);
    *((_QWORD *)v34 + 3) = v34 + 64;
    *((_QWORD *)v34 + 7) = v34 + 64;
    *((_QWORD *)v34 + 9) = 0;
    v34[80] = 44;
    v34[81] = 0;
    *((_WORD *)v34 + 41) = 0;
    *((_DWORD *)v34 + 21) = 2;
    *(_OWORD *)(v34 + 88) = 0u;
    *(_OWORD *)(v34 + 104) = 0u;
    *((_DWORD *)v34 + 30) = 0;
    *(_QWORD *)v34 = v33;
    v37 = v33[1];
    v36 = v33 + 1;
    v35 = v37;
    *((_QWORD *)v34 + 1) = v37;
    if (v37)
      *(_QWORD *)(v35 + 16) = v34 + 8;
    *((_QWORD *)v34 + 2) = v36;
    *v36 = v34;
    v38 = (_QWORD *)(v31 + 8);
    v39 = *(_QWORD *)(v31 + 8);
    *((_QWORD *)v34 + 5) = v39;
    *((_QWORD *)v34 + 4) = v31;
    if (v39)
      *(_QWORD *)(v39 + 16) = v34 + 40;
    *((_QWORD *)v34 + 6) = v38;
    *v38 = v34 + 32;
    goto LABEL_64;
  }
  return v21;
}

uint64_t ***sub_1C579D6DC(uint64_t a1, uint64_t *a2)
{
  uint64_t ***v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  unsigned __int8 *v12;
  char *v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v23[32];
  __int16 v24;
  _QWORD *v25[4];
  __int16 v26;
  uint64_t v27;

  v27 = 0;
  v25[0] = &v27;
  v4 = 0;
  if (!sub_1C4E7B6EC(v25, a1))
    return v4;
  v5 = *(_QWORD *)(v27 + 8);
  if (!v5 || *(_QWORD *)(v5 + 8))
    return 0;
  v7 = *(unsigned __int8 *)(v27 + 16);
  if (v7 != 5)
  {
    if (v7 != 49)
    {
      if (v7 != 46)
        return 0;
      v8 = *(_QWORD *)(v27 - 64);
      if (!v8)
        return 0;
      v9 = *(_QWORD *)(v27 - 32);
      if (!v9)
        return 0;
      goto LABEL_16;
    }
    v16 = *(_QWORD *)(v27 - 64);
    if (!v16)
      return 0;
    v9 = *(_QWORD *)(v27 - 32);
    if (!v9)
      return 0;
LABEL_22:
    v26 = 257;
    v12 = sub_1C579D8FC(a2, v16, a1, (uint64_t)v25);
    v24 = 257;
    v13 = (char *)operator new(0x80uLL);
    *((_QWORD *)v13 + 6) = 0;
    *((_QWORD *)v13 + 8) = *(_QWORD *)v12;
    v4 = (uint64_t ***)(v13 + 64);
    *((_QWORD *)v13 + 3) = v13 + 64;
    v14 = v13 + 32;
    *((_QWORD *)v13 + 7) = v13 + 64;
    *((_QWORD *)v13 + 9) = 0;
    v15 = 49;
    goto LABEL_23;
  }
  v10 = *(unsigned __int16 *)(v27 + 18);
  if (v10 == 21)
  {
    v17 = (uint64_t *)(v27 - 32 * (*(_DWORD *)(v27 + 20) & 0x7FFFFFF));
    v16 = *v17;
    if (!*v17)
      return 0;
    v9 = v17[4];
    if (!v9)
      return 0;
    goto LABEL_22;
  }
  if (v10 != 18)
    return 0;
  v11 = (uint64_t *)(v27 - 32 * (*(_DWORD *)(v27 + 20) & 0x7FFFFFF));
  v8 = *v11;
  if (!*v11)
    return 0;
  v9 = v11[4];
  if (!v9)
    return 0;
LABEL_16:
  v26 = 257;
  v12 = sub_1C579D8FC(a2, v8, a1, (uint64_t)v25);
  v24 = 257;
  v13 = (char *)operator new(0x80uLL);
  *((_QWORD *)v13 + 6) = 0;
  *((_QWORD *)v13 + 8) = *(_QWORD *)v12;
  v4 = (uint64_t ***)(v13 + 64);
  *((_QWORD *)v13 + 3) = v13 + 64;
  v14 = v13 + 32;
  *((_QWORD *)v13 + 7) = v13 + 64;
  *((_QWORD *)v13 + 9) = 0;
  v15 = 46;
LABEL_23:
  v13[80] = v15;
  v13[81] = 0;
  *((_WORD *)v13 + 41) = 0;
  *((_DWORD *)v13 + 21) = 2;
  *(_OWORD *)(v13 + 88) = 0u;
  *(_OWORD *)(v13 + 104) = 0u;
  *((_DWORD *)v13 + 30) = 0;
  *(_QWORD *)v13 = v12;
  v20 = *((_QWORD *)v12 + 1);
  v19 = v12 + 8;
  v18 = v20;
  *((_QWORD *)v13 + 1) = v20;
  if (v20)
    *(_QWORD *)(v18 + 16) = v13 + 8;
  *((_QWORD *)v13 + 2) = v19;
  *v19 = v13;
  v21 = (_QWORD *)(v9 + 8);
  v22 = *(_QWORD *)(v9 + 8);
  *((_QWORD *)v13 + 5) = v22;
  *((_QWORD *)v13 + 4) = v9;
  if (v22)
    *(_QWORD *)(v22 + 16) = v13 + 40;
  *((_QWORD *)v13 + 6) = v21;
  *v21 = v14;
  llvm::Value::setName(v4, (uint64_t)v23);
  llvm::Instruction::copyIRFlags((uint64_t)v4, a1, 1);
  return v4;
}

unsigned __int8 *sub_1C579D8FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 **v12;
  int v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  llvm::Value *v16;
  char v17;
  llvm::MDNode *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 **v23;
  int v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27[4];
  __int16 v28;
  unsigned __int8 *v29;

  if (!a2 || *(unsigned __int8 *)(a2 + 16) > 0x14u)
  {
    v28 = 257;
    v16 = (llvm::Value *)llvm::UnaryOperator::Create(12, (uint64_t *)a2, (uint64_t)v27, 0);
    v7 = (unsigned __int8 *)v16;
    v17 = *(_BYTE *)(a3 + 17) & 0xFE;
    v18 = (llvm::MDNode *)a1[11];
    if (v18)
      llvm::Value::setMetadata(v16, 3, v18);
    v7[17] |= v17;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1[10] + 16))(a1[10], v7, a4, a1[6], a1[7]);
    v19 = *((unsigned int *)a1 + 2);
    if (!(_DWORD)v19)
      return v7;
    v21 = *a1;
    v22 = *a1 + 16 * v19;
    v23 = (unsigned __int8 **)(v7 + 48);
    while (1)
    {
      v24 = *(_DWORD *)v21;
      v25 = *(unsigned __int8 **)(v21 + 8);
      if (v25)
      {
        if (!v24)
        {
          v29 = *(unsigned __int8 **)(v21 + 8);
          llvm::MetadataTracking::track((uint64_t)&v29, v25, 2);
LABEL_42:
          if (&v29 == v23)
          {
            if (v29)
              llvm::MetadataTracking::untrack((uint64_t)&v29, v29);
          }
          else
          {
            if (*v23)
              llvm::MetadataTracking::untrack((uint64_t)(v7 + 48), *v23);
            v26 = v29;
            *v23 = v29;
            if (v26)
              llvm::MetadataTracking::retrack((uint64_t)&v29, v26, (uint64_t)(v7 + 48));
          }
          goto LABEL_39;
        }
      }
      else
      {
        if (!*v23 && (v7[23] & 0x20) == 0)
          goto LABEL_39;
        if (!v24)
        {
          v29 = 0;
          goto LABEL_42;
        }
      }
      llvm::Value::setMetadata((llvm::Value *)v7, v24, (llvm::MDNode *)v25);
LABEL_39:
      v21 += 16;
      if (v21 == v22)
        return v7;
    }
  }
  v7 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1[9] + 200))(a1[9]);
  if (v7)
    v8 = v7[16] >= 0x1Cu;
  else
    v8 = 0;
  if (v8)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1[10] + 16))(a1[10], v7, a4, a1[6], a1[7]);
    v9 = *((unsigned int *)a1 + 2);
    if ((_DWORD)v9)
    {
      v10 = *a1;
      v11 = *a1 + 16 * v9;
      v12 = (unsigned __int8 **)(v7 + 48);
      do
      {
        v13 = *(_DWORD *)v10;
        v14 = *(unsigned __int8 **)(v10 + 8);
        if (v14)
        {
          if (!v13)
          {
            v27[0] = *(unsigned __int8 **)(v10 + 8);
            llvm::MetadataTracking::track((uint64_t)v27, v14, 2);
LABEL_20:
            if (v27 == v12)
            {
              if (v27[0])
                llvm::MetadataTracking::untrack((uint64_t)v27, v27[0]);
            }
            else
            {
              if (*v12)
                llvm::MetadataTracking::untrack((uint64_t)(v7 + 48), *v12);
              v15 = v27[0];
              *v12 = v27[0];
              if (v15)
                llvm::MetadataTracking::retrack((uint64_t)v27, v15, (uint64_t)(v7 + 48));
            }
            goto LABEL_17;
          }
        }
        else
        {
          if (!*v12 && (v7[23] & 0x20) == 0)
            goto LABEL_17;
          if (!v13)
          {
            v27[0] = 0;
            goto LABEL_20;
          }
        }
        llvm::Value::setMetadata((llvm::Value *)v7, v13, (llvm::MDNode *)v14);
LABEL_17:
        v10 += 16;
      }
      while (v10 != v11);
    }
  }
  return v7;
}

llvm::UndefValue **sub_1C579DB64(uint64_t a1, uint64_t a2)
{
  llvm *v4;
  llvm::Constant *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  int v9;
  llvm::Constant *v10;
  uint64_t ***v12;
  uint64_t *v13;
  uint64_t v14;
  llvm::Type *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t *FSub;
  char *v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void **v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  int v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  llvm::Value *v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t **v60;
  uint64_t v61;
  _QWORD *v62;
  int v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t *v66;
  unsigned __int8 *v67;
  _QWORD *v68;
  unsigned __int8 *v69;
  _QWORD *v70;
  uint64_t **v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t ***v74;
  llvm::Value *v75;
  int v76;
  uint64_t v77;
  llvm::Constant *v78;
  llvm::Constant *v79;
  llvm::Constant *v80;
  llvm::ValueHandleBase *v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  llvm::ConstantExpr *v88;
  llvm::Constant *v89;
  llvm::Constant *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  int v103;
  uint64_t *v104;
  uint64_t **v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t *v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t **v129;
  uint64_t **v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t **v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t *v136;
  void *__p[2];
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t *v144;
  uint64_t v145;
  _QWORD **v146;
  uint64_t v147;

  v147 = *MEMORY[0x1E0C80C00];
  v4 = *(llvm **)(a2 - 64);
  v5 = *(llvm::Constant **)(a2 - 32);
  v6 = (unint64_t)*(unsigned __int8 *)(a2 + 17) >> 1;
  v7 = *(_OWORD *)(a1 + 120);
  v8 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)__p = *(_OWORD *)(a1 + 88);
  v138 = v8;
  v140 = *((_QWORD *)&v7 + 1);
  v139 = a2;
  if ((_DWORD)v6 == 127)
    v9 = -1;
  else
    v9 = v6;
  v10 = sub_1C4E6CCB4(v4, v5, v9, (uint64_t)__p, 0, (llvm::DSOLocalEquivalent **)1);
  if (v10)
    return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v10);
  v12 = (uint64_t ***)sub_1C57826B8(a1, (unsigned __int8 *)a2);
  if (!v12)
  {
    v12 = (uint64_t ***)sub_1C578171C(a1, a2);
    if (!v12)
    {
      v136 = 0;
      __p[0] = &v136;
      if (sub_1C4E7B6EC((_QWORD **)__p, a2))
      {
        v13 = v136;
LABEL_10:
        LOWORD(v139) = 257;
LABEL_11:
        v14 = llvm::UnaryOperator::Create(12, v13, (uint64_t)__p, 0);
        v12 = (uint64_t ***)v14;
LABEL_12:
        llvm::Instruction::copyIRFlags(v14, a2, 1);
        return (llvm::UndefValue **)v12;
      }
      v12 = sub_1C579D190(a2);
      if (v12)
        return (llvm::UndefValue **)v12;
      v12 = sub_1C579D6DC(a2, *(uint64_t **)(a1 + 24));
      if (v12)
        return (llvm::UndefValue **)v12;
      v134 = 0;
      v135 = 0;
      v16 = *(_QWORD *)(a2 - 64);
      v17 = *(_QWORD *)(a2 - 32);
      if ((*(_BYTE *)(a2 + 17) & 0x10) == 0
        && !llvm::CannotBeNegativeZero(*(_QWORD *)(a2 - 64), *(uint64_t **)(a1 + 96), 0)
        || (v18 = *(_QWORD *)(v17 + 8)) == 0
        || *(_QWORD *)(v18 + 8))
      {
LABEL_20:
        if ((*(_BYTE *)(a2 + 17) & 0x10) != 0 && *(_BYTE *)(v16 + 16) != 5)
        {
          __p[0] = &v135;
          v19 = *(_QWORD *)(v16 + 8);
          if (v19)
          {
            if (!*(_QWORD *)(v19 + 8) && sub_1C4E7B6EC((_QWORD **)__p, v16))
            {
              v20 = *(_QWORD *)(a1 + 24);
              LOWORD(v139) = 257;
              v13 = (uint64_t *)sub_1C579E980(v20, v135, v17, a2, (uint64_t)__p);
              LOWORD(v139) = 257;
              goto LABEL_11;
            }
          }
        }
        if (*(unsigned __int8 *)(v16 + 16) <= 0x14u && *(_BYTE *)(v17 + 16) == 85)
        {
          if (v17)
          {
            v12 = (uint64_t ***)sub_1C577FF7C(a1, (_BYTE *)a2, (_QWORD *)v17, 0);
            if (v12)
              return (llvm::UndefValue **)v12;
          }
        }
        v21 = *(unsigned __int8 *)(v17 + 16);
        if (v21 != 5 && v17 && v21 < 0x15)
        {
          FSub = (uint64_t *)llvm::ConstantExpr::get((llvm::ConstantExpr *)0xC, (unsigned __int8 *)v17, 0, 0, v15);
LABEL_36:
          LOWORD(v139) = 257;
LABEL_37:
          v23 = (char *)operator new(0x80uLL);
          *((_QWORD *)v23 + 5) = 0;
          v24 = (uint64_t *)(v23 + 40);
          *((_QWORD *)v23 + 6) = 0;
          *((_QWORD *)v23 + 8) = *(_QWORD *)v16;
          v12 = (uint64_t ***)(v23 + 64);
          *((_QWORD *)v23 + 3) = v23 + 64;
          *((_QWORD *)v23 + 7) = v23 + 64;
          *((_QWORD *)v23 + 9) = 0;
          v25 = 42;
LABEL_38:
          v23[80] = v25;
          v23[81] = 0;
          *((_WORD *)v23 + 41) = 0;
          *((_DWORD *)v23 + 21) = 2;
          *(_OWORD *)(v23 + 88) = 0u;
          *(_OWORD *)(v23 + 104) = 0u;
          *((_DWORD *)v23 + 30) = 0;
          *(_QWORD *)v23 = v16;
          v28 = *(_QWORD *)(v16 + 8);
          v27 = (_QWORD *)(v16 + 8);
          v26 = v28;
          *((_QWORD *)v23 + 1) = v28;
          if (v28)
            *(_QWORD *)(v26 + 16) = v23 + 8;
          *((_QWORD *)v23 + 2) = v27;
          *v27 = v23;
          *((_QWORD *)v23 + 4) = FSub;
          if (FSub)
          {
            v31 = FSub[1];
            v30 = FSub + 1;
            v29 = v31;
            *v24 = v31;
            if (v31)
              *(_QWORD *)(v29 + 16) = v24;
            *((_QWORD *)v23 + 6) = v30;
            *v30 = v23 + 32;
          }
LABEL_44:
          v32 = __p;
LABEL_45:
          llvm::Value::setName(v12, (uint64_t)v32);
          v14 = (uint64_t)v12;
          goto LABEL_12;
        }
        __p[0] = &v134;
        if (sub_1C4E7B6EC((_QWORD **)__p, v17))
        {
          FSub = v134;
          goto LABEL_36;
        }
        v33 = *(uint64_t **)a2;
        __p[0] = &v134;
        v35 = v17 + 8;
        v34 = *(_QWORD *)(v17 + 8);
        if (v34 && !*(_QWORD *)(v34 + 8))
        {
          if ((sub_1C57A33E8((_QWORD **)__p, v17, v34) & 1) != 0)
          {
            v36 = *(_QWORD *)(a1 + 24);
            LOWORD(v139) = 257;
            v37 = sub_1C4773A70(v36, v134, v33, (uint64_t)__p);
LABEL_64:
            v45 = v37;
            LOWORD(v133) = 257;
            v46 = (char *)operator new(0x80uLL);
            *((_QWORD *)v46 + 5) = 0;
            v47 = v46 + 40;
            *((_QWORD *)v46 + 6) = 0;
            *((_QWORD *)v46 + 8) = *(_QWORD *)v16;
            v12 = (uint64_t ***)(v46 + 64);
            *((_QWORD *)v46 + 3) = v46 + 64;
            *((_QWORD *)v46 + 7) = v46 + 64;
            *((_QWORD *)v46 + 9) = 0;
            v46[80] = 42;
            v46[81] = 0;
            *((_WORD *)v46 + 41) = 0;
            *((_DWORD *)v46 + 21) = 2;
            *(_OWORD *)(v46 + 88) = 0u;
            *(_OWORD *)(v46 + 104) = 0u;
            *((_DWORD *)v46 + 30) = 0;
            *(_QWORD *)v46 = v16;
            v50 = *(_QWORD *)(v16 + 8);
            v49 = (_QWORD *)(v16 + 8);
            v48 = v50;
            *((_QWORD *)v46 + 1) = v50;
            if (v50)
              *(_QWORD *)(v48 + 16) = v46 + 8;
            *((_QWORD *)v46 + 2) = v49;
            *v49 = v46;
            *((_QWORD *)v46 + 4) = v45;
            if (v45)
            {
              v53 = *((_QWORD *)v45 + 1);
              v52 = v45 + 8;
              v51 = v53;
              *v47 = v53;
              if (v53)
                *(_QWORD *)(v51 + 16) = v47;
              *((_QWORD *)v46 + 6) = v52;
              *v52 = v46 + 32;
            }
            v32 = (void **)&v129;
            goto LABEL_45;
          }
          v34 = *(_QWORD *)v35;
        }
        __p[0] = &v134;
        if (v34 && !*(_QWORD *)(v34 + 8) && sub_1C57A3460((_QWORD **)__p, v17, 0))
        {
          v44 = *(_QWORD *)(a1 + 24);
          LOWORD(v139) = 257;
          v37 = sub_1C47721A0(v44, v134, v33, (uint64_t)__p);
          goto LABEL_64;
        }
        __p[0] = &v135;
        __p[1] = &v134;
        if (*(_QWORD *)v35 && !*(_QWORD *)(*(_QWORD *)v35 + 8) && sub_1C57A1C8C((_QWORD **)__p, 18, v17))
        {
          v54 = *(_QWORD *)(a1 + 24);
          LOWORD(v139) = 257;
          v43 = sub_1C4867450(v54, v135, (uint64_t)v134, a2, (uint64_t)__p);
          goto LABEL_105;
        }
        __p[0] = &v135;
        __p[1] = &v134;
        if (!*(_QWORD *)v35 || *(_QWORD *)(*(_QWORD *)v35 + 8))
          goto LABEL_77;
        v57 = *(unsigned __int8 *)(v17 + 16);
        if (v57 == 5)
        {
          if (*(_WORD *)(v17 + 18) != 21)
            goto LABEL_77;
          if (!sub_1C4E7B6EC((_QWORD **)__p, *(_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF))))
            goto LABEL_77;
          v58 = *(_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF) + 32);
          if (!v58)
            goto LABEL_77;
        }
        else if (v57 != 49
               || !sub_1C4E7B6EC((_QWORD **)__p, *(_QWORD *)(v17 - 64))
               || (v58 = *(_QWORD *)(v17 - 32)) == 0)
        {
LABEL_77:
          v129 = &v135;
          v130 = &v134;
          if (!*(_QWORD *)v35 || *(_QWORD *)(*(_QWORD *)v35 + 8))
          {
LABEL_79:
            v55 = sub_1C577F49C(a1, (unsigned __int8 *)a2, (llvm *)v16, (llvm::Constant *)v17);
            if (v55)
              return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v55);
            if ((~*(unsigned __int8 *)(a2 + 17) & 0x12) != 0)
              return 0;
            v56 = *(unsigned __int8 *)(v16 + 16);
            if (v56 == 5)
            {
              if (*(_WORD *)(v16 + 18) == 16)
              {
                v62 = (_QWORD *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF));
                if (v17 == *v62)
                {
                  v13 = (uint64_t *)v62[4];
                  if (v13)
                    goto LABEL_124;
                }
              }
            }
            else if (v56 == 44 && v17 == *(_QWORD *)(v16 - 64))
            {
              v13 = *(uint64_t **)(v16 - 32);
              if (v13)
                goto LABEL_124;
            }
            v63 = *(unsigned __int8 *)(v17 + 16);
            if (v63 == 5)
            {
              if (*(_WORD *)(v17 + 18) != 14)
                goto LABEL_125;
              v65 = v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF);
              v13 = *(uint64_t **)v65;
              v66 = *(uint64_t **)(v65 + 32);
              if ((uint64_t *)v16 == v13)
              {
                v13 = v66;
                if (!v66)
                  goto LABEL_125;
              }
              else if (!v13 || (uint64_t *)v16 != v66)
              {
                goto LABEL_125;
              }
            }
            else
            {
              if (v63 != 42)
                goto LABEL_125;
              v64 = *(uint64_t **)(v17 - 64);
              v13 = *(uint64_t **)(v17 - 32);
              if ((uint64_t *)v16 != v64)
              {
                if (v64 && (uint64_t *)v16 == v13)
                {
                  v135 = *(uint64_t **)(v17 - 64);
                  v13 = v64;
                  goto LABEL_10;
                }
LABEL_125:
                if (v56 == 5)
                {
                  if (*(_WORD *)(v16 + 18) != 18
                    || (v68 = (_QWORD *)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF)), v17 != *v68)
                    || (v67 = (unsigned __int8 *)v68[4]) == 0)
                  {
LABEL_133:
                    if (v63 == 5)
                    {
                      if (*(_WORD *)(v17 + 18) != 18
                        || (v70 = (_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF)), v16 != *v70)
                        || (v69 = (unsigned __int8 *)v70[4]) == 0)
                      {
LABEL_141:
                        v71 = (uint64_t **)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) + 56) + 40) + 216);
                        LOWORD(v133) = 260;
                        v129 = v71;
                        llvm::Triple::Triple((uint64_t)__p, (llvm::Twine *)&v129);
                        v128 = 0;
                        v129 = &v135;
                        v130 = &v134;
                        v131 = &v128;
                        v72 = *(_QWORD *)(v16 + 8);
                        if (v72
                          && !*(_QWORD *)(v72 + 8)
                          && sub_1C57A34D8(&v129, 14, v16)
                          && (DWORD2(v138) - 26) >= 4)
                        {
                          v91 = *(_QWORD *)(a1 + 24);
                          LOWORD(v133) = 257;
                          v92 = (_QWORD *)sub_1C579E980(v91, v135, v128, a2, (uint64_t)&v129);
                          v93 = *(_QWORD *)(a1 + 24);
                          LOWORD(v133) = 257;
                          v94 = sub_1C579E980(v93, v134, v17, a2, (uint64_t)&v129);
                          LOWORD(v133) = 257;
                          v95 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v95 + 5) = 0;
                          v96 = v95 + 40;
                          *((_QWORD *)v95 + 6) = 0;
                          *((_QWORD *)v95 + 8) = *v92;
                          v12 = (uint64_t ***)(v95 + 64);
                          *((_QWORD *)v95 + 3) = v95 + 64;
                          *((_QWORD *)v95 + 7) = v95 + 64;
                          *((_QWORD *)v95 + 9) = 0;
                          v95[80] = 44;
                          v95[81] = 0;
                          *((_WORD *)v95 + 41) = 0;
                          *((_DWORD *)v95 + 21) = 2;
                          *(_OWORD *)(v95 + 88) = 0u;
                          *(_OWORD *)(v95 + 104) = 0u;
                          *((_DWORD *)v95 + 30) = 0;
                          *(_QWORD *)v95 = v92;
                          v99 = v92[1];
                          v98 = v92 + 1;
                          v97 = v99;
                          *((_QWORD *)v95 + 1) = v99;
                          if (v99)
                            *(_QWORD *)(v97 + 16) = v95 + 8;
                          *((_QWORD *)v95 + 2) = v98;
                          *v98 = v95;
                        }
                        else
                        {
                          v126 = 0;
                          v127 = 0;
                          v124 = 0;
                          v125 = 0;
                          LODWORD(v129) = 319;
                          v130 = 0;
                          v131 = &v127;
                          v132 = 1;
                          v133 = &v125;
                          v73 = *(_QWORD *)(v16 + 8);
                          if (v73)
                          {
                            if (!*(_QWORD *)(v73 + 8) && sub_1C57A1C20((uint64_t)&v129, v16))
                            {
                              LODWORD(v142) = 319;
                              v143 = 0;
                              v144 = &v126;
                              v145 = 1;
                              v146 = &v124;
                              if (*(_QWORD *)v35)
                              {
                                if (!*(_QWORD *)(*(_QWORD *)v35 + 8)
                                  && sub_1C57A1C20((uint64_t)&v142, v17)
                                  && *v125 == *v124)
                                {
                                  v111 = *(_QWORD *)(a1 + 24);
                                  LOWORD(v133) = 257;
                                  v112 = (uint64_t *)sub_1C4867680(v111, v125, (uint64_t)v124, a2, (uint64_t)&v129);
                                  v113 = *(uint64_t **)(a1 + 24);
                                  v141 = *v112;
                                  v142 = v127;
                                  v143 = v112;
                                  LOWORD(v133) = 257;
                                  v114 = (_QWORD *)llvm::IRBuilderBase::CreateIntrinsic(v113, 319, &v141, 1, &v142, 2, a2, (uint64_t)&v129);
                                  v115 = v126;
                                  LOWORD(v133) = 257;
                                  v116 = (char *)operator new(0x80uLL);
                                  *((_QWORD *)v116 + 6) = 0;
                                  *((_QWORD *)v116 + 5) = 0;
                                  v117 = v116 + 40;
                                  *((_QWORD *)v116 + 8) = *v114;
                                  v12 = (uint64_t ***)(v116 + 64);
                                  *((_QWORD *)v116 + 3) = v116 + 64;
                                  *((_QWORD *)v116 + 7) = v116 + 64;
                                  *((_QWORD *)v116 + 9) = 0;
                                  v116[80] = 44;
                                  v116[81] = 0;
                                  *((_WORD *)v116 + 41) = 0;
                                  *((_DWORD *)v116 + 21) = 2;
                                  *(_OWORD *)(v116 + 88) = 0u;
                                  *(_OWORD *)(v116 + 104) = 0u;
                                  *((_DWORD *)v116 + 30) = 0;
                                  *(_QWORD *)v116 = v114;
                                  v120 = v114[1];
                                  v119 = v114 + 1;
                                  v118 = v120;
                                  *((_QWORD *)v116 + 1) = v120;
                                  if (v120)
                                    *(_QWORD *)(v118 + 16) = v116 + 8;
                                  *((_QWORD *)v116 + 2) = v119;
                                  *v119 = v116;
                                  *((_QWORD *)v116 + 4) = v115;
                                  if (v115)
                                  {
                                    v123 = *(_QWORD *)(v115 + 8);
                                    v122 = (_QWORD *)(v115 + 8);
                                    v121 = v123;
                                    *v117 = v123;
                                    if (v123)
                                      *(_QWORD *)(v121 + 16) = v117;
                                    *((_QWORD *)v116 + 6) = v122;
                                    *v122 = v116 + 32;
                                  }
                                  goto LABEL_179;
                                }
                              }
                            }
                          }
                          v74 = sub_1C5798394(a2, *(_QWORD *)(a1 + 24));
                          if (v74)
                          {
LABEL_155:
                            v12 = v74;
                            v76 = 1;
                            goto LABEL_156;
                          }
                          v129 = *(uint64_t ***)(a1 + 24);
                          v130 = 0;
                          v75 = (llvm::Value *)sub_1C5798C50((uint64_t)&v129, (_DWORD *)a2);
                          if (v75)
                          {
                            v74 = (uint64_t ***)sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v75);
                            goto LABEL_155;
                          }
                          v77 = *(_QWORD *)(v16 + 8);
                          if (!v77 || *(_QWORD *)(v77 + 8))
                            goto LABEL_162;
                          v103 = *(unsigned __int8 *)(v16 + 16);
                          if (v103 == 5)
                          {
                            if (*(_WORD *)(v16 + 18) != 16)
                              goto LABEL_162;
                            v105 = (uint64_t **)(v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF));
                            if (!*v105)
                              goto LABEL_162;
                            v135 = *v105;
                            v104 = v105[4];
                            if (!v104)
                              goto LABEL_162;
                          }
                          else if (v103 != 44
                                 || !*(_QWORD *)(v16 - 64)
                                 || (v135 = *(uint64_t **)(v16 - 64), (v104 = *(uint64_t **)(v16 - 32)) == 0))
                          {
LABEL_162:
                            v76 = 0;
                            v12 = 0;
                            goto LABEL_156;
                          }
                          v134 = v104;
                          v106 = *(_QWORD *)(a1 + 24);
                          LOWORD(v133) = 257;
                          v94 = sub_1C579E980(v106, v104, v17, a2, (uint64_t)&v129);
                          v107 = v135;
                          LOWORD(v133) = 257;
                          v95 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v95 + 5) = 0;
                          v96 = v95 + 40;
                          *((_QWORD *)v95 + 6) = 0;
                          *((_QWORD *)v95 + 8) = *v107;
                          v12 = (uint64_t ***)(v95 + 64);
                          *((_QWORD *)v95 + 3) = v95 + 64;
                          *((_QWORD *)v95 + 7) = v95 + 64;
                          *((_QWORD *)v95 + 9) = 0;
                          v95[80] = 44;
                          v95[81] = 0;
                          *((_WORD *)v95 + 41) = 0;
                          *((_DWORD *)v95 + 21) = 2;
                          *(_OWORD *)(v95 + 88) = 0u;
                          *(_OWORD *)(v95 + 104) = 0u;
                          *((_DWORD *)v95 + 30) = 0;
                          *(_QWORD *)v95 = v107;
                          v110 = v107[1];
                          v109 = v107 + 1;
                          v108 = v110;
                          *((_QWORD *)v95 + 1) = v110;
                          if (v110)
                            *(_QWORD *)(v108 + 16) = v95 + 8;
                          *((_QWORD *)v95 + 2) = v109;
                          *v109 = v95;
                        }
                        *((_QWORD *)v95 + 4) = v94;
                        if (v94)
                        {
                          v102 = *(_QWORD *)(v94 + 8);
                          v101 = (_QWORD *)(v94 + 8);
                          v100 = v102;
                          *v96 = v102;
                          if (v102)
                            *(_QWORD *)(v100 + 16) = v96;
                          *((_QWORD *)v95 + 6) = v101;
                          *v101 = v95 + 32;
                        }
LABEL_179:
                        llvm::Value::setName(v12, (uint64_t)&v129);
                        v76 = 1;
                        llvm::Instruction::copyIRFlags((uint64_t)v12, a2, 1);
LABEL_156:
                        if (SBYTE7(v138) < 0)
                          operator delete(__p[0]);
                        if (v76)
                          return (llvm::UndefValue **)v12;
                        return 0;
                      }
                    }
                    else
                    {
                      if (v63 != 46)
                        goto LABEL_141;
                      if (v16 != *(_QWORD *)(v17 - 64))
                        goto LABEL_141;
                      v69 = *(unsigned __int8 **)(v17 - 32);
                      if (!v69 || v69[16] > 0x14u)
                        goto LABEL_141;
                    }
                    v88 = llvm::ConstantFP::get((llvm::ConstantFP **)v33, (llvm::Type *)v13, 1.0);
                    FSub = (uint64_t *)llvm::ConstantExpr::getFSub(v88, (llvm::Constant *)v69, v89, v90);
                    LOWORD(v139) = 257;
                    v23 = (char *)operator new(0x80uLL);
                    *((_QWORD *)v23 + 5) = 0;
                    v24 = (uint64_t *)(v23 + 40);
                    *((_QWORD *)v23 + 6) = 0;
                    *((_QWORD *)v23 + 8) = *(_QWORD *)v16;
                    v12 = (uint64_t ***)(v23 + 64);
                    *((_QWORD *)v23 + 3) = v23 + 64;
                    *((_QWORD *)v23 + 7) = v23 + 64;
                    *((_QWORD *)v23 + 9) = 0;
                    v25 = 46;
                    goto LABEL_38;
                  }
                }
                else
                {
                  if (v56 != 46)
                    goto LABEL_133;
                  if (v17 != *(_QWORD *)(v16 - 64))
                    goto LABEL_133;
                  v67 = *(unsigned __int8 **)(v16 - 32);
                  if (!v67 || v67[16] > 0x14u)
                    goto LABEL_133;
                }
                v78 = llvm::ConstantFP::get((llvm::ConstantFP **)v33, (llvm::Type *)v13, 1.0);
                v81 = llvm::ConstantExpr::getFSub((llvm::ConstantExpr *)v67, v78, v79, v80);
                LOWORD(v139) = 257;
                v82 = (char *)operator new(0x80uLL);
                *((_QWORD *)v82 + 6) = 0;
                *((_QWORD *)v82 + 5) = 0;
                v83 = v82 + 40;
                *((_QWORD *)v82 + 8) = *(_QWORD *)v17;
                v12 = (uint64_t ***)(v82 + 64);
                *((_QWORD *)v82 + 3) = v82 + 64;
                *((_QWORD *)v82 + 7) = v82 + 64;
                *((_QWORD *)v82 + 9) = 0;
                v82[80] = 46;
                v82[81] = 0;
                *((_WORD *)v82 + 41) = 0;
                *((_DWORD *)v82 + 21) = 2;
                *(_OWORD *)(v82 + 88) = 0u;
                *(_OWORD *)(v82 + 104) = 0u;
                *((_DWORD *)v82 + 30) = 0;
                *(_QWORD *)v82 = v17;
                v84 = *(_QWORD *)(v17 + 8);
                *((_QWORD *)v82 + 1) = v84;
                if (v84)
                  *(_QWORD *)(v84 + 16) = v82 + 8;
                *((_QWORD *)v82 + 2) = v35;
                *(_QWORD *)v35 = v82;
                *((_QWORD *)v82 + 4) = v81;
                if (v81)
                {
                  v87 = *((_QWORD *)v81 + 1);
                  v86 = (_QWORD *)((char *)v81 + 8);
                  v85 = v87;
                  *v83 = v87;
                  if (v87)
                    *(_QWORD *)(v85 + 16) = v83;
                  *((_QWORD *)v82 + 6) = v86;
                  *v86 = v82 + 32;
                }
                goto LABEL_44;
              }
              if (!v13)
                goto LABEL_125;
            }
LABEL_124:
            v135 = v13;
            goto LABEL_10;
          }
          v59 = *(unsigned __int8 *)(v17 + 16);
          if (v59 == 5)
          {
            if (*(_WORD *)(v17 + 18) != 21)
              goto LABEL_79;
            v60 = (uint64_t **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
            if (!*v60)
              goto LABEL_79;
            v135 = *v60;
            if (!sub_1C4E7B6EC(&v130, (uint64_t)v60[4]))
              goto LABEL_79;
          }
          else
          {
            if (v59 != 49)
              goto LABEL_79;
            if (!*(_QWORD *)(v17 - 64))
              goto LABEL_79;
            v135 = *(uint64_t **)(v17 - 64);
            if (!sub_1C4E7B6EC(&v130, *(_QWORD *)(v17 - 32)))
              goto LABEL_79;
          }
LABEL_104:
          v61 = *(_QWORD *)(a1 + 24);
          LOWORD(v139) = 257;
          v43 = sub_1C4867220(v61, v135, (uint64_t)v134, a2, (uint64_t)__p);
          goto LABEL_105;
        }
        *(_QWORD *)__p[1] = v58;
        goto LABEL_104;
      }
      v38 = *(unsigned __int8 *)(v17 + 16);
      if (v38 == 5)
      {
        if (*(_WORD *)(v17 + 18) != 16)
          goto LABEL_20;
        v41 = (uint64_t **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
        v39 = *v41;
        if (!*v41)
          goto LABEL_20;
        v135 = *v41;
        v40 = v41[4];
        if (!v40)
          goto LABEL_20;
      }
      else
      {
        if (v38 != 44)
          goto LABEL_20;
        v39 = *(uint64_t **)(v17 - 64);
        if (!v39)
          goto LABEL_20;
        v135 = *(uint64_t **)(v17 - 64);
        v40 = *(uint64_t **)(v17 - 32);
        if (!v40)
          goto LABEL_20;
      }
      v134 = v40;
      v42 = *(_QWORD *)(a1 + 24);
      LOWORD(v139) = 257;
      v43 = sub_1C4867680(v42, v40, (uint64_t)v39, a2, (uint64_t)__p);
LABEL_105:
      FSub = (uint64_t *)v43;
      LOWORD(v139) = 257;
      goto LABEL_37;
    }
  }
  return (llvm::UndefValue **)v12;
}

uint64_t sub_1C579E980(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 *v10;
  char *v11;
  char *v12;
  llvm::Value *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  llvm::MDNode *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  _QWORD v31[4];
  __int16 v32;

  if (!*(_BYTE *)(a1 + 100))
  {
    v10 = sub_1C477422C((uint64_t *)a1, 14, (uint64_t)a2, a3, a5);
    if (v10)
      return (uint64_t)v10;
    v32 = 257;
    v11 = (char *)operator new(0x80uLL);
    v12 = v11;
    *((_QWORD *)v11 + 8) = *a2;
    v13 = (llvm::Value *)(v11 + 64);
    *((_QWORD *)v11 + 3) = v11 + 64;
    *((_QWORD *)v11 + 5) = 0;
    v14 = v11 + 40;
    *((_QWORD *)v11 + 6) = 0;
    *((_QWORD *)v11 + 7) = v11 + 64;
    *((_QWORD *)v11 + 9) = 0;
    *((_QWORD *)v11 + 10) = 0x20000002ALL;
    *(_OWORD *)(v11 + 88) = 0u;
    *(_OWORD *)(v11 + 104) = 0u;
    *((_DWORD *)v11 + 30) = 0;
    *(_QWORD *)v11 = a2;
    v17 = a2[1];
    v16 = a2 + 1;
    v15 = v17;
    *((_QWORD *)v11 + 1) = v17;
    if (v17)
      *(_QWORD *)(v15 + 16) = v11 + 8;
    *((_QWORD *)v11 + 2) = v16;
    *v16 = v11;
    *((_QWORD *)v11 + 4) = a3;
    if (a3)
    {
      v20 = *(_QWORD *)(a3 + 8);
      v19 = (_QWORD *)(a3 + 8);
      v18 = v20;
      *v14 = v20;
      if (v20)
        *(_QWORD *)(v18 + 16) = v14;
      *((_QWORD *)v11 + 6) = v19;
      *v19 = v11 + 32;
    }
    llvm::Value::setName((uint64_t ***)v11 + 8, (uint64_t)v31);
    v21 = *(_BYTE *)(a4 + 17) & 0xFE;
    v22 = *(llvm::MDNode **)(a1 + 88);
    if (v22)
      llvm::Value::setMetadata(v13, 3, v22);
    v12[81] |= v21;
    (*(void (**)(_QWORD, llvm::Value *, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(a1 + 80) + 16))(*(_QWORD *)(a1 + 80), v13, a5, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
    v23 = *(unsigned int *)(a1 + 8);
    if (!(_DWORD)v23)
      return (uint64_t)v13;
    v25 = *(_QWORD *)a1;
    v26 = *(_QWORD *)a1 + 16 * v23;
    while (1)
    {
      v27 = *(_DWORD *)v25;
      v28 = *(unsigned __int8 **)(v25 + 8);
      if (v28)
      {
        if (!v27)
        {
          v31[0] = *(_QWORD *)(v25 + 8);
          llvm::MetadataTracking::track((uint64_t)v31, v28, 2);
          v29 = (unsigned __int8 *)*((_QWORD *)v12 + 14);
          goto LABEL_24;
        }
      }
      else
      {
        v29 = (unsigned __int8 *)*((_QWORD *)v12 + 14);
        if (!v29 && (v12[87] & 0x20) == 0)
          goto LABEL_21;
        if (!v27)
        {
          v31[0] = 0;
LABEL_24:
          if (v29)
            llvm::MetadataTracking::untrack((uint64_t)(v12 + 112), v29);
          v30 = (unsigned __int8 *)v31[0];
          *((_QWORD *)v12 + 14) = v31[0];
          if (v30)
            llvm::MetadataTracking::retrack((uint64_t)v31, v30, (uint64_t)(v12 + 112));
          goto LABEL_21;
        }
      }
      llvm::Value::setMetadata(v13, *(_DWORD *)v25, (llvm::MDNode *)v28);
LABEL_21:
      v25 += 16;
      if (v25 == v26)
        return (uint64_t)v13;
    }
  }
  return llvm::IRBuilderBase::CreateConstrainedFPBinOp(a1, 83, a2, a3, a4, a5, 0, 0, 0);
}

BOOL sub_1C579EBB0(llvm::APInt *a1)
{
  unsigned int v1;

  v1 = *((_DWORD *)a1 + 2);
  if (v1 > 0x40)
  {
    if (((*(_QWORD *)(*(_QWORD *)a1 + 8 * ((v1 - 1) >> 6)) >> (v1 - 1)) & 1) != 0)
      return 0;
    return llvm::APInt::countTrailingOnesSlowCase(a1) == v1 - 1;
  }
  else
  {
    return *(_QWORD *)a1 == ~(-1 << (v1 - 1));
  }
}

llvm::APFloatBase *sub_1C579EC1C(_QWORD **a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unint64_t v4;
  BOOL v5;
  int v6;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  int v11;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 < 0x1C)
  {
    if (v2 != 5)
      return 0;
    v8 = *(unsigned __int16 *)(a2 + 18);
    HIDWORD(v10) = v8 - 13;
    LODWORD(v10) = v8 - 13;
    v9 = v10 >> 1;
    v5 = v9 > 6;
    v11 = (1 << v9) & 0x47;
    if (v5 || v11 == 0)
      return 0;
  }
  else
  {
    HIDWORD(v4) = v2 - 41;
    LODWORD(v4) = v2 - 41;
    v3 = v4 >> 1;
    v5 = v3 > 6;
    v6 = (1 << v3) & 0x47;
    if (v5 || v6 == 0)
      return 0;
    v8 = v2 - 28;
  }
  if (v8 != 13 || (*(_BYTE *)(a2 + 17) & 2) == 0)
    return 0;
  v13 = *(_DWORD *)(a2 + 20);
  v14 = (v13 & 0x40000000) != 0 ? *(uint64_t **)(a2 - 8) : (uint64_t *)(a2 - 32 * (v13 & 0x7FFFFFF));
  v15 = *v14;
  if (!v15)
    return 0;
  v17 = *a1;
  v16 = (uint64_t)(a1 + 1);
  *v17 = v15;
  v18 = *(_DWORD *)(a2 + 20);
  if ((v18 & 0x40000000) != 0)
    v19 = *(_QWORD *)(a2 - 8);
  else
    v19 = a2 - 32 * (v18 & 0x7FFFFFF);
  return sub_1C4D89F84(v16, *(unsigned __int8 **)(v19 + 32));
}

uint64_t sub_1C579ECE4(_QWORD **a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  unint64_t v4;
  BOOL v5;
  int v6;
  unsigned int v8;
  unint64_t v9;
  int v10;
  int v12;
  int v14;
  uint64_t *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  LODWORD(v2) = *(unsigned __int8 *)(a2 + 16);
  if (v2 >= 0x1C)
  {
    HIDWORD(v4) = v2 - 41;
    LODWORD(v4) = v2 - 41;
    v3 = v4 >> 1;
    v5 = v3 > 6;
    v6 = (1 << v3) & 0x47;
    if (!v5 && v6 != 0)
    {
      LODWORD(v2) = v2 - 28;
      goto LABEL_12;
    }
LABEL_16:
    v12 = 0;
    return v12 & v2;
  }
  if ((_DWORD)v2 != 5)
    goto LABEL_16;
  LODWORD(v2) = *(unsigned __int16 *)(a2 + 18);
  HIDWORD(v9) = v2 - 13;
  LODWORD(v9) = v2 - 13;
  v8 = v9 >> 1;
  v5 = v8 > 6;
  v10 = (1 << v8) & 0x47;
  if (v5 || v10 == 0)
    goto LABEL_16;
LABEL_12:
  if ((_DWORD)v2 != 13 || (*(_BYTE *)(a2 + 17) & 2) == 0)
  {
    LODWORD(v2) = 0;
LABEL_15:
    v12 = 1;
    return v12 & v2;
  }
  v14 = *(_DWORD *)(a2 + 20);
  if ((v14 & 0x40000000) != 0)
    v15 = *(uint64_t **)(a2 - 8);
  else
    v15 = (uint64_t *)(a2 - 32 * (v14 & 0x7FFFFFF));
  v2 = *v15;
  if (!v2)
    goto LABEL_15;
  **a1 = v2;
  v16 = *(_DWORD *)(a2 + 20);
  if ((v16 & 0x40000000) != 0)
    v17 = *(_QWORD *)(a2 - 8);
  else
    v17 = a2 - 32 * (v16 & 0x7FFFFFF);
  LODWORD(v2) = 0;
  v18 = *(_QWORD *)(v17 + 32);
  v12 = 1;
  if (v18 && *(unsigned __int8 *)(v18 + 16) <= 0x14u)
  {
    *a1[1] = v18;
    LODWORD(v2) = 1;
  }
  return v12 & v2;
}

uint64_t sub_1C579EDE0(uint64_t **a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v14;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 == 84)
    {
      v4 = *(_QWORD *)(a2 - 32);
      if (v4)
      {
        if (!*(_BYTE *)(v4 + 16)
          && *(_QWORD *)(v4 + 24) == *(_QWORD *)(a2 + 72)
          && (*(_BYTE *)(v4 + 33) & 0x20) != 0
          && *(_DWORD *)(v4 + 36) == 306)
        {
          v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
          v6 = *v5;
          v7 = v5[4];
          if (!*v5)
            goto LABEL_28;
          goto LABEL_26;
        }
      }
    }
    return 0;
  }
  result = 0;
  v9 = *(_QWORD *)(a2 - 96);
  if (v9 && *(_BYTE *)(v9 + 16) == 81)
  {
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v6 = *(_QWORD *)(v9 - 64);
    v7 = *(_QWORD *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6))
      return 0;
    v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 != 36)
        return 0;
    }
    else if (v14 != 34)
    {
      return 0;
    }
    if (!v6)
      goto LABEL_28;
LABEL_26:
    **a1 = v6;
    if ((sub_1C4D9EC28(a1 + 1, 30, v7) & 1) != 0)
      return 1;
LABEL_28:
    if (v7)
    {
      **a1 = v7;
      return sub_1C4D9EC28(a1 + 1, 30, v6);
    }
    return 0;
  }
  return result;
}

BOOL sub_1C579EF20(unsigned __int8 ***a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  unsigned __int8 **v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v12;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v7 = *(_QWORD *)(a2 - 96);
    if (v7 && *(_BYTE *)(v7 + 16) == 81)
    {
      v8 = *(unsigned __int8 **)(a2 - 64);
      v9 = *(unsigned __int8 **)(a2 - 32);
      v5 = *(unsigned __int8 **)(v7 - 64);
      v6 = *(unsigned __int8 **)(v7 - 32);
      if ((v8 != v5 || v9 != v6) && (v8 != v6 || v9 != v5))
        return 0;
      v12 = *(_WORD *)(v7 + 18) & 0x3E;
      if (v8 == v5)
      {
        if (v12 != 36)
          return 0;
      }
      else if (v12 != 34)
      {
        return 0;
      }
      if (!v5)
        return 0;
      goto LABEL_26;
    }
  }
  else
  {
    if (v2 != 84)
      return 0;
    v3 = *(_QWORD *)(a2 - 32);
    if (v3)
    {
      if (*(_BYTE *)(v3 + 16))
        return 0;
      if (*(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72))
        return 0;
      if ((*(_BYTE *)(v3 + 33) & 0x20) == 0)
        return 0;
      if (*(_DWORD *)(v3 + 36) != 306)
        return 0;
      v4 = (unsigned __int8 **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      v5 = *v4;
      if (!*v4)
        return 0;
      v6 = v4[4];
LABEL_26:
      **a1 = v5;
      return (sub_1C4D89F84((uint64_t)(a1 + 1), v6) & 1) != 0;
    }
  }
  return v3;
}

uint64_t sub_1C579F01C(_QWORD **a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  const llvm::APInt **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const llvm::APInt **v10;
  uint64_t v11;
  uint64_t v12;
  const llvm::APInt **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int v20;
  uint64_t v21;
  int v22;
  int v23;

  v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 == 5)
  {
    if (*(_WORD *)(a2 + 18) == 18)
    {
      v12 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      if (v12)
      {
        v13 = (const llvm::APInt **)(a1 + 1);
        **a1 = v12;
        v14 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
        v15 = *(_QWORD *)(v14 + 8);
        if (v15)
        {
          if (!*(_QWORD *)(v15 + 8))
          {
            v23 = *(unsigned __int8 *)(v14 + 16);
            if (v23 == 5)
            {
              if (*(_WORD *)(v14 + 18) == 16)
              {
                if (sub_1C55CDE08(v13, *(llvm::Constant **)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF))))
                {
                  v21 = *(_QWORD *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32);
                  if (v21)
                    goto LABEL_46;
                }
              }
            }
            else if (v23 == 44)
            {
              if (sub_1C4E7BE28(v13, *(unsigned __int8 **)(v14 - 64)))
              {
                v21 = *(_QWORD *)(v14 - 32);
                if (v21)
                  goto LABEL_46;
              }
            }
          }
        }
      }
      v16 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
      if (v16)
      {
        v10 = (const llvm::APInt **)(a1 + 1);
        **a1 = v16;
        v11 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
        goto LABEL_14;
      }
    }
    return 0;
  }
  if (v4 != 46)
    return 0;
  v5 = *(_QWORD *)(a2 - 64);
  if (v5)
  {
    v6 = (const llvm::APInt **)(a1 + 1);
    **a1 = v5;
    v7 = *(_QWORD *)(a2 - 32);
    v8 = *(_QWORD *)(v7 + 8);
    if (v8)
    {
      if (!*(_QWORD *)(v8 + 8))
      {
        v22 = *(unsigned __int8 *)(v7 + 16);
        if (v22 == 5)
        {
          if (*(_WORD *)(v7 + 18) == 16)
          {
            if (sub_1C55CDE08(v6, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))))
            {
              v21 = *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
              if (v21)
                goto LABEL_46;
            }
          }
        }
        else if (v22 == 44)
        {
          if (sub_1C4E7BE28(v6, *(unsigned __int8 **)(v7 - 64)))
          {
            v21 = *(_QWORD *)(v7 - 32);
            if (v21)
              goto LABEL_46;
          }
        }
      }
    }
  }
  v9 = *(_QWORD *)(a2 - 32);
  if (!v9)
    return 0;
  v10 = (const llvm::APInt **)(a1 + 1);
  **a1 = v9;
  v11 = *(_QWORD *)(a2 - 64);
LABEL_14:
  v17 = *(_QWORD *)(v11 + 8);
  if (!v17)
    return 0;
  v18 = *(_QWORD *)(v17 + 8);
  if (v18)
    return 0;
  v20 = *(unsigned __int8 *)(v11 + 16);
  if (v20 == 44)
  {
    result = sub_1C4E7BE28(v10, *(unsigned __int8 **)(v11 - 64));
    if ((_DWORD)result)
    {
      v21 = *(_QWORD *)(v11 - 32);
      if (!v21)
        return 0;
LABEL_46:
      *a1[2] = v21;
      return 1;
    }
  }
  else
  {
    if (v20 == 5)
    {
      if (*(_WORD *)(v11 + 18) == 16
        && sub_1C55CDE08(v10, *(llvm::Constant **)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF))))
      {
        v18 = *(_QWORD *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF) + 32);
        if (v18)
        {
          *a1[2] = v18;
          LOBYTE(v18) = 1;
        }
      }
      else
      {
        LOBYTE(v18) = 0;
      }
    }
    return (v20 == 5) & v18;
  }
  return result;
}

uint64_t sub_1C579F290(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v6;
  _QWORD *v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  llvm::detail::IEEEFloat *v19;
  const llvm::detail::DoubleAPFloat *v20;
  llvm::detail::IEEEFloat *v21;
  const llvm::detail::DoubleAPFloat *v22;
  uint64_t v23;
  uint64_t v24;
  llvm::detail::IEEEFloat *v25;
  const llvm::detail::DoubleAPFloat *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  int v31;
  _BOOL4 v33;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  void **v42;
  const llvm::detail::DoubleAPFloat *v43;
  char v44;
  _DWORD *v45;
  char v46;
  char v47;
  int v48;
  _BOOL4 v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  llvm::detail::IEEEFloat *v58;
  uint64_t v59;
  char v60;
  char v61;
  int v62;
  _BOOL4 v64;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  _BOOL4 v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  int v86;
  _BOOL4 v88;
  uint64_t v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  int v101;
  char v102;
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  if (result)
  {
    v3 = *(unsigned __int8 *)(result + 16);
    if (v3 < 0x1C)
      return 0;
    if (v3 != 42)
    {
      if (v3 == 46)
      {
        v8 = *(_DWORD *)(result + 20);
        if ((v8 & 0x40000000) != 0)
          v9 = *(_QWORD **)(result - 8);
        else
          v9 = (_QWORD *)(result - 32 * (v8 & 0x7FFFFFF));
        v14 = *v9;
        v15 = v9[4];
        v16 = *(unsigned __int8 *)(*v9 + 16);
        if (v14)
          v17 = v16 == 17;
        else
          v17 = 0;
        if (v17)
        {
          v21 = (llvm::detail::IEEEFloat *)(a2 + 24);
          v22 = (const llvm::detail::DoubleAPFloat *)(v14 + 32);
          if (*(_BYTE *)(a2 + 8))
          {
            sub_1C4DF91B8(v21, (uint64_t)v22);
          }
          else
          {
            v59 = *(_QWORD *)v22;
            if (*(_UNKNOWN **)v22 == &unk_1C866F1C0)
            {
              llvm::detail::DoubleAPFloat::DoubleAPFloat(v21, v22);
            }
            else
            {
              *(_QWORD *)v21 = v59;
              if ((*(_DWORD *)(v59 + 8) + 64) >= 0x80)
                *(_QWORD *)(a2 + 32) = operator new[]();
              v60 = *(_BYTE *)(a2 + 44) & 0xF7 | *(_BYTE *)(v14 + 52) & 8;
              *(_BYTE *)(a2 + 44) = v60;
              v61 = *(_BYTE *)(v14 + 52);
              v62 = v61 & 7;
              *(_BYTE *)(a2 + 44) = v60 & 0xF8 | v61 & 7;
              *(_DWORD *)(a2 + 40) = *(_DWORD *)(v14 + 48);
              v64 = (v61 & 6) != 0 && v62 != 3;
              if (v62 == 1 || v64)
              {
                v66 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 8);
                v67 = (_QWORD *)(a2 + 32);
                if ((v66 - 64) <= 0xFFFFFF7F)
                  v67 = (_QWORD *)*v67;
                v70 = *(uint64_t **)(v14 + 40);
                v69 = (uint64_t *)(v14 + 40);
                v68 = v70;
                if ((*(_DWORD *)(*(v69 - 1) + 8) - 64) >= 0xFFFFFF80)
                  v68 = v69;
                if (v66 <= 0xFFFFFFBF)
                {
                  v71 = (unint64_t)(v66 + 64) >> 6;
                  do
                  {
                    v72 = *v68++;
                    *v67++ = v72;
                    --v71;
                  }
                  while (v71);
                }
              }
            }
          }
          *(_WORD *)(a2 + 8) = 257;
          *(_QWORD *)a2 = v15;
        }
        else
        {
          if (*(_BYTE *)(v15 + 16) != 17 || v15 == 0)
            return 0;
          v19 = (llvm::detail::IEEEFloat *)(a2 + 24);
          v20 = (const llvm::detail::DoubleAPFloat *)(v15 + 32);
          if (*(_BYTE *)(a2 + 8))
          {
            sub_1C4DF91B8(v19, (uint64_t)v20);
          }
          else
          {
            v83 = *(_QWORD *)v20;
            if (*(_UNKNOWN **)v20 == &unk_1C866F1C0)
            {
              llvm::detail::DoubleAPFloat::DoubleAPFloat(v19, v20);
            }
            else
            {
              *(_QWORD *)v19 = v83;
              if ((*(_DWORD *)(v83 + 8) + 64) >= 0x80)
                *(_QWORD *)(a2 + 32) = operator new[]();
              v84 = *(_BYTE *)(a2 + 44) & 0xF7 | *(_BYTE *)(v15 + 52) & 8;
              *(_BYTE *)(a2 + 44) = v84;
              v85 = *(_BYTE *)(v15 + 52);
              v86 = v85 & 7;
              *(_BYTE *)(a2 + 44) = v84 & 0xF8 | v85 & 7;
              *(_DWORD *)(a2 + 40) = *(_DWORD *)(v15 + 48);
              v88 = (v85 & 6) != 0 && v86 != 3;
              if (v86 == 1 || v88)
              {
                v90 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 8);
                v91 = (_QWORD *)(a2 + 32);
                if ((v90 - 64) <= 0xFFFFFF7F)
                  v91 = (_QWORD *)*v91;
                v94 = *(uint64_t **)(v15 + 40);
                v93 = (uint64_t *)(v15 + 40);
                v92 = v94;
                if ((*(_DWORD *)(*(v93 - 1) + 8) - 64) >= 0xFFFFFF80)
                  v92 = v93;
                if (v90 <= 0xFFFFFFBF)
                {
                  v95 = (unint64_t)(v90 + 64) >> 6;
                  do
                  {
                    v96 = *v92++;
                    *v91++ = v96;
                    --v95;
                  }
                  while (v95);
                }
              }
            }
          }
          *(_WORD *)(a2 + 8) = 257;
          *(_QWORD *)a2 = v14;
        }
        return 1;
      }
      if (v3 != 44)
        return 0;
    }
    v6 = *(_DWORD *)(result + 20);
    if ((v6 & 0x40000000) != 0)
      v7 = *(_QWORD **)(result - 8);
    else
      v7 = (_QWORD *)(result - 32 * (v6 & 0x7FFFFFF));
    v10 = *v7;
    v11 = v7[4];
    if (*(_BYTE *)(*v7 + 16) == 17)
      v12 = *v7;
    else
      v12 = 0;
    if (v12)
    {
      v13 = *(_UNKNOWN **)(v12 + 32) == &unk_1C866F1C0 ? *(_QWORD *)(v12 + 40) : v12 + 24;
      if ((*(_BYTE *)(v13 + 28) & 7) == 3)
        v10 = 0;
    }
    if (*(_BYTE *)(v11 + 16) == 17)
      v23 = v11;
    else
      v23 = 0;
    if (v23)
    {
      v24 = *(_UNKNOWN **)(v23 + 32) == &unk_1C866F1C0 ? *(_QWORD *)(v23 + 40) : v23 + 24;
      if ((*(_BYTE *)(v24 + 28) & 7) == 3)
        v11 = 0;
    }
    if (v10)
    {
      if (v12)
      {
        v25 = (llvm::detail::IEEEFloat *)(a2 + 24);
        v26 = (const llvm::detail::DoubleAPFloat *)(v12 + 32);
        if (*(_BYTE *)(a2 + 8))
        {
          sub_1C4DF91B8(v25, (uint64_t)v26);
        }
        else
        {
          v28 = *(_QWORD *)v26;
          if (*(_UNKNOWN **)v26 == &unk_1C866F1C0)
          {
            llvm::detail::DoubleAPFloat::DoubleAPFloat(v25, v26);
          }
          else
          {
            *(_QWORD *)v25 = v28;
            if ((*(_DWORD *)(v28 + 8) + 64) >= 0x80)
            {
              v98 = v12;
              v97 = operator new[]();
              v12 = v98;
              *(_QWORD *)(a2 + 32) = v97;
            }
            v29 = *(_BYTE *)(a2 + 44) & 0xF7 | *(_BYTE *)(v12 + 52) & 8;
            *(_BYTE *)(a2 + 44) = v29;
            v30 = *(_BYTE *)(v12 + 52);
            v31 = v30 & 7;
            *(_BYTE *)(a2 + 44) = v29 & 0xF8 | v30 & 7;
            *(_DWORD *)(a2 + 40) = *(_DWORD *)(v12 + 48);
            v33 = (v30 & 6) != 0 && v31 != 3;
            if (v31 == 1 || v33)
            {
              v35 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 8);
              v36 = (_QWORD *)(a2 + 32);
              if ((v35 - 64) <= 0xFFFFFF7F)
                v36 = (_QWORD *)*v36;
              v39 = *(uint64_t **)(v12 + 40);
              v37 = (uint64_t *)(v12 + 40);
              v38 = v39;
              if ((*(_DWORD *)(*(v37 - 1) + 8) - 64) < 0xFFFFFF80)
                v37 = v38;
              if (v35 <= 0xFFFFFFBF)
              {
                v40 = (unint64_t)(v35 + 64) >> 6;
                do
                {
                  v41 = *v37++;
                  *v36++ = v41;
                  --v40;
                }
                while (v40);
              }
            }
          }
        }
        v27 = 0;
        *(_WORD *)(a2 + 8) = 257;
      }
      else
      {
        *(_BYTE *)(a2 + 8) = 0;
        *(_WORD *)(a2 + 10) = 1;
        v27 = v10;
      }
      *(_QWORD *)a2 = v27;
      if (!v11)
      {
        v44 = 0;
        goto LABEL_100;
      }
LABEL_72:
      if (v23)
      {
        v42 = (void **)(a3 + 24);
        v43 = (const llvm::detail::DoubleAPFloat *)(v23 + 32);
        if (*(_BYTE *)(a3 + 8))
        {
          sub_1C4DF91B8((llvm::detail::IEEEFloat *)(a3 + 24), (uint64_t)v43);
        }
        else
        {
          v45 = *(_DWORD **)v43;
          if (*(_UNKNOWN **)v43 == &unk_1C866F1C0)
          {
            llvm::detail::DoubleAPFloat::DoubleAPFloat((llvm::detail::DoubleAPFloat *)(a3 + 24), v43);
          }
          else
          {
            *v42 = v45;
            if ((v45[2] + 64) >= 0x80)
              *(_QWORD *)(a3 + 32) = operator new[]();
            v46 = *(_BYTE *)(a3 + 44) & 0xF7 | *(_BYTE *)(v23 + 52) & 8;
            *(_BYTE *)(a3 + 44) = v46;
            v47 = *(_BYTE *)(v23 + 52);
            v48 = v47 & 7;
            *(_BYTE *)(a3 + 44) = v46 & 0xF8 | v47 & 7;
            *(_DWORD *)(a3 + 40) = *(_DWORD *)(v23 + 48);
            v50 = (v47 & 6) != 0 && v48 != 3;
            if (v48 == 1 || v50)
            {
              v51 = *(unsigned int *)(*(_QWORD *)(a3 + 24) + 8);
              v52 = (_QWORD *)(a3 + 32);
              if ((v51 - 64) <= 0xFFFFFF7F)
                v52 = (_QWORD *)*v52;
              v55 = *(uint64_t **)(v23 + 40);
              v54 = (uint64_t *)(v23 + 40);
              v53 = v55;
              if ((*(_DWORD *)(*(v54 - 1) + 8) - 64) >= 0xFFFFFF80)
                v53 = v54;
              if (v51 <= 0xFFFFFFBF)
              {
                v56 = (unint64_t)(v51 + 64) >> 6;
                do
                {
                  v57 = *v53++;
                  *v52++ = v57;
                  --v56;
                }
                while (v56);
              }
            }
          }
        }
        *(_WORD *)(a3 + 8) = 257;
        *(_QWORD *)a3 = 0;
        if (v3 == 44)
        {
          if (*v42 == &unk_1C866F1C0)
            llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)(a3 + 24));
          else
            *(_BYTE *)(a3 + 44) ^= 8u;
        }
      }
      else
      {
        *(_BYTE *)(a3 + 8) = 0;
        v44 = 1;
        *(_WORD *)(a3 + 10) = 1;
        *(_QWORD *)a3 = v11;
        if (v3 != 44)
          goto LABEL_100;
        *(_WORD *)(a3 + 10) = -1;
      }
      v44 = 1;
LABEL_100:
      if (((v10 != 0) & v44) != 0)
        return 2;
      else
        return 1;
    }
    if (v11)
    {
      a3 = a2;
      goto LABEL_72;
    }
    sub_1C4DF9184(&v99, *(void **)(v12 + 32));
    v58 = (llvm::detail::IEEEFloat *)(a2 + 24);
    if (*(_BYTE *)(a2 + 8))
    {
      sub_1C4DF91B8(v58, (uint64_t)&v99);
    }
    else
    {
      v73 = v99;
      if ((_UNKNOWN *)v99 == &unk_1C866F1C0)
      {
        llvm::detail::DoubleAPFloat::DoubleAPFloat(v58, (const llvm::detail::DoubleAPFloat *)&v99);
      }
      else
      {
        *(_QWORD *)v58 = v99;
        if ((*(_DWORD *)(v73 + 8) + 64) >= 0x80)
          *(_QWORD *)(a2 + 32) = operator new[]();
        v74 = v102;
        v75 = v102 & 7;
        *(_BYTE *)(a2 + 44) = *(_BYTE *)(a2 + 44) & 0xF0 | v102 & 0xF;
        *(_DWORD *)(a2 + 40) = v101;
        v77 = (v74 & 6) != 0 && v75 != 3;
        if (v75 == 1 || v77)
        {
          v78 = *(unsigned int *)(*(_QWORD *)(a2 + 24) + 8);
          v79 = (_QWORD *)(a2 + 32);
          if ((v78 - 64) <= 0xFFFFFF7F)
            v79 = (_QWORD *)*v79;
          if ((*(_DWORD *)(v99 + 8) - 64) >= 0xFFFFFF80)
            v80 = (uint64_t *)&v100;
          else
            v80 = v100;
          if (v78 <= 0xFFFFFFBF)
          {
            v81 = (unint64_t)(v78 + 64) >> 6;
            do
            {
              v82 = *v80++;
              *v79++ = v82;
              --v81;
            }
            while (v81);
          }
        }
      }
    }
    *(_WORD *)(a2 + 8) = 257;
    *(_QWORD *)a2 = 0;
    if ((_UNKNOWN *)v99 == &unk_1C866F1C0)
    {
      sub_1C4773C74((uint64_t *)&v100);
    }
    else if ((*(_DWORD *)(v99 + 8) - 64) <= 0xFFFFFF7F && v100)
    {
      MEMORY[0x1CAA32F9C](v100, 0x1000C8000313F17);
    }
    return 1;
  }
  return result;
}

uint64_t sub_1C579FAA4(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v4;
  uint64_t v7;

  v4 = *(_QWORD *)a1;
  if (!v4)
    return 0;
  v7 = sub_1C579F290(v4, (uint64_t)a2, (uint64_t)a3);
  if ((_DWORD)v7 && (*(_BYTE *)(a1 + 8) || *(_WORD *)(a1 + 10) != 1))
  {
    sub_1C57A03D0(a2, (unsigned __int8 *)(a1 + 8));
    if ((_DWORD)v7 == 2)
      sub_1C57A03D0(a3, (unsigned __int8 *)(a1 + 8));
    else
      return 1;
  }
  return v7;
}

uint64_t sub_1C579FB38(uint64_t a1, unsigned int *a2, unint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  __int16 v25;
  _DWORD *v26;
  char v27;
  char v28;
  int v29;
  _BOOL4 v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _WORD *v43;
  _DWORD **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const llvm::APFloat *v49;
  _BYTE *v50;
  _BYTE *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t **v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t *v59;
  uint64_t v60;
  _BOOL4 v61;
  int v62;
  uint64_t v63;
  uint64_t i;
  _BYTE *v65;
  llvm::detail::IEEEFloat *v66;
  void *v67;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  int v73;
  _BOOL4 v74;
  BOOL v75;
  uint64_t *v76;
  uint64_t v77;
  llvm::ConstantFP **v78;
  llvm::APFloatBase *v79;
  _BOOL4 v80;
  BOOL v81;
  llvm::ConstantFP **v82;
  llvm::APFloatBase *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t *v88;
  unsigned int v90;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  void *v100;
  uint64_t v101;
  _BYTE v102[176];
  char v103[8];
  uint64_t v104;
  uint64_t v105;
  __int16 v106;
  uint64_t v107;

  v3 = a2;
  v4 = a1;
  v5 = 0;
  v107 = *MEMORY[0x1E0C80C00];
  v6 = a2[2];
  do
  {
    v7 = &v102[v5 + 32];
    *((_DWORD *)v7 + 2) = 0;
    *(_QWORD *)v7 = 0;
    v5 += 48;
  }
  while (v5 != 144);
  v100 = v102;
  v101 = 0x400000000;
  if (!(_DWORD)v6)
    goto LABEL_92;
  v90 = a3;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 1;
  do
  {
    v13 = *(uint64_t **)(*(_QWORD *)v3 + 8 * v10);
    if (!v13)
    {
      ++v10;
      goto LABEL_77;
    }
    v14 = *v13;
    v15 = v9;
    v16 = v9;
    if (v9 >= HIDWORD(v101))
    {
      v98 = v9;
      v52 = v9;
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, v9 + 1, 8);
      v15 = v52;
      v9 = v98;
      v16 = v101;
    }
    *((_QWORD *)v100 + v16) = v13;
    v8 = v101 + 1;
    LODWORD(v101) = v101 + 1;
    ++v10;
    v17 = v12;
    if (v10 < v6)
    {
      do
      {
        v18 = *(_QWORD **)(*(_QWORD *)v3 + 8 * v17);
        if (v18 && *v18 == v14)
        {
          *(_QWORD *)(*(_QWORD *)v3 + 8 * v17) = 0;
          if (v8 >= HIDWORD(v101))
          {
            v96 = v9;
            v93 = v15;
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, v8 + 1, 8);
            v15 = v93;
            v9 = v96;
            v8 = v101;
          }
          *((_QWORD *)v100 + v8) = v18;
          v8 = v101 + 1;
          LODWORD(v101) = v101 + 1;
        }
        ++v17;
      }
      while ((_DWORD)v6 != (_DWORD)v17);
    }
    v19 = v9 + 1;
    if (v8 == (_DWORD)v19)
      goto LABEL_73;
    v95 = v11;
    v97 = v9;
    v20 = v11;
    v21 = *((_QWORD *)v100 + v15);
    v92 = &v102[48 * v11 + 32];
    v94 = v15;
    *v92 = *(_QWORD *)v21;
    v22 = v92 + 1;
    v99 = v11;
    if (*(_BYTE *)(v21 + 8))
    {
      v23 = &v102[48 * v11 + 56];
      a2 = (unsigned int *)(v21 + 24);
      if (*v22)
      {
        sub_1C4DF91B8((llvm::detail::IEEEFloat *)&v102[48 * v20 + 56], (uint64_t)a2);
      }
      else
      {
        v26 = *(_DWORD **)a2;
        if (*(_UNKNOWN **)a2 != &unk_1C866F1C0)
        {
          *(_QWORD *)v23 = v26;
          if ((v26[2] + 64) >= 0x80)
          {
            v53 = operator new[]();
            v9 = v97;
            *((_QWORD *)v23 + 1) = v53;
          }
          v27 = v23[20] & 0xF7 | *(_BYTE *)(v21 + 44) & 8;
          v23[20] = v27;
          v28 = *(_BYTE *)(v21 + 44);
          v29 = v28 & 7;
          v23[20] = v27 & 0xF8 | v28 & 7;
          *((_DWORD *)v23 + 4) = *(_DWORD *)(v21 + 40);
          v31 = (v28 & 6) != 0 && v29 != 3;
          if (v29 == 1 || v31)
          {
            v34 = *(_QWORD *)v23;
            v33 = v23 + 8;
            v35 = *(unsigned int *)(v34 + 8);
            if ((v35 - 64) <= 0xFFFFFF7F)
              v33 = (_QWORD *)*v33;
            v38 = *(uint64_t **)(v21 + 32);
            v37 = (uint64_t *)(v21 + 32);
            v36 = v38;
            if ((*(_DWORD *)(*(v37 - 1) + 8) - 64) >= 0xFFFFFF80)
              v36 = v37;
            if (v35 <= 0xFFFFFFBF)
            {
              v39 = (unint64_t)(v35 + 64) >> 6;
              do
              {
                v40 = *v36++;
                *v33++ = v40;
                --v39;
              }
              while (v39);
            }
          }
          goto LABEL_42;
        }
        llvm::detail::DoubleAPFloat::DoubleAPFloat((llvm::detail::DoubleAPFloat *)&v102[48 * v20 + 56], (const llvm::detail::DoubleAPFloat *)a2);
      }
      v9 = v97;
LABEL_42:
      v102[48 * v99 + 41] = 1;
      *v22 = 1;
      v8 = v101;
      v11 = v95;
      v24 = a1;
      goto LABEL_43;
    }
    v24 = v4;
    v25 = *(_WORD *)(v21 + 10);
    *v22 = 0;
    *(_WORD *)&v102[48 * v11 + 42] = v25;
LABEL_43:
    if (v8 <= v19)
      goto LABEL_59;
    v41 = &v102[48 * v99 + 32];
    v42 = (uint64_t)(v41 + 16);
    v43 = v41 + 10;
    v44 = (_DWORD **)(v41 + 24);
    do
    {
      v45 = *((_QWORD *)v100 + v19);
      if ((*v22 == 0) == (*(_BYTE *)(v45 + 8) == 0))
      {
        if (!*v22)
        {
          *v43 += *(_WORD *)(v45 + 10);
          goto LABEL_56;
        }
        v46 = v45 + 16;
        v47 = v42;
LABEL_54:
        sub_1C47B4138(v47, v46, 1);
        goto LABEL_56;
      }
      if (!*v22)
      {
        v48 = v45 + 16;
        sub_1C57A05A4((uint64_t)v22, *(_DWORD **)(v45 + 24));
        v47 = v42;
        v46 = v48;
        goto LABEL_54;
      }
      sub_1C57A0810((uint64_t)v103, *v44, *(__int16 *)(v45 + 10));
      sub_1C47B4138(v42, (uint64_t)v103, 1);
      if ((_UNKNOWN *)v104 == &unk_1C866F1C0)
      {
        sub_1C4773C74(&v105);
      }
      else if ((*(_DWORD *)(v104 + 8) - 64) <= 0xFFFFFF7F && v105)
      {
        MEMORY[0x1CAA32F9C](v105, 0x1000C8000313F17);
      }
LABEL_56:
      ++v19;
      v8 = v101;
    }
    while (v19 < v101);
    v24 = a1;
    v11 = v95;
    v9 = v97;
LABEL_59:
    v4 = v24;
    a3 = v94;
    if (v8 != v9)
    {
      if (v8 <= v9)
      {
        if (HIDWORD(v101) < v9)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, v94, 8);
          a3 = v94;
          v9 = v97;
          v8 = v101;
        }
        if (v8 != v9)
        {
          v49 = (const llvm::APFloat *)a3;
          bzero((char *)v100 + 8 * v8, 8 * (a3 - v8));
          a3 = (unint64_t)v49;
          v9 = v97;
        }
      }
      LODWORD(v101) = v9;
    }
    ++v11;
    if (!*v22)
    {
      if (!*(_WORD *)&v102[48 * v99 + 42])
        goto LABEL_76;
LABEL_70:
      if (v9 >= HIDWORD(v101))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v100, (uint64_t)v102, a3 + 1, 8);
        a3 = v101;
      }
      *((_QWORD *)v100 + a3) = v92;
      v8 = v101 + 1;
      LODWORD(v101) = v101 + 1;
LABEL_73:
      v9 = v8;
      goto LABEL_77;
    }
    v50 = &v102[48 * v99 + 32];
    if (*((_UNKNOWN **)v50 + 3) == &unk_1C866F1C0)
      v51 = *(_BYTE **)&v102[48 * v99 + 64];
    else
      v51 = v50 + 16;
    if ((v51[28] & 7) != 3)
      goto LABEL_70;
LABEL_76:
    v8 = v9;
LABEL_77:
    ++v12;
  }
  while (v10 != v6);
  if (!v8)
  {
LABEL_92:
    v63 = (uint64_t)llvm::ConstantFP::get(**(llvm::ConstantFP ****)(v4 + 8), (llvm::Type *)a2, 0.0);
    goto LABEL_93;
  }
  v54 = v8;
  v55 = (uint64_t **)v100;
  v56 = v8 - 1;
  v57 = 8 * v8;
  v58 = (uint64_t **)v100;
  while (2)
  {
    v59 = *v58;
    v60 = **v58;
    if (v60 && *(unsigned __int8 *)(v60 + 16) - 11 >= 2)
    {
      if (*((_BYTE *)v59 + 8))
      {
        v61 = 0;
        goto LABEL_88;
      }
      v62 = *((unsigned __int16 *)v59 + 5);
      if (v62 != 0xFFFF)
      {
        v61 = v62 == 1;
LABEL_88:
        v56 += !v61;
      }
    }
    ++v58;
    v57 -= 8;
    if (v57)
      continue;
    break;
  }
  if (v56 > v90)
  {
    v63 = 0;
    goto LABEL_93;
  }
  v63 = 0;
  v69 = 0;
  v70 = 8 * v54;
  while (2)
  {
    v71 = *v55;
    v72 = **v55;
    if (!v72)
    {
      v78 = **(llvm::ConstantFP ****)(v4 + 8);
      if (*((_BYTE *)v71 + 8))
        v79 = llvm::ConstantFP::get(*v78, (llvm::LLVMContext *)(v71 + 2), (const llvm::APFloat *)a3);
      else
        v79 = llvm::ConstantFP::get(v78, (llvm::Type *)a2, (double)*((__int16 *)v71 + 5));
      v72 = (uint64_t)v79;
      goto LABEL_131;
    }
    v73 = *((unsigned __int16 *)v71 + 5);
    v74 = v73 == 0xFFFF;
    v75 = v73 == 1 || v73 == 0xFFFF;
    if (*((_BYTE *)v71 + 8) || !v75)
    {
      v80 = v73 == 2;
      v74 = v73 == 65534;
      if (v73 == 65534)
        v80 = 1;
      if (*((_BYTE *)v71 + 8))
        v81 = 1;
      else
        v81 = !v80;
      if (!v81)
      {
        v84 = sub_1C57A0A84((uint64_t *)v4, (uint64_t *)**v55, **v55);
        v72 = v84;
        if (v63)
          goto LABEL_110;
        goto LABEL_132;
      }
      v82 = **(llvm::ConstantFP ****)(v4 + 8);
      if (*((_BYTE *)v71 + 8))
        v83 = llvm::ConstantFP::get(*v82, (llvm::LLVMContext *)(v71 + 2), (const llvm::APFloat *)a3);
      else
        v83 = llvm::ConstantFP::get(v82, (llvm::Type *)a2, (double)(__int16)v73);
      v85 = (uint64_t)v83;
      v86 = *(_QWORD *)v4;
      v106 = 257;
      v72 = sub_1C4772428(v86, (uint64_t *)v72, v85, (uint64_t)v103, 0);
      if (v72)
        v87 = *(unsigned __int8 *)(v72 + 16) >= 0x1Cu;
      else
        v87 = 0;
      if (v87)
        sub_1C57A0B44(v4, v72);
LABEL_131:
      v74 = 0;
      if (v63)
        goto LABEL_110;
      goto LABEL_132;
    }
    if (!v63)
    {
LABEL_132:
      v69 = v74;
      v63 = v72;
      goto LABEL_133;
    }
LABEL_110:
    if (((v69 ^ v74) & 1) != 0)
    {
      if (v69)
      {
        v76 = (uint64_t *)v72;
        v77 = v63;
      }
      else
      {
        v76 = (uint64_t *)v63;
        v77 = v72;
      }
      v63 = sub_1C57A0AE4((uint64_t *)v4, v76, v77);
      v69 = 0;
    }
    else
    {
      v63 = sub_1C57A0A84((uint64_t *)v4, (uint64_t *)v63, v72);
    }
LABEL_133:
    ++v55;
    v70 -= 8;
    if (v70)
      continue;
    break;
  }
  if (v69)
  {
    v88 = *(uint64_t **)v4;
    v106 = 257;
    v63 = (uint64_t)sub_1C4772890(v88, v63, (uint64_t)v103, 0);
    if (v63 && *(unsigned __int8 *)(v63 + 16) >= 0x1Cu)
      sub_1C57A0B44(v4, v63);
  }
LABEL_93:
  if (v100 != v102)
    free(v100);
  for (i = 0; i != -144; i -= 48)
  {
    v65 = &v102[i + 32];
    if (v102[i + 137])
    {
      v67 = (void *)*((_QWORD *)v65 + 15);
      v66 = (llvm::detail::IEEEFloat *)(v65 + 120);
      if (v67 == &unk_1C866F1C0)
        sub_1C4773C74((uint64_t *)&v102[i + 160]);
      else
        llvm::detail::IEEEFloat::~IEEEFloat(v66);
    }
  }
  return v63;
}

unsigned __int8 *sub_1C57A03D0(unsigned __int8 *result, unsigned __int8 *a2)
{
  int v2;
  int v3;
  BOOL v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  BOOL v8;
  unsigned __int8 *v10;
  _DWORD *v11;
  uint64_t v12;
  int v13;
  char v14[8];
  uint64_t v15;
  uint64_t v16[3];

  v16[2] = *MEMORY[0x1E0C80C00];
  v2 = *a2;
  v3 = *((unsigned __int16 *)a2 + 1);
  if (*a2)
    v4 = 0;
  else
    v4 = v3 == 1;
  if (v4)
    return result;
  v5 = result;
  v7 = result[8];
  result += 8;
  v6 = v7;
  if (*a2)
    v8 = 0;
  else
    v8 = v3 == 0xFFFF;
  if (v8)
  {
    if (v6)
    {
      result = v5 + 24;
      if (*((_UNKNOWN **)v5 + 3) == &unk_1C866F1C0)
        return (unsigned __int8 *)llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)result);
      v5[44] ^= 8u;
      return result;
    }
    v13 = -*((unsigned __int16 *)v5 + 5);
LABEL_22:
    *((_WORD *)v5 + 5) = v13;
    return result;
  }
  if (!(v6 | v2))
  {
    LOWORD(v13) = *((_WORD *)v5 + 5) * v3;
    goto LABEL_22;
  }
  if (v6)
    v10 = result;
  else
    v10 = a2;
  v11 = (_DWORD *)*((_QWORD *)v10 + 2);
  if (!v6)
  {
    sub_1C57A05A4((uint64_t)result, *((_DWORD **)v10 + 2));
    v2 = *a2;
  }
  v12 = (uint64_t)(v5 + 16);
  if (v2)
    return (unsigned __int8 *)sub_1C48DB628(v12, (uint64_t)(a2 + 8), 1);
  sub_1C57A0810((uint64_t)v14, v11, *((__int16 *)a2 + 1));
  result = (unsigned __int8 *)sub_1C48DB628(v12, (uint64_t)v14, 1);
  if ((_UNKNOWN *)v15 == &unk_1C866F1C0)
    return (unsigned __int8 *)sub_1C4773C74(v16);
  if ((*(_DWORD *)(v15 + 8) - 64) <= 0xFFFFFF7F)
  {
    result = (unsigned __int8 *)v16[0];
    if (v16[0])
      return (unsigned __int8 *)MEMORY[0x1CAA32F9C](v16[0], 0x1000C8000313F17);
  }
  return result;
}

uint64_t sub_1C57A05A4(uint64_t result, _DWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  llvm::APInt *v4;
  _DWORD *v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  void **v9;
  _DWORD *v10;
  int v11;
  uint64_t *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  llvm::APInt *v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  _DWORD *v23;
  _DWORD *v24;

  if (!*(_BYTE *)result)
  {
    v2 = result;
    v3 = *(unsigned __int16 *)(result + 2);
    if (*(__int16 *)(result + 2) < 1)
    {
      v8 = -(uint64_t)(__int16)v3;
      v9 = (void **)(result + 16);
      if (a2 == (_DWORD *)&unk_1C866F1C0)
      {
        result = (uint64_t)llvm::detail::DoubleAPFloat::DoubleAPFloat((_QWORD *)(result + 16), (uint64_t)&unk_1C866F1C0, v8);
      }
      else
      {
        *v9 = a2;
        v10 = a2;
        if ((a2[2] + 64) >= 0x80)
        {
          v20 = v8;
          v23 = a2;
          v17 = operator new[]();
          v8 = v20;
          a2 = v23;
          *(_QWORD *)(v2 + 24) = v17;
          v10 = *(_DWORD **)(v2 + 16);
        }
        *(_BYTE *)(v2 + 36) = *(_BYTE *)(v2 + 36) & 0xF0 | 2;
        v11 = v10[2];
        v12 = (uint64_t *)(v2 + 24);
        if ((v11 - 64) < 0xFFFFFF80)
        {
          v18 = (_QWORD *)*v12;
          *v18 = 0;
          v21 = v8;
          v24 = a2;
          bzero(v18 + 1, 8 * (((v11 + 64) >> 6) - 2) + 8);
          v8 = v21;
          a2 = v24;
          v12 = *(uint64_t **)(v2 + 24);
        }
        else
        {
          *v12 = 0;
        }
        *(_DWORD *)(v2 + 32) = a2[2] - 1;
        *v12 = v8;
        result = llvm::detail::IEEEFloat::normalize((llvm::APInt *)(v2 + 16), 1, 0);
      }
      if (*v9 == &unk_1C866F1C0)
        result = llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)(v2 + 16));
      else
        *(_BYTE *)(v2 + 36) ^= 8u;
    }
    else
    {
      v4 = (llvm::APInt *)(result + 16);
      if (a2 == (_DWORD *)&unk_1C866F1C0)
      {
        result = (uint64_t)llvm::detail::DoubleAPFloat::DoubleAPFloat(v4, (uint64_t)&unk_1C866F1C0, v3);
      }
      else
      {
        *(_QWORD *)v4 = a2;
        v5 = a2;
        if ((a2[2] + 64) >= 0x80)
        {
          v13 = a2;
          v14 = operator new[]();
          a2 = v13;
          v15 = v14;
          v4 = (llvm::APInt *)(v2 + 16);
          *(_QWORD *)(v2 + 24) = v15;
          v5 = *(_DWORD **)(v2 + 16);
        }
        *(_BYTE *)(v2 + 36) = *(_BYTE *)(v2 + 36) & 0xF0 | 2;
        v6 = v5[2];
        v7 = (uint64_t *)(v2 + 24);
        if ((v6 - 64) < 0xFFFFFF80)
        {
          v16 = (uint64_t *)*v7;
          *v16 = 0;
          v19 = v4;
          v22 = a2;
          bzero(v16 + 1, 8 * (((v6 + 64) >> 6) - 2) + 8);
          v4 = v19;
          a2 = v22;
          v7 = (uint64_t *)*v7;
        }
        else
        {
          *v7 = 0;
        }
        *(_DWORD *)(v2 + 32) = a2[2] - 1;
        *v7 = v3;
        result = llvm::detail::IEEEFloat::normalize(v4, 1, 0);
      }
    }
    *(_WORD *)v2 = 257;
  }
  return result;
}

_QWORD *sub_1C57A0810(uint64_t a1, _DWORD *a2, unsigned int a3)
{
  unint64_t v4;
  llvm::APInt *v5;
  _DWORD *v6;
  int v7;
  unint64_t *v8;
  _QWORD *result;
  uint64_t v10;
  void **v11;
  _DWORD *v12;
  int v13;
  uint64_t *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  llvm::APInt *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  _DWORD *v26;

  if ((a3 & 0x80000000) != 0)
  {
    v10 = -a3;
    v11 = (void **)(a1 + 8);
    if (a2 == (_DWORD *)&unk_1C866F1C0)
    {
      result = llvm::detail::DoubleAPFloat::DoubleAPFloat((_QWORD *)(a1 + 8), (uint64_t)&unk_1C866F1C0, v10);
    }
    else
    {
      *v11 = a2;
      v12 = a2;
      if ((a2[2] + 64) >= 0x80)
      {
        v23 = v10;
        v26 = a2;
        v20 = operator new[]();
        v10 = v23;
        a2 = v26;
        *(_QWORD *)(a1 + 16) = v20;
        v12 = *(_DWORD **)(a1 + 8);
      }
      *(_BYTE *)(a1 + 28) = *(_BYTE *)(a1 + 28) & 0xF0 | 2;
      v13 = v12[2];
      v14 = (uint64_t *)(a1 + 16);
      if ((v13 - 64) < 0xFFFFFF80)
      {
        v19 = (_QWORD *)*v14;
        *v19 = 0;
        v22 = v10;
        v25 = a2;
        bzero(v19 + 1, 8 * (((v13 + 64) >> 6) - 2) + 8);
        v10 = v22;
        a2 = v25;
        v14 = *(uint64_t **)(a1 + 16);
      }
      else
      {
        *v14 = 0;
      }
      *(_DWORD *)(a1 + 24) = a2[2] - 1;
      *v14 = v10;
      result = (_QWORD *)llvm::detail::IEEEFloat::normalize((llvm::APInt *)(a1 + 8), 1, 0);
    }
    if (*v11 == &unk_1C866F1C0)
      return (_QWORD *)llvm::detail::DoubleAPFloat::changeSign((llvm::detail::DoubleAPFloat *)(a1 + 8));
    else
      *(_BYTE *)(a1 + 28) ^= 8u;
  }
  else
  {
    v4 = a3;
    v5 = (llvm::APInt *)(a1 + 8);
    if (a2 == (_DWORD *)&unk_1C866F1C0)
    {
      return llvm::detail::DoubleAPFloat::DoubleAPFloat(v5, (uint64_t)&unk_1C866F1C0, a3);
    }
    else
    {
      *(_QWORD *)v5 = a2;
      v6 = a2;
      if ((a2[2] + 64) >= 0x80)
      {
        v15 = a2;
        v16 = operator new[]();
        a2 = v15;
        v17 = v16;
        v5 = (llvm::APInt *)(a1 + 8);
        *(_QWORD *)(a1 + 16) = v17;
        v6 = *(_DWORD **)(a1 + 8);
      }
      *(_BYTE *)(a1 + 28) = *(_BYTE *)(a1 + 28) & 0xF0 | 2;
      v7 = v6[2];
      v8 = (unint64_t *)(a1 + 16);
      if ((v7 - 64) < 0xFFFFFF80)
      {
        v18 = (unint64_t *)*v8;
        *v18 = 0;
        v21 = v5;
        v24 = a2;
        bzero(v18 + 1, 8 * (((v7 + 64) >> 6) - 2) + 8);
        v5 = v21;
        a2 = v24;
        v8 = (unint64_t *)*v8;
      }
      else
      {
        *v8 = 0;
      }
      *(_DWORD *)(a1 + 24) = a2[2] - 1;
      *v8 = v4;
      return (_QWORD *)llvm::detail::IEEEFloat::normalize(v5, 1, 0);
    }
  }
  return result;
}

uint64_t sub_1C57A0A84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  _BYTE v8[32];
  __int16 v9;

  v4 = *a1;
  v9 = 257;
  v5 = sub_1C534554C(v4, a2, a3, (uint64_t)v8, 0);
  if (v5)
    v6 = *(unsigned __int8 *)(v5 + 16) >= 0x1Cu;
  else
    v6 = 0;
  if (v6)
    sub_1C57A0B44((uint64_t)a1, v5);
  return v5;
}

uint64_t sub_1C57A0AE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  _BYTE v8[32];
  __int16 v9;

  v4 = *a1;
  v9 = 257;
  v5 = sub_1C477265C(v4, a2, a3, (uint64_t)v8, 0);
  if (v5)
    v6 = *(unsigned __int8 *)(v5 + 16) >= 0x1Cu;
  else
    v6 = 0;
  if (v6)
    sub_1C57A0B44((uint64_t)a1, v5);
  return v5;
}

uint64_t sub_1C57A0B44(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 **v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;

  v3 = result;
  v4 = *(unsigned __int8 **)(*(_QWORD *)(result + 8) + 48);
  v7 = v4;
  if (v4)
    result = llvm::MetadataTracking::track((uint64_t)&v7, v4, 2);
  v5 = (unsigned __int8 **)(a2 + 48);
  if (&v7 == (unsigned __int8 **)(a2 + 48))
  {
    if (v7)
      result = llvm::MetadataTracking::untrack((uint64_t)&v7, v7);
  }
  else
  {
    if (*v5)
      result = llvm::MetadataTracking::untrack(a2 + 48, *v5);
    v6 = v7;
    *v5 = v7;
    if (v6)
      result = llvm::MetadataTracking::retrack((uint64_t)&v7, v6, a2 + 48);
  }
  *(_BYTE *)(a2 + 17) |= *(_BYTE *)(*(_QWORD *)(v3 + 8) + 17) & 0xFE;
  return result;
}

uint64_t sub_1C57A0BF8(uint64_t a1, int a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 == v4)
  {
    v5 = a1 + 1;
    if ((sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(a3 - 32)) & 1) != 0)
      return 1;
    return sub_1C4D9ED34(v5, *(llvm::Constant **)(a3 - 64));
  }
  else if (v4 == 5 && *(unsigned __int16 *)(a3 + 18) == a2)
  {
    v7 = a1 + 1;
    if ((sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)) & 1) != 0)
      return 1;
    return sub_1C4D9EED4(v7, *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1C57A0CAC(int a1, llvm::Constant *this)
{
  unsigned int v3;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  int v8;
  llvm::APFloatBase *SplatValue;
  int v10;
  int v11;
  llvm::Type *v12;
  llvm::UndefValue *AggregateElement;
  int v14;

  v3 = *((unsigned __int8 *)this + 16);
  if (this && v3 == 16)
    return 1;
  v5 = *(_QWORD *)this;
  if (*(_QWORD *)this)
    v6 = (*(_DWORD *)(*(_QWORD *)this + 8) & 0xFE) == 18;
  else
    v6 = 0;
  v7 = !v6 || v3 > 0x14;
  v8 = v7;
  if (v7 || (SplatValue = llvm::Constant::getSplatValue(this, 0)) != 0 && *((_BYTE *)SplatValue + 16) == 16)
  {
    v10 = 1;
  }
  else
  {
    if (*(_BYTE *)(v5 + 8) == 18)
    {
      v11 = *(_DWORD *)(v5 + 32);
      if (v11)
      {
        v12 = 0;
        v10 = 0;
        while (1)
        {
          AggregateElement = llvm::Constant::getAggregateElement(this, v12);
          if (!AggregateElement)
            break;
          v14 = *((unsigned __int8 *)AggregateElement + 16);
          if ((v14 - 11) >= 2)
          {
            if (v14 != 16)
              break;
            v10 = 1;
          }
          v12 = (llvm::Type *)((_DWORD)v12 + 1);
          if (v11 == (_DWORD)v12)
            return (v8 ^ 1) & v10;
        }
      }
    }
    v10 = 0;
  }
  return (v8 ^ 1) & v10;
}

uint64_t sub_1C57A0D98(uint64_t a1, uint64_t a2)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;

  if (*(_BYTE *)(a2 + 16) != 85)
    return 0;
  v5 = *(_DWORD *)(a2 + 20);
  if ((v5 & 0x40000000) != 0)
    v6 = *(_QWORD *)(a2 - 8);
  else
    v6 = a2 - 32 * (v5 & 0x7FFFFFF);
  v7 = *(_QWORD *)(v6 + 32);
  v8 = *(unsigned __int8 *)(v7 + 16);
  if (v8 != 5)
  {
    if (v8 == 58
      && ((sub_1C4D9ED34(a1 + 2, *(llvm::Constant **)(v7 - 32)) & 1) != 0
       || (sub_1C4D9ED34(a1 + 2, *(llvm::Constant **)(v7 - 64)) & 1) != 0))
    {
      goto LABEL_9;
    }
    return 0;
  }
  if (*(_WORD *)(v7 + 18) != 30
    || (sub_1C4D9EED4(a1 + 2, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
    && !sub_1C4D9EED4(a1 + 2, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))))
  {
    return 0;
  }
LABEL_9:
  v9 = *(_DWORD *)(a2 + 20);
  if ((v9 & 0x40000000) != 0)
    v10 = *(_QWORD *)(a2 - 8);
  else
    v10 = a2 - 32 * (v9 & 0x7FFFFFF);
  return sub_1C57A0BF8(a1 + 3, 30, *(_QWORD *)(v10 + 64));
}

uint64_t sub_1C57A0EA4(uint64_t a1, uint64_t a2)
{
  if ((sub_1C57A0F04(a1, a2) & 1) != 0 || (sub_1C57A1100(a1 + 4, a2) & 1) != 0 || (sub_1C57A12FC(a1 + 8, a2) & 1) != 0)
    return 1;
  else
    return sub_1C57A14F8(a1 + 12, a2);
}

uint64_t sub_1C57A0F04(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84)
      return 0;
    v4 = *(_QWORD *)(a2 - 32);
    if (!v4
      || *(_BYTE *)(v4 + 16)
      || *(_QWORD *)(v4 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 274)
    {
      return 0;
    }
    v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v6 = *v5;
    v7 = v5[4];
LABEL_24:
    v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58
           || (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
           && (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30)
        return 0;
      v18 = a1 + 3;
      if ((sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58)
        return 0;
      v17 = a1 + 3;
      if ((sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  result = 0;
  v9 = *(_QWORD *)(a2 - 96);
  if (v9 && *(_BYTE *)(v9 + 16) == 81)
  {
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v6 = *(_QWORD *)(v9 - 64);
    v7 = *(_QWORD *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6))
      return 0;
    v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 38)
        goto LABEL_24;
    }
    else if (v14 == 40)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C57A1100(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84)
      return 0;
    v4 = *(_QWORD *)(a2 - 32);
    if (!v4
      || *(_BYTE *)(v4 + 16)
      || *(_QWORD *)(v4 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 275)
    {
      return 0;
    }
    v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v6 = *v5;
    v7 = v5[4];
LABEL_24:
    v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58
           || (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
           && (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30)
        return 0;
      v18 = a1 + 3;
      if ((sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58)
        return 0;
      v17 = a1 + 3;
      if ((sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  result = 0;
  v9 = *(_QWORD *)(a2 - 96);
  if (v9 && *(_BYTE *)(v9 + 16) == 81)
  {
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v6 = *(_QWORD *)(v9 - 64);
    v7 = *(_QWORD *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6))
      return 0;
    v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 40)
        goto LABEL_24;
    }
    else if (v14 == 38)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C57A12FC(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84)
      return 0;
    v4 = *(_QWORD *)(a2 - 32);
    if (!v4
      || *(_BYTE *)(v4 + 16)
      || *(_QWORD *)(v4 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 305)
    {
      return 0;
    }
    v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v6 = *v5;
    v7 = v5[4];
LABEL_24:
    v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58
           || (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
           && (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30)
        return 0;
      v18 = a1 + 3;
      if ((sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58)
        return 0;
      v17 = a1 + 3;
      if ((sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  result = 0;
  v9 = *(_QWORD *)(a2 - 96);
  if (v9 && *(_BYTE *)(v9 + 16) == 81)
  {
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v6 = *(_QWORD *)(v9 - 64);
    v7 = *(_QWORD *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6))
      return 0;
    v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 34)
        goto LABEL_24;
    }
    else if (v14 == 36)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C57A14F8(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 != 85)
  {
    if (v3 != 84)
      return 0;
    v4 = *(_QWORD *)(a2 - 32);
    if (!v4
      || *(_BYTE *)(v4 + 16)
      || *(_QWORD *)(v4 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v4 + 33) & 0x20) == 0
      || *(_DWORD *)(v4 + 36) != 306)
    {
      return 0;
    }
    v5 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v6 = *v5;
    v7 = v5[4];
LABEL_24:
    v15 = *(unsigned __int8 *)(v6 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v6 + 18) != 30
        || (sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && !sub_1C4D9EED4(a1 + 1, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
      {
        return 0;
      }
    }
    else if (v15 != 58
           || (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 32)) & 1) == 0
           && (sub_1C4D9ED34(a1 + 1, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
    {
      return 0;
    }
    v16 = *(unsigned __int8 *)(v7 + 16);
    if (v16 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 30)
        return 0;
      v18 = a1 + 3;
      if ((sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)) & 1) == 0
        && (sub_1C4D9EED4(v18, *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))) & 1) == 0)
      {
        return 0;
      }
    }
    else
    {
      if (v16 != 58)
        return 0;
      v17 = a1 + 3;
      if ((sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 32)) & 1) == 0
        && (sub_1C4D9ED34(v17, *(llvm::Constant **)(v7 - 64)) & 1) == 0)
      {
        return 0;
      }
    }
    return 1;
  }
  result = 0;
  v9 = *(_QWORD *)(a2 - 96);
  if (v9 && *(_BYTE *)(v9 + 16) == 81)
  {
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v6 = *(_QWORD *)(v9 - 64);
    v7 = *(_QWORD *)(v9 - 32);
    if ((v10 != v6 || v11 != v7) && (v10 != v7 || v11 != v6))
      return 0;
    v14 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v6)
    {
      if (v14 == 36)
        goto LABEL_24;
    }
    else if (v14 == 34)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

BOOL sub_1C57A16F4(_QWORD **a1, int a2, uint64_t a3)
{
  int v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = *(unsigned __int8 *)(a3 + 16);
  v6 = a2 + 28;
  if (a2 + 28 == v5)
  {
    v7 = *(_QWORD *)(a3 - 64);
    v8 = *(unsigned __int8 *)(v7 + 16);
    if (v8 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 25)
        return 0;
      v13 = *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      if (!v13)
        return 0;
      **a1 = v13;
      if (!sub_1C4D8A004((uint64_t)(a1 + 1), *(llvm::Constant **)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)))return 0;
    }
    else
    {
      if (v8 != 53)
        return 0;
      v9 = *(_QWORD *)(v7 - 64);
      if (!v9)
        return 0;
      **a1 = v9;
      if ((sub_1C4D89F84((uint64_t)(a1 + 1), *(unsigned __int8 **)(v7 - 32)) & 1) == 0)
        return 0;
    }
    return (sub_1C4D89F84((uint64_t)(a1 + 3), *(unsigned __int8 **)(a3 - 32)) & 1) != 0;
  }
  if (v5 == 5)
  {
    if (*(unsigned __int16 *)(a3 + 18) != a2)
      goto LABEL_25;
    v10 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    v11 = *(unsigned __int8 *)(v10 + 16);
    if (v11 == 5)
    {
      if (*(_WORD *)(v10 + 18) != 25)
        goto LABEL_25;
      v15 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
      if (!v15)
        goto LABEL_25;
      **a1 = v15;
      if (!sub_1C4D8A004((uint64_t)(a1 + 1), *(llvm::Constant **)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32)))goto LABEL_25;
    }
    else
    {
      if (v11 != 53)
        goto LABEL_25;
      v12 = *(_QWORD *)(v10 - 64);
      if (!v12)
        goto LABEL_25;
      **a1 = v12;
      if ((sub_1C4D89F84((uint64_t)(a1 + 1), *(unsigned __int8 **)(v10 - 32)) & 1) == 0)
        goto LABEL_25;
    }
    if ((sub_1C4D8A004((uint64_t)(a1 + 3), *(llvm::Constant **)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)
    {
LABEL_25:
      v6 = 0;
      return (v5 == 5) & v6;
    }
    v6 = 1;
  }
  return (v5 == 5) & v6;
}

uint64_t sub_1C57A18A0(_QWORD **a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  BOOL v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;

  v2 = *(unsigned __int8 *)(a2 + 16);
  v3 = v2 - 28;
  v5 = v2 < 0x1C && v2 != 5;
  if (a2 && !v5)
  {
    if (v2 <= 0x1B)
      v3 = *(unsigned __int16 *)(a2 + 18);
    if (v3 == 38)
    {
      v6 = *(_DWORD *)(a2 + 20);
      if ((v6 & 0x40000000) != 0)
        v7 = *(uint64_t **)(a2 - 8);
      else
        v7 = (uint64_t *)(a2 - 32 * (v6 & 0x7FFFFFF));
      v8 = *v7;
      v9 = *(unsigned __int8 *)(v8 + 16);
      if (v9 == 5)
      {
        if (*(_WORD *)(v8 + 18) == 26)
        {
          v15 = *(_QWORD *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF));
          if (v15)
          {
            **a1 = v15;
            v16 = *(_QWORD *)(v8 - 32 * (*(_DWORD *)(v8 + 20) & 0x7FFFFFF) + 32);
            if (v16 && *(unsigned __int8 *)(v16 + 16) >= 0x1Cu)
              *a1[1] = v16;
          }
        }
      }
      else if (v9 == 54)
      {
        v10 = *(_QWORD *)(v8 - 64);
        if (v10)
        {
          **a1 = v10;
          v11 = *(_QWORD *)(v8 - 32);
          if (v11 && *(unsigned __int8 *)(v11 + 16) >= 0x1Cu)
          {
            *a1[1] = v11;
            v13 = a1 + 2;
            v14 = 1;
LABEL_46:
            **v13 = v8;
            return v14;
          }
        }
      }
    }
  }
  if (v2 == 5)
  {
    if (*(_WORD *)(a2 + 18) == 26)
    {
      v14 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      if (!v14)
        return v14;
      *a1[3] = v14;
      v8 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
      if (v8)
        v20 = *(unsigned __int8 *)(v8 + 16) >= 0x1Cu;
      else
        v20 = 0;
      if (v20)
      {
        v14 = 0;
        v13 = a1 + 4;
        goto LABEL_46;
      }
    }
    return 0;
  }
  if (v2 != 54)
    return 0;
  v18 = *(_QWORD *)(a2 - 64);
  if (!v18)
    return 0;
  v14 = 0;
  *a1[3] = v18;
  v19 = *(_QWORD *)(a2 - 32);
  if (v19 && *(unsigned __int8 *)(v19 + 16) >= 0x1Cu)
  {
    *a1[4] = v19;
    v13 = a1 + 5;
    v14 = 1;
    v8 = a2;
    goto LABEL_46;
  }
  return v14;
}

void sub_1C57A1A3C(uint64_t a1, llvm::Constant *this)
{
  llvm::APFloatBase *SplatValue;
  uint64_t v5;
  BOOL v6;
  int v7;
  llvm::Type *v8;
  llvm::UndefValue *AggregateElement;
  int v10;
  int v11;

  if (this && *((_BYTE *)this + 16) == 16)
  {
    SplatValue = this;
LABEL_4:
    llvm::ICmpInst::compare((uint64_t)SplatValue + 24, *(_QWORD *)(a1 + 8), *(_DWORD *)a1);
    return;
  }
  v5 = *(_QWORD *)this;
  if (*(_QWORD *)this)
    v6 = (*(_DWORD *)(*(_QWORD *)this + 8) & 0xFE) == 18;
  else
    v6 = 0;
  if (v6)
  {
    SplatValue = llvm::Constant::getSplatValue(this, 0);
    if (SplatValue && *((_BYTE *)SplatValue + 16) == 16)
      goto LABEL_4;
    if (*(_BYTE *)(v5 + 8) == 18)
    {
      v7 = *(_DWORD *)(v5 + 32);
      if (v7)
      {
        v8 = 0;
        do
        {
          AggregateElement = llvm::Constant::getAggregateElement(this, v8);
          if (!AggregateElement)
            break;
          v10 = *((unsigned __int8 *)AggregateElement + 16);
          if ((v10 - 11) >= 2)
          {
            if (v10 != 16)
              break;
            llvm::ICmpInst::compare((uint64_t)AggregateElement + 24, *(_QWORD *)(a1 + 8), *(_DWORD *)a1);
            if (!v11)
              break;
          }
          v8 = (llvm::Type *)((_DWORD)v8 + 1);
        }
        while (v7 != (_DWORD)v8);
      }
    }
  }
}

llvm::APFloatBase *sub_1C57A1B48(uint64_t a1, uint64_t a2)
{
  llvm::APFloatBase *result;

  result = 0;
  if (a2 && *(_BYTE *)(a2 + 16) == 81)
  {
    if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 - 64))
    {
      result = sub_1C4D89F84(a1 + 16, *(unsigned __int8 **)(a2 - 32));
      if ((_DWORD)result)
      {
        **(_DWORD **)a1 = *(_WORD *)(a2 + 18) & 0x3F;
        return (llvm::APFloatBase *)1;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C57A1BB8(_QWORD *a1, uint64_t a2)
{
  _BOOL4 v2;
  unsigned int v3;
  unsigned int v4;
  BOOL v6;
  int v7;
  int v8;
  _QWORD *v9;

  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = v3 - 28;
  v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  v7 = v6;
  if (!v6)
  {
    if (v3 <= 0x1B)
      v4 = *(unsigned __int16 *)(a2 + 18);
    if (v4 == 39)
    {
      v8 = *(_DWORD *)(a2 + 20);
      if ((v8 & 0x40000000) != 0)
        v9 = *(_QWORD **)(a2 - 8);
      else
        v9 = (_QWORD *)(a2 - 32 * (v8 & 0x7FFFFFF));
      v2 = *a1 == *v9;
    }
    else
    {
      v2 = 0;
    }
  }
  return (v7 ^ 1) & v2;
}

BOOL sub_1C57A1C20(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t v5;

  result = sub_1C4E75A6C(a1, a2);
  if (result)
  {
    result = 0;
    if (a2)
    {
      if (*(_BYTE *)(a2 + 16) == 84)
      {
        v5 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 24));
        if (v5)
        {
          **(_QWORD **)(a1 + 32) = v5;
          return 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C57A1C8C(_QWORD **a1, int a2, uint64_t a3)
{
  int v5;
  char v6;
  _BOOL4 v7;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;

  v5 = *(unsigned __int8 *)(a3 + 16);
  v6 = a2 + 28;
  if (a2 + 28 == v5)
  {
    v7 = sub_1C4E7B6EC(a1, *(_QWORD *)(a3 - 64));
    v8 = *(_QWORD *)(a3 - 32);
    if (v7 && v8)
    {
      *a1[1] = v8;
      return 1;
    }
    result = sub_1C4E7B6EC(a1, v8);
    if (result)
    {
      v12 = *(_QWORD *)(a3 - 64);
      if (v12)
      {
        *a1[1] = v12;
        return 1;
      }
      return 0;
    }
  }
  else
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) == a2
        && ((v9 = sub_1C4E7B6EC(a1, *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF))),
             v10 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32),
             v9)
         && v10
         || sub_1C4E7B6EC(a1, v10) && (v10 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF))) != 0))
      {
        *a1[1] = v10;
        v6 = 1;
      }
      else
      {
        v6 = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  return result;
}

BOOL sub_1C57A1D98(_QWORD **a1, int a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) != a2)
        goto LABEL_20;
      v13 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
      v14 = -v13;
      v15 = *(_QWORD *)(a3 - 32 * v13);
      v16 = *(_QWORD *)(v15 + 8);
      if (v16)
      {
        if (!*(_QWORD *)(v16 + 8))
        {
          v17 = sub_1C57A1EF4(a1, v15, v14);
          v14 = -(uint64_t)(*(_DWORD *)(a3 + 20) & 0x7FFFFFF);
          if (v17)
          {
            v18 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
            if (v18)
              goto LABEL_19;
          }
        }
      }
      v19 = *(_QWORD *)(a3 + 32 * v14 + 32);
      v6 = *(_QWORD *)(v19 + 8);
      if (v6)
      {
        if (!*(_QWORD *)(v6 + 8) && sub_1C57A1EF4(a1, v19, 0))
        {
          v18 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
          if (v18)
          {
LABEL_19:
            *a1[2] = v18;
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
        }
LABEL_20:
        LOBYTE(v6) = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  v7 = *(_QWORD *)(a3 - 64);
  v8 = *(_QWORD *)(v7 + 8);
  if (v8)
  {
    if (!*(_QWORD *)(v8 + 8) && sub_1C57A1C8C(a1, 18, v7))
    {
      v9 = *(_QWORD *)(a3 - 32);
      if (v9)
      {
LABEL_25:
        *a1[2] = v9;
        return 1;
      }
    }
  }
  v10 = *(_QWORD *)(a3 - 32);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_QWORD *)(v11 + 8))
    return 0;
  result = sub_1C57A1C8C(a1, 18, v10);
  if (result)
  {
    v9 = *(_QWORD *)(a3 - 64);
    if (!v9)
      return 0;
    goto LABEL_25;
  }
  return result;
}

BOOL sub_1C57A1EF4@<W0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  int v5;
  _BOOL4 v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;

  v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 46)
  {
    v6 = sub_1C4E7B6EC(a1, *(_QWORD *)(a2 - 64));
    v7 = *(_QWORD *)(a2 - 32);
    if (v6 && v7)
    {
      *a1[1] = v7;
      return 1;
    }
    result = sub_1C4E7B6EC(a1, v7);
    if (result)
    {
      v11 = *(_QWORD *)(a2 - 64);
      if (v11)
      {
        *a1[1] = v11;
        return 1;
      }
      return 0;
    }
  }
  else
  {
    if (v5 == 5)
    {
      if (*(_WORD *)(a2 + 18) == 18
        && ((v8 = sub_1C4E7B6EC(a1, *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF))),
             v9 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32),
             v8)
         && v9
         || sub_1C4E7B6EC(a1, v9) && (v9 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF))) != 0))
      {
        *a1[1] = v9;
        a3 = 1;
      }
      else
      {
        a3 = 0;
      }
    }
    return (v5 == 5) & a3;
  }
  return result;
}

BOOL sub_1C57A1FFC(_QWORD **a1, int a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;

  v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 != 5)
      return (v5 == 5) & v6;
    if (*(unsigned __int16 *)(a3 + 18) != a2)
    {
LABEL_13:
      LOBYTE(v6) = 0;
      return (v5 == 5) & v6;
    }
    v12 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    v13 = *(_QWORD *)(v12 + 8);
    if (v13 && !*(_QWORD *)(v13 + 8))
    {
      v20 = *(unsigned __int8 *)(v12 + 16);
      if (v20 == 5)
      {
        if (*(_WORD *)(v12 + 18) != 21)
          goto LABEL_11;
        if (!sub_1C4E7B6EC(a1, *(_QWORD *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF))))
          goto LABEL_11;
        v21 = *(_QWORD *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32);
        if (!v21)
          goto LABEL_11;
      }
      else
      {
        if (v20 != 49)
          goto LABEL_11;
        if (!sub_1C4E7B6EC(a1, *(_QWORD *)(v12 - 64)))
          goto LABEL_11;
        v21 = *(_QWORD *)(v12 - 32);
        if (!v21)
          goto LABEL_11;
      }
      *a1[1] = v21;
      v6 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
      if (v6)
        goto LABEL_55;
    }
LABEL_11:
    v14 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    v6 = *(_QWORD *)(v14 + 8);
    if (v6)
    {
      if (*(_QWORD *)(v6 + 8))
        goto LABEL_13;
      v22 = *(unsigned __int8 *)(v14 + 16);
      if (v22 == 5)
      {
        if (*(_WORD *)(v14 + 18) != 21
          || !sub_1C4E7B6EC(a1, *(_QWORD *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF))))
        {
          goto LABEL_13;
        }
        v6 = *(_QWORD *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32);
        if (!v6)
          return (v5 == 5) & v6;
      }
      else
      {
        if (v22 != 49 || !sub_1C4E7B6EC(a1, *(_QWORD *)(v14 - 64)))
          goto LABEL_13;
        v6 = *(_QWORD *)(v14 - 32);
        if (!v6)
          return (v5 == 5) & v6;
      }
      *a1[1] = v6;
      v6 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
      if (!v6)
        return (v5 == 5) & v6;
LABEL_55:
      *a1[2] = v6;
      LOBYTE(v6) = 1;
    }
    return (v5 == 5) & v6;
  }
  v7 = *(_QWORD *)(a3 - 64);
  v8 = *(_QWORD *)(v7 + 8);
  if (v8 && !*(_QWORD *)(v8 + 8))
  {
    v15 = *(unsigned __int8 *)(v7 + 16);
    if (v15 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 21)
        goto LABEL_4;
      if (!sub_1C4E7B6EC(a1, *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF))))
        goto LABEL_4;
      v16 = *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
      if (!v16)
        goto LABEL_4;
    }
    else
    {
      if (v15 != 49)
        goto LABEL_4;
      if (!sub_1C4E7B6EC(a1, *(_QWORD *)(v7 - 64)))
        goto LABEL_4;
      v16 = *(_QWORD *)(v7 - 32);
      if (!v16)
        goto LABEL_4;
    }
    *a1[1] = v16;
    v19 = *(_QWORD *)(a3 - 32);
    if (v19)
    {
LABEL_35:
      *a1[2] = v19;
      return 1;
    }
  }
LABEL_4:
  v9 = *(_QWORD *)(a3 - 32);
  v10 = *(_QWORD *)(v9 + 8);
  if (!v10 || *(_QWORD *)(v10 + 8))
    return 0;
  v17 = *(unsigned __int8 *)(v9 + 16);
  if (v17 == 5)
  {
    if (*(_WORD *)(v9 + 18) != 21)
      return 0;
    result = sub_1C4E7B6EC(a1, *(_QWORD *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF)));
    if (result)
    {
      v18 = *(_QWORD *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF) + 32);
      if (!v18)
        return 0;
      goto LABEL_34;
    }
  }
  else
  {
    if (v17 != 49)
      return 0;
    result = sub_1C4E7B6EC(a1, *(_QWORD *)(v9 - 64));
    if (result)
    {
      v18 = *(_QWORD *)(v9 - 32);
      if (!v18)
        return 0;
LABEL_34:
      *a1[1] = v18;
      v19 = *(_QWORD *)(a3 - 64);
      if (v19)
        goto LABEL_35;
      return 0;
    }
  }
  return result;
}

BOOL sub_1C57A22F8(_QWORD **a1, int a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 != 5)
      return (v5 == 5) & v6;
    if (*(unsigned __int16 *)(a3 + 18) != a2)
      goto LABEL_13;
    v12 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    v13 = *(_QWORD *)(v12 + 8);
    if (v13 && !*(_QWORD *)(v13 + 8))
    {
      v23 = *(unsigned __int8 *)(v12 + 16);
      if (v23 == 5)
      {
        if (*(_WORD *)(v12 + 18) != 21)
          goto LABEL_11;
        v27 = *(_QWORD *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF));
        if (!v27)
          goto LABEL_11;
        **a1 = v27;
        if (!sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32)))
          goto LABEL_11;
      }
      else
      {
        if (v23 != 49)
          goto LABEL_11;
        v24 = *(_QWORD *)(v12 - 64);
        if (!v24)
          goto LABEL_11;
        **a1 = v24;
        if (!sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v12 - 32)))
          goto LABEL_11;
      }
      v6 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
      if (v6)
        goto LABEL_55;
    }
LABEL_11:
    v14 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    v15 = *(_QWORD *)(v14 + 8);
    if (!v15 || *(_QWORD *)(v15 + 8))
      goto LABEL_13;
    v25 = *(unsigned __int8 *)(v14 + 16);
    if (v25 == 5)
    {
      if (*(_WORD *)(v14 + 18) == 21)
      {
        v28 = *(_QWORD *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF));
        if (v28)
        {
          **a1 = v28;
          if (sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v14 - 32 * (*(_DWORD *)(v14 + 20) & 0x7FFFFFF) + 32)))
          {
LABEL_54:
            v6 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
            if (!v6)
              return (v5 == 5) & v6;
LABEL_55:
            *a1[2] = v6;
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
        }
      }
    }
    else if (v25 == 49)
    {
      v26 = *(_QWORD *)(v14 - 64);
      if (v26)
      {
        **a1 = v26;
        if (sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v14 - 32)))
          goto LABEL_54;
      }
    }
LABEL_13:
    LOBYTE(v6) = 0;
    return (v5 == 5) & v6;
  }
  v7 = *(_QWORD *)(a3 - 64);
  v8 = *(_QWORD *)(v7 + 8);
  if (!v8 || *(_QWORD *)(v8 + 8))
    goto LABEL_4;
  v16 = *(unsigned __int8 *)(v7 + 16);
  if (v16 == 5)
  {
    if (*(_WORD *)(v7 + 18) == 21)
    {
      v20 = *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      if (v20)
      {
        **a1 = v20;
        if (sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32)))
        {
LABEL_29:
          v21 = *(_QWORD *)(a3 - 32);
          if (v21)
          {
LABEL_35:
            *a1[2] = v21;
            return 1;
          }
        }
      }
    }
  }
  else if (v16 == 49)
  {
    v17 = *(_QWORD *)(v7 - 64);
    if (v17)
    {
      **a1 = v17;
      if (sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v7 - 32)))
        goto LABEL_29;
    }
  }
LABEL_4:
  v9 = *(_QWORD *)(a3 - 32);
  v10 = *(_QWORD *)(v9 + 8);
  if (!v10 || *(_QWORD *)(v10 + 8))
    return 0;
  v18 = *(unsigned __int8 *)(v9 + 16);
  if (v18 != 5)
  {
    if (v18 != 49)
      return 0;
    v19 = *(_QWORD *)(v9 - 64);
    if (!v19)
      return 0;
    **a1 = v19;
    if (!sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v9 - 32)))
      return 0;
    goto LABEL_34;
  }
  if (*(_WORD *)(v9 + 18) != 21)
    return 0;
  v22 = *(_QWORD *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF));
  if (!v22)
    return 0;
  **a1 = v22;
  result = sub_1C4E7B6EC(a1 + 1, *(_QWORD *)(v9 - 32 * (*(_DWORD *)(v9 + 20) & 0x7FFFFFF) + 32));
  if (result)
  {
LABEL_34:
    v21 = *(_QWORD *)(a3 - 64);
    if (v21)
      goto LABEL_35;
    return 0;
  }
  return result;
}

BOOL sub_1C57A2614(uint64_t a1, int a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v6) = a2 + 28;
  if (a2 + 28 != v5)
  {
    if (v5 == 5)
    {
      if (*(unsigned __int16 *)(a3 + 18) != a2)
        goto LABEL_20;
      v13 = *(_DWORD *)(a3 + 20) & 0x7FFFFFF;
      v14 = -v13;
      v15 = *(_QWORD *)(a3 - 32 * v13);
      v16 = *(_QWORD *)(v15 + 8);
      if (v16)
      {
        if (!*(_QWORD *)(v16 + 8))
        {
          v17 = sub_1C57A2768(a1, v15);
          v14 = -(uint64_t)(*(_DWORD *)(a3 + 20) & 0x7FFFFFF);
          if (v17)
          {
            v18 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
            if (v18)
              goto LABEL_19;
          }
        }
      }
      v19 = *(_QWORD *)(a3 + 32 * v14 + 32);
      v6 = *(_QWORD *)(v19 + 8);
      if (v6)
      {
        if (!*(_QWORD *)(v6 + 8) && sub_1C57A2768(a1, v19))
        {
          v18 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
          if (v18)
          {
LABEL_19:
            **(_QWORD **)(a1 + 32) = v18;
            LOBYTE(v6) = 1;
            return (v5 == 5) & v6;
          }
        }
LABEL_20:
        LOBYTE(v6) = 0;
      }
    }
    return (v5 == 5) & v6;
  }
  v7 = *(_QWORD *)(a3 - 64);
  v8 = *(_QWORD *)(v7 + 8);
  if (v8)
  {
    if (!*(_QWORD *)(v8 + 8) && sub_1C57A2768(a1, v7))
    {
      v9 = *(_QWORD *)(a3 - 32);
      if (v9)
      {
LABEL_25:
        **(_QWORD **)(a1 + 32) = v9;
        return 1;
      }
    }
  }
  v10 = *(_QWORD *)(a3 - 32);
  v11 = *(_QWORD *)(v10 + 8);
  if (!v11 || *(_QWORD *)(v11 + 8))
    return 0;
  result = sub_1C57A2768(a1, v10);
  if (result)
  {
    v9 = *(_QWORD *)(a3 - 64);
    if (!v9)
      return 0;
    goto LABEL_25;
  }
  return result;
}

BOOL sub_1C57A2768(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t v5;

  result = sub_1C4D9B530((_DWORD *)a1, a2);
  if (result)
  {
    result = 0;
    if (a2)
    {
      if (*(_BYTE *)(a2 + 16) == 84)
      {
        result = sub_1C4E5C310(a1 + 8, *(llvm::Constant **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32* *(unsigned int *)(a1 + 4)));
        if (result)
        {
          if (*(_BYTE *)(a2 + 16) == 84
            && (v5 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 16))) != 0)
          {
            **(_QWORD **)(a1 + 24) = v5;
            return 1;
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1C57A2804(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t v5;

  result = sub_1C57A2870((_DWORD *)a1, a2);
  if (result)
  {
    result = 0;
    if (a2)
    {
      if (*(_BYTE *)(a2 + 16) == 84)
      {
        v5 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 32));
        if (v5)
        {
          **(_QWORD **)(a1 + 40) = v5;
          return 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C57A2870(_DWORD *a1, uint64_t a2)
{
  return sub_1C4D9B530(a1, a2)
      && a2
      && *(_BYTE *)(a2 + 16) == 84
      && (sub_1C4E7A604((uint64_t)(a1 + 4), *(unsigned __int8 **)(a2- 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF)+ 32 * a1[2])) & 1) != 0;
}

uint64_t sub_1C57A28D8(_QWORD **a1, int a2, uint64_t a3)
{
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v35;
  uint64_t v36;

  v3 = *(unsigned __int8 *)(a3 + 16);
  if (a2 + 28 != v3)
  {
    if (v3 != 5 || *(unsigned __int16 *)(a3 + 18) != a2)
      return 0;
    v11 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    v12 = *(unsigned __int8 *)(v11 + 16);
    if (v12 == 5)
    {
      if (*(_WORD *)(v11 + 18) != 18)
        goto LABEL_46;
      v27 = *(_QWORD *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      if (!v27)
        goto LABEL_46;
      **a1 = v27;
      v28 = *(_QWORD *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF) + 32);
      if (!v28)
        goto LABEL_46;
      *a1[1] = v28;
      if (*(_BYTE *)(v28 + 16) == 5)
        goto LABEL_46;
    }
    else
    {
      if (v12 != 46)
        goto LABEL_46;
      v13 = *(_QWORD *)(v11 - 64);
      if (!v13)
        goto LABEL_46;
      **a1 = v13;
      v14 = *(_QWORD *)(v11 - 32);
      v15 = *(unsigned __int8 *)(v14 + 16);
      if (!v14 || v15 > 0x14)
        goto LABEL_46;
      *a1[1] = v14;
      if (v15 == 5)
        goto LABEL_46;
    }
    if (*a1[3] == *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32))
      return 1;
LABEL_46:
    v29 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    v30 = *(unsigned __int8 *)(v29 + 16);
    if (v30 == 5)
    {
      if (*(_WORD *)(v29 + 18) != 18)
        return 0;
      v35 = *(_QWORD *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF));
      if (!v35)
        return 0;
      **a1 = v35;
      v36 = *(_QWORD *)(v29 - 32 * (*(_DWORD *)(v29 + 20) & 0x7FFFFFF) + 32);
      if (!v36)
        return 0;
      *a1[1] = v36;
      if (*(_BYTE *)(v36 + 16) == 5)
        return 0;
    }
    else
    {
      if (v30 != 46)
        return 0;
      v31 = *(_QWORD *)(v29 - 64);
      if (!v31)
        return 0;
      **a1 = v31;
      v32 = *(_QWORD *)(v29 - 32);
      v33 = *(unsigned __int8 *)(v32 + 16);
      if (!v32 || v33 > 0x14)
        return 0;
      *a1[1] = v32;
      if (v33 == 5)
        return 0;
    }
    v4 = (_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    return *a1[3] == *v4;
  }
  v4 = (_QWORD *)(a3 - 64);
  v5 = *(_QWORD *)(a3 - 64);
  v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 5)
  {
    if (*(_WORD *)(v5 + 18) != 18)
      goto LABEL_27;
    v17 = *(_QWORD *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
    if (!v17)
      goto LABEL_27;
    **a1 = v17;
    v18 = *(_QWORD *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32);
    if (!v18)
      goto LABEL_27;
    *a1[1] = v18;
    if (*(_BYTE *)(v18 + 16) == 5)
      goto LABEL_27;
  }
  else
  {
    if (v6 != 46)
      goto LABEL_27;
    v7 = *(_QWORD *)(v5 - 64);
    if (!v7)
      goto LABEL_27;
    **a1 = v7;
    v8 = *(_QWORD *)(v5 - 32);
    v9 = *(unsigned __int8 *)(v8 + 16);
    if (!v8 || v9 > 0x14)
      goto LABEL_27;
    *a1[1] = v8;
    if (v9 == 5)
      goto LABEL_27;
  }
  if (*a1[3] == *(_QWORD *)(a3 - 32))
    return 1;
LABEL_27:
  v19 = *(_QWORD *)(a3 - 32);
  v20 = *(unsigned __int8 *)(v19 + 16);
  if (v20 != 5)
  {
    if (v20 == 46)
    {
      v21 = *(_QWORD *)(v19 - 64);
      if (v21)
      {
        **a1 = v21;
        v22 = *(_QWORD *)(v19 - 32);
        v23 = *(unsigned __int8 *)(v22 + 16);
        if (v22 && v23 <= 0x14)
        {
          *a1[1] = v22;
          if (v23 != 5)
            return *a1[3] == *v4;
        }
      }
    }
    return 0;
  }
  if (*(_WORD *)(v19 + 18) != 18)
    return 0;
  v25 = *(_QWORD *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
  if (!v25)
    return 0;
  **a1 = v25;
  v26 = *(_QWORD *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF) + 32);
  if (!v26)
    return 0;
  *a1[1] = v26;
  if (*(_BYTE *)(v26 + 16) == 5)
    return 0;
  return *a1[3] == *v4;
}

unint64_t sub_1C57A2C04(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;

  if (*(_BYTE *)(a1 + 16) == 84
    && (v1 = *(_QWORD *)(a1 - 32)) != 0
    && !*(_BYTE *)(v1 + 16)
    && *(_QWORD *)(v1 + 24) == *(_QWORD *)(a1 + 72)
    && (*(_BYTE *)(v1 + 33) & 0x20) != 0
    && (v2 = *(_DWORD *)(v1 + 36) - 274, v2 <= 0x20))
  {
    return (0x180000003uLL >> v2) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1C57A2C64(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v15;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v9 = *(_QWORD *)(a2 - 96);
    if (!v9 || *(_BYTE *)(v9 + 16) != 81)
      return v3;
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v12 = *(_QWORD *)(v9 - 64);
    v6 = *(_QWORD *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12))
      return 0;
    v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 38)
        return 0;
    }
    else if (v15 != 40)
    {
      return 0;
    }
    if (*(_QWORD *)a1 == v12 && v6 != 0)
      goto LABEL_43;
    v3 = 0;
    if (v12)
    {
      v7 = *(_QWORD *)a1 == v6;
      v6 = v12;
      if (v7)
        goto LABEL_43;
    }
    return v3;
  }
  if (v2 != 84)
    return 0;
  v3 = *(_QWORD *)(a2 - 32);
  if (v3)
  {
    if (*(_BYTE *)(v3 + 16)
      || *(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 274)
    {
      return 0;
    }
    v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v5 = *v4;
    v6 = v4[4];
    v7 = *(_QWORD *)a1 != v5 || v6 == 0;
    if (v7)
    {
      v8 = v5 && *(_QWORD *)a1 == v6;
      v6 = v5;
      if (!v8)
        return 0;
    }
LABEL_43:
    **(_QWORD **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1C57A2D84(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v15;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v9 = *(_QWORD *)(a2 - 96);
    if (!v9 || *(_BYTE *)(v9 + 16) != 81)
      return v3;
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v12 = *(_QWORD *)(v9 - 64);
    v6 = *(_QWORD *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12))
      return 0;
    v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 40)
        return 0;
    }
    else if (v15 != 38)
    {
      return 0;
    }
    if (*(_QWORD *)a1 == v12 && v6 != 0)
      goto LABEL_43;
    v3 = 0;
    if (v12)
    {
      v7 = *(_QWORD *)a1 == v6;
      v6 = v12;
      if (v7)
        goto LABEL_43;
    }
    return v3;
  }
  if (v2 != 84)
    return 0;
  v3 = *(_QWORD *)(a2 - 32);
  if (v3)
  {
    if (*(_BYTE *)(v3 + 16)
      || *(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 275)
    {
      return 0;
    }
    v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v5 = *v4;
    v6 = v4[4];
    v7 = *(_QWORD *)a1 != v5 || v6 == 0;
    if (v7)
    {
      v8 = v5 && *(_QWORD *)a1 == v6;
      v6 = v5;
      if (!v8)
        return 0;
    }
LABEL_43:
    **(_QWORD **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1C57A2EA4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v15;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v9 = *(_QWORD *)(a2 - 96);
    if (!v9 || *(_BYTE *)(v9 + 16) != 81)
      return v3;
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v12 = *(_QWORD *)(v9 - 64);
    v6 = *(_QWORD *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12))
      return 0;
    v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 34)
        return 0;
    }
    else if (v15 != 36)
    {
      return 0;
    }
    if (*(_QWORD *)a1 == v12 && v6 != 0)
      goto LABEL_43;
    v3 = 0;
    if (v12)
    {
      v7 = *(_QWORD *)a1 == v6;
      v6 = v12;
      if (v7)
        goto LABEL_43;
    }
    return v3;
  }
  if (v2 != 84)
    return 0;
  v3 = *(_QWORD *)(a2 - 32);
  if (v3)
  {
    if (*(_BYTE *)(v3 + 16)
      || *(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 305)
    {
      return 0;
    }
    v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v5 = *v4;
    v6 = v4[4];
    v7 = *(_QWORD *)a1 != v5 || v6 == 0;
    if (v7)
    {
      v8 = v5 && *(_QWORD *)a1 == v6;
      v6 = v5;
      if (!v8)
        return 0;
    }
LABEL_43:
    **(_QWORD **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1C57A2FC4(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v15;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v9 = *(_QWORD *)(a2 - 96);
    if (!v9 || *(_BYTE *)(v9 + 16) != 81)
      return v3;
    v10 = *(_QWORD *)(a2 - 64);
    v11 = *(_QWORD *)(a2 - 32);
    v12 = *(_QWORD *)(v9 - 64);
    v6 = *(_QWORD *)(v9 - 32);
    if ((v10 != v12 || v11 != v6) && (v10 != v6 || v11 != v12))
      return 0;
    v15 = *(_WORD *)(v9 + 18) & 0x3E;
    if (v10 == v12)
    {
      if (v15 != 36)
        return 0;
    }
    else if (v15 != 34)
    {
      return 0;
    }
    if (*(_QWORD *)a1 == v12 && v6 != 0)
      goto LABEL_43;
    v3 = 0;
    if (v12)
    {
      v7 = *(_QWORD *)a1 == v6;
      v6 = v12;
      if (v7)
        goto LABEL_43;
    }
    return v3;
  }
  if (v2 != 84)
    return 0;
  v3 = *(_QWORD *)(a2 - 32);
  if (v3)
  {
    if (*(_BYTE *)(v3 + 16)
      || *(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72)
      || (*(_BYTE *)(v3 + 33) & 0x20) == 0
      || *(_DWORD *)(v3 + 36) != 306)
    {
      return 0;
    }
    v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
    v5 = *v4;
    v6 = v4[4];
    v7 = *(_QWORD *)a1 != v5 || v6 == 0;
    if (v7)
    {
      v8 = v5 && *(_QWORD *)a1 == v6;
      v6 = v5;
      if (!v8)
        return 0;
    }
LABEL_43:
    **(_QWORD **)(a1 + 8) = v6;
    return 1;
  }
  return v3;
}

uint64_t sub_1C57A30E4@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  BOOL v6;
  int v7;
  int v8;
  uint64_t *v9;

  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = v3 - 28;
  v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  v7 = v6;
  if (!v6)
  {
    if (v3 <= 0x1B)
      v4 = *(unsigned __int16 *)(a2 + 18);
    if (v4 == 38)
    {
      v8 = *(_DWORD *)(a2 + 20);
      if ((v8 & 0x40000000) != 0)
        v9 = *(uint64_t **)(a2 - 8);
      else
        v9 = (uint64_t *)(a2 - 32 * (v8 & 0x7FFFFFF));
      a3 = sub_1C4E714F4(a1, *v9);
    }
    else
    {
      a3 = 0;
    }
  }
  return (v7 ^ 1) & a3;
}

BOOL sub_1C57A315C(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t v5;

  result = sub_1C4E7AEB4(a1, a2);
  if (result)
  {
    result = 0;
    if (a2)
    {
      if (*(_BYTE *)(a2 + 16) == 84)
      {
        v5 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32 * *(unsigned int *)(a1 + 24));
        if (v5)
        {
          **(_QWORD **)(a1 + 32) = v5;
          return 1;
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

BOOL sub_1C57A31C8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v12;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v7 = *(_QWORD *)(a2 - 96);
    if (v7 && *(_BYTE *)(v7 + 16) == 81)
    {
      v8 = *(_QWORD *)(a2 - 64);
      v9 = *(_QWORD *)(a2 - 32);
      v5 = *(_QWORD *)(v7 - 64);
      v6 = *(_QWORD *)(v7 - 32);
      if ((v8 != v5 || v9 != v6) && (v8 != v6 || v9 != v5))
        return 0;
      v12 = *(_WORD *)(v7 + 18) & 0x3E;
      if (v8 == v5)
      {
        if (v12 != 34)
          return 0;
      }
      else if (v12 != 36)
      {
        return 0;
      }
      if (!v5)
        goto LABEL_27;
LABEL_26:
      **(_QWORD **)a1 = v5;
      if (*(_QWORD *)(a1 + 8) == v6)
        return 1;
LABEL_27:
      if (v6)
      {
        **(_QWORD **)a1 = v6;
        return *(_QWORD *)(a1 + 8) == v5;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 84)
      return 0;
    v3 = *(_QWORD *)(a2 - 32);
    if (v3)
    {
      if (*(_BYTE *)(v3 + 16)
        || *(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72)
        || (*(_BYTE *)(v3 + 33) & 0x20) == 0
        || *(_DWORD *)(v3 + 36) != 305)
      {
        return 0;
      }
      v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      v5 = *v4;
      v6 = v4[4];
      if (!v5)
        goto LABEL_27;
      goto LABEL_26;
    }
  }
  return v3;
}

BOOL sub_1C57A32D8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v12;

  v2 = *(unsigned __int8 *)(a2 + 16);
  if (v2 == 85)
  {
    v3 = 0;
    v7 = *(_QWORD *)(a2 - 96);
    if (v7 && *(_BYTE *)(v7 + 16) == 81)
    {
      v8 = *(_QWORD *)(a2 - 64);
      v9 = *(_QWORD *)(a2 - 32);
      v5 = *(_QWORD *)(v7 - 64);
      v6 = *(_QWORD *)(v7 - 32);
      if ((v8 != v5 || v9 != v6) && (v8 != v6 || v9 != v5))
        return 0;
      v12 = *(_WORD *)(v7 + 18) & 0x3E;
      if (v8 == v5)
      {
        if (v12 != 36)
          return 0;
      }
      else if (v12 != 34)
      {
        return 0;
      }
      if (!v5)
        goto LABEL_27;
LABEL_26:
      **(_QWORD **)a1 = v5;
      if (*(_QWORD *)(a1 + 8) == v6)
        return 1;
LABEL_27:
      if (v6)
      {
        **(_QWORD **)a1 = v6;
        return *(_QWORD *)(a1 + 8) == v5;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 84)
      return 0;
    v3 = *(_QWORD *)(a2 - 32);
    if (v3)
    {
      if (*(_BYTE *)(v3 + 16)
        || *(_QWORD *)(v3 + 24) != *(_QWORD *)(a2 + 72)
        || (*(_BYTE *)(v3 + 33) & 0x20) == 0
        || *(_DWORD *)(v3 + 36) != 306)
      {
        return 0;
      }
      v4 = (uint64_t *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      v5 = *v4;
      v6 = v4[4];
      if (!v5)
        goto LABEL_27;
      goto LABEL_26;
    }
  }
  return v3;
}

uint64_t sub_1C57A33E8@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, _BOOL4 a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  BOOL v6;
  int v7;
  int v8;
  uint64_t *v9;

  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = v3 - 28;
  v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  v7 = v6;
  if (!v6)
  {
    if (v3 <= 0x1B)
      v4 = *(unsigned __int16 *)(a2 + 18);
    if (v4 == 45)
    {
      v8 = *(_DWORD *)(a2 + 20);
      if ((v8 & 0x40000000) != 0)
        v9 = *(uint64_t **)(a2 - 8);
      else
        v9 = (uint64_t *)(a2 - 32 * (v8 & 0x7FFFFFF));
      a3 = sub_1C4E7B6EC(a1, *v9);
    }
    else
    {
      a3 = 0;
    }
  }
  return (v7 ^ 1) & a3;
}

uint64_t sub_1C57A3460@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, _BOOL4 a3@<W8>)
{
  unsigned int v3;
  unsigned int v4;
  BOOL v6;
  int v7;
  int v8;
  uint64_t *v9;

  v3 = *(unsigned __int8 *)(a2 + 16);
  v4 = v3 - 28;
  v6 = v3 < 0x1C && v3 != 5 || a2 == 0;
  v7 = v6;
  if (!v6)
  {
    if (v3 <= 0x1B)
      v4 = *(unsigned __int16 *)(a2 + 18);
    if (v4 == 46)
    {
      v8 = *(_DWORD *)(a2 + 20);
      if ((v8 & 0x40000000) != 0)
        v9 = *(uint64_t **)(a2 - 8);
      else
        v9 = (uint64_t *)(a2 - 32 * (v8 & 0x7FFFFFF));
      a3 = sub_1C4E7B6EC(a1, *v9);
    }
    else
    {
      a3 = 0;
    }
  }
  return (v7 ^ 1) & a3;
}

uint64_t sub_1C57A34D8(_QWORD **a1, int a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = *(unsigned __int8 *)(a3 + 16);
  LOBYTE(v4) = a2 + 28;
  if (a2 + 28 != v3)
  {
    if (v3 != 5)
      return (v3 == 5) & v4;
    if (*(unsigned __int16 *)(a3 + 18) != a2)
      goto LABEL_13;
    v10 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
    v11 = *(_QWORD *)(v10 + 8);
    if (v11 && !*(_QWORD *)(v11 + 8))
    {
      v23 = *(unsigned __int8 *)(v10 + 16);
      if (v23 == 5)
      {
        if (*(_WORD *)(v10 + 18) != 16)
          goto LABEL_11;
        v28 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
        if (!v28)
          goto LABEL_11;
        **a1 = v28;
        v25 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
        if (!v25)
          goto LABEL_11;
      }
      else
      {
        if (v23 != 44)
          goto LABEL_11;
        v24 = *(_QWORD *)(v10 - 64);
        if (!v24)
          goto LABEL_11;
        **a1 = v24;
        v25 = *(_QWORD *)(v10 - 32);
        if (!v25)
          goto LABEL_11;
      }
      *a1[1] = v25;
      v4 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
      if (v4)
        goto LABEL_54;
    }
LABEL_11:
    v12 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32);
    v13 = *(_QWORD *)(v12 + 8);
    if (!v13 || *(_QWORD *)(v13 + 8))
      goto LABEL_13;
    v26 = *(unsigned __int8 *)(v12 + 16);
    if (v26 == 5)
    {
      if (*(_WORD *)(v12 + 18) == 16)
      {
        v29 = *(_QWORD *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF));
        if (v29)
        {
          **a1 = v29;
          v4 = *(_QWORD *)(v12 - 32 * (*(_DWORD *)(v12 + 20) & 0x7FFFFFF) + 32);
          if (!v4)
            return (v3 == 5) & v4;
          goto LABEL_53;
        }
      }
    }
    else if (v26 == 44)
    {
      v27 = *(_QWORD *)(v12 - 64);
      if (v27)
      {
        **a1 = v27;
        v4 = *(_QWORD *)(v12 - 32);
        if (!v4)
          return (v3 == 5) & v4;
LABEL_53:
        *a1[1] = v4;
        v4 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF));
        if (!v4)
          return (v3 == 5) & v4;
LABEL_54:
        *a1[2] = v4;
        LOBYTE(v4) = 1;
        return (v3 == 5) & v4;
      }
    }
LABEL_13:
    LOBYTE(v4) = 0;
    return (v3 == 5) & v4;
  }
  v5 = *(_QWORD *)(a3 - 64);
  v6 = *(_QWORD *)(v5 + 8);
  if (!v6 || *(_QWORD *)(v6 + 8))
    goto LABEL_4;
  v14 = *(unsigned __int8 *)(v5 + 16);
  if (v14 == 5)
  {
    if (*(_WORD *)(v5 + 18) != 16)
      goto LABEL_4;
    v20 = *(_QWORD *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF));
    if (!v20)
      goto LABEL_4;
    **a1 = v20;
    v16 = *(_QWORD *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32);
    if (!v16)
      goto LABEL_4;
  }
  else
  {
    if (v14 != 44)
      goto LABEL_4;
    v15 = *(_QWORD *)(v5 - 64);
    if (!v15)
      goto LABEL_4;
    **a1 = v15;
    v16 = *(_QWORD *)(v5 - 32);
    if (!v16)
      goto LABEL_4;
  }
  *a1[1] = v16;
  v21 = *(_QWORD *)(a3 - 32);
  if (!v21)
  {
LABEL_4:
    v7 = *(_QWORD *)(a3 - 32);
    v8 = *(_QWORD *)(v7 + 8);
    if (!v8 || *(_QWORD *)(v8 + 8))
      return 0;
    v17 = *(unsigned __int8 *)(v7 + 16);
    if (v17 == 5)
    {
      if (*(_WORD *)(v7 + 18) != 16)
        return 0;
      v22 = *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF));
      if (!v22)
        return 0;
      **a1 = v22;
      v19 = *(_QWORD *)(v7 - 32 * (*(_DWORD *)(v7 + 20) & 0x7FFFFFF) + 32);
      if (!v19)
        return 0;
    }
    else
    {
      if (v17 != 44)
        return 0;
      v18 = *(_QWORD *)(v7 - 64);
      if (!v18)
        return 0;
      **a1 = v18;
      v19 = *(_QWORD *)(v7 - 32);
      if (!v19)
        return 0;
    }
    *a1[1] = v19;
    v21 = *(_QWORD *)(a3 - 64);
    if (!v21)
      return 0;
  }
  *a1[2] = v21;
  return 1;
}

uint64_t sub_1C57A37B0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v5;
  BOOL v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  llvm::APInt *v14;
  BOOL isAllOnesValue;
  uint64_t *v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  _DWORD *v28;
  char v29;
  unsigned __int8 v30;
  llvm::APInt *v32;
  unsigned int v33;
  char v34;
  unsigned int v35;
  llvm::APInt *v36;
  unint64_t **v37;
  unsigned int v38;
  unint64_t *v39;
  uint64_t v40;
  llvm::APInt *v41;
  unsigned int v42;
  llvm::ConstantInt *v43;
  unsigned int v44;
  void *Zero;
  _DWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  int v51;
  _BYTE v52[32];
  __int16 v53;

  v2 = *(unsigned __int16 *)(a2 + 18);
  if ((v2 & 1) != 0)
    return 0;
  v5 = *(_QWORD *)(a2 - 32);
  if (v5)
    v6 = *(_BYTE *)(v5 + 16) == 17;
  else
    v6 = 0;
  if (!v6)
  {
    switch(v2 >> 4)
    {
      case 0:
        goto LABEL_28;
      case 3:
      case 10:
        v7 = *(_DWORD *)(v5 + 32);
        if (v7 <= 0x40)
        {
          if (*(_QWORD *)(v5 + 24))
            break;
          goto LABEL_28;
        }
        if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v5 + 24)) == v7)
          goto LABEL_28;
        break;
      case 5:
        isAllOnesValue = llvm::Constant::isAllOnesValue((llvm::Constant *)v5);
        v2 = *(unsigned __int16 *)(a2 + 18);
        if (!isAllOnesValue)
          break;
        goto LABEL_28;
      case 7:
        v16 = (uint64_t *)(v5 + 24);
        v17 = *(_DWORD *)(v5 + 32);
        if (v17 <= 0x40)
        {
          v11 = *v16;
          v12 = ~(-1 << (v17 - 1));
          goto LABEL_27;
        }
        v13 = v17 - 1;
        if (((*(_QWORD *)(*v16 + 8 * ((v17 - 1) >> 6)) >> (v17 - 1)) & 1) != 0)
          break;
        v14 = (llvm::APInt *)(v5 + 24);
LABEL_34:
        v19 = llvm::APInt::countTrailingOnesSlowCase(v14);
        goto LABEL_35;
      case 8:
        v9 = (uint64_t *)(v5 + 24);
        v10 = *(_DWORD *)(v5 + 32);
        if (v10 <= 0x40)
        {
          v11 = *v9;
          v12 = 1 << (v10 - 1);
LABEL_27:
          if (v11 != v12)
            break;
          goto LABEL_28;
        }
        v13 = v10 - 1;
        if (((*(_QWORD *)(*v9 + 8 * ((v10 - 1) >> 6)) >> (v10 - 1)) & 1) != 0)
        {
          v19 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)(v5 + 24));
LABEL_35:
          if (v19 == v13)
            goto LABEL_28;
        }
        break;
      case 9:
        v13 = *(_DWORD *)(v5 + 32);
        if (!v13)
          goto LABEL_28;
        v14 = (llvm::APInt *)(v5 + 24);
        if (v13 > 0x40)
          goto LABEL_34;
        v11 = *(_QWORD *)v14;
        v12 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
        goto LABEL_27;
      default:
        break;
    }
LABEL_36:
    v20 = (v2 >> 1) & 7;
    v21 = v2 & 0xF0;
    if ((v2 & 0xF0) == 0 && *(_QWORD *)(a2 + 8) == 0)
    {
      if (v20 == 5 || v20 == 2)
      {
        v28 = operator new(0x80uLL);
        v28[21] = v28[21] & 0x38000000 | 2;
        *(_QWORD *)v28 = 0;
        *((_QWORD *)v28 + 1) = 0;
        *((_QWORD *)v28 + 2) = 0;
        *((_QWORD *)v28 + 3) = v28 + 16;
        *((_QWORD *)v28 + 4) = 0;
        *((_QWORD *)v28 + 5) = 0;
        *((_QWORD *)v28 + 6) = 0;
        *((_QWORD *)v28 + 7) = v28 + 16;
        llvm::StoreInst::StoreInst((llvm::StoreInst *)(v28 + 16), *(llvm::Value **)(a2 - 32), *(llvm::Value **)(a2 - 64), 0, (llvm::Instruction *)a2);
        v29 = *(_BYTE *)(a2 + 60);
        *((_WORD *)v28 + 41) = *((_WORD *)v28 + 41) & 0xFC7F | ((_WORD)v20 << 7);
        *((_BYTE *)v28 + 124) = v29;
        llvm::DataLayout::getAlignment(*(_QWORD *)(a1 + 80), *(_QWORD *)a2);
        *((_WORD *)v28 + 41) = *((_WORD *)v28 + 41) & 0xFF81 | (2 * v30);
        return sub_1C57813F4(a1, a2);
      }
      return 0;
    }
    v23 = *(_QWORD *)(a2 - 32);
    v24 = *(unsigned __int8 *)(v23 + 16);
    if (!v23 || v24 != 17)
    {
      v18 = 0;
      if (!v23 || v24 != 16)
        return v18;
      v18 = 0;
      switch(v2 >> 4)
      {
        case 1:
        case 2:
        case 5:
        case 6:
        case 9:
          v32 = (llvm::APInt *)(v23 + 24);
          v33 = *(_DWORD *)(v23 + 32);
          if (v33 <= 0x40)
          {
            if (*(_QWORD *)v32)
              return 0;
            goto LABEL_81;
          }
          if (llvm::APInt::countLeadingZerosSlowCase(v32) == v33)
            goto LABEL_81;
          return 0;
        case 3:
        case 10:
          v35 = *(_DWORD *)(v23 + 32);
          if (!v35)
            goto LABEL_81;
          v36 = (llvm::APInt *)(v23 + 24);
          if (v35 <= 0x40)
          {
            v18 = 0;
            if (*(_QWORD *)v36 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v35)
              goto LABEL_81;
            return v18;
          }
          if (llvm::APInt::countTrailingOnesSlowCase(v36) != v35)
            return 0;
          goto LABEL_81;
        case 7:
          v37 = (unint64_t **)(v23 + 24);
          v38 = *(_DWORD *)(v23 + 32);
          if (v38 <= 0x40)
          {
            v39 = *v37;
            v40 = 1 << (v38 - 1);
            goto LABEL_78;
          }
          v50 = v38 - 1;
          if ((((*v37)[(v38 - 1) >> 6] >> (v38 - 1)) & 1) == 0)
            return 0;
          v51 = llvm::APInt::countTrailingZerosSlowCase(v37);
          goto LABEL_96;
        case 8:
          v41 = (llvm::APInt *)(v23 + 24);
          v42 = *(_DWORD *)(v23 + 32);
          if (v42 > 0x40)
          {
            v50 = v42 - 1;
            if (((*(_QWORD *)(*(_QWORD *)v41 + 8 * ((v42 - 1) >> 6)) >> (v42 - 1)) & 1) == 0)
            {
              v51 = llvm::APInt::countTrailingOnesSlowCase(v41);
LABEL_96:
              if (v51 == v50)
                goto LABEL_81;
            }
          }
          else
          {
            v39 = *(unint64_t **)v41;
            v40 = ~(-1 << (v42 - 1));
LABEL_78:
            if (v39 == (unint64_t *)v40)
              goto LABEL_81;
          }
          break;
        default:
          return v18;
      }
      return 0;
    }
    v25 = v2 >> 4;
    if (v25 == 12)
    {
      if (*(_UNKNOWN **)(v23 + 32) == &unk_1C866F1C0)
        v34 = *(_BYTE *)(*(_QWORD *)(v23 + 40) + 28);
      else
        v34 = *(_BYTE *)(v23 + 52);
      if ((v34 & 7) != 3 || (v34 & 8) != 0)
        return 0;
    }
    else
    {
      if (v25 != 11)
        return 0;
      v26 = *(_UNKNOWN **)(v23 + 32) == &unk_1C866F1C0 ? *(_BYTE *)(*(_QWORD *)(v23 + 40) + 28) : *(_BYTE *)(v23 + 52);
      if ((v26 & 7) != 3 || (v26 & 8) == 0)
        return 0;
    }
LABEL_81:
    v43 = *(llvm::ConstantInt **)a2;
    v44 = *(unsigned __int8 *)(*(_QWORD *)a2 + 8);
    if (v44 == 13)
    {
      if (v21 != 80)
      {
        *(_WORD *)(a2 + 18) = v2 & 0xFF0F | 0x50;
        Zero = llvm::ConstantInt::get(v43, 0, 0);
        return sub_1C577E2C8(a1, a2, 1u, (uint64_t)Zero);
      }
    }
    else if (v21 != 176 && v44 <= 6)
    {
      *(_WORD *)(a2 + 18) = v2 & 0xFF0F | 0xB0;
      Zero = llvm::ConstantFP::getZero(v43, (llvm::Type *)1);
      return sub_1C577E2C8(a1, a2, 1u, (uint64_t)Zero);
    }
    if (v20 == 4 || v20 == 2)
    {
      v46 = operator new(0x60uLL);
      v46[13] = v46[13] & 0x38000000 | 1;
      v18 = (uint64_t)(v46 + 8);
      *(_QWORD *)v46 = 0;
      *((_QWORD *)v46 + 1) = 0;
      *((_QWORD *)v46 + 2) = 0;
      *((_QWORD *)v46 + 3) = v46 + 8;
      v47 = *(_QWORD *)a2;
      v48 = *(_QWORD *)(a2 - 64);
      v53 = 257;
      llvm::DataLayout::getAlignment(*(_QWORD *)(a1 + 80), v47);
      llvm::LoadInst::LoadInst(v18, v47, v48, (uint64_t)v52, 0, v49, v20, *(_BYTE *)(a2 + 60), 0);
      return v18;
    }
    return 0;
  }
  if ((v2 >> 4) - 11 > 1)
    goto LABEL_36;
  v8 = *(_UNKNOWN **)(v5 + 32) == &unk_1C866F1C0 ? *(_QWORD *)(v5 + 40) : v5 + 24;
  if ((*(_BYTE *)(v8 + 28) & 7) != 1)
    goto LABEL_36;
LABEL_28:
  if ((v2 & 0xF0) == 0)
    goto LABEL_36;
  *(_WORD *)(a2 + 18) = v2 & 0xFF0F;
  return a2;
}

uint64_t sub_1C57A3D4C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  BOOL v5;
  unsigned int v10;
  unsigned int v12;
  llvm::APInt *v13;
  uint64_t result;
  llvm::APInt *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33[4];
  uint64_t v34;
  char v35;

  v4 = *(_QWORD *)(a2 - 32);
  if (v4)
    v5 = *(_BYTE *)(v4 + 16) == 16;
  else
    v5 = 0;
  if (!v5)
    return 0;
  v10 = *(_WORD *)(a2 + 18) & 0x3F;
  if (a4)
  {
    if (v10 - 32 < 8 || v10 < 0x10)
      return 0;
    if (v10 != 40)
    {
LABEL_16:
      v12 = *(_DWORD *)(v4 + 32);
      if (v12)
      {
        v13 = (llvm::APInt *)(v4 + 24);
        if (v12 > 0x40)
        {
          if (llvm::APInt::countTrailingOnesSlowCase(v13) != v12)
            return 0;
        }
        else
        {
          result = 0;
          if (*(_QWORD *)v13 != 0xFFFFFFFFFFFFFFFFLL >> -(char)v12)
            return result;
        }
      }
      goto LABEL_26;
    }
  }
  else if (v10 != 39)
  {
    if (v10 != 38)
      return 0;
    goto LABEL_16;
  }
  v15 = (llvm::APInt *)(v4 + 24);
  v16 = *(_DWORD *)(v4 + 32);
  if (v16 > 0x40)
  {
    if (llvm::APInt::countLeadingZerosSlowCase(v15) != v16)
      return 0;
  }
  else if (*(_QWORD *)v15)
  {
    return 0;
  }
LABEL_26:
  v17 = *(_WORD *)(a3 + 18) & 0x3F;
  if (a4)
    LODWORD(v17) = word_1C8660AFA[v17];
  v18 = *(_QWORD *)(a2 - 64);
  if (*(_QWORD *)(a3 - 64) != v18)
  {
    if (*(_QWORD *)(a3 - 32) == v18)
      __asm { BR              X11 }
    return 0;
  }
  v19 = *(_QWORD *)(a3 - 32);
  if ((_DWORD)v17 != 40)
  {
    if ((_DWORD)v17 == 41)
    {
      v20 = 37;
      v21 = 34;
      goto LABEL_37;
    }
    return 0;
  }
  v20 = 36;
  v21 = 35;
LABEL_37:
  v22 = a1[7];
  v23 = a1[9];
  if (!*(_QWORD *)(a3 + 40))
  {
    if (!v19 || *(unsigned __int8 *)(v19 + 16) < 0x1Cu || (a3 = *(_QWORD *)(a3 - 32), !*(_QWORD *)(v19 + 40)))
      a3 = 0;
  }
  v33[0] = a1[10];
  v33[1] = v22;
  v33[2] = a3;
  v33[3] = v23;
  v34 = 0;
  v35 = 1;
  sub_1C4F83784(v19, 0, v33, &v29);
  if (v30 >= 0x41)
    v24 = (uint64_t *)(v29 + 8 * ((v30 - 1) >> 6));
  else
    v24 = &v29;
  if ((((unint64_t)*v24 >> (v30 - 1)) & 1) != 0)
  {
    if (a4)
      v25 = v21;
    else
      v25 = v20;
    v26 = a1[3];
    LOWORD(v34) = 257;
    result = sub_1C4774B48(v26, v25, v18, v19, (uint64_t)v33);
  }
  else
  {
    result = 0;
  }
  if (v32 >= 0x41 && v31)
  {
    v28 = result;
    MEMORY[0x1CAA32F9C](v31, 0x1000C8000313F17);
    result = v28;
  }
  if (v30 >= 0x41 && v29)
  {
    v27 = result;
    MEMORY[0x1CAA32F9C](v29, 0x1000C8000313F17);
    return v27;
  }
  return result;
}

uint64_t sub_1C57A4000(uint64_t a1, uint64_t a2, uint64_t a3, llvm::AssumptionCache *a4, int a5, int a6)
{
  int v6;
  unsigned __int8 *v9;
  char isNullValue;
  unsigned __int8 *v17;
  uint64_t v18;
  int v19;
  llvm *v20;
  llvm *v21;
  llvm **v22;
  uint64_t v23;
  int v24;
  llvm *v25;
  llvm *v26;
  llvm **v27;
  BOOL v28;
  llvm *v29;
  unsigned __int8 **v30;
  llvm *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  _BYTE v41[32];
  __int16 v42;

  if (a5)
    v6 = 33;
  else
    v6 = 32;
  if (v6 != (*(_WORD *)(a2 + 18) & 0x3F) || v6 != (*(_WORD *)(a3 + 18) & 0x3F))
    return 0;
  v9 = *(unsigned __int8 **)(a2 - 32);
  if (!v9 || v9[16] > 0x14u)
    return 0;
  isNullValue = llvm::Constant::isNullValue(*(llvm::Constant **)(a2 - 32));
  if ((isNullValue & 1) == 0 && (sub_1C4E71060((uint64_t)v41, (llvm::Constant *)v9) & 1) == 0)
    return 0;
  v17 = *(unsigned __int8 **)(a3 - 32);
  if (!v17
    || v17[16] > 0x14u
    || (llvm::Constant::isNullValue(*(llvm::Constant **)(a3 - 32)) & 1) == 0
    && (sub_1C4E71060((uint64_t)v41, (llvm::Constant *)v17) & 1) == 0)
  {
    return 0;
  }
  v18 = *(_QWORD *)(a2 - 64);
  v19 = *(unsigned __int8 *)(v18 + 16);
  if (v19 == 5)
  {
    if (*(_WORD *)(v18 + 18) != 28)
      return 0;
    v22 = (llvm **)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF));
    v20 = *v22;
    if (!*v22)
      return 0;
    v21 = v22[4];
    if (!v21)
      return 0;
  }
  else
  {
    if (v19 != 56)
      return 0;
    v20 = *(llvm **)(v18 - 64);
    if (!v20)
      return 0;
    v21 = *(llvm **)(v18 - 32);
    if (!v21)
      return 0;
  }
  v23 = *(_QWORD *)(a3 - 64);
  v24 = *(unsigned __int8 *)(v23 + 16);
  if (v24 == 5)
  {
    if (*(_WORD *)(v23 + 18) != 28)
      return 0;
    v27 = (llvm **)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
    v25 = *v27;
    if (!*v27)
      return 0;
    v26 = v27[4];
    if (!v26)
      return 0;
  }
  else
  {
    if (v24 != 56)
      return 0;
    v25 = *(llvm **)(v23 - 64);
    if (!v25)
      return 0;
    v26 = *(llvm **)(v23 - 32);
    if (!v26)
      return 0;
  }
  v28 = v20 == v26 || v21 == v26;
  if (v28)
    v29 = v26;
  else
    v29 = v25;
  if (v28)
    v30 = (unsigned __int8 **)v25;
  else
    v30 = (unsigned __int8 **)v26;
  if (v21 == v29)
    v31 = v20;
  else
    v31 = v21;
  if (v21 != v29 && v20 != v29
    || !llvm::isKnownToBeAPowerOfTwo(v31, *(const llvm::Value **)(a1 + 80), 0, 0, *(_QWORD *)(a1 + 56), a4, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v39)|| !llvm::isKnownToBeAPowerOfTwo((llvm *)v30, *(const llvm::Value **)(a1 + 80), 0, 0, *(_QWORD *)(a1 + 56), a4, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v40))
  {
    return 0;
  }
  if (a6)
  {
    v32 = *(uint64_t **)(a1 + 24);
    v42 = 257;
    v30 = sub_1C57A4274(v32, v30, (uint64_t)v41);
  }
  v33 = *(_QWORD *)(a1 + 24);
  v42 = 257;
  v34 = sub_1C4773594(v33, v31, (uint64_t)v30, (uint64_t)v41);
  v35 = *(_QWORD *)(a1 + 24);
  v42 = 257;
  v36 = sub_1C4D89BCC(v35, v29, v34, (uint64_t)v41);
  if (a5)
    v37 = 32;
  else
    v37 = 33;
  v38 = *(_QWORD *)(a1 + 24);
  v42 = 257;
  return sub_1C4774B48(v38, v37, v36, v34, (uint64_t)v41);
}

unsigned __int8 **sub_1C57A4274(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;
  unsigned __int8 **v7;
  _BYTE v9[32];
  __int16 v10;

  v6 = (char *)operator new(0x60uLL);
  *((_DWORD *)v6 + 13) = *((_DWORD *)v6 + 13) & 0x38000000 | 1;
  v7 = (unsigned __int8 **)(v6 + 32);
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *((_QWORD *)v6 + 3) = v6 + 32;
  v10 = 257;
  llvm::FreezeInst::FreezeInst((uint64_t)(v6 + 32), a2, (uint64_t)v9, 0);
  return sub_1C4867F8C(a1, v7, a3);
}

uint64_t sub_1C57A42F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  __int128 v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
    return 0;
  if (*(_QWORD *)(v4 + 8))
    return 0;
  v7 = *(_QWORD *)(a3 + 8);
  if (!v7 || *(_QWORD *)(v7 + 8))
    return 0;
  v9 = a4 ? 32 : 33;
  if (v9 != (*(_WORD *)(a2 + 18) & 0x3F) || v9 != (*(_WORD *)(a3 + 18) & 0x3F))
    return 0;
  sub_1C57A4530((uint64_t)&v39, *(llvm::Type ***)(a2 - 64));
  sub_1C57A4530((uint64_t)&v37, *(llvm::Type ***)(a2 - 32));
  sub_1C57A4530((uint64_t)&v35, *(llvm::Type ***)(a3 - 64));
  sub_1C57A4530((uint64_t)&v33, *(llvm::Type ***)(a3 - 32));
  result = 0;
  if ((_BYTE)v40 && (_BYTE)v38 && (_BYTE)v36 && (_BYTE)v34)
  {
    v11 = v39;
    v12 = v37;
    if ((_QWORD)v39 == (_QWORD)v35 && (_QWORD)v37 == (_QWORD)v33)
      goto LABEL_21;
    result = 0;
    if ((_QWORD)v39 == (_QWORD)v33 && (_QWORD)v37 == (_QWORD)v35)
    {
      v13 = v36;
      v14 = v35;
      v35 = v33;
      v36 = v34;
      v33 = v14;
      v34 = v13;
LABEL_21:
      v15 = DWORD2(v39);
      v16 = HIDWORD(v39);
      if (HIDWORD(v39) + DWORD2(v39) == DWORD2(v35))
      {
        v17 = DWORD2(v37);
        v18 = HIDWORD(v37);
        if (HIDWORD(v37) + DWORD2(v37) == DWORD2(v33))
          goto LABEL_26;
      }
      if (HIDWORD(v35) + DWORD2(v35) == DWORD2(v39) && HIDWORD(v33) + DWORD2(v33) == DWORD2(v37))
      {
        v19 = v40;
        v20 = v39;
        v39 = v35;
        v40 = v36;
        v35 = v20;
        v36 = v19;
        v24 = v37;
        v25 = v38;
        v38 = v34;
        v37 = v33;
        v34 = v25;
        v33 = v24;
        v11 = v39;
        v15 = DWORD2(v39);
        v16 = HIDWORD(v39);
        v12 = v37;
        v17 = DWORD2(v37);
        v18 = HIDWORD(v37);
LABEL_26:
        v30 = v11;
        v31 = v15;
        v32 = HIDWORD(v35) + v16;
        v27 = v12;
        v28 = v17;
        v29 = HIDWORD(v33) + v18;
        v21 = sub_1C57A46E8((uint64_t)&v30, *(uint64_t **)(a1 + 24));
        v22 = sub_1C57A46E8((uint64_t)&v27, *(uint64_t **)(a1 + 24));
        v23 = *(_QWORD *)(a1 + 24);
        v26 = 257;
        return sub_1C4774B48(v23, v9, (uint64_t)v21, (uint64_t)v22, (uint64_t)&v24);
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C57A4530(uint64_t result, llvm::Type **a2)
{
  uint64_t v2;
  llvm::Type *v3;
  llvm::Type **v5;
  llvm::Type *v6;
  int PrimitiveSizeInBits;
  llvm::Type *v8;
  int v9;
  llvm::Type *v10;
  int v11;
  llvm::Type **v12;
  int v13;
  llvm::Type **v14;
  llvm::APInt *v15;
  unsigned int v16;
  llvm::APInt *v17;
  llvm::Type ***v18;
  _QWORD v19[2];
  llvm::APInt *v20;
  llvm::Type **v21;
  llvm::Type **v22;

  v2 = result;
  v18 = &v22;
  v3 = a2[1];
  if (v3)
  {
    if (!*((_QWORD *)v3 + 1))
    {
      v22 = 0;
      result = sub_1C4B03864(&v18, (uint64_t)a2);
      if ((result & 1) != 0)
      {
        v5 = v22;
        v6 = *v22;
        if ((*((_DWORD *)*v22 + 2) & 0xFE) == 0x12)
          v6 = (llvm::Type *)**((_QWORD **)v6 + 2);
        PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v6);
        v8 = *a2;
        if ((*((_DWORD *)*a2 + 2) & 0xFE) == 0x12)
          v8 = (llvm::Type *)**((_QWORD **)v8 + 2);
        result = llvm::Type::getPrimitiveSizeInBits(v8);
        v9 = result;
        v19[1] = 0;
        v20 = 0;
        v18 = &v21;
        v19[0] = &v20;
        v10 = v5[1];
        if (!v10 || *((_QWORD *)v10 + 1))
          goto LABEL_10;
        result = (uint64_t)v19;
        v13 = *((unsigned __int8 *)v5 + 16);
        if (v13 == 5)
        {
          if (*((_WORD *)v5 + 9) != 26)
            goto LABEL_10;
          v14 = &v5[-4 * (*((_DWORD *)v5 + 5) & 0x7FFFFFF)];
          if (!*v14)
            goto LABEL_10;
          v21 = (llvm::Type **)*v14;
          result = (uint64_t)sub_1C4D8A004((uint64_t)v19, v14[4]);
          if (!(_DWORD)result)
            goto LABEL_10;
        }
        else
        {
          if (v13 != 54)
            goto LABEL_10;
          if (!*(v5 - 8))
            goto LABEL_10;
          v21 = (llvm::Type **)*(v5 - 8);
          result = (uint64_t)sub_1C4D89F84((uint64_t)v19, (unsigned __int8 *)*(v5 - 4));
          if ((result & 1) == 0)
            goto LABEL_10;
        }
        v15 = v20;
        v16 = *((_DWORD *)v20 + 2);
        v17 = v20;
        if (v16 >= 0x41)
        {
          result = llvm::APInt::countLeadingZerosSlowCase(v20);
          if (v16 - result > 0x40)
            goto LABEL_10;
          v17 = *(llvm::APInt **)v15;
        }
        if (*(_QWORD *)v17 <= (unint64_t)(PrimitiveSizeInBits - v9))
        {
          v12 = v21;
          if (*((_DWORD *)v15 + 2) >= 0x41u)
            v15 = *(llvm::APInt **)v15;
          v11 = *(_DWORD *)v15;
          goto LABEL_11;
        }
LABEL_10:
        v11 = 0;
        v12 = v22;
LABEL_11:
        *(_QWORD *)v2 = v12;
        *(_DWORD *)(v2 + 8) = v11;
        *(_DWORD *)(v2 + 12) = v9;
        *(_BYTE *)(v2 + 16) = 1;
        return result;
      }
    }
  }
  *(_BYTE *)v2 = 0;
  *(_BYTE *)(v2 + 16) = 0;
  return result;
}

unsigned __int8 *sub_1C57A46E8(uint64_t a1, uint64_t *a2)
{
  llvm::ConstantInt **v4;
  uint64_t v5;
  llvm::Value **v6;
  llvm::ConstantInt *v7;
  int v8;
  _QWORD *v9;
  unint64_t v10;
  llvm::Type *v11;
  unint64_t v12;
  _DWORD *v14;
  _DWORD *v15;
  int v16;
  _DWORD v17[8];
  __int16 v18;

  v4 = *(llvm::ConstantInt ***)a1;
  v5 = *(unsigned int *)(a1 + 8);
  if ((_DWORD)v5)
  {
    v18 = 257;
    v6 = llvm::ConstantInt::get(*v4, v5, 0);
    v4 = (llvm::ConstantInt **)sub_1C506ED1C((uint64_t)a2, (uint64_t)v4, (uint64_t)v6, (uint64_t)v17, 0);
  }
  v7 = *v4;
  v8 = *(_DWORD *)(a1 + 12);
  v9 = *(_QWORD **)*v4;
  v17[0] = v8;
  if (v8 <= 63)
  {
    if (v8 <= 31)
    {
      switch(v8)
      {
        case 16:
          v10 = *v9 + 1936;
          goto LABEL_11;
        case 8:
          v10 = *v9 + 1912;
          goto LABEL_11;
        case 1:
          v10 = *v9 + 1888;
          goto LABEL_11;
      }
    }
    else if (v8 == 32)
    {
      v10 = *v9 + 1960;
      goto LABEL_11;
    }
  }
  else
  {
    if (v8 == 64)
    {
      v10 = *v9 + 1984;
      goto LABEL_11;
    }
    if (v8 == 128)
    {
      v10 = *v9 + 2008;
      goto LABEL_11;
    }
  }
  v14 = sub_1C5270984(*v9 + 2168, v17);
  v10 = *((_QWORD *)v14 + 1);
  if (!v10)
  {
    v15 = v14;
    v10 = sub_1C484358C(*v9 + 2040, 24, 3);
    v16 = v17[0];
    *(_QWORD *)v10 = v9;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 8) = (v16 << 8) | 0xDu;
    *((_QWORD *)v15 + 1) = v10;
  }
LABEL_11:
  if ((*((_DWORD *)v7 + 2) & 0xFE) == 0x12)
  {
    v11 = (llvm::Type *)*((unsigned int *)v7 + 8);
    if (*((_DWORD *)v7 + 2) == 19)
      llvm::ScalableVectorType::get((uint64_t **)v10, v11);
    else
      llvm::FixedVectorType::get((llvm::FixedVectorType *)v10, v11);
    v10 = v12;
  }
  if ((llvm::ConstantInt *)v10 != *v4)
  {
    v18 = 257;
    return sub_1C4773E38(a2, 38, (unsigned __int8 *)v4, v10, (uint64_t)v17);
  }
  return (unsigned __int8 *)v4;
}

uint64_t sub_1C57A48A8(uint64_t a1, uint64_t a2, uint64_t a3, llvm::AssumptionCache *a4)
{
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  llvm::ConstantInt **v21;
  unsigned int PrimitiveSizeInBits;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v26;
  uint64_t v28;
  int v29;
  const llvm::APInt *v30;
  unsigned int v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  void **v46;
  unsigned int v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint8x8_t v55;
  unint64_t v56;
  int v57;
  uint8x8_t v58;
  _QWORD *v59;
  unsigned int v60;
  llvm::Value **v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  llvm::AssumptionCache **v66;
  llvm::AssumptionCache *v67;
  int v68;
  int v69;
  llvm::AssumptionCache *v70;
  char *v71;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  unsigned __int8 *v77;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v81;
  llvm::Constant **v82;
  uint64_t v83;
  llvm::Type *v84;
  llvm::Value **NullValue;
  uint64_t v86;
  int v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void **v92;
  llvm::APInt **v93;
  int v94;
  uint64_t v95;
  unsigned int v96;
  const llvm::APInt *v97;
  unsigned int v98;
  unint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  int v105;
  BOOL v106;
  unint64_t v107;
  unsigned int v108;
  _BOOL4 v109;
  char v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  int64_t v114;
  int v115;
  unint64_t v116;
  int v117;
  unsigned int v118;
  llvm::ConstantInt ***v119;
  void *v120;
  unint64_t v121;
  uint64_t *v122;
  unint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  llvm::Value **v126;
  llvm::ConstantInt ***v127;
  const llvm::APInt *v128;
  unsigned int v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t *v132;
  unint64_t v133;
  uint64_t v134;
  llvm::Value **v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  llvm::ConstantInt ***v141;
  _DWORD *v142;
  unint64_t v143;
  llvm::APInt *v144;
  unint64_t v145;
  unsigned int v146;
  _OWORD v147[2];
  llvm::AssumptionCache *v148;
  uint64_t v149;
  _QWORD *v150;
  unsigned int v151;
  _QWORD *v152;
  unsigned int v153;
  uint64_t v154;
  unsigned int v155;
  void **v156;
  unsigned int v157;
  void *__src;
  unsigned int v159;
  llvm::ConstantInt ***v160;
  unint64_t v161;
  uint64_t v162;
  llvm::ConstantInt ***v163;
  void **v164;
  uint64_t *v165;
  _QWORD v166[2];
  __int16 v167;

  v8 = *(_OWORD *)(a1 + 120);
  v9 = *(_OWORD *)(a1 + 104);
  v147[0] = *(_OWORD *)(a1 + 88);
  v147[1] = v9;
  v149 = *((_QWORD *)&v8 + 1);
  v148 = a4;
  v10 = sub_1C57A4000(a1, a2, a3, a4, 1, 0);
  if (v10)
    return v10;
  v11 = *(_WORD *)(a2 + 18);
  v12 = v11 & 0x3F;
  v13 = *(_WORD *)(a3 + 18) & 0x3F;
  if ((v12 - 38) < 4 != (v13 - 38) < 4)
  {
    v14 = (v12 - 38) < 4 && (*(_WORD *)(a3 + 18) & 0x3E) == 32;
    v15 = v14;
    if (v14 || (v13 - 38) > 3)
    {
      if (!v15)
        goto LABEL_19;
    }
    else if ((v11 & 0x3E) != 0x20)
    {
      goto LABEL_19;
    }
  }
  v16 = *(uint64_t **)(a2 - 64);
  v17 = *(uint64_t **)(a3 - 64);
  if (v16 == *(uint64_t **)(a3 - 32) && *(uint64_t **)(a2 - 32) == v17)
    __asm { BR              X13 }
  if (v16 != v17 || (v18 = *(_QWORD *)(a2 - 32), v18 != *(_QWORD *)(a3 - 32)))
  {
LABEL_19:
    v10 = sub_1C57A5AFC(a2, a3, (llvm::Constant *)1, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = (uint64_t)sub_1C57A6954((unsigned __int8 *)a2, a3, (uint64_t)a4, *(_QWORD *)(a1 + 24), (uint64_t)v147);
    if (v10)
      return v10;
    v10 = (uint64_t)sub_1C57A6954((unsigned __int8 *)a3, a2, (uint64_t)a4, *(_QWORD *)(a1 + 24), (uint64_t)v147);
    if (v10)
      return v10;
    v10 = sub_1C57A6B74(a2, a3, 1, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A6B74(a3, a2, 1, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A3D4C((_QWORD *)a1, a2, a3, 0);
    if (v10)
      return v10;
    v10 = sub_1C57A3D4C((_QWORD *)a1, a3, a2, 0);
    if (v10)
      return v10;
    v10 = sub_1C57A6D50(a2, a3, 1, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v19 = *(_QWORD *)(a1 + 24);
    v163 = 0;
    LODWORD(v162) = 1;
    v161 = 0;
    v20 = a2;
    if ((sub_1C57BB9D8(a3, &v163, (uint64_t)&v161) & 1) == 0)
    {
      v20 = a3;
      if (!sub_1C57BB9D8(a2, &v163, (uint64_t)&v161))
      {
        v10 = 0;
        goto LABEL_126;
      }
    }
    v139 = v19;
    v160 = 0;
    v159 = 1;
    __src = 0;
    LODWORD(v154) = *(_WORD *)(v20 + 18) & 0x3F;
    if (!llvm::decomposeBitTestICmp(*(_QWORD *)(v20 - 64), *(unsigned __int8 **)(v20 - 32), (int *)&v154, (uint64_t *)&v160, (int8x8_t ***)&__src, 0)|| (_DWORD)v154 != 32)
    {
      v156 = 0;
      v164 = (void **)&v154;
      v165 = (uint64_t *)&v160;
      v166[0] = &v156;
      v166[1] = 0;
      v28 = *(_QWORD *)(v20 - 64);
      v29 = *(unsigned __int8 *)(v28 + 16);
      if (v29 == 5)
      {
        if (*(_WORD *)(v28 + 18) != 28)
          goto LABEL_80;
        if (!*(_QWORD *)(v28 - 32 * (*(_DWORD *)(v28 + 20) & 0x7FFFFFF)))
          goto LABEL_80;
        v160 = *(llvm::ConstantInt ****)(v28 - 32 * (*(_DWORD *)(v28 + 20) & 0x7FFFFFF));
        if (!sub_1C4D8A004((uint64_t)v166, *(llvm::Constant **)(v28 - 32 * (*(_DWORD *)(v28 + 20) & 0x7FFFFFF) + 32)))goto LABEL_80;
      }
      else
      {
        if (v29 != 56)
          goto LABEL_80;
        if (!*(_QWORD *)(v28 - 64))
          goto LABEL_80;
        v160 = *(llvm::ConstantInt ****)(v28 - 64);
        if ((sub_1C4D89F84((uint64_t)v166, *(unsigned __int8 **)(v28 - 32)) & 1) == 0)
          goto LABEL_80;
      }
      v45 = *(unsigned __int8 **)(v20 - 32);
      if (!v45
        || v45[16] > 0x14u
        || (llvm::Constant::isNullValue(*(llvm::Constant **)(v20 - 32)) & 1) == 0
        && (sub_1C4E71060((uint64_t)&v152, (llvm::Constant *)v45) & 1) == 0)
      {
        goto LABEL_80;
      }
      *(_DWORD *)v164 = *(_WORD *)(v20 + 18) & 0x3F;
      if ((_DWORD)v154 != 32)
        goto LABEL_80;
      v46 = v156;
      if (v159 > 0x40 || (v47 = *((_DWORD *)v156 + 2), v47 > 0x40))
      {
        if (&__src != v156)
        {
          llvm::APInt::reallocate((uint64_t)&__src, *((_DWORD *)v156 + 2));
          if (v159 <= 0x40)
            __src = *v46;
          else
            memcpy(__src, *v46, (((unint64_t)v159 + 63) >> 3) & 0x3FFFFFF8);
        }
      }
      else
      {
        __src = *v156;
        v159 = v47;
      }
    }
    v141 = v163;
    if (v163 == v160)
      goto LABEL_39;
    v164 = (void **)v163;
    if (sub_1C4E8FCE0(&v164, (uint64_t)v160))
    {
      v21 = *v163;
      if (((_DWORD)(*v163)[1] & 0xFE) == 0x12)
        v21 = *(llvm::ConstantInt ***)v21[2];
      PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v21);
      llvm::APInt::zext((llvm::APInt *)&__src, PrimitiveSizeInBits, (uint64_t)&v164);
      if (v159 >= 0x41 && __src)
        MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
      __src = v164;
      v159 = v165;
      v141 = v163;
LABEL_39:
      v155 = v162;
      if (v162 > 0x40)
      {
        v154 = operator new[]();
        memcpy((void *)v154, (const void *)v161, (((unint64_t)v155 + 63) >> 3) & 0x3FFFFFF8);
      }
      else
      {
        v154 = v161;
      }
      llvm::APInt::operator-=((uint64_t)&v154, 1uLL);
      v31 = v155;
      v157 = v155;
      v156 = (void **)v154;
      v155 = 0;
      if (v157 > 0x40)
      {
        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v156);
        v31 = v157;
        v143 = (unint64_t)v156;
        v157 = 0;
        if (v155 >= 0x41 && v154)
          MEMORY[0x1CAA32F9C](v154, 0x1000C8000313F17);
      }
      else
      {
        if (v31)
          v32 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v31;
        else
          v32 = 0;
        v143 = v32 & ~v154;
        v156 = (void **)v143;
        v157 = 0;
      }
      v33 = v159;
      if (v159 > 0x40)
      {
        v37 = ((unint64_t)v159 + 63) >> 6;
        v38 = (uint64_t *)__src;
        v39 = (uint64_t *)__src;
        v40 = (uint64_t *)v143;
        v41 = v37;
        while (1)
        {
          v43 = *v39++;
          v42 = v43;
          v44 = *v40++;
          if ((v44 & v42) != 0)
            break;
          if (!--v41)
            goto LABEL_105;
        }
        v48 = (uint64_t *)v143;
        while (1)
        {
          v50 = *v38++;
          v49 = v50;
          v51 = *v48++;
          if ((v49 & ~v51) != 0)
            break;
          if (!--v37)
            goto LABEL_110;
        }
        v151 = v159;
        v52 = (((unint64_t)v159 + 63) >> 3) & 0x3FFFFFF8;
        v150 = (_QWORD *)operator new[]();
        memcpy(v150, __src, v52);
        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v150);
        v33 = v151;
        v36 = v150;
      }
      else
      {
        if (((unint64_t)__src & v143) == 0)
        {
LABEL_105:
          v10 = 0;
LABEL_120:
          if (v31 >= 0x41 && v143)
            MEMORY[0x1CAA32F9C](v143, 0x1000C8000313F17);
          goto LABEL_123;
        }
        if (((unint64_t)__src & ~v143) == 0)
        {
LABEL_110:
          v61 = llvm::ConstantInt::get(*v141, (llvm::Type *)&v161, v30);
          if ((*((_BYTE *)a4 + 23) & 0x10) == 0)
          {
            v72 = 0;
            v71 = &byte_1C871356D;
            goto LABEL_119;
          }
          v62 = ***(_QWORD ***)a4;
          v63 = *(_QWORD *)(v62 + 152);
          v64 = *(unsigned int *)(v62 + 168);
          if ((_DWORD)v64)
          {
            LODWORD(v65) = (v64 - 1) & ((a4 >> 4) ^ (a4 >> 9));
            v66 = (llvm::AssumptionCache **)(v63 + 16 * v65);
            v67 = *v66;
            if (*v66 == a4)
            {
LABEL_118:
              v70 = v66[1];
              v73 = *(uint64_t **)v70;
              v71 = (char *)v70 + 16;
              v72 = v73;
LABEL_119:
              v167 = 773;
              v164 = (void **)v71;
              v165 = v72;
              v166[0] = ".simplified";
              v10 = sub_1C4774B48(v139, 36, (uint64_t)v141, (uint64_t)v61, (uint64_t)&v164);
              goto LABEL_120;
            }
            v68 = 1;
            while (v67 != (llvm::AssumptionCache *)-4096)
            {
              v69 = v65 + v68++;
              v65 = v69 & (v64 - 1);
              v67 = *(llvm::AssumptionCache **)(v63 + 16 * v65);
              if (v67 == a4)
              {
                v66 = (llvm::AssumptionCache **)(v63 + 16 * v65);
                goto LABEL_118;
              }
            }
          }
          v66 = (llvm::AssumptionCache **)(v63 + 16 * v64);
          goto LABEL_118;
        }
        v34 = ~(unint64_t)__src;
        if (v159)
          v35 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v159;
        else
          v35 = 0;
        v36 = (_QWORD *)(v35 & v34);
        v150 = (_QWORD *)(v35 & v34);
      }
      v153 = v33;
      v152 = v36;
      v151 = 0;
      llvm::APInt::operator+=((uint64_t)&v152, 1uLL);
      v53 = v153;
      v54 = v152;
      v153 = 0;
      if (v151 >= 0x41 && v36)
        MEMORY[0x1CAA32F9C](v36, 0x1000C8000313F17);
      if (v53 > 0x40)
      {
        v56 = 0;
        v57 = 0;
        do
        {
          v58 = (uint8x8_t)vcnt_s8((int8x8_t)v54[v56 / 8]);
          v58.i16[0] = vaddlv_u8(v58);
          v57 += v58.i32[0];
          v56 += 8;
        }
        while ((((unint64_t)(v53 + 63) >> 3) & 0x3FFFFFF8) != v56);
        if (v57 != 1)
        {
          if (v54)
            MEMORY[0x1CAA32F9C](v54, 0x1000C8000313F17);
          goto LABEL_105;
        }
      }
      else
      {
        v55 = (uint8x8_t)vcnt_s8((int8x8_t)v54);
        v55.i16[0] = vaddlv_u8(v55);
        if (v55.u32[0] != 1)
          goto LABEL_105;
      }
      if (v162 > 0x40)
      {
        v88 = (((unint64_t)v162 + 63) >> 3) & 0x3FFFFFF8;
        while (v88)
        {
          v89 = *(_QWORD *)(v161 - 8 + v88);
          v90 = *(_QWORD *)((char *)v54 + v88 - 8);
          v88 -= 8;
          if (v89 != v90)
          {
            if (v89 <= v90)
              goto LABEL_107;
            break;
          }
        }
      }
      else
      {
        v59 = (_QWORD *)v161;
        if (v161 >= (unint64_t)v54)
          v60 = v53;
        else
          v60 = v162;
        if (v60 < 0x41)
        {
          if (v161 >= (unint64_t)v54)
            v59 = v54;
          v161 = (unint64_t)v59;
          LODWORD(v162) = v60;
          goto LABEL_107;
        }
        if (v161 < (unint64_t)v54)
        {
LABEL_107:
          if (v53 >= 0x41 && v54)
            MEMORY[0x1CAA32F9C](v54, 0x1000C8000313F17);
          goto LABEL_110;
        }
      }
      llvm::APInt::reallocate((uint64_t)&v161, v53);
      if (v162 <= 0x40)
        v161 = (unint64_t)v54;
      else
        memcpy((void *)v161, v54, (((unint64_t)v162 + 63) >> 3) & 0x3FFFFFF8);
      goto LABEL_107;
    }
LABEL_80:
    v10 = 0;
LABEL_123:
    if (v159 >= 0x41 && __src)
      MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
LABEL_126:
    if (v162 >= 0x41 && v161)
      MEMORY[0x1CAA32F9C](v161, 0x1000C8000313F17);
    if (v10)
      return v10;
    v10 = sub_1C57A7000(a2, a3, 1, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A7240(a2, a3, 1, (int **)v147, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A7240(a3, a2, 1, (int **)v147, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A42F8(a1, a2, a3, 1);
    if (v10)
      return v10;
    v74 = *(_QWORD *)(a2 - 64);
    v75 = *(_QWORD *)(a3 - 64);
    if ((_DWORD)v12 == 32)
    {
      v76 = sub_1C4D8AC3C((uint64_t)&v164, *(llvm::Constant **)(a2 - 32));
      if ((_DWORD)v13 == 32
        && v76
        && sub_1C4D8AC3C((uint64_t)&v161, *(llvm::Constant **)(a3 - 32))
        && *(_QWORD *)v74 == *(_QWORD *)v75)
      {
        v81 = *(_QWORD *)(a1 + 24);
        v167 = 257;
        v82 = (llvm::Constant **)sub_1C4773594(v81, (_QWORD *)v74, v75, (uint64_t)&v164);
        v83 = *(_QWORD *)(a1 + 24);
        NullValue = llvm::Constant::getNullValue(*v82, v84);
        v167 = 257;
        return sub_1C4774B48(v83, 32, (uint64_t)v82, (uint64_t)NullValue, (uint64_t)&v164);
      }
    }
    v156 = 0;
    v154 = 0;
    v77 = *(unsigned __int8 **)(a2 - 32);
    v164 = (void **)&v156;
    v165 = 0;
    if (!sub_1C4D89F84((uint64_t)&v164, v77))
      return 0;
    v78 = *(unsigned __int8 **)(a3 - 32);
    v161 = (unint64_t)&v154;
    v162 = 0;
    v10 = 0;
    if ((sub_1C4D89F84((uint64_t)&v161, v78) & 1) == 0)
      return v10;
    if ((_DWORD)v12 != 32)
      return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
    if ((_DWORD)v13 != 32)
      return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
    v79 = *(_QWORD *)(a2 + 8);
    if (!v79)
      return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
    if (*(_QWORD *)(v79 + 8))
      return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
    v86 = *(_QWORD *)(a3 + 8);
    if (!v86 || *(_QWORD *)(v86 + 8))
      return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
    v152 = 0;
    v150 = 0;
    v161 = (unint64_t)&v152;
    if (!sub_1C4B03864((_QWORD **)&v161, v75))
      goto LABEL_176;
    v164 = (void **)v152;
    v165 = (uint64_t *)&v150;
    v166[0] = 0;
    v87 = *(unsigned __int8 *)(v74 + 16);
    if (v87 == 5)
    {
      if (*(_WORD *)(v74 + 18) != 28)
        goto LABEL_176;
      v91 = v74 - 32 * (*(_DWORD *)(v74 + 20) & 0x7FFFFFF);
      if (v152 != *(_QWORD **)v91
        || (sub_1C4D8A004((uint64_t)&v165, *(llvm::Constant **)(v91 + 32)) & 1) == 0)
      {
        goto LABEL_176;
      }
    }
    else if (v87 != 56
           || v152 != *(_QWORD **)(v74 - 64)
           || !sub_1C4D89F84((uint64_t)&v165, *(unsigned __int8 **)(v74 - 32)))
    {
LABEL_176:
      v161 = (unint64_t)&v152;
      if (!sub_1C4B03864((_QWORD **)&v161, v74))
        return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
      v164 = (void **)v152;
      v165 = (uint64_t *)&v150;
      v166[0] = 0;
      v94 = *(unsigned __int8 *)(v75 + 16);
      if (v94 == 5)
      {
        if (*(_WORD *)(v75 + 18) != 28)
          return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
        v95 = v75 - 32 * (*(_DWORD *)(v75 + 20) & 0x7FFFFFF);
        if (v152 != *(_QWORD **)v95
          || (sub_1C4D8A004((uint64_t)&v165, *(llvm::Constant **)(v95 + 32)) & 1) == 0)
        {
          return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
        }
      }
      else if (v94 != 56
             || v152 != *(_QWORD **)(v75 - 64)
             || !sub_1C4D89F84((uint64_t)&v165, *(unsigned __int8 **)(v75 - 32)))
      {
        return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
      }
      v92 = (void **)&v154;
      v93 = (llvm::APInt **)&v156;
      goto LABEL_186;
    }
    v92 = (void **)&v156;
    v93 = (llvm::APInt **)&v154;
LABEL_186:
    v144 = *v93;
    if (*v93)
    {
      v142 = *v92;
      if (*v92)
      {
        v96 = *((_DWORD *)v144 + 2);
        LODWORD(v162) = v142[2];
        v140 = v162;
        if (v162 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v161, 0, 0);
        else
          v161 = 0;
        sub_1C4912E54(&v161, 0, v96);
        v98 = v162;
        if (v162 >= 0x41)
        {
          v101 = v162 + 63;
          v100 = (char *)operator new[]();
          v99 = v161;
          memcpy(v100, (const void *)v161, (v101 >> 3) & 0x3FFFFFF8);
          v102 = 0;
          v103 = (uint64_t *)*v150;
          v104 = v101 >> 6;
          do
          {
            *(_QWORD *)&v100[v102 * 8] &= v103[v102];
            ++v102;
          }
          while (v101 >> 6 != v102);
          v105 = 0;
          do
          {
            v106 = v104-- < 1;
            if (v106)
              break;
            v107 = *(_QWORD *)&v100[8 * v104];
            v105 += __clz(v107);
          }
          while (!v107);
          v108 = v98 | 0xFFFFFFC0;
          if ((v98 & 0x3F) == 0)
            v108 = 0;
          if (v105 + v108 != v98)
          {
            MEMORY[0x1CAA32F9C](v100, 0x1000C8000313F17);
            v110 = 0;
            v10 = 0;
LABEL_234:
            v118 = v162;
LABEL_235:
            if (v118 >= 0x41)
            {
              if (v161)
                MEMORY[0x1CAA32F9C](v161, 0x1000C8000313F17);
            }
            if ((v110 & 1) != 0)
              return v10;
            return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
          }
          v137 = v162;
          if (v162 >= 0x41)
          {
            v111 = (char *)operator new[]();
            memcpy(v111, (const void *)v161, ((unint64_t)(v137 + 63) >> 3) & 0x3FFFFFF8);
            v112 = 0;
            v113 = *(_QWORD **)v142;
            v114 = (unint64_t)(v137 + 63) >> 6;
            do
            {
              *(_QWORD *)&v111[v112 * 8] &= v113[v112];
              ++v112;
            }
            while (v114 != v112);
            v115 = 0;
            do
            {
              v106 = v114-- < 1;
              if (v106)
                break;
              v116 = *(_QWORD *)&v111[8 * v114];
              v115 += __clz(v116);
            }
            while (!v116);
            v117 = v137 | 0xFFFFFFC0;
            if ((v137 & 0x3F) == 0)
              v117 = 0;
            v109 = v115 + v117 == v137;
            MEMORY[0x1CAA32F9C](v111, 0x1000C8000313F17);
LABEL_213:
            if (v100 && v98 >= 0x41)
            {
              MEMORY[0x1CAA32F9C](v100, 0x1000C8000313F17);
              v118 = v162;
              if (v109)
              {
LABEL_216:
                v138 = *(_QWORD *)(a1 + 24);
                v119 = (llvm::ConstantInt ***)v152;
                if (v118 > 0x40)
                {
                  v121 = v118 + 63;
                  v120 = (void *)operator new[]();
                  memcpy(v120, (const void *)v161, (v121 >> 3) & 0x3FFFFFF8);
                  v122 = (uint64_t *)*v150;
                  v123 = v121 >> 6;
                  v124 = v120;
                  do
                  {
                    v125 = *v122++;
                    *v124++ |= v125;
                    --v123;
                  }
                  while (v123);
                }
                else
                {
                  v120 = (void *)(*v150 | v161);
                }
                v159 = v118;
                __src = v120;
                v167 = 257;
                v126 = llvm::ConstantInt::get(*v119, (llvm::Type *)&__src, v97);
                v127 = (llvm::ConstantInt ***)sub_1C4D89BCC(v138, v119, (uint64_t)v126, (uint64_t)&v164);
                if (v159 >= 0x41 && __src)
                  MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
                llvm::APInt::zext(v144, v140, (uint64_t)&v145);
                v129 = v146;
                if (v146 > 0x40)
                {
                  v131 = (_QWORD *)v145;
                  v132 = *(uint64_t **)v142;
                  v133 = ((unint64_t)v146 + 63) >> 6;
                  do
                  {
                    v134 = *v132++;
                    *v131++ |= v134;
                    --v133;
                  }
                  while (v133);
                  v130 = (_QWORD *)v145;
                }
                else
                {
                  v130 = (_QWORD *)(v145 | *(_QWORD *)v142);
                  v145 = (unint64_t)v130;
                }
                v159 = v129;
                __src = v130;
                v146 = 0;
                v135 = llvm::ConstantInt::get(*v127, (llvm::Type *)&__src, v128);
                v136 = *(_QWORD *)(a1 + 24);
                v167 = 257;
                v10 = sub_1C4774B48(v136, 32, (uint64_t)v127, (uint64_t)v135, (uint64_t)&v164);
                if (v159 >= 0x41 && __src)
                  MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
                v110 = 1;
                goto LABEL_234;
              }
            }
            else
            {
              v118 = v162;
              if (v109)
                goto LABEL_216;
            }
            v110 = 0;
            v10 = 0;
            goto LABEL_235;
          }
LABEL_203:
          v109 = (*(_QWORD *)v142 & v99) == 0;
          goto LABEL_213;
        }
        v99 = v161;
        if ((*v150 & v161) == 0)
        {
          v100 = 0;
          goto LABEL_203;
        }
      }
    }
    return sub_1C57A785C(v12, v74, (uint64_t)v156, v13, v75, v154, *(_QWORD *)(a1 + 24), 1);
  }
  v23 = v11 & 0x3F;
  v24 = *(_WORD *)(a3 + 18) & 0x3F;
  v26 = (v23 - 38) < 4 || (v24 - 38) < 4;
  return sub_1C57A5A94(dword_1C8660B50[v24 - 32] & dword_1C8660B50[v23 - 32], v26, v17, v18, *(_QWORD *)(a1 + 24));
}

uint64_t sub_1C57A5A94(int a1, int a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  _WORD v9[22];
  int v10;

  v10 = 0;
  result = llvm::getPredForICmpCode(a1, a2, *a3, &v10);
  if (!result)
  {
    v9[16] = 257;
    return sub_1C4774B48(a5, v10, (uint64_t)a3, a4, (uint64_t)v9);
  }
  return result;
}

uint64_t sub_1C57A5AFC(uint64_t a1, uint64_t a2, llvm::Constant *a3, uint64_t a4)
{
  llvm::Constant **v8;
  int v9;
  uint64_t v10;
  int v11;
  llvm::Type *v12;
  llvm::Value **v13;
  llvm::Value **AllOnesValue;
  unsigned __int8 *v15;
  int v16;
  llvm::Value **v17;
  llvm::Value ****v18;
  int v19;
  llvm::Value **v20;
  llvm::Value **v21;
  llvm::Value **v22;
  llvm::Value **v23;
  llvm::Type *v24;
  llvm::Value **v25;
  uint64_t v26;
  llvm::Value ***v27;
  int v28;
  llvm::Value **v29;
  llvm::Value ***v30;
  unsigned __int8 *v31;
  int v32;
  llvm::Value **v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  llvm::Value *v40;
  llvm::Value **v41;
  uint64_t v42;
  __int16 v43;
  uint64_t v44;
  llvm::Type *v45;
  llvm::Value **NullValue;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v51;
  __int16 v52;
  llvm::Value **v53;
  uint64_t v54;
  llvm::Value **v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  const void **v59;
  uint64_t v60;
  uint64_t v61;
  llvm::Value *v62;
  uint64_t v63;
  uint64_t v64;
  const void **v65;
  _QWORD *v66;
  llvm::Value *v67;
  unint64_t v68;
  uint64_t v69;
  const void **v70;
  unint64_t v71;
  const void **v72;
  llvm::Value *v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  const void **v77;
  unint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  unint64_t v92;
  int v93;
  uint64_t v94;
  const llvm::APInt *v95;
  uint64_t v96;
  llvm::Value *v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t *v102;
  _QWORD *v103;
  uint64_t v104;
  llvm::Value **v105;
  uint64_t v106;
  uint64_t v107;
  const void **__srcc;
  const void **__src;
  const void **__srcd;
  const void **__srca;
  uint64_t __srcb;
  unint64_t __n;
  int __nc;
  size_t __na;
  unint64_t __nb;
  int __nd;
  int v118;
  unsigned __int8 *v119;
  llvm::Value ***v120;
  uint64_t v121;
  llvm::Value ***v122;
  uint64_t v123;
  __int16 v124;
  int v125;
  int v126;
  llvm::Value **v127;
  llvm::Value **v128;
  llvm::Value **v129;
  llvm::Value **v130[2];

  v126 = *(_WORD *)(a1 + 18) & 0x3F;
  v125 = *(_WORD *)(a2 + 18) & 0x3F;
  v8 = *(llvm::Constant ***)(a1 - 64);
  if ((*((_DWORD *)*v8 + 2) & 0xFE) == 0x12)
    v9 = *(unsigned __int8 *)(**((_QWORD **)*v8 + 2) + 8);
  else
    v9 = *((_DWORD *)*v8 + 2);
  if (v9 != 13)
    return 0;
  v10 = **(_QWORD **)(a2 - 64);
  v11 = (*(_DWORD *)(v10 + 8) & 0xFE) == 0x12
      ? *(unsigned __int8 *)(**(_QWORD **)(v10 + 16) + 8)
      : *(_DWORD *)(v10 + 8);
  if (v11 != 13)
    return 0;
  v122 = *(llvm::Value ****)(a1 - 32);
  v120 = 0;
  v130[0] = 0;
  v13 = 0;
  AllOnesValue = 0;
  v15 = 0;
  if ((sub_1C57BAB1C((uint64_t)v8, (unsigned __int8 *)v122, &v126, (uint64_t *)&v120, v130, (llvm::Value ***)&v122) & 1) == 0)
  {
    v16 = *((unsigned __int8 *)v8 + 16);
    if (v16 == 5)
    {
      if (*((_WORD *)v8 + 9) != 28)
        goto LABEL_19;
      v18 = (llvm::Value ****)&v8[-4 * (*((_DWORD *)v8 + 5) & 0x7FFFFFF)];
      if (!*v18)
        goto LABEL_19;
      v120 = *v18;
      v17 = (llvm::Value **)v18[4];
      if (!v17)
        goto LABEL_19;
    }
    else if (v16 != 56 || !*(v8 - 8) || (v120 = (llvm::Value ***)*(v8 - 8), (v17 = (llvm::Value **)*(v8 - 4)) == 0))
    {
LABEL_19:
      v120 = (llvm::Value ***)v8;
      v130[0] = (llvm::Value **)llvm::Constant::getAllOnesValue(*v8, v12);
LABEL_20:
      v13 = (llvm::Value **)v122;
      v19 = *((unsigned __int8 *)v122 + 16);
      if (v19 == 5)
      {
        if (*((_WORD *)v122 + 9) != 28)
          goto LABEL_29;
        v21 = (llvm::Value **)&v122[-4 * (*((_DWORD *)v122 + 5) & 0x7FFFFFF)];
        v20 = (llvm::Value **)*v21;
        if (!*v21)
          goto LABEL_29;
        AllOnesValue = (llvm::Value **)v21[4];
        if (!AllOnesValue)
          goto LABEL_29;
      }
      else if (v19 != 56 || (v20 = *(v122 - 8)) == 0 || (AllOnesValue = *(v122 - 4)) == 0)
      {
LABEL_29:
        AllOnesValue = (llvm::Value **)llvm::Constant::getAllOnesValue((llvm::Constant *)*v122, v12);
        goto LABEL_30;
      }
      v13 = v20;
LABEL_30:
      v15 = (unsigned __int8 *)v8;
      goto LABEL_31;
    }
    v130[0] = v17;
    goto LABEL_20;
  }
LABEL_31:
  if ((v126 & 0xFFFFFFFE) != 0x20)
    return 0;
  v22 = *(llvm::Value ***)(a2 - 64);
  v23 = *(llvm::Value ***)(a2 - 32);
  v128 = 0;
  v129 = v23;
  v127 = 0;
  if (sub_1C57BAB1C((uint64_t)v22, (unsigned __int8 *)v23, &v125, (uint64_t *)&v128, &v127, &v129))
  {
    v25 = v128;
    v26 = (uint64_t)v120;
    if (v128 == (llvm::Value **)v120 || v128 == v130[0])
    {
      v27 = &v127;
    }
    else if (v128 == v13)
    {
      v27 = &v127;
      v25 = v13;
    }
    else if (v128 == AllOnesValue)
    {
      v27 = &v127;
      v25 = AllOnesValue;
    }
    else
    {
      v25 = v127;
      v27 = &v128;
      if (v127 != AllOnesValue && v127 != v13 && v127 != (llvm::Value **)v120 && v127 != v130[0])
        return 0;
    }
    v119 = (unsigned __int8 *)*v27;
    goto LABEL_70;
  }
  v28 = *((unsigned __int8 *)v22 + 16);
  if (v28 == 5)
  {
    if (*((_WORD *)v22 + 9) != 28)
      goto LABEL_53;
    v30 = (llvm::Value ***)&v22[-4 * (*((_DWORD *)v22 + 5) & 0x7FFFFFF)];
    v25 = *v30;
    if (!*v30)
      goto LABEL_53;
    v128 = *v30;
    v29 = v30[4];
    if (!v29)
      goto LABEL_53;
LABEL_52:
    v127 = v29;
    goto LABEL_54;
  }
  if (v28 == 56)
  {
    v25 = (llvm::Value **)*(v22 - 8);
    if (v25)
    {
      v128 = (llvm::Value **)*(v22 - 8);
      v29 = (llvm::Value **)*(v22 - 4);
      if (v29)
        goto LABEL_52;
    }
  }
LABEL_53:
  v128 = v22;
  v29 = (llvm::Value **)llvm::Constant::getAllOnesValue(*v22, v24);
  v127 = v29;
  v25 = v128;
LABEL_54:
  v26 = (uint64_t)v120;
  if (v25 == (llvm::Value **)v120)
  {
    v26 = (uint64_t)v25;
LABEL_69:
    v119 = (unsigned __int8 *)v29;
    goto LABEL_70;
  }
  if (v25 == v13)
    goto LABEL_69;
  v31 = (unsigned __int8 *)v130[0];
  if (v25 == v130[0] || v25 == AllOnesValue)
    goto LABEL_69;
  if (v29 != AllOnesValue && v29 != v13 && v29 != (llvm::Value **)v120 && v29 != v130[0])
  {
    if ((v125 & 0xFFFFFFFE) != 0x20)
      return 0;
    v32 = *((unsigned __int8 *)v129 + 16);
    if (v32 == 5)
    {
      if (*((_WORD *)v129 + 9) != 28)
        goto LABEL_122;
      v55 = &v129[-4 * (*((_DWORD *)v129 + 5) & 0x7FFFFFF)];
      v33 = (llvm::Value **)*v55;
      if (!*v55)
        goto LABEL_122;
      v128 = (llvm::Value **)*v55;
      v25 = (llvm::Value **)v55[4];
      if (!v25)
        goto LABEL_122;
    }
    else if (v32 != 56
           || (v33 = (llvm::Value **)*(v129 - 8)) == 0
           || (v128 = (llvm::Value **)*(v129 - 8), (v25 = (llvm::Value **)*(v129 - 4)) == 0))
    {
LABEL_122:
      v128 = v129;
      v25 = (llvm::Value **)llvm::Constant::getAllOnesValue(*v129, v24);
      v127 = v25;
      v33 = v128;
      v26 = (uint64_t)v120;
      goto LABEL_123;
    }
    v127 = v25;
LABEL_123:
    if (v33 == v13 || v33 == (llvm::Value **)v26 || v33 == (llvm::Value **)v31 || v33 == AllOnesValue)
    {
      v119 = (unsigned __int8 *)v25;
      v25 = v33;
    }
    else if (v25 == AllOnesValue || v25 == v13 || v25 == (llvm::Value **)v31)
    {
      v119 = (unsigned __int8 *)v33;
    }
    else
    {
      v119 = (unsigned __int8 *)v33;
      if (v25 != (llvm::Value **)v26)
        return 0;
    }
    goto LABEL_72;
  }
  v119 = (unsigned __int8 *)v25;
  v25 = v29;
LABEL_70:
  if ((v125 & 0xFFFFFFFE) != 0x20)
    return 0;
  v22 = v129;
  v31 = (unsigned __int8 *)v130[0];
LABEL_72:
  if ((llvm::Value **)v26 == v25)
  {
    v15 = (unsigned __int8 *)v122;
  }
  else if (v31 == (unsigned __int8 *)v25)
  {
    v15 = (unsigned __int8 *)v122;
    v31 = (unsigned __int8 *)v26;
  }
  else if (v13 == v25)
  {
    v31 = (unsigned __int8 *)AllOnesValue;
  }
  else
  {
    if (AllOnesValue == v25)
      v31 = (unsigned __int8 *)v13;
    else
      v31 = 0;
    if (AllOnesValue != v25)
      v15 = 0;
  }
  v34 = sub_1C57BABC8((unsigned __int8 *)v25, v31, v15, v126);
  v35 = sub_1C57BABC8((unsigned __int8 *)v25, v119, (unsigned __int8 *)v22, v125);
  v36 = v35 & v34;
  if ((v35 & v34) == 0)
  {
    if ((a3 & 1) == 0)
    {
      v34 = (2 * v34) & 0x2AA | (v34 >> 1) & 0x155;
      v35 = (2 * v35) & 0x2AA | (v35 >> 1) & 0x155;
    }
    if ((v34 & 0x20) != 0 && (v35 & 0x100) != 0)
    {
      v41 = sub_1C57BAEE8((llvm::ConstantInt **)a1, a2, a3, (llvm::Constant *)v25, (uint64_t)v31, (uint64_t)v15, (llvm::ConstantExpr *)v119, (llvm::Constant *)v22, v125, a4);
    }
    else
    {
      if ((v34 & 0x100) == 0 || (v35 & 0x20) == 0)
        return 0;
      v41 = sub_1C57BAEE8((llvm::ConstantInt **)a2, a1, a3, (llvm::Constant *)v25, (uint64_t)v119, (uint64_t)v22, (llvm::ConstantExpr *)v31, (llvm::Constant *)v15, v126, a4);
    }
    v38 = (uint64_t)v41;
    if (v41)
      return v38;
    return 0;
  }
  if ((_DWORD)a3)
    v37 = 32;
  else
    v37 = 33;
  if ((a3 & 1) == 0)
    v36 = (2 * v36) & 0x2AA | (v36 >> 1) & 0x155;
  if ((v36 & 0x10) != 0)
  {
    v124 = 257;
    v42 = sub_1C4773594(a4, v31, (uint64_t)v119, (uint64_t)&v122);
    v124 = 257;
    v43 = v37;
    v44 = sub_1C4D89BCC(a4, v25, v42, (uint64_t)&v122);
    NullValue = llvm::Constant::getNullValue(*v25, v45);
    v124 = 257;
    v47 = a4;
    v48 = v43;
    v49 = v44;
    return sub_1C4774B48(v47, v48, v49, (uint64_t)NullValue, (uint64_t)&v122);
  }
  if ((v36 & 4) != 0)
  {
    v124 = 257;
    v51 = sub_1C4773594(a4, v31, (uint64_t)v119, (uint64_t)&v122);
    v52 = v37;
    v53 = (llvm::Value **)v51;
    v124 = 257;
    v49 = sub_1C4D89BCC(a4, v25, v51, (uint64_t)&v122);
    v124 = 257;
    v47 = a4;
    v48 = v52;
    NullValue = v53;
    return sub_1C4774B48(v47, v48, v49, (uint64_t)NullValue, (uint64_t)&v122);
  }
  if ((v36 & 1) != 0)
  {
    v124 = 257;
    v54 = sub_1C4D89BCC(a4, v31, (uint64_t)v119, (uint64_t)&v122);
    v124 = 257;
    v49 = sub_1C4D89BCC(a4, v25, v54, (uint64_t)&v122);
    v124 = 257;
    v47 = a4;
    v48 = v37;
    NullValue = v25;
    return sub_1C4774B48(v47, v48, v49, (uint64_t)NullValue, (uint64_t)&v122);
  }
  v129 = 0;
  v130[0] = 0;
  v122 = v130;
  v123 = 0;
  if (!sub_1C4D89F84((uint64_t)&v122, v31))
    return 0;
  v118 = v37;
  v120 = &v129;
  v121 = 0;
  v38 = 0;
  if ((sub_1C4D89F84((uint64_t)&v120, v119) & 1) == 0)
    return v38;
  if ((v36 & 0x28) != 0)
  {
    v39 = *((unsigned int *)v130[0] + 2);
    if (v39 >= 0x41)
    {
      __srcc = (const void **)v130[0];
      __n = ((unint64_t)(v39 + 63) >> 3) & 0x3FFFFFF8;
      v56 = (char *)operator new[]();
      memcpy(v56, *__srcc, __n);
      v57 = 0;
      __src = (const void **)v129;
      v58 = (uint64_t)*v129;
      do
      {
        *(_QWORD *)&v56[v57] &= *(_QWORD *)(v58 + v57);
        v57 += 8;
      }
      while (__n != v57);
      if (!memcmp(v56, *(const void **)v130[0], __n))
      {
LABEL_154:
        MEMORY[0x1CAA32F9C](v56, 0x1000C8000313F17);
        return a1;
      }
      __nc = memcmp(v56, *__src, __n);
      MEMORY[0x1CAA32F9C](v56, 0x1000C8000313F17);
      if (!__nc)
        return a2;
    }
    else
    {
      v40 = (llvm::Value *)((unint64_t)*v129 & (unint64_t)*v130[0]);
      if (v40 == *v130[0])
        return a1;
      if (v40 == *v129)
        return a2;
    }
  }
  if ((v36 & 2) == 0)
    goto LABEL_139;
  v61 = *((unsigned int *)v130[0] + 2);
  if (v61 >= 0x41)
  {
    __srcd = (const void **)v130[0];
    __nb = ((unint64_t)(v61 + 63) >> 3) & 0x3FFFFFF8;
    v56 = (char *)operator new[]();
    memcpy(v56, *__srcd, __nb);
    v63 = 0;
    __srca = (const void **)v129;
    v64 = (uint64_t)*v129;
    do
    {
      *(_QWORD *)&v56[v63] |= *(_QWORD *)(v64 + v63);
      v63 += 8;
    }
    while (__nb != v63);
    if (memcmp(v56, *(const void **)v130[0], __nb))
    {
      __nd = memcmp(v56, *__srca, __nb);
      MEMORY[0x1CAA32F9C](v56, 0x1000C8000313F17);
      v38 = a2;
      if (!__nd)
        return v38;
      goto LABEL_139;
    }
    goto LABEL_154;
  }
  v62 = (llvm::Value *)((unint64_t)*v129 | (unint64_t)*v130[0]);
  if (v62 == *v130[0])
    return a1;
  v38 = a2;
  if (v62 == *v129)
    return v38;
LABEL_139:
  if ((v36 & 0x100) == 0)
    return 0;
  v127 = 0;
  v128 = 0;
  v122 = &v128;
  v123 = 0;
  if (!sub_1C4D89F84((uint64_t)&v122, v15))
    return 0;
  v120 = &v127;
  v121 = 0;
  v38 = 0;
  if ((sub_1C4D89F84((uint64_t)&v120, (unsigned __int8 *)v22) & 1) == 0)
    return v38;
  if (v126 == v118)
  {
    v59 = (const void **)v128;
    __na = *((unsigned int *)v128 + 2);
    if (__na > 0x40)
    {
      __srcb = operator new[]();
      memcpy((void *)__srcb, *v59, ((__na + 63) >> 3) & 0x3FFFFFF8);
      goto LABEL_162;
    }
    v60 = (uint64_t)*v128;
    goto LABEL_158;
  }
  v65 = (const void **)v130[0];
  __na = *((unsigned int *)v130[0] + 2);
  if (__na <= 0x40)
  {
    v60 = (unint64_t)*v128 ^ (unint64_t)*v130[0];
LABEL_158:
    __srcb = v60;
    goto LABEL_162;
  }
  v66 = (_QWORD *)operator new[]();
  memcpy(v66, *v65, ((__na + 63) >> 3) & 0x3FFFFFF8);
  v67 = *v128;
  v68 = (__na + 63) >> 6;
  __srcb = (uint64_t)v66;
  do
  {
    v69 = *(_QWORD *)v67;
    v67 = (llvm::Value *)((char *)v67 + 8);
    *v66++ ^= v69;
    --v68;
  }
  while (v68);
LABEL_162:
  if (v125 == v118)
  {
    v70 = (const void **)v127;
    v106 = *((unsigned int *)v127 + 2);
    if (v106 > 0x40)
    {
      v71 = operator new[]();
      memcpy((void *)v71, *v70, ((unint64_t)(v106 + 63) >> 3) & 0x3FFFFFF8);
    }
    else
    {
      v71 = (unint64_t)*v127;
    }
  }
  else
  {
    v72 = (const void **)v129;
    v106 = *((unsigned int *)v129 + 2);
    if (v106 > 0x40)
    {
      v71 = operator new[]();
      memcpy((void *)v71, *v72, ((unint64_t)(v106 + 63) >> 3) & 0x3FFFFFF8);
      v73 = *v127;
      v74 = (unint64_t)(v106 + 63) >> 6;
      v75 = (_QWORD *)v71;
      do
      {
        v76 = *(_QWORD *)v73;
        v73 = (llvm::Value *)((char *)v73 + 8);
        *v75++ ^= v76;
        --v74;
      }
      while (v74);
    }
    else
    {
      v71 = (unint64_t)*v127 ^ (unint64_t)*v129;
    }
  }
  v77 = (const void **)v130[0];
  v107 = *((unsigned int *)v130[0] + 2);
  if (v107 > 0x40)
  {
    v78 = operator new[]();
    memcpy((void *)v78, *v77, ((unint64_t)(v107 + 63) >> 3) & 0x3FFFFFF8);
    v79 = (uint64_t *)*v129;
    v80 = (unint64_t)(v107 + 63) >> 6;
    v81 = (_QWORD *)v78;
    do
    {
      v82 = *v79++;
      *v81++ &= v82;
      --v80;
    }
    while (v80);
  }
  else
  {
    v78 = (unint64_t)*v129 & (unint64_t)*v130[0];
  }
  if (__na >= 0x41)
  {
    v84 = __na + 63;
    v85 = (char *)operator new[]();
    memcpy(v85, (const void *)__srcb, (v84 >> 3) & 0x3FFFFFF8);
    v86 = 0;
    v87 = v84 >> 6;
    v88 = 8 * (v84 >> 6);
    do
    {
      *(_QWORD *)&v85[v86] ^= *(_QWORD *)(v71 + v86);
      v86 += 8;
    }
    while (v88 != v86);
    v89 = 0;
    do
    {
      *(_QWORD *)&v85[v89] &= *(_QWORD *)(v78 + v89);
      v89 += 8;
    }
    while (v88 != v89);
    v90 = 0;
    do
    {
      if (v87-- < 1)
        break;
      v92 = *(_QWORD *)&v85[8 * v87];
      v90 += __clz(v92);
    }
    while (!v92);
    v93 = __na | 0xFFFFFFC0;
    if ((__na & 0x3F) == 0)
      v93 = 0;
    v83 = v90 + v93 == (_DWORD)__na;
    MEMORY[0x1CAA32F9C](v85, 0x1000C8000313F17);
  }
  else
  {
    v83 = (v78 & (v71 ^ __srcb)) == 0;
  }
  if (v107 >= 0x41 && v78)
    MEMORY[0x1CAA32F9C](v78, 0x1000C8000313F17);
  if (v83)
  {
    v124 = 257;
    v94 = sub_1C4773594(a4, v31, (uint64_t)v119, (uint64_t)&v122);
    v124 = 257;
    v96 = sub_1C4D89BCC(a4, v25, v94, (uint64_t)&v122);
    v97 = *v25;
    if (__na > 0x40)
    {
      v100 = __na + 63;
      v98 = (void *)operator new[]();
      memcpy(v98, (const void *)__srcb, (v100 >> 3) & 0x3FFFFFF8);
      v101 = v100 >> 6;
      v102 = (uint64_t *)v71;
      v103 = v98;
      do
      {
        v104 = *v102++;
        *v103++ |= v104;
        --v101;
      }
      while (v101);
    }
    else
    {
      v98 = (void *)(v71 | __srcb);
    }
    LODWORD(v123) = __na;
    v122 = (llvm::Value ***)v98;
    v105 = llvm::ConstantInt::get((llvm::ConstantInt **)v97, (llvm::Type *)&v122, v95);
    if (v123 >= 0x41 && v122)
      MEMORY[0x1CAA32F9C](v122, 0x1000C8000313F17);
    v124 = 257;
    v99 = sub_1C4774B48(a4, v118, v96, (uint64_t)v105, (uint64_t)&v122);
  }
  else
  {
    v99 = (uint64_t)llvm::ConstantInt::get(*(llvm::ConstantInt **)a1, a3 ^ 1, 0);
  }
  v38 = v99;
  if (v106 >= 0x41 && v71)
    MEMORY[0x1CAA32F9C](v71, 0x1000C8000313F17);
  if (__na >= 0x41 && __srcb)
    MEMORY[0x1CAA32F9C](__srcb, 0x1000C8000313F17);
  return v38;
}

unsigned __int8 *sub_1C57A6954(unsigned __int8 *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v13;
  __int16 v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  llvm *v20;
  unsigned __int8 *v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[32];
  __int16 v28;

  if (result)
  {
    v5 = result;
    v6 = (unsigned __int8 *)*((_QWORD *)result - 8);
    if (!v6)
      return 0;
    v7 = (unsigned __int8 *)*((_QWORD *)result - 4);
    if (!v7 || v7[16] > 0x14u)
      return 0;
    v13 = *(unsigned __int8 *)(a3 + 16);
    v14 = *((_WORD *)result + 9);
    v15 = sub_1C4F8BE80(*((uint64_t ****)result - 4), 0, 0, 0, 0, 0);
    v16 = v15;
    result = 0;
    if (!v16)
      return result;
    v17 = v13 == 56 ? 32 : 33;
    v18 = v6[16] >= 0x15u && v17 == (v14 & 0x3F);
    if (!v18 || a2 == 0)
      return 0;
    v20 = *(llvm **)(a2 - 64);
    v21 = *(unsigned __int8 **)(a2 - 32);
    if (v20 && v6 == v21)
    {
      v22 = *(_WORD *)(a2 + 18) & 0x3F;
      v23 = *(_QWORD *)(a2 - 64);
      v24 = (uint64_t)sub_1C4E66730(*(_WORD *)(a2 + 18) & 0x3F, v20, (llvm::UndefValue *)v7, a5, 3);
      if (v24)
      {
LABEL_24:
        v25 = *(unsigned __int8 *)(a3 + 16) - 28;
        v28 = 257;
        return sub_1C4773860(a4, v25, v5, v24, (uint64_t)v27, 0);
      }
      v26 = *(_QWORD *)(a2 + 8);
      if (v26 && !*(_QWORD *)(v26 + 8))
      {
        v28 = 257;
        v24 = sub_1C4774B48(a4, v22, v23, (uint64_t)v7, (uint64_t)v27);
        goto LABEL_24;
      }
      return 0;
    }
    result = 0;
    if (v21 && v6 == (unsigned __int8 *)v20)
      __asm { BR              X9 }
  }
  return result;
}

void sub_1C57A6AF8()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B00()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B08()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B10()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B18()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B20()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B28()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B30()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B38()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B40()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B48()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B50()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B58()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B60()
{
  JUMPOUT(0x1C57A6A40);
}

void sub_1C57A6B68()
{
  JUMPOUT(0x1C57A6A40);
}

uint64_t sub_1C57A6B74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  llvm::ConstantInt **v9;
  llvm::Value **v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  int *v14;
  int v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  v14 = (int *)&v21 + 1;
  v15 = 53;
  v16 = 0;
  v17 = &v20;
  v19 = 64;
  v18 = 1;
  if (!a1)
    return 0;
  v20 = 0;
  v21 = 0;
  if (!sub_1C4E75A6C((uint64_t)&v15, *(_QWORD *)(a1 - 64))
    || !sub_1C4D8A7F0((llvm::APInt *)&v18, *(unsigned __int8 **)(a1 - 32)))
  {
    if (v19 >= 0x41)
    {
      if (v18)
        MEMORY[0x1CAA32F9C](v18, 0x1000C8000313F17);
    }
    return 0;
  }
  *v14 = *(_WORD *)(a1 + 18) & 0x3F;
  if (a2)
  {
    if (v20 == *(_QWORD *)(a2 - 64) && sub_1C4D8AC3C((uint64_t)&v13, *(llvm::Constant **)(a2 - 32)))
    {
      LODWORD(v21) = *(_WORD *)(a2 + 18) & 0x3F;
      LOBYTE(a2) = 1;
    }
    else
    {
      LOBYTE(a2) = 0;
    }
  }
  if (v19 >= 0x41 && v18)
    MEMORY[0x1CAA32F9C](v18, 0x1000C8000313F17);
  if ((a2 & 1) == 0)
    return 0;
  v9 = *(llvm::ConstantInt ***)(a1 - 64);
  if (a3 && HIDWORD(v21) == 33 && (_DWORD)v21 == 33)
  {
    v10 = llvm::ConstantInt::get(*v9, 1, 0);
    LOWORD(v18) = 257;
    v11 = a4;
    v12 = 34;
    return sub_1C4774B48(v11, v12, (uint64_t)v9, (uint64_t)v10, (uint64_t)&v14);
  }
  result = 0;
  if (!a3 && HIDWORD(v21) == 32 && (_DWORD)v21 == 32)
  {
    v10 = llvm::ConstantInt::get(*v9, 2, 0);
    LOWORD(v18) = 257;
    v11 = a4;
    v12 = 36;
    return sub_1C4774B48(v11, v12, (uint64_t)v9, (uint64_t)v10, (uint64_t)&v14);
  }
  return result;
}

uint64_t sub_1C57A6D50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  llvm::ConstantInt ***v4;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  const llvm::APInt *v11;
  uint64_t v12;
  int v13;
  int v14;
  char v15;
  llvm::Type *v16;
  llvm::Type *v17;
  uint64_t v18;
  int8x8_t v19;
  uint8x8_t v20;
  llvm::Value **v21;
  uint64_t v22;
  const llvm::APInt *v23;
  llvm::Value **v24;
  char *v25;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  llvm::Type *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint8x8_t v37;
  _QWORD v38[4];
  __int16 v39;
  llvm::Type **v40;
  uint64_t v41;
  llvm::Type *v42;
  unsigned int *v43;

  v4 = *(llvm::ConstantInt ****)(a1 - 64);
  if (v4 != *(llvm::ConstantInt ****)(a2 - 64))
    return 0;
  v42 = 0;
  v43 = 0;
  v9 = *(unsigned __int8 **)(a1 - 32);
  v38[0] = &v43;
  v38[1] = 0;
  if (!sub_1C4D89F84((uint64_t)v38, v9))
    return 0;
  v10 = *(unsigned __int8 **)(a2 - 32);
  v40 = &v42;
  v41 = 0;
  v12 = 0;
  if ((sub_1C4D89F84((uint64_t)&v40, v10) & 1) == 0)
    return v12;
  v12 = 0;
  v13 = *(_WORD *)(a1 + 18) & 0x3F;
  v14 = v13 == 33 ? 0 : a3;
  v15 = a3 ^ 1;
  if (v13 == 32)
    v15 = 0;
  if ((v15 & 1) != 0 || v13 != (*(_WORD *)(a2 + 18) & 0x3F) || v14)
    return v12;
  v17 = v42;
  v16 = (llvm::Type *)v43;
  v18 = v43[2];
  if (v18 > 0x40)
  {
    v27 = ((unint64_t)(v18 + 63) >> 3) & 0x3FFFFFF8;
    while (v27)
    {
      v28 = *(_QWORD *)(*(_QWORD *)v43 - 8 + v27);
      v29 = *(_QWORD *)(*(_QWORD *)v42 - 8 + v27);
      v27 -= 8;
      if (v28 != v29)
      {
        if (v28 > v29)
          goto LABEL_25;
        break;
      }
    }
    v30 = v42;
    v17 = (llvm::Type *)v43;
  }
  else
  {
    if (*(_QWORD *)v43 <= *(_QWORD *)v42)
      goto LABEL_14;
LABEL_25:
    v42 = (llvm::Type *)v43;
    v43 = (unsigned int *)v17;
    v30 = v16;
    LODWORD(v18) = *((_DWORD *)v17 + 2);
  }
  if (v18 >= 0x41)
  {
    v31 = v18 + 63;
    v25 = (char *)operator new[]();
    memcpy(v25, *(const void **)v17, (v31 >> 3) & 0x3FFFFFF8);
    v32 = 0;
    v33 = *(_QWORD *)v42;
    v34 = 8 * (v31 >> 6);
    do
    {
      *(_QWORD *)&v25[v32] ^= *(_QWORD *)(v33 + v32);
      v32 += 8;
    }
    while (v34 != v32);
    v35 = 0;
    v36 = 0;
    LODWORD(v41) = v18;
    v40 = (llvm::Type **)v25;
    do
    {
      v37 = (uint8x8_t)vcnt_s8(*(int8x8_t *)&v25[v35]);
      v37.i16[0] = vaddlv_u8(v37);
      v36 += v37.i32[0];
      v35 += 8;
    }
    while (v34 != v35);
    if (v36 != 1)
    {
      v12 = 0;
LABEL_17:
      MEMORY[0x1CAA32F9C](v25, 0x1000C8000313F17);
      return v12;
    }
    goto LABEL_15;
  }
  v16 = v17;
  v17 = v30;
LABEL_14:
  v19 = (int8x8_t)(*(_QWORD *)v17 ^ *(_QWORD *)v16);
  LODWORD(v41) = v18;
  v40 = (llvm::Type **)v19;
  v20 = (uint8x8_t)vcnt_s8(v19);
  v20.i16[0] = vaddlv_u8(v20);
  if (v20.u32[0] != 1)
    return 0;
LABEL_15:
  v21 = llvm::ConstantInt::get(*v4, (llvm::Type *)&v40, v11);
  v39 = 257;
  v22 = sub_1C4773594(a4, v4, (uint64_t)v21, (uint64_t)v38);
  v24 = llvm::ConstantInt::get(*v4, v42, v23);
  v39 = 257;
  v12 = sub_1C4774B48(a4, v13, v22, (uint64_t)v24, (uint64_t)v38);
  if (v41 >= 0x41)
  {
    v25 = (char *)v40;
    if (v40)
      goto LABEL_17;
  }
  return v12;
}

uint64_t sub_1C57A7000(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  llvm::ConstantInt **v9;
  llvm::Value **v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  int *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_WORD *)(a2 + 18) & 0x3F;
  v27 = 0;
  if (a3)
  {
    if (v5 == 33)
      v6 = a1;
    else
      v6 = a2;
    if (v5 == 33)
      v7 = a2;
    else
      v7 = a1;
    v23 = (int *)&v27 + 1;
    v24 = &v26;
    if (v7)
    {
      if (*(_QWORD *)(v7 - 64))
      {
        v26 = *(_QWORD *)(v7 - 64);
        if (sub_1C4D8AC3C((uint64_t)&v25, *(llvm::Constant **)(v7 - 32)))
        {
          *v23 = *(_WORD *)(v7 + 18) & 0x3F;
          v17 = &v27;
          v18 = 53;
          v19 = 0;
          v20 = v26;
          v22 = 64;
          v21 = 2;
          v8 = 0;
          if (sub_1C57BBEC8((int **)&v17, v6))
            v8 = v27 == 0x2100000024;
          if (v22 >= 0x41)
          {
            if (v21)
              MEMORY[0x1CAA32F9C](v21, 0x1000C8000313F17);
          }
          if (v8)
          {
            v9 = *(llvm::ConstantInt ***)(v6 - 64);
            v10 = llvm::ConstantInt::get(*v9, 1, 0);
            LOWORD(v21) = 257;
            v11 = a4;
            v12 = 32;
            return sub_1C4774B48(v11, v12, (uint64_t)v9, (uint64_t)v10, (uint64_t)&v17);
          }
        }
      }
    }
  }
  else
  {
    if (v5 == 32)
      v13 = a1;
    else
      v13 = a2;
    if (v5 == 32)
      v14 = a2;
    else
      v14 = a1;
    v23 = (int *)&v27 + 1;
    v24 = &v26;
    if (v14)
    {
      if (*(_QWORD *)(v14 - 64))
      {
        v26 = *(_QWORD *)(v14 - 64);
        if (sub_1C4D8AC3C((uint64_t)&v25, *(llvm::Constant **)(v14 - 32)))
        {
          *v23 = *(_WORD *)(v14 + 18) & 0x3F;
          v17 = &v27;
          v18 = 53;
          v19 = 0;
          v20 = v26;
          v22 = 64;
          v21 = 1;
          v15 = 0;
          if (sub_1C57BBEC8((int **)&v17, v13))
            v15 = v27 == 0x2000000022;
          if (v22 >= 0x41 && v21)
            MEMORY[0x1CAA32F9C](v21, 0x1000C8000313F17);
          if (v15)
          {
            v9 = *(llvm::ConstantInt ***)(v13 - 64);
            v10 = llvm::ConstantInt::get(*v9, 1, 0);
            LOWORD(v21) = 257;
            v11 = a4;
            v12 = 33;
            return sub_1C4774B48(v11, v12, (uint64_t)v9, (uint64_t)v10, (uint64_t)&v17);
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1C57A7240(uint64_t a1, uint64_t a2, int a3, int **a4, uint64_t a5)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int *v23;
  int **v24;
  uint64_t result;
  unsigned __int8 *v26;
  int **v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  int *v33;
  int v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  int *v38;
  int *v39;
  uint64_t v40;
  int *v41;
  int v42;
  int *v43;
  uint64_t v44;
  int *v45;
  _BYTE v46[32];
  __int16 v47;
  int v48;
  int v49;
  uint64_t v50;
  int *v51;
  int *v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  char v56;

  v49 = 0;
  v50 = 0;
  v51 = &v49;
  v52 = (int *)&v50;
  if (!sub_1C4E7596C((uint64_t)&v51, a1))
    return 0;
  v10 = v49;
  if ((v49 & 0xFFFFFFFE) != 0x20)
    return 0;
  v48 = 0;
  if (a2)
  {
    v11 = *(_QWORD *)(a2 - 64);
    v12 = *(_QWORD *)(a2 - 32);
    if (v50 == v11 && v12)
    {
      v13 = *(_WORD *)(a2 + 18) & 0x3F;
      v14 = *(_QWORD *)(a2 - 32);
      v48 = v13;
      v15 = *(unsigned __int8 *)(v50 + 16);
      if (v15 == 5)
      {
        if (*(_WORD *)(v50 + 18) != 13)
          goto LABEL_29;
        v18 = (uint64_t *)(v50 - 32 * (*(_DWORD *)(v50 + 20) & 0x7FFFFFF));
        v17 = v18[4];
        if (v14 != *v18 || !v17)
        {
          v19 = *v18 && v14 == v17;
          v17 = *v18;
          if (!v19)
            goto LABEL_29;
        }
      }
      else
      {
        if (v15 != 41)
          goto LABEL_29;
        v16 = *(_QWORD *)(v50 - 64);
        v17 = *(_QWORD *)(v50 - 32);
        if (v14 != v16 || !v17)
        {
          if (!v16)
            goto LABEL_29;
          v19 = v14 == v17;
          v17 = *(_QWORD *)(v50 - 64);
          if (!v19)
            goto LABEL_29;
        }
      }
      v20 = *(_QWORD *)(a1 + 8);
      if (!v20 || *(_QWORD *)(v20 + 8))
      {
        v21 = *(_QWORD *)(a2 + 8);
        if (!v21 || *(_QWORD *)(v21 + 8))
          goto LABEL_29;
      }
      if (v49 == 33 && v13 == 37 && a3)
      {
        LOWORD(v55) = 257;
        v26 = sub_1C5346748(a5, v17, (uint64_t)&v51, 0, 0);
        v47 = 257;
        v27 = (int **)v46;
        v28 = a5;
        v29 = 36;
LABEL_43:
        v30 = v14;
        return sub_1C4774B48(v28, v29, (uint64_t)v26, v30, (uint64_t)v27);
      }
      if (v49 == 33 && v13 == 36 && a3)
      {
        v31 = a4[3];
        v32 = (uint64_t)a4[4];
        v33 = a4[2];
        if (!v32 || !*(_QWORD *)(v32 + 40))
        {
          if (*(unsigned __int8 *)(v17 + 16) < 0x1Cu || (v32 = v17, !*(_QWORD *)(v17 + 40)))
            v32 = 0;
        }
        v51 = *a4;
        v52 = v31;
        v53 = v32;
        v54 = v33;
        v55 = 0;
        v56 = 1;
        v34 = sub_1C4F84D74(v17, 0, (uint64_t)&v51);
        if (v34)
          v35 = v14;
        else
          v35 = v17;
        if (!v34)
          v17 = v14;
        v36 = a4[3];
        v37 = (uint64_t)a4[4];
        v38 = a4[2];
        if (!v37 || !*(_QWORD *)(v37 + 40))
        {
          if (*(unsigned __int8 *)(v17 + 16) < 0x1Cu || (v37 = v17, !*(_QWORD *)(v17 + 40)))
            v37 = 0;
        }
        v51 = *a4;
        v52 = v36;
        v53 = v37;
        v54 = v38;
        v55 = 0;
        v56 = 1;
        if ((sub_1C4F84D74(v17, 0, (uint64_t)&v51) & 1) != 0)
        {
          LOWORD(v55) = 257;
          v26 = sub_1C5346748(a5, v17, (uint64_t)&v51, 0, 0);
          v47 = 257;
          v27 = (int **)v46;
          v28 = a5;
          v29 = 36;
LABEL_70:
          v30 = v35;
          return sub_1C4774B48(v28, v29, (uint64_t)v26, v30, (uint64_t)v27);
        }
        v13 = v48;
        v10 = v49;
      }
      else
      {
        v35 = v14;
      }
      if (v13 == 34 && v10 == 32 && (a3 & 1) == 0)
      {
        LOWORD(v55) = 257;
        v26 = sub_1C5346748(a5, v17, (uint64_t)&v51, 0, 0);
        v47 = 257;
        v27 = (int **)v46;
        v28 = a5;
        v29 = 35;
        goto LABEL_70;
      }
      if (v13 == 35 && v10 == 32 && (a3 & 1) == 0)
      {
        v39 = a4[3];
        v40 = (uint64_t)a4[4];
        v41 = a4[2];
        if (!v40 || !*(_QWORD *)(v40 + 40))
        {
          if (*(unsigned __int8 *)(v17 + 16) < 0x1Cu || (v40 = v17, !*(_QWORD *)(v17 + 40)))
            v40 = 0;
        }
        v51 = *a4;
        v52 = v39;
        v53 = v40;
        v54 = v41;
        v55 = 0;
        v56 = 1;
        v42 = sub_1C4F84D74(v17, 0, (uint64_t)&v51);
        if (v42)
          v14 = v35;
        else
          v14 = v17;
        if (!v42)
          v17 = v35;
        v43 = a4[3];
        v44 = (uint64_t)a4[4];
        v45 = a4[2];
        if (!v44 || !*(_QWORD *)(v44 + 40))
        {
          if (*(unsigned __int8 *)(v17 + 16) < 0x1Cu || (v44 = v17, !*(_QWORD *)(v17 + 40)))
            v44 = 0;
        }
        v51 = *a4;
        v52 = v43;
        v53 = v44;
        v54 = v45;
        v55 = 0;
        v56 = 1;
        if (sub_1C4F84D74(v17, 0, (uint64_t)&v51))
        {
          LOWORD(v55) = 257;
          v26 = sub_1C5346748(a5, v17, (uint64_t)&v51, 0, 0);
          v47 = 257;
          v27 = (int **)v46;
          v28 = a5;
          v29 = 35;
          goto LABEL_43;
        }
      }
    }
    else if (v11 && v50 == v12)
    {
      __asm { BR              X12 }
    }
  }
LABEL_29:
  v22 = *(unsigned __int8 *)(v50 + 16);
  if (v22 == 5)
  {
    if (*(_WORD *)(v50 + 18) != 15)
      return 0;
    v24 = (int **)(v50 - 32 * (*(_DWORD *)(v50 + 20) & 0x7FFFFFF));
    v23 = *v24;
    if (!*v24)
      return 0;
    v14 = (uint64_t)v24[4];
    if (!v14)
      return 0;
  }
  else
  {
    if (v22 != 43)
      return 0;
    v23 = *(int **)(v50 - 64);
    if (!v23)
      return 0;
    v14 = *(_QWORD *)(v50 - 32);
    if (!v14)
      return 0;
  }
  v51 = &v48;
  v52 = v23;
  v53 = v14;
  if (!sub_1C619B2F8((uint64_t)&v51, a2) || (v48 - 34) >= 4)
    return 0;
  if ((v48 & 0xFFFFFFFE) == 0x22 && v49 == 33 && a3)
  {
    LOWORD(v55) = 257;
    v27 = &v51;
    v28 = a5;
    v29 = 34;
LABEL_104:
    v26 = (unsigned __int8 *)v23;
    goto LABEL_43;
  }
  if ((v48 & 0xFFFFFFFE) == 0x24 && v49 == 32 && (a3 & 1) == 0)
  {
    LOWORD(v55) = 257;
    v27 = &v51;
    v28 = a5;
    v29 = 37;
    goto LABEL_104;
  }
  if (v48 == 37 && v49 == 33 && a3)
  {
    LOWORD(v55) = 257;
    v27 = &v51;
    v28 = a5;
    v29 = 36;
    goto LABEL_104;
  }
  result = 0;
  if (v48 == 34 && v49 == 32 && (a3 & 1) == 0)
  {
    LOWORD(v55) = 257;
    v27 = &v51;
    v28 = a5;
    v29 = 35;
    goto LABEL_104;
  }
  return result;
}

void sub_1C57A7850()
{
  JUMPOUT(0x1C57A7304);
}

uint64_t sub_1C57A785C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  const llvm::APInt *v21;
  llvm::ConstantInt **v22;
  _QWORD *v23;
  int v24;
  int64_t v25;
  unint64_t v27;
  unsigned int v28;
  llvm::Value **v29;
  uint64_t v30;
  char *v31;
  llvm::Value ***v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  llvm::Value *v37;
  llvm::Value ****v38;
  llvm::Value *v39;
  __int16 v40;
  llvm::Value **v41;
  uint64_t v43;
  _WORD v44[20];
  _QWORD *v45;
  unsigned int v46;
  void *v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  char v54;
  uint64_t *v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t *v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  unint64_t **v63;
  unint64_t **v64;
  uint64_t *v65;
  unint64_t ***v66;
  uint64_t v67;
  unsigned int v68;
  __int16 v69;

  v13 = a2;
  v63 = 0;
  v64 = 0;
  if (a2 == a5)
    goto LABEL_22;
  v15 = a5;
  v65 = &v50;
  v66 = &v64;
  v67 = 0;
  v16 = *(unsigned __int8 *)(a2 + 16);
  if (v16 != 5)
  {
    if (v16 != 41)
      goto LABEL_11;
    if (!*(_QWORD *)(a2 - 64))
      goto LABEL_11;
    v50 = *(_QWORD *)(a2 - 64);
    if (!sub_1C4D89F84((uint64_t)&v66, *(unsigned __int8 **)(a2 - 32)))
      goto LABEL_11;
LABEL_10:
    v13 = v50;
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 18) == 13)
  {
    v17 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
    if (*(_QWORD *)v17)
    {
      v50 = *(_QWORD *)v17;
      if ((sub_1C4D8A004((uint64_t)&v66, *(llvm::Constant **)(v17 + 32)) & 1) != 0)
        goto LABEL_10;
    }
  }
LABEL_11:
  v65 = &v50;
  v66 = &v63;
  v67 = 0;
  v18 = *(unsigned __int8 *)(v15 + 16);
  if (v18 != 5)
  {
    if (v18 != 41)
      goto LABEL_20;
    if (!*(_QWORD *)(v15 - 64))
      goto LABEL_20;
    v50 = *(_QWORD *)(v15 - 64);
    if (!sub_1C4D89F84((uint64_t)&v66, *(unsigned __int8 **)(v15 - 32)))
      goto LABEL_20;
LABEL_19:
    v15 = v50;
    goto LABEL_20;
  }
  if (*(_WORD *)(v15 + 18) == 13)
  {
    v19 = v15 - 32 * (*(_DWORD *)(v15 + 20) & 0x7FFFFFF);
    if (*(_QWORD *)v19)
    {
      v50 = *(_QWORD *)v19;
      if ((sub_1C4D8A004((uint64_t)&v66, *(llvm::Constant **)(v19 + 32)) & 1) != 0)
        goto LABEL_19;
    }
  }
LABEL_20:
  if (v13 != v15)
    return 0;
LABEL_22:
  llvm::ConstantRange::makeExactICmpRegion(&v59, a1, a3);
  if (v64)
  {
    llvm::ConstantRange::subtract((char *)&v59, v64, (llvm::APInt *)&v65);
    if (v60 >= 0x41 && v59)
      MEMORY[0x1CAA32F9C](v59, 0x1000C8000313F17);
    v59 = v65;
    v60 = v66;
    LODWORD(v66) = 0;
    if (v62 >= 0x41 && v61)
    {
      MEMORY[0x1CAA32F9C](v61, 0x1000C8000313F17);
      v61 = v67;
      v62 = v68;
      v68 = 0;
      if (v66 >= 0x41 && v65)
        MEMORY[0x1CAA32F9C](v65, 0x1000C8000313F17);
    }
    else
    {
      v61 = v67;
      v62 = v68;
    }
  }
  llvm::ConstantRange::makeExactICmpRegion(&v55, a4, a6);
  if (v63)
  {
    llvm::ConstantRange::subtract((char *)&v55, v63, (llvm::APInt *)&v65);
    if (v56 >= 0x41 && v55)
      MEMORY[0x1CAA32F9C](v55, 0x1000C8000313F17);
    v55 = v65;
    v56 = v66;
    LODWORD(v66) = 0;
    if (v58 >= 0x41 && v57)
    {
      MEMORY[0x1CAA32F9C](v57, 0x1000C8000313F17);
      v57 = v67;
      v58 = v68;
      v68 = 0;
      if (v66 >= 0x41 && v65)
        MEMORY[0x1CAA32F9C](v65, 0x1000C8000313F17);
    }
    else
    {
      v57 = v67;
      v58 = v68;
    }
  }
  if (a8)
    llvm::ConstantRange::exactIntersectWith((llvm::ConstantRange *)&v59, (const llvm::ConstantRange *)&v55, (uint64_t)&v50);
  else
    llvm::ConstantRange::exactUnionWith((llvm::ConstantRange *)&v59, (const llvm::ConstantRange *)&v55, (uint64_t)&v50);
  if (v54)
  {
    v49 = 0;
    v48 = 1;
    v47 = 0;
    v46 = 1;
    v45 = 0;
    llvm::ConstantRange::getEquivalentICmp((uint64_t)&v50, &v49, &v47, (uint64_t *)&v45);
    v22 = *(llvm::ConstantInt ***)v13;
    v23 = v45;
    if (v46 >= 0x41)
    {
      v24 = 0;
      v25 = ((unint64_t)v46 + 63) >> 6;
      do
      {
        if (v25-- < 1)
          break;
        v27 = v45[v25];
        v24 += __clz(v27);
      }
      while (!v27);
      v28 = v46 | 0xFFFFFFC0;
      if ((v46 & 0x3F) == 0)
        v28 = 0;
      if (v46 - v24 - v28 > 0x40)
        goto LABEL_43;
      v23 = (_QWORD *)*v45;
    }
    if (!v23)
    {
LABEL_53:
      v40 = v49;
      v41 = llvm::ConstantInt::get(v22, (llvm::Type *)&v47, v21);
      v69 = 257;
      v20 = sub_1C4774B48(a7, v40, v13, (uint64_t)v41, (uint64_t)&v65);
      if (v46 >= 0x41 && v45)
        MEMORY[0x1CAA32F9C](v45, 0x1000C8000313F17);
      if (v48 >= 0x41 && v47)
        MEMORY[0x1CAA32F9C](v47, 0x1000C8000313F17);
      if (v54)
      {
        if (v53 >= 0x41 && v52)
          MEMORY[0x1CAA32F9C](v52, 0x1000C8000313F17);
        if (v51 >= 0x41 && v50)
          MEMORY[0x1CAA32F9C](v50, 0x1000C8000313F17);
      }
      goto LABEL_65;
    }
LABEL_43:
    v29 = llvm::ConstantInt::get(*(llvm::ConstantInt ***)v13, (llvm::Type *)&v45, v21);
    v44[16] = 257;
    v30 = (*(uint64_t (**)(_QWORD, uint64_t, llvm::Value **, _QWORD, _QWORD))(**(_QWORD **)(a7 + 72) + 16))(*(_QWORD *)(a7 + 72), v13, v29, 0, 0);
    if (!v30)
    {
      v69 = 257;
      v31 = (char *)operator new(0x80uLL);
      *(_QWORD *)v31 = 0;
      *((_QWORD *)v31 + 2) = 0;
      *((_QWORD *)v31 + 1) = 0;
      *((_QWORD *)v31 + 5) = 0;
      *((_QWORD *)v31 + 6) = 0;
      *((_QWORD *)v31 + 4) = 0;
      v32 = (llvm::Value ***)(v31 + 32);
      *((_QWORD *)v31 + 8) = *(_QWORD *)v13;
      v33 = (uint64_t)(v31 + 64);
      *((_QWORD *)v31 + 3) = v31 + 64;
      *((_QWORD *)v31 + 7) = v31 + 64;
      *((_QWORD *)v31 + 9) = 0;
      v31[80] = 41;
      v31[81] = 0;
      *((_WORD *)v31 + 41) = 0;
      *((_DWORD *)v31 + 21) = 2;
      *((_DWORD *)v31 + 30) = 0;
      *(_OWORD *)(v31 + 104) = 0u;
      *(_OWORD *)(v31 + 88) = 0u;
      *(_QWORD *)v31 = v13;
      v36 = *(_QWORD *)(v13 + 8);
      v35 = (_QWORD *)(v13 + 8);
      v34 = v36;
      *((_QWORD *)v31 + 1) = v36;
      if (v36)
        *(_QWORD *)(v34 + 16) = v31 + 8;
      *((_QWORD *)v31 + 2) = v35;
      *v35 = v31;
      if (*((_QWORD *)v31 + 4))
      {
        **((_QWORD **)v31 + 6) = *((_QWORD *)v31 + 5);
        v43 = *((_QWORD *)v31 + 5);
        if (v43)
          *(_QWORD *)(v43 + 16) = *((_QWORD *)v31 + 6);
      }
      *v32 = v29;
      if (v29)
      {
        v39 = v29[1];
        v38 = (llvm::Value ****)(v29 + 1);
        v37 = v39;
        *((_QWORD *)v31 + 5) = v39;
        if (v39)
          *((_QWORD *)v37 + 2) = v31 + 40;
        *((_QWORD *)v31 + 6) = v38;
        *v38 = v32;
      }
      llvm::Value::setName((uint64_t ***)v31 + 8, (uint64_t)&v65);
      v30 = sub_1C4773754((uint64_t *)a7, v33, (uint64_t)v44);
    }
    v13 = v30;
    goto LABEL_53;
  }
  v20 = 0;
LABEL_65:
  if (v58 >= 0x41 && v57)
    MEMORY[0x1CAA32F9C](v57, 0x1000C8000313F17);
  if (v56 >= 0x41 && v55)
    MEMORY[0x1CAA32F9C](v55, 0x1000C8000313F17);
  if (v62 >= 0x41 && v61)
    MEMORY[0x1CAA32F9C](v61, 0x1000C8000313F17);
  if (v60 >= 0x41 && v59)
    MEMORY[0x1CAA32F9C](v59, 0x1000C8000313F17);
  return v20;
}

uint64_t sub_1C57A7EF8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  llvm::Constant *v9;
  uint64_t v10;
  uint64_t v12;
  BOOL v15;
  uint64_t result;
  BOOL v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  int v28;
  int v29;
  _BYTE v30[32];
  __int16 v31;
  unsigned int v32;

  v6 = *(uint64_t **)(a2 - 64);
  v7 = *(_QWORD *)(a2 - 32);
  v8 = *(uint64_t **)(a3 - 64);
  v9 = *(llvm::Constant **)(a3 - 32);
  v10 = *(_WORD *)(a3 + 18) & 0x3F;
  if (v6 == (uint64_t *)v9 && v8 == (uint64_t *)v7)
    __asm { BR              X11 }
  v12 = *(_WORD *)(a2 + 18) & 0x3F;
  if (v6 == v8 && v7 == (_QWORD)v9)
  {
    v19 = v10 & v12;
    v20 = v10 | v12;
    if (a4)
      v21 = v19;
    else
      v21 = v20;
    v22 = *(_QWORD *)(a1 + 24);
    v23 = *(_DWORD *)(v22 + 96);
    v24 = *(_QWORD *)(v22 + 88);
    v25 = *(_BYTE *)(v22 + 100);
    v26 = *(_BYTE *)(v22 + 101);
    v27 = *(_BYTE *)(v22 + 102);
    v28 = *(unsigned __int8 *)(a2 + 17) >> 1;
    if (v28 == 127)
      v28 = -1;
    v29 = *(unsigned __int8 *)(a3 + 17) >> 1;
    if (v29 == 127)
      v29 = -1;
    *(_DWORD *)(v22 + 96) = v29 & v28;
    v32 = 0;
    result = (uint64_t)llvm::getPredForFCmpCode(v21, (_DWORD *)*v6, &v32);
    if (!result)
    {
      v31 = 257;
      result = llvm::IRBuilderBase::CreateFCmpHelper(v22, v32, v6, v7, (uint64_t)v30, 0, 0);
    }
    *(_DWORD *)(v22 + 96) = v23;
    *(_QWORD *)(v22 + 88) = v24;
    *(_BYTE *)(v22 + 100) = v25;
    *(_BYTE *)(v22 + 101) = v26;
    *(_BYTE *)(v22 + 102) = v27;
  }
  else
  {
    if ((a5 & 1) != 0)
      return 0;
    v15 = (_DWORD)v12 != 7 || (_DWORD)v10 != 7 || a4 == 0;
    if (!v15 || ((result = 0, (_DWORD)v12 == 8) ? (v17 = (_DWORD)v10 == 8) : (v17 = 0), v17 && (a4 & 1) == 0))
    {
      if (*v6 == *v8 && sub_1C4E7BA90((uint64_t)v30, *(llvm::Constant **)(a2 - 32)) && sub_1C4E7BA90((uint64_t)&v32, v9))
      {
        v18 = *(_QWORD *)(a1 + 24);
        v31 = 257;
        return llvm::IRBuilderBase::CreateFCmpHelper(v18, v12, v6, (uint64_t)v8, (uint64_t)v30, 0, 0);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_1C57A8140(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned int v4;
  BOOL v5;
  _BOOL8 result;

  v3 = *(a2 - 4);
  result = 0;
  if (*(_QWORD *)v3 != *a2)
  {
    v4 = *(unsigned __int8 *)(v3 + 16);
    if (v4 >= 0x15)
    {
      v5 = v4 >= 0x1C && v4 - 79 >= 0xFFFFFFF3;
      if (!v5 || !sub_1C57DD204(a1, v3, (uint64_t)a2))
        return 1;
    }
  }
  return result;
}

void sub_1C57A8198(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  llvm::Constant *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  _QWORD **v18;
  _QWORD *v19;
  llvm::UndefValue *v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  _QWORD **v25;
  unsigned __int8 *v26;
  _DWORD *v27;
  _QWORD *v28;
  llvm::UndefValue *v29;
  unsigned int v30;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 **v41;
  unsigned __int8 *v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  _DWORD *v52;
  unsigned __int8 *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[4];
  __int16 v58;

  v2 = *((_QWORD *)a2 - 8);
  v3 = *(unsigned __int8 *)(v2 + 16);
  if (v2)
    v4 = v3 >= 0x1C;
  else
    v4 = 0;
  if (v4 && v3 - 79 >= 0xFFFFFFF3)
  {
    v8 = **(_QWORD **)(v2 - 32);
    v9 = (*(_DWORD *)(v8 + 8) & 0xFE) == 0x12
       ? *(unsigned __int8 *)(**(_QWORD **)(v8 + 16) + 8)
       : *(_DWORD *)(v8 + 8);
    if (v9 == 13)
    {
      v10 = a2[16] - 28;
      v11 = (unsigned __int8 *)*((_QWORD *)a2 - 4);
      v12 = *(llvm::Constant **)a2;
      if (!v11)
        goto LABEL_39;
      if (v11[16] > 0x14u)
        goto LABEL_39;
      v13 = *(_QWORD *)(v2 + 8);
      if (!v13)
        goto LABEL_39;
      v14 = *(_QWORD *)(a1 + 24);
      v15 = *(_QWORD *)(v13 + 8);
      if (v3 == 67 && v15 == 0)
      {
        v17 = *(_DWORD *)(v2 + 20);
        if ((v17 & 0x40000000) != 0)
          v18 = *(_QWORD ***)(v2 - 8);
        else
          v18 = (_QWORD **)(v2 - 32 * (v17 & 0x7FFFFFF));
        v19 = *v18;
        if (*v18)
        {
          v20 = sub_1C537D3B8((llvm *)0x26, *((_QWORD *)a2 - 4), **(llvm::Constant ***)(v2 - 32), 0);
          if (sub_1C537D3B8((llvm *)0x27, (uint64_t)v20, v12, 0) == (llvm::UndefValue *)v11)
          {
            v58 = 257;
            v26 = sub_1C4773860(v14, v10, v19, (uint64_t)v20, (uint64_t)v57, 0);
            v27 = operator new(0x60uLL);
            v27[13] = v27[13] & 0x38000000 | 1;
            *(_QWORD *)v27 = 0;
            *((_QWORD *)v27 + 1) = 0;
            *((_QWORD *)v27 + 2) = 0;
            *((_QWORD *)v27 + 3) = v27 + 8;
            v58 = 257;
            llvm::ZExtInst::ZExtInst((uint64_t)(v27 + 8), (uint64_t)v26, (uint64_t)v12, (uint64_t)v57, 0);
            return;
          }
          v21 = *(_QWORD *)(v2 + 8);
          if (!v21 || *(_QWORD *)(v21 + 8))
            goto LABEL_39;
        }
      }
      else if (v15)
      {
        goto LABEL_39;
      }
      v22 = *(unsigned __int8 *)(v2 + 16);
      if (v22 > 0x1B)
        v23 = v22 - 28;
      else
        v23 = *(unsigned __int16 *)(v2 + 18);
      if (v23 == 40)
      {
        v24 = *(_DWORD *)(v2 + 20);
        v25 = (v24 & 0x40000000) != 0 ? *(_QWORD ***)(v2 - 8) : (_QWORD **)(v2 - 32 * (v24 & 0x7FFFFFF));
        v28 = *v25;
        if (*v25)
        {
          v29 = sub_1C537D3B8((llvm *)0x26, (uint64_t)v11, (llvm::Constant *)v8, 0);
          if (sub_1C537D3B8((llvm *)0x28, (uint64_t)v29, v12, 0) == (llvm::UndefValue *)v11)
          {
            v58 = 257;
            v51 = sub_1C4773860(v14, v10, v28, (uint64_t)v29, (uint64_t)v57, 0);
            v52 = operator new(0x60uLL);
            v52[13] = v52[13] & 0x38000000 | 1;
            *(_QWORD *)v52 = 0;
            *((_QWORD *)v52 + 1) = 0;
            *((_QWORD *)v52 + 2) = 0;
            *((_QWORD *)v52 + 3) = v52 + 8;
            v58 = 257;
            llvm::SExtInst::SExtInst((uint64_t)(v52 + 8), (uint64_t)v51, (uint64_t)v12, (uint64_t)v57, 0);
            return;
          }
        }
      }
LABEL_39:
      if (!v11)
        return;
      v30 = v11[16];
      if (v30 < 0x1C || v30 - 79 < 0xFFFFFFF3)
        return;
      v32 = *(unsigned __int8 *)(v2 + 16);
      if (v32 != v30)
        return;
      v33 = *((_QWORD *)v11 - 4);
      if (v8 != *(_QWORD *)v33)
        return;
      v34 = v32 - 28;
      v35 = *(_QWORD *)(v2 - 32);
      if (!sub_1C57A8140(a1, (_QWORD *)v2) || !sub_1C57A8140(a1, v11))
      {
        if ((_DWORD)v10 == 30)
          return;
        v45 = *(unsigned __int8 *)(v35 + 16);
        if (v45 == 81)
          v46 = v35;
        else
          v46 = 0;
        v47 = *(unsigned __int8 *)(v33 + 16);
        if (v47 == 81)
          v48 = v33;
        else
          v48 = 0;
        if (v46 && v47 == 81)
        {
          if ((_DWORD)v10 == 28)
            v49 = sub_1C57A48A8(a1, v46, v48, (llvm::AssumptionCache *)a2);
          else
            v49 = sub_1C57A85E8(a1, v46, v48, (llvm::AssumptionCache *)a2);
          if (!v49)
            return;
        }
        else
        {
          if (v45 == 82)
            v50 = v35;
          else
            v50 = 0;
          if (!v50 || v47 != 82 || !sub_1C57A7EF8(a1, v50, v33, v10 == 28, 0))
            return;
        }
LABEL_82:
        v58 = 257;
        llvm::CastInst::Create(v34);
        return;
      }
      v36 = *(_QWORD *)(a1 + 24);
      if ((a2[23] & 0x10) == 0)
      {
        v55 = 0;
        v54 = &byte_1C871356D;
        goto LABEL_81;
      }
      v37 = ***(_QWORD ***)a2;
      v38 = *(_QWORD *)(v37 + 152);
      v39 = *(unsigned int *)(v37 + 168);
      if ((_DWORD)v39)
      {
        LODWORD(v40) = (v39 - 1) & ((a2 >> 4) ^ (a2 >> 9));
        v41 = (unsigned __int8 **)(v38 + 16 * v40);
        v42 = *v41;
        if (*v41 == a2)
        {
LABEL_80:
          v53 = v41[1];
          v56 = *(_QWORD *)v53;
          v54 = (char *)(v53 + 16);
          v55 = v56;
LABEL_81:
          v58 = 261;
          v57[0] = v54;
          v57[1] = v55;
          sub_1C4773860(v36, v10, (_QWORD *)v35, v33, (uint64_t)v57, 0);
          goto LABEL_82;
        }
        v43 = 1;
        while (v42 != (unsigned __int8 *)-4096)
        {
          v44 = v40 + v43++;
          v40 = v44 & (v39 - 1);
          v42 = *(unsigned __int8 **)(v38 + 16 * v40);
          if (v42 == a2)
          {
            v41 = (unsigned __int8 **)(v38 + 16 * v40);
            goto LABEL_80;
          }
        }
      }
      v41 = (unsigned __int8 **)(v38 + 16 * v39);
      goto LABEL_80;
    }
  }
}

uint64_t sub_1C57A85E8(uint64_t a1, uint64_t a2, uint64_t a3, llvm::AssumptionCache *a4)
{
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  BOOL v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL4 v40;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  llvm::Type *v45;
  unsigned __int8 *v46;
  _QWORD *v47;
  llvm::Constant *v50;
  int v51;
  llvm::Value **v52;
  uint64_t v53;
  llvm::ValueHandleBase *AllOnesValue;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  __int16 v66;
  llvm::Value **NullValue;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  const void **v71;
  uint64_t v72;
  char *v73;
  BOOL v74;
  unsigned int *v75;
  uint64_t v76;
  uint8x8_t v77;
  _QWORD *v78;
  uint64_t *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  int v83;
  int8x8_t *v84;
  int8x8_t v85;
  uint8x8_t v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _BOOL4 v100;
  const void **v101;
  unsigned int v102;
  uint64_t v103;
  unsigned int v104;
  const void *v105;
  unint64_t v106;
  const llvm::APInt *v107;
  unint64_t v108;
  unint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _BOOL4 v116;
  char *v117;
  size_t v118;
  unint64_t v119;
  uint64_t *v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  _BOOL4 v136;
  unint64_t v137;
  int *v138;
  uint64_t v139;
  llvm::Constant **v140;
  uint64_t v141;
  llvm::Type *v142;
  unint64_t v143;
  uint8x8_t v144;
  int v146;
  uint64_t v147;
  int v148;
  uint8x8_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  size_t v157;
  uint64_t v158;
  unint64_t *v159;
  unint64_t *v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  _BOOL4 v164;
  unint64_t v165;
  char *v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  void *v180;
  int v181;
  llvm::Value **v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  const llvm::APInt *v186;
  llvm::Value **v187;
  uint64_t v188;
  llvm::Value **v189;
  const llvm::APInt *v190;
  uint64_t v191;
  char *v192;
  llvm::Value ***v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  llvm::Value *v197;
  llvm::Value ****v198;
  llvm::Value *v199;
  uint64_t v200;
  llvm::Value **v201;
  uint64_t v202;
  _QWORD *v203;
  llvm::ConstantInt **v204;
  llvm::Type *v205;
  uint64_t *v206;
  __int16 v207;
  unsigned int v208;
  char *__s2;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t __src;
  int8x8_t v216;
  unsigned int v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  unsigned __int8 *v221;
  unsigned __int8 *v222;
  llvm::ConstantInt ***v223;
  _QWORD v224[3];
  __int16 v225;
  void *v226;
  int v227;
  int v228;
  int v229;
  unint64_t v230;
  unsigned int v231;
  unint64_t v232;
  unsigned int v233;
  unsigned int *v234;
  uint64_t v235;
  llvm::ConstantInt ***v236;
  uint64_t v237;
  const void **v238;
  _OWORD v239[2];
  llvm::AssumptionCache *v240;
  uint64_t v241;
  uint64_t *v242;
  _QWORD v243[3];
  __int16 v244;

  v8 = *(_OWORD *)(a1 + 120);
  v9 = *(_OWORD *)(a1 + 104);
  v239[0] = *(_OWORD *)(a1 + 88);
  v239[1] = v9;
  v241 = *((_QWORD *)&v8 + 1);
  v240 = a4;
  v10 = sub_1C57A4000(a1, a2, a3, a4, 0, 0);
  if (v10)
    return v10;
  v12 = *(_QWORD *)(a2 - 64);
  v13 = *(unsigned __int16 *)(a2 + 18);
  v14 = v13 & 0x3F;
  v15 = *(_WORD *)(a3 + 18) & 0x3F;
  v16 = *(_QWORD *)(a3 - 64);
  v17 = *(unsigned __int8 **)(a2 - 32);
  v18 = *(unsigned __int8 **)(a3 - 32);
  v237 = 0;
  v238 = 0;
  v242 = (uint64_t *)&v238;
  v243[0] = 0;
  v222 = v17;
  sub_1C4D89F84((uint64_t)&v242, v17);
  v242 = &v237;
  v243[0] = 0;
  v221 = v18;
  sub_1C4D89F84((uint64_t)&v242, v18);
  v19 = v12;
  v20 = v13 & 0x3E;
  if (v20 != 36
    || (_DWORD)v14 != (_DWORD)v15
    || !v238
    || !v237
    || (v21 = *(_QWORD *)(a2 + 8)) == 0
    || *(_QWORD *)(v21 + 8)
    || (v24 = *(_QWORD *)(a3 + 8)) == 0
    || *(_QWORD *)(v24 + 8)
    || (v25 = *((unsigned int *)v238 + 2), (_DWORD)v25 != *(_DWORD *)(v237 + 8)))
  {
LABEL_9:
    if ((v14 - 38) < 4 != (v15 - 38) < 4)
    {
      v22 = (v14 - 38) < 4 && (v15 & 0x3E) == 32;
      v23 = v22;
      if (v22 || (v15 - 38) > 3)
      {
        if (!v23)
          goto LABEL_54;
      }
      else if (v20 != 32)
      {
        goto LABEL_54;
      }
    }
    if ((unsigned __int8 *)v19 == v221 && v222 == (unsigned __int8 *)v16)
      __asm { BR              X11 }
    if (v19 == v16 && v222 == v221)
    {
      v37 = *(_WORD *)(a2 + 18) & 0x3F;
      v38 = *(_WORD *)(a3 + 18) & 0x3F;
      v40 = (v37 - 38) < 4 || (v38 - 38) < 4;
      return sub_1C57A5A94(dword_1C8660B50[v38 - 32] | dword_1C8660B50[v37 - 32], v40, (uint64_t *)v19, (uint64_t)v222, *(_QWORD *)(a1 + 24));
    }
LABEL_54:
    v42 = (unsigned __int8 *)v19;
    v10 = sub_1C57A5AFC(a2, a3, 0, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v43 = *(_QWORD *)(a2 + 8);
    if (!v43 || *(_QWORD *)(v43 + 8))
    {
      v44 = *(_QWORD *)(a3 + 8);
      if (!v44 || *(_QWORD *)(v44 + 8))
        goto LABEL_103;
    }
    if ((_DWORD)v14 == 32
      && v222
      && v222[16] <= 0x14u
      && ((llvm::Constant::isNullValue((llvm::Constant *)v222) & 1) != 0
       || (sub_1C4E71060((uint64_t)&v242, (llvm::Constant *)v222) & 1) != 0))
    {
      if ((_DWORD)v15 != 36 || (v46 = (unsigned __int8 *)v16, v47 = v42, v42 != v221))
      {
        if (v42 == (unsigned __int8 *)v16 && (_DWORD)v15 == 34)
          v46 = v221;
        else
          v46 = 0;
        v47 = v42;
      }
    }
    else
    {
      if ((_DWORD)v15 != 32
        || !v221
        || v221[16] > 0x14u
        || (llvm::Constant::isNullValue((llvm::Constant *)v221) & 1) == 0
        && (sub_1C4E71060((uint64_t)&v242, (llvm::Constant *)v221) & 1) == 0)
      {
        goto LABEL_103;
      }
      if ((_DWORD)v14 != 36 || (v46 = v42, v47 = (_QWORD *)v16, (unsigned __int8 *)v16 != v222))
      {
        if ((unsigned __int8 *)v16 == v42 && (_DWORD)v14 == 34)
          v46 = v222;
        else
          v46 = 0;
        v47 = (_QWORD *)v16;
      }
    }
    if (v46 && v47)
    {
      v50 = (llvm::Constant *)*v47;
      v51 = (*(_DWORD *)(*v47 + 8) & 0xFE) == 0x12
          ? *(unsigned __int8 *)(**((_QWORD **)v50 + 2) + 8)
          : *(_DWORD *)(*v47 + 8);
      if (v51 == 13)
      {
        v52 = (llvm::Value **)v46;
        v53 = *(_QWORD *)(a1 + 24);
        AllOnesValue = llvm::Constant::getAllOnesValue(v50, v45);
        v225 = 257;
        v55 = (*(uint64_t (**)(_QWORD, _QWORD *, llvm::ValueHandleBase *, _QWORD, _QWORD))(**(_QWORD **)(v53 + 72) + 16))(*(_QWORD *)(v53 + 72), v47, AllOnesValue, 0, 0);
        if (!v55)
        {
          v244 = 257;
          v56 = (char *)operator new(0x80uLL);
          *((_QWORD *)v56 + 5) = 0;
          v57 = v56 + 40;
          *((_QWORD *)v56 + 6) = 0;
          *((_QWORD *)v56 + 8) = *v47;
          v58 = (uint64_t)(v56 + 64);
          *((_QWORD *)v56 + 3) = v56 + 64;
          *((_QWORD *)v56 + 7) = v56 + 64;
          *((_QWORD *)v56 + 9) = 0;
          v56[80] = 41;
          v56[81] = 0;
          *((_WORD *)v56 + 41) = 0;
          *((_DWORD *)v56 + 21) = 2;
          *(_OWORD *)(v56 + 88) = 0u;
          *(_OWORD *)(v56 + 104) = 0u;
          *((_DWORD *)v56 + 30) = 0;
          *(_QWORD *)v56 = v47;
          v61 = v47[1];
          v60 = v47 + 1;
          v59 = v61;
          *((_QWORD *)v56 + 1) = v61;
          if (v61)
            *(_QWORD *)(v59 + 16) = v56 + 8;
          *((_QWORD *)v56 + 2) = v60;
          *v60 = v56;
          *((_QWORD *)v56 + 4) = AllOnesValue;
          if (AllOnesValue)
          {
            v64 = *((_QWORD *)AllOnesValue + 1);
            v63 = (_QWORD *)((char *)AllOnesValue + 8);
            v62 = v64;
            *v57 = v64;
            if (v64)
              *(_QWORD *)(v62 + 16) = v57;
            *((_QWORD *)v56 + 6) = v63;
            *v63 = v56 + 32;
          }
          llvm::Value::setName((uint64_t ***)v56 + 8, (uint64_t)&v242);
          v55 = sub_1C4773754((uint64_t *)v53, v58, (uint64_t)&v223);
        }
        v244 = 257;
        v65 = v53;
        v66 = 35;
        NullValue = v52;
        return sub_1C4774B48(v65, v66, v55, (uint64_t)NullValue, (uint64_t)&v242);
      }
    }
LABEL_103:
    v10 = (uint64_t)sub_1C57A6954((unsigned __int8 *)a2, a3, (uint64_t)a4, *(_QWORD *)(a1 + 24), (uint64_t)v239);
    if (v10)
      return v10;
    v10 = (uint64_t)sub_1C57A6954((unsigned __int8 *)a3, a2, (uint64_t)a4, *(_QWORD *)(a1 + 24), (uint64_t)v239);
    if (v10)
      return v10;
    v10 = sub_1C57A6B74(a2, a3, 0, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A6B74(a3, a2, 0, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A3D4C((_QWORD *)a1, a2, a3, 1);
    if (v10)
      return v10;
    v10 = sub_1C57A3D4C((_QWORD *)a1, a3, a2, 1);
    if (v10)
      return v10;
    v10 = sub_1C57A6D50(a2, a3, 0, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A7000(a2, a3, 0, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A7240(a2, a3, 0, (int **)v239, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A7240(a3, a2, 0, (int **)v239, *(_QWORD *)(a1 + 24));
    if (v10)
      return v10;
    v10 = sub_1C57A42F8(a1, a2, a3, 0);
    if (v10)
      return v10;
    if ((_DWORD)v14 != 33
      || !sub_1C4D8AC3C((uint64_t)&v242, (llvm::Constant *)v222)
      || (_DWORD)v15 != 33
      || !sub_1C4D8AC3C((uint64_t)&v223, (llvm::Constant *)v221)
      || *(_QWORD *)v42 != *(_QWORD *)v16)
    {
      v10 = 0;
      if (!v238 || !v237)
        return v10;
      return sub_1C57A785C(v14, (uint64_t)v42, (uint64_t)v238, v15, v16, v237, *(_QWORD *)(a1 + 24), 0);
    }
    v139 = *(_QWORD *)(a1 + 24);
    v244 = 257;
    v140 = (llvm::Constant **)sub_1C4773594(v139, v42, v16, (uint64_t)&v242);
    v141 = *(_QWORD *)(a1 + 24);
    NullValue = llvm::Constant::getNullValue(*v140, v142);
    v244 = 257;
    v65 = v141;
    v66 = 33;
    v55 = (uint64_t)v140;
    return sub_1C4774B48(v65, v66, v55, (uint64_t)NullValue, (uint64_t)&v242);
  }
  if (v25 > 0x40)
  {
    v26 = v19;
    v27 = memcmp(*v238, *(const void **)v237, ((unint64_t)(v25 + 63) >> 3) & 0x3FFFFFF8);
    v19 = v26;
    if (v27)
      goto LABEL_9;
  }
  else if (*v238 != *(const void **)v237)
  {
    goto LABEL_9;
  }
  v235 = 0;
  v236 = 0;
  v234 = 0;
  v242 = (uint64_t *)&v236;
  v243[0] = &v235;
  v243[1] = 0;
  v28 = *(unsigned __int8 *)(v19 + 16);
  if (v28 == 5)
  {
    if (*(_WORD *)(v19 + 18) != 13)
      goto LABEL_9;
    v31 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
    if (!*(_QWORD *)v31)
      goto LABEL_9;
    v236 = *(llvm::ConstantInt ****)v31;
    v32 = v19;
    v33 = sub_1C4D8A004((uint64_t)v243, *(llvm::Constant **)(v31 + 32));
    v19 = v32;
    if ((v33 & 1) == 0)
      goto LABEL_9;
  }
  else
  {
    if (v28 != 41)
      goto LABEL_9;
    if (!*(_QWORD *)(v19 - 64))
      goto LABEL_9;
    v236 = *(llvm::ConstantInt ****)(v19 - 64);
    v29 = v19;
    v30 = sub_1C4D89F84((uint64_t)v243, *(unsigned __int8 **)(v19 - 32));
    v19 = v29;
    if (!v30)
      goto LABEL_9;
  }
  v223 = v236;
  v224[0] = &v234;
  v224[1] = 0;
  v34 = *(unsigned __int8 *)(v16 + 16);
  if (v34 == 5)
  {
    if (*(_WORD *)(v16 + 18) != 13)
      goto LABEL_9;
    v68 = v16 - 32 * (*(_DWORD *)(v16 + 20) & 0x7FFFFFF);
    if (v236 != *(llvm::ConstantInt ****)v68)
      goto LABEL_9;
    v69 = v19;
    v70 = sub_1C4D8A004((uint64_t)v224, *(llvm::Constant **)(v68 + 32));
    v19 = v69;
    if (!v70)
      goto LABEL_9;
  }
  else
  {
    if (v34 != 41)
      goto LABEL_9;
    if (v236 != *(llvm::ConstantInt ****)(v16 - 64))
      goto LABEL_9;
    v35 = v19;
    v36 = sub_1C4D89F84((uint64_t)v224, *(unsigned __int8 **)(v16 - 32));
    v19 = v35;
    if ((v36 & 1) == 0)
      goto LABEL_9;
  }
  v217 = v14;
  v218 = v15;
  v219 = v16;
  v220 = v19;
  v71 = (const void **)v235;
  v72 = *(unsigned int *)(v235 + 8);
  if (v72 > 0x40)
  {
    v73 = (char *)*v238;
    v150 = ((unint64_t)(v72 + 63) >> 3) & 0x3FFFFFF8;
    v14 = v14;
    v15 = v15;
    while (v150)
    {
      v151 = *(_QWORD *)(*(_QWORD *)v235 - 8 + v150);
      v152 = *(_QWORD *)&v73[v150 - 8];
      v150 -= 8;
      v74 = v151 > v152;
      if (v151 != v152)
        goto LABEL_127;
    }
    goto LABEL_9;
  }
  v73 = (char *)*v238;
  v74 = *(_QWORD *)v235 > (unint64_t)*v238;
LABEL_127:
  v14 = v14;
  v15 = v15;
  if (!v74)
    goto LABEL_9;
  v75 = v234;
  v76 = v234[2];
  if (v76 > 0x40)
  {
    v166 = v73 - 8;
    v167 = ((unint64_t)(v76 + 63) >> 3) & 0x3FFFFFF8;
    while (v167)
    {
      v168 = *(_QWORD *)(*(_QWORD *)v234 - 8 + v167);
      v169 = *(_QWORD *)&v166[v167];
      v167 -= 8;
      if (v168 != v169)
      {
        if (v168 <= v169)
          goto LABEL_131;
        goto LABEL_133;
      }
    }
    goto LABEL_131;
  }
  if (*(_QWORD *)v234 < (unint64_t)v73)
  {
LABEL_131:
    v14 = v14;
    v15 = v15;
    goto LABEL_9;
  }
  v14 = v14;
  v15 = v15;
  if (*(_QWORD *)v234 <= (unint64_t)v73)
    goto LABEL_9;
LABEL_133:
  v212 = *(unsigned int *)(v235 + 8);
  if (v212 < 0x41)
  {
    v216 = (int8x8_t)(*(_QWORD *)v234 ^ *(_QWORD *)v235);
    v77 = (uint8x8_t)vcnt_s8(v216);
    v77.i16[0] = vaddlv_u8(v77);
    if (v77.u32[0] != 1)
    {
LABEL_146:
      v10 = 0;
LABEL_232:
      LOBYTE(v146) = 1;
      goto LABEL_233;
    }
    goto LABEL_142;
  }
  v78 = (_QWORD *)operator new[]();
  memcpy(v78, *v71, ((unint64_t)(v212 + 63) >> 3) & 0x3FFFFFF8);
  v75 = v234;
  v79 = *(uint64_t **)v234;
  v80 = (unint64_t)(v212 + 63) >> 6;
  v216 = (int8x8_t)v78;
  v81 = v80;
  do
  {
    v82 = *v79++;
    *v78++ ^= v82;
    --v81;
  }
  while (v81);
  v83 = 0;
  v84 = (int8x8_t *)v216;
  do
  {
    v85 = *v84++;
    v86 = (uint8x8_t)vcnt_s8(v85);
    v86.i16[0] = vaddlv_u8(v86);
    v83 += v86.i32[0];
    --v80;
  }
  while (v80);
  if (v83 != 1)
    goto LABEL_146;
  v71 = (const void **)v235;
  v87 = *(unsigned int *)(v235 + 8);
  if (v87 <= 0x40)
  {
LABEL_142:
    v205 = (llvm::Type *)v75;
    if ((unint64_t)*v71 < *(_QWORD *)v75)
      goto LABEL_144;
    goto LABEL_143;
  }
  v173 = ((unint64_t)(v87 + 63) >> 3) & 0x3FFFFFF8;
  while (v173)
  {
    v174 = *(_QWORD *)(*(_QWORD *)v235 - 8 + v173);
    v175 = *(_QWORD *)(*(_QWORD *)v75 - 8 + v173);
    v173 -= 8;
    if (v174 != v175)
    {
      v205 = (llvm::Type *)v75;
      if (v174 <= v175)
        goto LABEL_144;
      break;
    }
  }
LABEL_143:
  v205 = (llvm::Type *)v71;
LABEL_144:
  v88 = v75[2];
  v233 = v88;
  if (v88 > 0x40)
  {
    v89 = operator new[]();
    v232 = v89;
    v88 = v233;
    memcpy((void *)v89, *(const void **)v75, (((unint64_t)v233 + 63) >> 3) & 0x3FFFFFF8);
    if (v88 > 0x40)
    {
      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v232);
      goto LABEL_151;
    }
  }
  else
  {
    v89 = *(_QWORD *)v75;
  }
  v90 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v88;
  if (!v88)
    v90 = 0;
  v232 = v90 & ~v89;
LABEL_151:
  llvm::APInt::operator++((uint64_t)&v232);
  v91 = v233;
  __src = v232;
  v233 = 0;
  if (v91 >= 0x41)
  {
    v93 = (unint64_t *)operator new[]();
    memcpy(v93, (const void *)__src, ((unint64_t)(v91 + 63) >> 3) & 0x3FFFFFF8);
    v94 = 0;
    v95 = (uint64_t *)*v238;
    v96 = (unint64_t)(v91 + 63) >> 6;
    v211 = (unint64_t)v93;
    v97 = v96;
    do
    {
      v98 = *v95++;
      v99 = v98 + *v93;
      v100 = v99 + 1 <= *v93;
      if (v94)
      {
        ++v99;
        v94 = v100;
      }
      else
      {
        v94 = v99 < *v93;
      }
      *v93++ = v99;
      --v97;
    }
    while (v97);
    *(_QWORD *)(v211 + 8 * (v96 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v91;
  }
  else
  {
    if ((_DWORD)v91)
      v92 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v91;
    else
      v92 = 0;
    v211 = v92 & ((unint64_t)*v238 + v232);
  }
  v101 = (const void **)v235;
  v102 = *(_DWORD *)(v235 + 8);
  v231 = v102;
  if (v102 > 0x40)
  {
    v103 = operator new[]();
    v230 = v103;
    v105 = *v101;
    v104 = v231;
    memcpy((void *)v103, v105, (((unint64_t)v231 + 63) >> 3) & 0x3FFFFFF8);
    if (v104 > 0x40)
    {
      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v230);
      goto LABEL_167;
    }
  }
  else
  {
    v103 = *(_QWORD *)v235;
    v104 = v102;
  }
  v106 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v104;
  if (!v104)
    v106 = 0;
  v230 = v106 & ~v103;
LABEL_167:
  llvm::APInt::operator++((uint64_t)&v230);
  v213 = v231;
  v214 = v230;
  v231 = 0;
  if (v213 >= 0x41)
  {
    v109 = (unint64_t *)operator new[]();
    memcpy(v109, (const void *)v214, ((unint64_t)(v213 + 63) >> 3) & 0x3FFFFFF8);
    v110 = 0;
    v111 = (uint64_t *)*v238;
    v112 = (unint64_t)(v213 + 63) >> 6;
    v210 = (unint64_t)v109;
    v113 = v112;
    do
    {
      v114 = *v111++;
      v115 = v114 + *v109;
      v116 = v115 + 1 <= *v109;
      if (v110)
      {
        ++v115;
        v110 = v116;
      }
      else
      {
        v110 = v115 < *v109;
      }
      *v109++ = v115;
      --v113;
    }
    while (v113);
    *(_QWORD *)(v210 + 8 * (v112 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v213;
  }
  else
  {
    v108 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v213;
    if (!(_DWORD)v213)
      v108 = 0;
    v210 = v108 & ((unint64_t)*v238 + v230);
  }
  if (v91 > 0x40)
  {
    v118 = ((unint64_t)(v91 + 63) >> 3) & 0x3FFFFFF8;
    v117 = (char *)operator new[]();
    memcpy(v117, (const void *)__src, v118);
    v119 = (unint64_t)(v91 + 63) >> 6;
    v120 = (uint64_t *)v214;
    v121 = v117;
    v122 = v119;
    do
    {
      v123 = *v120++;
      *v121++ ^= v123;
      --v122;
    }
    while (v122);
    v124 = (_QWORD *)operator new[]();
    memcpy(v124, (const void *)v211, v118);
    v125 = (uint64_t *)v210;
    __s2 = (char *)v124;
    do
    {
      v126 = *v125++;
      *v124++ ^= v126;
      --v119;
    }
    while (v119);
  }
  else
  {
    v117 = (char *)(v214 ^ __src);
    __s2 = (char *)(v210 ^ v211);
  }
  if (v213 > 0x40)
  {
    v153 = *(_QWORD *)(v214 + 8 * ((v213 - 1) >> 6)) & (1 << (v213 - 1));
    v154 = __src;
    if (v91 >= 0x41)
      v154 = *(_QWORD *)(__src + 8 * ((v91 - 1) >> 6));
    if ((v153 != 0) == ((v154 & (1 << (v91 - 1))) != 0))
    {
      v155 = v213 + 63;
      v156 = (unint64_t)(v213 + 63) >> 6;
      v170 = 8 * v156;
      while (v170)
      {
        v171 = *(_QWORD *)(v214 - 8 + v170);
        v172 = *(_QWORD *)(__src - 8 + v170);
        v170 -= 8;
        if (v171 != v172)
        {
          if (v171 <= v172)
            break;
          goto LABEL_247;
        }
      }
    }
    else if (!v153)
    {
      v155 = v213 + 63;
      v156 = (unint64_t)(v213 + 63) >> 6;
LABEL_247:
      v229 = v213;
      v157 = (v155 >> 3) & 0x3FFFFFF8;
      v128 = (char *)operator new[]();
      memcpy(v128, (const void *)v214, v157);
      v158 = 0;
      v159 = (unint64_t *)v128;
      v160 = (unint64_t *)__src;
      v161 = v156;
      do
      {
        v162 = *v160++;
        v163 = *v159 - v162;
        v164 = *v159 < v162;
        v165 = *v159 + ~v162;
        if (v158)
        {
          v158 = v165 >= *v159;
        }
        else
        {
          v165 = v163;
          v158 = v164;
        }
        *v159++ = v165;
        --v161;
      }
      while (v161);
      *(_QWORD *)&v128[8 * (v156 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v213;
      v138 = &v229;
      v208 = v213;
      goto LABEL_199;
    }
  }
  else if ((uint64_t)(v214 << -(char)v213) >> -(char)v213 > (uint64_t)(__src << -(char)v213) >> -(char)v213)
  {
    v229 = v213;
    v143 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v213;
    if (!(_DWORD)v213)
      v143 = 0;
    v128 = (char *)(v143 & (v214 - __src));
    v138 = &v229;
    v208 = v213;
    goto LABEL_199;
  }
  v228 = v91;
  if (v91 < 0x41)
  {
    if ((_DWORD)v91)
      v127 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v91;
    else
      v127 = 0;
    v128 = (char *)(v127 & (__src - v214));
    v228 = 0;
    v208 = v91;
LABEL_200:
    v144 = (uint8x8_t)vcnt_s8((int8x8_t)v117);
    v144.i16[0] = vaddlv_u8(v144);
    if (v144.u32[0] != 1 || v117 != __s2)
      goto LABEL_212;
    goto LABEL_205;
  }
  v128 = (char *)operator new[]();
  memcpy(v128, (const void *)__src, ((unint64_t)(v91 + 63) >> 3) & 0x3FFFFFF8);
  v129 = 0;
  v130 = (unint64_t)(v91 + 63) >> 6;
  v131 = (unint64_t *)v128;
  v132 = (unint64_t *)v214;
  v133 = v130;
  do
  {
    v134 = *v132++;
    v135 = *v131 - v134;
    v136 = *v131 < v134;
    v137 = *v131 + ~v134;
    if (v129)
    {
      v129 = v137 >= *v131;
    }
    else
    {
      v137 = v135;
      v129 = v136;
    }
    *v131++ = v137;
    --v133;
  }
  while (v133);
  *(_QWORD *)&v128[8 * (v130 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v91;
  v138 = &v228;
  v208 = v91;
LABEL_199:
  *v138 = 0;
  if (v91 <= 0x40)
    goto LABEL_200;
  v147 = 0;
  v148 = 0;
  do
  {
    v149 = (uint8x8_t)vcnt_s8(*(int8x8_t *)&v117[v147]);
    v149.i16[0] = vaddlv_u8(v149);
    v148 += v149.i32[0];
    v147 += 8;
  }
  while ((((unint64_t)(v91 + 63) >> 3) & 0x3FFFFFF8) != v147);
  if (v148 != 1 || memcmp(v117, __s2, ((unint64_t)(v91 + 63) >> 3) & 0x3FFFFFF8))
  {
LABEL_212:
    v10 = 0;
    v146 = 1;
    goto LABEL_213;
  }
LABEL_205:
  if (v208 > 0x40)
  {
    v176 = (((unint64_t)v208 + 63) >> 3) & 0x3FFFFFF8;
    while (v176)
    {
      v177 = *(_QWORD *)&v128[v176 - 8];
      v178 = *(_QWORD *)((char *)*v238 + v176 - 8);
      v176 -= 8;
      if (v177 != v178)
      {
        if (v177 <= v178)
          goto LABEL_212;
        goto LABEL_272;
      }
    }
    goto LABEL_212;
  }
  if (v128 <= *v238)
  {
    v10 = 0;
    v146 = 1;
    goto LABEL_216;
  }
LABEL_272:
  v204 = *v236;
  v227 = v212;
  if (v212 > 0x40)
  {
    v226 = (void *)operator new[]();
    memcpy(v226, *(const void **)&v216, ((unint64_t)(v212 + 63) >> 3) & 0x3FFFFFF8);
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&v226);
    v181 = v227;
    v180 = v226;
  }
  else
  {
    v179 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v212;
    if (!(_DWORD)v212)
      v179 = 0;
    v180 = (void *)(v179 & ~*(_QWORD *)&v216);
    v226 = v180;
    v181 = v212;
  }
  LODWORD(v243[0]) = v181;
  v242 = (uint64_t *)v180;
  v227 = 0;
  v182 = llvm::ConstantInt::get(v204, (llvm::Type *)&v242, v107);
  if (LODWORD(v243[0]) >= 0x41 && v242)
    MEMORY[0x1CAA32F9C](v242, 0x1000C8000313F17);
  v183 = *(_QWORD *)(a1 + 24);
  v244 = 257;
  v184 = sub_1C4D89BCC(v183, v236, (uint64_t)v182, (uint64_t)&v242);
  v185 = *(_QWORD *)(a1 + 24);
  v187 = llvm::ConstantInt::get(v204, v205, v186);
  v225 = 257;
  v206 = (uint64_t *)v185;
  v203 = (_QWORD *)v184;
  v188 = v184;
  v189 = v187;
  v191 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v185 + 72) + 16))(*(_QWORD *)(v185 + 72), v188);
  if (!v191)
  {
    v244 = 257;
    v192 = (char *)operator new(0x80uLL);
    *(_QWORD *)v192 = 0;
    *((_QWORD *)v192 + 2) = 0;
    *((_QWORD *)v192 + 1) = 0;
    *((_QWORD *)v192 + 5) = 0;
    *((_QWORD *)v192 + 6) = 0;
    *((_QWORD *)v192 + 4) = 0;
    v193 = (llvm::Value ***)(v192 + 32);
    *((_QWORD *)v192 + 8) = *v203;
    v194 = (uint64_t)(v192 + 64);
    *((_QWORD *)v192 + 3) = v192 + 64;
    *((_QWORD *)v192 + 7) = v192 + 64;
    *((_QWORD *)v192 + 9) = 0;
    v192[80] = 41;
    v192[81] = 0;
    *((_WORD *)v192 + 41) = 0;
    *((_DWORD *)v192 + 21) = 2;
    *((_DWORD *)v192 + 30) = 0;
    *(_OWORD *)(v192 + 104) = 0u;
    *(_OWORD *)(v192 + 88) = 0u;
    *(_QWORD *)v192 = v203;
    v196 = v203 + 1;
    v195 = v203[1];
    *((_QWORD *)v192 + 1) = v195;
    if (v195)
      *(_QWORD *)(v195 + 16) = v192 + 8;
    *((_QWORD *)v192 + 2) = v196;
    *v196 = v192;
    if (*((_QWORD *)v192 + 4))
    {
      **((_QWORD **)v192 + 6) = *((_QWORD *)v192 + 5);
      v202 = *((_QWORD *)v192 + 5);
      if (v202)
        *(_QWORD *)(v202 + 16) = *((_QWORD *)v192 + 6);
    }
    *v193 = v189;
    if (v189)
    {
      v199 = v189[1];
      v198 = (llvm::Value ****)(v189 + 1);
      v197 = v199;
      *((_QWORD *)v192 + 5) = v199;
      if (v199)
        *((_QWORD *)v197 + 2) = v192 + 40;
      *((_QWORD *)v192 + 6) = v198;
      *v198 = v193;
    }
    llvm::Value::setName((uint64_t ***)v192 + 8, (uint64_t)&v242);
    v191 = sub_1C4773754(v206, v194, (uint64_t)&v223);
  }
  v200 = *(_QWORD *)(a1 + 24);
  v207 = *(_WORD *)(a2 + 18) & 0x3F;
  v201 = llvm::ConstantInt::get(v204, (llvm::Type *)v238, v190);
  v244 = 257;
  v10 = sub_1C4774B48(v200, v207, v191, (uint64_t)v201, (uint64_t)&v242);
  v146 = 0;
LABEL_213:
  if (v208 >= 0x41 && v128)
    MEMORY[0x1CAA32F9C](v128, 0x1000C8000313F17);
LABEL_216:
  if (v91 >= 0x41)
  {
    if (__s2)
      MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
    if (v117)
      MEMORY[0x1CAA32F9C](v117, 0x1000C8000313F17);
  }
  if (v213 >= 0x41)
  {
    if (v210)
      MEMORY[0x1CAA32F9C](v210, 0x1000C8000313F17);
    if (v214)
      MEMORY[0x1CAA32F9C](v214, 0x1000C8000313F17);
  }
  if (v91 >= 0x41)
  {
    if (v211)
      MEMORY[0x1CAA32F9C](v211, 0x1000C8000313F17);
    if (__src)
      MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  }
  if (v146)
    goto LABEL_232;
LABEL_233:
  if (*(_QWORD *)&v216 && v212 >= 0x41)
    MEMORY[0x1CAA32F9C](*(_QWORD *)&v216, 0x1000C8000313F17);
  v16 = v219;
  v19 = v220;
  v14 = v217;
  v15 = v218;
  if ((v146 & 1) != 0)
    goto LABEL_9;
  return v10;
}

llvm::UndefValue **sub_1C57A9C14(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, const llvm::DataLayout *a5, llvm::DSOLocalEquivalent **a6)
{
  uint64_t v6;
  uint64_t v8;
  llvm *v9;
  llvm::Constant *v10;
  __int128 v11;
  __int128 v12;
  llvm::Value *v13;
  uint64_t ***Not;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  llvm::Constant **v29;
  llvm::Constant *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  char *v53;
  _QWORD *v54;
  char v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  void **v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  const llvm::APInt *v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  llvm::Constant **v76;
  uint64_t v77;
  const void **v78;
  uint64_t v79;
  void *v80;
  int v81;
  const llvm::APInt *v82;
  uint64_t v83;
  const void **v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 *v89;
  void *v90;
  llvm::Type *v91;
  unsigned int PrimitiveSizeInBits;
  unsigned int v93;
  int v94;
  int v95;
  unsigned __int8 *v96;
  llvm *v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  const void **v102;
  uint64_t v103;
  unint64_t v104;
  void *v105;
  int v106;
  uint64_t *v107;
  uint64_t v108;
  unsigned __int8 *v109;
  llvm::Value **v110;
  uint64_t v111;
  char *v112;
  void **v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  size_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  llvm *v125;
  int v126;
  int v127;
  int v128;
  uint64_t v129;
  int v130;
  uint64_t *v131;
  unint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  size_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t *v141;
  _QWORD *v142;
  uint64_t v143;
  llvm::Value **v144;
  _QWORD *v145;
  const llvm::APInt *v146;
  llvm::Value **v147;
  char *v148;
  llvm::Value **v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  llvm::Value *v153;
  _QWORD *v154;
  llvm::Value *v155;
  llvm::APInt *v156;
  llvm::APInt *v157;
  unsigned int v158;
  uint64_t v159;
  void *v160;
  BOOL v161;
  int v162;
  uint64_t v163;
  llvm::APInt *v164;
  unsigned int v165;
  unint64_t v166;
  const llvm::APInt *v167;
  int v168;
  uint64_t v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  const void **v173;
  uint64_t v174;
  int v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  int v180;
  BOOL v181;
  unint64_t v182;
  int v183;
  int v184;
  unsigned __int8 *v185;
  char *v186;
  _QWORD *v187;
  uint64_t *v188;
  char v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t **v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned int v210;
  unsigned __int8 *v211;
  uint64_t v212;
  unsigned int v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  llvm::APInt *v218;
  llvm::Type **v219;
  llvm::Type *v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  uint64_t v224;
  int v225;
  int v226;
  uint64_t v227;
  llvm::Constant **v228;
  llvm::Type *v229;
  const char *v230;
  unsigned int v231;
  const char *v232;
  unsigned int v233;
  int v234;
  llvm::Constant *v235;
  unsigned int v236;
  llvm::Type *v237;
  unsigned int v238;
  unint64_t v239;
  int v240;
  int v241;
  llvm::UndefValue *v242;
  uint64_t v243;
  uint64_t v244;
  llvm::APInt *v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  unsigned int v250;
  _QWORD *v251;
  int v252;
  llvm::Value *v253;
  llvm::Value *v254;
  int v255;
  llvm::Value *v256;
  llvm::Value *v257;
  int v258;
  llvm::APInt *v259;
  llvm::Value *v260;
  llvm *v261;
  llvm::Type *v262;
  unsigned int v263;
  llvm::Type *v264;
  uint64_t v265;
  unint64_t v266;
  int v267;
  int v268;
  uint64_t *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unsigned __int8 *v275;
  int v276;
  int v277;
  uint64_t v278;
  const void **v279;
  uint64_t v280;
  uint8x8_t v281;
  uint64_t *v282;
  char *v283;
  llvm::Value *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unsigned __int8 *v291;
  int v292;
  int v293;
  uint64_t v294;
  llvm::Value *v295;
  llvm::APInt **v296;
  uint64_t v297;
  _BOOL8 v298;
  int v299;
  unint64_t v300;
  int8x8_t *v301;
  int8x8_t v302;
  uint8x8_t v303;
  uint64_t v304;
  _QWORD *v305;
  unsigned __int8 *v306;
  char *v307;
  uint64_t v308;
  _QWORD *v309;
  char *v310;
  void *v311;
  void *v312;
  uint64_t v313;
  unsigned __int8 *v314;
  char *v315;
  uint64_t *v316;
  uint64_t v317;
  _QWORD *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t **v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  int64_t v325;
  int v326;
  unint64_t v327;
  _BOOL4 v328;
  int v329;
  llvm::Type *v330;
  llvm::Type *v331;
  unsigned int v332;
  const llvm::APInt *v333;
  llvm::Value **v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  int v339;
  uint64_t *v340;
  const llvm::APInt *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  _QWORD *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  _QWORD *v350;
  uint64_t v351;
  unsigned __int8 *v352;
  llvm::ConstantInt **v353;
  const llvm::APInt *v354;
  llvm::Value **v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  _QWORD *v359;
  char *v360;
  void *v361;
  void *v362;
  _QWORD *v363;
  llvm *v364;
  char *v365;
  llvm **v366;
  uint64_t v367;
  _QWORD *v368;
  uint64_t v369;
  uint64_t v370;
  llvm ***v371;
  uint64_t v372;
  int v373;
  llvm::APInt *v374;
  llvm::Value **v375;
  llvm::APInt *v376;
  llvm::Value *v377;
  int v378;
  llvm::APInt *v379;
  llvm::Value *v380;
  llvm::APInt **v381;
  int v382;
  llvm::APInt *v383;
  llvm::Value *v384;
  llvm::APInt **v385;
  char *v386;
  _QWORD *v387;
  uint64_t v388;
  _QWORD *v389;
  uint64_t v390;
  uint64_t v391;
  _QWORD *v392;
  uint64_t v393;
  llvm::APInt *v394;
  int v395;
  llvm::APInt *v396;
  llvm::Value *v397;
  llvm::APInt **v398;
  int v399;
  llvm::APInt *v400;
  llvm::Value *v401;
  llvm::APInt **v402;
  uint64_t v403;
  _QWORD *v404;
  llvm::Value *v405;
  char *v406;
  _QWORD *v407;
  uint64_t v408;
  _QWORD *v409;
  uint64_t v410;
  uint64_t v411;
  _QWORD *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t ***v418;
  llvm::Type *v419;
  uint64_t v420;
  int v421;
  void *v422;
  uint64_t v423;
  uint64_t *v424;
  int v425;
  unsigned __int8 *v426;
  llvm *v427;
  int v428;
  unsigned __int8 *v429;
  uint64_t v430;
  _BOOL8 v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  _QWORD *v436;
  uint64_t v437;
  llvm::Type *v438;
  uint64_t v439;
  int v440;
  llvm::Type *v441;
  llvm::Type *v442;
  void *v443;
  llvm **v444;
  int v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  int v450;
  _QWORD *v451;
  char *v452;
  void *v453;
  void *v454;
  llvm::Type *v455;
  llvm::Value **NullValue;
  llvm::Constant *v457;
  llvm::Constant *v458;
  llvm::Constant *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  llvm::Value **v464;
  uint64_t v465;
  llvm **v466;
  int v467;
  uint64_t v468;
  uint64_t v469;
  llvm *v470;
  uint64_t v471;
  int v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  int v477;
  llvm *v478;
  int v479;
  int v480;
  uint64_t v481;
  llvm::Value **v482;
  uint64_t v483;
  const llvm::Instruction *v485;
  uint64_t v486;
  uint64_t v487;
  int v488;
  int v489;
  uint64_t v490;
  uint64_t v491;
  llvm::Value *v492;
  uint64_t v493;
  llvm::Value *v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  BOOL v498;
  uint64_t v499;
  BOOL v500;
  llvm::Constant *v501;
  llvm::APInt *v502;
  uint64_t v503;
  unsigned int v504;
  uint64_t v505;
  void *v506;
  int v507;
  llvm::APInt *v508;
  unsigned int v509;
  llvm::Value *v510;
  llvm::Value *v511;
  llvm::APInt *v512;
  llvm *v513;
  void *__s2[2];
  __int128 v515;
  llvm **v516;
  unsigned __int8 **v517;
  unsigned __int8 *v518;
  uint64_t v519;
  void *v520;
  __int16 v521;

  v6 = (uint64_t)a2;
  v8 = *a2;
  v9 = (llvm *)*(a2 - 8);
  v10 = (llvm::Constant *)*(a2 - 4);
  v11 = *(_OWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)__s2 = *(_OWORD *)(a1 + 88);
  v515 = v12;
  v517 = (unsigned __int8 **)*((_QWORD *)&v11 + 1);
  v516 = (llvm **)v6;
  v13 = (llvm::Value *)sub_1C4E640C8(v9, v10, (uint64_t)__s2, 3, a5, a6);
  if (v13)
    return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v13);
  if ((sub_1C577D620(a1, (llvm::Instruction *)v6) & 1) != 0)
    return (llvm::UndefValue **)v6;
  Not = (uint64_t ***)sub_1C57826B8(a1, (unsigned __int8 *)v6);
  if (!Not)
  {
    Not = (uint64_t ***)sub_1C578171C(a1, v6);
    if (!Not)
    {
      if (sub_1C584C4C4(a1, (llvm::UndefValue *)v6))
        return (llvm::UndefValue **)v6;
      v16 = *(uint64_t **)(a1 + 24);
      v17 = *(_QWORD *)(v6 - 64);
      v18 = *(_QWORD *)(v6 - 32);
      v508 = 0;
      v518 = 0;
      __s2[0] = &v508;
      __s2[1] = &v518;
      *(_QWORD *)&v515 = &v508;
      *((_QWORD *)&v515 + 1) = &v518;
      v19 = *(unsigned __int8 *)(v17 + 16);
      if (v19 == 5)
      {
        if (*(_WORD *)(v17 + 18) != 29)
          goto LABEL_81;
        if (!*(_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF)))
          goto LABEL_81;
        v508 = *(llvm::APInt **)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
        v20 = *(_QWORD *)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF) + 32);
        if (!v20)
          goto LABEL_81;
      }
      else
      {
        if (v19 != 57)
          goto LABEL_81;
        if (!*(_QWORD *)(v17 - 64))
          goto LABEL_81;
        v508 = *(llvm::APInt **)(v17 - 64);
        v20 = *(_QWORD *)(v17 - 32);
        if (!v20)
          goto LABEL_81;
      }
      *(_QWORD *)__s2[1] = v20;
      v21 = *(_QWORD *)(v6 - 32);
      v22 = *(unsigned __int8 *)(v21 + 16);
      if (v22 != 5)
      {
        if (v22 != 58)
          goto LABEL_81;
        v23 = *(_QWORD *)(v21 - 64);
        v24 = *(unsigned __int8 *)(v23 + 16);
        if (v24 == 5)
        {
          if (*(_WORD *)(v23 + 18) != 28)
            goto LABEL_38;
          v34 = (uint64_t *)(v23 - 32 * (*(_DWORD *)(v23 + 20) & 0x7FFFFFF));
          v25 = *v34;
          v35 = v34[4];
          if (*(_QWORD *)v515 != v25 || **((_QWORD **)&v515 + 1) != v35)
          {
            if (*(_QWORD *)v515 != v35)
              goto LABEL_38;
LABEL_36:
            if (**((_QWORD **)&v515 + 1) != v25)
              goto LABEL_38;
          }
        }
        else
        {
          if (v24 != 56)
            goto LABEL_38;
          v25 = *(_QWORD *)(v23 - 64);
          v26 = *(_QWORD *)(v23 - 32);
          if (*(_QWORD *)v515 != v25 || **((_QWORD **)&v515 + 1) != v26)
          {
            if (*(_QWORD *)v515 != v26)
              goto LABEL_38;
            goto LABEL_36;
          }
        }
        if ((sub_1C4D9ED34((uint64_t)&v516, *(llvm::Constant **)(v21 - 32)) & 1) != 0)
          goto LABEL_70;
LABEL_38:
        v36 = *(_QWORD *)(v21 - 32);
        v37 = *(unsigned __int8 *)(v36 + 16);
        if (v37 == 5)
        {
          if (*(_WORD *)(v36 + 18) != 28)
            goto LABEL_81;
          v40 = (uint64_t *)(v36 - 32 * (*(_DWORD *)(v36 + 20) & 0x7FFFFFF));
          v38 = *v40;
          v41 = v40[4];
          if (*(_QWORD *)v515 == v38 && **((_QWORD **)&v515 + 1) == v41)
            goto LABEL_49;
          if (*(_QWORD *)v515 != v41)
            goto LABEL_81;
        }
        else
        {
          if (v37 != 56)
            goto LABEL_81;
          v38 = *(_QWORD *)(v36 - 64);
          v39 = *(_QWORD *)(v36 - 32);
          if (*(_QWORD *)v515 == v38 && **((_QWORD **)&v515 + 1) == v39)
            goto LABEL_49;
          if (*(_QWORD *)v515 != v39)
            goto LABEL_81;
        }
        if (**((_QWORD **)&v515 + 1) != v38)
          goto LABEL_81;
LABEL_49:
        if ((sub_1C4D9ED34((uint64_t)&v516, *(llvm::Constant **)(v21 - 64)) & 1) == 0)
        {
LABEL_81:
          v63 = *(_QWORD *)(v17 + 8);
          if (v63 && !*(_QWORD *)(v63 + 8) || (v64 = *(_QWORD *)(v18 + 8)) != 0 && !*(_QWORD *)(v64 + 8))
          {
            __s2[0] = &v508;
            __s2[1] = &v518;
            *((_QWORD *)&v515 + 1) = &v508;
            v517 = &v518;
            if (sub_1C4E74064((_QWORD **)__s2, 29, *(_QWORD *)(v6 - 64)))
            {
              if ((sub_1C57BBF2C((uint64_t **)&v515 + 1, *(_QWORD *)(v6 - 32)) & 1) != 0)
              {
                LOWORD(v516) = 257;
                v65 = sub_1C506EC1C(v16, v508, (uint64_t)v518, (uint64_t)__s2);
                v521 = 257;
                Not = (uint64_t ***)llvm::BinaryOperator::CreateNot((uint64_t)v65, (llvm::Type *)&v519, 0);
                if (Not)
                  return (llvm::UndefValue **)Not;
              }
            }
          }
          Not = (uint64_t ***)sub_1C57AD31C(v6, *(uint64_t **)(a1 + 24));
          if (Not)
            return (llvm::UndefValue **)Not;
          v13 = sub_1C577ECF0(a1, (unsigned __int8 *)v6);
          if (v13)
            return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v13);
          v13 = (llvm::Value *)sub_1C57ADFE0(v6, *(uint64_t **)(a1 + 24));
          if (v13)
            return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v13);
          v66 = *(_QWORD *)(v6 - 64);
          v67 = *(_QWORD *)(v6 - 32);
          v518 = 0;
          v513 = 0;
          __s2[1] = &v518;
          v69 = v66 + 8;
          v68 = *(_QWORD *)(v66 + 8);
          v501 = (llvm::Constant *)v67;
          if (v68 && !*(_QWORD *)(v68 + 8))
          {
            v72 = *(unsigned __int8 *)(v66 + 16);
            if (v72 >= 0x1C)
            {
              if (v72 - 53 > 1)
                goto LABEL_93;
              v74 = v66 + 8;
              v75 = *(_DWORD *)(v66 + 20);
              v76 = (v75 & 0x40000000) != 0
                  ? *(llvm::Constant ***)(v66 - 8)
                  : (llvm::Constant **)(v66 - 32 * (v75 & 0x7FFFFFF));
              if (!sub_1C4D89CC8((uint64_t)__s2, *v76))
                goto LABEL_93;
              v98 = *(_DWORD *)(v66 + 20);
              v99 = (v98 & 0x40000000) != 0 ? *(_QWORD *)(v66 - 8) : v66 - 32 * (v98 & 0x7FFFFFF);
              v73 = *(_QWORD *)(v99 + 32);
              v69 = v66 + 8;
              if (!v73)
                goto LABEL_93;
            }
            else
            {
              if (v72 != 5)
                goto LABEL_93;
              if (*(unsigned __int16 *)(v66 + 18) - 25 > 1)
                goto LABEL_93;
              if (!sub_1C4D89E3C((uint64_t)__s2, *(llvm::Constant **)(v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF))))goto LABEL_93;
              v73 = *(_QWORD *)(v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF) + 32);
              if (!v73)
                goto LABEL_93;
              v74 = v66 + 8;
            }
            *(_QWORD *)__s2[1] = v73;
            v69 = v74;
            if (sub_1C4D89CC8((uint64_t)&v519, (llvm::Constant *)v67))
            {
              v108 = *(_QWORD *)(a1 + 24);
              v109 = v518;
              v110 = llvm::ConstantInt::get((llvm::ConstantInt *)v8, 0, 0);
              LOWORD(v516) = 257;
              v111 = sub_1C4774B48(v108, 32, (uint64_t)v109, (uint64_t)v110, (uint64_t)__s2);
              v112 = (char *)operator new(0x60uLL);
              *((_DWORD *)v112 + 13) = *((_DWORD *)v112 + 13) & 0x38000000 | 1;
              Not = (uint64_t ***)(v112 + 32);
              *(_QWORD *)v112 = 0;
              *((_QWORD *)v112 + 1) = 0;
              *((_QWORD *)v112 + 2) = 0;
              *((_QWORD *)v112 + 3) = v112 + 32;
              LOWORD(v516) = 257;
              goto LABEL_165;
            }
          }
LABEL_93:
          v512 = 0;
          __s2[0] = &v512;
          __s2[1] = 0;
          if (!sub_1C4D89F84((uint64_t)__s2, (unsigned __int8 *)v67))
            goto LABEL_271;
          v511 = 0;
          __s2[0] = &v518;
          __s2[1] = &v511;
          *(_QWORD *)&v515 = 0;
          if (*(_QWORD *)v69 && !*(_QWORD *)(*(_QWORD *)v69 + 8))
          {
            v70 = *(unsigned __int8 *)(v66 + 16);
            if (v70 != 5)
            {
              if (v70 != 58)
                goto LABEL_115;
              if (!*(_QWORD *)(v66 - 64))
                goto LABEL_115;
              v518 = *(unsigned __int8 **)(v66 - 64);
              if (!sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v66 - 32)))
                goto LABEL_115;
              goto LABEL_113;
            }
            if (*(_WORD *)(v66 + 18) == 30)
            {
              v77 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF);
              if (*(_QWORD *)v77)
              {
                v518 = *(unsigned __int8 **)v77;
                if ((sub_1C4D8A004((uint64_t)&__s2[1], *(llvm::Constant **)(v77 + 32)) & 1) != 0)
                {
LABEL_113:
                  v78 = (const void **)v512;
                  v79 = *((unsigned int *)v512 + 2);
                  if (v79 > 0x40)
                  {
                    v80 = (void *)operator new[]();
                    memcpy(v80, *v78, ((unint64_t)(v79 + 63) >> 3) & 0x3FFFFFF8);
                    v131 = *(uint64_t **)v511;
                    v132 = (unint64_t)(v79 + 63) >> 6;
                    v133 = v80;
                    do
                    {
                      v134 = *v131++;
                      *v133++ &= v134;
                      --v132;
                    }
                    while (v132);
                  }
                  else
                  {
                    v80 = (void *)(*(_QWORD *)v511 & *(_QWORD *)v512);
                  }
                  LODWORD(__s2[1]) = v79;
                  __s2[0] = v80;
                  v52 = (unsigned __int8 *)llvm::ConstantInt::get((llvm::ConstantInt **)v8, (llvm::Type *)__s2, v71);
                  if (LODWORD(__s2[1]) >= 0x41 && __s2[0])
                    MEMORY[0x1CAA32F9C](__s2[0], 0x1000C8000313F17);
                  v135 = *(_QWORD *)(a1 + 24);
                  LOWORD(v516) = 257;
                  v51 = (unsigned __int8 *)sub_1C4D89BCC(v135, v518, v67, (uint64_t)__s2);
                  llvm::Value::takeName((llvm::Value *)v51, (llvm::Value *)v66);
                  LOWORD(v516) = 257;
                  goto LABEL_71;
                }
              }
            }
          }
LABEL_115:
          v510 = 0;
          __s2[0] = &v518;
          __s2[1] = &v510;
          *(_QWORD *)&v515 = 0;
          if (*(_QWORD *)v69 && !*(_QWORD *)(*(_QWORD *)v69 + 8))
          {
            v81 = *(unsigned __int8 *)(v66 + 16);
            if (v81 != 5)
            {
              if (v81 != 57)
                goto LABEL_127;
              if (!*(_QWORD *)(v66 - 64))
                goto LABEL_127;
              v518 = *(unsigned __int8 **)(v66 - 64);
              if (!sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v66 - 32)))
                goto LABEL_127;
LABEL_125:
              v84 = (const void **)v512;
              v85 = *((unsigned int *)v512 + 2);
              if (v85 > 0x40)
              {
                v136 = ((unint64_t)(v85 + 63) >> 3) & 0x3FFFFFF8;
                v137 = (char *)operator new[]();
                memcpy(v137, *v84, v136);
                v138 = 0;
                v139 = *(_QWORD *)v510;
                v140 = (unint64_t)(v85 + 63) >> 6;
                do
                {
                  *(_QWORD *)&v137[v138] &= *(_QWORD *)(v139 + v138);
                  v138 += 8;
                }
                while (8 * v140 != v138);
                LODWORD(v520) = v85;
                v519 = (uint64_t)v137;
                v88 = *(_QWORD *)(a1 + 24);
                v89 = v518;
                v90 = (void *)operator new[]();
                memcpy(v90, v137, v136);
                v141 = *(uint64_t **)v512;
                v142 = v90;
                do
                {
                  v143 = *v141++;
                  *v142++ ^= v143;
                  --v140;
                }
                while (v140);
              }
              else
              {
                v86 = *(_QWORD *)v512;
                v87 = *(_QWORD *)v510 & *(_QWORD *)v512;
                LODWORD(v520) = *((_DWORD *)v512 + 2);
                v519 = v87;
                v88 = *(_QWORD *)(a1 + 24);
                v89 = v518;
                v90 = (void *)(v86 ^ v87);
              }
              v509 = v85;
              v508 = (llvm::APInt *)v90;
              v144 = llvm::ConstantInt::get((llvm::ConstantInt **)v8, (llvm::Type *)&v508, v82);
              LOWORD(v516) = 257;
              v145 = (_QWORD *)sub_1C4D89BCC(v88, v89, (uint64_t)v144, (uint64_t)__s2);
              if (v509 >= 0x41 && v508)
                MEMORY[0x1CAA32F9C](v508, 0x1000C8000313F17);
              llvm::Value::takeName((llvm::Value *)v145, (llvm::Value *)v66);
              v147 = llvm::ConstantInt::get((llvm::ConstantInt **)v8, (llvm::Type *)&v519, v146);
              LOWORD(v516) = 257;
              v148 = (char *)operator new(0x80uLL);
              *((_QWORD *)v148 + 5) = 0;
              v149 = (llvm::Value **)(v148 + 40);
              *((_QWORD *)v148 + 6) = 0;
              *((_QWORD *)v148 + 8) = *v145;
              Not = (uint64_t ***)(v148 + 64);
              *((_QWORD *)v148 + 3) = v148 + 64;
              *((_QWORD *)v148 + 7) = v148 + 64;
              *((_QWORD *)v148 + 9) = 0;
              v148[80] = 57;
              v148[81] = 0;
              *((_WORD *)v148 + 41) = 0;
              *((_DWORD *)v148 + 21) = 2;
              *(_OWORD *)(v148 + 88) = 0u;
              *(_OWORD *)(v148 + 104) = 0u;
              *((_DWORD *)v148 + 30) = 0;
              *(_QWORD *)v148 = v145;
              v152 = v145[1];
              v151 = v145 + 1;
              v150 = v152;
              *((_QWORD *)v148 + 1) = v152;
              if (v152)
                *(_QWORD *)(v150 + 16) = v148 + 8;
              *((_QWORD *)v148 + 2) = v151;
              *v151 = v148;
              *((_QWORD *)v148 + 4) = v147;
              if (v147)
              {
                v155 = v147[1];
                v154 = v147 + 1;
                v153 = v155;
                *v149 = v155;
                if (v155)
                  *((_QWORD *)v153 + 2) = v149;
                *((_QWORD *)v148 + 6) = v154;
                *v154 = v148 + 32;
              }
              llvm::Value::setName((uint64_t ***)v148 + 8, (uint64_t)__s2);
              if (v520 >= 0x41 && v519)
                MEMORY[0x1CAA32F9C](v519, 0x1000C8000313F17);
              return (llvm::UndefValue **)Not;
            }
            if (*(_WORD *)(v66 + 18) == 29)
            {
              v83 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF);
              if (*(_QWORD *)v83)
              {
                v518 = *(unsigned __int8 **)v83;
                if ((sub_1C4D8A004((uint64_t)&__s2[1], *(llvm::Constant **)(v83 + 32)) & 1) != 0)
                  goto LABEL_125;
              }
            }
          }
LABEL_127:
          if (!*(_QWORD *)v69 || *(_QWORD *)(*(_QWORD *)v69 + 8))
          {
            Not = 0;
            goto LABEL_130;
          }
          v95 = *(unsigned __int8 *)(v66 + 16);
          if (v95 == 5)
          {
            v100 = *(unsigned __int16 *)(v66 + 18);
            if (v100 != 29 && v100 != 30)
              goto LABEL_156;
            v101 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF);
            v96 = *(unsigned __int8 **)v101;
            if (!*(_QWORD *)v101)
              goto LABEL_156;
            v518 = *(unsigned __int8 **)v101;
            v97 = *(llvm **)(v101 + 32);
            if (!v97)
              goto LABEL_156;
          }
          else if (v95 != 57 && v95 != 58
                 || (v96 = *(unsigned __int8 **)(v66 - 64)) == 0
                 || (v518 = *(unsigned __int8 **)(v66 - 64), (v97 = *(llvm **)(v66 - 32)) == 0))
          {
LABEL_156:
            Not = 0;
            goto LABEL_130;
          }
          v513 = v97;
          v102 = (const void **)v512;
          v103 = *((unsigned int *)v512 + 2);
          v507 = v103;
          if (v103 > 0x40)
          {
            v117 = ((unint64_t)(v103 + 63) >> 3) & 0x3FFFFFF8;
            v506 = (void *)operator new[]();
            memcpy(v506, *v102, v117);
            llvm::APInt::flipAllBitsSlowCase((uint64_t)&v506);
            LODWORD(v103) = v507;
            v105 = v506;
            LOBYTE(v95) = *(_BYTE *)(v66 + 16);
            v96 = v518;
          }
          else
          {
            if ((_DWORD)v103)
              v104 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v103;
            else
              v104 = 0;
            v105 = (void *)(v104 & ~*(_QWORD *)v512);
            v506 = v105;
          }
          LODWORD(v520) = v103;
          v519 = (uint64_t)v105;
          v507 = 0;
          v118 = v95 - 28;
          if (llvm::MaskedValueIsZero((llvm *)v96, (const llvm::Value *)&v519, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v498))
          {
            v119 = *(_QWORD *)(a1 + 24);
            if ((*((_BYTE *)v513 + 23) & 0x10) == 0)
            {
              v311 = 0;
              v310 = &byte_1C871356D;
              goto LABEL_479;
            }
            v120 = ***(_QWORD ***)v513;
            v121 = *(_QWORD *)(v120 + 152);
            v122 = *(unsigned int *)(v120 + 168);
            if ((_DWORD)v122)
            {
              LODWORD(v123) = (v122 - 1) & ((v513 >> 4) ^ (v513 >> 9));
              v124 = v121 + 16 * v123;
              v125 = *(llvm **)v124;
              if (*(llvm **)v124 == v513)
              {
LABEL_478:
                v309 = *(_QWORD **)(v124 + 8);
                v312 = (void *)*v309;
                v310 = (char *)(v309 + 2);
                v311 = v312;
LABEL_479:
                LOWORD(v516) = 773;
                __s2[0] = v310;
                __s2[1] = v311;
                *(_QWORD *)&v515 = ".masked";
                v313 = sub_1C4D89BCC(v119, v513, v67, (uint64_t)__s2);
                v314 = v518;
                LOWORD(v516) = 257;
                v315 = (char *)operator new(0x80uLL);
                *(_QWORD *)v315 = 0;
                *((_QWORD *)v315 + 2) = 0;
                *((_QWORD *)v315 + 1) = 0;
                *((_QWORD *)v315 + 5) = 0;
                *((_QWORD *)v315 + 6) = 0;
                *((_QWORD *)v315 + 4) = 0;
                v316 = (uint64_t *)(v315 + 32);
                *((_QWORD *)v315 + 8) = *(_QWORD *)v314;
                Not = (uint64_t ***)(v315 + 64);
                *((_QWORD *)v315 + 3) = v315 + 64;
                *((_QWORD *)v315 + 7) = v315 + 64;
                *((_QWORD *)v315 + 9) = 0;
                v315[80] = v118 + 28;
                v315[81] = 0;
                *((_WORD *)v315 + 41) = 0;
                *((_DWORD *)v315 + 21) = 2;
                *((_DWORD *)v315 + 30) = 0;
                *(_OWORD *)(v315 + 104) = 0u;
                *(_OWORD *)(v315 + 88) = 0u;
                *(_QWORD *)v315 = v314;
                v319 = *((_QWORD *)v314 + 1);
                v318 = v314 + 8;
                v317 = v319;
                *((_QWORD *)v315 + 1) = v319;
                if (v319)
                  *(_QWORD *)(v317 + 16) = v315 + 8;
                *((_QWORD *)v315 + 2) = v318;
                *v318 = v315;
                if (*((_QWORD *)v315 + 4))
                {
                  **((_QWORD **)v315 + 6) = *((_QWORD *)v315 + 5);
                  v496 = *((_QWORD *)v315 + 5);
                  if (v496)
                    *(_QWORD *)(v496 + 16) = *((_QWORD *)v315 + 6);
                }
                *v316 = v313;
                if (v313)
                {
                  v322 = *(_QWORD *)(v313 + 8);
                  v321 = (uint64_t **)(v313 + 8);
                  v320 = v322;
                  *((_QWORD *)v315 + 5) = v322;
                  if (v322)
                    *(_QWORD *)(v320 + 16) = v315 + 40;
                  *((_QWORD *)v315 + 6) = v321;
                  *v321 = v316;
                }
LABEL_486:
                llvm::Value::setName(Not, (uint64_t)__s2);
                v128 = 0;
                goto LABEL_487;
              }
              v126 = 1;
              while (v125 != (llvm *)-4096)
              {
                v127 = v123 + v126++;
                v123 = v127 & (v122 - 1);
                v125 = *(llvm **)(v121 + 16 * v123);
                if (v125 == v513)
                {
                  v124 = v121 + 16 * v123;
                  goto LABEL_478;
                }
              }
            }
            v124 = v121 + 16 * v122;
            goto LABEL_478;
          }
          if (*((unsigned __int8 *)v513 + 16) < 0x15u)
          {
            Not = 0;
            v128 = 1;
LABEL_487:
            if (v520 >= 0x41 && v519)
              MEMORY[0x1CAA32F9C](v519, 0x1000C8000313F17);
            if (!v128)
              return (llvm::UndefValue **)Not;
LABEL_130:
            v91 = (llvm::Type *)v8;
            if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12)
              v91 = **(llvm::Type ***)(v8 + 16);
            PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v91);
            v508 = 0;
            __s2[0] = &v518;
            __s2[1] = &v508;
            *(_QWORD *)&v515 = 0;
            v499 = v69;
            if (!*(_QWORD *)v69)
              goto LABEL_214;
            if (*(_QWORD *)(*(_QWORD *)v69 + 8))
              goto LABEL_214;
            v93 = *(unsigned __int8 *)(v66 + 16);
            if (v93 <= 0x1B && v93 != 5)
              goto LABEL_214;
            v94 = v93 <= 0x1B ? *(unsigned __int16 *)(v66 + 18) : v93 - 28;
            if (v94 != 40)
              goto LABEL_214;
            v106 = *(_DWORD *)(v66 + 20);
            if ((v106 & 0x40000000) != 0)
              v107 = *(uint64_t **)(v66 - 8);
            else
              v107 = (uint64_t *)(v66 - 32 * (v106 & 0x7FFFFFF));
            v129 = *v107;
            v130 = *(unsigned __int8 *)(v129 + 16);
            if (v130 == 5)
            {
              if (*(_WORD *)(v129 + 18) != 27)
                goto LABEL_214;
              if (!*(_QWORD *)(v129 - 32 * (*(_DWORD *)(v129 + 20) & 0x7FFFFFF)))
                goto LABEL_214;
              v518 = *(unsigned __int8 **)(v129 - 32 * (*(_DWORD *)(v129 + 20) & 0x7FFFFFF));
              if ((sub_1C4D8A004((uint64_t)&__s2[1], *(llvm::Constant **)(v129 - 32 * (*(_DWORD *)(v129 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)goto LABEL_214;
            }
            else
            {
              if (v130 != 55)
                goto LABEL_214;
              if (!*(_QWORD *)(v129 - 64))
                goto LABEL_214;
              v518 = *(unsigned __int8 **)(v129 - 64);
              if (!sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v129 - 32)))
                goto LABEL_214;
            }
            v156 = v512;
            v157 = v508;
            if (*((_DWORD *)v508 + 2) >= 0x41u)
              v157 = *(llvm::APInt **)v508;
            v158 = PrimitiveSizeInBits - *(_DWORD *)v157;
            LODWORD(__s2[1]) = PrimitiveSizeInBits;
            if (PrimitiveSizeInBits > 0x40)
              llvm::APInt::initSlowCase((llvm::APInt *)__s2, 0, 0);
            else
              __s2[0] = 0;
            sub_1C4912E54(__s2, 0, v158);
            v159 = *((unsigned int *)v156 + 2);
            v160 = __s2[0];
            if (v159 > 0x40)
              v161 = memcmp(*(const void **)v156, __s2[0], ((unint64_t)(v159 + 63) >> 3) & 0x3FFFFFF8) == 0;
            else
              v161 = *(void **)v156 == __s2[0];
            v339 = v161;
            if (LODWORD(__s2[1]) >= 0x41 && v160)
              MEMORY[0x1CAA32F9C](v160, 0x1000C8000313F17);
            if (v339)
            {
              v340 = *(uint64_t **)(a1 + 24);
              LOWORD(v516) = 257;
              v51 = sub_1C4773E38(v340, 40, v518, v8, (uint64_t)__s2);
              llvm::APInt::zext(v508, PrimitiveSizeInBits, (uint64_t)__s2);
              v52 = (unsigned __int8 *)llvm::ConstantInt::get((llvm::ConstantInt **)v8, (llvm::Type *)__s2, v341);
              if (LODWORD(__s2[1]) >= 0x41 && __s2[0])
                MEMORY[0x1CAA32F9C](__s2[0], 0x1000C8000313F17);
              LOWORD(v516) = 257;
LABEL_229:
              v53 = (char *)operator new(0x80uLL);
              *((_QWORD *)v53 + 5) = 0;
              v54 = v53 + 40;
              *((_QWORD *)v53 + 6) = 0;
              *((_QWORD *)v53 + 8) = *(_QWORD *)v51;
              Not = (uint64_t ***)(v53 + 64);
              *((_QWORD *)v53 + 3) = v53 + 64;
              *((_QWORD *)v53 + 7) = v53 + 64;
              *((_QWORD *)v53 + 9) = 0;
              v55 = 54;
              goto LABEL_72;
            }
LABEL_214:
            __s2[0] = &v518;
            __s2[1] = &v508;
            *(_QWORD *)&v515 = 0;
            v162 = *(unsigned __int8 *)(v66 + 16);
            if (v162 == 5)
            {
              if (*(_WORD *)(v66 + 18) != 27
                || (v163 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF), !*(_QWORD *)v163)
                || (v518 = *(unsigned __int8 **)v163,
                    !sub_1C4D8A004((uint64_t)&__s2[1], *(llvm::Constant **)(v163 + 32))))
              {
LABEL_230:
                v505 = 0;
                __s2[0] = &v518;
                __s2[1] = &v505;
                *(_QWORD *)&v515 = 0;
                v168 = *(unsigned __int8 *)(v66 + 16);
                if (v168 == 5)
                {
                  if (*(_WORD *)(v66 + 18) != 13)
                    goto LABEL_269;
                  v169 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF);
                  if (!*(_QWORD *)v169)
                    goto LABEL_269;
                  v518 = *(unsigned __int8 **)v169;
                  if ((sub_1C4D8A004((uint64_t)&__s2[1], *(llvm::Constant **)(v169 + 32)) & 1) == 0)
                    goto LABEL_269;
                }
                else if (v168 != 41
                       || !*(_QWORD *)(v66 - 64)
                       || (v518 = *(unsigned __int8 **)(v66 - 64),
                           !sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v66 - 32))))
                {
LABEL_269:
                  if (!*(_QWORD *)v69
                    || *(_QWORD *)(*(_QWORD *)v69 + 8)
                    || (v213 = *(unsigned __int8 *)(v66 + 16), v213 < 0x1C)
                    || v213 - 59 < 0xFFFFFFEE
                    || v213 > 0x3A
                    || ((1 << v213) & 0x6002A0000000000) == 0)
                  {
LABEL_271:
                    __s2[0] = &v518;
                    __s2[1] = &v513;
                    v195 = *(unsigned __int8 *)(v6 + 16);
                    if (v195 == 56)
                    {
                      v196 = *(_QWORD *)(v6 - 64);
                      v197 = *(_QWORD *)(v196 + 8);
                      if (!v197 || *(_QWORD *)(v197 + 8))
                        goto LABEL_283;
                      v198 = *(unsigned __int8 *)(v196 + 16);
                      if (v198 == 5)
                      {
                        if (*(_WORD *)(v196 + 18) != 25)
                          goto LABEL_283;
                        if (!sub_1C4B0378C((_QWORD **)__s2, *(_QWORD *)(v196 - 32 * (*(_DWORD *)(v196 + 20) & 0x7FFFFFF))))goto LABEL_283;
                        v199 = *(_QWORD *)(v196 - 32 * (*(_DWORD *)(v196 + 20) & 0x7FFFFFF) + 32);
                        if (!v199)
                          goto LABEL_283;
                      }
                      else
                      {
                        if (v198 != 53)
                          goto LABEL_283;
                        if (!sub_1C4B0378C((_QWORD **)__s2, *(_QWORD *)(v196 - 64)))
                          goto LABEL_283;
                        v199 = *(_QWORD *)(v196 - 32);
                        if (!v199)
                          goto LABEL_283;
                      }
                      *(_QWORD *)__s2[1] = v199;
                      if (!sub_1C4E7119C((uint64_t)&v515, *(unsigned __int8 **)(v6 - 32)))
                        goto LABEL_283;
                      v246 = v69;
                    }
                    else
                    {
                      if (v195 != 5)
                        goto LABEL_283;
                      if (*(_WORD *)(v6 + 18) != 28)
                        goto LABEL_283;
                      v200 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                      v201 = *(_QWORD *)(v200 + 8);
                      if (!v201 || *(_QWORD *)(v201 + 8))
                        goto LABEL_283;
                      v246 = v69;
                      v247 = *(unsigned __int8 *)(v200 + 16);
                      if (v247 == 5)
                      {
                        if (*(_WORD *)(v200 + 18) != 25)
                          goto LABEL_283;
                        if (!sub_1C4B0378C((_QWORD **)__s2, *(_QWORD *)(v200 - 32 * (*(_DWORD *)(v200 + 20) & 0x7FFFFFF))))goto LABEL_283;
                        v248 = *(_QWORD *)(v200 - 32 * (*(_DWORD *)(v200 + 20) & 0x7FFFFFF) + 32);
                        if (!v248)
                          goto LABEL_283;
                      }
                      else
                      {
                        if (v247 != 53)
                          goto LABEL_283;
                        if (!sub_1C4B0378C((_QWORD **)__s2, *(_QWORD *)(v200 - 64)))
                          goto LABEL_283;
                        v248 = *(_QWORD *)(v200 - 32);
                        if (!v248)
                          goto LABEL_283;
                      }
                      *(_QWORD *)__s2[1] = v248;
                      if ((sub_1C4E71378((uint64_t)&v515, *(unint64_t ***)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32)) & 1) == 0)goto LABEL_283;
                    }
                    v261 = v513;
                    v262 = (llvm::Type *)v8;
                    if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12)
                      v262 = **(llvm::Type ***)(v8 + 16);
                    v263 = llvm::Type::getPrimitiveSizeInBits(v262);
                    v264 = *(llvm::Type **)v518;
                    if ((*(_DWORD *)(*(_QWORD *)v518 + 8) & 0xFE) == 0x12)
                      v264 = (llvm::Type *)**((_QWORD **)v264 + 2);
                    v265 = v263 - llvm::Type::getPrimitiveSizeInBits(v264);
                    v509 = v263;
                    if (v263 > 0x40)
                    {
                      llvm::APInt::initSlowCase((llvm::APInt *)&v508, v265, 0);
                    }
                    else
                    {
                      if (v263)
                        v266 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v263;
                      else
                        v266 = 0;
                      v508 = (llvm::APInt *)(v266 & v265);
                    }
                    v519 = 32;
                    v520 = &v508;
                    sub_1C57BEAF0((uint64_t)&v519, v261);
                    v268 = v267;
                    if (v509 >= 0x41 && v508)
                      MEMORY[0x1CAA32F9C](v508, 0x1000C8000313F17);
                    v69 = v246;
                    if (v268)
                    {
                      v269 = *(uint64_t **)(a1 + 24);
                      if ((v518[23] & 0x10) == 0)
                      {
                        v453 = 0;
                        v452 = &byte_1C871356D;
                        goto LABEL_714;
                      }
                      v270 = ***(_QWORD ***)v518;
                      v271 = *(_QWORD *)(v270 + 152);
                      v272 = *(unsigned int *)(v270 + 168);
                      if ((_DWORD)v272)
                      {
                        LODWORD(v273) = (v272 - 1) & ((v518 >> 4) ^ (v518 >> 9));
                        v274 = v271 + 16 * v273;
                        v275 = *(unsigned __int8 **)v274;
                        if (*(unsigned __int8 **)v274 == v518)
                        {
LABEL_713:
                          v451 = *(_QWORD **)(v274 + 8);
                          v454 = (void *)*v451;
                          v452 = (char *)(v451 + 2);
                          v453 = v454;
LABEL_714:
                          LOWORD(v516) = 773;
                          __s2[0] = v452;
                          __s2[1] = v453;
                          *(_QWORD *)&v515 = ".signext";
                          v51 = sub_1C4773E38(v269, 40, v518, v8, (uint64_t)__s2);
                          if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12)
                            v8 = **(_QWORD **)(v8 + 16);
                          NullValue = llvm::Constant::getNullValue((llvm::Constant *)v8, v455);
                          v458 = llvm::Constant::replaceUndefsWith((llvm::Constant *)v67, (llvm::Constant *)NullValue, v457);
                          v52 = (unsigned __int8 *)llvm::Constant::mergeUndefsWith(v458, v513, v459);
                          LOWORD(v516) = 257;
                          v53 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v53 + 5) = 0;
                          v54 = v53 + 40;
                          *((_QWORD *)v53 + 6) = 0;
                          *((_QWORD *)v53 + 8) = *(_QWORD *)v51;
                          Not = (uint64_t ***)(v53 + 64);
                          *((_QWORD *)v53 + 3) = v53 + 64;
                          *((_QWORD *)v53 + 7) = v53 + 64;
                          *((_QWORD *)v53 + 9) = 0;
                          v55 = 56;
                          goto LABEL_72;
                        }
                        v276 = 1;
                        while (v275 != (unsigned __int8 *)-4096)
                        {
                          v277 = v273 + v276++;
                          v273 = v277 & (v272 - 1);
                          v275 = *(unsigned __int8 **)(v271 + 16 * v273);
                          if (v275 == v518)
                          {
                            v274 = v271 + 16 * v273;
                            goto LABEL_713;
                          }
                        }
                      }
                      v274 = v271 + 16 * v272;
                      goto LABEL_713;
                    }
LABEL_283:
                    v202 = *(_QWORD *)(v6 - 64);
                    v203 = *(_QWORD *)(v202 + 8);
                    if (!v203 || *(_QWORD *)(v203 + 8))
                    {
LABEL_285:
                      v204 = *(_DWORD *)(*(_QWORD *)v6 + 8);
                      if ((v204 & 0xFE) == 0x12)
                        v204 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v6 + 16) + 8);
                      if (v204 == 269)
                      {
                        if (*(_BYTE *)(v66 + 16) == 85)
                        {
                          Not = (uint64_t ***)sub_1C583A138(a1, (llvm *)v67, v66, (const llvm::DataLayout *)1);
                          if (Not)
                            return (llvm::UndefValue **)Not;
                        }
                        if (*(_BYTE *)(v67 + 16) == 85)
                        {
                          if (v67)
                          {
                            Not = (uint64_t ***)sub_1C583A138(a1, (llvm *)v66, v67, (const llvm::DataLayout *)1);
                            if (Not)
                              return (llvm::UndefValue **)Not;
                          }
                        }
                      }
                      Not = (uint64_t ***)sub_1C5781CD4(a1, (_BYTE *)v6);
                      if (Not)
                        return (llvm::UndefValue **)Not;
                      Not = (uint64_t ***)sub_1C57AE190((uint64_t ***)v6, *(_QWORD *)(a1 + 24));
                      if (Not)
                        return (llvm::UndefValue **)Not;
                      v508 = 0;
                      v510 = 0;
                      v511 = 0;
                      v207 = *(_QWORD *)(v67 + 8);
                      v206 = v67 + 8;
                      v205 = v207;
                      if (!v207 || *(_QWORD *)(v205 + 8))
                      {
LABEL_297:
                        if (!*(_QWORD *)v69 || *(_QWORD *)(*(_QWORD *)v69 + 8))
                        {
LABEL_299:
                          __s2[0] = (void *)v66;
                          __s2[1] = &v511;
                          if (sub_1C57BEC00((uint64_t *)__s2, (uint64_t)v501))
                          {
                            v52 = (unsigned __int8 *)v511;
                            LOWORD(v516) = 257;
                            v53 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v53 + 6) = 0;
                            *((_QWORD *)v53 + 5) = 0;
                            v54 = v53 + 40;
                            *((_QWORD *)v53 + 8) = *(_QWORD *)v66;
                            Not = (uint64_t ***)(v53 + 64);
                            *((_QWORD *)v53 + 3) = v53 + 64;
                            *((_QWORD *)v53 + 7) = v53 + 64;
                            *((_QWORD *)v53 + 9) = 0;
                            v53[80] = 56;
                            v53[81] = 0;
                            *((_WORD *)v53 + 41) = 0;
                            *((_DWORD *)v53 + 21) = 2;
                            *(_OWORD *)(v53 + 88) = 0u;
                            *(_OWORD *)(v53 + 104) = 0u;
                            *((_DWORD *)v53 + 30) = 0;
                            *(_QWORD *)v53 = v66;
                            v208 = *(_QWORD *)(v66 + 8);
                            *((_QWORD *)v53 + 1) = v208;
                            if (v208)
                              *(_QWORD *)(v208 + 16) = v53 + 8;
                            *((_QWORD *)v53 + 2) = v69;
                            *(_QWORD *)v69 = v53;
LABEL_75:
                            *((_QWORD *)v53 + 4) = v52;
                            if (v52)
                            {
                              v61 = *((_QWORD *)v52 + 1);
                              v60 = v52 + 8;
                              v59 = v61;
                              *v54 = v61;
                              if (v61)
                                *(_QWORD *)(v59 + 16) = v54;
                              *((_QWORD *)v53 + 6) = v60;
                              *v60 = v53 + 32;
                            }
LABEL_79:
                            v62 = __s2;
LABEL_80:
                            llvm::Value::setName(Not, (uint64_t)v62);
                            return (llvm::UndefValue **)Not;
                          }
                          __s2[0] = v501;
                          __s2[1] = &v511;
                          if (sub_1C57BEC00((uint64_t *)__s2, v66))
                          {
                            v52 = (unsigned __int8 *)v511;
                            LOWORD(v516) = 257;
                            v53 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v53 + 6) = 0;
                            *((_QWORD *)v53 + 5) = 0;
                            v54 = v53 + 40;
                            *((_QWORD *)v53 + 8) = *(_QWORD *)v501;
                            Not = (uint64_t ***)(v53 + 64);
                            *((_QWORD *)v53 + 3) = v53 + 64;
                            *((_QWORD *)v53 + 7) = v53 + 64;
                            *((_QWORD *)v53 + 9) = 0;
                            v53[80] = 56;
                            v53[81] = 0;
                            *((_WORD *)v53 + 41) = 0;
                            *((_DWORD *)v53 + 21) = 2;
                            *(_OWORD *)(v53 + 88) = 0u;
                            *(_OWORD *)(v53 + 104) = 0u;
                            *((_DWORD *)v53 + 30) = 0;
                            *(_QWORD *)v53 = v501;
                            v249 = *((_QWORD *)v501 + 1);
                            *((_QWORD *)v53 + 1) = v249;
                            if (v249)
                              *(_QWORD *)(v249 + 16) = v53 + 8;
                            *((_QWORD *)v53 + 2) = v206;
                            *(_QWORD *)v206 = v53;
                            goto LABEL_75;
                          }
                          v258 = *(unsigned __int8 *)(v66 + 16);
                          if (v258 == 5)
                          {
                            if (*(_WORD *)(v66 + 18) != 30)
                              goto LABEL_566;
                            v296 = (llvm::APInt **)(v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF));
                            v259 = *v296;
                            if (!*v296)
                              goto LABEL_566;
                            v508 = *v296;
                            v260 = v296[4];
                            if (!v260)
                              goto LABEL_566;
                          }
                          else
                          {
                            if (v258 != 58)
                              goto LABEL_566;
                            v259 = *(llvm::APInt **)(v66 - 64);
                            if (!v259)
                              goto LABEL_566;
                            v508 = *(llvm::APInt **)(v66 - 64);
                            v260 = *(llvm::Value **)(v66 - 32);
                            if (!v260)
                              goto LABEL_566;
                          }
                          v511 = v260;
                          __s2[0] = v260;
                          __s2[1] = &v510;
                          *(_QWORD *)&v515 = v259;
                          if (sub_1C57BEEBC((uint64_t)__s2, (uint64_t)v501))
                          {
                            if (*(_QWORD *)v206 && !*(_QWORD *)(*(_QWORD *)v206 + 8)
                              || ((v297 = *((_QWORD *)v510 + 1)) == 0
                                ? (v298 = 0)
                                : (v298 = *(_QWORD *)(v297 + 8) == 0),
                                  sub_1C579CB78((uint64_t)v510, v298)))
                            {
                              v342 = *(_QWORD *)(a1 + 24);
                              v254 = v510;
                              goto LABEL_534;
                            }
                          }
LABEL_566:
                          __s2[0] = &v508;
                          __s2[1] = &v510;
                          *(_QWORD *)&v515 = &v511;
                          if (!sub_1C57BF018((_QWORD **)__s2, v66))
                            goto LABEL_575;
                          v373 = *((unsigned __int8 *)v501 + 16);
                          if (v373 == 5)
                          {
                            if (*((_WORD *)v501 + 9) != 30)
                              goto LABEL_575;
                            v375 = (llvm::Value **)((char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF));
                            if (v511 != *v375)
                              goto LABEL_575;
                            v374 = v375[4];
                          }
                          else
                          {
                            if (v373 != 58 || v511 != *((llvm::Value **)v501 - 8))
                              goto LABEL_575;
                            v374 = (llvm::APInt *)*((_QWORD *)v501 - 4);
                          }
                          if (v508 == v374)
                          {
                            if (*(_QWORD *)v69 && !*(_QWORD *)(*(_QWORD *)v69 + 8)
                              || ((v430 = *((_QWORD *)v510 + 1)) == 0
                                ? (v431 = 0)
                                : (v431 = *(_QWORD *)(v430 + 8) == 0),
                                  sub_1C579CB78((uint64_t)v510, v431)))
                            {
                              v347 = *(_QWORD *)(a1 + 24);
                              v257 = v510;
                              goto LABEL_540;
                            }
                          }
LABEL_575:
                          __s2[0] = &v508;
                          *(_QWORD *)&v515 = &v511;
                          if (sub_1C4E76FA0((_QWORD **)__s2, 30, (uint64_t)v501))
                          {
                            v376 = v508;
                            v377 = v511;
                            v378 = *(unsigned __int8 *)(v66 + 16);
                            if (v378 == 5)
                            {
                              if (*(_WORD *)(v66 + 18) == 29)
                              {
                                v381 = (llvm::APInt **)(v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF));
                                v379 = *v381;
                                v380 = v381[4];
LABEL_581:
                                if (v508 == v379 && v511 == v380 || v508 == v380 && v511 == v379)
                                  goto LABEL_593;
                              }
                            }
                            else if (v378 == 57)
                            {
                              v379 = *(llvm::APInt **)(v66 - 64);
                              v380 = *(llvm::Value **)(v66 - 32);
                              goto LABEL_581;
                            }
                          }
                          __s2[0] = &v508;
                          *(_QWORD *)&v515 = &v511;
                          if (!sub_1C4E76FA0((_QWORD **)__s2, 30, v66))
                            goto LABEL_601;
                          v376 = v508;
                          v377 = v511;
                          v382 = *((unsigned __int8 *)v501 + 16);
                          if (v382 == 5)
                          {
                            if (*((_WORD *)v501 + 9) != 29)
                              goto LABEL_601;
                            v385 = (llvm::APInt **)((char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF));
                            v383 = *v385;
                            v384 = v385[4];
                          }
                          else
                          {
                            if (v382 != 57)
                              goto LABEL_601;
                            v383 = (llvm::APInt *)*((_QWORD *)v501 - 8);
                            v384 = (llvm::Value *)*((_QWORD *)v501 - 4);
                          }
                          if ((v508 != v383 || v511 != v384) && (v508 != v384 || v511 != v383))
                          {
LABEL_601:
                            __s2[0] = &v508;
                            *(_QWORD *)&v515 = &v511;
                            if (sub_1C4E76FA0((_QWORD **)__s2, 29, v66))
                            {
                              v394 = v508;
                              v395 = *((unsigned __int8 *)v501 + 16);
                              if (v395 == 5)
                              {
                                if (*((_WORD *)v501 + 9) == 30)
                                {
                                  v398 = (llvm::APInt **)((char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF));
                                  v396 = *v398;
                                  v397 = v398[4];
LABEL_607:
                                  if (v508 == v396 && v511 == v397 || v508 == v397 && v511 == v396)
                                    goto LABEL_619;
                                }
                              }
                              else if (v395 == 58)
                              {
                                v396 = (llvm::APInt *)*((_QWORD *)v501 - 8);
                                v397 = (llvm::Value *)*((_QWORD *)v501 - 4);
                                goto LABEL_607;
                              }
                            }
                            __s2[0] = &v508;
                            *(_QWORD *)&v515 = &v511;
                            if (!sub_1C4E76FA0((_QWORD **)__s2, 29, (uint64_t)v501))
                              goto LABEL_628;
                            v394 = v508;
                            v399 = *(unsigned __int8 *)(v66 + 16);
                            if (v399 == 5)
                            {
                              if (*(_WORD *)(v66 + 18) != 30)
                                goto LABEL_628;
                              v402 = (llvm::APInt **)(v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF));
                              v400 = *v402;
                              v401 = v402[4];
                            }
                            else
                            {
                              if (v399 != 58)
                                goto LABEL_628;
                              v400 = *(llvm::APInt **)(v66 - 64);
                              v401 = *(llvm::Value **)(v66 - 32);
                            }
                            if ((v508 != v400 || v511 != v401) && (v508 != v401 || v511 != v400))
                            {
LABEL_628:
                              if (*(_BYTE *)(v66 + 16) == 81)
                                v414 = v66;
                              else
                                v414 = 0;
                              if (*((_BYTE *)v501 + 16) == 81)
                                v415 = (uint64_t)v501;
                              else
                                v415 = 0;
                              if (v414 && v415)
                              {
                                v13 = (llvm::Value *)sub_1C57A48A8(a1, v414, v415, (llvm::AssumptionCache *)v6);
                                if (v13)
                                  return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v13);
                              }
                              else if (!v414)
                              {
                                goto LABEL_641;
                              }
                              if (!*(_QWORD *)v206 || *(_QWORD *)(*(_QWORD *)v206 + 8))
                                goto LABEL_641;
                              v425 = *((unsigned __int8 *)v501 + 16);
                              if (v425 == 5)
                              {
                                if (*((_WORD *)v501 + 9) != 28)
                                  goto LABEL_641;
                                v432 = (char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF);
                                v426 = *(unsigned __int8 **)v432;
                                if (!*(_QWORD *)v432)
                                  goto LABEL_641;
                                v518 = *(unsigned __int8 **)v432;
                                v427 = (llvm *)*((_QWORD *)v432 + 4);
                                if (!v427)
                                  goto LABEL_641;
                              }
                              else
                              {
                                if (v425 != 56)
                                  goto LABEL_641;
                                v426 = (unsigned __int8 *)*((_QWORD *)v501 - 8);
                                if (!v426)
                                  goto LABEL_641;
                                v518 = (unsigned __int8 *)*((_QWORD *)v501 - 8);
                                v427 = (llvm *)*((_QWORD *)v501 - 4);
                                if (!v427)
                                  goto LABEL_641;
                              }
                              v513 = v427;
                              if (v426[16] == 81)
                              {
                                v433 = sub_1C57A48A8(a1, v414, (uint64_t)v426, (llvm::AssumptionCache *)v6);
                                v427 = v513;
                                if (v433)
                                {
LABEL_688:
                                  v436 = (_QWORD *)v433;
                                  v437 = *(_QWORD *)(a1 + 24);
LABEL_711:
                                  LOWORD(v516) = 257;
                                  v13 = (llvm::Value *)sub_1C4D89BCC(v437, v436, (uint64_t)v427, (uint64_t)__s2);
                                  return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v13);
                                }
                              }
                              if (v427)
                              {
                                if (*((_BYTE *)v427 + 16) == 81)
                                {
                                  v434 = sub_1C57A48A8(a1, v414, (uint64_t)v427, (llvm::AssumptionCache *)v6);
                                  if (v434)
                                  {
LABEL_710:
                                    v436 = (_QWORD *)v434;
                                    v437 = *(_QWORD *)(a1 + 24);
                                    v427 = (llvm *)v518;
                                    goto LABEL_711;
                                  }
                                }
                              }
LABEL_641:
                              if (!v415 || !*(_QWORD *)v69 || *(_QWORD *)(*(_QWORD *)v69 + 8))
                              {
LABEL_644:
                                v416 = *(_QWORD *)(v6 - 64);
                                if (!v416
                                  || *(_BYTE *)(v416 + 16) != 82
                                  || (v417 = *(_QWORD *)(v6 - 32)) == 0
                                  || *(_BYTE *)(v417 + 16) != 82
                                  || (v13 = (llvm::Value *)sub_1C57A7EF8(a1, v416, v417, 1, 0)) == 0)
                                {
                                  Not = (uint64_t ***)sub_1C57AE58C(v6, *(_QWORD *)(a1 + 24));
                                  if (Not)
                                    return (llvm::UndefValue **)Not;
                                  sub_1C57A8198(a1, (unsigned __int8 *)v6);
                                  Not = v418;
                                  if (v418)
                                    return (llvm::UndefValue **)Not;
                                  Not = (uint64_t ***)sub_1C577FC5C(a1, v6);
                                  if (Not)
                                    return (llvm::UndefValue **)Not;
                                  v519 = 0;
                                  __s2[0] = &v519;
                                  if (*(_QWORD *)v69
                                    && !*(_QWORD *)(*(_QWORD *)v69 + 8)
                                    && sub_1C4B037F8((_QWORD **)__s2, v66))
                                  {
                                    v420 = v519;
                                    v421 = *(_DWORD *)(*(_QWORD *)v519 + 8);
                                    if ((v421 & 0xFE) == 0x12)
                                      v421 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v519 + 16) + 8);
                                    if (v421 == 269)
                                    {
                                      v422 = llvm::Constant::getNullValue((llvm::Constant *)v8, v419);
                                      LOWORD(v516) = 257;
                                      v423 = v420;
                                      v424 = (uint64_t *)v501;
                                      return (llvm::UndefValue **)sub_1C4FC8748(v423, v424, (uint64_t)v422, (uint64_t)__s2, 0, 0);
                                    }
                                  }
                                  __s2[0] = &v519;
                                  if (*(_QWORD *)v206
                                    && !*(_QWORD *)(*(_QWORD *)v206 + 8)
                                    && sub_1C4B037F8((_QWORD **)__s2, (uint64_t)v501))
                                  {
                                    v439 = v519;
                                    v440 = *(_DWORD *)(*(_QWORD *)v519 + 8);
                                    if ((v440 & 0xFE) == 0x12)
                                      v440 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v519 + 16) + 8);
                                    if (v440 == 269)
                                    {
                                      v422 = llvm::Constant::getNullValue((llvm::Constant *)v8, v438);
                                      LOWORD(v516) = 257;
                                      v423 = v439;
                                      v424 = (uint64_t *)v66;
                                      return (llvm::UndefValue **)sub_1C4FC8748(v423, v424, (uint64_t)v422, (uint64_t)__s2, 0, 0);
                                    }
                                  }
                                  v441 = (llvm::Type *)v8;
                                  if ((*(_DWORD *)(v8 + 8) & 0xFE) == 0x12)
                                    v441 = **(llvm::Type ***)(v8 + 16);
                                  v443 = (void *)(llvm::Type::getPrimitiveSizeInBits(v441) - 1);
                                  LODWORD(v515) = 64;
                                  __s2[0] = &v518;
                                  __s2[1] = v443;
                                  v444 = &v513;
                                  *((_QWORD *)&v515 + 1) = &v513;
                                  v445 = *(unsigned __int8 *)(v6 + 16);
                                  if (v445 == 56)
                                  {
                                    v446 = *(_QWORD *)(v6 - 64);
                                    v447 = *(_QWORD *)(v446 + 8);
                                    if (v447 && !*(_QWORD *)(v447 + 8))
                                    {
                                      v479 = *(unsigned __int8 *)(v446 + 16);
                                      if (v479 == 5)
                                      {
                                        if (*(_WORD *)(v446 + 18) != 27)
                                          goto LABEL_701;
                                        if (!*(_QWORD *)(v446 - 32 * (*(_DWORD *)(v446 + 20) & 0x7FFFFFF)))
                                          goto LABEL_701;
                                        v518 = *(unsigned __int8 **)(v446 - 32 * (*(_DWORD *)(v446 + 20) & 0x7FFFFFF));
                                        if (!sub_1C4D8A86C((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v446- 32 * (*(_DWORD *)(v446 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_701;
                                      }
                                      else
                                      {
                                        if (v479 != 55)
                                          goto LABEL_701;
                                        if (!*(_QWORD *)(v446 - 64))
                                          goto LABEL_701;
                                        v518 = *(unsigned __int8 **)(v446 - 64);
                                        if (!sub_1C4D8A7F0((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v446 - 32)))
                                          goto LABEL_701;
                                      }
                                      v486 = *(_QWORD *)(v6 - 32);
                                      if (v486)
                                      {
LABEL_789:
                                        **((_QWORD **)&v515 + 1) = v486;
                                        v450 = 1;
                                        goto LABEL_725;
                                      }
                                    }
LABEL_701:
                                    v448 = *(_QWORD *)(v6 - 32);
                                    v449 = *(_QWORD *)(v448 + 8);
                                    if (!v449 || *(_QWORD *)(v449 + 8))
                                      goto LABEL_703;
                                    v480 = *(unsigned __int8 *)(v448 + 16);
                                    if (v480 == 5)
                                    {
                                      if (*(_WORD *)(v448 + 18) != 27)
                                        goto LABEL_703;
                                      v487 = *(_QWORD *)(v448 - 32 * (*(_DWORD *)(v448 + 20) & 0x7FFFFFF));
                                      if (!v487)
                                        goto LABEL_703;
                                      *(_QWORD *)__s2[0] = v487;
                                      if (!sub_1C4D8A86C((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v448- 32 * (*(_DWORD *)(v448 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_703;
                                    }
                                    else
                                    {
                                      if (v480 != 55)
                                        goto LABEL_703;
                                      v481 = *(_QWORD *)(v448 - 64);
                                      if (!v481)
                                        goto LABEL_703;
                                      *(_QWORD *)__s2[0] = v481;
                                      if (!sub_1C4D8A7F0((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v448 - 32)))
                                        goto LABEL_703;
                                    }
                                    v486 = *(_QWORD *)(v6 - 64);
                                    if (v486)
                                      goto LABEL_789;
LABEL_703:
                                    v450 = 0;
LABEL_725:
                                    if (v515 >= 0x41 && __s2[1])
                                      MEMORY[0x1CAA32F9C](__s2[1], 0x1000C8000313F17);
                                    if (v450)
                                    {
                                      v464 = llvm::Constant::getNullValue((llvm::Constant *)v8, v442);
                                      v465 = *(_QWORD *)(a1 + 24);
                                      __s2[0] = "isneg";
                                      LOWORD(v516) = 259;
                                      v423 = sub_1C4774B48(v465, 40, (uint64_t)v518, (uint64_t)v464, (uint64_t)__s2);
                                      v424 = (uint64_t *)v513;
                                      LOWORD(v516) = 257;
                                      v422 = v464;
                                      return (llvm::UndefValue **)sub_1C4FC8748(v423, v424, (uint64_t)v422, (uint64_t)__s2, 0, 0);
                                    }
                                    LODWORD(v515) = 64;
                                    __s2[0] = &v518;
                                    __s2[1] = v443;
                                    v466 = &v513;
                                    v516 = &v513;
                                    v467 = *(unsigned __int8 *)(v6 + 16);
                                    if (v467 == 56)
                                    {
                                      v468 = *(_QWORD *)(v6 - 64);
                                      v469 = *(_QWORD *)(v468 + 8);
                                      if (v469
                                        && !*(_QWORD *)(v469 + 8)
                                        && sub_1C57BF18C((_QWORD **)__s2, v468)
                                        && (v470 = *(llvm **)(v6 - 32)) != 0
                                        || (v442 = *(llvm::Type **)(v6 - 32), (v471 = *((_QWORD *)v442 + 1)) != 0)
                                        && !*(_QWORD *)(v471 + 8)
                                        && sub_1C57BF18C((_QWORD **)__s2, (uint64_t)v442)
                                        && (v470 = *(llvm **)(v6 - 64)) != 0)
                                      {
                                        *v516 = v470;
                                        v472 = 1;
                                      }
                                      else
                                      {
                                        v472 = 0;
                                      }
                                      goto LABEL_765;
                                    }
                                    if (v467 == 5)
                                    {
                                      if (*(_WORD *)(v6 + 18) != 28)
                                        goto LABEL_763;
                                      v473 = *(_DWORD *)(v6 + 20) & 0x7FFFFFF;
                                      v474 = -v473;
                                      v475 = *(_QWORD *)(v6 - 32 * v473);
                                      v476 = *(_QWORD *)(v475 + 8);
                                      if (v476)
                                      {
                                        if (!*(_QWORD *)(v476 + 8))
                                        {
                                          v477 = sub_1C57BF18C((_QWORD **)__s2, v475);
                                          v474 = -(uint64_t)(*(_DWORD *)(v6 + 20) & 0x7FFFFFF);
                                          if (v477)
                                          {
                                            v478 = *(llvm **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                            if (v478)
                                              goto LABEL_751;
                                          }
                                        }
                                      }
                                      v442 = *(llvm::Type **)(v6 + 32 * v474 + 32);
                                      v466 = (llvm **)*((_QWORD *)v442 + 1);
                                      if (v466)
                                      {
                                        if (!v466[1])
                                        {
                                          if (sub_1C57BF18C((_QWORD **)__s2, (uint64_t)v442))
                                          {
                                            v478 = *(llvm **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                            if (v478)
                                            {
LABEL_751:
                                              *v516 = v478;
                                              LOBYTE(v466) = 1;
                                              goto LABEL_764;
                                            }
                                          }
                                        }
LABEL_763:
                                        LOBYTE(v466) = 0;
                                      }
                                    }
LABEL_764:
                                    v472 = (v467 == 5) & v466;
LABEL_765:
                                    if (v515 >= 0x41 && __s2[1])
                                      MEMORY[0x1CAA32F9C](__s2[1], 0x1000C8000313F17);
                                    if (!v472)
                                    {
                                      if ((sub_1C57AE84C(a1, (llvm::ValueAsMetadata *)v6) & 1) != 0)
                                        return (llvm::UndefValue **)v6;
                                      v508 = 0;
                                      v511 = 0;
                                      __s2[0] = 0;
                                      v485 = *(const llvm::Instruction **)(v6 - 64);
                                      if (!v485 || *((_BYTE *)v485 + 16) != 83)
                                      {
                                        v485 = *(const llvm::Instruction **)(v6 - 32);
                                        if (!v485 || *((_BYTE *)v485 + 16) != 83)
                                          return 0;
                                      }
                                      if ((llvm::matchSimpleRecurrence((uint64_t)v485, __s2, &v508, &v511) & 1) == 0)
                                        return 0;
                                      if (__s2[0] != (void *)v6)
                                        return 0;
                                      v492 = v511;
                                      if (!llvm::DominatorTree::dominates(*(llvm::DominatorTree **)(a1 + 72), v511, v485))return 0;
                                      v493 = *(_QWORD *)(a1 + 24);
                                      LOWORD(v516) = 257;
                                      v494 = (llvm::Value *)sub_1C4D89BCC(v493, v508, (uint64_t)v492, (uint64_t)__s2);
                                      return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v494);
                                    }
                                    v482 = llvm::Constant::getNullValue((llvm::Constant *)v8, v442);
                                    v483 = *(_QWORD *)(a1 + 24);
                                    __s2[0] = "isneg";
                                    LOWORD(v516) = 259;
                                    v423 = sub_1C4774B48(v483, 40, (uint64_t)v518, (uint64_t)v482, (uint64_t)__s2);
                                    v422 = v513;
                                    LOWORD(v516) = 257;
                                    v424 = (uint64_t *)v482;
                                    return (llvm::UndefValue **)sub_1C4FC8748(v423, v424, (uint64_t)v422, (uint64_t)__s2, 0, 0);
                                  }
                                  if (v445 != 5)
                                  {
LABEL_724:
                                    v450 = (v445 == 5) & v444;
                                    goto LABEL_725;
                                  }
                                  if (*(_WORD *)(v6 + 18) != 28)
                                    goto LABEL_723;
                                  v460 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                  v461 = *(_QWORD *)(v460 + 8);
                                  if (v461 && !*(_QWORD *)(v461 + 8))
                                  {
                                    v488 = *(unsigned __int8 *)(v460 + 16);
                                    if (v488 == 5)
                                    {
                                      if (*(_WORD *)(v460 + 18) != 27)
                                        goto LABEL_721;
                                      if (!*(_QWORD *)(v460 - 32 * (*(_DWORD *)(v460 + 20) & 0x7FFFFFF)))
                                        goto LABEL_721;
                                      v518 = *(unsigned __int8 **)(v460 - 32 * (*(_DWORD *)(v460 + 20) & 0x7FFFFFF));
                                      if (!sub_1C4D8A86C((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v460- 32 * (*(_DWORD *)(v460 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_721;
                                    }
                                    else
                                    {
                                      if (v488 != 55)
                                        goto LABEL_721;
                                      if (!*(_QWORD *)(v460 - 64))
                                        goto LABEL_721;
                                      v518 = *(unsigned __int8 **)(v460 - 64);
                                      if (!sub_1C4D8A7F0((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v460 - 32)))
                                        goto LABEL_721;
                                    }
                                    v444 = *(llvm ***)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                    if (v444)
                                      goto LABEL_809;
                                  }
LABEL_721:
                                  v462 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                  v463 = *(_QWORD *)(v462 + 8);
                                  if (!v463 || *(_QWORD *)(v463 + 8))
                                    goto LABEL_723;
                                  v489 = *(unsigned __int8 *)(v462 + 16);
                                  if (v489 == 5)
                                  {
                                    if (*(_WORD *)(v462 + 18) == 27)
                                    {
                                      v491 = *(_QWORD *)(v462 - 32 * (*(_DWORD *)(v462 + 20) & 0x7FFFFFF));
                                      if (v491)
                                      {
                                        *(_QWORD *)__s2[0] = v491;
                                        if (sub_1C4D8A86C((llvm::APInt *)&__s2[1], *(llvm::Constant **)(v462- 32 * (*(_DWORD *)(v462 + 20) & 0x7FFFFFF)+ 32)))
                                        {
LABEL_808:
                                          v444 = *(llvm ***)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                          if (!v444)
                                            goto LABEL_724;
LABEL_809:
                                          **((_QWORD **)&v515 + 1) = v444;
                                          LOBYTE(v444) = 1;
                                          goto LABEL_724;
                                        }
                                      }
                                    }
                                  }
                                  else if (v489 == 55)
                                  {
                                    v490 = *(_QWORD *)(v462 - 64);
                                    if (v490)
                                    {
                                      *(_QWORD *)__s2[0] = v490;
                                      if (sub_1C4D8A7F0((llvm::APInt *)&__s2[1], *(unsigned __int8 **)(v462 - 32)))
                                        goto LABEL_808;
                                    }
                                  }
LABEL_723:
                                  LOBYTE(v444) = 0;
                                  goto LABEL_724;
                                }
                                return sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v13);
                              }
                              v428 = *(unsigned __int8 *)(v66 + 16);
                              if (v428 == 5)
                              {
                                if (*(_WORD *)(v66 + 18) != 28)
                                  goto LABEL_644;
                                v435 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF);
                                v429 = *(unsigned __int8 **)v435;
                                if (!*(_QWORD *)v435)
                                  goto LABEL_644;
                                v518 = *(unsigned __int8 **)v435;
                                v427 = *(llvm **)(v435 + 32);
                                if (!v427)
                                  goto LABEL_644;
                              }
                              else
                              {
                                if (v428 != 56)
                                  goto LABEL_644;
                                v429 = *(unsigned __int8 **)(v66 - 64);
                                if (!v429)
                                  goto LABEL_644;
                                v518 = *(unsigned __int8 **)(v66 - 64);
                                v427 = *(llvm **)(v66 - 32);
                                if (!v427)
                                  goto LABEL_644;
                              }
                              v513 = v427;
                              if (v429[16] == 81)
                              {
                                v433 = sub_1C57A48A8(a1, (uint64_t)v429, v415, (llvm::AssumptionCache *)v6);
                                v427 = v513;
                                if (v433)
                                  goto LABEL_688;
                              }
                              if (!v427)
                                goto LABEL_644;
                              if (*((_BYTE *)v427 + 16) != 81)
                                goto LABEL_644;
                              v434 = sub_1C57A48A8(a1, (uint64_t)v427, v415, (llvm::AssumptionCache *)v6);
                              if (!v434)
                                goto LABEL_644;
                              goto LABEL_710;
                            }
LABEL_619:
                            v403 = *(_QWORD *)(a1 + 24);
                            LOWORD(v516) = 257;
                            v404 = (_QWORD *)sub_1C506EAA0(v403, (uint64_t)v394, (uint64_t)__s2);
                            v405 = v511;
                            v521 = 257;
                            v406 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v406 + 5) = 0;
                            v407 = v406 + 40;
                            *((_QWORD *)v406 + 6) = 0;
                            *((_QWORD *)v406 + 8) = *v404;
                            Not = (uint64_t ***)(v406 + 64);
                            *((_QWORD *)v406 + 3) = v406 + 64;
                            *((_QWORD *)v406 + 7) = v406 + 64;
                            *((_QWORD *)v406 + 9) = 0;
                            v406[80] = 56;
                            v406[81] = 0;
                            *((_WORD *)v406 + 41) = 0;
                            *((_DWORD *)v406 + 21) = 2;
                            *(_OWORD *)(v406 + 88) = 0u;
                            *(_OWORD *)(v406 + 104) = 0u;
                            *((_DWORD *)v406 + 30) = 0;
                            *(_QWORD *)v406 = v404;
                            v410 = v404[1];
                            v409 = v404 + 1;
                            v408 = v410;
                            *((_QWORD *)v406 + 1) = v410;
                            if (v410)
                              *(_QWORD *)(v408 + 16) = v406 + 8;
                            *((_QWORD *)v406 + 2) = v409;
                            *v409 = v406;
                            *((_QWORD *)v406 + 4) = v405;
                            if (v405)
                            {
                              v413 = *((_QWORD *)v405 + 1);
                              v412 = (_QWORD *)((char *)v405 + 8);
                              v411 = v413;
                              *v407 = v413;
                              if (v413)
                                *(_QWORD *)(v411 + 16) = v407;
                              *((_QWORD *)v406 + 6) = v412;
                              *v412 = v406 + 32;
                            }
                            goto LABEL_625;
                          }
LABEL_593:
                          LOWORD(v516) = 257;
                          v386 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v386 + 5) = 0;
                          v387 = v386 + 40;
                          *((_QWORD *)v386 + 6) = 0;
                          *((_QWORD *)v386 + 8) = *(_QWORD *)v376;
                          Not = (uint64_t ***)(v386 + 64);
                          *((_QWORD *)v386 + 3) = v386 + 64;
                          *((_QWORD *)v386 + 7) = v386 + 64;
                          *((_QWORD *)v386 + 9) = 0;
                          v386[80] = 56;
                          v386[81] = 0;
                          *((_WORD *)v386 + 41) = 0;
                          *((_DWORD *)v386 + 21) = 2;
                          *(_OWORD *)(v386 + 88) = 0u;
                          *(_OWORD *)(v386 + 104) = 0u;
                          *((_DWORD *)v386 + 30) = 0;
                          *(_QWORD *)v386 = v376;
                          v390 = *((_QWORD *)v376 + 1);
                          v389 = (_QWORD *)((char *)v376 + 8);
                          v388 = v390;
                          *((_QWORD *)v386 + 1) = v390;
                          if (v390)
                            *(_QWORD *)(v388 + 16) = v386 + 8;
                          *((_QWORD *)v386 + 2) = v389;
                          *v389 = v386;
                          *((_QWORD *)v386 + 4) = v377;
                          if (v377)
                          {
                            v393 = *((_QWORD *)v377 + 1);
                            v392 = (_QWORD *)((char *)v377 + 8);
                            v391 = v393;
                            *v387 = v393;
                            if (v393)
                              *(_QWORD *)(v391 + 16) = v387;
                            *((_QWORD *)v386 + 6) = v392;
                            *v392 = v386 + 32;
                          }
                          goto LABEL_79;
                        }
                        v255 = *(unsigned __int8 *)(v66 + 16);
                        if (v255 == 5)
                        {
                          if (*(_WORD *)(v66 + 18) != 30)
                            goto LABEL_299;
                          v294 = v66 - 32 * (*(_DWORD *)(v66 + 20) & 0x7FFFFFF);
                          v257 = *(llvm::Value **)v294;
                          v295 = *(llvm::Value **)(v294 + 32);
                          if (v501 == v257)
                          {
                            v257 = v295;
                            if (!v295)
                              goto LABEL_299;
                          }
                          else if (!v257 || v501 != v295)
                          {
                            goto LABEL_299;
                          }
                        }
                        else
                        {
                          if (v255 != 58)
                            goto LABEL_299;
                          v256 = *(llvm::Value **)(v66 - 64);
                          v257 = *(llvm::Value **)(v66 - 32);
                          if (v501 != v256)
                          {
                            if (!v256 || v501 != v257)
                              goto LABEL_299;
                            v511 = *(llvm::Value **)(v66 - 64);
                            v257 = v256;
LABEL_539:
                            v347 = *(_QWORD *)(a1 + 24);
LABEL_540:
                            LOWORD(v516) = 257;
                            v343 = sub_1C506EAA0(v347, (uint64_t)v257, (uint64_t)__s2);
                            v521 = 257;
                            v344 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v344 + 6) = 0;
                            *((_QWORD *)v344 + 5) = 0;
                            v345 = v344 + 40;
                            *((_QWORD *)v344 + 8) = *(_QWORD *)v501;
                            Not = (uint64_t ***)(v344 + 64);
                            *((_QWORD *)v344 + 3) = v344 + 64;
                            *((_QWORD *)v344 + 7) = v344 + 64;
                            *((_QWORD *)v344 + 9) = 0;
                            v344[80] = 56;
                            v344[81] = 0;
                            *((_WORD *)v344 + 41) = 0;
                            *((_DWORD *)v344 + 21) = 2;
                            *(_OWORD *)(v344 + 88) = 0u;
                            *(_OWORD *)(v344 + 104) = 0u;
                            *((_DWORD *)v344 + 30) = 0;
                            *(_QWORD *)v344 = v501;
                            v348 = *((_QWORD *)v501 + 1);
                            *((_QWORD *)v344 + 1) = v348;
                            if (v348)
                              *(_QWORD *)(v348 + 16) = v344 + 8;
                            *((_QWORD *)v344 + 2) = v206;
                            *(_QWORD *)v206 = v344;
LABEL_543:
                            *((_QWORD *)v344 + 4) = v343;
                            if (v343)
                            {
                              v351 = *(_QWORD *)(v343 + 8);
                              v350 = (_QWORD *)(v343 + 8);
                              v349 = v351;
                              *v345 = v351;
                              if (v351)
                                *(_QWORD *)(v349 + 16) = v345;
                              *((_QWORD *)v344 + 6) = v350;
                              *v350 = v344 + 32;
                            }
LABEL_625:
                            v62 = (void **)&v519;
                            goto LABEL_80;
                          }
                          if (!v257)
                            goto LABEL_299;
                        }
                        v511 = v257;
                        goto LABEL_539;
                      }
                      v252 = *((unsigned __int8 *)v501 + 16);
                      if (v252 == 5)
                      {
                        if (*((_WORD *)v501 + 9) != 30)
                          goto LABEL_297;
                        v283 = (char *)v501 - 32 * (*((_DWORD *)v501 + 5) & 0x7FFFFFF);
                        v254 = *(llvm::Value **)v283;
                        v284 = (llvm::Value *)*((_QWORD *)v283 + 4);
                        if ((llvm::Value *)v66 == v254)
                        {
                          v254 = v284;
                          if (!v284)
                            goto LABEL_297;
                        }
                        else if (!v254 || (llvm::Value *)v66 != v284)
                        {
                          goto LABEL_297;
                        }
                      }
                      else
                      {
                        if (v252 != 58)
                          goto LABEL_297;
                        v253 = (llvm::Value *)*((_QWORD *)v501 - 8);
                        v254 = (llvm::Value *)*((_QWORD *)v501 - 4);
                        if ((llvm::Value *)v66 != v253)
                        {
                          if (!v253 || (llvm::Value *)v66 != v254)
                            goto LABEL_297;
                          v511 = (llvm::Value *)*((_QWORD *)v501 - 8);
                          v254 = v253;
LABEL_533:
                          v342 = *(_QWORD *)(a1 + 24);
LABEL_534:
                          LOWORD(v516) = 257;
                          v343 = sub_1C506EAA0(v342, (uint64_t)v254, (uint64_t)__s2);
                          v521 = 257;
                          v344 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v344 + 6) = 0;
                          *((_QWORD *)v344 + 5) = 0;
                          v345 = v344 + 40;
                          *((_QWORD *)v344 + 8) = *(_QWORD *)v66;
                          Not = (uint64_t ***)(v344 + 64);
                          *((_QWORD *)v344 + 3) = v344 + 64;
                          *((_QWORD *)v344 + 7) = v344 + 64;
                          *((_QWORD *)v344 + 9) = 0;
                          v344[80] = 56;
                          v344[81] = 0;
                          *((_WORD *)v344 + 41) = 0;
                          *((_DWORD *)v344 + 21) = 2;
                          *(_OWORD *)(v344 + 88) = 0u;
                          *(_OWORD *)(v344 + 104) = 0u;
                          *((_DWORD *)v344 + 30) = 0;
                          *(_QWORD *)v344 = v66;
                          v346 = *(_QWORD *)(v66 + 8);
                          *((_QWORD *)v344 + 1) = v346;
                          if (v346)
                            *(_QWORD *)(v346 + 16) = v344 + 8;
                          *((_QWORD *)v344 + 2) = v69;
                          *(_QWORD *)v69 = v344;
                          goto LABEL_543;
                        }
                        if (!v254)
                          goto LABEL_297;
                      }
                      v511 = v254;
                      goto LABEL_533;
                    }
                    v209 = *(_QWORD *)(v6 - 32);
                    v210 = *(unsigned __int8 *)(v202 + 16);
                    if (v210 > 0x2C)
                    {
                      if (v210 != 45 && v210 != 53)
                      {
                        if (v210 != 54 || v209 != *(_QWORD *)(v202 - 64))
                          goto LABEL_285;
                        goto LABEL_334;
                      }
LABEL_333:
                      if (v209 != *(_QWORD *)(v202 - 64))
                        goto LABEL_285;
LABEL_334:
                      v211 = *(unsigned __int8 **)(v202 - 32);
                      if (!v211 || v211[16] > 0x14u)
                        goto LABEL_285;
LABEL_336:
                      v508 = 0;
                      __s2[0] = &v508;
                      if (sub_1C4B0378C((_QWORD **)__s2, v209))
                      {
                        v224 = *(_QWORD *)(v209 + 8);
                        if (!v224)
                          goto LABEL_342;
                        v225 = -2;
                        do
                        {
                          v226 = v225;
                          if (!v225)
                            break;
                          v224 = *(_QWORD *)(v224 + 8);
                          ++v225;
                        }
                        while (v224);
                        if (v226)
                        {
LABEL_342:
                          v227 = *(_QWORD *)v6;
                          v228 = (llvm::Constant **)v508;
                          if ((*(_DWORD *)(*(_QWORD *)v6 + 8) & 0xFE) != 0x12)
                          {
                            if (*(_DWORD *)(*(_QWORD *)v6 + 8) != 13)
                              goto LABEL_387;
                            v229 = *(llvm::Type **)v508;
                            if (*(_BYTE *)(*(_QWORD *)v508 + 8) != 13)
                              goto LABEL_387;
                            v231 = llvm::Type::getPrimitiveSizeInBits(*(llvm::Type **)v6);
                            if ((_DWORD)v230 == 1)
                            v233 = llvm::Type::getPrimitiveSizeInBits(v229);
                            if ((_DWORD)v232 == 1)
                            if (!sub_1C577D3C0(a1, v231, v233))
                              goto LABEL_387;
                            v228 = (llvm::Constant **)v508;
                          }
                          v234 = *(unsigned __int8 *)(v202 + 16);
                          if ((v234 - 53) > 1)
                          {
LABEL_365:
                            v242 = sub_1C537D3B8((llvm *)0x26, (uint64_t)v211, *v228, 0);
                            v243 = *(_QWORD *)(a1 + 24);
                            LOWORD(v516) = 257;
                            if (v234 == 43)
                            {
                              v244 = 15;
                              v245 = v242;
                              v242 = v508;
                            }
                            else
                            {
                              v244 = (v234 - 28);
                              v245 = v508;
                            }
                            v306 = sub_1C4773860(v243, v244, v245, (uint64_t)v242, (uint64_t)__s2, 0);
                            v307 = (char *)operator new(0x60uLL);
                            Not = (uint64_t ***)(v307 + 32);
                            *((_DWORD *)v307 + 13) = *((_DWORD *)v307 + 13) & 0x38000000 | 1;
                            *(_QWORD *)v307 = 0;
                            *((_QWORD *)v307 + 1) = 0;
                            *((_QWORD *)v307 + 2) = 0;
                            *((_QWORD *)v307 + 3) = v307 + 32;
                            v308 = *(_QWORD *)(a1 + 24);
                            LOWORD(v516) = 257;
                            v115 = sub_1C4D89BCC(v308, v306, (uint64_t)v508, (uint64_t)__s2);
                            v521 = 257;
                            v113 = (void **)&v519;
                            v114 = (uint64_t)Not;
                            v116 = v227;
                            goto LABEL_473;
                          }
                          v235 = *v228;
                          if ((*((_DWORD *)*v228 + 2) & 0xFE) == 0x12)
                            v235 = (llvm::Constant *)**((_QWORD **)v235 + 2);
                          v236 = llvm::Type::getPrimitiveSizeInBits(v235);
                          v237 = *(llvm::Type **)v211;
                          if ((*(_DWORD *)(*(_QWORD *)v211 + 8) & 0xFE) == 0x12)
                            v237 = (llvm::Type *)**((_QWORD **)v237 + 2);
                          v238 = llvm::Type::getPrimitiveSizeInBits(v237);
                          LODWORD(__s2[1]) = v238;
                          if (v238 > 0x40)
                          {
                            llvm::APInt::initSlowCase((llvm::APInt *)__s2, v236, 0);
                          }
                          else
                          {
                            v239 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v238;
                            if (!v238)
                              LODWORD(v239) = 0;
                            __s2[0] = (void *)(v239 & v236);
                          }
                          v519 = 36;
                          v520 = __s2;
                          sub_1C57A1A3C((uint64_t)&v519, (llvm::Constant *)v211);
                          v241 = v240;
                          if (LODWORD(__s2[1]) >= 0x41 && __s2[0])
                            MEMORY[0x1CAA32F9C](__s2[0], 0x1000C8000313F17);
                          if (v241)
                          {
                            v228 = (llvm::Constant **)v508;
                            goto LABEL_365;
                          }
                        }
                      }
LABEL_387:
                      v67 = (uint64_t)v501;
                      goto LABEL_285;
                    }
                    if (v210 != 5)
                    {
                      if (v210 != 41)
                      {
                        if (v210 != 43)
                          goto LABEL_285;
                        v211 = *(unsigned __int8 **)(v202 - 64);
                        if (!v211 || v211[16] > 0x14u)
                          goto LABEL_285;
                        v212 = *(_QWORD *)(v202 - 32);
LABEL_310:
                        if (v209 != v212)
                          goto LABEL_285;
                        goto LABEL_336;
                      }
                      goto LABEL_333;
                    }
                    v250 = *(unsigned __int16 *)(v202 + 18);
                    if (v250 <= 0x10)
                    {
                      if (v250 != 13)
                      {
                        if (v250 != 15)
                          goto LABEL_285;
                        v278 = v202 - 32 * (*(_DWORD *)(v202 + 20) & 0x7FFFFFF);
                        v211 = *(unsigned __int8 **)v278;
                        if (!*(_QWORD *)v278)
                          goto LABEL_285;
                        v212 = *(_QWORD *)(v278 + 32);
                        goto LABEL_310;
                      }
                    }
                    else if (v250 != 17 && v250 != 25)
                    {
                      if (v250 != 26)
                        goto LABEL_285;
                      v251 = (_QWORD *)(v202 - 32 * (*(_DWORD *)(v202 + 20) & 0x7FFFFFF));
                      if (v209 != *v251)
                        goto LABEL_285;
                      goto LABEL_433;
                    }
                    v251 = (_QWORD *)(v202 - 32 * (*(_DWORD *)(v202 + 20) & 0x7FFFFFF));
                    if (v209 != *v251)
                      goto LABEL_285;
LABEL_433:
                    v211 = (unsigned __int8 *)v251[4];
                    if (!v211)
                      goto LABEL_285;
                    goto LABEL_336;
                  }
                  v519 = 0;
                  v502 = 0;
                  __s2[0] = &v519;
                  __s2[1] = &v502;
                  *(_QWORD *)&v515 = 0;
                  v214 = *(_QWORD *)(v66 - 64);
                  v215 = *(_QWORD *)(v214 + 8);
                  if (!v215
                    || *(_QWORD *)(v215 + 8)
                    || !sub_1C4B0378C((_QWORD **)__s2, v214)
                    || (sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v66 - 32)) & 1) == 0)
                  {
                    v216 = *(_QWORD *)(v66 - 32);
                    v217 = *(_QWORD *)(v216 + 8);
                    if (!v217
                      || *(_QWORD *)(v217 + 8)
                      || !sub_1C4B0378C((_QWORD **)__s2, v216)
                      || !sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v66 - 64)))
                    {
                      goto LABEL_511;
                    }
                  }
                  v218 = v512;
                  v219 = (llvm::Type **)v519;
                  v220 = *(llvm::Type **)v519;
                  if ((*(_DWORD *)(*(_QWORD *)v519 + 8) & 0xFE) == 0x12)
                    v220 = (llvm::Type *)**((_QWORD **)v220 + 2);
                  v221 = llvm::Type::getPrimitiveSizeInBits(v220);
                  v222 = *((_DWORD *)v218 + 2);
                  v223 = v222 > 0x40
                       ? llvm::APInt::countLeadingZerosSlowCase(v218)
                       : v222 + __clz(*(_QWORD *)v218) - 64;
                  if (v222 - v223 > v221)
                  {
LABEL_511:
                    v69 = v499;
                    goto LABEL_271;
                  }
                  v330 = *v219;
                  v331 = *v219;
                  if ((*((_DWORD *)*v219 + 2) & 0xFE) == 0x12)
                    v331 = (llvm::Type *)**((_QWORD **)v330 + 2);
                  v332 = llvm::Type::getPrimitiveSizeInBits(v331);
                  llvm::APInt::trunc(v502, v332, (llvm::APInt *)__s2);
                  v334 = llvm::ConstantInt::get((llvm::ConstantInt **)v330, (llvm::Type *)__s2, v333);
                  if (LODWORD(__s2[1]) >= 0x41 && __s2[0])
                    MEMORY[0x1CAA32F9C](__s2[0], 0x1000C8000313F17);
                  v335 = *(_QWORD *)(a1 + 24);
                  v336 = *(unsigned __int8 *)(v66 + 16) - 28;
                  v337 = v519;
                  if (*(_BYTE *)(*(_QWORD *)(v66 - 64) + 16) == 67)
                  {
                    LOWORD(v516) = 257;
                    v338 = (_QWORD *)v519;
                    v337 = (uint64_t)v334;
                  }
                  else
                  {
                    LOWORD(v516) = 257;
                    v338 = v334;
                  }
                  v352 = sub_1C4773860(v335, v336, v338, v337, (uint64_t)__s2, 0);
                  v353 = *(llvm::ConstantInt ***)v519;
                  llvm::APInt::trunc(v512, v332, (llvm::APInt *)__s2);
                  v355 = llvm::ConstantInt::get(v353, (llvm::Type *)__s2, v354);
                  if (LODWORD(__s2[1]) >= 0x41 && __s2[0])
                    MEMORY[0x1CAA32F9C](__s2[0], 0x1000C8000313F17);
                  v356 = *(_QWORD *)(a1 + 24);
                  LOWORD(v516) = 257;
                  v111 = sub_1C4D89BCC(v356, v352, (uint64_t)v355, (uint64_t)__s2);
                  v357 = (char *)operator new(0x60uLL);
                  *((_DWORD *)v357 + 13) = *((_DWORD *)v357 + 13) & 0x38000000 | 1;
                  Not = (uint64_t ***)(v357 + 32);
                  *(_QWORD *)v357 = 0;
                  *((_QWORD *)v357 + 1) = 0;
                  *((_QWORD *)v357 + 2) = 0;
                  *((_QWORD *)v357 + 3) = v357 + 32;
                  LOWORD(v516) = 257;
LABEL_165:
                  v113 = __s2;
                  v114 = (uint64_t)Not;
                  v115 = v111;
                  v116 = v8;
LABEL_473:
                  llvm::ZExtInst::ZExtInst(v114, v115, v116, (uint64_t)v113, 0);
                  return (llvm::UndefValue **)Not;
                }
                v170 = *((_DWORD *)v512 + 2);
                if (v170 > 0x40)
                  v171 = llvm::APInt::countLeadingZerosSlowCase(v512);
                else
                  v171 = v170 + __clz(*(_QWORD *)v512) - 64;
                v172 = PrimitiveSizeInBits - v171;
                LODWORD(v520) = PrimitiveSizeInBits;
                if (PrimitiveSizeInBits > 0x40)
                  llvm::APInt::initSlowCase((llvm::APInt *)&v519, 0, 0);
                else
                  v519 = 0;
                sub_1C4912E54(&v519, 0, v172);
                v173 = (const void **)v505;
                v174 = *(unsigned int *)(v505 + 8);
                if (v174 >= 0x41)
                {
                  v176 = (char *)operator new[]();
                  memcpy(v176, *v173, ((unint64_t)(v174 + 63) >> 3) & 0x3FFFFFF8);
                  v177 = 0;
                  v178 = v519;
                  v179 = (unint64_t)(v174 + 63) >> 6;
                  do
                  {
                    *(_QWORD *)&v176[v177] &= *(_QWORD *)(v178 + v177);
                    v177 += 8;
                  }
                  while (8 * v179 != v177);
                  v180 = 0;
                  do
                  {
                    v181 = v179-- < 1;
                    if (v181)
                      break;
                    v182 = *(_QWORD *)&v176[8 * v179];
                    v180 += __clz(v182);
                  }
                  while (!v182);
                  v183 = v174 | 0xFFFFFFC0;
                  if ((v174 & 0x3F) == 0)
                    v183 = 0;
                  v184 = v180 + v183;
                  MEMORY[0x1CAA32F9C](v176, 0x1000C8000313F17);
                  if (v184 != (_DWORD)v174)
                  {
LABEL_245:
                    if (!*(_QWORD *)v499 || *(_QWORD *)(*(_QWORD *)v499 + 8))
                      goto LABEL_247;
                    v279 = (const void **)v512;
                    v280 = *((unsigned int *)v512 + 2);
                    if (v280 > 0x40)
                    {
                      v299 = 0;
                      v300 = (unint64_t)(v280 + 63) >> 6;
                      v301 = *(int8x8_t **)v512;
                      do
                      {
                        v302 = *v301++;
                        v303 = (uint8x8_t)vcnt_s8(v302);
                        v303.i16[0] = vaddlv_u8(v303);
                        v299 += v303.i32[0];
                        --v300;
                      }
                      while (v300);
                      if (v299 != 1)
                        goto LABEL_247;
                      v282 = (uint64_t *)v505;
                      v504 = *((_DWORD *)v512 + 2);
                      v503 = operator new[]();
                      memcpy((void *)v503, *v279, (((unint64_t)v504 + 63) >> 3) & 0x3FFFFFF8);
                    }
                    else
                    {
                      v281 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v512);
                      v281.i16[0] = vaddlv_u8(v281);
                      if (v281.u32[0] != 1)
                        goto LABEL_247;
                      v282 = (uint64_t *)v505;
                      v504 = *((_DWORD *)v512 + 2);
                      v503 = *(_QWORD *)v512;
                    }
                    llvm::APInt::operator-=((uint64_t)&v503, 1uLL);
                    v304 = v504;
                    v305 = (_QWORD *)v503;
                    v504 = 0;
                    if (v304 < 0x41)
                    {
                      if ((*v282 & v503) == 0)
                        goto LABEL_553;
                      goto LABEL_247;
                    }
                    v323 = 0;
                    v324 = *v282;
                    v325 = (unint64_t)(v304 + 63) >> 6;
                    do
                    {
                      v305[v323] &= *(_QWORD *)(v324 + v323 * 8);
                      ++v323;
                    }
                    while (v325 != v323);
                    v326 = 0;
                    do
                    {
                      v181 = v325-- < 1;
                      if (v181)
                        break;
                      v327 = v305[v325];
                      v326 += __clz(v327);
                    }
                    while (!v327);
                    v328 = 0;
                    v329 = v304 | 0xFFFFFFC0;
                    if ((v304 & 0x3F) == 0)
                      v329 = 0;
                    if ((v304 - v326 - v329) < 0x41)
                      v328 = *v305 == 0;
                    if (v305)
                    {
                      MEMORY[0x1CAA32F9C](v305, 0x1000C8000313F17);
                      if (v504 < 0x41 || !v503)
                      {
                        if (v328)
                        {
LABEL_553:
                          v358 = *(_QWORD *)(a1 + 24);
                          LOWORD(v516) = 257;
                          v185 = (unsigned __int8 *)sub_1C4D89BCC(v358, v518, v67, (uint64_t)__s2);
                          LOWORD(v516) = 257;
                          v186 = (char *)operator new(0x80uLL);
                          *(_QWORD *)v186 = 0;
                          *((_QWORD *)v186 + 2) = 0;
                          *((_QWORD *)v186 + 1) = 0;
                          v187 = v186 + 8;
                          *((_QWORD *)v186 + 5) = 0;
                          *((_QWORD *)v186 + 6) = 0;
                          *((_QWORD *)v186 + 4) = 0;
                          v188 = (uint64_t *)(v186 + 32);
                          *((_QWORD *)v186 + 8) = *(_QWORD *)v185;
                          Not = (uint64_t ***)(v186 + 64);
                          *((_QWORD *)v186 + 3) = v186 + 64;
                          *((_QWORD *)v186 + 7) = v186 + 64;
                          *((_QWORD *)v186 + 9) = 0;
                          v189 = 58;
                          goto LABEL_257;
                        }
LABEL_247:
                        v175 = 1;
                        goto LABEL_265;
                      }
                      MEMORY[0x1CAA32F9C](v503, 0x1000C8000313F17);
                    }
                    if (v328)
                      goto LABEL_553;
                    goto LABEL_247;
                  }
                }
                else if ((v519 & *(_QWORD *)v505) != 0)
                {
                  goto LABEL_245;
                }
                v185 = v518;
                LOWORD(v516) = 257;
                v186 = (char *)operator new(0x80uLL);
                *(_QWORD *)v186 = 0;
                *((_QWORD *)v186 + 2) = 0;
                *((_QWORD *)v186 + 1) = 0;
                v187 = v186 + 8;
                *((_QWORD *)v186 + 5) = 0;
                *((_QWORD *)v186 + 6) = 0;
                *((_QWORD *)v186 + 4) = 0;
                v188 = (uint64_t *)(v186 + 32);
                *((_QWORD *)v186 + 8) = *(_QWORD *)v185;
                Not = (uint64_t ***)(v186 + 64);
                *((_QWORD *)v186 + 3) = v186 + 64;
                *((_QWORD *)v186 + 7) = v186 + 64;
                *((_QWORD *)v186 + 9) = 0;
                v189 = 56;
LABEL_257:
                v186[80] = v189;
                v186[81] = 0;
                *((_WORD *)v186 + 41) = 0;
                *((_DWORD *)v186 + 21) = 2;
                *((_DWORD *)v186 + 30) = 0;
                *(_OWORD *)(v186 + 104) = 0u;
                *(_OWORD *)(v186 + 88) = 0u;
                *(_QWORD *)v186 = v185;
                v192 = *((_QWORD *)v185 + 1);
                v191 = v185 + 8;
                v190 = v192;
                *v187 = v192;
                if (v192)
                  *(_QWORD *)(v190 + 16) = v187;
                *((_QWORD *)v186 + 2) = v191;
                *v191 = v186;
                if (*((_QWORD *)v186 + 4))
                {
                  **((_QWORD **)v186 + 6) = *((_QWORD *)v186 + 5);
                  v495 = *((_QWORD *)v186 + 5);
                  if (v495)
                    *(_QWORD *)(v495 + 16) = *((_QWORD *)v186 + 6);
                }
                *v188 = v67;
                if (v67)
                {
                  v193 = (uint64_t **)(v67 + 8);
                  v194 = *(_QWORD *)(v67 + 8);
                  *((_QWORD *)v186 + 5) = v194;
                  if (v194)
                    *(_QWORD *)(v194 + 16) = v186 + 40;
                  *((_QWORD *)v186 + 6) = v193;
                  *v193 = v188;
                }
                llvm::Value::setName(Not, (uint64_t)__s2);
                v175 = 0;
LABEL_265:
                if (v520 >= 0x41 && v519)
                  MEMORY[0x1CAA32F9C](v519, 0x1000C8000313F17);
                v69 = v499;
                if (!v175)
                  return (llvm::UndefValue **)Not;
                goto LABEL_269;
              }
            }
            else
            {
              if (v162 != 55)
                goto LABEL_230;
              if (!*(_QWORD *)(v66 - 64))
                goto LABEL_230;
              v518 = *(unsigned __int8 **)(v66 - 64);
              if ((sub_1C4D89F84((uint64_t)&__s2[1], *(unsigned __int8 **)(v66 - 32)) & 1) == 0)
                goto LABEL_230;
            }
            v164 = v508;
            v165 = *((_DWORD *)v508 + 2);
            if (v165 >= 0x41)
            {
              if (v165 - llvm::APInt::countLeadingZerosSlowCase(v508) >= 0x41)
                goto LABEL_230;
              v166 = **(_QWORD **)v164;
              if (v166 >= PrimitiveSizeInBits)
                goto LABEL_230;
            }
            else
            {
              v166 = *(_QWORD *)v508;
              if (*(_QWORD *)v508 >= (unint64_t)PrimitiveSizeInBits)
                goto LABEL_230;
            }
            if (!sub_1C4F30574(v512, PrimitiveSizeInBits - v166))
              goto LABEL_230;
            v51 = v518;
            v52 = (unsigned __int8 *)llvm::ConstantInt::get((llvm::ConstantInt **)v8, v508, v167);
            LOWORD(v516) = 257;
            goto LABEL_229;
          }
          v128 = 1;
          if (!llvm::MaskedValueIsZero(v513, (const llvm::Value *)&v519, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v500))
          {
            Not = 0;
            goto LABEL_487;
          }
          v285 = *(_QWORD *)(a1 + 24);
          if ((v518[23] & 0x10) == 0)
          {
            v361 = 0;
            v360 = &byte_1C871356D;
            goto LABEL_556;
          }
          v286 = ***(_QWORD ***)v518;
          v287 = *(_QWORD *)(v286 + 152);
          v288 = *(unsigned int *)(v286 + 168);
          if ((_DWORD)v288)
          {
            LODWORD(v289) = (v288 - 1) & ((v518 >> 4) ^ (v518 >> 9));
            v290 = v287 + 16 * v289;
            v291 = *(unsigned __int8 **)v290;
            if (*(unsigned __int8 **)v290 == v518)
            {
LABEL_555:
              v359 = *(_QWORD **)(v290 + 8);
              v362 = (void *)*v359;
              v360 = (char *)(v359 + 2);
              v361 = v362;
LABEL_556:
              LOWORD(v516) = 773;
              __s2[0] = v360;
              __s2[1] = v361;
              *(_QWORD *)&v515 = ".masked";
              v363 = (_QWORD *)sub_1C4D89BCC(v285, v518, v67, (uint64_t)__s2);
              v364 = v513;
              LOWORD(v516) = 257;
              v365 = (char *)operator new(0x80uLL);
              *(_QWORD *)v365 = 0;
              *((_QWORD *)v365 + 2) = 0;
              *((_QWORD *)v365 + 1) = 0;
              *((_QWORD *)v365 + 5) = 0;
              *((_QWORD *)v365 + 6) = 0;
              *((_QWORD *)v365 + 4) = 0;
              v366 = (llvm **)(v365 + 32);
              *((_QWORD *)v365 + 8) = *v363;
              Not = (uint64_t ***)(v365 + 64);
              *((_QWORD *)v365 + 3) = v365 + 64;
              *((_QWORD *)v365 + 7) = v365 + 64;
              *((_QWORD *)v365 + 9) = 0;
              v365[80] = v118 + 28;
              v365[81] = 0;
              *((_WORD *)v365 + 41) = 0;
              *((_DWORD *)v365 + 21) = 2;
              *((_DWORD *)v365 + 30) = 0;
              *(_OWORD *)(v365 + 104) = 0u;
              *(_OWORD *)(v365 + 88) = 0u;
              *(_QWORD *)v365 = v363;
              v369 = v363[1];
              v368 = v363 + 1;
              v367 = v369;
              *((_QWORD *)v365 + 1) = v369;
              if (v369)
                *(_QWORD *)(v367 + 16) = v365 + 8;
              *((_QWORD *)v365 + 2) = v368;
              *v368 = v365;
              if (*((_QWORD *)v365 + 4))
              {
                **((_QWORD **)v365 + 6) = *((_QWORD *)v365 + 5);
                v497 = *((_QWORD *)v365 + 5);
                if (v497)
                  *(_QWORD *)(v497 + 16) = *((_QWORD *)v365 + 6);
              }
              *v366 = v364;
              if (v364)
              {
                v372 = *((_QWORD *)v364 + 1);
                v371 = (llvm ***)((char *)v364 + 8);
                v370 = v372;
                *((_QWORD *)v365 + 5) = v372;
                if (v372)
                  *(_QWORD *)(v370 + 16) = v365 + 40;
                *((_QWORD *)v365 + 6) = v371;
                *v371 = v366;
              }
              goto LABEL_486;
            }
            v292 = 1;
            while (v291 != (unsigned __int8 *)-4096)
            {
              v293 = v289 + v292++;
              v289 = v293 & (v288 - 1);
              v291 = *(unsigned __int8 **)(v287 + 16 * v289);
              if (v291 == v518)
              {
                v290 = v287 + 16 * v289;
                goto LABEL_555;
              }
            }
          }
          v290 = v287 + 16 * v288;
          goto LABEL_555;
        }
LABEL_70:
        v51 = (unsigned __int8 *)v508;
        v52 = v518;
        LOWORD(v516) = 257;
LABEL_71:
        v53 = (char *)operator new(0x80uLL);
        *((_QWORD *)v53 + 5) = 0;
        v54 = v53 + 40;
        *((_QWORD *)v53 + 6) = 0;
        *((_QWORD *)v53 + 8) = *(_QWORD *)v51;
        Not = (uint64_t ***)(v53 + 64);
        *((_QWORD *)v53 + 3) = v53 + 64;
        *((_QWORD *)v53 + 7) = v53 + 64;
        *((_QWORD *)v53 + 9) = 0;
        v55 = 58;
LABEL_72:
        v53[80] = v55;
        v53[81] = 0;
        *((_WORD *)v53 + 41) = 0;
        *((_DWORD *)v53 + 21) = 2;
        *(_OWORD *)(v53 + 88) = 0u;
        *(_OWORD *)(v53 + 104) = 0u;
        *((_DWORD *)v53 + 30) = 0;
        *(_QWORD *)v53 = v51;
        v58 = *((_QWORD *)v51 + 1);
        v57 = v51 + 8;
        v56 = v58;
        *((_QWORD *)v53 + 1) = v58;
        if (v58)
          *(_QWORD *)(v56 + 16) = v53 + 8;
        *((_QWORD *)v53 + 2) = v57;
        *v57 = v53;
        goto LABEL_75;
      }
      if (*(_WORD *)(v21 + 18) != 30)
        goto LABEL_81;
      v27 = *(_DWORD *)(v21 + 20) & 0x7FFFFFF;
      v28 = -v27;
      v29 = (llvm::Constant **)(v21 - 32 * v27);
      v30 = *v29;
      v31 = *((unsigned __int8 *)*v29 + 16);
      if (v31 == 5)
      {
        if (*((_WORD *)v30 + 9) != 28)
          goto LABEL_58;
        v42 = (uint64_t *)((char *)v30 - 32 * (*((_DWORD *)v30 + 5) & 0x7FFFFFF));
        v32 = *v42;
        v43 = v42[4];
        if (*(_QWORD *)v515 != v32 || **((_QWORD **)&v515 + 1) != v43)
        {
          if (*(_QWORD *)v515 != v43)
            goto LABEL_58;
LABEL_55:
          if (**((_QWORD **)&v515 + 1) != v32)
            goto LABEL_58;
        }
      }
      else
      {
        if (v31 != 56)
          goto LABEL_58;
        v32 = *((_QWORD *)v30 - 8);
        v33 = *((_QWORD *)v30 - 4);
        if (*(_QWORD *)v515 != v32 || **((_QWORD **)&v515 + 1) != v33)
        {
          if (*(_QWORD *)v515 != v33)
            goto LABEL_58;
          goto LABEL_55;
        }
      }
      if ((sub_1C4D9EED4((uint64_t)&v516, v29[4]) & 1) != 0)
        goto LABEL_70;
      v28 = -(uint64_t)(*(_DWORD *)(v21 + 20) & 0x7FFFFFF);
LABEL_58:
      v44 = v21 + 32 * v28;
      v45 = *(_QWORD *)(v44 + 32);
      v46 = *(unsigned __int8 *)(v45 + 16);
      if (v46 == 5)
      {
        if (*(_WORD *)(v45 + 18) != 28)
          goto LABEL_81;
        v49 = (uint64_t *)(v45 - 32 * (*(_DWORD *)(v45 + 20) & 0x7FFFFFF));
        v47 = *v49;
        v50 = v49[4];
        if (*(_QWORD *)v515 == v47 && **((_QWORD **)&v515 + 1) == v50)
          goto LABEL_69;
        if (*(_QWORD *)v515 != v50)
          goto LABEL_81;
      }
      else
      {
        if (v46 != 56)
          goto LABEL_81;
        v47 = *(_QWORD *)(v45 - 64);
        v48 = *(_QWORD *)(v45 - 32);
        if (*(_QWORD *)v515 == v47 && **((_QWORD **)&v515 + 1) == v48)
          goto LABEL_69;
        if (*(_QWORD *)v515 != v48)
          goto LABEL_81;
      }
      if (**((_QWORD **)&v515 + 1) != v47)
        goto LABEL_81;
LABEL_69:
      if (!sub_1C4D9EED4((uint64_t)&v516, *(llvm::Constant **)v44))
        goto LABEL_81;
      goto LABEL_70;
    }
  }
  return (llvm::UndefValue **)Not;
}

llvm::Value *sub_1C57AD31C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned __int8 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  llvm::Type *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t ***v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t **v47;
  int v48;
  uint64_t *v49;
  uint64_t v50;
  _BOOL4 v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v80;
  _BOOL4 v81;
  uint64_t v82;
  _BOOL4 v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  unsigned __int8 *v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  unsigned __int8 *v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  int v113;
  uint64_t *v114;
  int v115;
  uint64_t *v116;
  uint64_t *v117;
  uint64_t **v118;
  uint64_t *v119;
  int v120;
  uint64_t *v121;
  int v122;
  char v123;
  __int16 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD **v128;
  uint64_t *v129;
  uint64_t *v130;
  uint64_t *v131;
  uint64_t *v132;
  _QWORD **v133;
  uint64_t *v134;
  uint64_t **v135;
  uint64_t *v136;
  int v137;

  v3 = *(unsigned __int8 *)(a1 + 16) - 28;
  v4 = *(_QWORD *)(a1 - 64);
  if (*(_BYTE *)(a1 + 16) == 56)
    v5 = 29;
  else
    v5 = 28;
  v6 = *(_QWORD *)(a1 - 32);
  v129 = 0;
  v130 = 0;
  v127 = 0;
  v128 = 0;
  v125 = 0;
  v126 = 0;
  v131 = &v127;
  v132 = (uint64_t *)&v130;
  v133 = &v129;
  LODWORD(v134) = v3;
  v136 = (uint64_t *)&v128;
  v137 = v5;
  v7 = *(unsigned __int8 *)(v4 + 16);
  v8 = v5 + 28;
  if ((_DWORD)v5 + 28 != v7)
  {
    if (v7 != 5 || (_DWORD)v5 != *(unsigned __int16 *)(v4 + 18))
      goto LABEL_78;
    v21 = *(_DWORD *)(v4 + 20) & 0x7FFFFFF;
    v22 = *(_QWORD *)(v4 - 32 * v21);
    if (v22)
    {
      v127 = *(_QWORD *)(v4 - 32 * v21);
      v23 = sub_1C57BC348((uint64_t)&v132, v22);
      v24 = -(uint64_t)(*(_DWORD *)(v4 + 20) & 0x7FFFFFF);
      if (v23)
      {
        v25 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
        if (v25)
        {
LABEL_56:
          *v136 = v25;
          goto LABEL_12;
        }
      }
    }
    else
    {
      v24 = -v21;
    }
    v34 = *(_QWORD *)(v4 + 32 * v24 + 32);
    if (!v34)
      goto LABEL_78;
    *v131 = v34;
    if (!sub_1C57BC348((uint64_t)&v132, v34))
      goto LABEL_78;
    v25 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    if (!v25)
      goto LABEL_78;
    goto LABEL_56;
  }
  v9 = *(_QWORD *)(v4 - 64);
  if (!v9
    || (v127 = *(_QWORD *)(v4 - 64), !sub_1C57BC348((uint64_t)&v132, v9))
    || (v10 = *(_QWORD *)(v4 - 32)) == 0)
  {
    v11 = *(_QWORD *)(v4 - 32);
    if (!v11)
      goto LABEL_78;
    *v131 = v11;
    if (!sub_1C57BC348((uint64_t)&v132, v11))
      goto LABEL_78;
    v10 = *(_QWORD *)(v4 - 64);
    if (!v10)
      goto LABEL_78;
  }
  *v136 = v10;
LABEL_12:
  v12 = *(_QWORD *)(v6 + 8);
  if (!v12)
    goto LABEL_22;
  if (!*(_QWORD *)(v12 + 8))
  {
    v131 = &v125;
    v132 = v130;
    v133 = v128;
    LODWORD(v134) = v3;
    v136 = v129;
    v137 = v5;
    if (sub_1C57BC72C((uint64_t)&v131, v5, v6))
    {
      v13 = *(_QWORD *)(v125 + 8);
      if (v13)
      {
        if (!*(_QWORD *)(v13 + 8))
        {
          LOWORD(v135) = 257;
          v35 = sub_1C506EC1C(a2, v129, (uint64_t)v128, (uint64_t)&v131);
          v36 = v130;
LABEL_60:
          if ((_DWORD)v3 != 29)
          {
            LOWORD(v115) = 257;
            v32 = sub_1C4D89BCC((uint64_t)a2, v35, (uint64_t)v36, (uint64_t)&v111);
            v124 = 257;
            v33 = (llvm::Type *)&v123;
            return llvm::BinaryOperator::CreateNot(v32, v33, 0);
          }
          LOWORD(v135) = 257;
          v37 = sub_1C506EAA0((uint64_t)a2, (uint64_t)v36, (uint64_t)&v131);
          LOWORD(v120) = 257;
          v38 = (char *)operator new(0x80uLL);
          *((_QWORD *)v38 + 5) = 0;
          v39 = v38 + 40;
          *((_QWORD *)v38 + 6) = 0;
          *((_QWORD *)v38 + 8) = *(_QWORD *)v35;
          v40 = (uint64_t ***)(v38 + 64);
          *((_QWORD *)v38 + 3) = v38 + 64;
          *((_QWORD *)v38 + 7) = v38 + 64;
          *((_QWORD *)v38 + 9) = 0;
          v38[80] = 56;
          v38[81] = 0;
          *((_WORD *)v38 + 41) = 0;
          *((_DWORD *)v38 + 21) = 2;
          *(_OWORD *)(v38 + 88) = 0u;
          *(_OWORD *)(v38 + 104) = 0u;
          *((_DWORD *)v38 + 30) = 0;
          *(_QWORD *)v38 = v35;
          v43 = *((_QWORD *)v35 + 1);
          v42 = v35 + 8;
          v41 = v43;
          *((_QWORD *)v38 + 1) = v43;
          if (v43)
            *(_QWORD *)(v41 + 16) = v38 + 8;
          *((_QWORD *)v38 + 2) = v42;
          *v42 = v38;
          *((_QWORD *)v38 + 4) = v37;
          if (v37)
          {
            v46 = *(_QWORD *)(v37 + 8);
            v45 = (_QWORD *)(v37 + 8);
            v44 = v46;
            *v39 = v46;
            if (v46)
              *(_QWORD *)(v44 + 16) = v39;
            *((_QWORD *)v38 + 6) = v45;
            *v45 = v38 + 32;
          }
          v47 = &v116;
LABEL_182:
          llvm::Value::setName(v40, (uint64_t)v47);
          return (llvm::Value *)v40;
        }
      }
    }
  }
  v14 = *(_QWORD *)(v6 + 8);
  if (v14)
  {
    if (!*(_QWORD *)(v14 + 8))
    {
      v131 = &v125;
      v132 = v129;
      v133 = v128;
      LODWORD(v134) = v3;
      v136 = v130;
      v137 = v5;
      if (sub_1C57BC72C((uint64_t)&v131, v5, v6))
      {
        v15 = *(_QWORD *)(v125 + 8);
        if (v15)
        {
          if (!*(_QWORD *)(v15 + 8))
          {
            LOWORD(v135) = 257;
            v35 = sub_1C506EC1C(a2, v130, (uint64_t)v128, (uint64_t)&v131);
            v36 = v129;
            goto LABEL_60;
          }
        }
      }
    }
  }
LABEL_22:
  v16 = (uint64_t)v128;
  v131 = v130;
  v132 = (uint64_t *)v128;
  LODWORD(v133) = v3;
  v17 = *(_QWORD *)(v6 + 8);
  if (v17 && !*(_QWORD *)(v17 + 8))
  {
    v31 = sub_1C57BCB94((uint64_t)&v131, v6);
    v16 = (uint64_t)v128;
    v18 = v129;
    if ((v31 & 1) != 0)
    {
      LOWORD(v135) = 257;
      v19 = sub_1C4773860((uint64_t)a2, v5, v129, (uint64_t)v128, (uint64_t)&v131, 0);
      v20 = v130;
      goto LABEL_51;
    }
    v17 = *(_QWORD *)(v6 + 8);
  }
  else
  {
    v18 = v129;
  }
  v131 = v18;
  v132 = (uint64_t *)v16;
  LODWORD(v133) = v3;
  if (v17 && !*(_QWORD *)(v17 + 8) && sub_1C57BCB94((uint64_t)&v131, v6))
  {
    LOWORD(v135) = 257;
    v19 = sub_1C4773860((uint64_t)a2, v5, v130, (uint64_t)v128, (uint64_t)&v131, 0);
    v20 = v129;
LABEL_51:
    LOWORD(v120) = 257;
    v32 = (uint64_t)sub_1C4773860((uint64_t)a2, v3, v19, (uint64_t)v20, (uint64_t)&v116, 0);
    LOWORD(v115) = 257;
    v33 = (llvm::Type *)&v111;
    return llvm::BinaryOperator::CreateNot(v32, v33, 0);
  }
  if ((_DWORD)v3 == 29)
  {
    v26 = *(_QWORD *)(v4 + 8);
    if (v26)
    {
      if (!*(_QWORD *)(v26 + 8))
      {
        v131 = &v126;
        v132 = (uint64_t *)v128;
        v133 = (_QWORD **)v130;
        v134 = v129;
        LODWORD(v135) = 29;
        v27 = *(_QWORD *)(v6 + 8);
        if (v27)
        {
          if (!*(_QWORD *)(v27 + 8))
          {
            v28 = *(unsigned __int8 *)(v6 + 16);
            if (v28 == 5)
            {
              if (*(_WORD *)(v6 + 18) != 30)
                goto LABEL_78;
              v48 = *(_DWORD *)(v6 + 20);
              v49 = (uint64_t *)(v6 - 32 * (v48 & 0x7FFFFFF));
              v50 = *v49;
              if (*v49)
              {
                v126 = *v49;
                v51 = sub_1C57BCF34((uint64_t *)&v132, 29, v50);
                v48 = *(_DWORD *)(v6 + 20);
                if (v51)
                {
                  if ((sub_1C4D9EED4((uint64_t)&v136, *(llvm::Constant **)(v6 - 32 * (v48 & 0x7FFFFFF) + 32)) & 1) != 0)
                    goto LABEL_77;
                  v48 = *(_DWORD *)(v6 + 20);
                }
              }
              v52 = *(_QWORD *)(v6 - 32 * (v48 & 0x7FFFFFF) + 32);
              if (!v52)
                goto LABEL_78;
              *v131 = v52;
              if (!sub_1C57BCF34((uint64_t *)&v132, (int)v135, v52)
                || !sub_1C4D9EED4((uint64_t)&v136, *(llvm::Constant **)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
              {
                goto LABEL_78;
              }
            }
            else
            {
              if (v28 != 58)
                goto LABEL_78;
              v29 = *(_QWORD *)(v6 - 64);
              if (!v29
                || (v126 = *(_QWORD *)(v6 - 64), !sub_1C57BCF34((uint64_t *)&v132, 29, v29))
                || (sub_1C4D9ED34((uint64_t)&v136, *(llvm::Constant **)(v6 - 32)) & 1) == 0)
              {
                v30 = *(_QWORD *)(v6 - 32);
                if (!v30)
                  goto LABEL_78;
                *v131 = v30;
                if (!sub_1C57BCF34((uint64_t *)&v132, (int)v135, v30)
                  || (sub_1C4D9ED34((uint64_t)&v136, *(llvm::Constant **)(v6 - 64)) & 1) == 0)
                {
                  goto LABEL_78;
                }
              }
            }
LABEL_77:
            v53 = *(_QWORD **)(v127 - 64);
            LOWORD(v135) = 257;
            v32 = sub_1C4D89BCC((uint64_t)a2, v53, v126, (uint64_t)&v131);
            LOWORD(v120) = 257;
            goto LABEL_157;
          }
        }
      }
    }
  }
LABEL_78:
  v131 = (uint64_t *)&v129;
  v132 = (uint64_t *)&v128;
  LODWORD(v133) = v5;
  v134 = &v127;
  v135 = &v130;
  v137 = v5;
  v54 = *(_QWORD *)(v4 + 8);
  if (!v54 || *(_QWORD *)(v54 + 8))
    goto LABEL_127;
  v55 = v5 + 28;
  v56 = *(unsigned __int8 *)(v4 + 16);
  if (v8 != v56)
  {
    if (v56 != 5 || (_DWORD)v5 != *(unsigned __int16 *)(v4 + 18))
      goto LABEL_126;
    v62 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
    v63 = *(unsigned __int8 *)(v62 + 16);
    if (v8 == v63)
    {
      if (*(_QWORD *)(v62 - 64))
      {
        v129 = *(uint64_t **)(v62 - 64);
        v64 = *(_QWORD *)(v62 - 32);
        if (v64)
          goto LABEL_92;
      }
    }
    else if (v63 == 5 && (_DWORD)v5 == *(unsigned __int16 *)(v62 + 18))
    {
      if (*(_QWORD *)(v62 - 32 * (*(_DWORD *)(v62 + 20) & 0x7FFFFFF)))
      {
        v129 = *(uint64_t **)(v62 - 32 * (*(_DWORD *)(v62 + 20) & 0x7FFFFFF));
        v64 = *(_QWORD *)(v62 - 32 * (*(_DWORD *)(v62 + 20) & 0x7FFFFFF) + 32);
        if (v64)
        {
LABEL_92:
          v128 = (_QWORD **)v64;
          v65 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
          v66 = v5;
          if (v65)
          {
            *v134 = v65;
            if ((sub_1C4D9EC28(&v135, 30, v65) & 1) != 0)
              goto LABEL_144;
            v66 = (int)v133;
            v55 = (_DWORD)v133 + 28;
          }
LABEL_116:
          v73 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
          v74 = *(unsigned __int8 *)(v73 + 16);
          if (v55 == v74)
          {
            v75 = *(_QWORD *)(v73 - 64);
            if (!v75)
              goto LABEL_126;
            *v131 = v75;
            v76 = *(_QWORD *)(v73 - 32);
            if (!v76)
              goto LABEL_126;
          }
          else
          {
            if (v74 != 5)
              goto LABEL_126;
            if (v66 != *(unsigned __int16 *)(v73 + 18))
              goto LABEL_126;
            v77 = *(_QWORD *)(v73 - 32 * (*(_DWORD *)(v73 + 20) & 0x7FFFFFF));
            if (!v77)
              goto LABEL_126;
            *v131 = v77;
            v76 = *(_QWORD *)(v73 - 32 * (*(_DWORD *)(v73 + 20) & 0x7FFFFFF) + 32);
            if (!v76)
              goto LABEL_126;
          }
          *v132 = v76;
          v78 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
          if (v78)
          {
            *v134 = v78;
            if ((sub_1C4D9EC28(&v135, 30, v78) & 1) != 0)
              goto LABEL_144;
          }
          goto LABEL_126;
        }
      }
    }
    v66 = v5;
    goto LABEL_116;
  }
  v57 = *(_QWORD *)(v4 - 64);
  v58 = *(unsigned __int8 *)(v57 + 16);
  if (v8 == v58)
  {
    if (*(_QWORD *)(v57 - 64))
    {
      v129 = *(uint64_t **)(v57 - 64);
      v59 = *(_QWORD *)(v57 - 32);
      if (v59)
        goto LABEL_84;
    }
LABEL_99:
    v61 = v5;
    goto LABEL_100;
  }
  if (v58 != 5)
    goto LABEL_99;
  if ((_DWORD)v5 != *(unsigned __int16 *)(v57 + 18))
    goto LABEL_99;
  if (!*(_QWORD *)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF)))
    goto LABEL_99;
  v129 = *(uint64_t **)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF));
  v59 = *(_QWORD *)(v57 - 32 * (*(_DWORD *)(v57 + 20) & 0x7FFFFFF) + 32);
  if (!v59)
    goto LABEL_99;
LABEL_84:
  v128 = (_QWORD **)v59;
  v60 = *(_QWORD *)(v4 - 32);
  v61 = v5;
  if (v60)
  {
    *v134 = v60;
    if ((sub_1C4D9EC28(&v135, 30, v60) & 1) != 0)
      goto LABEL_144;
    v61 = (int)v133;
    v55 = (_DWORD)v133 + 28;
  }
LABEL_100:
  v67 = *(_QWORD *)(v4 - 32);
  v68 = *(unsigned __int8 *)(v67 + 16);
  if (v55 != v68)
  {
    if (v68 != 5)
      goto LABEL_126;
    if (v61 != *(unsigned __int16 *)(v67 + 18))
      goto LABEL_126;
    v71 = *(_QWORD *)(v67 - 32 * (*(_DWORD *)(v67 + 20) & 0x7FFFFFF));
    if (!v71)
      goto LABEL_126;
    *v131 = v71;
    v70 = *(_QWORD *)(v67 - 32 * (*(_DWORD *)(v67 + 20) & 0x7FFFFFF) + 32);
    if (!v70)
      goto LABEL_126;
LABEL_108:
    *v132 = v70;
    v72 = *(_QWORD *)(v4 - 64);
    if (v72)
    {
      *v134 = v72;
      if ((sub_1C4D9EC28(&v135, 30, v72) & 1) != 0)
        goto LABEL_144;
    }
    goto LABEL_126;
  }
  v69 = *(_QWORD *)(v67 - 64);
  if (v69)
  {
    *v131 = v69;
    v70 = *(_QWORD *)(v67 - 32);
    if (v70)
      goto LABEL_108;
  }
LABEL_126:
  v54 = *(_QWORD *)(v4 + 8);
LABEL_127:
  v116 = (uint64_t *)&v128;
  v117 = &v127;
  v118 = &v130;
  v120 = v5;
  v121 = (uint64_t *)&v129;
  v122 = v5;
  if (!v54 || *(_QWORD *)(v54 + 8))
    return 0;
  v80 = *(unsigned __int8 *)(v4 + 16);
  if (v8 == v80)
  {
    v81 = sub_1C57BD0E0(&v116, v5, *(_QWORD *)(v4 - 64));
    v82 = *(_QWORD *)(v4 - 32);
    if (!v81 || !v82)
    {
      if (!sub_1C57BD0E0(&v116, v120, v82))
        return 0;
      v82 = *(_QWORD *)(v4 - 64);
      if (!v82)
        return 0;
    }
  }
  else
  {
    if (v80 != 5 || (_DWORD)v5 != *(unsigned __int16 *)(v4 + 18))
      return 0;
    v83 = sub_1C57BD0E0(&v116, v5, *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF)));
    v82 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF) + 32);
    if (!v83 || !v82)
    {
      if (!sub_1C57BD0E0(&v116, v120, v82))
        return 0;
      v82 = *(_QWORD *)(v4 - 32 * (*(_DWORD *)(v4 + 20) & 0x7FFFFFF));
      if (!v82)
        return 0;
    }
  }
  *v121 = v82;
LABEL_144:
  v85 = v129;
  v84 = v130;
  v86 = (uint64_t)v128;
  v131 = v130;
  v132 = v129;
  LODWORD(v133) = v3;
  v134 = (uint64_t *)v128;
  LODWORD(v135) = v3;
  v87 = *(_QWORD *)(v6 + 8);
  if (v87 && !*(_QWORD *)(v87 + 8))
  {
    if ((sub_1C57BD248((uint64_t)&v131, v6) & 1) != 0)
      goto LABEL_155;
    v86 = (uint64_t)v128;
    v85 = v129;
    v84 = v130;
    v87 = *(_QWORD *)(v6 + 8);
  }
  v116 = v85;
  v117 = (uint64_t *)v86;
  LODWORD(v118) = v3;
  v119 = v84;
  v120 = v3;
  if (!v87)
    goto LABEL_166;
  if (*(_QWORD *)(v87 + 8))
  {
    v111 = v84;
    v112 = v86;
    v113 = v3;
    v114 = v85;
    v115 = v3;
    goto LABEL_151;
  }
  if ((sub_1C57BD248((uint64_t)&v116, v6) & 1) != 0)
  {
LABEL_155:
    LOWORD(v135) = 257;
    v88 = sub_1C506EC1C(a2, v129, (uint64_t)v128, (uint64_t)&v131);
    if ((_DWORD)v3 != 29)
    {
      v89 = v127;
      LOWORD(v115) = 257;
      v90 = (char *)operator new(0x80uLL);
      *((_QWORD *)v90 + 5) = 0;
      v91 = v90 + 40;
      *((_QWORD *)v90 + 6) = 0;
      *((_QWORD *)v90 + 8) = *(_QWORD *)v88;
      v40 = (uint64_t ***)(v90 + 64);
      *((_QWORD *)v90 + 3) = v90 + 64;
      *((_QWORD *)v90 + 7) = v90 + 64;
      *((_QWORD *)v90 + 9) = 0;
      v90[80] = 57;
      v90[81] = 0;
      *((_WORD *)v90 + 41) = 0;
      *((_DWORD *)v90 + 21) = 2;
      *(_OWORD *)(v90 + 88) = 0u;
      *(_OWORD *)(v90 + 104) = 0u;
      *((_DWORD *)v90 + 30) = 0;
      *(_QWORD *)v90 = v88;
      v94 = *((_QWORD *)v88 + 1);
      v93 = v88 + 8;
      v92 = v94;
      *((_QWORD *)v90 + 1) = v94;
      if (v94)
        *(_QWORD *)(v92 + 16) = v90 + 8;
      *((_QWORD *)v90 + 2) = v93;
      *v93 = v90;
      *((_QWORD *)v90 + 4) = v89;
      if (v89)
      {
        v97 = *(_QWORD *)(v89 + 8);
        v96 = (_QWORD *)(v89 + 8);
        v95 = v97;
        *v91 = v97;
        if (v97)
          *(_QWORD *)(v95 + 16) = v91;
        *((_QWORD *)v90 + 6) = v96;
        *v96 = v90 + 32;
      }
      goto LABEL_181;
    }
    LOWORD(v135) = 257;
    v32 = sub_1C4773594((uint64_t)a2, v88, (uint64_t)v130, (uint64_t)&v131);
    LOWORD(v120) = 257;
LABEL_157:
    v33 = (llvm::Type *)&v116;
    return llvm::BinaryOperator::CreateNot(v32, v33, 0);
  }
  v85 = v129;
  v84 = v130;
  v87 = *(_QWORD *)(v6 + 8);
  v111 = v130;
  v112 = (uint64_t)v128;
  v113 = v3;
  v114 = v129;
  v115 = v3;
  if (!v87)
    goto LABEL_166;
LABEL_151:
  if (!*(_QWORD *)(v87 + 8))
  {
    if ((sub_1C57BD248((uint64_t)&v111, v6) & 1) == 0)
    {
      v85 = v129;
      v84 = v130;
      v87 = *(_QWORD *)(v6 + 8);
      goto LABEL_166;
    }
    goto LABEL_155;
  }
LABEL_166:
  v131 = v84;
  v132 = v85;
  LODWORD(v133) = v3;
  if (v87 && !*(_QWORD *)(v87 + 8))
  {
    if ((sub_1C57BCB94((uint64_t)&v131, v6) & 1) != 0)
    {
      v99 = (uint64_t *)v128;
      v98 = v129;
LABEL_175:
      LOWORD(v135) = 257;
      v100 = sub_1C506EAA0((uint64_t)a2, (uint64_t)v98, (uint64_t)&v131);
      LOWORD(v120) = 257;
      v101 = sub_1C4773860((uint64_t)a2, v3, v99, v100, (uint64_t)&v116, 0);
      v102 = v127;
      LOWORD(v115) = 257;
      v103 = (char *)operator new(0x80uLL);
      *((_QWORD *)v103 + 5) = 0;
      v104 = v103 + 40;
      *((_QWORD *)v103 + 6) = 0;
      *((_QWORD *)v103 + 8) = *(_QWORD *)v101;
      v40 = (uint64_t ***)(v103 + 64);
      *((_QWORD *)v103 + 3) = v103 + 64;
      *((_QWORD *)v103 + 7) = v103 + 64;
      *((_QWORD *)v103 + 9) = 0;
      v103[80] = v5 + 28;
      v103[81] = 0;
      *((_WORD *)v103 + 41) = 0;
      *((_DWORD *)v103 + 21) = 2;
      *(_OWORD *)(v103 + 88) = 0u;
      *(_OWORD *)(v103 + 104) = 0u;
      *((_DWORD *)v103 + 30) = 0;
      *(_QWORD *)v103 = v101;
      v107 = *((_QWORD *)v101 + 1);
      v106 = v101 + 8;
      v105 = v107;
      *((_QWORD *)v103 + 1) = v107;
      if (v107)
        *(_QWORD *)(v105 + 16) = v103 + 8;
      *((_QWORD *)v103 + 2) = v106;
      *v106 = v103;
      *((_QWORD *)v103 + 4) = v102;
      if (v102)
      {
        v110 = *(_QWORD *)(v102 + 8);
        v109 = (_QWORD *)(v102 + 8);
        v108 = v110;
        *v104 = v110;
        if (v110)
          *(_QWORD *)(v108 + 16) = v104;
        *((_QWORD *)v103 + 6) = v109;
        *v109 = v103 + 32;
      }
LABEL_181:
      v47 = &v111;
      goto LABEL_182;
    }
    v84 = v130;
    v87 = *(_QWORD *)(v6 + 8);
  }
  v131 = v84;
  v132 = (uint64_t *)v128;
  LODWORD(v133) = v3;
  if (v87 && !*(_QWORD *)(v87 + 8) && sub_1C57BCB94((uint64_t)&v131, v6))
  {
    v98 = (uint64_t *)v128;
    v99 = v129;
    goto LABEL_175;
  }
  return 0;
}

uint64_t sub_1C57ADFE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  llvm::ConstantInt **v12;
  const llvm::APInt *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t Declaration;
  uint64_t **v17;
  llvm::APInt **v18;
  uint64_t v19;
  llvm::Value ***v20;
  __int16 v21;
  unsigned __int8 *v22;
  llvm::APInt *v23;
  llvm::Value **v24;
  _QWORD *v25;

  v4 = *(_QWORD *)(a1 - 64);
  v5 = *(_QWORD *)(a1 - 32);
  v25 = 0;
  LODWORD(v18) = 9;
  v19 = 0;
  v20 = (llvm::Value ***)&v25;
  v6 = sub_1C4E75A6C((uint64_t)&v18, v4);
  result = 0;
  if (!v6)
    return result;
  v23 = 0;
  v24 = 0;
  LODWORD(v18) = 9;
  v19 = 0;
  v20 = &v24;
  if (!sub_1C4E75A6C((uint64_t)&v18, v5))
  {
    v18 = &v23;
    v19 = 0;
    v10 = sub_1C4D89F84((uint64_t)&v18, (unsigned __int8 *)v5);
    result = 0;
    if (!v10)
      return result;
    v11 = *(_QWORD *)(v4 + 8);
    if (v11 && !*(_QWORD *)(v11 + 8))
    {
      v12 = *(llvm::ConstantInt ***)a1;
      llvm::APInt::byteSwap(v23, (llvm::APInt *)&v18);
      v24 = llvm::ConstantInt::get(v12, (llvm::Type *)&v18, v13);
      if (v19 >= 0x41 && v18)
        MEMORY[0x1CAA32F9C](v18, 0x1000C8000313F17);
      goto LABEL_15;
    }
    return 0;
  }
  v8 = *(_QWORD *)(v4 + 8);
  if (!v8 || *(_QWORD *)(v8 + 8))
  {
    v9 = *(_QWORD *)(v5 + 8);
    if (!v9 || *(_QWORD *)(v9 + 8))
      return 0;
  }
LABEL_15:
  v14 = *(unsigned __int8 *)(a1 + 16) - 28;
  v21 = 257;
  v22 = sub_1C4773860((uint64_t)a2, v14, v25, (uint64_t)v24, (uint64_t)&v18, 0);
  v15 = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 56) + 40);
  v18 = *(llvm::APInt ***)a1;
  Declaration = llvm::Intrinsic::getDeclaration(v15, 9, (uint64_t *)&v18, 1);
  if (Declaration)
    v17 = *(uint64_t ***)(Declaration + 24);
  else
    v17 = 0;
  v21 = 257;
  return sub_1C4774778(a2, v17, Declaration, (uint64_t *)&v22, 1, (uint64_t)&v18, 0);
}

llvm::Value *sub_1C57AE190(uint64_t ***a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char *v15;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ****v36;
  uint64_t ***v37;
  int v38;
  int v39;
  uint64_t ***v40;
  char *v41;
  uint64_t **v42;
  uint64_t **v43;
  unsigned __int8 *v44;
  _QWORD *v45[4];
  __int16 v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49[2];
  int v50;
  __int16 v51;
  _QWORD *v52;
  _QWORD *v53;

  v3 = *((unsigned __int8 *)a1 + 16);
  if (v3 == 56)
    v4 = 29;
  else
    v4 = 28;
  v5 = (uint64_t)*(a1 - 8);
  v6 = (uint64_t)*(a1 - 4);
  v52 = 0;
  v53 = 0;
  v48 = (char *)&v53;
  v7 = *(_QWORD *)(v5 + 8);
  if (v7)
  {
    if (!*(_QWORD *)(v7 + 8))
    {
      if (sub_1C4D9EC28((_QWORD **)&v48, 30, v5))
      {
        v45[0] = &v52;
        v9 = *(_QWORD *)(v6 + 8);
        if (v9)
        {
          if (!*(_QWORD *)(v9 + 8) && sub_1C4D9EC28(v45, 30, v6))
          {
            v10 = v53[1];
            v11 = v10 && *(_QWORD *)(v10 + 8) == 0;
            if ((sub_1C579CB78((uint64_t)v53, v11) & 1) == 0)
            {
              v12 = v52[1];
              v13 = v12 && *(_QWORD *)(v12 + 8) == 0;
              if ((sub_1C579CB78((uint64_t)v52, v13) & 1) == 0)
              {
                if ((*((_BYTE *)a1 + 23) & 0x10) == 0)
                {
                  v42 = 0;
                  v41 = &byte_1C871356D;
                  goto LABEL_52;
                }
                v32 = ***a1;
                v33 = *(_QWORD *)(v32 + 152);
                v34 = *(unsigned int *)(v32 + 168);
                if ((_DWORD)v34)
                {
                  LODWORD(v35) = (v34 - 1) & ((a1 >> 4) ^ (a1 >> 9));
                  v36 = (uint64_t ****)(v33 + 16 * v35);
                  v37 = *v36;
                  if (*v36 == a1)
                  {
LABEL_51:
                    v40 = v36[1];
                    v43 = *v40;
                    v41 = (char *)(v40 + 2);
                    v42 = v43;
LABEL_52:
                    v51 = 773;
                    v48 = v41;
                    v49[0] = v42;
                    v49[1] = ".demorgan";
                    v44 = sub_1C4773860(a2, v4, v53, (uint64_t)v52, (uint64_t)&v48, 0);
                    v51 = 257;
                    return llvm::BinaryOperator::CreateNot((uint64_t)v44, (llvm::Type *)&v48, 0);
                  }
                  v38 = 1;
                  while (v37 != (uint64_t ***)-4096)
                  {
                    v39 = v35 + v38++;
                    v35 = v39 & (v34 - 1);
                    v37 = *(uint64_t ****)(v33 + 16 * v35);
                    if (v37 == a1)
                    {
                      v36 = (uint64_t ****)(v33 + 16 * v35);
                      goto LABEL_51;
                    }
                  }
                }
                v36 = (uint64_t ****)(v33 + 16 * v34);
                goto LABEL_51;
              }
            }
          }
        }
      }
    }
  }
  v47 = 0;
  v48 = (char *)&v53;
  v49[0] = &v52;
  v50 = v3 - 28;
  v14 = *(_QWORD *)(v5 + 8);
  if (!v14 || *(_QWORD *)(v14 + 8))
    return 0;
  v17 = *(unsigned __int8 *)(v5 + 16);
  if (v3 == v17)
  {
    if (!*(_QWORD *)(v5 - 64) || (v53 = *(_QWORD **)(v5 - 64), (sub_1C4D9EC28(v49, 30, *(_QWORD *)(v5 - 32)) & 1) == 0))
    {
      v18 = *(_QWORD *)(v5 - 32);
      if (!v18)
        return 0;
      *(_QWORD *)v48 = v18;
      if ((sub_1C4D9EC28(v49, 30, *(_QWORD *)(v5 - 64)) & 1) == 0)
        return 0;
    }
  }
  else
  {
    if (v17 != 5 || v3 - 28 != *(unsigned __int16 *)(v5 + 18))
      return 0;
    v19 = *(_DWORD *)(v5 + 20) & 0x7FFFFFF;
    if (*(_QWORD *)(v5 - 32 * v19))
    {
      v53 = *(_QWORD **)(v5 - 32 * v19);
      if ((sub_1C4D9EC28(v49, 30, *(_QWORD *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF) + 32)) & 1) != 0)
        goto LABEL_35;
      v19 = *(_DWORD *)(v5 + 20) & 0x7FFFFFF;
    }
    v20 = *(_QWORD *)(v5 - 32 * v19 + 32);
    if (!v20)
      return 0;
    *(_QWORD *)v48 = v20;
    if (!sub_1C4D9EC28(v49, 30, *(_QWORD *)(v5 - 32 * (*(_DWORD *)(v5 + 20) & 0x7FFFFFF))))
      return 0;
  }
LABEL_35:
  v45[0] = &v47;
  if (!sub_1C4D9EC28(v45, 30, v6))
    return 0;
  v51 = 257;
  v21 = sub_1C4773860(a2, v4, v52, v47, (uint64_t)&v48, 0);
  v22 = v53;
  v51 = 257;
  v23 = sub_1C506EAA0(a2, (uint64_t)v21, (uint64_t)&v48);
  v46 = 257;
  v24 = (char *)operator new(0x80uLL);
  *((_QWORD *)v24 + 5) = 0;
  v25 = v24 + 40;
  *((_QWORD *)v24 + 6) = 0;
  *((_QWORD *)v24 + 8) = *v22;
  v15 = v24 + 64;
  *((_QWORD *)v24 + 3) = v24 + 64;
  *((_QWORD *)v24 + 7) = v24 + 64;
  *((_QWORD *)v24 + 9) = 0;
  v24[80] = v3;
  v24[81] = 0;
  *((_WORD *)v24 + 41) = 0;
  *((_DWORD *)v24 + 21) = 2;
  *(_OWORD *)(v24 + 88) = 0u;
  *(_OWORD *)(v24 + 104) = 0u;
  *((_DWORD *)v24 + 30) = 0;
  *(_QWORD *)v24 = v22;
  v28 = v22[1];
  v27 = v22 + 1;
  v26 = v28;
  *((_QWORD *)v24 + 1) = v28;
  if (v28)
    *(_QWORD *)(v26 + 16) = v24 + 8;
  *((_QWORD *)v24 + 2) = v27;
  *v27 = v24;
  *((_QWORD *)v24 + 4) = v23;
  if (v23)
  {
    v31 = *(_QWORD *)(v23 + 8);
    v30 = (_QWORD *)(v23 + 8);
    v29 = v31;
    *v25 = v31;
    if (v31)
      *(_QWORD *)(v29 + 16) = v25;
    *((_QWORD *)v24 + 6) = v30;
    *v30 = v24 + 32;
  }
  llvm::Value::setName((uint64_t ***)v24 + 8, (uint64_t)v45);
  return (llvm::Value *)v15;
}

char *sub_1C57AE58C(uint64_t a1, uint64_t a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t FCmpHelper;
  _QWORD *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  int *v29;
  uint64_t **v30;
  __int16 v31;
  _QWORD *v32;
  int v33;
  uint64_t *v34;

  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 - 28;
  v5 = *(_QWORD *)(a1 - 64);
  v6 = *(_QWORD *)(a1 - 32);
  v34 = 0;
  v33 = 0;
  v29 = &v33;
  if (v6 && *(_BYTE *)(v6 + 16) == 82 && sub_1C4E5C310((uint64_t)&v30 + 1, *(llvm::Constant **)(v6 - 32)))
  {
    *v29 = *(_WORD *)(v6 + 18) & 0x3F;
    v7 = 1;
    v8 = v6;
  }
  else
  {
    v7 = 0;
    v8 = v5;
  }
  if (v3 == 56)
    v9 = 7;
  else
    v9 = 8;
  v29 = &v33;
  v30 = &v34;
  if (!sub_1C57BD608((uint64_t)&v29, v8) || v33 != (_DWORD)v9)
    return 0;
  if (v7)
    v11 = v5;
  else
    v11 = v6;
  v12 = *(unsigned __int8 *)(v11 + 16);
  if (v3 != v12)
  {
    if (v12 == 5 && v4 == *(unsigned __int16 *)(v11 + 18))
    {
      v27 = (uint64_t *)(v11 - 32 * (*(_DWORD *)(v11 + 20) & 0x7FFFFFF));
      v13 = *v27;
      if (*v27)
      {
        v14 = v27[4];
        if (v14)
          goto LABEL_20;
      }
    }
    return 0;
  }
  v13 = *(_QWORD *)(v11 - 64);
  if (!v13)
    return 0;
  v14 = *(_QWORD *)(v11 - 32);
  if (!v14)
    return 0;
LABEL_20:
  v32 = 0;
  v29 = &v33;
  v30 = &v32;
  v15 = sub_1C57BD608((uint64_t)&v29, v13) && v33 == (_DWORD)v9;
  if (v15 && *v34 == *v32)
  {
    v16 = v13;
    v13 = v14;
  }
  else
  {
    v16 = v14;
  }
  v29 = &v33;
  v30 = &v32;
  if (!sub_1C57BD608((uint64_t)&v29, v16) || v33 != (_DWORD)v9 || *v34 != *v32)
    return 0;
  v31 = 257;
  FCmpHelper = llvm::IRBuilderBase::CreateFCmpHelper(a2, v9, v34, (uint64_t)v32, (uint64_t)&v29, 0, 0);
  v18 = (_QWORD *)FCmpHelper;
  if (FCmpHelper && *(_BYTE *)(FCmpHelper + 16) == 82)
  {
    llvm::Instruction::copyIRFlags(FCmpHelper, v8, 1);
    llvm::Instruction::andIRFlags((uint64_t)v18, v16);
  }
  v31 = 257;
  v19 = (char *)operator new(0x80uLL);
  *((_QWORD *)v19 + 6) = 0;
  *((_QWORD *)v19 + 5) = 0;
  *((_QWORD *)v19 + 8) = *v18;
  v20 = v19 + 64;
  *((_QWORD *)v19 + 3) = v19 + 64;
  *((_QWORD *)v19 + 7) = v19 + 64;
  *((_QWORD *)v19 + 9) = 0;
  v19[80] = v4 + 28;
  v19[81] = 0;
  *((_WORD *)v19 + 41) = 0;
  *((_DWORD *)v19 + 21) = 2;
  *(_OWORD *)(v19 + 88) = 0u;
  *(_OWORD *)(v19 + 104) = 0u;
  *((_DWORD *)v19 + 30) = 0;
  *(_QWORD *)v19 = v18;
  v23 = v18[1];
  v22 = v18 + 1;
  v21 = v23;
  *((_QWORD *)v19 + 1) = v23;
  if (v23)
    *(_QWORD *)(v21 + 16) = v19 + 8;
  *((_QWORD *)v19 + 2) = v22;
  *v22 = v19;
  *((_QWORD *)v19 + 4) = v13;
  v26 = *(_QWORD *)(v13 + 8);
  v25 = (_QWORD *)(v13 + 8);
  v24 = v26;
  *((_QWORD *)v19 + 5) = v26;
  if (v26)
    *(_QWORD *)(v24 + 16) = v19 + 40;
  *((_QWORD *)v19 + 6) = v25;
  *v25 = v19 + 32;
  llvm::Value::setName((uint64_t ***)v19 + 8, (uint64_t)&v29);
  return v20;
}

uint64_t sub_1C57AE84C(uint64_t a1, llvm::ValueAsMetadata *a2)
{
  int v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t **v8;
  _BOOL8 v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ****v16;
  uint64_t ***v17;
  int v18;
  int v19;
  uint64_t ***v20;
  char *v21;
  uint64_t **v22;
  uint64_t **v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  llvm::ValueAsMetadata **v30;
  llvm::ValueAsMetadata *v31;
  int v32;
  int v33;
  llvm::ValueAsMetadata *v34;
  char *v35;
  uint64_t **v36;
  uint64_t **v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  llvm::Value *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 **v52;
  int v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  char *v57;
  uint64_t **v58;
  uint64_t *v59;
  __int16 v60;
  uint64_t ***v61;
  _QWORD *v62;
  unsigned __int8 *v63;

  v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 56)
  {
    v5 = 57;
  }
  else
  {
    if (v4 != 57)
      return 0;
    v5 = 56;
  }
  v61 = 0;
  v62 = 0;
  v57 = (char *)&v62;
  v59 = (uint64_t *)&v61;
  v6 = sub_1C4D9EC28((_QWORD **)&v57, 30, *((_QWORD *)a2 - 8));
  v7 = *((_QWORD *)a2 - 4);
  if (!v6 || !v7)
  {
    if (!sub_1C4D9EC28((_QWORD **)&v57, 30, v7))
      return 0;
    v7 = *((_QWORD *)a2 - 8);
    if (!v7)
      return 0;
  }
  *v59 = v7;
  v8 = v61[1];
  if (v8)
    v9 = v8[1] == 0;
  else
    v9 = 0;
  result = sub_1C579CB78((uint64_t)v61, v9);
  if ((_DWORD)result)
  {
    result = sub_1C57B3C88((uint64_t)a2, 0);
    if ((_DWORD)result)
    {
      v11 = *(_QWORD *)(a1 + 24);
      if ((*((_BYTE *)v61 + 23) & 0x10) == 0)
      {
        v22 = 0;
        v21 = &byte_1C871356D;
LABEL_24:
        v60 = 773;
        v57 = v21;
        v58 = v22;
        v59 = (uint64_t *)".not";
        v24 = sub_1C506EAA0(v11, (uint64_t)v61, (uint64_t)&v57);
        v25 = v62;
        if ((*((_BYTE *)a2 + 23) & 0x10) == 0)
        {
          v36 = 0;
          v35 = &byte_1C871356D;
          goto LABEL_33;
        }
        v26 = ***(_QWORD ***)a2;
        v27 = *(_QWORD *)(v26 + 152);
        v28 = *(unsigned int *)(v26 + 168);
        if ((_DWORD)v28)
        {
          LODWORD(v29) = (v28 - 1) & ((a2 >> 4) ^ (a2 >> 9));
          v30 = (llvm::ValueAsMetadata **)(v27 + 16 * v29);
          v31 = *v30;
          if (*v30 == a2)
          {
LABEL_32:
            v34 = v30[1];
            v37 = *(uint64_t ***)v34;
            v35 = (char *)v34 + 16;
            v36 = v37;
LABEL_33:
            v60 = 773;
            v57 = v35;
            v58 = v36;
            v59 = (uint64_t *)".not";
            v38 = (char *)operator new(0x80uLL);
            v39 = v38;
            *((_QWORD *)v38 + 6) = 0;
            *((_QWORD *)v38 + 5) = 0;
            v40 = v38 + 40;
            *((_QWORD *)v38 + 8) = *v25;
            v41 = (llvm::Value *)(v38 + 64);
            *((_QWORD *)v38 + 3) = v38 + 64;
            *((_QWORD *)v38 + 7) = v38 + 64;
            *((_QWORD *)v38 + 9) = 0;
            v38[80] = v5;
            v38[81] = 0;
            *((_WORD *)v38 + 41) = 0;
            *((_DWORD *)v38 + 21) = 2;
            *(_OWORD *)(v38 + 88) = 0u;
            *(_OWORD *)(v38 + 104) = 0u;
            *((_DWORD *)v38 + 30) = 0;
            *(_QWORD *)v38 = v25;
            v44 = v25[1];
            v43 = v25 + 1;
            v42 = v44;
            *((_QWORD *)v38 + 1) = v44;
            if (v44)
              *(_QWORD *)(v42 + 16) = v38 + 8;
            *((_QWORD *)v38 + 2) = v43;
            *v43 = v38;
            *((_QWORD *)v38 + 4) = v24;
            if (v24)
            {
              v47 = *(_QWORD *)(v24 + 8);
              v46 = (_QWORD *)(v24 + 8);
              v45 = v47;
              *v40 = v47;
              if (v47)
                *(_QWORD *)(v45 + 16) = v40;
              *((_QWORD *)v38 + 6) = v46;
              *v46 = v38 + 32;
            }
            llvm::Value::setName((uint64_t ***)v38 + 8, (uint64_t)&v57);
            v48 = *(uint64_t **)(a1 + 24);
            v60 = 257;
            if (v39[80] < 0x1Cu
              || ((*(void (**)(uint64_t, llvm::Value *, char **, uint64_t, uint64_t))(*(_QWORD *)v48[10] + 16))(v48[10], v41, &v57, v48[6], v48[7]), v49 = *((unsigned int *)v48 + 2), !(_DWORD)v49))
            {
LABEL_41:
              sub_1C577F888(a1, a2, v41);
              sub_1C577F7AC(a1, v41);
              return 1;
            }
            v50 = *v48;
            v51 = *v48 + 16 * v49;
            v52 = (unsigned __int8 **)(v39 + 112);
            while (1)
            {
              v53 = *(_DWORD *)v50;
              v54 = *(unsigned __int8 **)(v50 + 8);
              if (v54)
              {
                if (!v53)
                {
                  v63 = *(unsigned __int8 **)(v50 + 8);
                  llvm::MetadataTracking::track((uint64_t)&v63, v54, 2);
                  v55 = *v52;
                  goto LABEL_54;
                }
              }
              else
              {
                v55 = *v52;
                if (!*v52 && (v39[87] & 0x20) == 0)
                  goto LABEL_51;
                if (!v53)
                {
                  v63 = 0;
LABEL_54:
                  if (v55)
                    llvm::MetadataTracking::untrack((uint64_t)(v39 + 112), v55);
                  v56 = v63;
                  *v52 = v63;
                  if (v56)
                    llvm::MetadataTracking::retrack((uint64_t)&v63, v56, (uint64_t)(v39 + 112));
                  goto LABEL_51;
                }
              }
              llvm::Value::setMetadata(v41, *(_DWORD *)v50, (llvm::MDNode *)v54);
LABEL_51:
              v50 += 16;
              if (v50 == v51)
                goto LABEL_41;
            }
          }
          v32 = 1;
          while (v31 != (llvm::ValueAsMetadata *)-4096)
          {
            v33 = v29 + v32++;
            v29 = v33 & (v28 - 1);
            v31 = *(llvm::ValueAsMetadata **)(v27 + 16 * v29);
            if (v31 == a2)
            {
              v30 = (llvm::ValueAsMetadata **)(v27 + 16 * v29);
              goto LABEL_32;
            }
          }
        }
        v30 = (llvm::ValueAsMetadata **)(v27 + 16 * v28);
        goto LABEL_32;
      }
      v12 = ***v61;
      v13 = *(_QWORD *)(v12 + 152);
      v14 = *(unsigned int *)(v12 + 168);
      if ((_DWORD)v14)
      {
        LODWORD(v15) = (v14 - 1) & ((v61 >> 4) ^ (v61 >> 9));
        v16 = (uint64_t ****)(v13 + 16 * v15);
        v17 = *v16;
        if (*v16 == v61)
        {
LABEL_23:
          v20 = v16[1];
          v23 = *v20;
          v21 = (char *)(v20 + 2);
          v22 = v23;
          goto LABEL_24;
        }
        v18 = 1;
        while (v17 != (uint64_t ***)-4096)
        {
          v19 = v15 + v18++;
          v15 = v19 & (v14 - 1);
          v17 = *(uint64_t ****)(v13 + 16 * v15);
          if (v17 == v61)
          {
            v16 = (uint64_t ****)(v13 + 16 * v15);
            goto LABEL_23;
          }
        }
      }
      v16 = (uint64_t ****)(v13 + 16 * v14);
      goto LABEL_23;
    }
  }
  return result;
}

unsigned __int8 *sub_1C57AEC28(_QWORD *a1, uint64_t a2, unsigned __int8 *a3, llvm::ConstantExpr *this, unsigned __int8 *a5)
{
  unsigned __int8 *v6;
  llvm::UndefValue *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  llvm::UndefValue *v17;
  uint64_t v18;
  llvm::UndefValue **v19;
  uint64_t v20;
  llvm::UndefValue *v21;
  unsigned __int8 *v22;
  int v23;
  uint64_t *v24;
  llvm::Constant *v25;
  int v26;
  llvm::UndefValue **v27;
  uint64_t v28;
  llvm::UndefValue *v29;
  int v30;
  llvm::Type *v31;
  uint64_t *v32;
  uint64_t v33;
  unsigned __int8 *v34;
  llvm::UndefValue *v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned __int8 *v40;
  llvm::UndefValue **v41;
  uint64_t v42;
  llvm::Constant *v43;
  unsigned int v44;
  uint64_t v45;
  llvm::Type *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  llvm::UndefValue **v52;
  uint64_t v53;
  llvm::Constant **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned __int8 *v59;
  int v60;
  unsigned __int8 *v61;
  unsigned __int8 **v62;
  int v63;
  int v64;
  llvm::Type *v65;
  llvm::UndefValue *AggregateElement;
  llvm::UndefValue *v67;
  llvm::Constant *v68;
  llvm::Constant *v69;
  uint64_t *v70;
  unsigned __int8 *v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  BOOL v75;
  BOOL v76;
  int v77;
  llvm::UndefValue **v78;
  llvm::Type *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  const char *v83;
  unint64_t PrimitiveSizeInBits;
  unint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  llvm::Type *v89;
  llvm::Type *v90;
  uint64_t *v91;
  uint64_t *v92;
  uint64_t *v93;
  unsigned __int8 *v94;
  uint64_t *v95;
  unsigned __int8 *Select;
  uint64_t *v97;
  _DWORD *v98;
  int v99;
  llvm::Constant *v100;
  llvm::UndefValue *v101;
  llvm::UndefValue *v102;
  unsigned __int8 **v103;
  uint64_t v104;
  llvm::UndefValue *v105;
  unsigned __int8 *v106;
  llvm::UndefValue *v107;
  char v108;
  char v109;
  char v110;
  llvm::UndefValue *v111;
  llvm::UndefValue **v112;
  llvm::UndefValue *v113;
  uint64_t v114;
  uint64_t v115;
  char v116;

  v6 = (unsigned __int8 *)this;
  v9 = (llvm::UndefValue *)a2;
  if (*(_BYTE *)(a2 + 16) == 77)
  {
    v10 = *(_QWORD *)(a2 + 8);
    v9 = (llvm::UndefValue *)a2;
    if (v10)
    {
      v9 = (llvm::UndefValue *)a2;
      if (!*(_QWORD *)(v10 + 8))
        v9 = *(llvm::UndefValue **)(a2 - 32);
    }
  }
  if (this)
  {
    if (*((_BYTE *)this + 16) == 77)
    {
      v11 = *((_QWORD *)this + 1);
      if (v11)
      {
        if (!*(_QWORD *)(v11 + 8))
          v6 = (unsigned __int8 *)*((_QWORD *)this - 4);
      }
    }
  }
  v12 = *(_QWORD *)v9;
  if ((*(_DWORD *)(*(_QWORD *)v9 + 8) & 0xFE) == 0x12)
    v13 = *(unsigned __int8 *)(**(_QWORD **)(v12 + 16) + 8);
  else
    v13 = *(_DWORD *)(*(_QWORD *)v9 + 8);
  if (v13 != 13)
    return 0;
  v14 = (*(_DWORD *)(*(_QWORD *)v6 + 8) & 0xFE) == 0x12
      ? *(unsigned __int8 *)(**(_QWORD **)(*(_QWORD *)v6 + 16) + 8)
      : *(_DWORD *)(*(_QWORD *)v6 + 8);
  if (v14 != 13)
    return 0;
  v15 = *(_QWORD *)a2;
  v111 = v9;
  v16 = v6[16];
  if (v16 != 5)
  {
    if (v16 == 58)
    {
      v17 = v9;
      if (*((llvm::UndefValue **)v6 - 8) == v9)
      {
        if ((sub_1C4D9ED34((uint64_t)&v112, *((llvm::Constant **)v6 - 4)) & 1) != 0)
          goto LABEL_33;
        v17 = v111;
      }
      if (v17 != *((llvm::UndefValue **)v6 - 4)
        || (sub_1C4D9ED34((uint64_t)&v112, *((llvm::Constant **)v6 - 8)) & 1) == 0)
      {
        goto LABEL_40;
      }
      goto LABEL_33;
    }
LABEL_40:
    v106 = 0;
    v107 = 0;
    if (*((unsigned __int8 *)v9 + 16) <= 0x14u)
    {
      v107 = v9;
      if (v6[16] <= 0x14u)
      {
        v106 = v6;
        if ((llvm::UndefValue *)llvm::ConstantExpr::getNot((llvm::Constant **)v6, (llvm::Constant *)a2) == v9)
        {
          v27 = (llvm::UndefValue **)a1[7];
          v28 = a1[9];
          if (*((unsigned __int8 *)v9 + 16) < 0x1Cu || (v29 = v9, !*((_QWORD *)v9 + 5)))
            v29 = 0;
          v111 = (llvm::UndefValue *)a1[10];
          v112 = v27;
          v113 = v29;
          v114 = v28;
          v115 = 0;
          v116 = 1;
          v30 = sub_1C4F85990(v9, 0, (uint64_t)&v111);
          v31 = (llvm::Type *)v12;
          if ((*(_DWORD *)(v12 + 8) & 0xFE) == 0x12)
            v31 = **(llvm::Type ***)(v12 + 16);
          if (v30 == llvm::Type::getPrimitiveSizeInBits(v31))
          {
            v32 = (uint64_t *)a1[3];
            sub_1C4774CC4((_DWORD *)v12);
            LOWORD(v115) = 257;
            v34 = sub_1C4773690(v32, (unsigned __int8 *)v9, v33, (uint64_t)&v111);
LABEL_72:
            v24 = (uint64_t *)v34;
            goto LABEL_150;
          }
        }
      }
    }
    v104 = 0;
    v105 = 0;
    v111 = (llvm::UndefValue *)&v105;
    if (!sub_1C4B037F8((_QWORD **)&v111, (uint64_t)v9))
      goto LABEL_99;
    v35 = v105;
    v36 = *(_DWORD *)(*(_QWORD *)v105 + 8);
    if ((v36 & 0xFE) == 0x12)
      v36 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v105 + 16) + 8);
    if (v36 != 269)
      goto LABEL_99;
    v111 = v105;
    v37 = v6[16];
    if (v37 > 0x1B || v37 == 5)
    {
      v38 = v37 > 0x1B ? v37 - 28 : *((unsigned __int16 *)v6 + 9);
      if (v38 == 40)
      {
        v39 = *((_DWORD *)v6 + 5);
        if ((v39 & 0x40000000) != 0)
          v40 = (unsigned __int8 *)*((_QWORD *)v6 - 1);
        else
          v40 = &v6[-32 * (v39 & 0x7FFFFFF)];
        v49 = *(_QWORD *)v40;
        v50 = *(unsigned __int8 *)(*(_QWORD *)v40 + 16);
        if (v50 == 5)
        {
          if (*(_WORD *)(v49 + 18) == 30)
          {
            v51 = *(_DWORD *)(v49 + 20) & 0x7FFFFFF;
            v52 = (llvm::UndefValue **)(v49 - 32 * v51);
            if (v105 == *v52)
            {
              if ((sub_1C4D9EED4((uint64_t)&v112, v52[4]) & 1) != 0)
                goto LABEL_98;
              v35 = v111;
              v53 = -(uint64_t)(*(_DWORD *)(v49 + 20) & 0x7FFFFFF);
            }
            else
            {
              v53 = -v51;
            }
            v54 = (llvm::Constant **)(v49 + 32 * v53);
            if (v35 == v54[4] && (sub_1C4D9EED4((uint64_t)&v112, *v54) & 1) != 0)
              goto LABEL_98;
          }
        }
        else if (v50 == 58)
        {
          if (v105 != *(llvm::UndefValue **)(v49 - 64))
          {
LABEL_79:
            if (v35 == *(llvm::UndefValue **)(v49 - 32)
              && (sub_1C4D9ED34((uint64_t)&v112, *(llvm::Constant **)(v49 - 64)) & 1) != 0)
            {
              goto LABEL_98;
            }
            goto LABEL_89;
          }
          if ((sub_1C4D9ED34((uint64_t)&v112, *(llvm::Constant **)(v49 - 32)) & 1) == 0)
          {
            v35 = v111;
            goto LABEL_79;
          }
LABEL_98:
          v24 = (uint64_t *)v105;
          goto LABEL_150;
        }
      }
    }
LABEL_89:
    v111 = (llvm::UndefValue *)&v104;
    v55 = *((_QWORD *)v6 + 1);
    if (v55 && !*(_QWORD *)(v55 + 8) && sub_1C4D9EC28((_QWORD **)&v111, 30, (uint64_t)v6))
    {
      v56 = v104;
      if (v104)
      {
        if (*(_BYTE *)(v104 + 16) == 77)
        {
          v57 = *(_QWORD *)(v104 + 8);
          if (v57)
          {
            if (!*(_QWORD *)(v57 + 8))
              v56 = *(_QWORD *)(v104 - 32);
          }
        }
      }
      v104 = v56;
      v111 = v105;
      if (sub_1C4FA3A38(&v111, v56))
        goto LABEL_98;
    }
LABEL_99:
    if ((*(_DWORD *)(v12 + 8) & 0xFE) == 0x12)
    {
      v111 = (llvm::UndefValue *)&v105;
      v112 = &v107;
      v58 = *((unsigned __int8 *)v9 + 16);
      if (v58 == 5)
      {
        if (*((_WORD *)v9 + 9) != 30)
          goto LABEL_149;
        if (!sub_1C4B037F8((_QWORD **)&v111, *((_QWORD *)v9 - 4 * (*((_DWORD *)v9 + 5) & 0x7FFFFFF))))
          goto LABEL_149;
        v59 = (unsigned __int8 *)((_QWORD *)v9 - 4 * (*((_DWORD *)v9 + 5) & 0x7FFFFFF))[4];
        if (!v59)
          goto LABEL_149;
      }
      else
      {
        if (v58 != 58)
          goto LABEL_149;
        if (!sub_1C4B037F8((_QWORD **)&v111, *((_QWORD *)v9 - 8)))
          goto LABEL_149;
        v59 = (unsigned __int8 *)*((_QWORD *)v9 - 4);
        if (!v59 || v59[16] > 0x14u)
          goto LABEL_149;
      }
      *v112 = (llvm::UndefValue *)v59;
      v102 = v105;
      v103 = &v106;
      v60 = v6[16];
      if (v60 == 5)
      {
        if (*((_WORD *)v6 + 9) != 30)
          goto LABEL_149;
        v71 = &v6[-32 * (*((_DWORD *)v6 + 5) & 0x7FFFFFF)];
        v72 = *(_QWORD *)v71;
        v73 = *(unsigned __int8 *)(*(_QWORD *)v71 + 16);
        v74 = v73 - 28;
        v75 = v73 >= 0x1C || v73 == 5;
        v76 = !v75;
        if (!v72 || v76)
          goto LABEL_149;
        if (v73 <= 0x1B)
          v74 = *(unsigned __int16 *)(v72 + 18);
        if (v74 != 40)
          goto LABEL_149;
        v77 = *(_DWORD *)(v72 + 20);
        v78 = (v77 & 0x40000000) != 0
            ? *(llvm::UndefValue ***)(v72 - 8)
            : (llvm::UndefValue **)(v72 - 32 * (v77 & 0x7FFFFFF));
        if (*v78 != v105)
          goto LABEL_149;
        v61 = (unsigned __int8 *)*((_QWORD *)v71 + 4);
        if (!v61)
          goto LABEL_149;
        v62 = &v106;
LABEL_115:
        *v62 = v61;
        v63 = *(_DWORD *)(*(_QWORD *)v105 + 8);
        if ((v63 & 0xFE) == 0x12)
          v63 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v105 + 16) + 8);
        if (v63 == 269)
        {
          v101 = v107;
          v64 = *(_DWORD *)(*(_QWORD *)v107 + 32);
          if (!v64)
          {
LABEL_130:
            sub_1C4774CC4((_DWORD *)v12);
            v107 = sub_1C537D3B8((llvm *)0x26, (uint64_t)v101, v69, 0);
            v70 = (uint64_t *)a1[3];
            LOWORD(v115) = 257;
            v34 = sub_1C506EC1C(v70, v105, (uint64_t)v107, (uint64_t)&v111);
            goto LABEL_72;
          }
          v65 = 0;
          v100 = (llvm::Constant *)v106;
          while (1)
          {
            AggregateElement = llvm::Constant::getAggregateElement(v101, v65);
            v67 = llvm::Constant::getAggregateElement(v100, v65);
            if (!AggregateElement)
              break;
            v68 = v67;
            if (!v67)
              break;
            if (((llvm::Constant::isNullValue(AggregateElement) & 1) == 0
               && (sub_1C4E71060((uint64_t)&v110, AggregateElement) & 1) == 0
               || (sub_1C4D9EED4((uint64_t)&v109, v68) & 1) == 0)
              && ((llvm::Constant::isNullValue(v68) & 1) == 0 && (sub_1C4E71060((uint64_t)&v110, v68) & 1) == 0
               || (sub_1C4D9EED4((uint64_t)&v108, AggregateElement) & 1) == 0))
            {
              break;
            }
            v65 = (llvm::Type *)((_DWORD)v65 + 1);
            if (v64 == (_DWORD)v65)
            {
              v101 = v107;
              goto LABEL_130;
            }
          }
        }
        goto LABEL_149;
      }
      if (v60 == 58)
      {
        if (sub_1C4FA3A38(&v102, *((_QWORD *)v6 - 8)))
        {
          v61 = (unsigned __int8 *)*((_QWORD *)v6 - 4);
          if (v61)
          {
            if (v61[16] <= 0x14u)
            {
              v62 = v103;
              goto LABEL_115;
            }
          }
        }
      }
    }
LABEL_149:
    v24 = 0;
LABEL_150:
    if (v24)
      goto LABEL_151;
    return 0;
  }
  if (*((_WORD *)v6 + 9) != 30)
    goto LABEL_40;
  v18 = *((_DWORD *)v6 + 5) & 0x7FFFFFF;
  v19 = (llvm::UndefValue **)&v6[-32 * v18];
  if (*v19 == v9)
  {
    if ((sub_1C4D9EED4((uint64_t)&v112, v19[4]) & 1) != 0)
      goto LABEL_33;
    v21 = v111;
    v20 = -(uint64_t)(*((_DWORD *)v6 + 5) & 0x7FFFFFF);
  }
  else
  {
    v20 = -v18;
    v21 = v9;
  }
  v22 = &v6[32 * v20];
  if (v21 != *((llvm::UndefValue **)v22 + 4) || !sub_1C4D9EED4((uint64_t)&v112, *(llvm::Constant **)v22))
    goto LABEL_40;
LABEL_33:
  v23 = *(_DWORD *)(v12 + 8);
  if ((v23 & 0xFE) == 0x12)
    v23 = *(_DWORD *)(**(_QWORD **)(v12 + 16) + 8);
  v24 = (uint64_t *)v9;
  if (v23 != 269)
  {
    v25 = v9;
    if (*((_BYTE *)v9 + 16) == 77)
      v25 = (llvm::Constant *)*((_QWORD *)v9 - 4);
    if ((*(_DWORD *)(*(_QWORD *)v25 + 8) & 0xFE) == 0x12)
      v26 = *(unsigned __int8 *)(**(_QWORD **)(*(_QWORD *)v25 + 16) + 8);
    else
      v26 = *(_DWORD *)(*(_QWORD *)v25 + 8);
    if (v26 != 13)
      return 0;
    v41 = (llvm::UndefValue **)a1[7];
    v42 = a1[9];
    if (*((unsigned __int8 *)v25 + 16) < 0x1Cu || (v43 = v25, !*((_QWORD *)v25 + 5)))
      v43 = 0;
    v111 = (llvm::UndefValue *)a1[10];
    v112 = v41;
    v113 = v43;
    v114 = v42;
    v115 = 0;
    v116 = 1;
    v44 = sub_1C4F85990(v25, 0, (uint64_t)&v111);
    v45 = *(_QWORD *)v25;
    v46 = *(llvm::Type **)v25;
    if ((*(_DWORD *)(*(_QWORD *)v25 + 8) & 0xFE) == 0x12)
      v46 = **(llvm::Type ***)(v45 + 16);
    if (v44 != llvm::Type::getPrimitiveSizeInBits(v46))
      return 0;
    if ((*(_DWORD *)(v12 + 8) & 0xFE) == 0x12)
      v12 = **(_QWORD **)(v12 + 16);
    if (v44 > llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v12))
      return 0;
    v47 = (uint64_t *)a1[3];
    sub_1C4774CC4((_DWORD *)v45);
    LOWORD(v115) = 257;
    v34 = sub_1C4773E38(v47, 38, (unsigned __int8 *)v25, v48, (uint64_t)&v111);
    goto LABEL_72;
  }
LABEL_151:
  v79 = *(llvm::Type **)v9;
  v80 = *v24;
  if (*v24 && (*(_DWORD *)(v80 + 8) & 0xFE) == 0x12)
  {
    v81 = *(unsigned int *)(v80 + 32);
    v82 = a1[3];
    PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v79);
    if ((_DWORD)v83 == 1)
    v85 = PrimitiveSizeInBits / v81;
    v86 = *(_QWORD **)(v82 + 64);
    LODWORD(v111) = v85;
    if ((int)v85 <= 63)
    {
      if ((int)v85 <= 31)
      {
        switch((_DWORD)v85)
        {
          case 0x10:
            v87 = *v86 + 1936;
            goto LABEL_164;
          case 8:
            v87 = *v86 + 1912;
            goto LABEL_164;
          case 1:
            v87 = *v86 + 1888;
            goto LABEL_164;
        }
      }
      else if ((_DWORD)v85 == 32)
      {
        v87 = *v86 + 1960;
        goto LABEL_164;
      }
    }
    else
    {
      if ((_DWORD)v85 == 64)
      {
        v87 = *v86 + 1984;
LABEL_164:
        v89 = (llvm::Type *)*(unsigned int *)(v80 + 32);
        if (*(_BYTE *)(v80 + 8) == 19)
          llvm::ScalableVectorType::get((uint64_t **)v87, v89);
        else
          llvm::FixedVectorType::get((llvm::FixedVectorType *)v87, v89);
        v79 = v90;
        goto LABEL_167;
      }
      if ((_DWORD)v85 == 128)
      {
        v87 = *v86 + 2008;
        goto LABEL_164;
      }
    }
    v98 = sub_1C5270984(*v86 + 2168, &v111);
    v87 = *((_QWORD *)v98 + 1);
    if (!v87)
    {
      v87 = sub_1C484358C(*v86 + 2040, 24, 3);
      v99 = (int)v111;
      *(_QWORD *)v87 = v86;
      *(_QWORD *)(v87 + 16) = 0;
      *(_QWORD *)(v87 + 8) = (v99 << 8) | 0xDu;
      *((_QWORD *)v98 + 1) = v87;
    }
    goto LABEL_164;
  }
LABEL_167:
  v91 = (uint64_t *)a1[3];
  LOWORD(v115) = 257;
  v92 = (uint64_t *)sub_1C4773E38(v91, 49, a3, (uint64_t)v79, (uint64_t)&v111);
  v93 = (uint64_t *)a1[3];
  LOWORD(v115) = 257;
  v94 = sub_1C4773E38(v93, 49, a5, (uint64_t)v79, (uint64_t)&v111);
  v95 = (uint64_t *)a1[3];
  LOWORD(v115) = 257;
  Select = (unsigned __int8 *)llvm::IRBuilderBase::CreateSelect(v95, (uint64_t)v24, v92, (uint64_t)v94, (uint64_t)&v111, 0);
  v97 = (uint64_t *)a1[3];
  LOWORD(v115) = 257;
  return sub_1C4773E38(v97, 49, Select, v15, (uint64_t)&v111);
}

llvm::Value *sub_1C57AF664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const llvm::DataLayout *a5, llvm::DSOLocalEquivalent **a6)
{
  uint64_t v6;
  llvm *v8;
  uint64_t *v9;
  llvm::Constant *v10;
  uint64_t v11;
  llvm::Value *v12;
  uint64_t Not;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned __int8 **v22;
  llvm *v23;
  unsigned __int8 ***v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned __int8 **v29;
  llvm *v30;
  unsigned __int8 ***v31;
  unsigned __int8 **v32;
  int v33;
  llvm ***v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  llvm::Type **v48;
  uint64_t v49;
  uint64_t v50;
  llvm::Type **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  llvm::Type **v57;
  uint64_t v58;
  uint64_t v59;
  llvm::Type **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  llvm::Type *v65;
  int v66;
  int v67;
  __int128 *v68;
  llvm::Type *v69;
  unsigned int PrimitiveSizeInBits;
  int v71;
  uint64_t *v72;
  unsigned __int8 **v73;
  llvm::Value **v74;
  char *v75;
  llvm::Value **v76;
  char v77;
  unsigned __int8 *v78;
  _QWORD *v79;
  unsigned __int8 *v80;
  llvm::Value *v81;
  _QWORD *v82;
  llvm::Value *v83;
  llvm::Type ***v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  llvm::Type *v98;
  unsigned int v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  unsigned __int8 *v125;
  unsigned __int8 **v126;
  int v127;
  unsigned __int8 *v128;
  int v129;
  int v130;
  unsigned __int8 **v131;
  llvm *v132;
  int v133;
  unsigned __int8 **v134;
  llvm *v135;
  unsigned __int8 **v136;
  const llvm::APInt *v137;
  const void **v138;
  llvm::Type *v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  const void *v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  unsigned __int8 **v149;
  llvm *v150;
  unsigned __int8 ***v151;
  uint64_t v152;
  unsigned __int8 ***v153;
  uint64_t v154;
  const llvm::Value *v155;
  unsigned int v156;
  int v157;
  unsigned __int8 ***v158;
  uint64_t v159;
  llvm *v160;
  llvm::Value **v161;
  uint64_t v162;
  char *v163;
  llvm::Value **v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  llvm::Value *v169;
  _QWORD *v170;
  llvm::Value *v171;
  unsigned __int8 **v172;
  char *v173;
  _QWORD *v174;
  unsigned __int8 *v175;
  _QWORD *v176;
  unsigned __int8 *v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  const llvm::APInt *v182;
  uint64_t v183;
  BOOL v184;
  int v185;
  int v186;
  llvm::ConstantInt ****v187;
  llvm::ConstantInt ***v188;
  unsigned __int8 *v189;
  uint64_t v190;
  uint64_t v191;
  unsigned __int8 *v192;
  unsigned int v193;
  llvm::Type *v194;
  uint64_t v195;
  unsigned __int8 *v196;
  unsigned __int8 *v197;
  int v198;
  unsigned __int8 *v199;
  unsigned __int8 *v200;
  llvm *v201;
  unsigned __int8 *v202;
  llvm::Value **v203;
  llvm::Type **v204;
  int v205;
  llvm::Value **v206;
  uint64_t *v207;
  uint64_t Declaration;
  uint64_t v209;
  uint64_t **v210;
  char *v211;
  uint64_t v212;
  char *v213;
  int v214;
  unsigned __int8 *v215;
  llvm::ConstantInt ***v216;
  unsigned __int8 *v217;
  unsigned __int8 *v218;
  llvm::ConstantInt ****v219;
  llvm::ConstantInt ***v220;
  unsigned __int8 *v221;
  uint64_t v222;
  llvm::Value **v223;
  _QWORD *v224;
  unsigned __int8 *v225;
  uint64_t v226;
  llvm::Value **v227;
  char *v228;
  _QWORD *v229;
  char v230;
  unsigned __int8 *v231;
  llvm::ConstantInt ***v232;
  unsigned __int8 *v233;
  unsigned __int8 *v234;
  const void **v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  int64_t v240;
  int v241;
  BOOL v242;
  unint64_t v243;
  int v244;
  int v245;
  llvm::ConstantInt ***v246;
  unsigned __int8 *v247;
  int v248;
  llvm **v249;
  llvm *v250;
  unsigned __int8 *v251;
  uint64_t v252;
  llvm::Value **v253;
  uint64_t v254;
  llvm::Value **v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  const void **v262;
  uint64_t v263;
  unint64_t v264;
  void *v265;
  size_t v266;
  const llvm::APInt *v267;
  BOOL IsZero;
  const void **v269;
  uint64_t v270;
  void *v271;
  int v272;
  unsigned __int8 *v273;
  llvm *v274;
  llvm::ConstantInt ***v275;
  const void **v276;
  uint64_t v277;
  unint64_t v278;
  void *v279;
  size_t v280;
  const llvm::APInt *v281;
  BOOL v282;
  const void **v283;
  uint64_t v284;
  void *v285;
  int v286;
  llvm::ConstantInt ****v287;
  int v288;
  const llvm::APInt *v289;
  uint64_t *v290;
  unint64_t v291;
  _QWORD *v292;
  uint64_t v293;
  uint64_t *v294;
  unint64_t v295;
  _QWORD *v296;
  uint64_t v297;
  unsigned __int8 *v298;
  uint64_t *v299;
  const void **v300;
  uint64_t v301;
  unint64_t v302;
  unint64_t v303;
  unint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  uint64_t v307;
  int v308;
  llvm::Type **v309;
  int v310;
  uint64_t v311;
  int v312;
  unsigned int v313;
  _QWORD *v314;
  _QWORD *v315;
  _QWORD *v316;
  int v317;
  BOOL v318;
  unsigned int v319;
  _QWORD *v320;
  _QWORD *v321;
  unint64_t v322;
  uint64_t v323;
  uint64_t v324;
  unsigned __int8 *v325;
  unsigned __int8 *v326;
  unsigned __int8 **v327;
  uint64_t v328;
  _QWORD *v329;
  uint64_t v330;
  int v331;
  unsigned __int8 *v332;
  uint64_t v333;
  int v334;
  uint64_t v335;
  int v336;
  unsigned __int8 *v337;
  _QWORD *v338;
  uint64_t v339;
  int v340;
  _QWORD *v341;
  unsigned __int8 *v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  _QWORD *v347;
  uint64_t v348;
  _QWORD *v349;
  uint64_t v350;
  uint64_t v351;
  _QWORD *v352;
  uint64_t v353;
  int v354;
  uint64_t v355;
  int v356;
  unsigned __int8 *v357;
  unsigned __int8 *v358;
  uint64_t v359;
  int v360;
  unsigned __int8 *v361;
  unsigned __int8 *v362;
  uint64_t v363;
  _QWORD *v364;
  uint64_t v365;
  unsigned __int8 **v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  _QWORD *v372;
  uint64_t v373;
  _QWORD *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  unsigned int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t *v396;
  uint64_t v397;
  int v398;
  int v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  llvm::Type *v408;
  llvm::Type *v409;
  int v410;
  uint64_t *AllOnesValue;
  llvm::Type *v412;
  _QWORD *v413;
  int v414;
  uint64_t v415;
  uint64_t v416;
  int v417;
  uint64_t v418;
  uint64_t *v419;
  uint64_t v420;
  _QWORD *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  llvm::Type *v428;
  llvm::Type *v429;
  int v430;
  uint64_t v431;
  llvm::Type *v432;
  int v433;
  int v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  int v439;
  BOOL v440;
  unsigned __int8 *v441;
  int v442;
  uint64_t v443;
  unsigned __int8 *v444;
  int v445;
  uint64_t v446;
  _QWORD *v447;
  char *v448;
  uint64_t v449;
  uint64_t v450;
  _QWORD *v451;
  char *v452;
  _QWORD *v453;
  uint64_t v454;
  _QWORD *v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  _QWORD *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  _BOOL4 v464;
  int v465;
  uint64_t v466;
  uint64_t v467;
  char v468;
  uint64_t v469;
  uint64_t v470;
  char v471;
  uint64_t v472;
  uint64_t v473;
  llvm::Type *v474;
  uint64_t v475;
  unsigned __int8 *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  unsigned __int8 *v480;
  uint64_t v481;
  uint64_t v482;
  int v483;
  unsigned __int8 *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  char v488;
  uint64_t v489;
  uint64_t v490;
  int v491;
  _QWORD *v492;
  _QWORD *v493;
  llvm::Type *v494;
  llvm::Type *v495;
  uint64_t v496;
  uint64_t *v497;
  llvm::Value **NullValue;
  _QWORD *v499;
  uint64_t v500;
  llvm::Value *v501;
  llvm::Type *v502;
  llvm::Value **v503;
  uint64_t v504;
  char *v505;
  _QWORD *v506;
  char v507;
  int v508;
  uint64_t v509;
  int v510;
  uint64_t v511;
  int v512;
  llvm::Constant **v513;
  uint64_t v514;
  unsigned __int8 *v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  unsigned __int8 *v521;
  int v522;
  int v523;
  unsigned __int8 *v524;
  uint64_t v525;
  unsigned __int8 *v526;
  int v527;
  int v528;
  _QWORD *v529;
  char *v530;
  uint64_t v531;
  uint64_t v532;
  _QWORD *v533;
  uint64_t *v534;
  uint64_t v535;
  _QWORD *v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  int v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  _QWORD *v544;
  uint64_t v545;
  _QWORD *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  int v552;
  int v553;
  uint64_t *v554;
  uint64_t v555;
  int v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  uint64_t v560;
  _QWORD *v561;
  uint64_t v562;
  uint64_t v563;
  const llvm::Instruction *v564;
  llvm::Value *v565;
  uint64_t v566;
  llvm::Value *v567;
  _BOOL4 v568;
  uint64_t v569;
  llvm::Type *v570;
  int v571;
  llvm::Value **v572;
  llvm::Type *v573;
  uint64_t v574;
  _QWORD *v575;
  uint64_t v576;
  uint64_t v577;
  _QWORD *v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  int64_t v582;
  int v583;
  unint64_t v584;
  int v585;
  const void **v586;
  uint64_t v587;
  unint64_t v588;
  unint64_t v589;
  unint64_t v590;
  size_t v591;
  uint64_t v592;
  _BOOL4 v593;
  uint64_t v594;
  llvm::ConstantInt ***v595;
  const void **v596;
  uint64_t v597;
  void *v598;
  uint64_t v599;
  uint64_t v600;
  int64_t v601;
  int v602;
  unint64_t v603;
  int v604;
  llvm::Constant *v605;
  unint64_t v606;
  _QWORD *v607;
  uint64_t v608;
  llvm::Value **v609;
  const llvm::APInt *v610;
  _QWORD *v611;
  const void **v612;
  uint64_t v613;
  void *v614;
  uint64_t *v615;
  unint64_t v616;
  _QWORD *v617;
  uint64_t v618;
  llvm::Value **v619;
  char *v620;
  llvm::Value **v621;
  uint64_t v622;
  _QWORD *v623;
  uint64_t v624;
  llvm::Value *v625;
  _QWORD *v626;
  llvm::Value *v627;
  llvm::Type ***v628;
  uint64_t *v629;
  uint64_t v630;
  llvm::Type ***v631;
  uint64_t v632;
  uint64_t v633;
  _QWORD *v634;
  llvm::Value *v635;
  llvm::Type *v636;
  llvm::Type *v637;
  int v638;
  void *v639;
  unsigned int v640;
  void *v641;
  unsigned int v642;
  llvm::Value *v643;
  uint64_t *v644;
  void *v645;
  unsigned int v646;
  void *v647;
  unsigned int v648;
  void *v649;
  int v650;
  llvm::Type **v651;
  unsigned __int8 **v652;
  llvm **v653;
  llvm::Type **v654;
  __int16 v655;
  llvm::ConstantInt ***v656;
  const void **v657;
  const void **v658;
  unsigned __int8 *v659;
  unsigned __int8 *v660;
  unsigned __int8 *v661;
  unsigned __int8 *v662;
  llvm::Type *v663;
  llvm *v664;
  __int128 v665;
  __int128 v666;
  __int128 v667;
  llvm::Type **v668;
  unsigned __int8 **v669;
  llvm::Type *v670;
  llvm::Type **v671;
  uint64_t v672;

  v6 = a2;
  v672 = *MEMORY[0x1E0C80C00];
  v9 = (uint64_t *)(a2 - 64);
  v8 = *(llvm **)(a2 - 64);
  v10 = *(llvm::Constant **)(a2 - 32);
  v667 = *(_OWORD *)(a1 + 120);
  v665 = *(_OWORD *)(a1 + 88);
  v666 = *(_OWORD *)(a1 + 104);
  *(_QWORD *)&v667 = v6;
  v11 = (uint64_t)sub_1C4E65634(v8, v10, (uint64_t)&v665, 3, a5, a6);
  if (v11)
    goto LABEL_2;
  if ((sub_1C577D620(a1, (llvm::Instruction *)v6) & 1) != 0)
    return (llvm::Value *)v6;
  Not = sub_1C57826B8(a1, (unsigned __int8 *)v6);
  if (!Not)
  {
    Not = (uint64_t)sub_1C578171C(a1, v6);
    if (!Not)
    {
      if (sub_1C584C4C4(a1, (llvm::UndefValue *)v6))
        return (llvm::Value *)v6;
      v16 = *(uint64_t **)(a1 + 24);
      v17 = *(_QWORD *)(v6 - 64);
      v18 = *(_QWORD *)(v6 - 32);
      v669 = 0;
      v664 = 0;
      v19 = *(_QWORD *)(v17 + 8);
      if (v19 && !*(_QWORD *)(v19 + 8) || (v20 = *(_QWORD *)(v18 + 8)) != 0 && !*(_QWORD *)(v20 + 8))
      {
        v21 = *(unsigned __int8 *)(v17 + 16);
        if (v21 == 5)
        {
          if (*(_WORD *)(v17 + 18) != 28)
            goto LABEL_25;
          v24 = (unsigned __int8 ***)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
          v22 = *v24;
          if (!*v24)
            goto LABEL_25;
          v669 = *v24;
          v23 = (llvm *)v24[4];
          if (!v23)
            goto LABEL_25;
        }
        else
        {
          if (v21 != 56)
            goto LABEL_25;
          v22 = *(unsigned __int8 ***)(v17 - 64);
          if (!v22)
            goto LABEL_25;
          v669 = *(unsigned __int8 ***)(v17 - 64);
          v23 = *(llvm **)(v17 - 32);
          if (!v23)
            goto LABEL_25;
        }
        v664 = v23;
        *(_QWORD *)&v665 = v22;
        *((_QWORD *)&v665 + 1) = v23;
        if (sub_1C4E77280(&v665, 30, v18))
        {
          LOWORD(v667) = 257;
          v25 = (uint64_t)sub_1C506EC1C(v16, v669, (uint64_t)v664, (uint64_t)&v665);
          goto LABEL_39;
        }
      }
LABEL_25:
      v26 = *(_QWORD *)(v17 + 8);
      if (v26 && !*(_QWORD *)(v26 + 8) || (v27 = *(_QWORD *)(v18 + 8)) != 0 && !*(_QWORD *)(v27 + 8))
      {
        v28 = *(unsigned __int8 *)(v17 + 16);
        if (v28 != 5)
        {
          if (v28 != 58)
            goto LABEL_41;
          v29 = *(unsigned __int8 ***)(v17 - 64);
          if (!v29)
            goto LABEL_41;
          v669 = *(unsigned __int8 ***)(v17 - 64);
          v30 = *(llvm **)(v17 - 32);
          if (!v30)
            goto LABEL_41;
          goto LABEL_37;
        }
        if (*(_WORD *)(v17 + 18) == 30)
        {
          v31 = (unsigned __int8 ***)(v17 - 32 * (*(_DWORD *)(v17 + 20) & 0x7FFFFFF));
          v29 = *v31;
          if (*v31)
          {
            v669 = *v31;
            v30 = (llvm *)v31[4];
            if (v30)
            {
LABEL_37:
              v664 = v30;
              *(_QWORD *)&v665 = v29;
              *((_QWORD *)&v665 + 1) = v30;
              if (!sub_1C4E77280(&v665, 30, v18))
                goto LABEL_41;
              LOWORD(v667) = 257;
              v25 = sub_1C4D89BCC((uint64_t)v16, v669, (uint64_t)v664, (uint64_t)&v665);
LABEL_39:
              v655 = 257;
              Not = (uint64_t)llvm::BinaryOperator::CreateNot(v25, (llvm::Type *)&v651, 0);
              if (Not)
                return (llvm::Value *)Not;
              goto LABEL_110;
            }
          }
        }
      }
LABEL_41:
      *(_QWORD *)&v665 = &v669;
      *((_QWORD *)&v665 + 1) = &v664;
      if (!sub_1C4E74064((_QWORD **)&v665, 28, v17))
        goto LABEL_110;
      v32 = v669;
      v651 = (llvm::Type **)v669;
      v653 = (llvm **)v664;
      v33 = *(unsigned __int8 *)(v18 + 16);
      if (v33 != 5)
      {
        if (v33 != 56)
          goto LABEL_110;
        v34 = (llvm ***)(v18 - 64);
        v35 = *(_QWORD *)(v18 - 64);
        v36 = *(unsigned __int8 *)(v35 + 16);
        if (v36 != 5)
        {
          if (v36 != 58)
            goto LABEL_72;
          if (v669 != *(unsigned __int8 ***)(v35 - 64))
          {
LABEL_49:
            if (v32 != *(unsigned __int8 ***)(v35 - 32)
              || (sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v35 - 64)) & 1) == 0)
            {
              goto LABEL_72;
            }
            goto LABEL_71;
          }
          if ((sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v35 - 32)) & 1) == 0)
          {
            v32 = (unsigned __int8 **)v651;
            goto LABEL_49;
          }
LABEL_71:
          if (v653 == *(llvm ***)(v18 - 32))
            goto LABEL_131;
LABEL_72:
          v46 = *(_QWORD *)(v18 - 32);
          v47 = *(unsigned __int8 *)(v46 + 16);
          if (v47 == 5)
          {
            if (*(_WORD *)(v46 + 18) == 30)
            {
              v49 = *(_DWORD *)(v46 + 20) & 0x7FFFFFF;
              v50 = v46 - 32 * v49;
              v51 = v651;
              if (v651 == *(llvm::Type ***)v50)
              {
                if ((sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)(v50 + 32)) & 1) != 0)
                  goto LABEL_109;
                v51 = v651;
                v52 = -(uint64_t)(*(_DWORD *)(v46 + 20) & 0x7FFFFFF);
              }
              else
              {
                v52 = -v49;
              }
              v53 = v46 + 32 * v52;
              if (v51 != *(llvm::Type ***)(v53 + 32)
                || (sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)v53) & 1) == 0)
              {
                goto LABEL_110;
              }
LABEL_109:
              if (v653 != *v34)
                goto LABEL_110;
LABEL_131:
              v73 = v669;
              v74 = (llvm::Value **)v664;
              LOWORD(v667) = 257;
LABEL_132:
              v75 = (char *)operator new(0x80uLL);
              *((_QWORD *)v75 + 5) = 0;
              v76 = (llvm::Value **)(v75 + 40);
              *((_QWORD *)v75 + 6) = 0;
              *((_QWORD *)v75 + 8) = *v73;
              Not = (uint64_t)(v75 + 64);
              *((_QWORD *)v75 + 3) = v75 + 64;
              *((_QWORD *)v75 + 7) = v75 + 64;
              *((_QWORD *)v75 + 9) = 0;
              v77 = 58;
LABEL_133:
              v75[80] = v77;
              v75[81] = 0;
              *((_WORD *)v75 + 41) = 0;
              *((_DWORD *)v75 + 21) = 2;
              *(_OWORD *)(v75 + 88) = 0u;
              *(_OWORD *)(v75 + 104) = 0u;
              *((_DWORD *)v75 + 30) = 0;
              *(_QWORD *)v75 = v73;
              v80 = v73[1];
              v79 = v73 + 1;
              v78 = v80;
              *((_QWORD *)v75 + 1) = v80;
              if (v80)
                *((_QWORD *)v78 + 2) = v75 + 8;
              *((_QWORD *)v75 + 2) = v79;
              *v79 = v75;
              goto LABEL_136;
            }
          }
          else if (v47 == 58)
          {
            v48 = v651;
            if (v651 == *(llvm::Type ***)(v46 - 64))
            {
              if ((sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v46 - 32)) & 1) != 0)
                goto LABEL_109;
              v48 = v651;
            }
            if (v48 != *(llvm::Type ***)(v46 - 32)
              || (sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v46 - 64)) & 1) == 0)
            {
              goto LABEL_110;
            }
            goto LABEL_109;
          }
LABEL_110:
          Not = (uint64_t)sub_1C57AD31C(v6, *(uint64_t **)(a1 + 24));
          if (Not)
            return (llvm::Value *)Not;
          v11 = (uint64_t)sub_1C577ECF0(a1, (unsigned __int8 *)v6);
          if (v11)
            goto LABEL_2;
          v11 = sub_1C57ADFE0(v6, *(uint64_t **)(a1 + 24));
          if (v11)
            goto LABEL_2;
          v63 = *(_QWORD *)(v6 - 64);
          v64 = *(_QWORD *)(v6 - 32);
          v65 = *(llvm::Type **)v6;
          v66 = *(_DWORD *)(*(_QWORD *)v6 + 8);
          if ((v66 & 0xFE) == 0x12)
            v66 = *(_DWORD *)(**((_QWORD **)v65 + 2) + 8);
          if (v66 == 269)
          {
            if (*(_BYTE *)(v63 + 16) == 85)
            {
              if (v63)
              {
                Not = (uint64_t)sub_1C583A138(a1, *(llvm **)(v6 - 32), *(_QWORD *)(v6 - 64), 0);
                if (Not)
                  return (llvm::Value *)Not;
              }
            }
            if (*(_BYTE *)(v64 + 16) == 85)
            {
              if (v64)
              {
                Not = (uint64_t)sub_1C583A138(a1, (llvm *)v63, v64, 0);
                if (Not)
                  return (llvm::Value *)Not;
              }
            }
          }
          Not = sub_1C5781CD4(a1, (_BYTE *)v6);
          if (Not)
            return (llvm::Value *)Not;
          *(_QWORD *)&v665 = &v666;
          *((_QWORD *)&v665 + 1) = 0x400000000;
          v67 = llvm::recognizeBSwapOrBitReverseIdiom((_QWORD **)v6, 1, 1, (uint64_t)&v665);
          v68 = (__int128 *)v665;
          if (!v67)
          {
            Not = 0;
            goto LABEL_125;
          }
          v637 = v65;
          Not = *(_QWORD *)(v665 + 8 * DWORD2(v665) - 8);
          --DWORD2(v665);
          llvm::SymbolTableListTraits<llvm::Instruction>::removeNodeFromList(*(_QWORD *)(Not + 40) + 40, (uint64_t ***)Not);
          v305 = *(_QWORD *)(Not + 24);
          v306 = *(_QWORD **)(Not + 32);
          *v306 = v305;
          *(_QWORD *)(v305 + 8) = v306;
          *(_QWORD *)(Not + 24) = 0;
          *(_QWORD *)(Not + 32) = 0;
          v631 = (llvm::Type ***)v665;
          if (!DWORD2(v665))
          {
            v68 = (__int128 *)v665;
LABEL_1015:
            v65 = v637;
LABEL_125:
            if (v68 == &v666)
            {
              if (Not)
                return (llvm::Value *)Not;
            }
            else
            {
              free(v68);
              if (Not)
                return (llvm::Value *)Not;
            }
            v636 = v65;
            v69 = *(llvm::Type **)v6;
            if ((*(_DWORD *)(*(_QWORD *)v6 + 8) & 0xFE) == 0x12)
              v69 = (llvm::Type *)**((_QWORD **)v69 + 2);
            PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v69);
            v71 = *(_DWORD *)(v6 + 20);
            if ((v71 & 0x40000000) != 0)
              v72 = *(uint64_t **)(v6 - 8);
            else
              v72 = (uint64_t *)(v6 - 32 * (v71 & 0x7FFFFFF));
            v85 = *v72;
            if (!*v72)
              goto LABEL_162;
            v86 = *(unsigned __int8 *)(v85 + 16);
            if (v86 < 0x1C || v86 - 59 < 0xFFFFFFEE)
              goto LABEL_162;
            v88 = (v71 & 0x40000000) != 0 ? *(_QWORD *)(v6 - 8) : v6 - 32 * (v71 & 0x7FFFFFF);
            v89 = *(_QWORD *)(v88 + 32);
            if (!v89)
              goto LABEL_162;
            v90 = *(unsigned __int8 *)(v89 + 16);
            if (v90 < 0x1C)
              goto LABEL_162;
            if (v90 - 59 < 0xFFFFFFEE)
              goto LABEL_162;
            v663 = 0;
            v664 = 0;
            v661 = 0;
            v662 = 0;
            *(_QWORD *)&v665 = &v664;
            *((_QWORD *)&v665 + 1) = &v662;
            v91 = *(_QWORD *)(v85 + 8);
            if (!v91)
              goto LABEL_162;
            if (*(_QWORD *)(v91 + 8))
              goto LABEL_162;
            if (!sub_1C57BE11C((_QWORD **)&v665, v85))
              goto LABEL_162;
            v651 = &v663;
            v652 = &v661;
            v92 = *(_QWORD *)(v89 + 8);
            if (!v92)
              goto LABEL_162;
            if (*(_QWORD *)(v92 + 8))
              goto LABEL_162;
            if (!sub_1C57BE11C(&v651, v89))
              goto LABEL_162;
            v93 = *(unsigned __int8 *)(v85 + 16);
            if (v93 == *(unsigned __int8 *)(v89 + 16))
              goto LABEL_162;
            v199 = v661;
            v200 = v662;
            if (v93 == 54)
            {
              v201 = v663;
              v663 = v664;
              v664 = v201;
              v661 = v662;
              v662 = v199;
              v202 = v200;
            }
            else
            {
              v202 = v661;
              v199 = v662;
            }
            v651 = (llvm::Type **)a1;
            v652 = (unsigned __int8 **)v6;
            v653 = &v664;
            v654 = &v663;
            v203 = sub_1C57BD678((uint64_t)&v651, v199, (uint64_t)v202, PrimitiveSizeInBits);
            if (v203)
            {
              v204 = v203;
              v205 = 148;
            }
            else
            {
              v206 = sub_1C57BD678((uint64_t)&v651, v661, (uint64_t)v662, PrimitiveSizeInBits);
              if (!v206)
              {
LABEL_162:
                v94 = *(_DWORD *)(v6 + 20);
                if ((v94 & 0x40000000) != 0)
                  v95 = *(uint64_t **)(v6 - 8);
                else
                  v95 = (uint64_t *)(v6 - 32 * (v94 & 0x7FFFFFF));
                v630 = *(_QWORD *)(a1 + 24);
                v96 = *v95;
                v97 = v95[4];
                v664 = *(llvm **)v6;
                v98 = v664;
                if ((*((_DWORD *)v664 + 2) & 0xFE) == 0x12)
                  v98 = (llvm::Type *)**((_QWORD **)v664 + 2);
                v99 = llvm::Type::getPrimitiveSizeInBits(v98);
                if ((v99 & 1) != 0)
                  goto LABEL_179;
                v100 = v99 >> 1;
                LODWORD(v644) = v99 >> 1;
                v101 = *(unsigned __int8 *)(v96 + 16);
                v102 = v101 == 67 ? v97 : v96;
                v103 = v101 == 67 ? v96 : v97;
                v662 = 0;
                v663 = 0;
                v660 = 0;
                v661 = 0;
                v651 = &v663;
                v104 = *(_QWORD *)(v103 + 8);
                if (!v104)
                  goto LABEL_179;
                if (*(_QWORD *)(v104 + 8))
                  goto LABEL_179;
                if (!sub_1C4B0378C(&v651, v103))
                  goto LABEL_179;
                *(_QWORD *)&v665 = &v662;
                *((_QWORD *)&v665 + 1) = &v660;
                *(_QWORD *)&v666 = 0;
                v105 = *(_QWORD *)(v102 + 8);
                if (!v105 || *(_QWORD *)(v105 + 8))
                  goto LABEL_179;
                v157 = *(unsigned __int8 *)(v102 + 16);
                if (v157 == 5)
                {
                  if (*(_WORD *)(v102 + 18) != 25)
                    goto LABEL_179;
                  v190 = v102 - 32 * (*(_DWORD *)(v102 + 20) & 0x7FFFFFF);
                  if (!*(_QWORD *)v190)
                    goto LABEL_179;
                  v662 = *(unsigned __int8 **)v190;
                  if (!sub_1C4D8A004((uint64_t)&v665 + 8, *(llvm::Constant **)(v190 + 32)))
                    goto LABEL_179;
                }
                else
                {
                  if (v157 != 53)
                    goto LABEL_179;
                  if (!*(_QWORD *)(v102 - 64))
                    goto LABEL_179;
                  v662 = *(unsigned __int8 **)(v102 - 64);
                  if ((sub_1C4D89F84((uint64_t)&v665 + 8, *(unsigned __int8 **)(v102 - 32)) & 1) == 0)
                    goto LABEL_179;
                }
                v669 = &v661;
                v191 = *((_QWORD *)v662 + 1);
                if (!v191 || *(_QWORD *)(v191 + 8) || (sub_1C4B0378C(&v669, (uint64_t)v662) & 1) == 0)
                  goto LABEL_179;
                v192 = v660;
                v193 = *((_DWORD *)v660 + 2);
                if (v193 >= 0x41)
                {
                  if (v193 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)v660) > 0x40)
                    goto LABEL_179;
                  v192 = *(unsigned __int8 **)v192;
                }
                if (*(_QWORD *)v192 != v100)
                  goto LABEL_179;
                v194 = v663;
                v195 = *(_QWORD *)v663;
                if (*(_QWORD *)v663 != *(_QWORD *)v661)
                  goto LABEL_179;
                if ((*(_DWORD *)(v195 + 8) & 0xFE) == 0x12)
                  v195 = **(_QWORD **)(v195 + 16);
                if ((_DWORD)v100 != llvm::Type::getPrimitiveSizeInBits((llvm::Type *)v195))
                {
LABEL_179:
                  v669 = 0;
                  v663 = 0;
                  v664 = 0;
                  *(_QWORD *)&v665 = &v669;
                  *((_QWORD *)&v665 + 1) = &v663;
                  *(_QWORD *)&v666 = 0;
                  *((_QWORD *)&v666 + 1) = &v664;
                  v106 = *(unsigned __int8 *)(v6 + 16);
                  if (v106 == 57)
                  {
                    v107 = *v9;
                    v108 = *(_QWORD *)(*v9 + 8);
                    if (!v108 || *(_QWORD *)(v108 + 8))
                      goto LABEL_182;
                    v129 = *(unsigned __int8 *)(v107 + 16);
                    if (v129 == 5)
                    {
                      if (*(_WORD *)(v107 + 18) != 30)
                        goto LABEL_182;
                      if (!*(_QWORD *)(v107 - 32 * (*(_DWORD *)(v107 + 20) & 0x7FFFFFF)))
                        goto LABEL_182;
                      v669 = *(unsigned __int8 ***)(v107 - 32 * (*(_DWORD *)(v107 + 20) & 0x7FFFFFF));
                      if (!sub_1C4D8A004((uint64_t)&v665 + 8, *(llvm::Constant **)(v107 - 32 * (*(_DWORD *)(v107 + 20) & 0x7FFFFFF) + 32)))goto LABEL_182;
                    }
                    else
                    {
                      if (v129 != 58)
                        goto LABEL_182;
                      if (!*(_QWORD *)(v107 - 64))
                        goto LABEL_182;
                      v669 = *(unsigned __int8 ***)(v107 - 64);
                      if ((sub_1C4D89F84((uint64_t)&v665 + 8, *(unsigned __int8 **)(v107 - 32)) & 1) == 0)
                        goto LABEL_182;
                    }
                    v147 = *(_QWORD *)(v6 - 32);
                    if (!v147)
                    {
LABEL_182:
                      v109 = *(_QWORD *)(v6 - 32);
                      v110 = *(_QWORD *)(v109 + 8);
                      if (!v110 || *(_QWORD *)(v110 + 8))
                        goto LABEL_195;
                      v111 = *(unsigned __int8 *)(v109 + 16);
                      if (v111 == 5)
                      {
                        if (*(_WORD *)(v109 + 18) != 30)
                          goto LABEL_195;
                        v152 = *(_QWORD *)(v109 - 32 * (*(_DWORD *)(v109 + 20) & 0x7FFFFFF));
                        if (!v152)
                          goto LABEL_195;
                        *(_QWORD *)v665 = v152;
                        if (!sub_1C4D8A004((uint64_t)&v665 + 8, *(llvm::Constant **)(v109- 32 * (*(_DWORD *)(v109 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_195;
                      }
                      else
                      {
                        if (v111 != 58)
                          goto LABEL_195;
                        v112 = *(_QWORD *)(v109 - 64);
                        if (!v112)
                          goto LABEL_195;
                        *(_QWORD *)v665 = v112;
                        if ((sub_1C4D89F84((uint64_t)&v665 + 8, *(unsigned __int8 **)(v109 - 32)) & 1) == 0)
                          goto LABEL_195;
                      }
                      v147 = *v9;
                      if (!*v9)
                        goto LABEL_195;
                    }
LABEL_287:
                    **((_QWORD **)&v666 + 1) = v147;
                    v155 = v663;
                    v156 = *((_DWORD *)v663 + 2);
                    if (!v156)
                      goto LABEL_195;
                    if (v156 > 0x40)
                    {
                      if (llvm::APInt::countTrailingOnesSlowCase(v663) == v156)
                        goto LABEL_195;
                    }
                    else if (*(_QWORD *)v663 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v156)
                    {
                      goto LABEL_195;
                    }
                    if (llvm::MaskedValueIsZero(v664, v155, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, (BOOL)v628))
                    {
                      v181 = *(_QWORD *)(a1 + 24);
                      LOWORD(v667) = 257;
                      v73 = (unsigned __int8 **)sub_1C4773594(v181, v669, (uint64_t)v664, (uint64_t)&v665);
                      v74 = llvm::ConstantInt::get((llvm::ConstantInt **)v636, v663, v182);
                      LOWORD(v667) = 257;
                      goto LABEL_132;
                    }
LABEL_195:
                    v117 = *(unsigned __int8 *)(v6 + 16);
                    if (v117 != 5)
                    {
                      if (v117 != 57)
                        goto LABEL_206;
                      v118 = *v9;
                      v119 = *(_QWORD *)(*v9 + 8);
                      if (!v119 || *(_QWORD *)(v119 + 8))
                        goto LABEL_199;
                      v133 = *(unsigned __int8 *)(v118 + 16);
                      if (v133 == 5)
                      {
                        if (*(_WORD *)(v118 + 18) != 17)
                          goto LABEL_199;
                        v153 = (unsigned __int8 ***)(v118 - 32 * (*(_DWORD *)(v118 + 20) & 0x7FFFFFF));
                        v134 = *v153;
                        if (!*v153)
                          goto LABEL_199;
                        v669 = *v153;
                        v135 = (llvm *)v153[4];
                        if (!v135)
                          goto LABEL_199;
                      }
                      else if (v133 != 45
                             || (v134 = *(unsigned __int8 ***)(v118 - 64)) == 0
                             || (v669 = *(unsigned __int8 ***)(v118 - 64), (v135 = *(llvm **)(v118 - 32)) == 0))
                      {
LABEL_199:
                        v120 = *(_QWORD *)(v6 - 32);
                        goto LABEL_204;
                      }
                      v664 = v135;
                      if (v134 == *(unsigned __int8 ***)(v6 - 32))
                        goto LABEL_300;
                      goto LABEL_199;
                    }
                    if (*(_WORD *)(v6 + 18) != 29)
                      goto LABEL_206;
                    v121 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                    v118 = *v121;
                    v122 = *(_QWORD *)(*v121 + 8);
                    if (!v122 || *(_QWORD *)(v122 + 8))
                    {
LABEL_203:
                      v120 = v121[4];
LABEL_204:
                      v123 = *(_QWORD *)(v120 + 8);
                      if (!v123 || *(_QWORD *)(v123 + 8))
                        goto LABEL_206;
                      v130 = *(unsigned __int8 *)(v120 + 16);
                      if (v130 == 5)
                      {
                        if (*(_WORD *)(v120 + 18) != 17)
                          goto LABEL_206;
                        v151 = (unsigned __int8 ***)(v120 - 32 * (*(_DWORD *)(v120 + 20) & 0x7FFFFFF));
                        v131 = *v151;
                        if (!*v151)
                          goto LABEL_206;
                        v669 = *v151;
                        v132 = (llvm *)v151[4];
                        if (!v132)
                          goto LABEL_206;
                      }
                      else
                      {
                        if (v130 != 45)
                          goto LABEL_206;
                        v131 = *(unsigned __int8 ***)(v120 - 64);
                        if (!v131)
                          goto LABEL_206;
                        v669 = *(unsigned __int8 ***)(v120 - 64);
                        v132 = *(llvm **)(v120 - 32);
                        if (!v132)
                          goto LABEL_206;
                      }
                      v664 = v132;
                      if (v131 != (unsigned __int8 **)v118)
                        goto LABEL_206;
LABEL_300:
                      if (llvm::haveNoCommonBitsSet((llvm *)v63, (const llvm::Value *)v64, *(void ***)(a1 + 80), 0, 0, 0, (const llvm::DominatorTree *)1))
                      {
                        v159 = *(_QWORD *)(a1 + 24);
                        v160 = v664;
                        v161 = llvm::ConstantInt::get(v636, 1, 0);
                        v655 = 257;
                        v162 = (*(uint64_t (**)(_QWORD, llvm *, llvm::Value **, _QWORD, _QWORD))(**(_QWORD **)(v159 + 72) + 16))(*(_QWORD *)(v159 + 72), v160, v161, 0, 0);
                        if (!v162)
                        {
                          LOWORD(v667) = 257;
                          v163 = (char *)operator new(0x80uLL);
                          *((_QWORD *)v163 + 5) = 0;
                          v164 = (llvm::Value **)(v163 + 40);
                          *((_QWORD *)v163 + 6) = 0;
                          *((_QWORD *)v163 + 8) = *(_QWORD *)v160;
                          v165 = (uint64_t)(v163 + 64);
                          *((_QWORD *)v163 + 3) = v163 + 64;
                          *((_QWORD *)v163 + 7) = v163 + 64;
                          *((_QWORD *)v163 + 9) = 0;
                          v163[80] = 41;
                          v163[81] = 0;
                          *((_WORD *)v163 + 41) = 0;
                          *((_DWORD *)v163 + 21) = 2;
                          *(_OWORD *)(v163 + 88) = 0u;
                          *(_OWORD *)(v163 + 104) = 0u;
                          *((_DWORD *)v163 + 30) = 0;
                          *(_QWORD *)v163 = v160;
                          v168 = *((_QWORD *)v160 + 1);
                          v167 = (_QWORD *)((char *)v160 + 8);
                          v166 = v168;
                          *((_QWORD *)v163 + 1) = v168;
                          if (v168)
                            *(_QWORD *)(v166 + 16) = v163 + 8;
                          *((_QWORD *)v163 + 2) = v167;
                          *v167 = v163;
                          *((_QWORD *)v163 + 4) = v161;
                          if (v161)
                          {
                            v171 = v161[1];
                            v170 = v161 + 1;
                            v169 = v171;
                            *v164 = v171;
                            if (v171)
                              *((_QWORD *)v169 + 2) = v164;
                            *((_QWORD *)v163 + 6) = v170;
                            *v170 = v163 + 32;
                          }
                          llvm::Value::setName((uint64_t ***)v163 + 8, (uint64_t)&v665);
                          v162 = sub_1C4773754((uint64_t *)v159, v165, (uint64_t)&v651);
                        }
                        v172 = v669;
                        LOWORD(v667) = 257;
                        v173 = (char *)operator new(0x80uLL);
                        *((_QWORD *)v173 + 5) = 0;
                        v174 = v173 + 40;
                        *((_QWORD *)v173 + 6) = 0;
                        *((_QWORD *)v173 + 8) = *v172;
                        Not = (uint64_t)(v173 + 64);
                        *((_QWORD *)v173 + 3) = v173 + 64;
                        *((_QWORD *)v173 + 7) = v173 + 64;
                        *((_QWORD *)v173 + 9) = 0;
                        v173[80] = 45;
                        v173[81] = 0;
                        *((_WORD *)v173 + 41) = 0;
                        *((_DWORD *)v173 + 21) = 2;
                        *(_OWORD *)(v173 + 88) = 0u;
                        *(_OWORD *)(v173 + 104) = 0u;
                        *((_DWORD *)v173 + 30) = 0;
                        *(_QWORD *)v173 = v172;
                        v177 = v172[1];
                        v176 = v172 + 1;
                        v175 = v177;
                        *((_QWORD *)v173 + 1) = v177;
                        if (v177)
                          *((_QWORD *)v175 + 2) = v173 + 8;
                        *((_QWORD *)v173 + 2) = v176;
                        *v176 = v173;
                        *((_QWORD *)v173 + 4) = v162;
                        if (v162)
                        {
                          v180 = *(_QWORD *)(v162 + 8);
                          v179 = (_QWORD *)(v162 + 8);
                          v178 = v180;
                          *v174 = v180;
                          if (v180)
                            *(_QWORD *)(v178 + 16) = v174;
                          *((_QWORD *)v173 + 6) = v179;
                          *v179 = v173 + 32;
                        }
                        goto LABEL_140;
                      }
LABEL_206:
                      v661 = 0;
                      v662 = 0;
                      v659 = 0;
                      v660 = 0;
                      v124 = *(unsigned __int8 *)(v63 + 16);
                      if (v124 == 5)
                      {
                        if (*(_WORD *)(v63 + 18) != 28)
                          goto LABEL_558;
                        v126 = (unsigned __int8 **)(v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF));
                        if (!*v126)
                          goto LABEL_558;
                        v662 = *v126;
                        v125 = v126[4];
                        if (!v125)
                          goto LABEL_558;
                      }
                      else
                      {
                        if (v124 != 56)
                          goto LABEL_554;
                        if (!*(_QWORD *)(v63 - 64))
                          goto LABEL_558;
                        v662 = *(unsigned __int8 **)(v63 - 64);
                        v125 = *(unsigned __int8 **)(v63 - 32);
                        if (!v125)
                          goto LABEL_558;
                      }
                      v660 = v125;
                      v127 = *(unsigned __int8 *)(v64 + 16);
                      if (v127 == 5)
                      {
                        if (*(_WORD *)(v64 + 18) != 28)
                          goto LABEL_558;
                        v136 = (unsigned __int8 **)(v64 - 32 * (*(_DWORD *)(v64 + 20) & 0x7FFFFFF));
                        if (!*v136)
                          goto LABEL_558;
                        v661 = *v136;
                        v128 = v136[4];
                        if (!v128)
                          goto LABEL_558;
                      }
                      else
                      {
                        if (v127 != 56)
                          goto LABEL_558;
                        if (!*(_QWORD *)(v64 - 64))
                          goto LABEL_558;
                        v661 = *(unsigned __int8 **)(v64 - 64);
                        v128 = *(unsigned __int8 **)(v64 - 32);
                        if (!v128)
                          goto LABEL_558;
                      }
                      v658 = 0;
                      v659 = v128;
                      v657 = 0;
                      *(_QWORD *)&v665 = &v658;
                      *((_QWORD *)&v665 + 1) = 0;
                      if (!sub_1C4D89F84((uint64_t)&v665, v125))
                        goto LABEL_549;
                      v651 = (llvm::Type **)&v657;
                      v652 = 0;
                      if (!sub_1C4D89F84((uint64_t)&v651, v659))
                        goto LABEL_549;
                      v656 = 0;
                      v138 = v657;
                      v139 = (llvm::Type *)v658;
                      v140 = *((unsigned int *)v657 + 2);
                      v650 = v140;
                      if (v140 > 0x40)
                      {
                        v649 = (void *)operator new[]();
                        memcpy(v649, *v138, ((unint64_t)(v140 + 63) >> 3) & 0x3FFFFFF8);
                        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v649);
                        LODWORD(v140) = v650;
                        v143 = v649;
                      }
                      else
                      {
                        v141 = ~(unint64_t)*v657;
                        if ((_DWORD)v140)
                          v142 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v140;
                        else
                          v142 = 0;
                        v143 = (const void *)(v142 & v141);
                        v649 = (void *)(v142 & v141);
                      }
                      v650 = 0;
                      v183 = *((unsigned int *)v139 + 2);
                      if (v183 > 0x40)
                        v184 = memcmp(*(const void **)v139, v143, ((unint64_t)(v183 + 63) >> 3) & 0x3FFFFFF8) == 0;
                      else
                        v184 = *(_QWORD *)v139 == (_QWORD)v143;
                      v185 = v184;
                      if (v140 >= 0x41 && v143)
                        MEMORY[0x1CAA32F9C](v143, 0x1000C8000313F17);
                      if (!v185)
                      {
LABEL_412:
                        v235 = v658;
                        v236 = *((unsigned int *)v658 + 2);
                        if (v236 >= 0x41)
                        {
                          v237 = (char *)operator new[]();
                          memcpy(v237, *v235, ((unint64_t)(v236 + 63) >> 3) & 0x3FFFFFF8);
                          v238 = 0;
                          v239 = (char *)*v657;
                          v240 = (unint64_t)(v236 + 63) >> 6;
                          do
                          {
                            *(_QWORD *)&v237[v238] &= *(_QWORD *)&v239[v238];
                            v238 += 8;
                          }
                          while (8 * v240 != v238);
                          v241 = 0;
                          do
                          {
                            v242 = v240-- < 1;
                            if (v242)
                              break;
                            v243 = *(_QWORD *)&v237[8 * v240];
                            v241 += __clz(v243);
                          }
                          while (!v243);
                          v244 = v236 | 0xFFFFFFC0;
                          if ((v236 & 0x3F) == 0)
                            v244 = 0;
                          v245 = v241 + v244;
                          MEMORY[0x1CAA32F9C](v237, 0x1000C8000313F17);
                          if (v245 != (_DWORD)v236)
                            goto LABEL_549;
                        }
                        else if (((unint64_t)*v657 & (unint64_t)*v658) != 0)
                        {
                          goto LABEL_549;
                        }
                        v247 = v661;
                        v246 = (llvm::ConstantInt ***)v662;
                        v248 = v662[16];
                        if (v248 == 5)
                        {
                          if (*((_WORD *)v662 + 9) != 29)
                            goto LABEL_462;
                          v249 = (llvm **)&v662[-32 * (*((_DWORD *)v662 + 5) & 0x7FFFFFF)];
                          v250 = *v249;
                          if (!*v249)
                          {
                            v251 = (unsigned __int8 *)v249[4];
                            goto LABEL_445;
                          }
                          v656 = (llvm::ConstantInt ***)*v249;
                          v251 = (unsigned __int8 *)v249[4];
                        }
                        else
                        {
                          if (v248 != 57)
                            goto LABEL_462;
                          v249 = (llvm **)(v662 - 64);
                          v250 = (llvm *)*((_QWORD *)v662 - 8);
                          if (!v250)
                          {
                            v251 = (unsigned __int8 *)*((_QWORD *)v662 - 4);
                            goto LABEL_445;
                          }
                          v656 = (llvm::ConstantInt ***)*((_QWORD *)v662 - 8);
                          v251 = (unsigned __int8 *)*((_QWORD *)v662 - 4);
                        }
                        if (v661 == v251)
                        {
LABEL_447:
                          v262 = v658;
                          v263 = *((unsigned int *)v658 + 2);
                          v648 = v263;
                          if (v263 > 0x40)
                          {
                            v266 = ((unint64_t)(v263 + 63) >> 3) & 0x3FFFFFF8;
                            v647 = (void *)operator new[]();
                            memcpy(v647, *v262, v266);
                            llvm::APInt::flipAllBitsSlowCase((uint64_t)&v647);
                            LODWORD(v263) = v648;
                            v265 = v647;
                          }
                          else
                          {
                            v264 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v263;
                            if (!(_DWORD)v263)
                              v264 = 0;
                            v265 = (void *)(v264 & ~(unint64_t)*v658);
                            v647 = v265;
                          }
                          DWORD2(v665) = v263;
                          *(_QWORD *)&v665 = v265;
                          v648 = 0;
                          IsZero = llvm::MaskedValueIsZero(v250, (const llvm::Value *)&v665, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, (BOOL)v628);
                          if (DWORD2(v665) >= 0x41 && (_QWORD)v665)
                            MEMORY[0x1CAA32F9C](v665, 0x1000C8000313F17);
                          if (v648 >= 0x41 && v647)
                            MEMORY[0x1CAA32F9C](v647, 0x1000C8000313F17);
                          if (IsZero)
                          {
                            v269 = v658;
                            v270 = *((unsigned int *)v658 + 2);
                            if (v270 > 0x40)
                            {
                              v271 = (void *)operator new[]();
                              memcpy(v271, *v269, ((unint64_t)(v270 + 63) >> 3) & 0x3FFFFFF8);
                              v290 = (uint64_t *)*v657;
                              v291 = (unint64_t)(v270 + 63) >> 6;
                              v292 = v271;
                              do
                              {
                                v293 = *v290++;
                                *v292++ |= v293;
                                --v291;
                              }
                              while (v291);
                            }
                            else
                            {
                              v271 = (void *)((unint64_t)*v657 | (unint64_t)*v658);
                            }
                            DWORD2(v665) = v270;
                            *(_QWORD *)&v665 = v271;
                            v74 = llvm::ConstantInt::get((llvm::ConstantInt **)v636, (llvm::Type *)&v665, v267);
                            if (DWORD2(v665) >= 0x41 && (_QWORD)v665)
                              MEMORY[0x1CAA32F9C](v665, 0x1000C8000313F17);
                            v73 = (unsigned __int8 **)v662;
LABEL_517:
                            LOWORD(v667) = 257;
                            v75 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v75 + 5) = 0;
                            v76 = (llvm::Value **)(v75 + 40);
                            *((_QWORD *)v75 + 6) = 0;
                            *((_QWORD *)v75 + 8) = *v73;
                            Not = (uint64_t)(v75 + 64);
                            *((_QWORD *)v75 + 3) = v75 + 64;
                            *((_QWORD *)v75 + 7) = v75 + 64;
                            *((_QWORD *)v75 + 9) = 0;
                            v77 = 56;
                            goto LABEL_133;
                          }
                          v247 = v661;
                          v246 = (llvm::ConstantInt ***)v662;
LABEL_462:
                          v272 = v247[16];
                          if (v272 == 5)
                          {
                            if (*((_WORD *)v247 + 9) != 29)
                              goto LABEL_490;
                            v273 = &v247[-32 * (*((_DWORD *)v247 + 5) & 0x7FFFFFF)];
                            v274 = *(llvm **)v273;
                            if (!*(_QWORD *)v273)
                            {
                              v275 = (llvm::ConstantInt ***)*((_QWORD *)v273 + 4);
                              goto LABEL_473;
                            }
                            v656 = *(llvm::ConstantInt ****)v273;
                            v275 = (llvm::ConstantInt ***)*((_QWORD *)v273 + 4);
                          }
                          else
                          {
                            if (v272 != 57)
                              goto LABEL_490;
                            v273 = v247 - 64;
                            v274 = (llvm *)*((_QWORD *)v247 - 8);
                            if (!v274)
                            {
                              v275 = (llvm::ConstantInt ***)*((_QWORD *)v247 - 4);
                              goto LABEL_473;
                            }
                            v656 = (llvm::ConstantInt ***)*((_QWORD *)v247 - 8);
                            v275 = (llvm::ConstantInt ***)*((_QWORD *)v247 - 4);
                          }
                          if (v246 == v275)
                          {
LABEL_475:
                            v276 = v657;
                            v277 = *((unsigned int *)v657 + 2);
                            v646 = v277;
                            if (v277 > 0x40)
                            {
                              v280 = ((unint64_t)(v277 + 63) >> 3) & 0x3FFFFFF8;
                              v645 = (void *)operator new[]();
                              memcpy(v645, *v276, v280);
                              llvm::APInt::flipAllBitsSlowCase((uint64_t)&v645);
                              LODWORD(v277) = v646;
                              v279 = v645;
                            }
                            else
                            {
                              v278 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v277;
                              if (!(_DWORD)v277)
                                v278 = 0;
                              v279 = (void *)(v278 & ~(unint64_t)*v657);
                              v645 = v279;
                            }
                            DWORD2(v665) = v277;
                            *(_QWORD *)&v665 = v279;
                            v646 = 0;
                            v282 = llvm::MaskedValueIsZero(v274, (const llvm::Value *)&v665, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)v6, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, (BOOL)v628);
                            if (DWORD2(v665) >= 0x41 && (_QWORD)v665)
                              MEMORY[0x1CAA32F9C](v665, 0x1000C8000313F17);
                            if (v646 >= 0x41 && v645)
                              MEMORY[0x1CAA32F9C](v645, 0x1000C8000313F17);
                            if (v282)
                            {
                              v283 = v658;
                              v284 = *((unsigned int *)v658 + 2);
                              if (v284 > 0x40)
                              {
                                v285 = (void *)operator new[]();
                                memcpy(v285, *v283, ((unint64_t)(v284 + 63) >> 3) & 0x3FFFFFF8);
                                v294 = (uint64_t *)*v657;
                                v295 = (unint64_t)(v284 + 63) >> 6;
                                v296 = v285;
                                do
                                {
                                  v297 = *v294++;
                                  *v296++ |= v297;
                                  --v295;
                                }
                                while (v295);
                              }
                              else
                              {
                                v285 = (void *)((unint64_t)*v657 | (unint64_t)*v658);
                              }
                              DWORD2(v665) = v284;
                              *(_QWORD *)&v665 = v285;
                              v74 = llvm::ConstantInt::get((llvm::ConstantInt **)v636, (llvm::Type *)&v665, v281);
                              if (DWORD2(v665) >= 0x41 && (_QWORD)v665)
                                MEMORY[0x1CAA32F9C](v665, 0x1000C8000313F17);
                              v73 = (unsigned __int8 **)v661;
                              goto LABEL_517;
                            }
                            v246 = (llvm::ConstantInt ***)v662;
LABEL_490:
                            v643 = 0;
                            v644 = 0;
                            *(_QWORD *)&v665 = &v656;
                            *((_QWORD *)&v665 + 1) = &v644;
                            *(_QWORD *)&v666 = 0;
                            v286 = *((unsigned __int8 *)v246 + 16);
                            if (v286 == 5)
                            {
                              if (*((_WORD *)v246 + 9) != 29)
                                goto LABEL_549;
                              v287 = (llvm::ConstantInt ****)&v246[-4 * (*((_DWORD *)v246 + 5) & 0x7FFFFFF)];
                              if (!*v287)
                                goto LABEL_549;
                              v656 = *v287;
                              if ((sub_1C4D8A004((uint64_t)&v665 + 8, (llvm::Constant *)v287[4]) & 1) == 0)
                                goto LABEL_549;
                            }
                            else
                            {
                              if (v286 != 57)
                                goto LABEL_549;
                              if (!*(v246 - 8))
                                goto LABEL_549;
                              v656 = (llvm::ConstantInt ***)*(v246 - 8);
                              if (!sub_1C4D89F84((uint64_t)&v665 + 8, (unsigned __int8 *)*(v246 - 4)))
                                goto LABEL_549;
                            }
                            v651 = (llvm::Type **)v656;
                            v652 = (unsigned __int8 **)&v643;
                            v653 = 0;
                            v288 = v661[16];
                            if (v288 == 5)
                            {
                              if (*((_WORD *)v661 + 9) != 29)
                                goto LABEL_549;
                              v298 = &v661[-32 * (*((_DWORD *)v661 + 5) & 0x7FFFFFF)];
                              if (v656 != *(llvm::ConstantInt ****)v298
                                || !sub_1C4D8A004((uint64_t)&v652, *((llvm::Constant **)v298 + 4)))
                              {
                                goto LABEL_549;
                              }
                            }
                            else if (v288 != 57
                                   || v656 != *((llvm::ConstantInt ****)v661 - 8)
                                   || (sub_1C4D89F84((uint64_t)&v652, *((unsigned __int8 **)v661 - 4)) & 1) == 0)
                            {
                              goto LABEL_549;
                            }
                            v299 = v644;
                            v300 = v658;
                            v301 = *((unsigned int *)v658 + 2);
                            v642 = v301;
                            if (v301 > 0x40)
                            {
                              v641 = (void *)operator new[]();
                              memcpy(v641, *v300, ((unint64_t)(v301 + 63) >> 3) & 0x3FFFFFF8);
                              llvm::APInt::flipAllBitsSlowCase((uint64_t)&v641);
                              v301 = v642;
                              v304 = (unint64_t)v641;
                              v642 = 0;
                              if (v301 >= 0x41)
                              {
                                v580 = 0;
                                v581 = *v299;
                                v582 = (unint64_t)(v301 + 63) >> 6;
                                do
                                {
                                  *(_QWORD *)(v304 + v580) &= *(_QWORD *)(v581 + v580);
                                  v580 += 8;
                                }
                                while (8 * v582 != v580);
                                v583 = 0;
                                do
                                {
                                  v242 = v582-- < 1;
                                  if (v242)
                                    break;
                                  v584 = *(_QWORD *)(v304 + 8 * v582);
                                  v583 += __clz(v584);
                                }
                                while (!v584);
                                v585 = v301 | 0xFFFFFFC0;
                                if ((v301 & 0x3F) == 0)
                                  v585 = 0;
                                if (v583 + v585 != (_DWORD)v301)
                                {
                                  if (v304)
                                    MEMORY[0x1CAA32F9C](v304, 0x1000C8000313F17);
                                  goto LABEL_549;
                                }
                                goto LABEL_1039;
                              }
                            }
                            else
                            {
                              v302 = ~(unint64_t)*v658;
                              if ((_DWORD)v301)
                                v303 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v301;
                              else
                                v303 = 0;
                              v304 = v303 & v302;
                              v641 = (void *)(v303 & v302);
                              v642 = 0;
                            }
                            if ((*v299 & v304) != 0)
                              goto LABEL_549;
                            v304 = 0;
LABEL_1039:
                            v635 = v643;
                            v586 = v657;
                            v587 = *((unsigned int *)v657 + 2);
                            v640 = v587;
                            if (v587 > 0x40)
                            {
                              v591 = ((unint64_t)(v587 + 63) >> 3) & 0x3FFFFFF8;
                              v639 = (void *)operator new[]();
                              memcpy(v639, *v586, v591);
                              llvm::APInt::flipAllBitsSlowCase((uint64_t)&v639);
                              v592 = v640;
                              v590 = (unint64_t)v639;
                              v640 = 0;
                              if (v592 >= 0x41)
                              {
                                v599 = 0;
                                v600 = *(_QWORD *)v635;
                                v601 = (unint64_t)(v592 + 63) >> 6;
                                do
                                {
                                  *(_QWORD *)(v590 + v599) &= *(_QWORD *)(v600 + v599);
                                  v599 += 8;
                                }
                                while (8 * v601 != v599);
                                v602 = 0;
                                do
                                {
                                  v242 = v601-- < 1;
                                  if (v242)
                                    break;
                                  v603 = *(_QWORD *)(v590 + 8 * v601);
                                  v602 += __clz(v603);
                                }
                                while (!v603);
                                v604 = v592 | 0xFFFFFFC0;
                                if ((v592 & 0x3F) == 0)
                                  v604 = 0;
                                v593 = v602 + v604 == v592;
                                if (v590)
                                  MEMORY[0x1CAA32F9C](v590, 0x1000C8000313F17);
LABEL_1049:
                                if (v301 >= 0x41 && v304)
                                {
                                  MEMORY[0x1CAA32F9C](v304, 0x1000C8000313F17);
                                  if (v593)
                                    goto LABEL_1054;
                                }
                                else if (v593)
                                {
LABEL_1054:
                                  v594 = *(_QWORD *)(a1 + 24);
                                  v595 = v656;
                                  v596 = (const void **)v644;
                                  v597 = *((unsigned int *)v644 + 2);
                                  if (v597 > 0x40)
                                  {
                                    v598 = (void *)operator new[]();
                                    memcpy(v598, *v596, ((unint64_t)(v597 + 63) >> 3) & 0x3FFFFFF8);
                                    v605 = *(llvm::Constant **)v643;
                                    v606 = (unint64_t)(v597 + 63) >> 6;
                                    v607 = v598;
                                    do
                                    {
                                      v608 = *(_QWORD *)v605;
                                      v605 = (llvm::Constant *)((char *)v605 + 8);
                                      *v607++ |= v608;
                                      --v606;
                                    }
                                    while (v606);
                                  }
                                  else
                                  {
                                    v598 = (void *)(*(_QWORD *)v643 | *v644);
                                  }
                                  LODWORD(v652) = v597;
                                  v651 = (llvm::Type **)v598;
                                  *(_QWORD *)&v665 = "bitfield";
                                  LOWORD(v667) = 259;
                                  v609 = llvm::ConstantInt::get(*v595, (llvm::Type *)&v651, v289);
                                  v611 = (_QWORD *)sub_1C4773594(v594, v595, (uint64_t)v609, (uint64_t)&v665);
                                  if (v652 >= 0x41 && v651)
                                    MEMORY[0x1CAA32F9C](v651, 0x1000C8000313F17);
                                  v612 = v658;
                                  v613 = *((unsigned int *)v658 + 2);
                                  if (v613 > 0x40)
                                  {
                                    v614 = (void *)operator new[]();
                                    memcpy(v614, *v612, ((unint64_t)(v613 + 63) >> 3) & 0x3FFFFFF8);
                                    v615 = (uint64_t *)*v657;
                                    v616 = (unint64_t)(v613 + 63) >> 6;
                                    v617 = v614;
                                    do
                                    {
                                      v618 = *v615++;
                                      *v617++ |= v618;
                                      --v616;
                                    }
                                    while (v616);
                                  }
                                  else
                                  {
                                    v614 = (void *)((unint64_t)*v657 | (unint64_t)*v658);
                                  }
                                  DWORD2(v665) = v613;
                                  *(_QWORD *)&v665 = v614;
                                  v619 = llvm::ConstantInt::get((llvm::ConstantInt **)v636, (llvm::Type *)&v665, v610);
                                  if (DWORD2(v665) >= 0x41 && (_QWORD)v665)
                                    MEMORY[0x1CAA32F9C](v665, 0x1000C8000313F17);
                                  LOWORD(v667) = 257;
                                  v620 = (char *)operator new(0x80uLL);
                                  *((_QWORD *)v620 + 5) = 0;
                                  v621 = (llvm::Value **)(v620 + 40);
                                  *((_QWORD *)v620 + 6) = 0;
                                  *((_QWORD *)v620 + 8) = *v611;
                                  Not = (uint64_t)(v620 + 64);
                                  *((_QWORD *)v620 + 3) = v620 + 64;
                                  *((_QWORD *)v620 + 7) = v620 + 64;
                                  *((_QWORD *)v620 + 9) = 0;
                                  v620[80] = 56;
                                  v620[81] = 0;
                                  *((_WORD *)v620 + 41) = 0;
                                  *((_DWORD *)v620 + 21) = 2;
                                  *(_OWORD *)(v620 + 88) = 0u;
                                  *(_OWORD *)(v620 + 104) = 0u;
                                  *((_DWORD *)v620 + 30) = 0;
                                  *(_QWORD *)v620 = v611;
                                  v624 = v611[1];
                                  v623 = v611 + 1;
                                  v622 = v624;
                                  *((_QWORD *)v620 + 1) = v624;
                                  if (v624)
                                    *(_QWORD *)(v622 + 16) = v620 + 8;
                                  *((_QWORD *)v620 + 2) = v623;
                                  *v623 = v620;
                                  *((_QWORD *)v620 + 4) = v619;
                                  if (v619)
                                  {
                                    v627 = v619[1];
                                    v626 = v619 + 1;
                                    v625 = v627;
                                    *v621 = v627;
                                    if (v627)
                                      *((_QWORD *)v625 + 2) = v621;
                                    *((_QWORD *)v620 + 6) = v626;
                                    *v626 = v620 + 32;
                                  }
                                  goto LABEL_140;
                                }
LABEL_549:
                                v323 = *(_QWORD *)(v63 + 8);
                                if (v323 && !*(_QWORD *)(v323 + 8)
                                  || (v324 = *(_QWORD *)(v64 + 8)) != 0 && !*(_QWORD *)(v324 + 8))
                                {
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v662, v660, (llvm::ConstantExpr *)v661, v659);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v662, v660, (llvm::ConstantExpr *)v659, v661);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v660, v662, (llvm::ConstantExpr *)v661, v659);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v660, v662, (llvm::ConstantExpr *)v659, v661);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v661, v659, (llvm::ConstantExpr *)v662, v660);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v661, v659, (llvm::ConstantExpr *)v660, v662);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v659, v661, (llvm::ConstantExpr *)v662, v660);
                                  if (v11)
                                    goto LABEL_2;
                                  v11 = (uint64_t)sub_1C57AEC28((_QWORD *)a1, (uint64_t)v659, v661, (llvm::ConstantExpr *)v660, v662);
                                  if (v11)
                                    goto LABEL_2;
                                }
                                v124 = *(unsigned __int8 *)(v63 + 16);
LABEL_554:
                                if (v124 == 58)
                                {
                                  v325 = *(unsigned __int8 **)(v63 - 64);
                                  if (!v325)
                                    goto LABEL_566;
                                  v662 = *(unsigned __int8 **)(v63 - 64);
                                  v326 = *(unsigned __int8 **)(v63 - 32);
                                  if (!v326)
                                    goto LABEL_566;
                                  goto LABEL_562;
                                }
LABEL_558:
                                if (v124 != 5)
                                  goto LABEL_566;
                                if (*(_WORD *)(v63 + 18) != 30)
                                  goto LABEL_566;
                                v327 = (unsigned __int8 **)(v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF));
                                v325 = *v327;
                                if (!*v327)
                                  goto LABEL_566;
                                v662 = *v327;
                                v326 = v327[4];
                                if (!v326)
                                  goto LABEL_566;
LABEL_562:
                                v661 = v326;
                                *(_QWORD *)&v665 = v326;
                                *((_QWORD *)&v665 + 1) = &v660;
                                *(_QWORD *)&v666 = v325;
                                if (sub_1C57BEEBC((uint64_t)&v665, v64))
                                {
                                  v74 = (llvm::Value **)v660;
                                  LOWORD(v667) = 257;
                                  v75 = (char *)operator new(0x80uLL);
                                  *((_QWORD *)v75 + 5) = 0;
                                  v76 = (llvm::Value **)(v75 + 40);
                                  *((_QWORD *)v75 + 6) = 0;
                                  *((_QWORD *)v75 + 8) = *(_QWORD *)v63;
                                  Not = (uint64_t)(v75 + 64);
                                  *((_QWORD *)v75 + 3) = v75 + 64;
                                  *((_QWORD *)v75 + 7) = v75 + 64;
                                  *((_QWORD *)v75 + 9) = 0;
                                  v75[80] = 57;
                                  v75[81] = 0;
                                  *((_WORD *)v75 + 41) = 0;
                                  *((_DWORD *)v75 + 21) = 2;
                                  *(_OWORD *)(v75 + 88) = 0u;
                                  *(_OWORD *)(v75 + 104) = 0u;
                                  *((_DWORD *)v75 + 30) = 0;
                                  *(_QWORD *)v75 = v63;
                                  v330 = *(_QWORD *)(v63 + 8);
                                  v329 = (_QWORD *)(v63 + 8);
                                  v328 = v330;
                                  *((_QWORD *)v75 + 1) = v330;
                                  if (v330)
                                    *(_QWORD *)(v328 + 16) = v75 + 8;
                                  *((_QWORD *)v75 + 2) = v329;
                                  *v329 = v75;
LABEL_136:
                                  *((_QWORD *)v75 + 4) = v74;
                                  if (v74)
                                  {
                                    v83 = v74[1];
                                    v82 = v74 + 1;
                                    v81 = v83;
                                    *v76 = v83;
                                    if (v83)
                                      *((_QWORD *)v81 + 2) = v76;
                                    *((_QWORD *)v75 + 6) = v82;
                                    *v82 = v75 + 32;
                                  }
                                  goto LABEL_140;
                                }
LABEL_566:
                                *(_QWORD *)&v665 = &v662;
                                *((_QWORD *)&v665 + 1) = &v660;
                                *(_QWORD *)&v666 = &v661;
                                if (!sub_1C57BF018((_QWORD **)&v665, v63))
                                  goto LABEL_575;
                                v331 = *(unsigned __int8 *)(v64 + 16);
                                if (v331 == 5)
                                {
                                  if (*(_WORD *)(v64 + 18) != 30)
                                    goto LABEL_575;
                                  v333 = v64 - 32 * (*(_DWORD *)(v64 + 20) & 0x7FFFFFF);
                                  if (v661 != *(unsigned __int8 **)v333)
                                    goto LABEL_575;
                                  v332 = *(unsigned __int8 **)(v333 + 32);
                                }
                                else
                                {
                                  if (v331 != 58 || v661 != *(unsigned __int8 **)(v64 - 64))
                                    goto LABEL_575;
                                  v332 = *(unsigned __int8 **)(v64 - 32);
                                }
                                if (v662 == v332)
                                {
                                  v74 = (llvm::Value **)v660;
                                  LOWORD(v667) = 257;
                                  v75 = (char *)operator new(0x80uLL);
                                  *((_QWORD *)v75 + 5) = 0;
                                  v76 = (llvm::Value **)(v75 + 40);
                                  *((_QWORD *)v75 + 6) = 0;
                                  *((_QWORD *)v75 + 8) = *(_QWORD *)v64;
                                  Not = (uint64_t)(v75 + 64);
                                  *((_QWORD *)v75 + 3) = v75 + 64;
                                  *((_QWORD *)v75 + 7) = v75 + 64;
                                  *((_QWORD *)v75 + 9) = 0;
                                  v75[80] = 57;
                                  v75[81] = 0;
                                  *((_WORD *)v75 + 41) = 0;
                                  *((_DWORD *)v75 + 21) = 2;
                                  *(_OWORD *)(v75 + 88) = 0u;
                                  *(_OWORD *)(v75 + 104) = 0u;
                                  *((_DWORD *)v75 + 30) = 0;
                                  *(_QWORD *)v75 = v64;
                                  v365 = *(_QWORD *)(v64 + 8);
                                  v364 = (_QWORD *)(v64 + 8);
                                  v363 = v365;
                                  *((_QWORD *)v75 + 1) = v365;
                                  if (v365)
                                    *(_QWORD *)(v363 + 16) = v75 + 8;
                                  *((_QWORD *)v75 + 2) = v364;
                                  *v364 = v75;
                                  goto LABEL_136;
                                }
LABEL_575:
                                v334 = *(unsigned __int8 *)(v63 + 16);
                                if (v334 != 5)
                                {
                                  if (v334 != 56)
                                    goto LABEL_604;
                                  v335 = *(_QWORD *)(v63 - 64);
                                  v336 = *(unsigned __int8 *)(v335 + 16);
                                  if (v336 != 5)
                                  {
                                    if (v336 != 57)
                                      goto LABEL_604;
                                    if (v64 != *(_QWORD *)(v335 - 64))
                                      goto LABEL_604;
                                    v337 = *(unsigned __int8 **)(v335 - 32);
                                    if (!v337)
                                      goto LABEL_604;
                                    goto LABEL_591;
                                  }
                                  if (*(_WORD *)(v335 + 18) == 29)
                                  {
                                    v341 = (_QWORD *)(v335 - 32 * (*(_DWORD *)(v335 + 20) & 0x7FFFFFF));
                                    if (v64 == *v341)
                                    {
                                      v337 = (unsigned __int8 *)v341[4];
                                      if (v337)
                                      {
LABEL_591:
                                        v660 = v337;
                                        v342 = *(unsigned __int8 **)(v63 - 32);
                                        if (!v342)
                                          goto LABEL_604;
                                        goto LABEL_597;
                                      }
                                    }
                                  }
LABEL_604:
                                  Not = (uint64_t)sub_1C57AE190((uint64_t ***)v6, *(_QWORD *)(a1 + 24));
                                  if (Not)
                                    return (llvm::Value *)Not;
                                  v354 = *(unsigned __int8 *)(v63 + 16);
                                  if (v354 == 58
                                    || (v355 = v64, v632 = v63, v354 == 5)
                                    && (v355 = v64, v632 = v63, *(_WORD *)(v63 + 18) == 30))
                                  {
                                    v355 = v63;
                                    v632 = v64;
                                  }
                                  v356 = *(unsigned __int8 *)(v355 + 16);
                                  if (v356 == 5)
                                  {
                                    if (*(_WORD *)(v355 + 18) != 30)
                                      goto LABEL_689;
                                    v359 = v355 - 32 * (*(_DWORD *)(v355 + 20) & 0x7FFFFFF);
                                    v357 = *(unsigned __int8 **)v359;
                                    if (!*(_QWORD *)v359)
                                      goto LABEL_689;
                                    v662 = *(unsigned __int8 **)v359;
                                    v358 = *(unsigned __int8 **)(v359 + 32);
                                    if (!v358)
                                      goto LABEL_689;
                                  }
                                  else
                                  {
                                    if (v356 != 58)
                                      goto LABEL_689;
                                    v357 = *(unsigned __int8 **)(v355 - 64);
                                    if (!v357)
                                      goto LABEL_689;
                                    v662 = *(unsigned __int8 **)(v355 - 64);
                                    v358 = *(unsigned __int8 **)(v355 - 32);
                                    if (!v358)
                                      goto LABEL_689;
                                  }
                                  v661 = v358;
                                  if ((unsigned __int8 *)v632 == v358 || (unsigned __int8 *)v632 == v357)
                                    goto LABEL_655;
                                  v360 = *(unsigned __int8 *)(v632 + 16);
                                  if (v360 == 5)
                                  {
                                    if (*(_WORD *)(v632 + 18) != 28)
                                      goto LABEL_643;
                                    v366 = (unsigned __int8 **)(v632 - 32 * (*(_DWORD *)(v632 + 20) & 0x7FFFFFF));
                                    if (v357 == *v366 && v358 == v366[4])
                                      goto LABEL_655;
                                    if (v358 != *v366)
                                      goto LABEL_643;
                                    v362 = v366[4];
                                  }
                                  else
                                  {
                                    if (v360 != 56)
                                      goto LABEL_643;
                                    v361 = *(unsigned __int8 **)(v632 - 64);
                                    if (v357 == v361 && v358 == *(unsigned __int8 **)(v632 - 32))
                                      goto LABEL_655;
                                    if (v358 != v361)
                                      goto LABEL_643;
                                    v362 = *(unsigned __int8 **)(v632 - 32);
                                  }
                                  if (v357 != v362)
                                  {
LABEL_643:
                                    v367 = *(_QWORD *)(v632 + 8);
                                    v629 = (uint64_t *)(v632 + 8);
                                    if (!v367 || *(_QWORD *)(v367 + 8))
                                    {
                                      v368 = *(_QWORD *)(v355 + 8);
                                      if (!v368 || *(_QWORD *)(v368 + 8))
                                        goto LABEL_685;
                                    }
                                    *(_QWORD *)&v665 = v357;
                                    if (v360 == 5)
                                    {
                                      if (*(_WORD *)(v632 + 18) == 30)
                                      {
                                        v376 = *(_DWORD *)(v632 + 20) & 0x7FFFFFF;
                                        v377 = v632 - 32 * v376;
                                        if (v357 == *(unsigned __int8 **)v377)
                                        {
                                          if ((sub_1C4D9EED4((uint64_t)&v665 + 8, *(llvm::Constant **)(v377 + 32)) & 1) != 0)
                                            goto LABEL_684;
                                          v357 = (unsigned __int8 *)v665;
                                          v378 = -(uint64_t)(*(_DWORD *)(v632 + 20) & 0x7FFFFFF);
                                        }
                                        else
                                        {
                                          v378 = -v376;
                                        }
                                        v379 = v632 + 32 * v378;
                                        if (v357 == *(unsigned __int8 **)(v379 + 32)
                                          && (sub_1C4D9EED4((uint64_t)&v665 + 8, *(llvm::Constant **)v379) & 1) != 0)
                                        {
                                          goto LABEL_684;
                                        }
                                      }
                                    }
                                    else
                                    {
                                      if (v360 != 58)
                                      {
LABEL_669:
                                        v651 = (llvm::Type **)v358;
                                        if (v360 != 5)
                                        {
                                          if (v360 != 58)
                                            goto LABEL_685;
                                          if (v358 == *(unsigned __int8 **)(v632 - 64))
                                          {
                                            if ((sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v632 - 32)) & 1) != 0)
                                              goto LABEL_684;
                                            v358 = (unsigned __int8 *)v651;
                                          }
                                          if (v358 != *(unsigned __int8 **)(v632 - 32)
                                            || (sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v632 - 64)) & 1) == 0)
                                          {
                                            goto LABEL_685;
                                          }
LABEL_684:
                                          v384 = *(_QWORD *)(a1 + 24);
                                          LOWORD(v667) = 257;
                                          v385 = sub_1C4D89BCC(v384, v662, (uint64_t)v661, (uint64_t)&v665);
                                          v655 = 257;
                                          return llvm::BinaryOperator::CreateNot(v385, (llvm::Type *)&v651, 0);
                                        }
                                        if (*(_WORD *)(v632 + 18) != 30)
                                          goto LABEL_685;
                                        v380 = *(_DWORD *)(v632 + 20) & 0x7FFFFFF;
                                        v381 = v632 - 32 * v380;
                                        if (v358 == *(unsigned __int8 **)v381)
                                        {
                                          if ((sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)(v381 + 32)) & 1) != 0)
                                            goto LABEL_684;
                                          v358 = (unsigned __int8 *)v651;
                                          v382 = -(uint64_t)(*(_DWORD *)(v632 + 20) & 0x7FFFFFF);
                                        }
                                        else
                                        {
                                          v382 = -v380;
                                        }
                                        v383 = v632 + 32 * v382;
                                        if (v358 == *(unsigned __int8 **)(v383 + 32)
                                          && (sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)v383) & 1) != 0)
                                        {
                                          goto LABEL_684;
                                        }
LABEL_685:
                                        v386 = *(_QWORD *)(v355 + 8);
                                        if (!v386 || *(_QWORD *)(v386 + 8))
                                        {
LABEL_687:
                                          v387 = *(_QWORD *)(v355 + 8);
                                          if (!v387 || *(_QWORD *)(v387 + 8))
                                            goto LABEL_689;
                                          v444 = v661;
                                          *(_QWORD *)&v665 = v632;
                                          v445 = v661[16];
                                          if (v445 == 5)
                                          {
                                            if (*((_WORD *)v661 + 9) == 30)
                                            {
                                              v479 = *((_DWORD *)v661 + 5) & 0x7FFFFFF;
                                              v480 = &v661[-32 * v479];
                                              if (v632 == *(_QWORD *)v480)
                                              {
                                                if ((sub_1C4D9EED4((uint64_t)&v665 + 8, *((llvm::Constant **)v480 + 4)) & 1) != 0)
                                                  goto LABEL_909;
                                                v482 = v665;
                                                v481 = -(uint64_t)(*((_DWORD *)v444 + 5) & 0x7FFFFFF);
                                              }
                                              else
                                              {
                                                v481 = -v479;
                                                v482 = v632;
                                              }
                                              v524 = &v444[32 * v481];
                                              if (v482 == *((_QWORD *)v524 + 4))
                                              {
                                                if (sub_1C4D9EED4((uint64_t)&v665 + 8, *(llvm::Constant **)v524))
                                                {
LABEL_909:
                                                  v514 = *(_QWORD *)(a1 + 24);
                                                  v515 = v662;
                                                  if ((v662[23] & 0x10) != 0)
                                                  {
                                                    v525 = ***(_QWORD ***)v662;
                                                    v517 = *(_QWORD *)(v525 + 152);
                                                    v518 = *(unsigned int *)(v525 + 168);
                                                    if ((_DWORD)v518)
                                                    {
                                                      LODWORD(v519) = (v518 - 1) & ((v662 >> 4) ^ (v662 >> 9));
                                                      v520 = v517 + 16 * v519;
                                                      v526 = *(unsigned __int8 **)v520;
                                                      if (*(unsigned __int8 **)v520 != v662)
                                                      {
                                                        v527 = 1;
                                                        while (v526 != (unsigned __int8 *)-4096)
                                                        {
                                                          v528 = v519 + v527++;
                                                          v519 = v528 & (v518 - 1);
                                                          v526 = *(unsigned __int8 **)(v517 + 16 * v519);
                                                          if (v526 == v662)
                                                            goto LABEL_915;
                                                        }
                                                        goto LABEL_916;
                                                      }
LABEL_917:
                                                      v529 = *(_QWORD **)(v520 + 8);
                                                      v532 = *v529;
                                                      v530 = (char *)(v529 + 2);
                                                      v531 = v532;
LABEL_918:
                                                      LOWORD(v667) = 773;
                                                      *(_QWORD *)&v665 = v530;
                                                      *((_QWORD *)&v665 + 1) = v531;
                                                      *(_QWORD *)&v666 = ".not";
                                                      v533 = (_QWORD *)sub_1C506EAA0(v514, (uint64_t)v515, (uint64_t)&v665);
                                                      LOWORD(v667) = 257;
                                                      v452 = (char *)operator new(0x80uLL);
                                                      *((_QWORD *)v452 + 5) = 0;
                                                      v534 = (uint64_t *)(v452 + 40);
                                                      *((_QWORD *)v452 + 6) = 0;
                                                      *((_QWORD *)v452 + 8) = *v533;
                                                      Not = (uint64_t)(v452 + 64);
                                                      *((_QWORD *)v452 + 3) = v452 + 64;
                                                      *((_QWORD *)v452 + 7) = v452 + 64;
                                                      *((_QWORD *)v452 + 9) = 0;
                                                      v452[80] = 57;
                                                      v452[81] = 0;
                                                      *((_WORD *)v452 + 41) = 0;
                                                      *((_DWORD *)v452 + 21) = 2;
                                                      *(_OWORD *)(v452 + 88) = 0u;
                                                      *(_OWORD *)(v452 + 104) = 0u;
                                                      *((_DWORD *)v452 + 30) = 0;
                                                      *(_QWORD *)v452 = v533;
                                                      v537 = v533[1];
                                                      v536 = v533 + 1;
                                                      v535 = v537;
                                                      *((_QWORD *)v452 + 1) = v537;
                                                      if (v537)
                                                        *(_QWORD *)(v535 + 16) = v452 + 8;
                                                      *((_QWORD *)v452 + 2) = v536;
                                                      *v536 = v452;
                                                      *((_QWORD *)v452 + 4) = v632;
                                                      if (!v632)
                                                        goto LABEL_140;
                                                      v457 = v452 + 32;
                                                      v538 = *v629;
                                                      *v534 = *v629;
                                                      if (v538)
                                                        *(_QWORD *)(v538 + 16) = v534;
                                                      v459 = (_QWORD *)(v632 + 8);
LABEL_812:
                                                      *((_QWORD *)v452 + 6) = v459;
                                                      *v459 = v457;
LABEL_140:
                                                      v84 = (llvm::Type ***)&v665;
LABEL_141:
                                                      llvm::Value::setName((uint64_t ***)Not, (uint64_t)v84);
                                                      return (llvm::Value *)Not;
                                                    }
                                                    goto LABEL_916;
                                                  }
                                                  goto LABEL_973;
                                                }
                                              }
                                            }
                                          }
                                          else if (v445 == 58)
                                          {
                                            v446 = v632;
                                            if (v632 == *((_QWORD *)v661 - 8))
                                            {
                                              if ((sub_1C4D9ED34((uint64_t)&v665 + 8, *((llvm::Constant **)v661 - 4)) & 1) != 0)
                                                goto LABEL_909;
                                              v446 = v665;
                                            }
                                            if (v446 == *((_QWORD *)v444 - 4)
                                              && (sub_1C4D9ED34((uint64_t)&v665 + 8, *((llvm::Constant **)v444 - 8)) & 1) != 0)
                                            {
                                              goto LABEL_909;
                                            }
                                          }
LABEL_689:
                                          *(_QWORD *)&v665 = &v662;
                                          if (sub_1C4D9EC28((_QWORD **)&v665, 30, v355))
                                          {
                                            if (v662)
                                            {
                                              v388 = v662[16];
                                              if (v388 >= 0x1C && v388 - 59 >= 0xFFFFFFEE)
                                              {
                                                v389 = *((_QWORD *)v662 - 8);
                                                if (v632 == v389 || v632 == *((_QWORD *)v662 - 4))
                                                {
                                                  v390 = *(_QWORD *)(v355 + 8);
                                                  if (v390)
                                                  {
                                                    if (!*(_QWORD *)(v390 + 8) && v388 - 57 <= 1)
                                                    {
                                                      if (v632 == v389)
                                                        v389 = *((_QWORD *)v662 - 4);
                                                      v391 = *(_QWORD *)(a1 + 24);
                                                      if ((*(_BYTE *)(v389 + 23) & 0x10) == 0)
                                                      {
                                                        v449 = 0;
                                                        v448 = &byte_1C871356D;
                                                        goto LABEL_806;
                                                      }
                                                      v392 = ***(_QWORD ***)v389;
                                                      v393 = *(_QWORD *)(v392 + 152);
                                                      v394 = *(unsigned int *)(v392 + 168);
                                                      if ((_DWORD)v394)
                                                      {
                                                        LODWORD(v395) = (v394 - 1) & ((v389 >> 4) ^ (v389 >> 9));
                                                        v396 = (uint64_t *)(v393 + 16 * v395);
                                                        v397 = *v396;
                                                        if (*v396 == v389)
                                                        {
LABEL_805:
                                                          v447 = (_QWORD *)v396[1];
                                                          v450 = *v447;
                                                          v448 = (char *)(v447 + 2);
                                                          v449 = v450;
LABEL_806:
                                                          LOWORD(v667) = 773;
                                                          *(_QWORD *)&v665 = v448;
                                                          *((_QWORD *)&v665 + 1) = v449;
                                                          *(_QWORD *)&v666 = ".not";
                                                          v451 = (_QWORD *)sub_1C506EAA0(v391, v389, (uint64_t)&v665);
                                                          LOWORD(v667) = 257;
                                                          v452 = (char *)operator new(0x80uLL);
                                                          *((_QWORD *)v452 + 5) = 0;
                                                          v453 = v452 + 40;
                                                          *((_QWORD *)v452 + 6) = 0;
                                                          *((_QWORD *)v452 + 8) = *v451;
                                                          Not = (uint64_t)(v452 + 64);
                                                          *((_QWORD *)v452 + 3) = v452 + 64;
                                                          *((_QWORD *)v452 + 7) = v452 + 64;
                                                          *((_QWORD *)v452 + 9) = 0;
                                                          v452[80] = 57;
                                                          v452[81] = 0;
                                                          *((_WORD *)v452 + 41) = 0;
                                                          *((_DWORD *)v452 + 21) = 2;
                                                          *(_OWORD *)(v452 + 88) = 0u;
                                                          *(_OWORD *)(v452 + 104) = 0u;
                                                          *((_DWORD *)v452 + 30) = 0;
                                                          *(_QWORD *)v452 = v451;
                                                          v456 = v451[1];
                                                          v455 = v451 + 1;
                                                          v454 = v456;
                                                          *((_QWORD *)v452 + 1) = v456;
                                                          if (v456)
                                                            *(_QWORD *)(v454 + 16) = v452 + 8;
                                                          *((_QWORD *)v452 + 2) = v455;
                                                          *v455 = v452;
                                                          *((_QWORD *)v452 + 4) = v632;
                                                          if (!v632)
                                                            goto LABEL_140;
                                                          v457 = v452 + 32;
                                                          v458 = *(_QWORD *)(v632 + 8);
                                                          v634 = (_QWORD *)(v632 + 8);
                                                          *v453 = v458;
                                                          if (v458)
                                                            *(_QWORD *)(v458 + 16) = v453;
                                                          v459 = v634;
                                                          goto LABEL_812;
                                                        }
                                                        v398 = 1;
                                                        while (v397 != -4096)
                                                        {
                                                          v399 = v395 + v398++;
                                                          v395 = v399 & (v394 - 1);
                                                          v397 = *(_QWORD *)(v393 + 16 * v395);
                                                          if (v397 == v389)
                                                          {
                                                            v396 = (uint64_t *)(v393 + 16 * v395);
                                                            goto LABEL_805;
                                                          }
                                                        }
                                                      }
                                                      v396 = (uint64_t *)(v393 + 16 * v394);
                                                      goto LABEL_805;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                          if (*(_BYTE *)(v63 + 16) == 81)
                                            v400 = v63;
                                          else
                                            v400 = 0;
                                          if (*(_BYTE *)(v64 + 16) == 81)
                                            v401 = v64;
                                          else
                                            v401 = 0;
                                          if (v400 && v401)
                                          {
                                            v11 = sub_1C57A85E8(a1, v400, v401, (llvm::AssumptionCache *)v6);
                                            if (v11)
                                              goto LABEL_2;
                                          }
                                          else if (!v400)
                                          {
                                            goto LABEL_720;
                                          }
                                          v402 = *(_QWORD *)(v64 + 8);
                                          if (v402 && !*(_QWORD *)(v402 + 8))
                                          {
                                            v414 = *(unsigned __int8 *)(v64 + 16);
                                            if (v414 == 5)
                                            {
                                              if (*(_WORD *)(v64 + 18) != 29)
                                                goto LABEL_720;
                                              v419 = (uint64_t *)(v64 - 32 * (*(_DWORD *)(v64 + 20) & 0x7FFFFFF));
                                              v415 = *v419;
                                              if (!*v419)
                                                goto LABEL_720;
                                              v416 = v419[4];
                                            }
                                            else
                                            {
                                              if (v414 != 57)
                                                goto LABEL_720;
                                              v415 = *(_QWORD *)(v64 - 64);
                                              if (!v415)
                                                goto LABEL_720;
                                              v416 = *(_QWORD *)(v64 - 32);
                                            }
                                            v633 = v416;
                                            if (v416)
                                            {
                                              if (*(_BYTE *)(v415 + 16) == 81)
                                              {
                                                v420 = sub_1C57A85E8(a1, v400, v415, (llvm::AssumptionCache *)v6);
                                                if (v420)
                                                {
                                                  v421 = (_QWORD *)v420;
                                                  v422 = *(_QWORD *)(a1 + 24);
                                                  LOWORD(v667) = 257;
                                                  v423 = v633;
                                                  goto LABEL_803;
                                                }
                                              }
                                              if (*(_BYTE *)(v633 + 16) == 81)
                                              {
                                                v425 = sub_1C57A85E8(a1, v400, v633, (llvm::AssumptionCache *)v6);
                                                if (v425)
                                                {
LABEL_802:
                                                  v421 = (_QWORD *)v425;
                                                  v422 = *(_QWORD *)(a1 + 24);
                                                  LOWORD(v667) = 257;
                                                  v423 = v415;
                                                  goto LABEL_803;
                                                }
                                              }
                                            }
                                          }
LABEL_720:
                                          if (!v401 || (v403 = *(_QWORD *)(v63 + 8)) == 0 || *(_QWORD *)(v403 + 8))
                                          {
LABEL_723:
                                            v404 = *v9;
                                            if (!*v9
                                              || *(_BYTE *)(v404 + 16) != 82
                                              || (v405 = *(_QWORD *)(v6 - 32)) == 0
                                              || *(_BYTE *)(v405 + 16) != 82
                                              || (v11 = sub_1C57A7EF8(a1, v404, v405, 0, 0)) == 0)
                                            {
                                              Not = (uint64_t)sub_1C57AE58C(v6, *(_QWORD *)(a1 + 24));
                                              if (Not)
                                                return (llvm::Value *)Not;
                                              sub_1C57A8198(a1, (unsigned __int8 *)v6);
                                              Not = v406;
                                              if (v406)
                                                return (llvm::Value *)Not;
                                              Not = (uint64_t)sub_1C577FC5C(a1, v6);
                                              if (Not)
                                                return (llvm::Value *)Not;
                                              *(_QWORD *)&v665 = &v662;
                                              v407 = *(_QWORD *)(v63 + 8);
                                              if (v407
                                                && !*(_QWORD *)(v407 + 8)
                                                && sub_1C4B037F8((_QWORD **)&v665, v63))
                                              {
                                                v409 = (llvm::Type *)v662;
                                                v410 = *(_DWORD *)(*(_QWORD *)v662 + 8);
                                                if ((v410 & 0xFE) == 0x12)
                                                  v410 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v662 + 16) + 8);
                                                if (v410 == 269)
                                                {
                                                  AllOnesValue = (uint64_t *)llvm::Constant::getAllOnesValue(v636, v408);
                                                  LOWORD(v667) = 257;
                                                  v412 = v409;
                                                  v413 = (_QWORD *)v64;
                                                  return sub_1C4FC8748((uint64_t)v412, AllOnesValue, (uint64_t)v413, (uint64_t)&v665, 0, 0);
                                                }
                                              }
                                              *(_QWORD *)&v665 = &v662;
                                              v427 = *(_QWORD *)(v64 + 8);
                                              if (v427
                                                && !*(_QWORD *)(v427 + 8)
                                                && sub_1C4B037F8((_QWORD **)&v665, v64))
                                              {
                                                v429 = (llvm::Type *)v662;
                                                v430 = *(_DWORD *)(*(_QWORD *)v662 + 8);
                                                if ((v430 & 0xFE) == 0x12)
                                                  v430 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v662 + 16) + 8);
                                                if (v430 == 269)
                                                {
                                                  AllOnesValue = (uint64_t *)llvm::Constant::getAllOnesValue(v636, v428);
                                                  LOWORD(v667) = 257;
                                                  v412 = v429;
                                                  v413 = (_QWORD *)v63;
                                                  return sub_1C4FC8748((uint64_t)v412, AllOnesValue, (uint64_t)v413, (uint64_t)&v665, 0, 0);
                                                }
                                              }
                                              v431 = *(_QWORD *)(v63 + 8);
                                              if (!v431)
                                              {
LABEL_772:
                                                v651 = 0;
                                                v658 = 0;
                                                v432 = v636;
                                                if ((*((_DWORD *)v636 + 2) & 0xFE) == 0x12)
                                                  v432 = (llvm::Type *)**((_QWORD **)v636 + 2);
                                                v433 = llvm::Type::getPrimitiveSizeInBits(v432);
                                                *(_QWORD *)&v665 = &v658;
                                                *((_QWORD *)&v665 + 1) = &v651;
                                                DWORD2(v666) = 64;
                                                *(_QWORD *)&v666 = (v433 - 1);
                                                *(_QWORD *)&v667 = &v651;
                                                v434 = *(unsigned __int8 *)(v6 + 16);
                                                if (v434 != 5)
                                                {
                                                  if (v434 != 57)
                                                    goto LABEL_822;
                                                  v435 = *v9;
                                                  v436 = *(_QWORD *)(*v9 + 8);
                                                  if (!v436 || *(_QWORD *)(v436 + 8))
                                                  {
LABEL_778:
                                                    v437 = *(_QWORD *)(v6 - 32);
                                                    v438 = *(_QWORD *)(v437 + 8);
                                                    if (v438 && !*(_QWORD *)(v438 + 8))
                                                    {
                                                      v439 = *(unsigned __int8 *)(v437 + 16);
                                                      if (v439 == 5)
                                                      {
                                                        if (*(_WORD *)(v437 + 18) == 27
                                                          && sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v437- 32* (*(_DWORD *)(v437 + 20) & 0x7FFFFFF))))
                                                        {
                                                          v440 = sub_1C4D8A86C((llvm::APInt *)&v666, *(llvm::Constant **)(v437- 32* (*(_DWORD *)(v437 + 20) & 0x7FFFFFF)+ 32));
LABEL_961:
                                                          v554 = v9;
                                                          if (v440)
                                                            goto LABEL_972;
                                                        }
                                                      }
                                                      else if (v439 == 55
                                                             && sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v437 - 64)))
                                                      {
                                                        v440 = sub_1C4D8A7F0((llvm::APInt *)&v666, *(unsigned __int8 **)(v437 - 32));
                                                        goto LABEL_961;
                                                      }
                                                    }
LABEL_818:
                                                    v464 = 0;
LABEL_819:
                                                    if (DWORD2(v666) >= 0x41 && (_QWORD)v666)
                                                    {
                                                      MEMORY[0x1CAA32F9C](v666, 0x1000C8000313F17);
                                                      if (!v464)
                                                        goto LABEL_822;
                                                    }
                                                    else if (!v464)
                                                    {
LABEL_822:
                                                      Not = (uint64_t)sub_1C5791A5C(a1, v6);
                                                      if (Not)
                                                        return (llvm::Value *)Not;
                                                      v638 = 0;
                                                      v651 = 0;
                                                      v657 = 0;
                                                      v658 = 0;
                                                      v656 = 0;
                                                      *(_QWORD *)&v665 = &v656;
                                                      *((_QWORD *)&v665 + 1) = &v658;
                                                      *(_QWORD *)&v666 = &v638;
                                                      *((_QWORD *)&v666 + 1) = &v656;
                                                      *(_QWORD *)&v667 = &v651;
                                                      v668 = (llvm::Type **)&v657;
                                                      v465 = *(unsigned __int8 *)(v6 + 16);
                                                      if (v465 == 57)
                                                      {
                                                        v466 = *v9;
                                                        if (!*v9
                                                          || *(_BYTE *)(v466 + 16) != 92
                                                          || *(_DWORD *)(v466 + 72) != 1
                                                          || **(_DWORD **)(v466 + 64) != 1
                                                          || !*(_QWORD *)(v466 - 32)
                                                          || (v656 = *(llvm::ConstantInt ****)(v466 - 32),
                                                              **((_QWORD **)&v665 + 1) = v466,
                                                              v467 = *(_QWORD *)(v6 - 32),
                                                              v468 = sub_1C57BF53C((uint64_t)&v666, v467),
                                                              !v467)
                                                          || (v468 & 1) == 0)
                                                        {
                                                          v469 = *(_QWORD *)(v6 - 32);
                                                          if (!v469)
                                                            goto LABEL_880;
                                                          if (*(_BYTE *)(v469 + 16) != 92)
                                                            goto LABEL_880;
                                                          if (*(_DWORD *)(v469 + 72) != 1)
                                                            goto LABEL_880;
                                                          if (**(_DWORD **)(v469 + 64) != 1)
                                                            goto LABEL_880;
                                                          v470 = *(_QWORD *)(v469 - 32);
                                                          if (!v470)
                                                            goto LABEL_880;
                                                          *(_QWORD *)v665 = v470;
                                                          **((_QWORD **)&v665 + 1) = v469;
                                                          v467 = *v9;
                                                          v471 = sub_1C57BF53C((uint64_t)&v666, *v9);
                                                          if (!v467 || (v471 & 1) == 0)
                                                            goto LABEL_880;
                                                        }
                                                        goto LABEL_871;
                                                      }
                                                      if (v465 != 5 || *(_WORD *)(v6 + 18) != 29)
                                                        goto LABEL_880;
                                                      v485 = *(_DWORD *)(v6 + 20) & 0x7FFFFFF;
                                                      v486 = -v485;
                                                      v487 = *(_QWORD *)(v6 - 32 * v485);
                                                      if (v487
                                                        && *(_BYTE *)(v487 + 16) == 92
                                                        && *(_DWORD *)(v487 + 72) == 1
                                                        && **(_DWORD **)(v487 + 64) == 1
                                                        && *(_QWORD *)(v487 - 32))
                                                      {
                                                        v656 = *(llvm::ConstantInt ****)(v487 - 32);
                                                        **((_QWORD **)&v665 + 1) = v487;
                                                        v467 = *(_QWORD *)(v6
                                                                         - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)
                                                                         + 32);
                                                        v488 = sub_1C57BF53C((uint64_t)&v666, v467);
                                                        if (v467 && (v488 & 1) != 0)
                                                        {
LABEL_871:
                                                          *v668 = (llvm::Type *)v467;
                                                          v492 = v658[1];
                                                          if ((v492 && !v492[1]
                                                             || (v493 = v657[1]) != 0
                                                             && !v493[1]
                                                             && (v494 = v651[1]) != 0
                                                             && !*((_QWORD *)v494 + 1))
                                                            && v638 == 33)
                                                          {
                                                            v643 = 0;
                                                            v644 = 0;
                                                            LODWORD(v665) = 309;
                                                            *((_QWORD *)&v665 + 1) = 0;
                                                            *(_QWORD *)&v666 = &v644;
                                                            *((_QWORD *)&v666 + 1) = 1;
                                                            *(_QWORD *)&v667 = &v643;
                                                            if (sub_1C57A1C20((uint64_t)&v665, (uint64_t)v656))
                                                            {
                                                              v496 = *(_QWORD *)(a1 + 24);
                                                              v497 = v644;
                                                              LOWORD(v667) = 257;
                                                              NullValue = llvm::Constant::getNullValue((llvm::Constant *)*v644, v495);
                                                              v499 = (_QWORD *)sub_1C4774B48(v496, 33, (uint64_t)v497, (uint64_t)NullValue, (uint64_t)&v665);
                                                              v500 = *(_QWORD *)(a1 + 24);
                                                              v501 = v643;
                                                              LOWORD(v667) = 257;
                                                              v503 = llvm::Constant::getNullValue(*(llvm::Constant **)v643, v502);
                                                              v504 = sub_1C4774B48(v500, 33, (uint64_t)v501, (uint64_t)v503, (uint64_t)&v665);
                                                              LOWORD(v667) = 257;
                                                              v505 = (char *)operator new(0x80uLL);
                                                              *((_QWORD *)v505 + 5) = 0;
                                                              v506 = v505 + 40;
                                                              *((_QWORD *)v505 + 6) = 0;
                                                              *((_QWORD *)v505 + 8) = *v499;
                                                              v6 = (uint64_t)(v505 + 64);
                                                              *((_QWORD *)v505 + 3) = v505 + 64;
                                                              *((_QWORD *)v505 + 7) = v505 + 64;
                                                              *((_QWORD *)v505 + 9) = 0;
                                                              v507 = 56;
LABEL_1023:
                                                              v505[80] = v507;
                                                              v505[81] = 0;
                                                              *((_WORD *)v505 + 41) = 0;
                                                              *((_DWORD *)v505 + 21) = 2;
                                                              *(_OWORD *)(v505 + 88) = 0u;
                                                              *(_OWORD *)(v505 + 104) = 0u;
                                                              *((_DWORD *)v505 + 30) = 0;
                                                              *(_QWORD *)v505 = v499;
                                                              v576 = v499[1];
                                                              v575 = v499 + 1;
                                                              v574 = v576;
                                                              *((_QWORD *)v505 + 1) = v576;
                                                              if (v576)
                                                                *(_QWORD *)(v574 + 16) = v505 + 8;
                                                              *((_QWORD *)v505 + 2) = v575;
                                                              *v575 = v505;
                                                              *((_QWORD *)v505 + 4) = v504;
                                                              if (v504)
                                                              {
                                                                v579 = *(_QWORD *)(v504 + 8);
                                                                v578 = (_QWORD *)(v504 + 8);
                                                                v577 = v579;
                                                                *v506 = v579;
                                                                if (v579)
                                                                  *(_QWORD *)(v577 + 16) = v506;
                                                                *((_QWORD *)v505 + 6) = v578;
                                                                *v578 = v505 + 32;
                                                              }
                                                              llvm::Value::setName((uint64_t ***)v6, (uint64_t)&v665);
                                                              return (llvm::Value *)v6;
                                                            }
                                                          }
LABEL_880:
                                                          if ((sub_1C57AE84C(a1, (llvm::ValueAsMetadata *)v6) & 1) != 0)
                                                            return (llvm::Value *)v6;
                                                          *((_QWORD *)&v665 + 1) = &v669;
                                                          *(_QWORD *)&v667 = &v669;
                                                          v508 = *(unsigned __int8 *)(v6 + 16);
                                                          if (v508 != 5)
                                                          {
                                                            if (v508 != 57)
                                                              goto LABEL_1005;
                                                            if (sub_1C57BF5E8((uint64_t)&v665, 13, *v9))
                                                            {
                                                              v509 = *(_QWORD *)(v6 - 32);
                                                              v510 = *(unsigned __int8 *)(v509 + 16);
                                                              if (v510 == 5)
                                                              {
                                                                if (*(_WORD *)(v509 + 18) == 25
                                                                  && sub_1C4D89E3C((uint64_t)&v666 + 8, *(llvm::Constant **)(v509 - 32 * (*(_DWORD *)(v509 + 20) & 0x7FFFFFF))))
                                                                {
                                                                  v511 = *(_QWORD *)(v509
                                                                                   - 32
                                                                                   * (*(_DWORD *)(v509 + 20) & 0x7FFFFFF)
                                                                                   + 32);
LABEL_977:
                                                                  if (*(_QWORD *)v667 == v511)
                                                                    goto LABEL_994;
                                                                }
                                                              }
                                                              else if (v510 == 53
                                                                     && sub_1C4D89CC8((uint64_t)&v666 + 8, *(llvm::Constant **)(v509 - 64)))
                                                              {
                                                                v511 = *(_QWORD *)(v509 - 32);
                                                                goto LABEL_977;
                                                              }
                                                            }
                                                            if (!sub_1C57BF5E8((uint64_t)&v665, 13, *(_QWORD *)(v6 - 32)))goto LABEL_1005;
                                                            v555 = *v9;
                                                            goto LABEL_986;
                                                          }
                                                          if (*(_WORD *)(v6 + 18) != 29)
                                                            goto LABEL_1005;
                                                          if (sub_1C57BF5E8((uint64_t)&v665, 13, *(_QWORD *)(v6- 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF))))
                                                          {
                                                            v539 = *(_QWORD *)(v6
                                                                             - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)
                                                                             + 32);
                                                            v540 = *(unsigned __int8 *)(v539 + 16);
                                                            if (v540 == 5)
                                                            {
                                                              if (*(_WORD *)(v539 + 18) == 25
                                                                && sub_1C4D89E3C((uint64_t)&v666 + 8, *(llvm::Constant **)(v539 - 32 * (*(_DWORD *)(v539 + 20) & 0x7FFFFFF))))
                                                              {
                                                                v541 = *(_QWORD *)(v539
                                                                                 - 32
                                                                                 * (*(_DWORD *)(v539 + 20) & 0x7FFFFFF)
                                                                                 + 32);
LABEL_983:
                                                                if (*(_QWORD *)v667 == v541)
                                                                  goto LABEL_994;
                                                              }
                                                            }
                                                            else if (v540 == 53
                                                                   && sub_1C4D89CC8((uint64_t)&v666 + 8, *(llvm::Constant **)(v539 - 64)))
                                                            {
                                                              v541 = *(_QWORD *)(v539 - 32);
                                                              goto LABEL_983;
                                                            }
                                                          }
                                                          if (!sub_1C57BF5E8((uint64_t)&v665, 13, *(_QWORD *)(v6- 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)+ 32)))goto LABEL_1005;
                                                          v555 = *(_QWORD *)(v6
                                                                           - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
LABEL_986:
                                                          v556 = *(unsigned __int8 *)(v555 + 16);
                                                          if (v556 == 5)
                                                          {
                                                            if (*(_WORD *)(v555 + 18) != 25
                                                              || !sub_1C4D89E3C((uint64_t)&v666 + 8, *(llvm::Constant **)(v555 - 32 * (*(_DWORD *)(v555 + 20) & 0x7FFFFFF))))
                                                            {
                                                              goto LABEL_1005;
                                                            }
                                                            v557 = *(_QWORD *)(v555
                                                                             - 32
                                                                             * (*(_DWORD *)(v555 + 20) & 0x7FFFFFF)
                                                                             + 32);
                                                          }
                                                          else
                                                          {
                                                            if (v556 != 53
                                                              || !sub_1C4D89CC8((uint64_t)&v666 + 8, *(llvm::Constant **)(v555 - 64)))
                                                            {
                                                              goto LABEL_1005;
                                                            }
                                                            v557 = *(_QWORD *)(v555 - 32);
                                                          }
                                                          if (*(_QWORD *)v667 != v557)
                                                            goto LABEL_1005;
LABEL_994:
                                                          v558 = *(unsigned __int8 *)(v6 + 16);
                                                          if (v558 == 57)
                                                          {
                                                            v559 = *(_QWORD *)(*v9 + 8);
                                                            if (!v559 || *(_QWORD *)(v559 + 8))
                                                            {
                                                              v560 = *(_QWORD *)(v6 - 32);
LABEL_1003:
                                                              v563 = *(_QWORD *)(v560 + 8);
                                                              if (!v563 || *(_QWORD *)(v563 + 8))
                                                                goto LABEL_1005;
                                                              goto LABEL_1020;
                                                            }
                                                            goto LABEL_1020;
                                                          }
                                                          if (v558 == 5 && *(_WORD *)(v6 + 18) == 29)
                                                          {
                                                            v561 = (_QWORD *)(v6
                                                                            - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                                            v562 = *(_QWORD *)(*v561 + 8);
                                                            if (!v562 || *(_QWORD *)(v562 + 8))
                                                            {
                                                              v560 = v561[4];
                                                              goto LABEL_1003;
                                                            }
LABEL_1020:
                                                            v569 = *(_QWORD *)(a1 + 24);
                                                            v570 = v636;
                                                            if ((*((_DWORD *)v636 + 2) & 0xFE) == 0x12)
                                                              v570 = (llvm::Type *)**((_QWORD **)v636 + 2);
                                                            v571 = llvm::Type::getPrimitiveSizeInBits(v570);
                                                            v572 = llvm::ConstantInt::get(v636, (v571 - 1), 0);
                                                            LOWORD(v667) = 257;
                                                            v504 = sub_1C47733F8(v569, (uint64_t)v572, (uint64_t)v669, (uint64_t)&v665, 0, 0);
                                                            v499 = llvm::Constant::getAllOnesValue(v636, v573);
                                                            LOWORD(v667) = 257;
                                                            v505 = (char *)operator new(0x80uLL);
                                                            *((_QWORD *)v505 + 5) = 0;
                                                            v506 = v505 + 40;
                                                            *((_QWORD *)v505 + 6) = 0;
                                                            *((_QWORD *)v505 + 8) = *v499;
                                                            v6 = (uint64_t)(v505 + 64);
                                                            *((_QWORD *)v505 + 3) = v505 + 64;
                                                            *((_QWORD *)v505 + 7) = v505 + 64;
                                                            *((_QWORD *)v505 + 9) = 0;
                                                            v507 = 54;
                                                            goto LABEL_1023;
                                                          }
LABEL_1005:
                                                          v643 = 0;
                                                          v644 = 0;
                                                          *(_QWORD *)&v665 = 0;
                                                          v564 = (const llvm::Instruction *)*v9;
                                                          if (!*v9 || *((_BYTE *)v564 + 16) != 83)
                                                          {
                                                            v564 = *(const llvm::Instruction **)(v6 - 32);
                                                            if (!v564 || *((_BYTE *)v564 + 16) != 83)
                                                              return 0;
                                                          }
                                                          if ((llvm::matchSimpleRecurrence((uint64_t)v564, &v665, &v644, &v643) & 1) == 0)return 0;
                                                          if ((_QWORD)v665 != v6)
                                                            return 0;
                                                          v565 = v643;
                                                          if (!llvm::DominatorTree::dominates(*(llvm::DominatorTree **)(a1 + 72), v643, v564))return 0;
                                                          v566 = *(_QWORD *)(a1 + 24);
                                                          LOWORD(v667) = 257;
                                                          v567 = (llvm::Value *)sub_1C4773594(v566, v644, (uint64_t)v565, (uint64_t)&v665);
                                                          return (llvm::Value *)sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v567);
                                                        }
                                                        v486 = -(uint64_t)(*(_DWORD *)(v6 + 20) & 0x7FFFFFF);
                                                      }
                                                      v489 = *(_QWORD *)(v6 + 32 * v486 + 32);
                                                      if (!v489)
                                                        goto LABEL_880;
                                                      if (*(_BYTE *)(v489 + 16) != 92)
                                                        goto LABEL_880;
                                                      if (*(_DWORD *)(v489 + 72) != 1)
                                                        goto LABEL_880;
                                                      if (**(_DWORD **)(v489 + 64) != 1)
                                                        goto LABEL_880;
                                                      v490 = *(_QWORD *)(v489 - 32);
                                                      if (!v490)
                                                        goto LABEL_880;
                                                      *(_QWORD *)v665 = v490;
                                                      **((_QWORD **)&v665 + 1) = v489;
                                                      v467 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                                      v491 = sub_1C57BF53C((uint64_t)&v666, v467);
                                                      if (!v467 || !v491)
                                                        goto LABEL_880;
                                                      goto LABEL_871;
                                                    }
                                                    v472 = *(_QWORD *)(a1 + 24);
                                                    LOWORD(v667) = 257;
                                                    v473 = sub_1C4774B48(v472, 38, (uint64_t)v651, (uint64_t)v658, (uint64_t)&v665);
                                                    AllOnesValue = (uint64_t *)llvm::Constant::getAllOnesValue(v636, v474);
                                                    v413 = v651;
                                                    LOWORD(v667) = 257;
                                                    v412 = (llvm::Type *)v473;
                                                    return sub_1C4FC8748((uint64_t)v412, AllOnesValue, (uint64_t)v413, (uint64_t)&v665, 0, 0);
                                                  }
                                                  v512 = *(unsigned __int8 *)(v435 + 16);
                                                  if (v512 == 5)
                                                  {
                                                    if (*(_WORD *)(v435 + 18) != 27
                                                      || !sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v435- 32* (*(_DWORD *)(v435 + 20) & 0x7FFFFFF)))|| !sub_1C4D8A86C((llvm::APInt *)&v666, *(llvm::Constant **)(v435- 32* (*(_DWORD *)(v435 + 20) & 0x7FFFFFF)+ 32)))
                                                    {
                                                      goto LABEL_778;
                                                    }
                                                  }
                                                  else if (v512 != 55
                                                         || !sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v435 - 64))|| !sub_1C4D8A7F0((llvm::APInt *)&v666, *(unsigned __int8 **)(v435 - 32)))
                                                  {
                                                    goto LABEL_778;
                                                  }
                                                  if (*(_QWORD *)v667 != *(_QWORD *)(v6 - 32))
                                                    goto LABEL_778;
LABEL_967:
                                                  v464 = 1;
                                                  goto LABEL_819;
                                                }
                                                if (*(_WORD *)(v6 + 18) != 29)
                                                  goto LABEL_818;
                                                v460 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                                                v461 = *(_QWORD *)(v460 + 8);
                                                if (v461 && !*(_QWORD *)(v461 + 8))
                                                {
                                                  v552 = *(unsigned __int8 *)(v460 + 16);
                                                  if (v552 == 5)
                                                  {
                                                    if (*(_WORD *)(v460 + 18) != 27
                                                      || !sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v460- 32* (*(_DWORD *)(v460 + 20) & 0x7FFFFFF)))|| !sub_1C4D8A86C((llvm::APInt *)&v666, *(llvm::Constant **)(v460- 32* (*(_DWORD *)(v460 + 20) & 0x7FFFFFF)+ 32)))
                                                    {
                                                      goto LABEL_816;
                                                    }
                                                  }
                                                  else if (v552 != 55
                                                         || !sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v460 - 64))|| !sub_1C4D8A7F0((llvm::APInt *)&v666, *(unsigned __int8 **)(v460 - 32)))
                                                  {
                                                    goto LABEL_816;
                                                  }
                                                  if (*(_QWORD *)v667 == *(_QWORD *)(v6
                                                                                    - 32
                                                                                    * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF)
                                                                                    + 32))
                                                    goto LABEL_967;
                                                }
LABEL_816:
                                                v462 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                                                v463 = *(_QWORD *)(v462 + 8);
                                                if (!v463 || *(_QWORD *)(v463 + 8))
                                                  goto LABEL_818;
                                                v553 = *(unsigned __int8 *)(v462 + 16);
                                                if (v553 == 5)
                                                {
                                                  if (*(_WORD *)(v462 + 18) != 27
                                                    || !sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v462- 32* (*(_DWORD *)(v462 + 20) & 0x7FFFFFF)))|| !sub_1C4D8A86C((llvm::APInt *)&v666, *(llvm::Constant **)(v462- 32* (*(_DWORD *)(v462 + 20) & 0x7FFFFFF)+ 32)))
                                                  {
                                                    goto LABEL_818;
                                                  }
                                                }
                                                else if (v553 != 55
                                                       || !sub_1C57BF450((_QWORD **)&v665, *(_QWORD *)(v462 - 64))|| !sub_1C4D8A7F0((llvm::APInt *)&v666, *(unsigned __int8 **)(v462 - 32)))
                                                {
                                                  goto LABEL_818;
                                                }
                                                v554 = (uint64_t *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
LABEL_972:
                                                v464 = *(_QWORD *)v667 == *v554;
                                                goto LABEL_819;
                                              }
                                              if (*(_QWORD *)(v431 + 8))
                                              {
                                                v658 = 0;
                                                goto LABEL_772;
                                              }
                                              if (*(_BYTE *)(v64 + 16) != 16)
                                              {
                                                v483 = *(unsigned __int8 *)(v63 + 16);
                                                if (v483 != 5)
                                                {
                                                  if (v483 != 57)
                                                    goto LABEL_937;
                                                  v484 = *(unsigned __int8 **)(v63 - 64);
                                                  if (!v484)
                                                    goto LABEL_937;
                                                  v662 = *(unsigned __int8 **)(v63 - 64);
                                                  v358 = *(unsigned __int8 **)(v63 - 32);
                                                  if (!v358)
                                                    goto LABEL_937;
                                                  goto LABEL_933;
                                                }
                                                if (*(_WORD *)(v63 + 18) == 29)
                                                {
                                                  v542 = v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF);
                                                  v484 = *(unsigned __int8 **)v542;
                                                  if (*(_QWORD *)v542)
                                                  {
                                                    v662 = *(unsigned __int8 **)v542;
                                                    v358 = *(unsigned __int8 **)(v542 + 32);
                                                    if (v358)
                                                    {
LABEL_933:
                                                      if (v358[16] != 16)
                                                        goto LABEL_937;
                                                      v543 = *(_QWORD *)(a1 + 24);
                                                      LOWORD(v667) = 257;
                                                      v544 = (_QWORD *)sub_1C4773594(v543, v484, v64, (uint64_t)&v665);
                                                      llvm::Value::takeName((llvm::Value *)v544, (llvm::Value *)v63);
                                                      LOWORD(v667) = 257;
                                                      v369 = (char *)operator new(0x80uLL);
                                                      *((_QWORD *)v369 + 6) = 0;
                                                      *((_QWORD *)v369 + 8) = *v544;
                                                      Not = (uint64_t)(v369 + 64);
                                                      *((_QWORD *)v369 + 3) = v369 + 64;
                                                      v370 = v369 + 32;
                                                      *((_QWORD *)v369 + 7) = v369 + 64;
                                                      *((_QWORD *)v369 + 9) = 0;
                                                      v369[80] = 57;
                                                      v369[81] = 0;
                                                      *((_WORD *)v369 + 41) = 0;
                                                      *((_DWORD *)v369 + 21) = 2;
                                                      *(_OWORD *)(v369 + 88) = 0u;
                                                      *(_OWORD *)(v369 + 104) = 0u;
                                                      *((_DWORD *)v369 + 30) = 0;
                                                      *(_QWORD *)v369 = v544;
                                                      v547 = v544[1];
                                                      v546 = v544 + 1;
                                                      v545 = v547;
                                                      *((_QWORD *)v369 + 1) = v547;
                                                      if (v547)
                                                        *(_QWORD *)(v545 + 16) = v369 + 8;
                                                      *((_QWORD *)v369 + 2) = v546;
                                                      *v546 = v369;
LABEL_658:
                                                      v374 = v358 + 8;
                                                      v375 = *((_QWORD *)v358 + 1);
                                                      *((_QWORD *)v369 + 5) = v375;
                                                      *((_QWORD *)v369 + 4) = v358;
                                                      if (v375)
                                                        *(_QWORD *)(v375 + 16) = v369 + 40;
                                                      *((_QWORD *)v369 + 6) = v374;
                                                      *v374 = v370;
                                                      goto LABEL_140;
                                                    }
                                                  }
                                                }
                                              }
LABEL_937:
                                              v657 = 0;
                                              v658 = 0;
                                              v548 = *(_QWORD *)(v64 + 8);
                                              if (v548)
                                              {
                                                if (!*(_QWORD *)(v548 + 8))
                                                {
                                                  *(_QWORD *)&v665 = &v658;
                                                  *((_QWORD *)&v665 + 1) = &v662;
                                                  *(_QWORD *)&v666 = &v661;
                                                  if (sub_1C4FA9CBC((_QWORD **)&v665, v63))
                                                  {
                                                    v651 = (llvm::Type **)&v657;
                                                    v652 = &v660;
                                                    v653 = (llvm **)&v659;
                                                    if (sub_1C4FA9CBC(&v651, v64))
                                                    {
                                                      if (v658 == v657)
                                                      {
                                                        v549 = *(_QWORD *)(a1 + 24);
                                                        LOWORD(v667) = 257;
                                                        v550 = sub_1C4773594(v549, v662, (uint64_t)v660, (uint64_t)&v665);
                                                        v551 = *(_QWORD *)(a1 + 24);
                                                        LOWORD(v667) = 257;
                                                        v413 = (_QWORD *)sub_1C4773594(v551, v661, (uint64_t)v659, (uint64_t)&v665);
                                                        v412 = (llvm::Type *)v658;
                                                        LOWORD(v667) = 257;
                                                        AllOnesValue = (uint64_t *)v550;
                                                        return sub_1C4FC8748((uint64_t)v412, AllOnesValue, (uint64_t)v413, (uint64_t)&v665, 0, 0);
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                              goto LABEL_772;
                                            }
LABEL_2:
                                            v12 = (llvm::Value *)v11;
                                            return (llvm::Value *)sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v12);
                                          }
                                          v417 = *(unsigned __int8 *)(v63 + 16);
                                          if (v417 == 5)
                                          {
                                            if (*(_WORD *)(v63 + 18) != 29)
                                              goto LABEL_723;
                                            v424 = (uint64_t *)(v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF));
                                            v418 = *v424;
                                            if (!*v424)
                                              goto LABEL_723;
                                            v415 = v424[4];
                                            if (!v415)
                                              goto LABEL_723;
                                          }
                                          else
                                          {
                                            if (v417 != 57)
                                              goto LABEL_723;
                                            v418 = *(_QWORD *)(v63 - 64);
                                            if (!v418)
                                              goto LABEL_723;
                                            v415 = *(_QWORD *)(v63 - 32);
                                            if (!v415)
                                              goto LABEL_723;
                                          }
                                          if (*(_BYTE *)(v418 + 16) != 81
                                            || (v425 = sub_1C57A85E8(a1, v418, v401, (llvm::AssumptionCache *)v6)) == 0)
                                          {
                                            if (*(_BYTE *)(v415 + 16) != 81)
                                              goto LABEL_723;
                                            v426 = sub_1C57A85E8(a1, v415, v401, (llvm::AssumptionCache *)v6);
                                            if (!v426)
                                              goto LABEL_723;
                                            v421 = (_QWORD *)v426;
                                            v422 = *(_QWORD *)(a1 + 24);
                                            LOWORD(v667) = 257;
                                            v423 = v418;
LABEL_803:
                                            v11 = sub_1C4773594(v422, v421, v423, (uint64_t)&v665);
                                            goto LABEL_2;
                                          }
                                          goto LABEL_802;
                                        }
                                        v441 = v662;
                                        *(_QWORD *)&v665 = v632;
                                        v442 = v662[16];
                                        if (v442 == 5)
                                        {
                                          if (*((_WORD *)v662 + 9) != 30)
                                            goto LABEL_687;
                                          v475 = *((_DWORD *)v662 + 5) & 0x7FFFFFF;
                                          v476 = &v662[-32 * v475];
                                          if (v632 == *(_QWORD *)v476)
                                          {
                                            if ((sub_1C4D9EED4((uint64_t)&v665 + 8, *((llvm::Constant **)v476 + 4)) & 1) != 0)
                                              goto LABEL_898;
                                            v478 = v665;
                                            v477 = -(uint64_t)(*((_DWORD *)v441 + 5) & 0x7FFFFFF);
                                          }
                                          else
                                          {
                                            v477 = -v475;
                                            v478 = v632;
                                          }
                                          v513 = (llvm::Constant **)&v441[32 * v477];
                                          if ((llvm::Constant *)v478 != v513[4]
                                            || !sub_1C4D9EED4((uint64_t)&v665 + 8, *v513))
                                          {
                                            goto LABEL_687;
                                          }
                                        }
                                        else
                                        {
                                          if (v442 != 58)
                                            goto LABEL_687;
                                          v443 = v632;
                                          if (v632 == *((_QWORD *)v662 - 8))
                                          {
                                            if ((sub_1C4D9ED34((uint64_t)&v665 + 8, *((llvm::Constant **)v662 - 4)) & 1) != 0)
                                              goto LABEL_898;
                                            v443 = v665;
                                          }
                                          if (v443 != *((_QWORD *)v441 - 4)
                                            || (sub_1C4D9ED34((uint64_t)&v665 + 8, *((llvm::Constant **)v441 - 8)) & 1) == 0)
                                          {
                                            goto LABEL_687;
                                          }
                                        }
LABEL_898:
                                        v514 = *(_QWORD *)(a1 + 24);
                                        v515 = v661;
                                        if ((v661[23] & 0x10) != 0)
                                        {
                                          v516 = ***(_QWORD ***)v661;
                                          v517 = *(_QWORD *)(v516 + 152);
                                          v518 = *(unsigned int *)(v516 + 168);
                                          if ((_DWORD)v518)
                                          {
                                            LODWORD(v519) = (v518 - 1) & ((v661 >> 4) ^ (v661 >> 9));
                                            v520 = v517 + 16 * v519;
                                            v521 = *(unsigned __int8 **)v520;
                                            if (*(unsigned __int8 **)v520 != v661)
                                            {
                                              v522 = 1;
                                              while (v521 != (unsigned __int8 *)-4096)
                                              {
                                                v523 = v519 + v522++;
                                                v519 = v523 & (v518 - 1);
                                                v521 = *(unsigned __int8 **)(v517 + 16 * v519);
                                                if (v521 == v661)
                                                {
LABEL_915:
                                                  v520 = v517 + 16 * v519;
                                                  goto LABEL_917;
                                                }
                                              }
                                              goto LABEL_916;
                                            }
                                            goto LABEL_917;
                                          }
LABEL_916:
                                          v520 = v517 + 16 * v518;
                                          goto LABEL_917;
                                        }
LABEL_973:
                                        v531 = 0;
                                        v530 = &byte_1C871356D;
                                        goto LABEL_918;
                                      }
                                      if (v357 == *(unsigned __int8 **)(v632 - 64))
                                      {
                                        if ((sub_1C4D9ED34((uint64_t)&v665 + 8, *(llvm::Constant **)(v632 - 32)) & 1) != 0)
                                          goto LABEL_684;
                                        v357 = (unsigned __int8 *)v665;
                                      }
                                      if (v357 == *(unsigned __int8 **)(v632 - 32)
                                        && (sub_1C4D9ED34((uint64_t)&v665 + 8, *(llvm::Constant **)(v632 - 64)) & 1) != 0)
                                      {
                                        goto LABEL_684;
                                      }
                                    }
                                    v360 = *(unsigned __int8 *)(v632 + 16);
                                    v358 = v661;
                                    goto LABEL_669;
                                  }
LABEL_655:
                                  LOWORD(v667) = 257;
                                  v369 = (char *)operator new(0x80uLL);
                                  *((_QWORD *)v369 + 6) = 0;
                                  *((_QWORD *)v369 + 8) = *(_QWORD *)v357;
                                  Not = (uint64_t)(v369 + 64);
                                  *((_QWORD *)v369 + 3) = v369 + 64;
                                  v370 = v369 + 32;
                                  *((_QWORD *)v369 + 7) = v369 + 64;
                                  *((_QWORD *)v369 + 9) = 0;
                                  v369[80] = 57;
                                  v369[81] = 0;
                                  *((_WORD *)v369 + 41) = 0;
                                  *((_DWORD *)v369 + 21) = 2;
                                  *(_OWORD *)(v369 + 88) = 0u;
                                  *(_OWORD *)(v369 + 104) = 0u;
                                  *((_DWORD *)v369 + 30) = 0;
                                  *(_QWORD *)v369 = v357;
                                  v373 = *((_QWORD *)v357 + 1);
                                  v372 = v357 + 8;
                                  v371 = v373;
                                  *((_QWORD *)v369 + 1) = v373;
                                  if (v373)
                                    *(_QWORD *)(v371 + 16) = v369 + 8;
                                  *((_QWORD *)v369 + 2) = v372;
                                  *v372 = v369;
                                  goto LABEL_658;
                                }
                                if (*(_WORD *)(v63 + 18) != 28)
                                  goto LABEL_604;
                                v338 = (_QWORD *)(v63 - 32 * (*(_DWORD *)(v63 + 20) & 0x7FFFFFF));
                                v339 = *v338;
                                v340 = *(unsigned __int8 *)(*v338 + 16);
                                if (v340 == 5)
                                {
                                  if (*(_WORD *)(v339 + 18) != 29)
                                    goto LABEL_604;
                                  v343 = (_QWORD *)(v339 - 32 * (*(_DWORD *)(v339 + 20) & 0x7FFFFFF));
                                  if (v64 != *v343)
                                    goto LABEL_604;
                                  v337 = (unsigned __int8 *)v343[4];
                                  if (!v337)
                                    goto LABEL_604;
                                }
                                else
                                {
                                  if (v340 != 57)
                                    goto LABEL_604;
                                  if (v64 != *(_QWORD *)(v339 - 64))
                                    goto LABEL_604;
                                  v337 = *(unsigned __int8 **)(v339 - 32);
                                  if (!v337)
                                    goto LABEL_604;
                                }
                                v660 = v337;
                                v342 = (unsigned __int8 *)v338[4];
                                if (!v342)
                                  goto LABEL_604;
LABEL_597:
                                v662 = v342;
                                v344 = *(_QWORD *)(a1 + 24);
                                LOWORD(v667) = 257;
                                v345 = sub_1C4D89BCC(v344, v342, (uint64_t)v337, (uint64_t)&v665);
                                v655 = 257;
                                v346 = (char *)operator new(0x80uLL);
                                *((_QWORD *)v346 + 5) = 0;
                                v347 = v346 + 40;
                                *((_QWORD *)v346 + 6) = 0;
                                *((_QWORD *)v346 + 8) = *(_QWORD *)v64;
                                Not = (uint64_t)(v346 + 64);
                                *((_QWORD *)v346 + 3) = v346 + 64;
                                *((_QWORD *)v346 + 7) = v346 + 64;
                                *((_QWORD *)v346 + 9) = 0;
                                v346[80] = 57;
                                v346[81] = 0;
                                *((_WORD *)v346 + 41) = 0;
                                *((_DWORD *)v346 + 21) = 2;
                                *(_OWORD *)(v346 + 88) = 0u;
                                *(_OWORD *)(v346 + 104) = 0u;
                                *((_DWORD *)v346 + 30) = 0;
                                *(_QWORD *)v346 = v64;
                                v350 = *(_QWORD *)(v64 + 8);
                                v349 = (_QWORD *)(v64 + 8);
                                v348 = v350;
                                *((_QWORD *)v346 + 1) = v350;
                                if (v350)
                                  *(_QWORD *)(v348 + 16) = v346 + 8;
                                *((_QWORD *)v346 + 2) = v349;
                                *v349 = v346;
                                *((_QWORD *)v346 + 4) = v345;
                                if (v345)
                                {
                                  v353 = *(_QWORD *)(v345 + 8);
                                  v352 = (_QWORD *)(v345 + 8);
                                  v351 = v353;
                                  *v347 = v353;
                                  if (v353)
                                    *(_QWORD *)(v351 + 16) = v347;
                                  *((_QWORD *)v346 + 6) = v352;
                                  *v352 = v346 + 32;
                                }
LABEL_603:
                                v84 = &v651;
                                goto LABEL_141;
                              }
                            }
                            else
                            {
                              v588 = ~(unint64_t)*v657;
                              if ((_DWORD)v587)
                                v589 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v587;
                              else
                                v589 = 0;
                              v590 = v589 & v588;
                              v639 = (void *)(v589 & v588);
                              v640 = 0;
                            }
                            v593 = (*(_QWORD *)v635 & v590) == 0;
                            goto LABEL_1049;
                          }
LABEL_473:
                          if (!v275)
                            goto LABEL_490;
                          v656 = v275;
                          v274 = (llvm *)v275;
                          if (v246 != *(llvm::ConstantInt ****)v273)
                            goto LABEL_490;
                          goto LABEL_475;
                        }
LABEL_445:
                        if (!v251)
                          goto LABEL_462;
                        v656 = (llvm::ConstantInt ***)v251;
                        v250 = (llvm *)v251;
                        if (v661 != (unsigned __int8 *)*v249)
                          goto LABEL_462;
                        goto LABEL_447;
                      }
                      v186 = v662[16];
                      if (v186 == 5)
                      {
                        if (*((_WORD *)v662 + 9) != 29)
                          goto LABEL_372;
                        v187 = (llvm::ConstantInt ****)&v662[-32 * (*((_DWORD *)v662 + 5) & 0x7FFFFFF)];
                        v188 = *v187;
                        if (*v187)
                        {
                          v656 = *v187;
                          v189 = (unsigned __int8 *)v187[4];
LABEL_355:
                          if (v661 == v189)
                          {
LABEL_386:
                            v222 = *(_QWORD *)(a1 + 24);
                            LOWORD(v667) = 257;
                            v223 = llvm::ConstantInt::get(*v188, (llvm::Type *)v658, v137);
                            v224 = (_QWORD *)sub_1C4D89BCC(v222, v188, (uint64_t)v223, (uint64_t)&v665);
                            v225 = v661;
LABEL_395:
                            v655 = 257;
                            v228 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v228 + 5) = 0;
                            v229 = v228 + 40;
                            *((_QWORD *)v228 + 6) = 0;
                            *((_QWORD *)v228 + 8) = *v224;
                            Not = (uint64_t)(v228 + 64);
                            *((_QWORD *)v228 + 3) = v228 + 64;
                            *((_QWORD *)v228 + 7) = v228 + 64;
                            *((_QWORD *)v228 + 9) = 0;
                            v230 = 57;
LABEL_438:
                            v228[80] = v230;
                            v228[81] = 0;
                            *((_WORD *)v228 + 41) = 0;
                            *((_DWORD *)v228 + 21) = 2;
                            *(_OWORD *)(v228 + 88) = 0u;
                            *(_OWORD *)(v228 + 104) = 0u;
                            *((_DWORD *)v228 + 30) = 0;
                            *(_QWORD *)v228 = v224;
                            v258 = v224[1];
                            v257 = v224 + 1;
                            v256 = v258;
                            *((_QWORD *)v228 + 1) = v258;
                            if (v258)
                              *(_QWORD *)(v256 + 16) = v228 + 8;
                            *((_QWORD *)v228 + 2) = v257;
                            *v257 = v228;
                            *((_QWORD *)v228 + 4) = v225;
                            if (v225)
                            {
                              v261 = *((_QWORD *)v225 + 1);
                              v260 = v225 + 8;
                              v259 = v261;
                              *v229 = v261;
                              if (v261)
                                *(_QWORD *)(v259 + 16) = v229;
                              *((_QWORD *)v228 + 6) = v260;
                              *v260 = v228 + 32;
                            }
                            goto LABEL_603;
                          }
                          goto LABEL_370;
                        }
                        v189 = (unsigned __int8 *)v187[4];
                      }
                      else
                      {
                        if (v186 != 57)
                          goto LABEL_372;
                        v187 = (llvm::ConstantInt ****)(v662 - 64);
                        v188 = (llvm::ConstantInt ***)*((_QWORD *)v662 - 8);
                        if (v188)
                        {
                          v656 = (llvm::ConstantInt ***)*((_QWORD *)v662 - 8);
                          v189 = (unsigned __int8 *)*((_QWORD *)v662 - 4);
                          goto LABEL_355;
                        }
                        v189 = (unsigned __int8 *)*((_QWORD *)v662 - 4);
                      }
LABEL_370:
                      if (v189)
                      {
                        v656 = (llvm::ConstantInt ***)v189;
                        v188 = (llvm::ConstantInt ***)v189;
                        if (v661 == (unsigned __int8 *)*v187)
                          goto LABEL_386;
                      }
LABEL_372:
                      v214 = v661[16];
                      if (v214 == 5)
                      {
                        if (*((_WORD *)v661 + 9) != 29)
                          goto LABEL_382;
                        v217 = &v661[-32 * (*((_DWORD *)v661 + 5) & 0x7FFFFFF)];
                        v216 = *(llvm::ConstantInt ****)v217;
                        v218 = (unsigned __int8 *)*((_QWORD *)v217 + 4);
                        if (v662 == (unsigned __int8 *)v216)
                        {
                          v216 = (llvm::ConstantInt ***)v218;
                          if (!v218)
                            goto LABEL_382;
                        }
                        else if (!v216 || v662 != v218)
                        {
                          goto LABEL_382;
                        }
                      }
                      else
                      {
                        if (v214 != 57)
                          goto LABEL_382;
                        v215 = (unsigned __int8 *)*((_QWORD *)v661 - 8);
                        v216 = (llvm::ConstantInt ***)*((_QWORD *)v661 - 4);
                        if (v662 != v215)
                        {
                          if (v215 && v662 == (unsigned __int8 *)v216)
                          {
                            v656 = (llvm::ConstantInt ***)*((_QWORD *)v661 - 8);
                            v216 = (llvm::ConstantInt ***)v215;
LABEL_394:
                            v226 = *(_QWORD *)(a1 + 24);
                            LOWORD(v667) = 257;
                            v227 = llvm::ConstantInt::get(*v216, (llvm::Type *)v657, v137);
                            v224 = (_QWORD *)sub_1C4D89BCC(v226, v216, (uint64_t)v227, (uint64_t)&v665);
                            v225 = v662;
                            goto LABEL_395;
                          }
LABEL_382:
                          if (v186 == 5)
                          {
                            if (*((_WORD *)v662 + 9) != 30)
                              goto LABEL_402;
                            v219 = (llvm::ConstantInt ****)&v662[-32 * (*((_DWORD *)v662 + 5) & 0x7FFFFFF)];
                            v220 = *v219;
                            if (*v219)
                            {
                              v656 = *v219;
                              v221 = (unsigned __int8 *)v219[4];
LABEL_390:
                              if (v661 == v221)
                              {
LABEL_432:
                                v252 = *(_QWORD *)(a1 + 24);
                                LOWORD(v667) = 257;
                                v253 = llvm::ConstantInt::get(*v220, (llvm::Type *)v658, v137);
                                v224 = (_QWORD *)sub_1C4D89BCC(v252, v220, (uint64_t)v253, (uint64_t)&v665);
                                v225 = v661;
LABEL_437:
                                v655 = 257;
                                v228 = (char *)operator new(0x80uLL);
                                *((_QWORD *)v228 + 5) = 0;
                                v229 = v228 + 40;
                                *((_QWORD *)v228 + 6) = 0;
                                *((_QWORD *)v228 + 8) = *v224;
                                Not = (uint64_t)(v228 + 64);
                                *((_QWORD *)v228 + 3) = v228 + 64;
                                *((_QWORD *)v228 + 7) = v228 + 64;
                                *((_QWORD *)v228 + 9) = 0;
                                v230 = 58;
                                goto LABEL_438;
                              }
                              goto LABEL_400;
                            }
                            v221 = (unsigned __int8 *)v219[4];
                          }
                          else
                          {
                            if (v186 != 58)
                              goto LABEL_402;
                            v219 = (llvm::ConstantInt ****)(v662 - 64);
                            v220 = (llvm::ConstantInt ***)*((_QWORD *)v662 - 8);
                            if (v220)
                            {
                              v656 = (llvm::ConstantInt ***)*((_QWORD *)v662 - 8);
                              v221 = (unsigned __int8 *)*((_QWORD *)v662 - 4);
                              goto LABEL_390;
                            }
                            v221 = (unsigned __int8 *)*((_QWORD *)v662 - 4);
                          }
LABEL_400:
                          if (v221)
                          {
                            v656 = (llvm::ConstantInt ***)v221;
                            v220 = (llvm::ConstantInt ***)v221;
                            if (v661 == (unsigned __int8 *)*v219)
                              goto LABEL_432;
                          }
LABEL_402:
                          if (v214 == 5)
                          {
                            if (*((_WORD *)v661 + 9) != 30)
                              goto LABEL_412;
                            v233 = &v661[-32 * (*((_DWORD *)v661 + 5) & 0x7FFFFFF)];
                            v232 = *(llvm::ConstantInt ****)v233;
                            v234 = (unsigned __int8 *)*((_QWORD *)v233 + 4);
                            if (v662 == (unsigned __int8 *)v232)
                            {
                              v232 = (llvm::ConstantInt ***)v234;
                              if (!v234)
                                goto LABEL_412;
                            }
                            else if (!v232 || v662 != v234)
                            {
                              goto LABEL_412;
                            }
                          }
                          else
                          {
                            if (v214 != 58)
                              goto LABEL_412;
                            v231 = (unsigned __int8 *)*((_QWORD *)v661 - 8);
                            v232 = (llvm::ConstantInt ***)*((_QWORD *)v661 - 4);
                            if (v662 != v231)
                            {
                              if (v231 && v662 == (unsigned __int8 *)v232)
                              {
                                v656 = (llvm::ConstantInt ***)*((_QWORD *)v661 - 8);
                                v232 = (llvm::ConstantInt ***)v231;
LABEL_436:
                                v254 = *(_QWORD *)(a1 + 24);
                                LOWORD(v667) = 257;
                                v255 = llvm::ConstantInt::get(*v232, (llvm::Type *)v657, v137);
                                v224 = (_QWORD *)sub_1C4D89BCC(v254, v232, (uint64_t)v255, (uint64_t)&v665);
                                v225 = v662;
                                goto LABEL_437;
                              }
                              goto LABEL_412;
                            }
                            if (!v232)
                              goto LABEL_412;
                          }
                          v656 = v232;
                          goto LABEL_436;
                        }
                        if (!v216)
                          goto LABEL_382;
                      }
                      v656 = v216;
                      goto LABEL_394;
                    }
                    v148 = *(unsigned __int8 *)(v118 + 16);
                    if (v148 == 5)
                    {
                      if (*(_WORD *)(v118 + 18) != 17)
                        goto LABEL_203;
                      v158 = (unsigned __int8 ***)(v118 - 32 * (*(_DWORD *)(v118 + 20) & 0x7FFFFFF));
                      v149 = *v158;
                      if (!*v158)
                        goto LABEL_203;
                      v669 = *v158;
                      v150 = (llvm *)v158[4];
                      if (!v150)
                        goto LABEL_203;
                    }
                    else
                    {
                      if (v148 != 45)
                        goto LABEL_203;
                      v149 = *(unsigned __int8 ***)(v118 - 64);
                      if (!v149)
                        goto LABEL_203;
                      v669 = *(unsigned __int8 ***)(v118 - 64);
                      v150 = *(llvm **)(v118 - 32);
                      if (!v150)
                        goto LABEL_203;
                    }
                    v664 = v150;
                    if (v149 == (unsigned __int8 **)v121[4])
                      goto LABEL_300;
                    goto LABEL_203;
                  }
                  if (v106 != 5 || *(_WORD *)(v6 + 18) != 29)
                    goto LABEL_195;
                  v113 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                  v114 = *(_QWORD *)(v113 + 8);
                  if (v114 && !*(_QWORD *)(v114 + 8))
                  {
                    v144 = *(unsigned __int8 *)(v113 + 16);
                    if (v144 == 5)
                    {
                      if (*(_WORD *)(v113 + 18) != 30)
                        goto LABEL_193;
                      if (!*(_QWORD *)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF)))
                        goto LABEL_193;
                      v669 = *(unsigned __int8 ***)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF));
                      if (!sub_1C4D8A004((uint64_t)&v665 + 8, *(llvm::Constant **)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF) + 32)))goto LABEL_193;
                    }
                    else
                    {
                      if (v144 != 58)
                        goto LABEL_193;
                      if (!*(_QWORD *)(v113 - 64))
                        goto LABEL_193;
                      v669 = *(unsigned __int8 ***)(v113 - 64);
                      if ((sub_1C4D89F84((uint64_t)&v665 + 8, *(unsigned __int8 **)(v113 - 32)) & 1) == 0)
                        goto LABEL_193;
                    }
                    v147 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                    if (v147)
                      goto LABEL_287;
                  }
LABEL_193:
                  v115 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF) + 32);
                  v116 = *(_QWORD *)(v115 + 8);
                  if (!v116 || *(_QWORD *)(v116 + 8))
                    goto LABEL_195;
                  v145 = *(unsigned __int8 *)(v115 + 16);
                  if (v145 == 5)
                  {
                    if (*(_WORD *)(v115 + 18) != 30)
                      goto LABEL_195;
                    v154 = *(_QWORD *)(v115 - 32 * (*(_DWORD *)(v115 + 20) & 0x7FFFFFF));
                    if (!v154)
                      goto LABEL_195;
                    *(_QWORD *)v665 = v154;
                    if (!sub_1C4D8A004((uint64_t)&v665 + 8, *(llvm::Constant **)(v115 - 32 * (*(_DWORD *)(v115 + 20) & 0x7FFFFFF) + 32)))goto LABEL_195;
                  }
                  else
                  {
                    if (v145 != 58)
                      goto LABEL_195;
                    v146 = *(_QWORD *)(v115 - 64);
                    if (!v146)
                      goto LABEL_195;
                    *(_QWORD *)v665 = v146;
                    if ((sub_1C4D89F84((uint64_t)&v665 + 8, *(unsigned __int8 **)(v115 - 32)) & 1) == 0)
                      goto LABEL_195;
                  }
                  v147 = *(_QWORD *)(v6 - 32 * (*(_DWORD *)(v6 + 20) & 0x7FFFFFF));
                  if (!v147)
                    goto LABEL_195;
                  goto LABEL_287;
                }
                *(_QWORD *)&v665 = v630;
                *((_QWORD *)&v665 + 1) = &v664;
                *(_QWORD *)&v666 = &v644;
                *((_QWORD *)&v666 + 1) = v6;
                v658 = 0;
                v659 = 0;
                LODWORD(v651) = 9;
                v652 = 0;
                v653 = (llvm **)&v659;
                if (sub_1C4E75A6C((uint64_t)&v651, (uint64_t)v194)
                  && (LODWORD(v669) = 9,
                      v670 = 0,
                      v671 = (llvm::Type **)&v658,
                      sub_1C4E75A6C((uint64_t)&v669, (uint64_t)v661)))
                {
                  v196 = (unsigned __int8 *)v658;
                  v197 = v659;
                  v198 = 9;
                }
                else
                {
                  v656 = 0;
                  v657 = 0;
                  LODWORD(v651) = 8;
                  v652 = 0;
                  v653 = (llvm **)&v657;
                  if (!sub_1C4E75A6C((uint64_t)&v651, (uint64_t)v663))
                  {
                    v12 = 0;
LABEL_1045:
                    if (v12)
                      return (llvm::Value *)sub_1C577F888(a1, (llvm::ValueAsMetadata *)v6, v12);
                    goto LABEL_179;
                  }
                  LODWORD(v669) = 8;
                  v670 = 0;
                  v671 = (llvm::Type **)&v656;
                  v568 = sub_1C4E75A6C((uint64_t)&v669, (uint64_t)v661);
                  v12 = 0;
                  if (!v568)
                    goto LABEL_1045;
                  v196 = (unsigned __int8 *)v656;
                  v197 = (unsigned __int8 *)v657;
                  v198 = 8;
                }
                v12 = (llvm::Value *)sub_1C57BE614((uint64_t)&v665, v198, v196, v197);
                goto LABEL_1045;
              }
              v204 = v206;
              v205 = 149;
            }
            v207 = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(v6 + 40) + 56) + 40);
            *(_QWORD *)&v665 = *(_QWORD *)v6;
            Declaration = llvm::Intrinsic::getDeclaration(v207, v205, (uint64_t *)&v665, 1);
            v209 = Declaration;
            if (Declaration)
              v210 = *(uint64_t ***)(Declaration + 24);
            else
              v210 = 0;
            v669 = (unsigned __int8 **)v664;
            v670 = v663;
            v671 = v204;
            LOWORD(v667) = 257;
            v211 = (char *)operator new(0xD0uLL);
            v212 = 0;
            Not = (uint64_t)(v211 + 128);
            *((_DWORD *)v211 + 37) = *((_DWORD *)v211 + 37) & 0x38000000 | 4;
            do
            {
              v213 = &v211[v212];
              *(_QWORD *)v213 = 0;
              *((_QWORD *)v213 + 1) = 0;
              *((_QWORD *)v213 + 2) = 0;
              *((_QWORD *)v213 + 3) = Not;
              v212 += 32;
            }
            while (v212 != 128);
            *((_QWORD *)v211 + 16) = *v210[2];
            *((_QWORD *)v211 + 17) = 0;
            v211[144] = 84;
            v211[145] = 0;
            *((_WORD *)v211 + 73) = 0;
            *((_DWORD *)v211 + 37) = *((_DWORD *)v211 + 37) & 0xC0000000 | 4;
            *(_OWORD *)(v211 + 152) = 0u;
            *(_OWORD *)(v211 + 168) = 0u;
            *((_DWORD *)v211 + 46) = 0;
            *((_QWORD *)v211 + 24) = 0;
            llvm::CallInst::init((uint64_t ***)v211 + 16, v210, v209, (uint64_t *)&v669, 3, 0, 0, (uint64_t)&v665);
            return (llvm::Value *)Not;
          }
          v628 = (llvm::Type ***)(v665 + 8 * DWORD2(v665));
          while (1)
          {
            v307 = *(_QWORD *)(a1 + 32);
            v308 = *(_DWORD *)(v307 + 8);
            v309 = *v631;
            v651 = *v631;
            LODWORD(v652) = v308;
            v310 = *(_DWORD *)(v307 + 2080);
            if (!v310)
              break;
            v311 = *(_QWORD *)(v307 + 2064);
            v312 = v310 - 1;
            v313 = v312 & ((v309 >> 4) ^ (v309 >> 9));
            v314 = (_QWORD *)(v311 + 16 * v313);
            v315 = (_QWORD *)*v314;
            if ((llvm::Type **)*v314 != v309)
            {
              v316 = 0;
              v317 = 1;
              while (v315 != (_QWORD *)-4096)
              {
                if (v316)
                  v318 = 0;
                else
                  v318 = v315 == (_QWORD *)-8192;
                if (v318)
                  v316 = v314;
                v319 = v313 + v317++;
                v313 = v319 & v312;
                v314 = (_QWORD *)(v311 + 16 * v313);
                v315 = (_QWORD *)*v314;
                if ((llvm::Type **)*v314 == v309)
                  goto LABEL_544;
              }
              if (v316)
                v320 = v316;
              else
                v320 = v314;
              goto LABEL_541;
            }
LABEL_544:
            if (++v631 == v628)
            {
              v68 = (__int128 *)v665;
              goto LABEL_1015;
            }
          }
          v320 = 0;
LABEL_541:
          v321 = sub_1C4D8D8F4((_DWORD *)(v307 + 2064), (uint64_t)&v651, (uint64_t *)&v651, v320);
          *v321 = v651;
          *((_DWORD *)v321 + 2) = (_DWORD)v652;
          v322 = *(unsigned int *)(v307 + 8);
          if (v322 >= *(unsigned int *)(v307 + 12))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod(v307, v307 + 16, v322 + 1, 8);
            v322 = *(unsigned int *)(v307 + 8);
          }
          *(_QWORD *)(*(_QWORD *)v307 + 8 * v322) = v309;
          ++*(_DWORD *)(v307 + 8);
          goto LABEL_544;
        }
        if (*(_WORD *)(v35 + 18) != 30)
          goto LABEL_72;
        v39 = *(_DWORD *)(v35 + 20) & 0x7FFFFFF;
        v40 = v35 - 32 * v39;
        if (v669 == *(unsigned __int8 ***)v40)
        {
          if ((sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)(v40 + 32)) & 1) != 0)
            goto LABEL_71;
          v32 = (unsigned __int8 **)v651;
          v41 = -(uint64_t)(*(_DWORD *)(v35 + 20) & 0x7FFFFFF);
        }
        else
        {
          v41 = -v39;
        }
        v45 = v35 + 32 * v41;
        if (v32 != *(unsigned __int8 ***)(v45 + 32)
          || !sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)v45))
        {
          goto LABEL_72;
        }
        goto LABEL_71;
      }
      if (*(_WORD *)(v18 + 18) != 28)
        goto LABEL_110;
      v37 = *(_QWORD *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF));
      v38 = *(unsigned __int8 *)(v37 + 16);
      if (v38 != 5)
      {
        if (v38 != 58)
          goto LABEL_93;
        if (v669 != *(unsigned __int8 ***)(v37 - 64))
        {
LABEL_58:
          if (v32 != *(unsigned __int8 ***)(v37 - 32)
            || (sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v37 - 64)) & 1) == 0)
          {
            goto LABEL_93;
          }
          goto LABEL_92;
        }
        if ((sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v37 - 32)) & 1) == 0)
        {
          v32 = (unsigned __int8 **)v651;
          goto LABEL_58;
        }
LABEL_92:
        if (v653 == *(llvm ***)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32))
          goto LABEL_131;
LABEL_93:
        v55 = *(_QWORD *)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF) + 32);
        v56 = *(unsigned __int8 *)(v55 + 16);
        if (v56 != 5)
        {
          if (v56 != 58)
            goto LABEL_110;
          v57 = v651;
          if (v651 != *(llvm::Type ***)(v55 - 64))
            goto LABEL_98;
          if ((sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v55 - 32)) & 1) == 0)
          {
            v57 = v651;
LABEL_98:
            if (v57 != *(llvm::Type ***)(v55 - 32)
              || (sub_1C4D9ED34((uint64_t)&v652, *(llvm::Constant **)(v55 - 64)) & 1) == 0)
            {
              goto LABEL_110;
            }
          }
LABEL_108:
          v34 = (llvm ***)(v18 - 32 * (*(_DWORD *)(v18 + 20) & 0x7FFFFFF));
          goto LABEL_109;
        }
        if (*(_WORD *)(v55 + 18) != 30)
          goto LABEL_110;
        v58 = *(_DWORD *)(v55 + 20) & 0x7FFFFFF;
        v59 = v55 - 32 * v58;
        v60 = v651;
        if (v651 == *(llvm::Type ***)v59)
        {
          if ((sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)(v59 + 32)) & 1) != 0)
            goto LABEL_108;
          v60 = v651;
          v61 = -(uint64_t)(*(_DWORD *)(v55 + 20) & 0x7FFFFFF);
        }
        else
        {
          v61 = -v58;
        }
        v62 = v55 + 32 * v61;
        if (v60 != *(llvm::Type ***)(v62 + 32) || !sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)v62))
          goto LABEL_110;
        goto LABEL_108;
      }
      if (*(_WORD *)(v37 + 18) != 30)
        goto LABEL_93;
      v42 = *(_DWORD *)(v37 + 20) & 0x7FFFFFF;
      v43 = v37 - 32 * v42;
      if (v669 == *(unsigned __int8 ***)v43)
      {
        if ((sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)(v43 + 32)) & 1) != 0)
          goto LABEL_92;
        v32 = (unsigned __int8 **)v651;
        v44 = -(uint64_t)(*(_DWORD *)(v37 + 20) & 0x7FFFFFF);
      }
      else
      {
        v44 = -v42;
      }
      v54 = v37 + 32 * v44;
      if (v32 != *(unsigned __int8 ***)(v54 + 32)
        || !sub_1C4D9EED4((uint64_t)&v652, *(llvm::Constant **)v54))
      {
        goto LABEL_93;
      }
      goto LABEL_92;
    }
  }
  return (llvm::Value *)Not;
}

uint64_t sub_1C57B3C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  char v9;
  _BYTE v10[2];
  _BYTE v11[2];

  v2 = *(_QWORD *)(a1 + 8);
  if (!v2)
    return 1;
  while (1)
  {
    v4 = *(_QWORD *)(v2 + 24);
    if (v4 == a2)
      goto LABEL_14;
    v5 = *(unsigned __int8 *)(v4 + 16);
    if (v5 == 30)
      goto LABEL_14;
    if (v5 != 58)
      break;
    if (!sub_1C4D9ED34((uint64_t)&v9, *(llvm::Constant **)(v4 - 32))
      && (sub_1C4D9ED34((uint64_t)&v9, *(llvm::Constant **)(v4 - 64)) & 1) == 0)
    {
      return 0;
    }
LABEL_14:
    v2 = *(_QWORD *)(v2 + 8);
    if (!v2)
      return 1;
  }
  if (v5 == 85)
  {
    v6 = *(_DWORD *)(v4 + 20);
    v7 = (v6 & 0x40000000) != 0 ? *(_QWORD *)(v4 - 8) : v4 - 32 * (v6 & 0x7FFFFFF);
    if (((v2 - v7) & 0x1FFFFFFFE0) == 0
      && !sub_1C57BE738((uint64_t)v11, *(unsigned __int8 **)(v2 + 24))
      && !sub_1C57BE7B8((uint64_t)v10, (unsigned __int8 *)v4))
    {
      goto LABEL_14;
    }
  }
  return 0;
}

llvm::UndefValue **sub_1C57B3D6C(uint64_t a1, uint64_t ***a2)
{
  int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t **v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ****v17;
  uint64_t ***v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t *v25;
  uint64_t ***v26;
  char *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  unsigned __int8 *v31;
  char *v32;
  _QWORD *v33;
  uint64_t ***v34;
  char v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ****v45;
  uint64_t ***v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ****v55;
  uint64_t ***v56;
  int v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  int v61;
  int v62;
  uint64_t *v63;
  uint64_t ***v64;
  char *v65;
  uint64_t *v66;
  uint64_t *v67;
  unsigned __int8 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t ****v77;
  uint64_t ***v78;
  int v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t *v103;
  int v104;
  unsigned __int8 *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 *v108;
  unsigned int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  llvm::APFloatBase *SplatValue;
  char *v114;
  uint64_t v115;
  unsigned int v116;
  _QWORD *v117;
  uint64_t *v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  char *v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  int v154;
  char v155;
  int v156;
  llvm::UndefValue *AggregateElement;
  int v158;
  char *v159;
  uint64_t v160;
  unsigned int v161;
  _QWORD *v162;
  unsigned int v163;
  char v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  char *v171;
  _QWORD *v172;
  char v173;
  int v174;
  uint64_t v175;
  unsigned __int8 *v176;
  char *v177;
  _QWORD *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t *v190;
  unsigned int v191;
  uint64_t v193;
  unsigned int v194;
  uint64_t v196;
  uint64_t v197;
  _BOOL4 v198;
  uint64_t v199;
  BOOL v200;
  unsigned int v201;
  uint64_t v202;
  _BOOL8 v203;
  uint64_t Not;
  uint64_t v205;
  uint64_t **v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t **v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  llvm::ValueAsMetadata *v215;
  llvm::Value *BinaryIntrinsic;
  int v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  llvm::Constant *v222;
  llvm::Constant *v223;
  llvm::Constant **v224;
  llvm::Constant *v225;
  uint64_t v226;
  uint64_t ***v227;
  char *v228;
  uint64_t *v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  llvm::Type *v233;
  const llvm::APInt *v234;
  uint64_t *True;
  uint64_t v236;
  llvm::Value **False;
  uint64_t ***v238;
  char *v239;
  uint64_t *v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  llvm::Type *v244;
  const llvm::APInt *v245;
  llvm::Value **NullValue;
  llvm::Constant *v247;
  llvm::Constant **v248;
  llvm::Constant *v249;
  uint64_t v250;
  unsigned __int8 *v251;
  llvm::ValueHandleBase *AllOnesValue;
  char *v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t **v263;
  _BOOL8 v264;
  int v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t *v271;
  int v272;
  uint64_t *v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  uint64_t **v277;
  uint64_t v278;
  uint64_t *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  int v285;
  char v286;
  uint64_t **v287;
  uint64_t v288;
  uint64_t **v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t v292;
  char v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  uint64_t v299;
  char v300;
  int v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t *v304;
  char v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  uint64_t v311;
  char v312;
  uint64_t v313;
  uint64_t *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int v319;
  int v320;
  int v321;
  uint64_t v322;
  char v323;
  char v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t **v334;
  uint64_t *v335;
  uint64_t **v336;
  uint64_t *v337;
  int v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  int v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _BOOL8 v349;
  uint64_t v350;
  uint64_t v351;
  _BOOL8 v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t *v358;
  uint64_t v359;
  int v360;
  int v361;
  _QWORD *v362;
  char *v363;
  uint64_t *v364;
  uint64_t *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t ****v370;
  uint64_t ***v371;
  int v372;
  int v373;
  uint64_t ***v374;
  char *v375;
  uint64_t *v376;
  uint64_t *v377;
  uint64_t v378;
  _QWORD *v379;
  uint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t *v385;
  uint64_t *v386;
  uint64_t *v387;
  uint64_t *v388;
  uint64_t *v389;
  uint64_t *v390;
  _QWORD *v391[2];
  uint64_t *v392;
  _QWORD *v393[2];
  uint64_t *v394;
  uint64_t v395[4];
  __int16 v396;
  uint64_t ***v397;
  unsigned __int8 *v398;
  uint64_t **v399;
  uint64_t v400;

  v399 = 0;
  v385 = (uint64_t *)&v399;
  v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 5)
  {
    if (*((_WORD *)a2 + 9) != 30)
      return 0;
    v7 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
    if (a2[-4 * v7])
    {
      v399 = a2[-4 * v7];
      if ((sub_1C4D9EED4((uint64_t)&v386, (llvm::Constant *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4]) & 1) != 0)
        goto LABEL_14;
      v7 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
    }
    v8 = (uint64_t)a2[-4 * v7 + 4];
    if (!v8)
      return 0;
    *v385 = v8;
    if (!sub_1C4D9EED4((uint64_t)&v386, (llvm::Constant *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)]))
      return 0;
  }
  else
  {
    if (v4 != 58)
      return 0;
    if (!*(a2 - 8) || (v399 = *(a2 - 8), (sub_1C4D9ED34((uint64_t)&v386, (llvm::Constant *)*(a2 - 4)) & 1) == 0))
    {
      v6 = (uint64_t)*(a2 - 4);
      if (!v6)
        return 0;
      *v385 = v6;
      if ((sub_1C4D9ED34((uint64_t)&v386, (llvm::Constant *)*(a2 - 8)) & 1) == 0)
        return 0;
    }
  }
LABEL_14:
  v9 = *a2;
  v397 = 0;
  v398 = 0;
  v10 = (uint64_t)v399;
  v385 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  v11 = v399[1];
  if (v11 && !v11[1])
  {
    if ((sub_1C4E76FA0(&v385, 28, (uint64_t)v399) & 1) != 0)
    {
      v12 = *(_QWORD *)(a1 + 24);
      if ((*((_BYTE *)v397 + 23) & 0x10) == 0)
      {
        v28 = 0;
        v27 = &byte_1C871356D;
        goto LABEL_37;
      }
      v13 = ***v397;
      v14 = *(_QWORD *)(v13 + 152);
      v15 = *(unsigned int *)(v13 + 168);
      if ((_DWORD)v15)
      {
        LODWORD(v16) = (v15 - 1) & ((v397 >> 4) ^ (v397 >> 9));
        v17 = (uint64_t ****)(v14 + 16 * v16);
        v18 = *v17;
        if (*v17 == v397)
        {
LABEL_36:
          v26 = v17[1];
          v29 = (uint64_t *)*v26;
          v27 = (char *)(v26 + 2);
          v28 = v29;
LABEL_37:
          LOWORD(v389) = 773;
          v385 = (uint64_t *)v27;
          v386 = v28;
          v387 = (uint64_t *)".not";
          v30 = sub_1C506EAA0(v12, (uint64_t)v397, (uint64_t)&v385);
          v31 = v398;
          LOWORD(v389) = 257;
          v32 = (char *)operator new(0x80uLL);
          *((_QWORD *)v32 + 5) = 0;
          v33 = v32 + 40;
          *((_QWORD *)v32 + 6) = 0;
          *((_QWORD *)v32 + 8) = *(_QWORD *)v31;
          v34 = (uint64_t ***)(v32 + 64);
          *((_QWORD *)v32 + 3) = v32 + 64;
          *((_QWORD *)v32 + 7) = v32 + 64;
          *((_QWORD *)v32 + 9) = 0;
          v35 = 57;
LABEL_119:
          v32[80] = v35;
          v32[81] = 0;
          *((_WORD *)v32 + 41) = 0;
          *((_DWORD *)v32 + 21) = 2;
          *(_OWORD *)(v32 + 88) = 0u;
          *(_OWORD *)(v32 + 104) = 0u;
          *((_DWORD *)v32 + 30) = 0;
          *(_QWORD *)v32 = v31;
          v99 = *((_QWORD *)v31 + 1);
          v98 = v31 + 8;
          v97 = v99;
          *((_QWORD *)v32 + 1) = v99;
          if (v99)
            *(_QWORD *)(v97 + 16) = v32 + 8;
          *((_QWORD *)v32 + 2) = v98;
          *v98 = v32;
LABEL_122:
          *((_QWORD *)v32 + 4) = v30;
          if (v30)
          {
            v102 = *(_QWORD *)(v30 + 8);
            v101 = (_QWORD *)(v30 + 8);
            v100 = v102;
            *v33 = v102;
            if (v102)
              *(_QWORD *)(v100 + 16) = v33;
            *((_QWORD *)v32 + 6) = v101;
            *v101 = v32 + 32;
          }
LABEL_126:
          v103 = (uint64_t *)&v385;
LABEL_127:
          llvm::Value::setName(v34, (uint64_t)v103);
          return (llvm::UndefValue **)v34;
        }
        v19 = 1;
        while (v18 != (uint64_t ***)-4096)
        {
          v20 = v16 + v19++;
          v16 = v20 & (v15 - 1);
          v18 = *(uint64_t ****)(v14 + 16 * v16);
          if (v18 == v397)
          {
            v17 = (uint64_t ****)(v14 + 16 * v16);
            goto LABEL_36;
          }
        }
      }
      v17 = (uint64_t ****)(v14 + 16 * v15);
      goto LABEL_36;
    }
    v10 = (uint64_t)v399;
  }
  v385 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  v21 = *(_QWORD *)(v10 + 8);
  if (v21 && !*(_QWORD *)(v21 + 8))
  {
    v22 = *(unsigned __int8 *)(v10 + 16);
    if (v22 >= 0x1C)
    {
      v23 = *(_DWORD *)(*(_QWORD *)v10 + 8);
      if ((v23 & 0xFE) == 0x12)
        v23 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v10 + 16) + 8);
      if (v23 == 269)
      {
        if (v22 == 85)
        {
          v36 = *(unsigned __int8 **)(v10 - 32);
          if (v36)
          {
            if (v36[16] <= 0x14u)
            {
              v37 = *(_QWORD *)(v10 - 96);
              v38 = *(_QWORD *)(v10 - 64);
              if (llvm::Constant::isNullValue((llvm::Constant *)v36))
              {
                v39 = v37;
                goto LABEL_44;
              }
            }
          }
        }
        else if (v22 == 56)
        {
          v24 = *(_DWORD *)(v10 + 20);
          if ((v24 & 0x40000000) != 0)
            v25 = *(uint64_t **)(v10 - 8);
          else
            v25 = (uint64_t *)(v10 - 32 * (v24 & 0x7FFFFFF));
          v39 = *v25;
          v38 = v25[4];
LABEL_44:
          if (sub_1C4D9EC28(&v385, 30, v39) && v38)
          {
            *v387 = v38;
            v40 = *(_QWORD *)(a1 + 24);
            if ((*((_BYTE *)v397 + 23) & 0x10) == 0)
            {
              v229 = 0;
              v228 = &byte_1C871356D;
              goto LABEL_360;
            }
            v41 = ***v397;
            v42 = *(_QWORD *)(v41 + 152);
            v43 = *(unsigned int *)(v41 + 168);
            if ((_DWORD)v43)
            {
              LODWORD(v44) = (v43 - 1) & ((v397 >> 4) ^ (v397 >> 9));
              v45 = (uint64_t ****)(v42 + 16 * v44);
              v46 = *v45;
              if (*v45 == v397)
              {
LABEL_359:
                v227 = v45[1];
                v230 = (uint64_t *)*v227;
                v228 = (char *)(v227 + 2);
                v229 = v230;
LABEL_360:
                LOWORD(v389) = 773;
                v385 = (uint64_t *)v228;
                v386 = v229;
                v387 = (uint64_t *)".not";
                v231 = sub_1C506EAA0(v40, (uint64_t)v397, (uint64_t)&v385);
                v232 = (uint64_t)v398;
                True = (uint64_t *)llvm::ConstantInt::getTrue(v9, v233, v234);
                LOWORD(v389) = 257;
                v236 = v232;
                False = (llvm::Value **)v231;
                return (llvm::UndefValue **)sub_1C4FC8748(v236, True, (uint64_t)False, (uint64_t)&v385, 0, 0);
              }
              v47 = 1;
              while (v46 != (uint64_t ***)-4096)
              {
                v48 = v44 + v47++;
                v44 = v48 & (v43 - 1);
                v46 = *(uint64_t ****)(v42 + 16 * v44);
                if (v46 == v397)
                {
                  v45 = (uint64_t ****)(v42 + 16 * v44);
                  goto LABEL_359;
                }
              }
            }
            v45 = (uint64_t ****)(v42 + 16 * v43);
            goto LABEL_359;
          }
        }
      }
    }
    v10 = (uint64_t)v399;
  }
  v385 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  v49 = *(_QWORD *)(v10 + 8);
  if (v49 && !*(_QWORD *)(v49 + 8))
  {
    if ((sub_1C4E76FA0(&v385, 29, v10) & 1) != 0)
    {
      v50 = *(_QWORD *)(a1 + 24);
      if ((*((_BYTE *)v397 + 23) & 0x10) == 0)
      {
        v66 = 0;
        v65 = &byte_1C871356D;
        goto LABEL_77;
      }
      v51 = ***v397;
      v52 = *(_QWORD *)(v51 + 152);
      v53 = *(unsigned int *)(v51 + 168);
      if ((_DWORD)v53)
      {
        LODWORD(v54) = (v53 - 1) & ((v397 >> 4) ^ (v397 >> 9));
        v55 = (uint64_t ****)(v52 + 16 * v54);
        v56 = *v55;
        if (*v55 == v397)
        {
LABEL_76:
          v64 = v55[1];
          v67 = (uint64_t *)*v64;
          v65 = (char *)(v64 + 2);
          v66 = v67;
LABEL_77:
          LOWORD(v389) = 773;
          v385 = (uint64_t *)v65;
          v386 = v66;
          v387 = (uint64_t *)".not";
          v30 = sub_1C506EAA0(v50, (uint64_t)v397, (uint64_t)&v385);
          v31 = v398;
          LOWORD(v389) = 257;
          v32 = (char *)operator new(0x80uLL);
          *((_QWORD *)v32 + 5) = 0;
          v33 = v32 + 40;
          *((_QWORD *)v32 + 6) = 0;
          *((_QWORD *)v32 + 8) = *(_QWORD *)v31;
          v34 = (uint64_t ***)(v32 + 64);
          *((_QWORD *)v32 + 3) = v32 + 64;
          *((_QWORD *)v32 + 7) = v32 + 64;
          *((_QWORD *)v32 + 9) = 0;
          v35 = 56;
          goto LABEL_119;
        }
        v57 = 1;
        while (v56 != (uint64_t ***)-4096)
        {
          v58 = v54 + v57++;
          v54 = v58 & (v53 - 1);
          v56 = *(uint64_t ****)(v52 + 16 * v54);
          if (v56 == v397)
          {
            v55 = (uint64_t ****)(v52 + 16 * v54);
            goto LABEL_76;
          }
        }
      }
      v55 = (uint64_t ****)(v52 + 16 * v53);
      goto LABEL_76;
    }
    v10 = (uint64_t)v399;
  }
  v385 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  v59 = *(_QWORD *)(v10 + 8);
  if (v59 && !*(_QWORD *)(v59 + 8))
  {
    v60 = *(unsigned __int8 *)(v10 + 16);
    if (v60 >= 0x1C)
    {
      v61 = *(_DWORD *)(*(_QWORD *)v10 + 8);
      if ((v61 & 0xFE) == 0x12)
        v61 = *(_DWORD *)(**(_QWORD **)(*(_QWORD *)v10 + 16) + 8);
      if (v61 == 269)
      {
        if (v60 == 85)
        {
          v68 = *(unsigned __int8 **)(v10 - 64);
          if (v68)
          {
            if (v68[16] <= 0x14u)
            {
              v69 = *(_QWORD *)(v10 - 96);
              v70 = *(_QWORD *)(v10 - 32);
              if (llvm::Constant::isOneValue((llvm::Constant *)v68))
              {
                v71 = v69;
                goto LABEL_84;
              }
            }
          }
        }
        else if (v60 == 57)
        {
          v62 = *(_DWORD *)(v10 + 20);
          if ((v62 & 0x40000000) != 0)
            v63 = *(uint64_t **)(v10 - 8);
          else
            v63 = (uint64_t *)(v10 - 32 * (v62 & 0x7FFFFFF));
          v71 = *v63;
          v70 = v63[4];
LABEL_84:
          if (sub_1C4D9EC28(&v385, 30, v71) && v70)
          {
            *v387 = v70;
            v72 = *(_QWORD *)(a1 + 24);
            if ((*((_BYTE *)v397 + 23) & 0x10) == 0)
            {
              v240 = 0;
              v239 = &byte_1C871356D;
              goto LABEL_363;
            }
            v73 = ***v397;
            v74 = *(_QWORD *)(v73 + 152);
            v75 = *(unsigned int *)(v73 + 168);
            if ((_DWORD)v75)
            {
              LODWORD(v76) = (v75 - 1) & ((v397 >> 4) ^ (v397 >> 9));
              v77 = (uint64_t ****)(v74 + 16 * v76);
              v78 = *v77;
              if (*v77 == v397)
              {
LABEL_362:
                v238 = v77[1];
                v241 = (uint64_t *)*v238;
                v239 = (char *)(v238 + 2);
                v240 = v241;
LABEL_363:
                LOWORD(v389) = 773;
                v385 = (uint64_t *)v239;
                v386 = v240;
                v387 = (uint64_t *)".not";
                v242 = sub_1C506EAA0(v72, (uint64_t)v397, (uint64_t)&v385);
                v243 = (uint64_t)v398;
                False = llvm::ConstantInt::getFalse(v9, v244, v245);
                LOWORD(v389) = 257;
                v236 = v243;
                True = (uint64_t *)v242;
                return (llvm::UndefValue **)sub_1C4FC8748(v236, True, (uint64_t)False, (uint64_t)&v385, 0, 0);
              }
              v79 = 1;
              while (v78 != (uint64_t ***)-4096)
              {
                v80 = v76 + v79++;
                v76 = v80 & (v75 - 1);
                v78 = *(uint64_t ****)(v74 + 16 * v76);
                if (v78 == v397)
                {
                  v77 = (uint64_t ****)(v74 + 16 * v76);
                  goto LABEL_362;
                }
              }
            }
            v77 = (uint64_t ****)(v74 + 16 * v75);
            goto LABEL_362;
          }
        }
      }
    }
    v10 = (uint64_t)v399;
  }
  if (!v10 || (v81 = *(unsigned __int8 *)(v10 + 16), v81 < 0x1C) || v81 - 59 < 0xFFFFFFEE)
  {
LABEL_267:
    v185 = *(uint64_t **)(v10 + 8);
    if (v185)
    {
      if (!v185[1])
      {
        v201 = *(unsigned __int8 *)(v10 + 16);
        if (v201 >= 0x1C && v201 - 83 >= 0xFFFFFFFE)
        {
          *(_WORD *)(v10 + 18) = word_1C8660AFA[*(_WORD *)(v10 + 18) & 0x3FLL] | *(_WORD *)(v10 + 18) & 0xFFC0;
LABEL_326:
          v214 = a1;
          v215 = (llvm::ValueAsMetadata *)a2;
          BinaryIntrinsic = (llvm::Value *)v10;
          return sub_1C577F888(v214, v215, BinaryIntrinsic);
        }
      }
    }
    if (*(_BYTE *)(v10 + 16) != 84
      || (v186 = *(_QWORD *)(v10 - 32)) == 0
      || *(_BYTE *)(v186 + 16)
      || *(_QWORD *)(v186 + 24) != *(_QWORD *)(v10 + 72)
      || (*(_BYTE *)(v186 + 33) & 0x20) == 0)
    {
      if (!v185)
        goto LABEL_518;
      goto LABEL_275;
    }
    if (!v185 || v185[1])
      goto LABEL_518;
    v385 = (uint64_t *)&v398;
    v386 = (uint64_t *)&v397;
    v387 = (uint64_t *)&v398;
    v388 = (uint64_t *)&v397;
    v389 = (uint64_t *)&v398;
    v390 = (uint64_t *)&v397;
    v391[0] = &v398;
    v391[1] = &v397;
    if ((sub_1C4E79DC8(&v385, v10) & 1) != 0
      || (sub_1C4E79EE4(&v387, v10) & 1) != 0
      || (sub_1C4E7A018(&v389, v10) & 1) != 0
      || sub_1C4E7A140(v391, v10))
    {
      v202 = *((_QWORD *)v398 + 1);
      v203 = v202 && *(_QWORD *)(v202 + 8) == 0;
      if (sub_1C579CB78((uint64_t)v398, v203))
      {
        v263 = v397[1];
        v264 = v263 && v263[1] == 0;
        if (sub_1C579CB78((uint64_t)v397, v264))
        {
          v265 = *(_DWORD *)(*(_QWORD *)(v10 - 32) + 36);
          switch(v265)
          {
            case 306:
              v266 = 305;
              break;
            case 274:
              v266 = 275;
              break;
            case 275:
              v266 = 274;
              break;
            default:
              v266 = 306;
              break;
          }
          v267 = *(_QWORD *)(a1 + 24);
          LOWORD(v389) = 257;
          v268 = sub_1C506EAA0(v267, (uint64_t)v398, (uint64_t)&v385);
          v269 = *(_QWORD *)(a1 + 24);
          LOWORD(v389) = 257;
          v270 = sub_1C506EAA0(v269, (uint64_t)v397, (uint64_t)&v385);
          v271 = *(uint64_t **)(a1 + 24);
          LOWORD(v389) = 257;
          v272 = v266;
          v273 = (uint64_t *)v268;
LABEL_505:
          BinaryIntrinsic = (llvm::Value *)llvm::IRBuilderBase::CreateBinaryIntrinsic(v271, v272, v273, v270, 0, (uint64_t)&v385);
          v214 = a1;
          v215 = (llvm::ValueAsMetadata *)a2;
          return sub_1C577F888(v214, v215, BinaryIntrinsic);
        }
      }
    }
    v274 = (uint64_t)v399;
    v385 = (uint64_t *)&v398;
    v387 = (uint64_t *)&v397;
    v388 = (uint64_t *)&v398;
    v390 = (uint64_t *)&v397;
    v391[0] = &v398;
    v392 = (uint64_t *)&v397;
    v393[0] = &v398;
    v394 = (uint64_t *)&v397;
    v275 = *((unsigned __int8 *)v399 + 16);
    if (v275 != 85)
    {
      if (v275 != 84)
        goto LABEL_425;
      v276 = (uint64_t)*(v399 - 4);
      if (!v276)
        goto LABEL_517;
      if (!*(_BYTE *)(v276 + 16)
        && *(uint64_t **)(v276 + 24) == v399[9]
        && (*(_BYTE *)(v276 + 33) & 0x20) != 0
        && *(_DWORD *)(v276 + 36) == 274)
      {
        v277 = &v387;
        v278 = (uint64_t)v399;
        v279 = (uint64_t *)&v399[-4 * (*((_DWORD *)v399 + 5) & 0x7FFFFFF)];
        v280 = *v279;
        v281 = v279[4];
LABEL_417:
        if (sub_1C4D9EC28(&v385, 30, v280) && v281)
        {
          v280 = v281;
LABEL_501:
          v287 = v277;
          goto LABEL_502;
        }
        v286 = sub_1C4D9EC28(&v385, 30, v281);
        v274 = v278;
        if (v280)
        {
          v287 = &v387;
          if ((v286 & 1) != 0)
            goto LABEL_502;
        }
      }
LABEL_424:
      v275 = *(unsigned __int8 *)(v274 + 16);
LABEL_425:
      if (v275 == 85)
      {
        v294 = *(_QWORD *)(v274 - 96);
        if (v294 && *(_BYTE *)(v294 + 16) == 81)
        {
          if ((v295 = *(_QWORD *)(v274 - 64),
                v296 = *(_QWORD *)(v274 - 32),
                v280 = *(_QWORD *)(v294 - 64),
                v297 = *(_QWORD *)(v294 - 32),
                v295 == v280)
            && v296 == v297
            || v295 == v297 && v296 == v280)
          {
            v298 = *(_WORD *)(v294 + 18) & 0x3E;
            if (v295 == v280)
            {
              if (v298 != 40)
                goto LABEL_451;
            }
            else if (v298 != 38)
            {
              goto LABEL_451;
            }
            v299 = v274;
            v277 = &v390;
            v384 = v297;
            if (sub_1C4D9EC28(&v388, 30, v280) && v384)
              goto LABEL_500;
            v300 = sub_1C4D9EC28(&v388, 30, v384);
            v274 = v299;
            if (v280)
            {
              v287 = &v390;
              if ((v300 & 1) != 0)
                goto LABEL_502;
            }
          }
        }
      }
      else if (v275 == 84)
      {
        v288 = *(_QWORD *)(v274 - 32);
        if (v288)
        {
          if (!*(_BYTE *)(v288 + 16)
            && *(_QWORD *)(v288 + 24) == *(_QWORD *)(v274 + 72)
            && (*(_BYTE *)(v288 + 33) & 0x20) != 0
            && *(_DWORD *)(v288 + 36) == 275)
          {
            v289 = &v390;
            v290 = v274;
            v291 = (uint64_t *)(v274 - 32 * (*(_DWORD *)(v274 + 20) & 0x7FFFFFF));
            v280 = *v291;
            v292 = v291[4];
            if (sub_1C4D9EC28(&v388, 30, *v291) && v292)
              goto LABEL_487;
            v293 = sub_1C4D9EC28(&v388, 30, v292);
            v274 = v290;
            if (v280)
            {
              v287 = &v390;
              if ((v293 & 1) != 0)
                goto LABEL_502;
            }
          }
        }
      }
LABEL_451:
      v301 = *(unsigned __int8 *)(v274 + 16);
      if (v301 != 85)
      {
        if (v301 != 84)
        {
LABEL_478:
          if (v301 != 85)
          {
            if (v301 != 84)
              goto LABEL_517;
            v313 = *(_QWORD *)(v274 - 32);
            if (!v313
              || *(_BYTE *)(v313 + 16)
              || *(_QWORD *)(v313 + 24) != *(_QWORD *)(v274 + 72)
              || (*(_BYTE *)(v313 + 33) & 0x20) == 0
              || *(_DWORD *)(v313 + 36) != 306)
            {
              goto LABEL_517;
            }
            v289 = &v394;
            v314 = (uint64_t *)(v274 - 32 * (*(_DWORD *)(v274 + 20) & 0x7FFFFFF));
            v280 = *v314;
            v292 = v314[4];
            if (sub_1C4D9EC28(v393, 30, *v314) && v292)
            {
LABEL_487:
              v280 = v292;
              v287 = v289;
              goto LABEL_502;
            }
            v324 = sub_1C4D9EC28(v393, 30, v292);
            if (!v280 || (v287 = &v394, (v324 & 1) == 0))
            {
LABEL_517:
              v10 = (uint64_t)v399;
              v185 = v399[1];
              if (!v185)
                goto LABEL_518;
LABEL_275:
              if (v185[1] || *(_BYTE *)(v10 + 16) != 85)
                goto LABEL_518;
              v188 = (uint64_t *)(v10 - 64);
              v187 = *(_QWORD *)(v10 - 64);
              v190 = (uint64_t *)(v10 - 32);
              v189 = *(_QWORD *)(v10 - 32);
              v191 = *(unsigned __int8 *)(v187 + 16);
              if (v191 - 81 < 2 && v191 > 0x1B)
                v193 = *(_QWORD *)(v10 - 64);
              else
                v193 = 0;
              v194 = *(unsigned __int8 *)(v189 + 16);
              if (v194 - 81 < 2 && v194 > 0x1B)
                v196 = *(_QWORD *)(v10 - 32);
              else
                v196 = 0;
              if (v193 && (v197 = *(_QWORD *)(v193 + 8)) != 0 && !*(_QWORD *)(v197 + 8))
              {
                v198 = 1;
                if (!v196)
                  goto LABEL_295;
              }
              else
              {
                v198 = v191 < 0x15;
                if (!v196)
                  goto LABEL_295;
              }
              v199 = *(_QWORD *)(v196 + 8);
              if (v199 && !*(_QWORD *)(v199 + 8))
              {
                v200 = 0;
                if (!v198)
                  goto LABEL_518;
                goto LABEL_296;
              }
LABEL_295:
              v200 = v194 > 0x14;
              if (!v198)
                goto LABEL_518;
LABEL_296:
              if (!v200)
              {
                if (v193)
                {
                  *(_WORD *)(v193 + 18) = word_1C8660AFA[*(_WORD *)(v193 + 18) & 0x3FLL] | *(_WORD *)(v193 + 18) & 0xFFC0;
                }
                else
                {
                  Not = llvm::ConstantExpr::getNot((llvm::Constant **)v187, (llvm::Constant *)v5);
                  if (*v188)
                  {
                    **(_QWORD **)(v10 - 48) = *(_QWORD *)(v10 - 56);
                    v205 = *(_QWORD *)(v10 - 56);
                    if (v205)
                      *(_QWORD *)(v205 + 16) = *(_QWORD *)(v10 - 48);
                  }
                  *v188 = Not;
                  if (Not)
                  {
                    v208 = *(_QWORD *)(Not + 8);
                    v206 = (uint64_t **)(Not + 8);
                    v207 = v208;
                    *(_QWORD *)(v10 - 56) = v208;
                    if (v208)
                      *(_QWORD *)(v207 + 16) = v10 - 56;
                    *(_QWORD *)(v10 - 48) = v206;
                    *v206 = v188;
                  }
                }
                if (v196)
                {
                  *(_WORD *)(v196 + 18) = word_1C8660AFA[*(_WORD *)(v196 + 18) & 0x3FLL] | *(_WORD *)(v196 + 18) & 0xFFC0;
                }
                else
                {
                  v209 = llvm::ConstantExpr::getNot((llvm::Constant **)v189, (llvm::Constant *)v5);
                  if (*v190)
                  {
                    **(_QWORD **)(v10 - 16) = *(_QWORD *)(v10 - 24);
                    v210 = *(_QWORD *)(v10 - 24);
                    if (v210)
                      *(_QWORD *)(v210 + 16) = *(_QWORD *)(v10 - 16);
                  }
                  *v190 = v209;
                  if (v209)
                  {
                    v213 = *(_QWORD *)(v209 + 8);
                    v211 = (uint64_t **)(v209 + 8);
                    v212 = v213;
                    *(_QWORD *)(v10 - 24) = v213;
                    if (v213)
                      *(_QWORD *)(v212 + 16) = v10 - 24;
                    *(_QWORD *)(v10 - 16) = v211;
                    *v211 = v190;
                  }
                }
                goto LABEL_326;
              }
LABEL_518:
              v325 = *(_QWORD *)(a1 + 24);
              v395[0] = 0;
              v400 = 0;
              v385 = v395;
              v386 = &v400;
              v326 = *((unsigned __int8 *)a2 + 16);
              if (v326 != 5)
              {
                if (v326 != 58)
                  return 0;
                v327 = (uint64_t)*(a2 - 8);
                v328 = *(_QWORD *)(v327 + 8);
                if (!v328 || *(_QWORD *)(v328 + 8))
                  goto LABEL_522;
                v339 = *(unsigned __int8 *)(v327 + 16);
                if (v339 == 5)
                {
                  if (*(_WORD *)(v327 + 18) != 30)
                    goto LABEL_522;
                  if (!*(_QWORD *)(v327 - 32 * (*(_DWORD *)(v327 + 20) & 0x7FFFFFF)))
                    goto LABEL_522;
                  v395[0] = *(_QWORD *)(v327 - 32 * (*(_DWORD *)(v327 + 20) & 0x7FFFFFF));
                  v340 = *(_QWORD *)(v327 - 32 * (*(_DWORD *)(v327 + 20) & 0x7FFFFFF) + 32);
                  if (!v340)
                    goto LABEL_522;
                }
                else
                {
                  if (v339 != 58)
                    goto LABEL_522;
                  if (!*(_QWORD *)(v327 - 64))
                    goto LABEL_522;
                  v395[0] = *(_QWORD *)(v327 - 64);
                  v340 = *(_QWORD *)(v327 - 32);
                  if (!v340)
                    goto LABEL_522;
                }
                v400 = v340;
                if ((sub_1C4D9ED34((uint64_t)&v387, (llvm::Constant *)*(a2 - 4)) & 1) != 0)
                  goto LABEL_570;
LABEL_522:
                v329 = (uint64_t)*(a2 - 4);
                v330 = *(_QWORD *)(v329 + 8);
                if (!v330 || *(_QWORD *)(v330 + 8))
                  return 0;
                v331 = *(unsigned __int8 *)(v329 + 16);
                if (v331 == 5)
                {
                  if (*(_WORD *)(v329 + 18) != 30)
                    return 0;
                  v346 = *(_QWORD *)(v329 - 32 * (*(_DWORD *)(v329 + 20) & 0x7FFFFFF));
                  if (!v346)
                    return 0;
                  *v385 = v346;
                  v333 = *(_QWORD *)(v329 - 32 * (*(_DWORD *)(v329 + 20) & 0x7FFFFFF) + 32);
                  if (!v333)
                    return 0;
                }
                else
                {
                  if (v331 != 58)
                    return 0;
                  v332 = *(_QWORD *)(v329 - 64);
                  if (!v332)
                    return 0;
                  *v385 = v332;
                  v333 = *(_QWORD *)(v329 - 32);
                  if (!v333)
                    return 0;
                }
                *v386 = v333;
                if ((sub_1C4D9ED34((uint64_t)&v387, (llvm::Constant *)*(a2 - 8)) & 1) != 0)
                {
LABEL_570:
                  v348 = *(_QWORD *)(v395[0] + 8);
                  if (v348)
                    v349 = *(_QWORD *)(v348 + 8) == 0;
                  else
                    v349 = 0;
                  if (sub_1C579CB78(v395[0], v349))
                  {
                    v350 = v395[0];
                  }
                  else
                  {
                    v351 = *(_QWORD *)(v400 + 8);
                    if (v351)
                      v352 = *(_QWORD *)(v351 + 8) == 0;
                    else
                      v352 = 0;
                    if (!sub_1C579CB78(v400, v352))
                      return 0;
                    v353 = v395[0];
                    v350 = v400;
                    v395[0] = v400;
                    v400 = v353;
                  }
                  if ((*(_BYTE *)(v350 + 23) & 0x10) == 0)
                  {
                    v364 = 0;
                    v363 = &byte_1C871356D;
LABEL_589:
                    LOWORD(v389) = 773;
                    v385 = (uint64_t *)v363;
                    v386 = v364;
                    v387 = (uint64_t *)".not";
                    v169 = (_QWORD *)sub_1C506EAA0(v325, v350, (uint64_t)&v385);
                    v170 = v400;
                    if ((*((_BYTE *)a2 + 23) & 0x10) == 0)
                    {
                      v376 = 0;
                      v375 = &byte_1C871356D;
                      goto LABEL_598;
                    }
                    v366 = ***a2;
                    v367 = *(_QWORD *)(v366 + 152);
                    v368 = *(unsigned int *)(v366 + 168);
                    if ((_DWORD)v368)
                    {
                      LODWORD(v369) = (v368 - 1) & ((a2 >> 4) ^ (a2 >> 9));
                      v370 = (uint64_t ****)(v367 + 16 * v369);
                      v371 = *v370;
                      if (*v370 == a2)
                      {
LABEL_597:
                        v374 = v370[1];
                        v377 = (uint64_t *)*v374;
                        v375 = (char *)(v374 + 2);
                        v376 = v377;
LABEL_598:
                        LOWORD(v389) = 773;
                        v385 = (uint64_t *)v375;
                        v386 = v376;
                        v387 = (uint64_t *)".demorgan";
                        v171 = (char *)operator new(0x80uLL);
                        *((_QWORD *)v171 + 5) = 0;
                        v172 = v171 + 40;
                        *((_QWORD *)v171 + 6) = 0;
                        *((_QWORD *)v171 + 8) = *v169;
                        v34 = (uint64_t ***)(v171 + 64);
                        *((_QWORD *)v171 + 3) = v171 + 64;
                        *((_QWORD *)v171 + 7) = v171 + 64;
                        *((_QWORD *)v171 + 9) = 0;
                        v173 = 58;
                        goto LABEL_599;
                      }
                      v372 = 1;
                      while (v371 != (uint64_t ***)-4096)
                      {
                        v373 = v369 + v372++;
                        v369 = v373 & (v368 - 1);
                        v371 = *(uint64_t ****)(v367 + 16 * v369);
                        if (v371 == a2)
                        {
                          v370 = (uint64_t ****)(v367 + 16 * v369);
                          goto LABEL_597;
                        }
                      }
                    }
                    v370 = (uint64_t ****)(v367 + 16 * v368);
                    goto LABEL_597;
                  }
                  v354 = ***(_QWORD ***)v350;
                  v355 = *(_QWORD *)(v354 + 152);
                  v356 = *(unsigned int *)(v354 + 168);
                  if ((_DWORD)v356)
                  {
                    LODWORD(v357) = (v356 - 1) & ((v350 >> 4) ^ (v350 >> 9));
                    v358 = (uint64_t *)(v355 + 16 * v357);
                    v359 = *v358;
                    if (*v358 == v350)
                    {
LABEL_588:
                      v362 = (_QWORD *)v358[1];
                      v365 = (uint64_t *)*v362;
                      v363 = (char *)(v362 + 2);
                      v364 = v365;
                      goto LABEL_589;
                    }
                    v360 = 1;
                    while (v359 != -4096)
                    {
                      v361 = v357 + v360++;
                      v357 = v361 & (v356 - 1);
                      v359 = *(_QWORD *)(v355 + 16 * v357);
                      if (v359 == v350)
                      {
                        v358 = (uint64_t *)(v355 + 16 * v357);
                        goto LABEL_588;
                      }
                    }
                  }
                  v358 = (uint64_t *)(v355 + 16 * v356);
                  goto LABEL_588;
                }
                return 0;
              }
              if (*((_WORD *)a2 + 9) != 30)
                return 0;
              v334 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)];
              v335 = v334[1];
              if (v335 && !v335[1])
              {
                v341 = *((unsigned __int8 *)v334 + 16);
                if (v341 == 5)
                {
                  if (*((_WORD *)v334 + 9) != 30)
                    goto LABEL_532;
                  if (!v334[-4 * (*((_DWORD *)v334 + 5) & 0x7FFFFFF)])
                    goto LABEL_532;
                  v395[0] = (uint64_t)v334[-4 * (*((_DWORD *)v334 + 5) & 0x7FFFFFF)];
                  v342 = (uint64_t)v334[-4 * (*((_DWORD *)v334 + 5) & 0x7FFFFFF) + 4];
                  if (!v342)
                    goto LABEL_532;
                }
                else
                {
                  if (v341 != 58)
                    goto LABEL_532;
                  if (!*(v334 - 8))
                    goto LABEL_532;
                  v395[0] = (uint64_t)*(v334 - 8);
                  v342 = (uint64_t)*(v334 - 4);
                  if (!v342)
                    goto LABEL_532;
                }
                v400 = v342;
                if ((sub_1C4D9EED4((uint64_t)&v387, (llvm::Constant *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4]) & 1) != 0)
                  goto LABEL_570;
              }
LABEL_532:
              v336 = a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF) + 4];
              v337 = v336[1];
              if (!v337 || v337[1])
                return 0;
              v343 = *((unsigned __int8 *)v336 + 16);
              if (v343 == 5)
              {
                if (*((_WORD *)v336 + 9) != 30)
                  return 0;
                v347 = (uint64_t)v336[-4 * (*((_DWORD *)v336 + 5) & 0x7FFFFFF)];
                if (!v347)
                  return 0;
                *v385 = v347;
                v345 = (uint64_t)v336[-4 * (*((_DWORD *)v336 + 5) & 0x7FFFFFF) + 4];
                if (!v345)
                  return 0;
              }
              else
              {
                if (v343 != 58)
                  return 0;
                v344 = (uint64_t)*(v336 - 8);
                if (!v344)
                  return 0;
                *v385 = v344;
                v345 = (uint64_t)*(v336 - 4);
                if (!v345)
                  return 0;
              }
              *v386 = v345;
              if (sub_1C4D9EED4((uint64_t)&v387, (llvm::Constant *)a2[-4 * (*((_DWORD *)a2 + 5) & 0x7FFFFFF)]))goto LABEL_570;
              return 0;
            }
LABEL_502:
            **v287 = v280;
            v320 = *(_DWORD *)(*(_QWORD *)(v10 - 32) + 36);
            switch(v320)
            {
              case 306:
                v321 = 305;
                break;
              case 274:
                v321 = 275;
                break;
              case 275:
                v321 = 274;
                break;
              default:
                v321 = 306;
                break;
            }
            v322 = *(_QWORD *)(a1 + 24);
            LOWORD(v389) = 257;
            v270 = sub_1C506EAA0(v322, (uint64_t)v397, (uint64_t)&v385);
            v271 = *(uint64_t **)(a1 + 24);
            v273 = (uint64_t *)v398;
            LOWORD(v389) = 257;
            v272 = v321;
            goto LABEL_505;
          }
          v315 = *(_QWORD *)(v274 - 96);
          if (!v315 || *(_BYTE *)(v315 + 16) != 81)
            goto LABEL_517;
          v316 = *(_QWORD *)(v274 - 64);
          v317 = *(_QWORD *)(v274 - 32);
          v280 = *(_QWORD *)(v315 - 64);
          v318 = *(_QWORD *)(v315 - 32);
          if ((v316 != v280 || v317 != v318) && (v316 != v318 || v317 != v280))
            goto LABEL_517;
          v277 = &v394;
          v384 = *(_QWORD *)(v315 - 32);
          v319 = *(_WORD *)(v315 + 18) & 0x3E;
          if (v316 == v280)
          {
            if (v319 != 36)
              goto LABEL_517;
          }
          else if (v319 != 34)
          {
            goto LABEL_517;
          }
          if (!sub_1C4D9EC28(v393, 30, v280) || !v384)
          {
            v323 = sub_1C4D9EC28(v393, 30, v384);
            if (!v280)
              goto LABEL_517;
            v287 = &v394;
            if ((v323 & 1) == 0)
              goto LABEL_517;
            goto LABEL_502;
          }
LABEL_500:
          v280 = v384;
          goto LABEL_501;
        }
        v302 = *(_QWORD *)(v274 - 32);
        if (!v302)
          goto LABEL_517;
        if (!*(_BYTE *)(v302 + 16)
          && *(_QWORD *)(v302 + 24) == *(_QWORD *)(v274 + 72)
          && (*(_BYTE *)(v302 + 33) & 0x20) != 0
          && *(_DWORD *)(v302 + 36) == 305)
        {
          v289 = &v392;
          v303 = v274;
          v304 = (uint64_t *)(v274 - 32 * (*(_DWORD *)(v274 + 20) & 0x7FFFFFF));
          v280 = *v304;
          v292 = v304[4];
          if (sub_1C4D9EC28(v391, 30, *v304) && v292)
            goto LABEL_487;
          v305 = sub_1C4D9EC28(v391, 30, v292);
          v274 = v303;
          if (v280)
          {
            v287 = &v392;
            if ((v305 & 1) != 0)
              goto LABEL_502;
          }
        }
LABEL_477:
        v301 = *(unsigned __int8 *)(v274 + 16);
        goto LABEL_478;
      }
      v306 = *(_QWORD *)(v274 - 96);
      if (!v306 || *(_BYTE *)(v306 + 16) != 81)
        goto LABEL_477;
      v307 = *(_QWORD *)(v274 - 64);
      v308 = *(_QWORD *)(v274 - 32);
      v280 = *(_QWORD *)(v306 - 64);
      v309 = *(_QWORD *)(v306 - 32);
      if ((v307 != v280 || v308 != v309) && (v307 != v309 || v308 != v280))
        goto LABEL_477;
      v310 = *(_WORD *)(v306 + 18) & 0x3E;
      if (v307 == v280)
      {
        if (v310 != 34)
          goto LABEL_477;
      }
      else if (v310 != 36)
      {
        goto LABEL_477;
      }
      v311 = v274;
      v277 = &v392;
      v384 = v309;
      if (sub_1C4D9EC28(v391, 30, v280) && v384)
        goto LABEL_500;
      v312 = sub_1C4D9EC28(v391, 30, v384);
      v274 = v311;
      if (v280)
      {
        v287 = &v392;
        if ((v312 & 1) != 0)
          goto LABEL_502;
      }
      goto LABEL_477;
    }
    v282 = (uint64_t)*(v399 - 12);
    if (!v282 || *(_BYTE *)(v282 + 16) != 81)
      goto LABEL_424;
    v283 = (uint64_t)*(v399 - 8);
    v284 = (uint64_t)*(v399 - 4);
    v280 = *(_QWORD *)(v282 - 64);
    v281 = *(_QWORD *)(v282 - 32);
    if ((v283 != v280 || v284 != v281) && (v283 != v281 || v284 != v280))
      goto LABEL_424;
    v285 = *(_WORD *)(v282 + 18) & 0x3E;
    if (v283 == v280)
    {
      if (v285 != 38)
        goto LABEL_424;
    }
    else if (v285 != 40)
    {
      goto LABEL_424;
    }
    v278 = (uint64_t)v399;
    v277 = &v387;
    goto LABEL_417;
  }
  if ((v81 & 0xFE) == 0x38)
  {
    v82 = *(_QWORD *)(v10 - 64);
    v83 = *(_QWORD *)(v82 + 8);
    v84 = v83 && *(_QWORD *)(v83 + 8) == 0;
    if (sub_1C579CB78(v82, v84))
    {
      v85 = *(_QWORD *)(v10 - 32);
      v86 = *(_QWORD *)(v85 + 8);
      v87 = v86 && *(_QWORD *)(v86 + 8) == 0;
      if (sub_1C579CB78(v85, v87))
      {
        v88 = *(_QWORD *)(a1 + 24);
        v89 = *(_QWORD *)(v10 - 64);
        v385 = (uint64_t *)"notlhs";
        LOWORD(v389) = 259;
        v90 = (_QWORD *)sub_1C506EAA0(v88, v89, (uint64_t)&v385);
        v91 = *(_QWORD *)(a1 + 24);
        v92 = *(_QWORD *)(v10 - 32);
        v385 = (uint64_t *)"notrhs";
        LOWORD(v389) = 259;
        v30 = sub_1C506EAA0(v91, v92, (uint64_t)&v385);
        if (*(_BYTE *)(v10 + 16) == 56)
        {
          LOWORD(v389) = 257;
          v32 = (char *)operator new(0x80uLL);
          *((_QWORD *)v32 + 5) = 0;
          v33 = v32 + 40;
          *((_QWORD *)v32 + 6) = 0;
          *((_QWORD *)v32 + 8) = *v90;
          v34 = (uint64_t ***)(v32 + 64);
          *((_QWORD *)v32 + 3) = v32 + 64;
          *((_QWORD *)v32 + 7) = v32 + 64;
          *((_QWORD *)v32 + 9) = 0;
          v93 = 57;
LABEL_209:
          v32[80] = v93;
          v32[81] = 0;
          *((_WORD *)v32 + 41) = 0;
          *((_DWORD *)v32 + 21) = 2;
          *(_OWORD *)(v32 + 88) = 0u;
          *(_OWORD *)(v32 + 104) = 0u;
          *((_DWORD *)v32 + 30) = 0;
          *(_QWORD *)v32 = v90;
          v151 = v90[1];
          v150 = v90 + 1;
          v149 = v151;
          *((_QWORD *)v32 + 1) = v151;
          if (v151)
            *(_QWORD *)(v149 + 16) = v32 + 8;
          *((_QWORD *)v32 + 2) = v150;
          *v150 = v32;
          goto LABEL_122;
        }
        LOWORD(v389) = 257;
LABEL_208:
        v32 = (char *)operator new(0x80uLL);
        *((_QWORD *)v32 + 5) = 0;
        v33 = v32 + 40;
        *((_QWORD *)v32 + 6) = 0;
        *((_QWORD *)v32 + 8) = *v90;
        v34 = (uint64_t ***)(v32 + 64);
        *((_QWORD *)v32 + 3) = v32 + 64;
        *((_QWORD *)v32 + 7) = v32 + 64;
        *((_QWORD *)v32 + 9) = 0;
        v93 = 56;
        goto LABEL_209;
      }
    }
  }
  v386 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  v94 = *(_QWORD *)(v10 + 8);
  if (v94 && !*(_QWORD *)(v94 + 8))
  {
    v120 = *(unsigned __int8 *)(v10 + 16);
    if (v120 != 5)
    {
      if (v120 != 57)
        goto LABEL_110;
      v121 = *(_QWORD *)(v10 - 64);
      v122 = *(_QWORD *)(v121 + 8);
      if (!v122 || *(_QWORD *)(v122 + 8))
        goto LABEL_168;
      v218 = *(unsigned __int8 *)(v121 + 16);
      if (v218 == 5)
      {
        if (*(_WORD *)(v121 + 18) != 15)
          goto LABEL_168;
        if (!sub_1C4E71060((uint64_t)&v385, *(llvm::Constant **)(v121 - 32 * (*(_DWORD *)(v121 + 20) & 0x7FFFFFF))))goto LABEL_168;
        v219 = *(_QWORD *)(v121 - 32 * (*(_DWORD *)(v121 + 20) & 0x7FFFFFF) + 32);
        if (!v219)
          goto LABEL_168;
      }
      else if (v218 != 43
             || !sub_1C4D8AC3C((uint64_t)&v385, *(llvm::Constant **)(v121 - 64))
             || (v219 = *(_QWORD *)(v121 - 32)) == 0)
      {
LABEL_168:
        v123 = *(_QWORD *)(v10 - 32);
        v124 = *(_QWORD *)(v123 + 8);
        if (!v124 || *(_QWORD *)(v124 + 8))
          goto LABEL_110;
        v125 = *(unsigned __int8 *)(v123 + 16);
        if (v125 == 5)
        {
          if (*(_WORD *)(v123 + 18) != 15)
            goto LABEL_110;
          if (!sub_1C4E71060((uint64_t)&v385, *(llvm::Constant **)(v123 - 32 * (*(_DWORD *)(v123 + 20) & 0x7FFFFFF))))goto LABEL_110;
          v126 = *(_QWORD *)(v123 - 32 * (*(_DWORD *)(v123 + 20) & 0x7FFFFFF) + 32);
          if (!v126)
            goto LABEL_110;
        }
        else
        {
          if (v125 != 43)
            goto LABEL_110;
          if (!sub_1C4D8AC3C((uint64_t)&v385, *(llvm::Constant **)(v123 - 64)))
            goto LABEL_110;
          v126 = *(_QWORD *)(v123 - 32);
          if (!v126)
            goto LABEL_110;
        }
        *v386 = v126;
        v226 = *(_QWORD *)(v10 - 64);
        if (!v226)
          goto LABEL_110;
        goto LABEL_378;
      }
      *v386 = v219;
      v226 = *(_QWORD *)(v10 - 32);
      if (v226)
        goto LABEL_378;
      goto LABEL_168;
    }
    if (*(_WORD *)(v10 + 18) != 29)
      goto LABEL_110;
    v143 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
    v144 = *(_QWORD *)(v143 + 8);
    if (!v144 || *(_QWORD *)(v144 + 8))
    {
LABEL_200:
      v145 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
      v146 = *(_QWORD *)(v145 + 8);
      if (!v146 || *(_QWORD *)(v146 + 8))
        goto LABEL_110;
      v147 = *(unsigned __int8 *)(v145 + 16);
      if (v147 == 5)
      {
        if (*(_WORD *)(v145 + 18) != 15)
          goto LABEL_110;
        if (!sub_1C4E71060((uint64_t)&v385, *(llvm::Constant **)(v145 - 32 * (*(_DWORD *)(v145 + 20) & 0x7FFFFFF))))goto LABEL_110;
        v148 = *(_QWORD *)(v145 - 32 * (*(_DWORD *)(v145 + 20) & 0x7FFFFFF) + 32);
        if (!v148)
          goto LABEL_110;
      }
      else
      {
        if (v147 != 43)
          goto LABEL_110;
        if (!sub_1C4D8AC3C((uint64_t)&v385, *(llvm::Constant **)(v145 - 64)))
          goto LABEL_110;
        v148 = *(_QWORD *)(v145 - 32);
        if (!v148)
          goto LABEL_110;
      }
      *v386 = v148;
      v226 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
      if (!v226)
        goto LABEL_110;
LABEL_378:
      *v387 = v226;
      v250 = *(_QWORD *)(a1 + 24);
      v251 = v398;
      AllOnesValue = llvm::Constant::getAllOnesValue((llvm::Constant *)v9, (llvm::Type *)v5);
      v396 = 257;
      v90 = (_QWORD *)(*(uint64_t (**)(_QWORD, unsigned __int8 *, llvm::ValueHandleBase *, _QWORD, _QWORD))(**(_QWORD **)(v250 + 72) + 16))(*(_QWORD *)(v250 + 72), v251, AllOnesValue, 0, 0);
      if (!v90)
      {
        LOWORD(v389) = 257;
        v253 = (char *)operator new(0x80uLL);
        *((_QWORD *)v253 + 5) = 0;
        v254 = v253 + 40;
        *((_QWORD *)v253 + 6) = 0;
        *((_QWORD *)v253 + 8) = *(_QWORD *)v251;
        v255 = (uint64_t)(v253 + 64);
        *((_QWORD *)v253 + 3) = v253 + 64;
        *((_QWORD *)v253 + 7) = v253 + 64;
        *((_QWORD *)v253 + 9) = 0;
        v253[80] = 41;
        v253[81] = 0;
        *((_WORD *)v253 + 41) = 0;
        *((_DWORD *)v253 + 21) = 2;
        *(_OWORD *)(v253 + 88) = 0u;
        *(_OWORD *)(v253 + 104) = 0u;
        *((_DWORD *)v253 + 30) = 0;
        *(_QWORD *)v253 = v251;
        v258 = *((_QWORD *)v251 + 1);
        v257 = v251 + 8;
        v256 = v258;
        *((_QWORD *)v253 + 1) = v258;
        if (v258)
          *(_QWORD *)(v256 + 16) = v253 + 8;
        *((_QWORD *)v253 + 2) = v257;
        *v257 = v253;
        *((_QWORD *)v253 + 4) = AllOnesValue;
        if (AllOnesValue)
        {
          v261 = *((_QWORD *)AllOnesValue + 1);
          v260 = (_QWORD *)((char *)AllOnesValue + 8);
          v259 = v261;
          *v254 = v261;
          if (v261)
            *(_QWORD *)(v259 + 16) = v254;
          *((_QWORD *)v253 + 6) = v260;
          *v260 = v253 + 32;
        }
        llvm::Value::setName((uint64_t ***)v253 + 8, (uint64_t)&v385);
        v90 = (_QWORD *)sub_1C4773754((uint64_t *)v250, v255, (uint64_t)v395);
      }
      v262 = *(_QWORD *)(a1 + 24);
      LOWORD(v389) = 257;
      v30 = sub_1C506EAA0(v262, (uint64_t)v397, (uint64_t)&v385);
      LOWORD(v389) = 257;
      goto LABEL_208;
    }
    v220 = *(unsigned __int8 *)(v143 + 16);
    if (v220 == 5)
    {
      if (*(_WORD *)(v143 + 18) != 15)
        goto LABEL_200;
      if (!sub_1C4E71060((uint64_t)&v385, *(llvm::Constant **)(v143 - 32 * (*(_DWORD *)(v143 + 20) & 0x7FFFFFF))))goto LABEL_200;
      v221 = *(_QWORD *)(v143 - 32 * (*(_DWORD *)(v143 + 20) & 0x7FFFFFF) + 32);
      if (!v221)
        goto LABEL_200;
    }
    else
    {
      if (v220 != 43)
        goto LABEL_200;
      if (!sub_1C4D8AC3C((uint64_t)&v385, *(llvm::Constant **)(v143 - 64)))
        goto LABEL_200;
      v221 = *(_QWORD *)(v143 - 32);
      if (!v221)
        goto LABEL_200;
    }
    *v386 = v221;
    v226 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
    if (v226)
      goto LABEL_378;
    goto LABEL_200;
  }
LABEL_110:
  v385 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  v95 = *(unsigned __int8 *)(v10 + 16);
  if (v95 != 5)
  {
    if (v95 != 55)
      goto LABEL_128;
    if (!sub_1C4D9EC28(&v385, 30, *(_QWORD *)(v10 - 64)))
      goto LABEL_128;
    v96 = *(_QWORD *)(v10 - 32);
    if (!v96)
      goto LABEL_128;
LABEL_118:
    *v387 = v96;
    v30 = (uint64_t)v397;
    v31 = v398;
    LOWORD(v389) = 257;
    v32 = (char *)operator new(0x80uLL);
    *((_QWORD *)v32 + 5) = 0;
    v33 = v32 + 40;
    *((_QWORD *)v32 + 6) = 0;
    *((_QWORD *)v32 + 8) = *(_QWORD *)v31;
    v34 = (uint64_t ***)(v32 + 64);
    *((_QWORD *)v32 + 3) = v32 + 64;
    *((_QWORD *)v32 + 7) = v32 + 64;
    *((_QWORD *)v32 + 9) = 0;
    v35 = 55;
    goto LABEL_119;
  }
  if (*(_WORD *)(v10 + 18) == 27)
  {
    if (sub_1C4D9EC28(&v385, 30, *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF))))
    {
      v96 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32);
      if (v96)
        goto LABEL_118;
    }
  }
LABEL_128:
  v104 = *(unsigned __int8 *)(v10 + 16);
  if (v104 == 5)
  {
    if (*(_WORD *)(v10 + 18) != 27)
      goto LABEL_139;
    v107 = v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF);
    v105 = *(unsigned __int8 **)v107;
    if (!*(_QWORD *)v107)
      goto LABEL_139;
    v106 = *(_QWORD *)(v107 + 32);
    if (!v106)
      goto LABEL_139;
  }
  else
  {
    if (v104 != 55)
      goto LABEL_139;
    v105 = *(unsigned __int8 **)(v10 - 64);
    if (!v105)
      goto LABEL_139;
    if (v105[16] > 0x14u)
      goto LABEL_139;
    v106 = *(_QWORD *)(v10 - 32);
    if (!v106)
      goto LABEL_139;
  }
  v397 = (uint64_t ***)v106;
  if ((sub_1C4E7C5D8((uint64_t)&v385, (llvm::Constant *)v105) & 1) != 0)
  {
    if (((_DWORD)v9[1] & 0xFE) == 0x12)
      v9 = (uint64_t **)*v9[2];
    v222 = llvm::Constant::getAllOnesValue((llvm::Constant *)v9, (llvm::Type *)v5);
    v224 = (llvm::Constant **)llvm::Constant::replaceUndefsWith((llvm::Constant *)v105, v222, v223);
    v169 = (_QWORD *)llvm::ConstantExpr::getNot(v224, v225);
    v170 = (uint64_t)v397;
    LOWORD(v389) = 257;
    v171 = (char *)operator new(0x80uLL);
    *((_QWORD *)v171 + 5) = 0;
    v172 = v171 + 40;
    *((_QWORD *)v171 + 6) = 0;
    *((_QWORD *)v171 + 8) = *v169;
    v34 = (uint64_t ***)(v171 + 64);
    *((_QWORD *)v171 + 3) = v171 + 64;
    *((_QWORD *)v171 + 7) = v171 + 64;
    *((_QWORD *)v171 + 9) = 0;
    v173 = 54;
    goto LABEL_599;
  }
  v104 = *(unsigned __int8 *)(v10 + 16);
LABEL_139:
  if (v104 == 5)
  {
    v111 = *(unsigned __int16 *)(v10 + 18);
    if (v111 != 26)
    {
LABEL_158:
      if (v111 != 15)
      {
        if (v111 == 13)
        {
          v118 = (uint64_t *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF));
          if (*v118)
          {
            v398 = (unsigned __int8 *)*v118;
            v119 = v118[4];
            if (!v119)
              goto LABEL_252;
            if (*(_BYTE *)(v119 + 16) != 5)
              goto LABEL_251;
          }
          else
          {
            v119 = v118[4];
            if (!v119)
              goto LABEL_252;
          }
          v398 = (unsigned __int8 *)v119;
          v119 = *v118;
          if (*v118)
          {
            v104 = *(unsigned __int8 *)(v119 + 16);
            if (v104 != 5)
            {
LABEL_251:
              v169 = (_QWORD *)llvm::ConstantExpr::getNot((llvm::Constant **)v119, (llvm::Constant *)v5);
              v170 = (uint64_t)v398;
              LOWORD(v389) = 257;
              v171 = (char *)operator new(0x80uLL);
              *((_QWORD *)v171 + 5) = 0;
              v172 = v171 + 40;
              *((_QWORD *)v171 + 6) = 0;
              *((_QWORD *)v171 + 8) = *v169;
              v34 = (uint64_t ***)(v171 + 64);
              *((_QWORD *)v171 + 3) = v171 + 64;
              *((_QWORD *)v171 + 7) = v171 + 64;
              *((_QWORD *)v171 + 9) = 0;
              v173 = 43;
LABEL_599:
              v171[80] = v173;
              v171[81] = 0;
              *((_WORD *)v171 + 41) = 0;
              *((_DWORD *)v171 + 21) = 2;
              *(_OWORD *)(v171 + 88) = 0u;
              *(_OWORD *)(v171 + 104) = 0u;
              *((_DWORD *)v171 + 30) = 0;
              *(_QWORD *)v171 = v169;
              v380 = v169[1];
              v379 = v169 + 1;
              v378 = v380;
              *((_QWORD *)v171 + 1) = v380;
              if (v380)
                *(_QWORD *)(v378 + 16) = v171 + 8;
              *((_QWORD *)v171 + 2) = v379;
              *v379 = v171;
              *((_QWORD *)v171 + 4) = v170;
              if (v170)
              {
                v383 = *(_QWORD *)(v170 + 8);
                v382 = (_QWORD *)(v170 + 8);
                v381 = v383;
                *v172 = v383;
                if (v383)
                  *(_QWORD *)(v381 + 16) = v172;
                *((_QWORD *)v171 + 6) = v382;
                *v382 = v171 + 32;
              }
              goto LABEL_126;
            }
            goto LABEL_253;
          }
        }
LABEL_252:
        v104 = 5;
        goto LABEL_253;
      }
      v131 = v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF);
      v5 = *(unsigned __int8 **)v131;
      if (!*(_QWORD *)v131)
        goto LABEL_252;
      v398 = *(unsigned __int8 **)v131;
      v127 = *(_QWORD *)(v131 + 32);
      v104 = 5;
      if (!v127)
        goto LABEL_253;
LABEL_189:
      v397 = (uint64_t ***)v127;
      if (v5[16] < 0x15u || (v168 = *(_QWORD *)(v10 + 8)) != 0 && !*(_QWORD *)(v168 + 8))
      {
        v132 = *(_QWORD *)(a1 + 24);
        LOWORD(v389) = 257;
        v133 = (_QWORD *)sub_1C506EAA0(v132, (uint64_t)v5, (uint64_t)&v385);
        v134 = (uint64_t)v397;
        v396 = 257;
        v135 = (char *)operator new(0x80uLL);
        *((_QWORD *)v135 + 5) = 0;
        v136 = v135 + 40;
        *((_QWORD *)v135 + 6) = 0;
        *((_QWORD *)v135 + 8) = *v133;
        v34 = (uint64_t ***)(v135 + 64);
        *((_QWORD *)v135 + 3) = v135 + 64;
        *((_QWORD *)v135 + 7) = v135 + 64;
        *((_QWORD *)v135 + 9) = 0;
        v135[80] = 41;
        v135[81] = 0;
        *((_WORD *)v135 + 41) = 0;
        *((_DWORD *)v135 + 21) = 2;
        *(_OWORD *)(v135 + 88) = 0u;
        *(_OWORD *)(v135 + 104) = 0u;
        *((_DWORD *)v135 + 30) = 0;
        *(_QWORD *)v135 = v133;
        v139 = v133[1];
        v138 = v133 + 1;
        v137 = v139;
        *((_QWORD *)v135 + 1) = v139;
        if (v139)
          *(_QWORD *)(v137 + 16) = v135 + 8;
        *((_QWORD *)v135 + 2) = v138;
        *v138 = v135;
        *((_QWORD *)v135 + 4) = v134;
        if (v134)
        {
          v142 = *(_QWORD *)(v134 + 8);
          v141 = (_QWORD *)(v134 + 8);
          v140 = v142;
          *v136 = v142;
          if (v142)
            *(_QWORD *)(v140 + 16) = v136;
          *((_QWORD *)v135 + 6) = v141;
          *v141 = v135 + 32;
        }
        v103 = v395;
        goto LABEL_127;
      }
      goto LABEL_253;
    }
    v112 = v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF);
    v108 = *(unsigned __int8 **)v112;
    if (!*(_QWORD *)v112)
      goto LABEL_252;
    v110 = *(_QWORD *)(v112 + 32);
    if (!v110)
      goto LABEL_252;
    v109 = v108[16];
  }
  else
  {
    if (v104 != 54)
      goto LABEL_154;
    v108 = *(unsigned __int8 **)(v10 - 64);
    if (!v108)
      goto LABEL_253;
    v109 = v108[16];
    if (v109 > 0x14)
      goto LABEL_253;
    v110 = *(_QWORD *)(v10 - 32);
    if (!v110)
    {
      v104 = 54;
      goto LABEL_253;
    }
  }
  v397 = (uint64_t ***)v110;
  SplatValue = (llvm::APFloatBase *)v108;
  if (v109 == 16)
    goto LABEL_150;
  v152 = *(_QWORD *)v108;
  if (*(_QWORD *)v108 && (*(_DWORD *)(v152 + 8) & 0xFE) == 0x12)
  {
    SplatValue = llvm::Constant::getSplatValue((llvm::Constant *)v108, 0);
    if (SplatValue && *((_BYTE *)SplatValue + 16) == 16)
    {
LABEL_150:
      v115 = *((_QWORD *)SplatValue + 3);
      v114 = (char *)SplatValue + 24;
      v116 = *((_DWORD *)v114 + 2);
      v117 = (_QWORD *)(v115 + 8 * ((v116 - 1) >> 6));
      if (v116 < 0x41)
        v117 = v114;
      if (((*v117 >> (v116 - 1)) & 1) == 0)
      {
LABEL_366:
        if (((_DWORD)v9[1] & 0xFE) == 0x12)
          v9 = (uint64_t **)*v9[2];
        NullValue = llvm::Constant::getNullValue((llvm::Constant *)v9, (llvm::Type *)v5);
        v248 = (llvm::Constant **)llvm::Constant::replaceUndefsWith((llvm::Constant *)v108, (llvm::Constant *)NullValue, v247);
        v169 = (_QWORD *)llvm::ConstantExpr::getNot(v248, v249);
        v170 = (uint64_t)v397;
        LOWORD(v389) = 257;
        v171 = (char *)operator new(0x80uLL);
        *((_QWORD *)v171 + 5) = 0;
        v172 = v171 + 40;
        *((_QWORD *)v171 + 6) = 0;
        *((_QWORD *)v171 + 8) = *v169;
        v34 = (uint64_t ***)(v171 + 64);
        *((_QWORD *)v171 + 3) = v171 + 64;
        *((_QWORD *)v171 + 7) = v171 + 64;
        *((_QWORD *)v171 + 9) = 0;
        v173 = 55;
        goto LABEL_599;
      }
      goto LABEL_153;
    }
    if (*(_BYTE *)(v152 + 8) == 18)
    {
      v153 = *(_DWORD *)(v152 + 32);
      if (v153)
      {
        v154 = 0;
        v155 = 0;
        v156 = -v153;
LABEL_219:
        ++v154;
        while (1)
        {
          AggregateElement = llvm::Constant::getAggregateElement((llvm::Constant *)v108, (llvm::Type *)(v154 - 1));
          if (!AggregateElement)
            break;
          v158 = *((unsigned __int8 *)AggregateElement + 16);
          if ((v158 - 11) >= 2)
          {
            if (v158 != 16)
              break;
            v160 = *((_QWORD *)AggregateElement + 3);
            v159 = (char *)AggregateElement + 24;
            v161 = *((_DWORD *)v159 + 2);
            v162 = (_QWORD *)(v160 + 8 * ((v161 - 1) >> 6));
            if (v161 < 0x41)
              v162 = v159;
            if (((*v162 >> (v161 - 1)) & 1) != 0)
              break;
            v155 = 1;
            if (v156 + v154)
              goto LABEL_219;
            goto LABEL_366;
          }
          ++v154;
          if (v156 + v154 == 1)
          {
            if ((v155 & 1) == 0)
              break;
            goto LABEL_366;
          }
        }
      }
    }
  }
LABEL_153:
  v104 = *(unsigned __int8 *)(v10 + 16);
LABEL_154:
  if (v104 != 43)
  {
    if (v104 != 41)
    {
      if (v104 != 5)
        goto LABEL_253;
      v111 = *(unsigned __int16 *)(v10 + 18);
      goto LABEL_158;
    }
    if (*(_QWORD *)(v10 - 64))
    {
      v398 = *(unsigned __int8 **)(v10 - 64);
      v119 = *(_QWORD *)(v10 - 32);
      v128 = *(unsigned __int8 *)(v119 + 16);
      if (v128 != 5 && v119 != 0 && v128 <= 0x14)
        goto LABEL_251;
    }
    else
    {
      v119 = *(_QWORD *)(v10 - 32);
      if (!v119)
        goto LABEL_240;
    }
    v398 = (unsigned __int8 *)v119;
    v119 = *(_QWORD *)(v10 - 64);
    v163 = *(unsigned __int8 *)(v119 + 16);
    if (v163 != 5 && v119 != 0 && v163 <= 0x14)
      goto LABEL_251;
LABEL_240:
    v385 = (uint64_t *)&v398;
    v387 = (uint64_t *)&v397;
    v166 = sub_1C4D9EC28(&v385, 30, *(_QWORD *)(v10 - 64));
    v167 = *(_QWORD *)(v10 - 32);
    if ((v166 & 1) != 0 && v167)
      goto LABEL_259;
    if (sub_1C4D9EC28(&v385, 30, v167))
    {
      v167 = *(_QWORD *)(v10 - 64);
      if (v167)
        goto LABEL_259;
    }
    goto LABEL_266;
  }
  v5 = *(unsigned __int8 **)(v10 - 64);
  if (!v5)
  {
    v104 = 43;
    goto LABEL_253;
  }
  v398 = *(unsigned __int8 **)(v10 - 64);
  v127 = *(_QWORD *)(v10 - 32);
  v104 = 43;
  if (v127)
    goto LABEL_189;
LABEL_253:
  v385 = (uint64_t *)&v398;
  v387 = (uint64_t *)&v397;
  if (v104 != 5
    || *(_WORD *)(v10 + 18) != 13
    || ((v174 = sub_1C4D9EC28(&v385, 30, *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF))),
         v167 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF) + 32),
         !v174)
     || !v167)
    && (!sub_1C4D9EC28(&v385, 30, v167)
     || (v167 = *(_QWORD *)(v10 - 32 * (*(_DWORD *)(v10 + 20) & 0x7FFFFFF))) == 0))
  {
LABEL_266:
    v10 = (uint64_t)v399;
    goto LABEL_267;
  }
LABEL_259:
  *v387 = v167;
  v175 = (uint64_t)v397;
  v176 = v398;
  LOWORD(v389) = 257;
  v177 = (char *)operator new(0x80uLL);
  *((_QWORD *)v177 + 5) = 0;
  v178 = v177 + 40;
  *((_QWORD *)v177 + 6) = 0;
  *((_QWORD *)v177 + 8) = *(_QWORD *)v176;
  v34 = (uint64_t ***)(v177 + 64);
  *((_QWORD *)v177 + 3) = v177 + 64;
  *((_QWORD *)v177 + 7) = v177 + 64;
  *((_QWORD *)v177 + 9) = 0;
  v177[80] = 43;
  v177[81] = 0;
  *((_WORD *)v177 + 41) = 0;
  *((_DWORD *)v177 + 21) = 2;
  *(_OWORD *)(v177 + 88) = 0u;
  *(_OWORD *)(v177 + 104) = 0u;
  *((_DWORD *)v177 + 30) = 0;
  *(_QWORD *)v177 = v176;
  v181 = *((_QWORD *)v176 + 1);
  v180 = v176 + 8;
  v179 = v181;
  *((_QWORD *)v177 + 1) = v181;
  if (v181)
    *(_QWORD *)(v179 + 16) = v177 + 8;
  *((_QWORD *)v177 + 2) = v180;
  *v180 = v177;
  *((_QWORD *)v177 + 4) = v175;
  if (v175)
  {
    v184 = *(_QWORD *)(v175 + 8);
    v183 = (_QWORD *)(v175 + 8);
    v182 = v184;
    *v178 = v184;
    if (v184)
      *(_QWORD *)(v182 + 16) = v178;
    *((_QWORD *)v177 + 6) = v183;
    *v183 = v177 + 32;
  }
  llvm::Value::setName((uint64_t ***)v177 + 8, (uint64_t)&v385);
  llvm::Instruction::copyIRFlags((uint64_t)v34, v10, 1);
  return (llvm::UndefValue **)v34;
}

llvm::UndefValue **sub_1C57B605C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const llvm::DataLayout *a5, llvm::DSOLocalEquivalent **a6)
{
  llvm *v8;
  uint64_t *v9;
  llvm::Constant *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  llvm::Value *v14;
  uint64_t ***v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  _QWORD *v23;
  _QWORD *v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  BOOL v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v53;
  llvm::Type *v54;
  char *v55;
  _QWORD *v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  _QWORD *v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  void **p_src;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  _QWORD *v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  llvm::Type *v156;
  llvm::Type *v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  int v161;
  llvm::Type *v162;
  llvm::Type *v163;
  uint64_t v164;
  uint64_t v165;
  llvm::Constant **v166;
  llvm::Constant *v167;
  int v168;
  llvm::Type *v169;
  llvm::Type *v170;
  void **v171;
  uint64_t v172;
  int v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t *v176;
  unint64_t v177;
  llvm::Type **v178;
  uint64_t v180;
  uint64_t v181;
  int v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t *v186;
  void *v188;
  llvm::Type *v189;
  uint64_t v190;
  unsigned __int8 *v191;
  llvm::Type *v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  int v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  int v213;
  int v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  _QWORD *v229;
  uint64_t v230;
  char *v231;
  _QWORD *v232;
  char v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  char *v240;
  _QWORD *v241;
  uint64_t v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  llvm::Constant *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unsigned int v255;
  int v256;
  const llvm::APInt *v257;
  uint64_t v258;
  int v259;
  unsigned __int8 *v260;
  unsigned int v261;
  int v262;
  llvm::Constant *v263;
  uint64_t v264;
  int v265;
  llvm::Constant *v266;
  uint64_t v267;
  unsigned int v268;
  unsigned int v269;
  const void **v270;
  uint64_t v271;
  unint64_t v272;
  void *v273;
  uint64_t v274;
  llvm::Constant *v275;
  llvm::Constant *AllOnesValue;
  llvm::Constant *v277;
  uint64_t v278;
  llvm::Type *v279;
  llvm::Constant *v280;
  llvm::Constant *Not;
  llvm::Constant *v282;
  llvm::UndefValue *v283;
  llvm::Constant *v284;
  llvm::Constant *v285;
  llvm::Constant *Xor;
  llvm::Constant *v287;
  uint64_t v288;
  uint64_t v289;
  llvm::Type *v290;
  uint64_t v291;
  uint64_t v292;
  llvm::Constant *v293;
  uint64_t v294;
  llvm::Type *v295;
  uint64_t v296;
  int v297;
  uint64_t *v298;
  uint64_t v299;
  llvm::Constant *v300;
  unint64_t v301;
  unint64_t *v302;
  unint64_t v303;
  uint64_t v304;
  unint64_t v305;
  _BOOL4 v306;
  llvm::Value **v307;
  llvm *v308;
  char *v309;
  _QWORD *v310;
  llvm::Value *v311;
  _QWORD *v312;
  llvm::Value *v313;
  uint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  int v318;
  uint64_t v319;
  uint64_t v320;
  llvm::APInt *v321;
  llvm::Type *v322;
  int PrimitiveSizeInBits;
  unsigned int v324;
  llvm::Type *v325;
  uint64_t v326;
  llvm::Type *v327;
  llvm::ValueHandleBase *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  llvm::Constant *v332;
  llvm::Constant *v333;
  llvm::Constant *v334;
  llvm::Constant *v335;
  uint64_t v336;
  unsigned int v337;
  int v338;
  const llvm::APInt *v339;
  llvm **v340;
  llvm *v341;
  const void **v342;
  uint64_t v343;
  unint64_t v344;
  void *v345;
  uint64_t v346;
  llvm::Constant *v347;
  unint64_t v348;
  unint64_t *v349;
  unint64_t v350;
  uint64_t v351;
  unint64_t v352;
  _BOOL4 v353;
  llvm::Value **v354;
  char *v355;
  llvm::Value **v356;
  char v357;
  int v358;
  llvm **v359;
  const llvm::APInt *v360;
  const void **v361;
  uint64_t v362;
  void *v363;
  uint64_t v364;
  uint64_t v365;
  int v366;
  uint64_t v367;
  int v368;
  uint64_t v369;
  uint64_t v370;
  _QWORD *v371;
  uint64_t v372;
  int v373;
  int v374;
  int v375;
  uint64_t *v376;
  uint64_t v377;
  llvm **v378;
  llvm::Type *v379;
  unsigned int v380;
  void *v381;
  uint64_t ***v382;
  unint64_t v383;
  unsigned int v384;
  uint64_t v385;
  uint64_t v386;
  BOOL v387;
  llvm **v388;
  llvm::APInt *v389;
  llvm::Type *v390;
  unsigned int v391;
  unsigned int v392;
  unint64_t v393;
  uint64_t ***v394;
  unsigned int v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  BOOL v399;
  uint64_t *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unsigned int v407;
  llvm::Type *v408;
  uint64_t v409;
  llvm::Type *v410;
  uint64_t v411;
  _QWORD *v412;
  _QWORD *v413;
  llvm *v414;
  uint64_t v415;
  _QWORD *v416;
  char *v417;
  _QWORD *v418;
  uint64_t v419;
  _QWORD *v420;
  uint64_t v421;
  uint64_t v422;
  _QWORD *v423;
  uint64_t v424;
  int v425;
  uint64_t v426;
  llvm::Type *v427;
  llvm::Type *v428;
  int v429;
  uint64_t v430;
  llvm::Type *v431;
  llvm::Type *v432;
  int v433;
  llvm::APInt *v434;
  llvm::APInt *v435;
  int v436;
  llvm::Type *v437;
  uint64_t v438;
  llvm::Type *v439;
  int v440;
  uint64_t v441;
  int v442;
  llvm::APInt *v443;
  llvm::APInt *v444;
  llvm::Constant *v445;
  unint64_t v446;
  _QWORD *v447;
  uint64_t v448;
  uint64_t v449;
  _QWORD *v450;
  uint64_t v451;
  llvm::Value *v452;
  _QWORD *v453;
  llvm::Value *v454;
  int v455;
  uint64_t v456;
  const llvm::APInt *v457;
  int v458;
  char v459;
  uint64_t v460;
  const llvm::APInt *v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t *v465;
  uint64_t v466;
  _QWORD *v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  _QWORD *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t **v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  char *v478;
  _QWORD *v479;
  uint64_t v480;
  unint64_t v481;
  llvm::APInt **v482;
  uint64_t v483;
  int v484;
  llvm::APInt *v485;
  llvm::APInt *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  _QWORD *v490;
  uint64_t v491;
  llvm::APInt **v492;
  char *v493;
  uint64_t v494;
  _QWORD *v495;
  uint64_t v496;
  _QWORD *v497;
  uint64_t v498;
  const llvm::DataLayout *v499;
  llvm::DSOLocalEquivalent **v500;
  llvm::APInt *v501;
  int v502;
  uint64_t v503;
  llvm::APInt **v504;
  uint64_t v505;
  unsigned int v506;
  unint64_t v507;
  uint64_t v508;
  _QWORD *v509;
  const llvm::APInt *v510;
  uint64_t v511;
  _QWORD *v512;
  uint64_t v513;
  llvm::Constant **v514;
  uint64_t v515;
  llvm::APInt *v516;
  llvm *v517;
  int v518;
  int v519;
  uint64_t v520;
  char v521;
  uint64_t *v522;
  uint64_t *v523;
  int v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  __int16 v530;
  uint64_t v531;
  unsigned int v532;
  BOOL v533;
  char v534;
  llvm::Constant **v535;
  llvm::Constant ***v536;
  int v537;
  llvm *v538;
  llvm *v539;
  llvm::Constant **v540;
  llvm **v541;
  int v542;
  llvm::APInt *v543;
  llvm::APInt *v544;
  llvm::APInt **v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t *v548;
  unsigned __int8 *v549;
  char *v550;
  _QWORD *v551;
  uint64_t v552;
  _QWORD *v553;
  uint64_t v554;
  uint64_t v555;
  _QWORD *v556;
  uint64_t v557;
  _QWORD *v558;
  unint64_t *v559;
  uint64_t *v560;
  uint64_t v561;
  unint64_t v562;
  unsigned int v563;
  uint64_t v564;
  unsigned __int8 *v565;
  unsigned __int8 *v566;
  uint64_t v567;
  uint64_t v568;
  llvm::Constant *v569;
  int v570;
  uint64_t v571;
  uint64_t v572;
  _BOOL4 v574;
  uint64_t v575;
  int v576;
  int v577;
  llvm::Type *v578;
  void *v579;
  uint64_t *v580;
  unsigned __int8 *v581;
  uint64_t v582;
  __int16 v583;
  int v584;
  llvm::Type *v585;
  int v586;
  uint64_t *v587;
  llvm::ValueHandleBase *v588;
  const llvm::DataLayout *v589;
  llvm::DSOLocalEquivalent **v590;
  llvm::ValueHandleBase *v591;
  llvm::Value **v592;
  _BOOL4 v593;
  _BOOL4 v594;
  BOOL v595;
  uint64_t v596;
  llvm::Value *v597;
  llvm::Value *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  llvm::Value **v606;
  llvm::Value *v607;
  int v608;
  int v609;
  llvm::Value *v610;
  char *v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  int v616;
  uint64_t v617;
  int v618;
  uint64_t v619;
  int v620;
  unsigned int v621;
  _QWORD *v622;
  uint64_t v623;
  _QWORD *v624;
  int v625;
  BOOL v626;
  unsigned int v627;
  _QWORD *v628;
  _QWORD *v629;
  unint64_t v630;
  _QWORD *v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t ***v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  BOOL v641;
  uint64_t v642;
  uint64_t v643;
  int v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  int v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t *v652;
  uint64_t v653;
  uint64_t v654;
  int v655;
  llvm::Type *v656;
  uint64_t v657;
  unsigned int v658;
  uint64_t v659;
  int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  uint64_t v664;
  uint64_t v665;
  llvm::APInt *v666;
  llvm::Type *v667;
  llvm::Type *v668;
  int v669;
  unsigned int v670;
  uint64_t v671;
  uint64_t v672;
  int v673;
  void *v674;
  void *v675;
  uint64_t v676;
  uint64_t *v677;
  unsigned __int8 *v678;
  char *v679;
  uint64_t v680;
  _QWORD *v681;
  uint64_t v682;
  uint64_t v683;
  _QWORD *v684;
  uint64_t v685;
  uint64_t v686;
  llvm::Value **NullValue;
  uint64_t v688;
  uint64_t *v689;
  uint64_t v690;
  uint64_t v691;
  BOOL v692;
  llvm::APInt *v693;
  unint64_t v694;
  llvm::Value *v695;
  void *__src;
  unsigned int v697;
  __int16 v698;
  llvm::APInt *v699;
  uint64_t v700;
  __int128 v701;
  __int128 v702;
  llvm::APInt **v703;
  uint64_t v704;
  llvm *v705;
  llvm::APInt *v706;
  llvm::Type *v707;
  uint64_t v708;
  __int128 v709;
  unsigned __int8 *v710;
  __int16 v711;

  v9 = (uint64_t *)(a2 - 64);
  v8 = *(llvm **)(a2 - 64);
  v10 = *(llvm::Constant **)(a2 - 32);
  v11 = *(_OWORD *)(a1 + 120);
  v12 = *(_OWORD *)(a1 + 104);
  v701 = *(_OWORD *)(a1 + 88);
  v702 = v12;
  v704 = *((_QWORD *)&v11 + 1);
  v703 = (llvm::APInt **)a2;
  v13 = (uint64_t)sub_1C4E661DC(v8, v10, (uint64_t)&v701, 3, a5, a6);
  if (v13)
    goto LABEL_2;
  if ((sub_1C577D620(a1, (llvm::Instruction *)a2) & 1) != 0)
    return (llvm::UndefValue **)a2;
  v16 = (uint64_t ***)sub_1C57826B8(a1, (unsigned __int8 *)a2);
  if (!v16)
  {
    v16 = (uint64_t ***)sub_1C578171C(a1, a2);
    if (!v16)
    {
      v18 = *(uint64_t **)(a1 + 24);
      v19 = *(_QWORD *)(a2 - 64);
      v20 = *(_QWORD *)(a2 - 32);
      __src = 0;
      v707 = 0;
      v21 = *(unsigned __int8 *)(a2 + 16);
      if (v21 != 5)
      {
        if (v21 != 58)
        {
LABEL_90:
          *(_QWORD *)&v701 = &__src;
          *((_QWORD *)&v701 + 1) = &v707;
          *((_QWORD *)&v702 + 1) = &__src;
          v704 = (uint64_t)&v707;
          if (v21 == 58)
            goto LABEL_91;
          v25 = *(unsigned __int16 *)(a2 + 18);
LABEL_102:
          if (v21 != 5 || v25 != 30)
            goto LABEL_193;
          v64 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
          v65 = *(unsigned __int8 *)(v64 + 16);
          if (v65 == 5)
          {
            if (*(_WORD *)(v64 + 18) != 29)
              goto LABEL_193;
            v67 = *(_DWORD *)(v64 + 20) & 0x7FFFFFF;
            if (*(_QWORD *)(v64 - 32 * v67))
            {
              __src = *(void **)(v64 - 32 * v67);
              if ((sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v64 - 32 * (*(_DWORD *)(v64 + 20) & 0x7FFFFFF) + 32)) & 1) != 0)goto LABEL_117;
              v67 = *(_DWORD *)(v64 + 20) & 0x7FFFFFF;
            }
            v68 = *(_QWORD *)(v64 - 32 * v67 + 32);
            if (!v68)
              goto LABEL_193;
            *(_QWORD *)v701 = v68;
            if (!sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v64 - 32 * (*(_DWORD *)(v64 + 20) & 0x7FFFFFF))))goto LABEL_193;
          }
          else
          {
            if (v65 != 57)
              goto LABEL_193;
            if (!*(_QWORD *)(v64 - 64)
              || (__src = *(void **)(v64 - 64), (sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v64 - 32)) & 1) == 0))
            {
              v66 = *(_QWORD *)(v64 - 32);
              if (!v66)
                goto LABEL_193;
              *(_QWORD *)v701 = v66;
              if ((sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v64 - 64)) & 1) == 0)
                goto LABEL_193;
            }
          }
LABEL_117:
          v69 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
          v70 = *(unsigned __int8 *)(v69 + 16);
          if (v70 != 5)
          {
            if (v70 != 57)
              goto LABEL_193;
            v71 = (_QWORD *)(v69 - 64);
            v72 = *(_QWORD *)(v69 - 64);
            v73 = *(unsigned __int8 *)(v72 + 16);
            if (v73 == 5)
            {
              if (*(_WORD *)(v72 + 18) == 30)
              {
                v86 = *(_DWORD *)(v72 + 20) & 0x7FFFFFF;
                v87 = v72 - 32 * v86;
                v88 = **((_QWORD **)&v702 + 1);
                if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v87)
                {
                  if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v87 + 32)) & 1) != 0)
                    goto LABEL_154;
                  v88 = **((_QWORD **)&v702 + 1);
                  v89 = -(uint64_t)(*(_DWORD *)(v72 + 20) & 0x7FFFFFF);
                }
                else
                {
                  v89 = -v86;
                }
                v94 = v72 + 32 * v89;
                if (v88 != *(_QWORD *)(v94 + 32)
                  || !sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v94))
                {
                  goto LABEL_155;
                }
LABEL_154:
                if (*(_QWORD *)v704 == *(_QWORD *)(v69 - 32))
                  goto LABEL_93;
              }
            }
            else if (v73 == 58)
            {
              v74 = **((_QWORD **)&v702 + 1);
              if (**((_QWORD **)&v702 + 1) == *(_QWORD *)(v72 - 64))
              {
                if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v72 - 32)) & 1) != 0)
                  goto LABEL_154;
                v74 = **((_QWORD **)&v702 + 1);
              }
              if (v74 != *(_QWORD *)(v72 - 32)
                || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v72 - 64)) & 1) == 0)
              {
                goto LABEL_155;
              }
              goto LABEL_154;
            }
LABEL_155:
            v95 = *(_QWORD *)(v69 - 32);
            v96 = *(unsigned __int8 *)(v95 + 16);
            if (v96 == 5)
            {
              if (*(_WORD *)(v95 + 18) != 30)
                goto LABEL_193;
              v98 = *(_DWORD *)(v95 + 20) & 0x7FFFFFF;
              v99 = v95 - 32 * v98;
              v100 = **((_QWORD **)&v702 + 1);
              if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v99)
              {
                if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v99 + 32)) & 1) != 0)
                  goto LABEL_192;
                v100 = **((_QWORD **)&v702 + 1);
                v101 = -(uint64_t)(*(_DWORD *)(v95 + 20) & 0x7FFFFFF);
              }
              else
              {
                v101 = -v98;
              }
              v102 = v95 + 32 * v101;
              if (v100 != *(_QWORD *)(v102 + 32) || (sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v102) & 1) == 0)
                goto LABEL_193;
              goto LABEL_192;
            }
            if (v96 != 58)
              goto LABEL_193;
            v97 = **((_QWORD **)&v702 + 1);
            if (**((_QWORD **)&v702 + 1) != *(_QWORD *)(v95 - 64))
            {
LABEL_160:
              if (v97 != *(_QWORD *)(v95 - 32)
                || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v95 - 64)) & 1) == 0)
              {
                goto LABEL_193;
              }
              goto LABEL_192;
            }
            if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v95 - 32)) & 1) == 0)
            {
              v97 = **((_QWORD **)&v702 + 1);
              goto LABEL_160;
            }
LABEL_192:
            if (*(_QWORD *)v704 == *v71)
              goto LABEL_93;
LABEL_193:
            *(_QWORD *)&v701 = &__src;
            *((_QWORD *)&v701 + 1) = &v707;
            *((_QWORD *)&v702 + 1) = &__src;
            v704 = (uint64_t)&v707;
            v112 = *(unsigned __int8 *)(a2 + 16);
            if (v112 == 58)
            {
              if (!sub_1C4E74064((_QWORD **)&v701, 28, *v9))
                goto LABEL_280;
              v113 = *(_QWORD *)(a2 - 32);
LABEL_212:
              v119 = *(unsigned __int8 *)(v113 + 16);
              if (v119 != 5)
              {
                if (v119 != 56)
                  goto LABEL_280;
                v120 = (_QWORD *)(v113 - 64);
                v121 = *(_QWORD *)(v113 - 64);
                v122 = *(unsigned __int8 *)(v121 + 16);
                if (v122 != 5)
                {
                  if (v122 != 58)
                    goto LABEL_242;
                  v123 = **((_QWORD **)&v702 + 1);
                  if (**((_QWORD **)&v702 + 1) != *(_QWORD *)(v121 - 64))
                  {
LABEL_219:
                    if (v123 != *(_QWORD *)(v121 - 32)
                      || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v121 - 64)) & 1) == 0)
                    {
                      goto LABEL_242;
                    }
                    goto LABEL_241;
                  }
                  if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v121 - 32)) & 1) == 0)
                  {
                    v123 = **((_QWORD **)&v702 + 1);
                    goto LABEL_219;
                  }
LABEL_241:
                  if (*(_QWORD *)v704 == *(_QWORD *)(v113 - 32))
                    goto LABEL_93;
LABEL_242:
                  v136 = *(_QWORD *)(v113 - 32);
                  v137 = *(unsigned __int8 *)(v136 + 16);
                  if (v137 == 5)
                  {
                    if (*(_WORD *)(v136 + 18) != 30)
                      goto LABEL_280;
                    v139 = *(_DWORD *)(v136 + 20) & 0x7FFFFFF;
                    v140 = v136 - 32 * v139;
                    v141 = **((_QWORD **)&v702 + 1);
                    if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v140)
                    {
                      if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v140 + 32)) & 1) != 0)
                        goto LABEL_279;
                      v141 = **((_QWORD **)&v702 + 1);
                      v142 = -(uint64_t)(*(_DWORD *)(v136 + 20) & 0x7FFFFFF);
                    }
                    else
                    {
                      v142 = -v139;
                    }
                    v143 = v136 + 32 * v142;
                    if (v141 != *(_QWORD *)(v143 + 32)
                      || (sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v143) & 1) == 0)
                    {
                      goto LABEL_280;
                    }
                  }
                  else
                  {
                    if (v137 != 58)
                      goto LABEL_280;
                    v138 = **((_QWORD **)&v702 + 1);
                    if (**((_QWORD **)&v702 + 1) == *(_QWORD *)(v136 - 64))
                    {
                      if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v136 - 32)) & 1) != 0)
                        goto LABEL_279;
                      v138 = **((_QWORD **)&v702 + 1);
                    }
                    if (v138 != *(_QWORD *)(v136 - 32)
                      || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v136 - 64)) & 1) == 0)
                    {
                      goto LABEL_280;
                    }
                  }
LABEL_279:
                  if (*(_QWORD *)v704 != *v120)
                    goto LABEL_280;
LABEL_93:
                  v53 = __src;
                  v54 = v707;
                  LOWORD(v703) = 257;
LABEL_94:
                  v55 = (char *)operator new(0x80uLL);
                  *((_QWORD *)v55 + 5) = 0;
                  v56 = v55 + 40;
                  *((_QWORD *)v55 + 6) = 0;
                  *((_QWORD *)v55 + 8) = *v53;
                  v16 = (uint64_t ***)(v55 + 64);
                  *((_QWORD *)v55 + 3) = v55 + 64;
                  *((_QWORD *)v55 + 7) = v55 + 64;
                  *((_QWORD *)v55 + 9) = 0;
                  v57 = 58;
LABEL_95:
                  v55[80] = v57;
                  v55[81] = 0;
                  *((_WORD *)v55 + 41) = 0;
                  *((_DWORD *)v55 + 21) = 2;
                  *(_OWORD *)(v55 + 88) = 0u;
                  *(_OWORD *)(v55 + 104) = 0u;
                  *((_DWORD *)v55 + 30) = 0;
                  *(_QWORD *)v55 = v53;
                  v60 = v53[1];
                  v59 = v53 + 1;
                  v58 = v60;
                  *((_QWORD *)v55 + 1) = v60;
                  if (v60)
                    *(_QWORD *)(v58 + 16) = v55 + 8;
                  *((_QWORD *)v55 + 2) = v59;
                  *v59 = v55;
                  *((_QWORD *)v55 + 4) = v54;
                  if (v54)
                  {
                    v63 = *((_QWORD *)v54 + 1);
                    v62 = (_QWORD *)((char *)v54 + 8);
                    v61 = v63;
                    *v56 = v63;
                    if (v63)
                      *(_QWORD *)(v61 + 16) = v56;
                    *((_QWORD *)v55 + 6) = v62;
                    *v62 = v55 + 32;
                  }
LABEL_133:
                  p_src = (void **)&v701;
LABEL_134:
                  llvm::Value::setName(v16, (uint64_t)p_src);
                  return (llvm::UndefValue **)v16;
                }
                if (*(_WORD *)(v121 + 18) != 30)
                  goto LABEL_242;
                v127 = *(_DWORD *)(v121 + 20) & 0x7FFFFFF;
                v128 = v121 - 32 * v127;
                v129 = **((_QWORD **)&v702 + 1);
                if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v128)
                {
                  if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v128 + 32)) & 1) != 0)
                    goto LABEL_241;
                  v129 = **((_QWORD **)&v702 + 1);
                  v130 = -(uint64_t)(*(_DWORD *)(v121 + 20) & 0x7FFFFFF);
                }
                else
                {
                  v130 = -v127;
                }
                v135 = v121 + 32 * v130;
                if (v129 != *(_QWORD *)(v135 + 32)
                  || !sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v135))
                {
                  goto LABEL_242;
                }
                goto LABEL_241;
              }
              if (*(_WORD *)(v113 + 18) != 28)
                goto LABEL_280;
              v124 = *(_QWORD *)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF));
              v125 = *(unsigned __int8 *)(v124 + 16);
              if (v125 != 5)
              {
                if (v125 != 58)
                  goto LABEL_263;
                v126 = **((_QWORD **)&v702 + 1);
                if (**((_QWORD **)&v702 + 1) != *(_QWORD *)(v124 - 64))
                {
LABEL_228:
                  if (v126 != *(_QWORD *)(v124 - 32)
                    || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v124 - 64)) & 1) == 0)
                  {
                    goto LABEL_263;
                  }
                  goto LABEL_262;
                }
                if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v124 - 32)) & 1) == 0)
                {
                  v126 = **((_QWORD **)&v702 + 1);
                  goto LABEL_228;
                }
LABEL_262:
                if (*(_QWORD *)v704 == *(_QWORD *)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF) + 32))
                  goto LABEL_93;
LABEL_263:
                v145 = *(_QWORD *)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF) + 32);
                v146 = *(unsigned __int8 *)(v145 + 16);
                if (v146 != 5)
                {
                  if (v146 != 58)
                    goto LABEL_280;
                  v147 = **((_QWORD **)&v702 + 1);
                  if (**((_QWORD **)&v702 + 1) != *(_QWORD *)(v145 - 64))
                    goto LABEL_268;
                  if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v145 - 32)) & 1) == 0)
                  {
                    v147 = **((_QWORD **)&v702 + 1);
LABEL_268:
                    if (v147 != *(_QWORD *)(v145 - 32)
                      || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v145 - 64)) & 1) == 0)
                    {
                      goto LABEL_280;
                    }
                  }
LABEL_278:
                  v120 = (_QWORD *)(v113 - 32 * (*(_DWORD *)(v113 + 20) & 0x7FFFFFF));
                  goto LABEL_279;
                }
                if (*(_WORD *)(v145 + 18) != 30)
                  goto LABEL_280;
                v148 = *(_DWORD *)(v145 + 20) & 0x7FFFFFF;
                v149 = v145 - 32 * v148;
                v150 = **((_QWORD **)&v702 + 1);
                if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v149)
                {
                  if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v149 + 32)) & 1) != 0)
                    goto LABEL_278;
                  v150 = **((_QWORD **)&v702 + 1);
                  v151 = -(uint64_t)(*(_DWORD *)(v145 + 20) & 0x7FFFFFF);
                }
                else
                {
                  v151 = -v148;
                }
                v152 = v145 + 32 * v151;
                if (v150 != *(_QWORD *)(v152 + 32)
                  || !sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v152))
                {
                  goto LABEL_280;
                }
                goto LABEL_278;
              }
              if (*(_WORD *)(v124 + 18) != 30)
                goto LABEL_263;
              v131 = *(_DWORD *)(v124 + 20) & 0x7FFFFFF;
              v132 = v124 - 32 * v131;
              v133 = **((_QWORD **)&v702 + 1);
              if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v132)
              {
                if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v132 + 32)) & 1) != 0)
                  goto LABEL_262;
                v133 = **((_QWORD **)&v702 + 1);
                v134 = -(uint64_t)(*(_DWORD *)(v124 + 20) & 0x7FFFFFF);
              }
              else
              {
                v134 = -v131;
              }
              v144 = v124 + 32 * v134;
              if (v133 != *(_QWORD *)(v144 + 32)
                || !sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v144))
              {
                goto LABEL_263;
              }
              goto LABEL_262;
            }
            if (v112 != 5 || *(_WORD *)(a2 + 18) != 30)
              goto LABEL_280;
            v114 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
            v115 = *(unsigned __int8 *)(v114 + 16);
            if (v115 != 5)
            {
              if (v115 != 56
                || (!*(_QWORD *)(v114 - 64)
                 || (__src = *(void **)(v114 - 64),
                     (sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v114 - 32)) & 1) == 0))
                && ((v116 = *(_QWORD *)(v114 - 32)) == 0
                 || (*(_QWORD *)v701 = v116, (sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v114 - 64)) & 1) == 0)))
              {
LABEL_280:
                v153 = *(_QWORD *)(v19 + 8);
                if (!v153 || *(_QWORD *)(v153 + 8))
                {
                  v154 = *(_QWORD *)(v20 + 8);
                  if (!v154 || *(_QWORD *)(v154 + 8))
                    goto LABEL_354;
                }
                v155 = *(unsigned __int8 *)(v19 + 16);
                if (v155 == 5)
                {
                  if (*(_WORD *)(v19 + 18) != 29
                    || (v158 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF), (v156 = *(llvm::Type **)v158) == 0)
                    || (__src = *(void **)v158, (v157 = *(llvm::Type **)(v158 + 32)) == 0))
                  {
LABEL_344:
                    if (v155 == 5)
                    {
                      if (*(_WORD *)(v19 + 18) != 28)
                        goto LABEL_354;
                      v190 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
                      v188 = *(void **)v190;
                      if (!*(_QWORD *)v190)
                        goto LABEL_354;
                      __src = *(void **)v190;
                      v189 = *(llvm::Type **)(v190 + 32);
                      if (!v189)
                        goto LABEL_354;
                    }
                    else
                    {
                      if (v155 != 56)
                        goto LABEL_354;
                      v188 = *(void **)(v19 - 64);
                      if (!v188)
                        goto LABEL_354;
                      __src = *(void **)(v19 - 64);
                      v189 = *(llvm::Type **)(v19 - 32);
                      if (!v189)
                        goto LABEL_354;
                    }
                    v707 = v189;
                    v708 = (uint64_t)v188;
                    *(_QWORD *)&v709 = v189;
                    if ((sub_1C4E77280(&v708, 30, v20) & 1) != 0)
                      goto LABEL_353;
LABEL_354:
                    v13 = (uint64_t)sub_1C577ECF0(a1, (unsigned __int8 *)a2);
                    if (v13)
                      goto LABEL_2;
                    if (sub_1C584C4C4(a1, (llvm::UndefValue *)a2))
                      return (llvm::UndefValue **)a2;
                    v13 = sub_1C57ADFE0(a2, *(uint64_t **)(a1 + 24));
                    if (v13)
                    {
LABEL_2:
                      v14 = (llvm::Value *)v13;
                      return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v14);
                    }
                    v16 = (uint64_t ***)sub_1C57B3D6C(a1, (uint64_t ***)a2);
                    if (v16)
                      return (llvm::UndefValue **)v16;
                    v193 = *(_QWORD *)(a2 - 64);
                    v194 = *(_QWORD *)(a2 - 32);
                    v700 = 0;
                    *(_QWORD *)&v701 = &v700;
                    *((_QWORD *)&v702 + 1) = &v700;
                    v195 = *(unsigned __int8 *)(a2 + 16);
                    if (v195 != 5)
                    {
                      if (v195 != 58)
                        goto LABEL_419;
                      v196 = *(unsigned __int8 *)(v193 + 16);
                      if (v196 == 5)
                      {
                        if (*(_WORD *)(v193 + 18) != 28
                          || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF))) & 1) == 0&& !sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF) + 32)))
                        {
                          goto LABEL_389;
                        }
                      }
                      else if (v196 != 56
                             || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 64)) & 1) == 0
                             && (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 32)) & 1) == 0)
                      {
                        goto LABEL_389;
                      }
                      v199 = *(_QWORD *)(a2 - 32);
                      v200 = *(unsigned __int8 *)(v199 + 16);
                      if (v200 == 5)
                      {
                        if (*(_WORD *)(v199 + 18) == 28)
                        {
                          v207 = (_QWORD *)(v199 - 32 * (*(_DWORD *)(v199 + 20) & 0x7FFFFFF));
                          v201 = **((_QWORD **)&v702 + 1);
                          if (**((_QWORD **)&v702 + 1) == *v207)
                            goto LABEL_449;
                          v202 = v207 + 4;
LABEL_388:
                          if (v201 == *v202)
                            goto LABEL_449;
                        }
                      }
                      else if (v200 == 56)
                      {
                        v201 = **((_QWORD **)&v702 + 1);
                        if (**((_QWORD **)&v702 + 1) == *(_QWORD *)(v199 - 64))
                          goto LABEL_449;
                        v202 = (_QWORD *)(v199 - 32);
                        goto LABEL_388;
                      }
LABEL_389:
                      v208 = *(_QWORD *)(a2 - 32);
                      v209 = *(unsigned __int8 *)(v208 + 16);
                      if (v209 != 5)
                      {
                        if (v209 != 56
                          || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v208 - 64)) & 1) == 0
                          && (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v208 - 32)) & 1) == 0)
                        {
                          goto LABEL_419;
                        }
                        goto LABEL_397;
                      }
                      if (*(_WORD *)(v208 + 18) == 28
                        && ((sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v208 - 32 * (*(_DWORD *)(v208 + 20) & 0x7FFFFFF))) & 1) != 0|| sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v208 - 32 * (*(_DWORD *)(v208 + 20) & 0x7FFFFFF) + 32))))
                      {
LABEL_397:
                        v210 = *v9;
                        goto LABEL_411;
                      }
LABEL_419:
                      v218 = *(_QWORD *)(a1 + 24);
                      __src = 0;
                      v707 = 0;
                      v706 = 0;
                      *(_QWORD *)&v701 = &v708;
                      *((_QWORD *)&v701 + 1) = &v708;
                      *(_QWORD *)&v702 = &__src;
                      *((_QWORD *)&v702 + 1) = &v707;
                      v703 = &v706;
                      v219 = *(unsigned __int8 *)(a2 + 16);
                      if (v219 != 5)
                      {
                        if (v219 != 58)
                          goto LABEL_459;
                        if (*v9)
                        {
                          v708 = *v9;
                          v192 = *(llvm::Type **)(a2 - 32);
                          v220 = *((_QWORD *)v192 + 1);
                          if (!v220)
                            goto LABEL_426;
                          if (!*(_QWORD *)(v220 + 8) && (sub_1C57BE838((uint64_t **)&v701 + 1, (uint64_t)v192) & 1) != 0)
                            goto LABEL_441;
                        }
                        v192 = *(llvm::Type **)(a2 - 32);
                        if (!v192)
                          goto LABEL_459;
LABEL_426:
                        v708 = (uint64_t)v192;
                        v192 = (llvm::Type *)*v9;
                        v221 = *(_QWORD *)(*v9 + 8);
                        if (!v221
                          || *(_QWORD *)(v221 + 8)
                          || (sub_1C57BE838((uint64_t **)&v701 + 1, (uint64_t)v192) & 1) == 0)
                        {
                          goto LABEL_459;
                        }
                        goto LABEL_441;
                      }
                      if (*(_WORD *)(a2 + 18) != 30)
                        goto LABEL_459;
                      v222 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
                      if (*(_QWORD *)(a2 - 32 * v222))
                      {
                        v708 = *(_QWORD *)(a2 - 32 * v222);
                        v223 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
                        v224 = -v223;
                        v192 = *(llvm::Type **)(a2 - 32 * v223 + 32);
                        v225 = *((_QWORD *)v192 + 1);
                        if (!v225 || *(_QWORD *)(v225 + 8))
                        {
LABEL_437:
                          v226 = *(_QWORD *)(a2 + 32 * v224 + 32);
                          if (!v226
                            || (v708 = v226,
                                v192 = *(llvm::Type **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF)),
                                (v227 = *((_QWORD *)v192 + 1)) == 0)
                            || *(_QWORD *)(v227 + 8)
                            || (sub_1C57BE838((uint64_t **)&v701 + 1, (uint64_t)v192) & 1) == 0)
                          {
LABEL_459:
                            v707 = 0;
                            if (*(unsigned __int8 *)(v194 + 16) > 0x14u || !v194)
                              goto LABEL_469;
                            __src = 0;
                            v250 = *(_QWORD *)(v193 + 8);
                            if (v250 && !*(_QWORD *)(v250 + 8))
                            {
                              v259 = *(unsigned __int8 *)(v193 + 16);
                              if (v259 == 5)
                              {
                                if (*(_WORD *)(v193 + 18) != 29)
                                  goto LABEL_463;
                                v274 = v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF);
                                if (!*(_QWORD *)v274)
                                  goto LABEL_463;
                                v707 = *(llvm::Type **)v274;
                                v260 = *(unsigned __int8 **)(v274 + 32);
                                if (!v260)
                                  goto LABEL_463;
                                __src = *(void **)(v274 + 32);
                                v261 = v260[16];
                              }
                              else
                              {
                                if (v259 != 57)
                                  goto LABEL_463;
                                if (!*(_QWORD *)(v193 - 64))
                                  goto LABEL_463;
                                v707 = *(llvm::Type **)(v193 - 64);
                                v260 = *(unsigned __int8 **)(v193 - 32);
                                if (!v260)
                                  goto LABEL_463;
                                v261 = v260[16];
                                if (v261 > 0x14)
                                  goto LABEL_463;
                                __src = *(void **)(v193 - 32);
                              }
                              if (v261 != 5 && *(_BYTE *)(v194 + 16) != 5)
                              {
                                v275 = *(llvm::Constant **)v260;
                                if ((*(_DWORD *)(*(_QWORD *)v260 + 8) & 0xFE) == 0x12)
                                  v275 = (llvm::Constant *)**((_QWORD **)v275 + 2);
                                AllOnesValue = llvm::Constant::getAllOnesValue(v275, v192);
                                __src = llvm::Constant::replaceUndefsWith((llvm::Constant *)v260, AllOnesValue, v277);
                                v278 = *(_QWORD *)(a1 + 24);
                                v279 = v707;
                                Not = (llvm::Constant *)llvm::ConstantExpr::getNot((llvm::Constant **)__src, v280);
                                v283 = llvm::Constant::mergeUndefsWith(Not, (llvm::Constant *)v194, v282);
                                LOWORD(v703) = 257;
                                v53 = (_QWORD *)sub_1C4D89BCC(v278, v279, (uint64_t)v283, (uint64_t)&v701);
                                Xor = (llvm::Constant *)llvm::ConstantExpr::getXor((llvm::ConstantExpr *)v194, (llvm::Constant *)__src, v284, v285);
                                v288 = (uint64_t)llvm::Constant::mergeUndefsWith(Xor, (llvm::Constant *)v194, v287);
                                goto LABEL_524;
                              }
                            }
LABEL_463:
                            *(_QWORD *)&v701 = &v707;
                            *(_QWORD *)&v702 = &__src;
                            v251 = *(_QWORD *)(v193 + 8);
                            if (!v251 || *(_QWORD *)(v251 + 8))
                              goto LABEL_465;
                            v262 = *(unsigned __int8 *)(v193 + 16);
                            if (v262 == 5)
                            {
                              if (*(_WORD *)(v193 + 18) != 29)
                                goto LABEL_465;
                              if (!sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF))))goto LABEL_465;
                              v264 = *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF) + 32);
                              if (!v264)
                                goto LABEL_465;
                            }
                            else if (v262 != 57
                                   || !sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 64))
                                   || (v264 = *(_QWORD *)(v193 - 32)) == 0
                                   || *(unsigned __int8 *)(v264 + 16) > 0x14u)
                            {
LABEL_465:
                              *(_QWORD *)&v701 = &v707;
                              *(_QWORD *)&v702 = &__src;
                              v252 = *(_QWORD *)(v193 + 8);
                              if (!v252 || *(_QWORD *)(v252 + 8))
                              {
LABEL_467:
                                v706 = 0;
                                *(_QWORD *)&v701 = &v707;
                                *((_QWORD *)&v701 + 1) = &v706;
                                *(_QWORD *)&v702 = 1;
                                *((_QWORD *)&v702 + 1) = &v707;
                                v703 = &v706;
                                v704 = 1;
                                v253 = *(_QWORD *)(v193 + 8);
                                if (!v253 || *(_QWORD *)(v253 + 8))
                                  goto LABEL_469;
                                v268 = *(unsigned __int8 *)(v193 + 16);
                                if (v268 > 0x1B || v268 == 5)
                                {
                                  if (v268 <= 0x1B)
                                    v269 = *(unsigned __int16 *)(v193 + 18);
                                  else
                                    v269 = v268 - 28;
                                  if (v269 == 38)
                                  {
                                    v297 = *(_DWORD *)(v193 + 20);
                                    if ((v297 & 0x40000000) != 0)
                                      v298 = *(uint64_t **)(v193 - 8);
                                    else
                                      v298 = (uint64_t *)(v193 - 32 * (v297 & 0x7FFFFFF));
                                    v317 = *v298;
                                    v318 = *(unsigned __int8 *)(v317 + 16);
                                    if (v318 == 5)
                                    {
                                      if (*(_WORD *)(v317 + 18) == 27)
                                      {
                                        if (*(_QWORD *)(v317 - 32 * (*(_DWORD *)(v317 + 20) & 0x7FFFFFF)))
                                        {
                                          v707 = *(llvm::Type **)(v317 - 32 * (*(_DWORD *)(v317 + 20) & 0x7FFFFFF));
                                          if ((sub_1C4D8A004((uint64_t)&v701 + 8, *(llvm::Constant **)(v317- 32* (*(_DWORD *)(v317 + 20) & 0x7FFFFFF)+ 32)) & 1) != 0)goto LABEL_558;
                                        }
                                      }
                                    }
                                    else if (v318 == 55)
                                    {
                                      if (*(_QWORD *)(v317 - 64))
                                      {
                                        v707 = *(llvm::Type **)(v317 - 64);
                                        if ((sub_1C4D89F84((uint64_t)&v701 + 8, *(unsigned __int8 **)(v317 - 32)) & 1) != 0)
                                        {
LABEL_558:
                                          v321 = v706;
                                          v322 = *(llvm::Type **)v707;
                                          if ((*(_DWORD *)(*(_QWORD *)v707 + 8) & 0xFE) == 0x12)
                                            v322 = (llvm::Type *)**((_QWORD **)v322 + 2);
                                          PrimitiveSizeInBits = llvm::Type::getPrimitiveSizeInBits(v322);
                                          v324 = *((_DWORD *)v321 + 2);
                                          if (v324 >= 0x41)
                                          {
                                            if (v324 - llvm::APInt::countLeadingZerosSlowCase(v321) > 0x40)
                                              goto LABEL_469;
                                            v321 = *(llvm::APInt **)v321;
                                          }
                                          if (*(_QWORD *)v321 == PrimitiveSizeInBits - 1
                                            && (sub_1C4D9EED4((uint64_t)&v708, (llvm::Constant *)v194) & 1) == 0)
                                          {
                                            v326 = *(_QWORD *)(a1 + 24);
                                            v327 = v707;
                                            v328 = llvm::Constant::getAllOnesValue(*(llvm::Constant **)v707, v325);
                                            LOWORD(v703) = 257;
                                            v329 = sub_1C4774B48(v326, 38, (uint64_t)v327, (uint64_t)v328, (uint64_t)&v701);
                                            v330 = *(_QWORD *)(a1 + 24);
                                            LOWORD(v703) = 257;
                                            v331 = sub_1C506EAA0(v330, v194, (uint64_t)&v701);
                                            v711 = 257;
                                            return (llvm::UndefValue **)sub_1C4FC8748(v329, (uint64_t *)v194, v331, (uint64_t)&v708, 0, 0);
                                          }
LABEL_469:
                                          v254 = *(_QWORD *)a2;
                                          v706 = 0;
                                          v701 = (unint64_t)&v706;
                                          if (!sub_1C4D89F84((uint64_t)&v701, (unsigned __int8 *)v194))
                                            goto LABEL_608;
                                          v705 = 0;
                                          v699 = 0;
                                          v255 = *((_DWORD *)v706 + 2);
                                          if (v255 > 0x40)
                                          {
                                            if (((*(_QWORD *)(*(_QWORD *)v706 + 8 * ((v255 - 1) >> 6)) >> (v255 - 1)) & 1) == 0
                                              || llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v706) != v255 - 1)
                                            {
                                              goto LABEL_570;
                                            }
                                          }
                                          else if (*(_QWORD *)v706 != 1 << (v255 - 1))
                                          {
                                            goto LABEL_570;
                                          }
                                          v701 = (unint64_t)&v699;
                                          *(_QWORD *)&v702 = &v705;
                                          v256 = *(unsigned __int8 *)(v193 + 16);
                                          if (v256 != 5)
                                          {
                                            if (v256 != 43)
                                              goto LABEL_570;
                                            if (!sub_1C4D89F84((uint64_t)&v701, *(unsigned __int8 **)(v193 - 64)))goto LABEL_570;
                                            v258 = *(_QWORD *)(v193 - 32);
                                            if (!v258)
                                              goto LABEL_570;
LABEL_502:
                                            *(_QWORD *)v702 = v258;
                                            v270 = (const void **)v699;
                                            v271 = *((unsigned int *)v699 + 2);
                                            if (v271 >= 0x41)
                                            {
                                              v273 = (void *)operator new[]();
                                              memcpy(v273, *v270, ((unint64_t)(v271 + 63) >> 3) & 0x3FFFFFF8);
                                              v299 = 0;
                                              v300 = *(llvm::Constant **)v706;
                                              v301 = (unint64_t)(v271 + 63) >> 6;
                                              v302 = (unint64_t *)v273;
                                              v303 = v301;
                                              do
                                              {
                                                v304 = *(_QWORD *)v300;
                                                v300 = (llvm::Constant *)((char *)v300 + 8);
                                                v305 = v304 + *v302;
                                                v306 = v305 + 1 <= *v302;
                                                if (v299)
                                                {
                                                  ++v305;
                                                  v299 = v306;
                                                }
                                                else
                                                {
                                                  v299 = v305 < *v302;
                                                }
                                                *v302++ = v305;
                                                --v303;
                                              }
                                              while (v303);
                                              *((_QWORD *)v273 + (v301 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v271;
                                            }
                                            else
                                            {
                                              if ((_DWORD)v271)
                                                v272 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v271;
                                              else
                                                v272 = 0;
                                              v273 = (void *)(v272 & (*(_QWORD *)v706 + *(_QWORD *)v699));
                                            }
                                            LODWORD(v709) = v271;
                                            v708 = (uint64_t)v273;
                                            v307 = llvm::ConstantInt::get((llvm::ConstantInt **)v254, (llvm::Type *)&v708, v257);
                                            v308 = v705;
                                            LOWORD(v703) = 257;
                                            v309 = (char *)operator new(0x80uLL);
                                            *((_QWORD *)v309 + 5) = 0;
                                            v310 = v309 + 40;
                                            *((_QWORD *)v309 + 6) = 0;
                                            *((_QWORD *)v309 + 8) = *v307;
                                            v16 = (uint64_t ***)(v309 + 64);
                                            *((_QWORD *)v309 + 3) = v309 + 64;
                                            *((_QWORD *)v309 + 7) = v309 + 64;
                                            *((_QWORD *)v309 + 9) = 0;
                                            v309[80] = 43;
                                            v309[81] = 0;
                                            *((_WORD *)v309 + 41) = 0;
                                            *((_DWORD *)v309 + 21) = 2;
                                            *(_OWORD *)(v309 + 88) = 0u;
                                            *(_OWORD *)(v309 + 104) = 0u;
                                            *((_DWORD *)v309 + 30) = 0;
                                            *(_QWORD *)v309 = v307;
                                            v313 = v307[1];
                                            v312 = v307 + 1;
                                            v311 = v313;
                                            *((_QWORD *)v309 + 1) = v313;
                                            if (v313)
                                              *((_QWORD *)v311 + 2) = v309 + 8;
                                            *((_QWORD *)v309 + 2) = v312;
                                            *v312 = v309;
                                            *((_QWORD *)v309 + 4) = v308;
                                            if (v308)
                                            {
                                              v316 = *((_QWORD *)v308 + 1);
                                              v315 = (_QWORD *)((char *)v308 + 8);
                                              v314 = v316;
                                              *v310 = v316;
                                              if (v316)
                                                *(_QWORD *)(v314 + 16) = v310;
                                              *((_QWORD *)v309 + 6) = v315;
                                              *v315 = v309 + 32;
                                            }
                                            goto LABEL_755;
                                          }
                                          if (*(_WORD *)(v193 + 18) == 15)
                                          {
                                            if (sub_1C4D8A004((uint64_t)&v701, *(llvm::Constant **)(v193- 32* (*(_DWORD *)(v193 + 20) & 0x7FFFFFF))))
                                            {
                                              v258 = *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF) + 32);
                                              if (v258)
                                                goto LABEL_502;
                                            }
                                          }
LABEL_570:
                                          v337 = *((_DWORD *)v706 + 2);
                                          if (v337 > 0x40)
                                          {
                                            if (((*(_QWORD *)(*(_QWORD *)v706 + 8 * ((v337 - 1) >> 6)) >> (v337 - 1)) & 1) == 0
                                              || llvm::APInt::countTrailingZerosSlowCase((unint64_t **)v706) != v337 - 1)
                                            {
                                              goto LABEL_593;
                                            }
                                          }
                                          else if (*(_QWORD *)v706 != 1 << (v337 - 1))
                                          {
LABEL_593:
                                            *(_QWORD *)&v701 = &v705;
                                            *((_QWORD *)&v701 + 1) = &v699;
                                            *(_QWORD *)&v702 = 0;
                                            v358 = *(unsigned __int8 *)(v193 + 16);
                                            if (v358 == 5)
                                            {
                                              if (*(_WORD *)(v193 + 18) != 29
                                                || (v359 = (llvm **)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF)),
                                                    !*v359)
                                                || (v705 = *v359,
                                                    !sub_1C4D8A004((uint64_t)&v701 + 8, v359[4])))
                                              {
LABEL_604:
                                                *(_QWORD *)&v701 = &v705;
                                                *((_QWORD *)&v701 + 1) = &v699;
                                                *(_QWORD *)&v702 = 0;
                                                v364 = *(_QWORD *)(v193 + 8);
                                                if (!v364 || *(_QWORD *)(v364 + 8))
                                                  goto LABEL_606;
                                                v374 = *(unsigned __int8 *)(v193 + 16);
                                                if (v374 == 5)
                                                {
                                                  if (*(_WORD *)(v193 + 18) != 25)
                                                    goto LABEL_606;
                                                  v378 = (llvm **)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                                                  if (!*v378)
                                                    goto LABEL_606;
                                                  v705 = *v378;
                                                  if (!sub_1C4D8A004((uint64_t)&v701 + 8, v378[4]))
                                                    goto LABEL_606;
                                                }
                                                else
                                                {
                                                  if (v374 != 53)
                                                    goto LABEL_606;
                                                  if (!*(_QWORD *)(v193 - 64))
                                                    goto LABEL_606;
                                                  v705 = *(llvm **)(v193 - 64);
                                                  if ((sub_1C4D89F84((uint64_t)&v701 + 8, *(unsigned __int8 **)(v193 - 32)) & 1) == 0)goto LABEL_606;
                                                }
                                                v693 = v706;
                                                v379 = (llvm::Type *)v254;
                                                if ((*(_DWORD *)(v254 + 8) & 0xFE) == 0x12)
                                                  v379 = **(llvm::Type ***)(v254 + 16);
                                                v380 = llvm::Type::getPrimitiveSizeInBits(v379);
                                                v697 = v380;
                                                if (v380 > 0x40)
                                                {
                                                  llvm::APInt::initSlowCase((llvm::APInt *)&__src, -1, 1);
                                                  v380 = v697;
                                                  v382 = (uint64_t ***)v699;
                                                  LODWORD(v709) = v697;
                                                  if (v697 > 0x40)
                                                  {
                                                    v708 = operator new[]();
                                                    v383 = v709;
                                                    memcpy((void *)v708, __src, (((unint64_t)v709 + 63) >> 3) & 0x3FFFFFF8);
LABEL_648:
                                                    v384 = sub_1C47EE5B8(v382, v383);
                                                    sub_1C4888094((uint64_t)&v708, v384);
                                                    v385 = *((unsigned int *)v693 + 2);
                                                    v386 = v708;
                                                    if (v385 > 0x40)
                                                      v387 = memcmp(*(const void **)v693, (const void *)v708, ((unint64_t)(v385 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                                    else
                                                      v387 = *(_QWORD *)v693 == v708;
                                                    v455 = v387;
                                                    if (v709 >= 0x41 && v386)
                                                      MEMORY[0x1CAA32F9C](v386, 0x1000C8000313F17);
                                                    if (v697 >= 0x41 && __src)
                                                      MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
                                                    if (v455)
                                                    {
                                                      v456 = *(_QWORD *)(a1 + 24);
                                                      LOWORD(v703) = 257;
                                                      v53 = (_QWORD *)sub_1C506EAA0(v456, (uint64_t)v705, (uint64_t)&v701);
                                                      v54 = (llvm::Type *)llvm::ConstantInt::get((llvm::ConstantInt **)v254, v699, v457);
                                                      LOWORD(v703) = 257;
                                                      v55 = (char *)operator new(0x80uLL);
                                                      *((_QWORD *)v55 + 5) = 0;
                                                      v56 = v55 + 40;
                                                      *((_QWORD *)v55 + 6) = 0;
                                                      *((_QWORD *)v55 + 8) = *v53;
                                                      v16 = (uint64_t ***)(v55 + 64);
                                                      *((_QWORD *)v55 + 3) = v55 + 64;
                                                      *((_QWORD *)v55 + 7) = v55 + 64;
                                                      *((_QWORD *)v55 + 9) = 0;
                                                      v57 = 53;
                                                      goto LABEL_95;
                                                    }
LABEL_606:
                                                    *(_QWORD *)&v701 = &v705;
                                                    *((_QWORD *)&v701 + 1) = &v699;
                                                    *(_QWORD *)&v702 = 0;
                                                    v365 = *(_QWORD *)(v193 + 8);
                                                    if (!v365 || *(_QWORD *)(v365 + 8))
                                                      goto LABEL_608;
                                                    v375 = *(unsigned __int8 *)(v193 + 16);
                                                    if (v375 == 5)
                                                    {
                                                      if (*(_WORD *)(v193 + 18) != 26)
                                                        goto LABEL_608;
                                                      v388 = (llvm **)(v193 - 32
                                                                            * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                                                      if (!*v388)
                                                        goto LABEL_608;
                                                      v705 = *v388;
                                                      if (!sub_1C4D8A004((uint64_t)&v701 + 8, v388[4]))
                                                        goto LABEL_608;
                                                    }
                                                    else
                                                    {
                                                      if (v375 != 54)
                                                        goto LABEL_608;
                                                      if (!*(_QWORD *)(v193 - 64))
                                                        goto LABEL_608;
                                                      v705 = *(llvm **)(v193 - 64);
                                                      if ((sub_1C4D89F84((uint64_t)&v701 + 8, *(unsigned __int8 **)(v193 - 32)) & 1) == 0)goto LABEL_608;
                                                    }
                                                    v389 = v706;
                                                    v390 = (llvm::Type *)v254;
                                                    if ((*(_DWORD *)(v254 + 8) & 0xFE) == 0x12)
                                                      v390 = **(llvm::Type ***)(v254 + 16);
                                                    v391 = llvm::Type::getPrimitiveSizeInBits(v390);
                                                    v392 = v391;
                                                    LODWORD(v709) = v391;
                                                    if (v391 > 0x40)
                                                    {
                                                      llvm::APInt::initSlowCase((llvm::APInt *)&v708, -1, 1);
                                                      v394 = (uint64_t ***)v699;
                                                      v392 = v709;
                                                      if (v709 > 0x40)
                                                      {
                                                        v562 = v709;
                                                        v694 = v709 + 63;
                                                        v396 = operator new[]();
                                                        memcpy((void *)v396, (const void *)v708, (v694 >> 3) & 0x3FFFFFF8);
                                                        v563 = sub_1C47EE5B8(v394, v562);
                                                        llvm::APInt::tcShiftRight((llvm::APInt *)v396, (unint64_t *)(v694 >> 6), v563);
                                                        v397 = 0;
                                                        goto LABEL_662;
                                                      }
                                                      v393 = v708;
                                                    }
                                                    else
                                                    {
                                                      if (v391)
                                                        v393 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v391;
                                                      else
                                                        v393 = 0;
                                                      v708 = v393;
                                                      v394 = (uint64_t ***)v699;
                                                    }
                                                    v395 = sub_1C47EE5B8(v394, v392);
                                                    if (v392 == v395)
                                                      v396 = 0;
                                                    else
                                                      v396 = v393 >> v395;
                                                    v397 = 1;
LABEL_662:
                                                    v398 = *((unsigned int *)v389 + 2);
                                                    if (v398 > 0x40)
                                                      v399 = memcmp(*(const void **)v389, (const void *)v396, ((unint64_t)(v398 + 63) >> 3) & 0x3FFFFFF8) == 0;
                                                    else
                                                      v399 = *(_QWORD *)v389 == v396;
                                                    v458 = v399;
                                                    if (v396)
                                                      v459 = v397;
                                                    else
                                                      v459 = 1;
                                                    if ((v459 & 1) == 0)
                                                      MEMORY[0x1CAA32F9C](v396, 0x1000C8000313F17);
                                                    if (v709 >= 0x41 && v708)
                                                      MEMORY[0x1CAA32F9C](v708, 0x1000C8000313F17);
                                                    if (v458)
                                                    {
                                                      v460 = *(_QWORD *)(a1 + 24);
                                                      LOWORD(v703) = 257;
                                                      v53 = (_QWORD *)sub_1C506EAA0(v460, (uint64_t)v705, (uint64_t)&v701);
                                                      v54 = (llvm::Type *)llvm::ConstantInt::get((llvm::ConstantInt **)v254, v699, v461);
                                                      LOWORD(v703) = 257;
                                                      v55 = (char *)operator new(0x80uLL);
                                                      *((_QWORD *)v55 + 5) = 0;
                                                      v56 = v55 + 40;
                                                      *((_QWORD *)v55 + 6) = 0;
                                                      *((_QWORD *)v55 + 8) = *v53;
                                                      v16 = (uint64_t ***)(v55 + 64);
                                                      *((_QWORD *)v55 + 3) = v55 + 64;
                                                      *((_QWORD *)v55 + 7) = v55 + 64;
                                                      *((_QWORD *)v55 + 9) = 0;
                                                      v57 = 54;
                                                      goto LABEL_95;
                                                    }
LABEL_608:
                                                    if (*(_BYTE *)(v194 + 16) != 16)
                                                      goto LABEL_672;
                                                    v366 = *(unsigned __int8 *)(v193 + 16);
                                                    if (v366 == 5)
                                                    {
                                                      if (*(_WORD *)(v193 + 18) != 26)
                                                        goto LABEL_672;
                                                      v371 = (_QWORD *)(v193
                                                                      - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                                                      v372 = *v371;
                                                      v373 = *(unsigned __int8 *)(*v371 + 16);
                                                      if (v373 == 5)
                                                      {
                                                        if (*(_WORD *)(v372 + 18) != 30)
                                                          goto LABEL_672;
                                                        v400 = (uint64_t *)(v372
                                                                         - 32 * (*(_DWORD *)(v372 + 20) & 0x7FFFFFF));
                                                        v369 = *v400;
                                                        if (!*v400)
                                                          goto LABEL_672;
                                                        v370 = v400[4];
                                                        if (!v370)
                                                          goto LABEL_672;
                                                      }
                                                      else
                                                      {
                                                        if (v373 != 58)
                                                          goto LABEL_672;
                                                        v369 = *(_QWORD *)(v372 - 64);
                                                        if (!v369)
                                                          goto LABEL_672;
                                                        v370 = *(_QWORD *)(v372 - 32);
                                                        if (!v370)
                                                          goto LABEL_672;
                                                      }
                                                      if (*(_BYTE *)(v370 + 16) == 16)
                                                      {
                                                        v377 = v371[4];
                                                        if (v377)
                                                        {
LABEL_669:
                                                          if (*(_BYTE *)(v377 + 16) != 16)
                                                            goto LABEL_672;
                                                          v401 = *(_QWORD *)(v193 + 8);
                                                          if (!v401 || *(_QWORD *)(v401 + 8))
                                                            goto LABEL_672;
                                                          v481 = *(unsigned int *)(v370 + 32);
                                                          LODWORD(v709) = v481;
                                                          if (v481 > 0x40)
                                                          {
                                                            v708 = operator new[]();
                                                            memcpy((void *)v708, *(const void **)(v370 + 24), ((v481 + 63) >> 3) & 0x3FFFFFF8);
                                                          }
                                                          else
                                                          {
                                                            v708 = *(_QWORD *)(v370 + 24);
                                                          }
                                                          v506 = sub_1C47EE5B8((uint64_t ***)(v377 + 24), v481);
                                                          if (v709 > 0x40)
                                                          {
                                                            v558 = (_QWORD *)v708;
                                                            v559 = (unint64_t *)(((unint64_t)v709
                                                                                       + 63) >> 6);
                                                            llvm::APInt::tcShiftRight((llvm::APInt *)v708, v559, v506);
                                                            v560 = *(uint64_t **)(v194 + 24);
                                                            do
                                                            {
                                                              v561 = *v560++;
                                                              *v558++ ^= v561;
                                                              v559 = (unint64_t *)((char *)v559 - 1);
                                                            }
                                                            while (v559);
                                                          }
                                                          else
                                                          {
                                                            if ((_DWORD)v709 == v506)
                                                              v507 = 0;
                                                            else
                                                              v507 = (unint64_t)v708 >> v506;
                                                            v708 = v507 ^ *(_QWORD *)(v194 + 24);
                                                          }
                                                          v508 = *(_QWORD *)(a1 + 24);
                                                          LOWORD(v703) = 257;
                                                          v509 = (_QWORD *)sub_1C506ED1C(v508, v369, v377, (uint64_t)&v701, 0);
                                                          llvm::Value::takeName((llvm::Value *)v509, (llvm::Value *)v193);
                                                          v354 = llvm::ConstantInt::get((llvm::ConstantInt **)v254, (llvm::Type *)&v708, v510);
                                                          LOWORD(v703) = 257;
                                                          v355 = (char *)operator new(0x80uLL);
                                                          *((_QWORD *)v355 + 5) = 0;
                                                          v356 = (llvm::Value **)(v355 + 40);
                                                          *((_QWORD *)v355 + 6) = 0;
                                                          *((_QWORD *)v355 + 8) = *v509;
                                                          v16 = (uint64_t ***)(v355 + 64);
                                                          *((_QWORD *)v355 + 3) = v355 + 64;
                                                          *((_QWORD *)v355 + 7) = v355 + 64;
                                                          *((_QWORD *)v355 + 9) = 0;
                                                          v355[80] = 58;
                                                          v355[81] = 0;
                                                          *((_WORD *)v355 + 41) = 0;
                                                          *((_DWORD *)v355 + 21) = 2;
                                                          *(_OWORD *)(v355 + 88) = 0u;
                                                          *(_OWORD *)(v355 + 104) = 0u;
                                                          *((_DWORD *)v355 + 30) = 0;
                                                          *(_QWORD *)v355 = v509;
                                                          v513 = v509[1];
                                                          v512 = v509 + 1;
                                                          v511 = v513;
                                                          *((_QWORD *)v355 + 1) = v513;
                                                          if (v513)
                                                            *(_QWORD *)(v511 + 16) = v355 + 8;
                                                          *((_QWORD *)v355 + 2) = v512;
                                                          *v512 = v355;
                                                          goto LABEL_751;
                                                        }
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if (v366 != 54)
                                                        goto LABEL_672;
                                                      v367 = *(_QWORD *)(v193 - 64);
                                                      v368 = *(unsigned __int8 *)(v367 + 16);
                                                      if (v368 != 5)
                                                      {
                                                        if (v368 != 58)
                                                          goto LABEL_672;
                                                        v369 = *(_QWORD *)(v367 - 64);
                                                        if (!v369)
                                                          goto LABEL_672;
                                                        v370 = *(_QWORD *)(v367 - 32);
                                                        if (!v370)
                                                          goto LABEL_672;
                                                        goto LABEL_635;
                                                      }
                                                      if (*(_WORD *)(v367 + 18) == 30)
                                                      {
                                                        v376 = (uint64_t *)(v367
                                                                         - 32 * (*(_DWORD *)(v367 + 20) & 0x7FFFFFF));
                                                        v369 = *v376;
                                                        if (*v376)
                                                        {
                                                          v370 = v376[4];
                                                          if (v370)
                                                          {
LABEL_635:
                                                            if (*(_BYTE *)(v370 + 16) != 16)
                                                              goto LABEL_672;
                                                            v377 = *(_QWORD *)(v193 - 32);
                                                            if (!v377)
                                                              goto LABEL_672;
                                                            goto LABEL_669;
                                                          }
                                                        }
                                                      }
                                                    }
LABEL_672:
                                                    v16 = (uint64_t ***)sub_1C5781CD4(a1, (_BYTE *)a2);
                                                    if (v16)
                                                      return (llvm::UndefValue **)v16;
                                                    v403 = v194 + 8;
                                                    v402 = *(_QWORD *)(v194 + 8);
                                                    if (!v402 || *(_QWORD *)(v402 + 8))
                                                    {
LABEL_675:
                                                      v405 = v193 + 8;
                                                      v404 = *(_QWORD *)(v193 + 8);
                                                      if (!v404 || *(_QWORD *)(v404 + 8))
                                                      {
LABEL_677:
                                                        if (!v402)
                                                        {
                                                          v407 = *(unsigned __int8 *)(v194 + 16);
                                                          goto LABEL_685;
                                                        }
                                                        v406 = *(_QWORD *)(v402 + 8);
                                                        v407 = *(unsigned __int8 *)(v194 + 16);
                                                        if (!v406)
                                                        {
                                                          if (v407 == 5)
                                                          {
                                                            if (*(_WORD *)(v194 + 18) != 28)
                                                              goto LABEL_688;
                                                            v409 = v194 - 32 * (*(_DWORD *)(v194 + 20) & 0x7FFFFFF);
                                                            v408 = *(llvm::Type **)v409;
                                                            if (*(_QWORD *)v409)
                                                            {
                                                              v707 = *(llvm::Type **)v409;
                                                              v410 = *(llvm::Type **)(v409 + 32);
                                                              if ((llvm::Type *)v193 == v410)
                                                                goto LABEL_811;
                                                            }
                                                            else
                                                            {
                                                              v410 = *(llvm::Type **)(v409 + 32);
                                                            }
                                                            if (!v410)
                                                              goto LABEL_688;
                                                          }
                                                          else
                                                          {
                                                            if (v407 != 56)
                                                              goto LABEL_685;
                                                            v409 = v194 - 64;
                                                            v408 = *(llvm::Type **)(v194 - 64);
                                                            if (v408)
                                                            {
                                                              v707 = *(llvm::Type **)(v194 - 64);
                                                              v410 = *(llvm::Type **)(v194 - 32);
                                                              if ((llvm::Type *)v193 == v410)
                                                                goto LABEL_811;
                                                            }
                                                            else
                                                            {
                                                              v410 = *(llvm::Type **)(v194 - 32);
                                                            }
                                                            if (!v410)
                                                            {
                                                              if (!v404)
                                                                goto LABEL_688;
                                                              goto LABEL_687;
                                                            }
                                                          }
                                                          v707 = v410;
                                                          v408 = v410;
                                                          if (v193 == *(_QWORD *)v409)
                                                          {
LABEL_811:
                                                            v476 = *(_QWORD *)(a1 + 24);
                                                            LOWORD(v703) = 257;
                                                            v477 = sub_1C506EAA0(v476, (uint64_t)v408, (uint64_t)&v701);
                                                            v711 = 257;
                                                            v478 = (char *)operator new(0x80uLL);
                                                            *((_QWORD *)v478 + 6) = 0;
                                                            *((_QWORD *)v478 + 5) = 0;
                                                            v479 = v478 + 40;
                                                            *((_QWORD *)v478 + 8) = *(_QWORD *)v193;
                                                            v16 = (uint64_t ***)(v478 + 64);
                                                            *((_QWORD *)v478 + 3) = v478 + 64;
                                                            *((_QWORD *)v478 + 7) = v478 + 64;
                                                            *((_QWORD *)v478 + 9) = 0;
                                                            v478[80] = 56;
                                                            v478[81] = 0;
                                                            *((_WORD *)v478 + 41) = 0;
                                                            *((_DWORD *)v478 + 21) = 2;
                                                            *(_OWORD *)(v478 + 88) = 0u;
                                                            *(_OWORD *)(v478 + 104) = 0u;
                                                            *((_DWORD *)v478 + 30) = 0;
                                                            *(_QWORD *)v478 = v193;
                                                            v480 = *(_QWORD *)(v193 + 8);
                                                            *((_QWORD *)v478 + 1) = v480;
                                                            if (v480)
                                                              *(_QWORD *)(v480 + 16) = v478 + 8;
                                                            *((_QWORD *)v478 + 2) = v405;
                                                            *(_QWORD *)v405 = v478;
LABEL_836:
                                                            *((_QWORD *)v478 + 4) = v477;
                                                            if (v477)
                                                            {
                                                              v491 = *(_QWORD *)(v477 + 8);
                                                              v490 = (_QWORD *)(v477 + 8);
                                                              v489 = v491;
                                                              *v479 = v491;
                                                              if (v491)
                                                                *(_QWORD *)(v489 + 16) = v479;
                                                              *((_QWORD *)v478 + 6) = v490;
                                                              *v490 = v478 + 32;
                                                            }
LABEL_840:
                                                            p_src = (void **)&v708;
                                                            goto LABEL_134;
                                                          }
                                                        }
LABEL_685:
                                                        if (!v404 || v407 < 0x15)
                                                          goto LABEL_688;
LABEL_687:
                                                        if (*(_QWORD *)(v404 + 8))
                                                          goto LABEL_688;
                                                        v436 = *(unsigned __int8 *)(v193 + 16);
                                                        if (v436 == 5)
                                                        {
                                                          if (*(_WORD *)(v193 + 18) != 28)
                                                            goto LABEL_688;
                                                          v438 = v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF);
                                                          v437 = *(llvm::Type **)v438;
                                                          if (*(_QWORD *)v438)
                                                          {
                                                            v707 = *(llvm::Type **)v438;
                                                            v439 = *(llvm::Type **)(v438 + 32);
LABEL_743:
                                                            if ((llvm::Type *)v194 == v439)
                                                            {
LABEL_833:
                                                              v487 = *(_QWORD *)(a1 + 24);
                                                              LOWORD(v703) = 257;
                                                              v477 = sub_1C506EAA0(v487, (uint64_t)v437, (uint64_t)&v701);
                                                              v711 = 257;
                                                              v478 = (char *)operator new(0x80uLL);
                                                              *((_QWORD *)v478 + 6) = 0;
                                                              *((_QWORD *)v478 + 5) = 0;
                                                              v479 = v478 + 40;
                                                              *((_QWORD *)v478 + 8) = *(_QWORD *)v194;
                                                              v16 = (uint64_t ***)(v478 + 64);
                                                              *((_QWORD *)v478 + 3) = v478 + 64;
                                                              *((_QWORD *)v478 + 7) = v478 + 64;
                                                              *((_QWORD *)v478 + 9) = 0;
                                                              v478[80] = 56;
                                                              v478[81] = 0;
                                                              *((_WORD *)v478 + 41) = 0;
                                                              *((_DWORD *)v478 + 21) = 2;
                                                              *(_OWORD *)(v478 + 88) = 0u;
                                                              *(_OWORD *)(v478 + 104) = 0u;
                                                              *((_DWORD *)v478 + 30) = 0;
                                                              *(_QWORD *)v478 = v194;
                                                              v488 = *(_QWORD *)(v194 + 8);
                                                              *((_QWORD *)v478 + 1) = v488;
                                                              if (v488)
                                                                *(_QWORD *)(v488 + 16) = v478 + 8;
                                                              *((_QWORD *)v478 + 2) = v403;
                                                              *(_QWORD *)v403 = v478;
                                                              goto LABEL_836;
                                                            }
                                                            goto LABEL_831;
                                                          }
                                                          v439 = *(llvm::Type **)(v438 + 32);
                                                        }
                                                        else
                                                        {
                                                          if (v436 != 56)
                                                            goto LABEL_688;
                                                          v438 = v193 - 64;
                                                          v437 = *(llvm::Type **)(v193 - 64);
                                                          if (v437)
                                                          {
                                                            v707 = *(llvm::Type **)(v193 - 64);
                                                            v439 = *(llvm::Type **)(v193 - 32);
                                                            goto LABEL_743;
                                                          }
                                                          v439 = *(llvm::Type **)(v193 - 32);
                                                        }
LABEL_831:
                                                        if (v439)
                                                        {
                                                          v707 = v439;
                                                          v437 = v439;
                                                          if (v194 == *(_QWORD *)v438)
                                                            goto LABEL_833;
                                                        }
LABEL_688:
                                                        v705 = 0;
                                                        v706 = 0;
                                                        v699 = 0;
                                                        *(_QWORD *)&v701 = &v706;
                                                        *((_QWORD *)&v701 + 1) = &v705;
                                                        *(_QWORD *)&v702 = &v706;
                                                        *((_QWORD *)&v702 + 1) = &v699;
                                                        if (sub_1C57BF798((_QWORD **)&v701, a2))
                                                        {
                                                          v411 = *(_QWORD *)(a1 + 24);
                                                          LOWORD(v703) = 257;
                                                          v412 = (_QWORD *)sub_1C506EAA0(v411, (uint64_t)v706, (uint64_t)&v701);
                                                          v711 = 257;
                                                          v413 = (_QWORD *)sub_1C4D89BCC(v411, v412, (uint64_t)v699, (uint64_t)&v708);
                                                          v414 = v705;
LABEL_692:
                                                          v698 = 257;
                                                          v417 = (char *)operator new(0x80uLL);
                                                          *((_QWORD *)v417 + 5) = 0;
                                                          v418 = v417 + 40;
                                                          *((_QWORD *)v417 + 6) = 0;
                                                          *((_QWORD *)v417 + 8) = *v413;
                                                          v16 = (uint64_t ***)(v417 + 64);
                                                          *((_QWORD *)v417 + 3) = v417 + 64;
                                                          *((_QWORD *)v417 + 7) = v417 + 64;
                                                          *((_QWORD *)v417 + 9) = 0;
                                                          v417[80] = 58;
                                                          v417[81] = 0;
                                                          *((_WORD *)v417 + 41) = 0;
                                                          *((_DWORD *)v417 + 21) = 2;
                                                          *(_OWORD *)(v417 + 88) = 0u;
                                                          *(_OWORD *)(v417 + 104) = 0u;
                                                          *((_DWORD *)v417 + 30) = 0;
                                                          *(_QWORD *)v417 = v413;
                                                          v421 = v413[1];
                                                          v420 = v413 + 1;
                                                          v419 = v421;
                                                          *((_QWORD *)v417 + 1) = v421;
                                                          if (v421)
                                                            *(_QWORD *)(v419 + 16) = v417 + 8;
                                                          *((_QWORD *)v417 + 2) = v420;
                                                          *v420 = v417;
                                                          *((_QWORD *)v417 + 4) = v414;
                                                          if (v414)
                                                          {
                                                            v424 = *((_QWORD *)v414 + 1);
                                                            v423 = (_QWORD *)((char *)v414 + 8);
                                                            v422 = v424;
                                                            *v418 = v424;
                                                            if (v424)
                                                              *(_QWORD *)(v422 + 16) = v418;
                                                            *((_QWORD *)v417 + 6) = v423;
                                                            *v423 = v417 + 32;
                                                          }
                                                          p_src = &__src;
                                                          goto LABEL_134;
                                                        }
                                                        *(_QWORD *)&v701 = &v706;
                                                        *((_QWORD *)&v701 + 1) = &v705;
                                                        *(_QWORD *)&v702 = &v705;
                                                        *((_QWORD *)&v702 + 1) = &v699;
                                                        if (sub_1C57BF798((_QWORD **)&v701, a2))
                                                        {
                                                          v415 = *(_QWORD *)(a1 + 24);
                                                          LOWORD(v703) = 257;
                                                          v416 = (_QWORD *)sub_1C506EAA0(v415, (uint64_t)v705, (uint64_t)&v701);
                                                          v711 = 257;
                                                          v413 = (_QWORD *)sub_1C4D89BCC(v415, v416, (uint64_t)v699, (uint64_t)&v708);
                                                          v414 = v706;
                                                          goto LABEL_692;
                                                        }
                                                        v433 = *(unsigned __int8 *)(v193 + 16);
                                                        switch(v433)
                                                        {
                                                          case 5:
                                                            v440 = *(unsigned __int16 *)(v193 + 18);
                                                            if (v440 != 28)
                                                              goto LABEL_824;
                                                            v441 = v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF);
                                                            v434 = *(llvm::APInt **)v441;
                                                            if (!*(_QWORD *)v441)
                                                              goto LABEL_852;
                                                            v706 = *(llvm::APInt **)v441;
                                                            v435 = *(llvm::APInt **)(v441 + 32);
                                                            if (!v435)
                                                              goto LABEL_852;
                                                            break;
                                                          case 58:
                                                            v434 = *(llvm::APInt **)(v193 - 64);
                                                            if (!v434)
                                                              goto LABEL_852;
                                                            v706 = *(llvm::APInt **)(v193 - 64);
                                                            v435 = *(llvm::APInt **)(v193 - 32);
                                                            if (!v435)
                                                              goto LABEL_852;
LABEL_827:
                                                            v705 = v435;
                                                            v484 = *(unsigned __int8 *)(v194 + 16);
                                                            if (v484 == 5)
                                                            {
                                                              if (*(_WORD *)(v194 + 18) != 28)
                                                                goto LABEL_852;
                                                              v492 = (llvm::APInt **)(v194
                                                                                    - 32
                                                                                    * (*(_DWORD *)(v194 + 20) & 0x7FFFFFF));
                                                              v485 = *v492;
                                                              v486 = v492[4];
                                                            }
                                                            else
                                                            {
                                                              if (v484 != 56)
                                                                goto LABEL_852;
                                                              v485 = *(llvm::APInt **)(v194 - 64);
                                                              v486 = *(llvm::APInt **)(v194 - 32);
                                                            }
                                                            if ((v434 != v485 || v435 != v486)
                                                              && (v434 != v486 || v435 != v485))
                                                            {
LABEL_852:
                                                              *(_QWORD *)&v701 = &v706;
                                                              *((_QWORD *)&v701 + 1) = &v705;
                                                              if (!sub_1C4E74064((_QWORD **)&v701, 28, v193))goto LABEL_878;
                                                              v501 = v706;
                                                              v708 = (uint64_t)v706;
                                                              v502 = *(unsigned __int8 *)(v194 + 16);
                                                              if (v502 == 5)
                                                              {
                                                                if (*(_WORD *)(v194 + 18) != 30)
                                                                  goto LABEL_878;
                                                                v503 = *(_DWORD *)(v194 + 20) & 0x7FFFFFF;
                                                                v504 = (llvm::APInt **)(v194 - 32 * v503);
                                                                if (v706 == *v504)
                                                                {
                                                                  if ((sub_1C4D9EED4((uint64_t)&v709, v504[4]) & 1) != 0)
                                                                    goto LABEL_877;
                                                                  v501 = (llvm::APInt *)v708;
                                                                  v505 = -(uint64_t)(*(_DWORD *)(v194 + 20) & 0x7FFFFFF);
                                                                }
                                                                else
                                                                {
                                                                  v505 = -v503;
                                                                }
                                                                v514 = (llvm::Constant **)(v194 + 32 * v505);
                                                                if (v501 != v514[4]
                                                                  || !sub_1C4D9EED4((uint64_t)&v709, *v514))
                                                                {
LABEL_878:
                                                                  *(_QWORD *)&v701 = &v706;
                                                                  *(_QWORD *)&v702 = &v705;
                                                                  *((_QWORD *)&v702 + 1) = &v706;
                                                                  v518 = *(unsigned __int8 *)(a2 + 16);
                                                                  if (v518 == 5)
                                                                  {
                                                                    if (*(_WORD *)(a2 + 18) == 30)
                                                                    {
                                                                      v523 = (uint64_t *)(a2
                                                                                       - 32
                                                                                       * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
                                                                      v524 = sub_1C57BFD04((_QWORD **)&v701, *v523, (char)v523);
                                                                      v525 = a2
                                                                           - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
                                                                      v526 = *(_QWORD *)(v525 + 32);
                                                                      if (v524)
                                                                      {
                                                                        v525 = **((_QWORD **)&v702 + 1);
                                                                        if (**((_QWORD **)&v702 + 1) == v526)
                                                                          goto LABEL_916;
                                                                      }
                                                                      if (sub_1C57BFD04((_QWORD **)&v701, v526, v525))
                                                                      {
                                                                        v522 = (uint64_t *)(a2
                                                                                         - 32
                                                                                         * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
                                                                        goto LABEL_889;
                                                                      }
                                                                    }
                                                                  }
                                                                  else if (v518 == 58)
                                                                  {
                                                                    v519 = sub_1C4E76FA0((_QWORD **)&v701, 28, *(_QWORD *)(a2 - 64));
                                                                    v520 = *(_QWORD *)(a2 - 32);
                                                                    if (v519 && **((_QWORD **)&v702 + 1) == v520)
                                                                      goto LABEL_916;
                                                                    v521 = sub_1C4E76FA0((_QWORD **)&v701, 28, v520);
                                                                    v522 = v9;
                                                                    if ((v521 & 1) == 0)
                                                                      goto LABEL_890;
LABEL_889:
                                                                    if (**((_QWORD **)&v702 + 1) != *v522)
                                                                      goto LABEL_890;
LABEL_916:
                                                                    v54 = v705;
                                                                    v53 = v706;
                                                                    LOWORD(v703) = 257;
                                                                    v55 = (char *)operator new(0x80uLL);
                                                                    *((_QWORD *)v55 + 5) = 0;
                                                                    v56 = v55 + 40;
                                                                    *((_QWORD *)v55 + 6) = 0;
                                                                    *((_QWORD *)v55 + 8) = *v53;
                                                                    v16 = (uint64_t ***)(v55 + 64);
                                                                    *((_QWORD *)v55 + 3) = v55 + 64;
                                                                    *((_QWORD *)v55 + 7) = v55 + 64;
                                                                    *((_QWORD *)v55 + 9) = 0;
                                                                    v57 = 57;
                                                                    goto LABEL_95;
                                                                  }
LABEL_890:
                                                                  *(_QWORD *)&v701 = v194;
                                                                  *(_QWORD *)&v702 = &v705;
                                                                  if (*(_QWORD *)v405
                                                                    && !*(_QWORD *)(*(_QWORD *)v405 + 8)
                                                                    && sub_1C57BFE1C((uint64_t *)&v701, 29, v193))
                                                                  {
                                                                    v515 = *(_QWORD *)(a1 + 24);
                                                                    v517 = v705;
                                                                    LOWORD(v703) = 257;
                                                                    v516 = (llvm::APInt *)v194;
                                                                    goto LABEL_898;
                                                                  }
                                                                  *(_QWORD *)&v701 = v193;
                                                                  *(_QWORD *)&v702 = &v705;
                                                                  if (*(_QWORD *)v403
                                                                    && !*(_QWORD *)(*(_QWORD *)v403 + 8)
                                                                    && sub_1C57BFE1C((uint64_t *)&v701, 29, v194))
                                                                  {
                                                                    v515 = *(_QWORD *)(a1 + 24);
                                                                    v517 = v705;
                                                                    LOWORD(v703) = 257;
                                                                    v516 = (llvm::APInt *)v193;
                                                                    goto LABEL_898;
                                                                  }
                                                                  if (*(_QWORD *)v405
                                                                    && !*(_QWORD *)(*(_QWORD *)v405 + 8))
                                                                  {
                                                                    v537 = *(unsigned __int8 *)(v193 + 16);
                                                                    if (v537 == 5)
                                                                    {
                                                                      if (*(_WORD *)(v193 + 18) != 29)
                                                                        goto LABEL_901;
                                                                      v541 = (llvm **)(v193
                                                                                     - 32
                                                                                     * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                                                                      v538 = *v541;
                                                                      if (!*v541)
                                                                        goto LABEL_901;
                                                                      v706 = *v541;
                                                                      v539 = v541[4];
                                                                      if (!v539)
                                                                        goto LABEL_901;
                                                                    }
                                                                    else
                                                                    {
                                                                      if (v537 != 57)
                                                                        goto LABEL_901;
                                                                      v538 = *(llvm **)(v193 - 64);
                                                                      if (!v538)
                                                                        goto LABEL_901;
                                                                      v706 = *(llvm::APInt **)(v193 - 64);
                                                                      v539 = *(llvm **)(v193 - 32);
                                                                      if (!v539)
                                                                        goto LABEL_901;
                                                                    }
                                                                    v705 = v539;
                                                                    if (*(_QWORD *)v403
                                                                      && !*(_QWORD *)(*(_QWORD *)v403 + 8))
                                                                    {
                                                                      v542 = *(unsigned __int8 *)(v194 + 16);
                                                                      if (v542 == 5)
                                                                      {
                                                                        if (*(_WORD *)(v194 + 18) != 29)
                                                                          goto LABEL_901;
                                                                        v545 = (llvm::APInt **)(v194
                                                                                              - 32
                                                                                              * (*(_DWORD *)(v194 + 20) & 0x7FFFFFF));
                                                                        v543 = *v545;
                                                                        if (!*v545)
                                                                          goto LABEL_901;
                                                                        v699 = *v545;
                                                                        v544 = v545[4];
                                                                        if (!v544)
                                                                          goto LABEL_901;
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v542 != 57)
                                                                          goto LABEL_901;
                                                                        v543 = *(llvm::APInt **)(v194 - 64);
                                                                        if (!v543)
                                                                          goto LABEL_901;
                                                                        v699 = *(llvm::APInt **)(v194 - 64);
                                                                        v544 = *(llvm::APInt **)(v194 - 32);
                                                                        if (!v544)
                                                                          goto LABEL_901;
                                                                      }
                                                                      if (v539 == v543 || v539 == v544)
                                                                      {
                                                                        v705 = v538;
                                                                        v706 = v539;
                                                                      }
                                                                      else
                                                                      {
                                                                        v539 = v538;
                                                                      }
                                                                      if (v539 == v543)
                                                                        v699 = v544;
                                                                      else
                                                                        v543 = v544;
                                                                      if (v539 == v543)
                                                                      {
                                                                        v546 = *(_QWORD *)(a1 + 24);
                                                                        LOWORD(v703) = 257;
                                                                        v547 = sub_1C506EAA0(v546, (uint64_t)v539, (uint64_t)&v701);
                                                                        v548 = *(uint64_t **)(a1 + 24);
                                                                        LOWORD(v703) = 257;
                                                                        v549 = sub_1C506EC1C(v548, v705, (uint64_t)v699, (uint64_t)&v701);
                                                                        v711 = 257;
                                                                        v550 = (char *)operator new(0x80uLL);
                                                                        *((_QWORD *)v550 + 5) = 0;
                                                                        v551 = v550 + 40;
                                                                        *((_QWORD *)v550 + 6) = 0;
                                                                        *((_QWORD *)v550 + 8) = *(_QWORD *)v549;
                                                                        v16 = (uint64_t ***)(v550 + 64);
                                                                        *((_QWORD *)v550 + 3) = v550 + 64;
                                                                        *((_QWORD *)v550 + 7) = v550 + 64;
                                                                        *((_QWORD *)v550 + 9) = 0;
                                                                        v550[80] = 56;
                                                                        v550[81] = 0;
                                                                        *((_WORD *)v550 + 41) = 0;
                                                                        *((_DWORD *)v550 + 21) = 2;
                                                                        *(_OWORD *)(v550 + 88) = 0u;
                                                                        *(_OWORD *)(v550 + 104) = 0u;
                                                                        *((_DWORD *)v550 + 30) = 0;
                                                                        *(_QWORD *)v550 = v549;
                                                                        v554 = *((_QWORD *)v549 + 1);
                                                                        v553 = v549 + 8;
                                                                        v552 = v554;
                                                                        *((_QWORD *)v550 + 1) = v554;
                                                                        if (v554)
                                                                          *(_QWORD *)(v552 + 16) = v550 + 8;
                                                                        *((_QWORD *)v550 + 2) = v553;
                                                                        *v553 = v550;
                                                                        *((_QWORD *)v550 + 4) = v547;
                                                                        if (v547)
                                                                        {
                                                                          v557 = *(_QWORD *)(v547 + 8);
                                                                          v556 = (_QWORD *)(v547 + 8);
                                                                          v555 = v557;
                                                                          *v551 = v557;
                                                                          if (v557)
                                                                            *(_QWORD *)(v555 + 16) = v551;
                                                                          *((_QWORD *)v550 + 6) = v556;
                                                                          *v556 = v550 + 32;
                                                                        }
                                                                        goto LABEL_840;
                                                                      }
                                                                    }
                                                                  }
LABEL_901:
                                                                  v528 = *v9;
                                                                  if (!*v9)
                                                                    goto LABEL_1079;
                                                                  if (*(_BYTE *)(v528 + 16) != 81)
                                                                    goto LABEL_1079;
                                                                  v529 = *(_QWORD *)(a2 - 32);
                                                                  if (!v529 || *(_BYTE *)(v529 + 16) != 81)
                                                                    goto LABEL_1079;
                                                                  v530 = *(_WORD *)(v528 + 18);
                                                                  v531 = v530 & 0x3F;
                                                                  v532 = (*(_WORD *)(v529 + 18) & 0x3F) - 38;
                                                                  if ((v531 - 38) < 4 != v532 < 4)
                                                                  {
                                                                    v533 = (v531 - 38) < 4
                                                                        && (*(_WORD *)(v529 + 18) & 0x3E) == 32;
                                                                    v534 = v533;
                                                                    if (v533 || v532 > 3)
                                                                    {
                                                                      v535 = *(llvm::Constant ***)(v528 - 64);
                                                                      v536 = (llvm::Constant ***)(v529 - 64);
                                                                      if ((v534 & 1) == 0)
                                                                      {
LABEL_937:
                                                                        v540 = *v536;
                                                                        goto LABEL_968;
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      v535 = *(llvm::Constant ***)(v528 - 64);
                                                                      v536 = (llvm::Constant ***)(v529 - 64);
                                                                      if ((v530 & 0x3E) != 0x20)
                                                                        goto LABEL_937;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    v535 = *(llvm::Constant ***)(v528 - 64);
                                                                  }
                                                                  v540 = *(llvm::Constant ***)(v529 - 64);
                                                                  if (v535 == *(llvm::Constant ***)(v529 - 32)
                                                                    && *(llvm::Constant ***)(v528 - 32) == v540)
                                                                  {
                                                                    __asm { BR              X14 }
                                                                  }
                                                                  if (v535 == v540)
                                                                  {
                                                                    v564 = *(_QWORD *)(v528 - 32);
                                                                    if (v564 == *(_QWORD *)(v529 - 32))
                                                                    {
                                                                      v571 = v530 & 0x3F;
                                                                      v572 = *(_WORD *)(v529 + 18) & 0x3F;
                                                                      v574 = (v571 - 38) < 4
                                                                          || (v572 - 38) < 4;
                                                                      v575 = sub_1C57A5A94(dword_1C8660B50[v572 - 32] ^ dword_1C8660B50[v571 - 32], v574, *(uint64_t **)(v529 - 64), v564, *(_QWORD *)(a1 + 24));
LABEL_1078:
                                                                      v14 = (llvm::Value *)v575;
                                                                      if (v575)
                                                                        return sub_1C577F888(a1, (llvm::ValueAsMetadata *)a2, v14);
LABEL_1079:
                                                                      sub_1C57A8198(a1, (unsigned __int8 *)a2);
                                                                      v16 = v634;
                                                                      if (v634)
                                                                        return (llvm::UndefValue **)v16;
                                                                      v635 = *(_QWORD *)(a1 + 24);
                                                                      v636 = *(_QWORD *)(a2 - 64);
                                                                      v637 = *(_QWORD *)(a2 - 32);
                                                                      v638 = *(_QWORD *)(v636 + 8);
                                                                      if (v638)
                                                                      {
                                                                        v639 = *(_QWORD *)(v638 + 8);
                                                                        if (v639)
                                                                        {
                                                                          v640 = *(_QWORD *)(v639 + 8);
                                                                          v641 = v640 == 0;
                                                                          if (v640)
                                                                            v642 = *(_QWORD *)(a2 - 32);
                                                                          else
                                                                            v642 = *(_QWORD *)(a2 - 64);
                                                                          if (v641)
                                                                            v636 = *(_QWORD *)(a2 - 32);
                                                                          v637 = v642;
                                                                        }
                                                                      }
                                                                      v643 = *(_QWORD *)a2;
                                                                      __src = 0;
                                                                      *(_QWORD *)&v701 = &v708;
                                                                      *((_QWORD *)&v701 + 1) = &__src;
                                                                      *(_QWORD *)&v702 = 0;
                                                                      v644 = *(unsigned __int8 *)(v637 + 16);
                                                                      if (v644 == 5)
                                                                      {
                                                                        if (*(_WORD *)(v637 + 18) != 27)
                                                                          goto LABEL_1099;
                                                                        v645 = v637
                                                                             - 32
                                                                             * (*(_DWORD *)(v637 + 20) & 0x7FFFFFF);
                                                                        if (!*(_QWORD *)v645)
                                                                          goto LABEL_1099;
                                                                        v708 = *(_QWORD *)v645;
                                                                        if (!sub_1C4D8A004((uint64_t)&v701 + 8, *(llvm::Constant **)(v645 + 32)))goto LABEL_1099;
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v644 != 55)
                                                                          goto LABEL_1099;
                                                                        if (!*(_QWORD *)(v637 - 64))
                                                                          goto LABEL_1099;
                                                                        v708 = *(_QWORD *)(v637 - 64);
                                                                        if ((sub_1C4D89F84((uint64_t)&v701 + 8, *(unsigned __int8 **)(v637 - 32)) & 1) == 0)goto LABEL_1099;
                                                                      }
                                                                      v646 = *(_QWORD *)(v637 + 8);
                                                                      if (v646)
                                                                      {
                                                                        v647 = *(_QWORD *)(v646 + 8);
                                                                        if (v647)
                                                                        {
                                                                          if (!*(_QWORD *)(v647 + 8))
                                                                          {
                                                                            v666 = (llvm::APInt *)__src;
                                                                            v667 = (llvm::Type *)v643;
                                                                            if ((*(_DWORD *)(v643 + 8) & 0xFE) == 0x12)
                                                                              v667 = **(llvm::Type ***)(v643 + 16);
                                                                            v669 = llvm::Type::getPrimitiveSizeInBits(v667);
                                                                            v670 = *((_DWORD *)v666 + 2);
                                                                            if (v670 >= 0x41)
                                                                            {
                                                                              if (v670
                                                                                 - llvm::APInt::countLeadingZerosSlowCase(v666) > 0x40)
                                                                                goto LABEL_1099;
                                                                              v666 = *(llvm::APInt **)v666;
                                                                            }
                                                                            if (*(_QWORD *)v666 == v669 - 1)
                                                                            {
                                                                              v671 = *(_QWORD *)(v636 + 8);
                                                                              if (v671)
                                                                              {
                                                                                if (!*(_QWORD *)(v671 + 8))
                                                                                {
                                                                                  v672 = v708;
                                                                                  v673 = *(unsigned __int8 *)(v636 + 16);
                                                                                  if (v673 == 5)
                                                                                  {
                                                                                    if (*(_WORD *)(v636 + 18) != 13)
                                                                                      goto LABEL_1099;
                                                                                    v686 = v636
                                                                                         - 32
                                                                                         * (*(_DWORD *)(v636 + 20) & 0x7FFFFFF);
                                                                                    v674 = *(void **)v686;
                                                                                    v675 = *(void **)(v686 + 32);
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    if (v673 != 41)
                                                                                      goto LABEL_1099;
                                                                                    v674 = *(void **)(v636 - 64);
                                                                                    v675 = *(void **)(v636 - 32);
                                                                                  }
                                                                                  if ((void *)v708 == v674
                                                                                    && (void *)v637 == v675
                                                                                    || (void *)v708 == v675
                                                                                    && (void *)v637 == v674)
                                                                                  {
                                                                                    NullValue = llvm::Constant::getNullValue((llvm::Constant *)v643, v668);
                                                                                    LOWORD(v703) = 257;
                                                                                    v688 = sub_1C4774B48(v635, 40, v672, (uint64_t)NullValue, (uint64_t)&v701);
                                                                                    LOWORD(v703) = 257;
                                                                                    v689 = (uint64_t *)sub_1C5346748(v635, v708, (uint64_t)&v701, (*(unsigned __int8 *)(v636 + 17) >> 1) & 1, (*(unsigned __int8 *)(v636 + 17) >> 2) & 1);
                                                                                    LOWORD(v703) = 257;
                                                                                    v16 = (uint64_t ***)sub_1C4FC8748(v688, v689, v708, (uint64_t)&v701, 0, 0);
                                                                                    if (v16)
                                                                                      return (llvm::UndefValue **)v16;
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
LABEL_1099:
                                                                      v648 = *(unsigned __int8 *)(a2 + 16);
                                                                      if (v648 == 58)
                                                                      {
                                                                        v649 = *v9;
                                                                        v650 = *(_QWORD *)(*v9 + 8);
                                                                        if (!v650 || *(_QWORD *)(v650 + 8))
                                                                          goto LABEL_1102;
                                                                        v660 = *(unsigned __int8 *)(v649 + 16);
                                                                        if (v660 == 5)
                                                                        {
                                                                          if (*(_WORD *)(v649 + 18) != 30)
                                                                            goto LABEL_1102;
                                                                          v665 = v649
                                                                               - 32
                                                                               * (*(_DWORD *)(v649 + 20) & 0x7FFFFFF);
                                                                          v656 = *(llvm::Type **)v665;
                                                                          if (!*(_QWORD *)v665)
                                                                            goto LABEL_1102;
                                                                          v707 = *(llvm::Type **)v665;
                                                                          if (*((_BYTE *)v656 + 16) == 5)
                                                                            goto LABEL_1102;
                                                                          v657 = *(_QWORD *)(v665 + 32);
                                                                          if (!v657)
                                                                            goto LABEL_1102;
                                                                          v661 = *(unsigned __int8 *)(v657 + 16);
                                                                        }
                                                                        else if (v660 != 58
                                                                               || (v656 = *(llvm::Type **)(v649 - 64)) == 0
                                                                               || (v707 = *(llvm::Type **)(v649 - 64),
                                                                                   *((_BYTE *)v656 + 16) == 5)
                                                                               || (v657 = *(_QWORD *)(v649 - 32)) == 0
                                                                               || (v661 = *(unsigned __int8 *)(v657 + 16),
                                                                                   v661 > 0x14))
                                                                        {
LABEL_1102:
                                                                          v651 = *(_QWORD *)(a2 - 32);
                                                                          goto LABEL_1108;
                                                                        }
                                                                        if (v661 != 5)
                                                                        {
                                                                          v659 = *(_QWORD *)(a2 - 32);
                                                                          if (v659)
                                                                            goto LABEL_1165;
                                                                        }
                                                                        goto LABEL_1102;
                                                                      }
                                                                      v16 = 0;
                                                                      if (v648 != 5 || *(_WORD *)(a2 + 18) != 30)
                                                                        return (llvm::UndefValue **)v16;
                                                                      v652 = (uint64_t *)(a2
                                                                                       - 32
                                                                                       * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
                                                                      v649 = *v652;
                                                                      v653 = *(_QWORD *)(*v652 + 8);
                                                                      if (!v653 || *(_QWORD *)(v653 + 8))
                                                                      {
LABEL_1107:
                                                                        v651 = v652[4];
LABEL_1108:
                                                                        v654 = *(_QWORD *)(v651 + 8);
                                                                        if (!v654 || *(_QWORD *)(v654 + 8))
                                                                          return 0;
                                                                        v655 = *(unsigned __int8 *)(v651 + 16);
                                                                        if (v655 != 5)
                                                                        {
                                                                          if (v655 == 58)
                                                                          {
                                                                            v656 = *(llvm::Type **)(v651 - 64);
                                                                            if (v656)
                                                                            {
                                                                              v707 = *(llvm::Type **)(v651 - 64);
                                                                              if (*((_BYTE *)v656 + 16) != 5)
                                                                              {
                                                                                v16 = 0;
                                                                                v657 = *(_QWORD *)(v651 - 32);
                                                                                if (!v657)
                                                                                  return (llvm::UndefValue **)v16;
                                                                                v658 = *(unsigned __int8 *)(v657 + 16);
                                                                                if (v658 > 0x14)
                                                                                  return (llvm::UndefValue **)v16;
                                                                                v659 = v649;
                                                                                if (v658 == 5)
                                                                                  return (llvm::UndefValue **)v16;
                                                                                goto LABEL_1165;
                                                                              }
                                                                            }
                                                                          }
                                                                          return 0;
                                                                        }
                                                                        if (*(_WORD *)(v651 + 18) != 30)
                                                                          return 0;
                                                                        v664 = v651
                                                                             - 32
                                                                             * (*(_DWORD *)(v651 + 20) & 0x7FFFFFF);
                                                                        v656 = *(llvm::Type **)v664;
                                                                        if (!*(_QWORD *)v664)
                                                                          return 0;
                                                                        v707 = *(llvm::Type **)v664;
                                                                        if (*((_BYTE *)v656 + 16) == 5)
                                                                          return 0;
                                                                        v657 = *(_QWORD *)(v664 + 32);
                                                                        if (!v657)
                                                                          return 0;
                                                                        v659 = v649;
                                                                        if (*(_BYTE *)(v657 + 16) == 5)
                                                                          return 0;
LABEL_1165:
                                                                        v677 = *(uint64_t **)(a1 + 24);
                                                                        LOWORD(v703) = 257;
                                                                        v678 = sub_1C506EC1C(v677, v656, v659, (uint64_t)&v701);
                                                                        v711 = 257;
                                                                        v679 = (char *)operator new(0x80uLL);
                                                                        *((_QWORD *)v679 + 6) = 0;
                                                                        *((_QWORD *)v679 + 5) = 0;
                                                                        *((_QWORD *)v679 + 8) = *(_QWORD *)v678;
                                                                        v16 = (uint64_t ***)(v679 + 64);
                                                                        *((_QWORD *)v679 + 3) = v679 + 64;
                                                                        *((_QWORD *)v679 + 7) = v679 + 64;
                                                                        *((_QWORD *)v679 + 9) = 0;
                                                                        v679[80] = 58;
                                                                        v679[81] = 0;
                                                                        *((_WORD *)v679 + 41) = 0;
                                                                        *((_DWORD *)v679 + 21) = 2;
                                                                        *(_OWORD *)(v679 + 88) = 0u;
                                                                        *(_OWORD *)(v679 + 104) = 0u;
                                                                        *((_DWORD *)v679 + 30) = 0;
                                                                        *(_QWORD *)v679 = v678;
                                                                        v682 = *((_QWORD *)v678 + 1);
                                                                        v681 = v678 + 8;
                                                                        v680 = v682;
                                                                        *((_QWORD *)v679 + 1) = v682;
                                                                        if (v682)
                                                                          *(_QWORD *)(v680 + 16) = v679 + 8;
                                                                        *((_QWORD *)v679 + 2) = v681;
                                                                        *v681 = v679;
                                                                        *((_QWORD *)v679 + 4) = v657;
                                                                        v685 = *(_QWORD *)(v657 + 8);
                                                                        v684 = (_QWORD *)(v657 + 8);
                                                                        v683 = v685;
                                                                        *((_QWORD *)v679 + 5) = v685;
                                                                        if (v685)
                                                                          *(_QWORD *)(v683 + 16) = v679 + 40;
                                                                        *((_QWORD *)v679 + 6) = v684;
                                                                        *v684 = v679 + 32;
                                                                        goto LABEL_840;
                                                                      }
                                                                      v662 = *(unsigned __int8 *)(v649 + 16);
                                                                      if (v662 == 5)
                                                                      {
                                                                        if (*(_WORD *)(v649 + 18) != 30)
                                                                          goto LABEL_1107;
                                                                        v676 = v649
                                                                             - 32
                                                                             * (*(_DWORD *)(v649 + 20) & 0x7FFFFFF);
                                                                        v656 = *(llvm::Type **)v676;
                                                                        if (!*(_QWORD *)v676)
                                                                          goto LABEL_1107;
                                                                        v707 = *(llvm::Type **)v676;
                                                                        if (*((_BYTE *)v656 + 16) == 5)
                                                                          goto LABEL_1107;
                                                                        v657 = *(_QWORD *)(v676 + 32);
                                                                        if (!v657)
                                                                          goto LABEL_1107;
                                                                        v663 = *(unsigned __int8 *)(v657 + 16);
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v662 != 58)
                                                                          goto LABEL_1107;
                                                                        v656 = *(llvm::Type **)(v649 - 64);
                                                                        if (!v656)
                                                                          goto LABEL_1107;
                                                                        v707 = *(llvm::Type **)(v649 - 64);
                                                                        if (*((_BYTE *)v656 + 16) == 5)
                                                                          goto LABEL_1107;
                                                                        v657 = *(_QWORD *)(v649 - 32);
                                                                        if (!v657)
                                                                          goto LABEL_1107;
                                                                        v663 = *(unsigned __int8 *)(v657 + 16);
                                                                        if (v663 > 0x14)
                                                                          goto LABEL_1107;
                                                                      }
                                                                      if (v663 != 5)
                                                                      {
                                                                        v659 = v652[4];
                                                                        if (v659)
                                                                          goto LABEL_1165;
                                                                      }
                                                                      goto LABEL_1107;
                                                                    }
                                                                    v535 = *(llvm::Constant ***)(v529 - 64);
                                                                  }
LABEL_968:
                                                                  v565 = *(unsigned __int8 **)(v528 - 32);
                                                                  v566 = *(unsigned __int8 **)(v529 - 32);
                                                                  v567 = *(_QWORD *)(v528 + 8);
                                                                  if (!v567 || *(_QWORD *)(v567 + 8))
                                                                  {
                                                                    v568 = *(_QWORD *)(v529 + 8);
                                                                    if (!v568 || *(_QWORD *)(v568 + 8))
                                                                      goto LABEL_1019;
                                                                  }
                                                                  v569 = *v535;
                                                                  if (*v535 != *v540)
                                                                    goto LABEL_1019;
                                                                  v570 = (*((_DWORD *)v569 + 2) & 0xFE) == 0x12
                                                                       ? *(unsigned __int8 *)(**((_QWORD **)v569 + 2)
                                                                                            + 8)
                                                                       : *((_DWORD *)v569 + 2);
                                                                  if (v570 != 13)
                                                                    goto LABEL_1019;
                                                                  v576 = v530 & 0x3F;
                                                                  v577 = *(_WORD *)(v529 + 18) & 0x3F;
                                                                  if (v576 == 40)
                                                                  {
                                                                    if (v565 && v565[16] < 0x15u)
                                                                    {
                                                                      v584 = (llvm::Constant::isNullValue(*(llvm::Constant **)(v528 - 32)) & 1) != 0
                                                                           ? 1
                                                                           : sub_1C4E71060((uint64_t)&v701, (llvm::Constant *)v565);
                                                                      if (v584
                                                                        && v577 == 40
                                                                        && v566
                                                                        && v566[16] <= 0x14u
                                                                        && ((llvm::Constant::isNullValue((llvm::Constant *)v566) & 1) != 0
                                                                         || (sub_1C4E71060((uint64_t)&v701, (llvm::Constant *)v566) & 1) != 0))
                                                                      {
                                                                        goto LABEL_989;
                                                                      }
                                                                    }
                                                                    if (!v565 || v565[16] >= 0x15u)
                                                                      goto LABEL_1019;
                                                                    v586 = (llvm::Constant::isNullValue((llvm::Constant *)v565) & 1) != 0
                                                                         ? 1
                                                                         : sub_1C4E71060((uint64_t)&v701, (llvm::Constant *)v565);
                                                                    if (!v586
                                                                      || v577 != 38
                                                                      || (sub_1C4D9ED34((uint64_t)&__src, (llvm::Constant *)v566) & 1) == 0)
                                                                    {
                                                                      goto LABEL_1019;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    if (v576 != 38)
                                                                      goto LABEL_1019;
                                                                    if (sub_1C4D9ED34((uint64_t)&v708, *(llvm::Constant **)(v528 - 32))&& v577 == 38)
                                                                    {
                                                                      if ((sub_1C4D9ED34((uint64_t)&__src, (llvm::Constant *)v566) & 1) != 0)
                                                                      {
LABEL_989:
                                                                        v579 = llvm::Constant::getNullValue(*v535, v578);
                                                                        v580 = *(uint64_t **)(a1 + 24);
                                                                        LOWORD(v703) = 257;
                                                                        v581 = sub_1C506EC1C(v580, v535, (uint64_t)v540, (uint64_t)&v701);
                                                                        v711 = 257;
                                                                        v582 = (uint64_t)v580;
                                                                        v583 = 40;
LABEL_1018:
                                                                        v575 = sub_1C4774B48(v582, v583, (uint64_t)v581, (uint64_t)v579, (uint64_t)&v708);
                                                                        goto LABEL_1078;
                                                                      }
                                                                      sub_1C4D9ED34((uint64_t)&v708, (llvm::Constant *)v565);
LABEL_1019:
                                                                      v588 = sub_1C4E65634((llvm *)v528, (llvm::Constant *)v529, a1 + 88, 3, v499, v500);
                                                                      if (!v588)
                                                                        goto LABEL_1079;
                                                                      v591 = v588;
                                                                      v592 = sub_1C4E640C8((llvm *)v528, (llvm::Constant *)v529, a1 + 88, 3, v589, v590);
                                                                      if (!v592)
                                                                        goto LABEL_1079;
                                                                      v593 = v591 == (llvm::ValueHandleBase *)v528;
                                                                      v594 = v592 == (llvm::Value **)v529;
                                                                      v595 = !v593 || !v594;
                                                                      v596 = v593 && v594 ? v528 : 0;
                                                                      v597 = v595 ? 0 : (llvm::Value *)v529;
                                                                      if (v591 == (llvm::ValueHandleBase *)v529
                                                                        && v592 == (llvm::Value **)v528)
                                                                      {
                                                                        v596 = v529;
                                                                        v598 = (llvm::Value *)v528;
                                                                      }
                                                                      else
                                                                      {
                                                                        v598 = v597;
                                                                      }
                                                                      if (!v596 || !v598)
                                                                        goto LABEL_1079;
                                                                      v599 = *((_QWORD *)v598 + 1);
                                                                      if ((!v599 || *(_QWORD *)(v599 + 8))
                                                                        && !sub_1C57B3C88((uint64_t)v598, a2))
                                                                      {
                                                                        goto LABEL_1079;
                                                                      }
                                                                      *((_WORD *)v598 + 9) = word_1C8660AFA[*((_WORD *)v598 + 9) & 0x3FLL] | *((_WORD *)v598 + 9) & 0xFFC0;
                                                                      v600 = *((_QWORD *)v598 + 1);
                                                                      if (v600 && !*(_QWORD *)(v600 + 8))
                                                                      {
LABEL_1077:
                                                                        v633 = *(_QWORD *)(a1 + 24);
                                                                        LOWORD(v703) = 257;
                                                                        v575 = sub_1C4D89BCC(v633, (_QWORD *)v528, v529, (uint64_t)&v701);
                                                                        goto LABEL_1078;
                                                                      }
                                                                      v708 = *(_QWORD *)(a1 + 24);
                                                                      v709 = *(_OWORD *)(v708 + 48);
                                                                      llvm::IRBuilderBase::getCurrentDebugLocation((unsigned int *)v708, &v710);
                                                                      sub_1C4D8AE2C(*(_QWORD *)(a1 + 24), *((_QWORD *)v598 + 5), *((_QWORD *)v598 + 4));
                                                                      v601 = *(_QWORD *)(a1 + 24);
                                                                      if ((*((_BYTE *)v598 + 23) & 0x10) == 0)
                                                                      {
                                                                        v612 = 0;
                                                                        v611 = &byte_1C871356D;
                                                                        goto LABEL_1046;
                                                                      }
                                                                      v602 = ***(_QWORD ***)v598;
                                                                      v603 = *(_QWORD *)(v602 + 152);
                                                                      v604 = *(unsigned int *)(v602 + 168);
                                                                      if ((_DWORD)v604)
                                                                      {
                                                                        LODWORD(v605) = (v604 - 1) & ((v598 >> 4) ^ (v598 >> 9));
                                                                        v606 = (llvm::Value **)(v603
                                                                                              + 16
                                                                                              * v605);
                                                                        v607 = *v606;
                                                                        if (*v606 == v598)
                                                                        {
LABEL_1045:
                                                                          v610 = v606[1];
                                                                          v613 = *(_QWORD *)v610;
                                                                          v611 = (char *)v610 + 16;
                                                                          v612 = v613;
LABEL_1046:
                                                                          LOWORD(v703) = 773;
                                                                          *(_QWORD *)&v701 = v611;
                                                                          *((_QWORD *)&v701 + 1) = v612;
                                                                          *(_QWORD *)&v702 = ".not";
                                                                          v695 = (llvm::Value *)sub_1C506EAA0(v601, (uint64_t)v598, (uint64_t)&v701);
                                                                          v614 = *((_QWORD *)v598 + 1);
                                                                          if (v614)
                                                                          {
                                                                            v615 = *(_QWORD *)(a1 + 32);
                                                                            v616 = *(_DWORD *)(v615 + 8);
                                                                            while (1)
                                                                            {
                                                                              v617 = *(_QWORD *)(v614 + 24);
                                                                              *(_QWORD *)&v701 = v617;
                                                                              DWORD2(v701) = v616;
                                                                              v618 = *(_DWORD *)(v615 + 2080);
                                                                              if (!v618)
                                                                                break;
                                                                              v619 = *(_QWORD *)(v615 + 2064);
                                                                              v620 = v618 - 1;
                                                                              v621 = v620 & ((v617 >> 4) ^ (v617 >> 9));
                                                                              v622 = (_QWORD *)(v619 + 16 * v621);
                                                                              v623 = *v622;
                                                                              if (*v622 != v617)
                                                                              {
                                                                                v624 = 0;
                                                                                v625 = 1;
                                                                                while (v623 != -4096)
                                                                                {
                                                                                  if (v624)
                                                                                    v626 = 0;
                                                                                  else
                                                                                    v626 = v623 == -8192;
                                                                                  if (v626)
                                                                                    v624 = v622;
                                                                                  v627 = v621 + v625++;
                                                                                  v621 = v627 & v620;
                                                                                  v622 = (_QWORD *)(v619 + 16 * v621);
                                                                                  v623 = *v622;
                                                                                  if (*v622 == v617)
                                                                                    goto LABEL_1065;
                                                                                }
                                                                                if (v624)
                                                                                  v628 = v624;
                                                                                else
                                                                                  v628 = v622;
                                                                                goto LABEL_1062;
                                                                              }
LABEL_1065:
                                                                              v614 = *(_QWORD *)(v614 + 8);
                                                                              if (!v614)
                                                                                goto LABEL_1068;
                                                                            }
                                                                            v628 = 0;
LABEL_1062:
                                                                            v629 = sub_1C4D8D8F4((_DWORD *)(v615 + 2064), (uint64_t)&v701, (uint64_t *)&v701, v628);
                                                                            *v629 = v701;
                                                                            *((_DWORD *)v629 + 2) = DWORD2(v701);
                                                                            v630 = *(unsigned int *)(v615 + 8);
                                                                            if (v630 >= *(unsigned int *)(v615 + 12))
                                                                            {
                                                                              llvm::SmallVectorBase<unsigned int>::grow_pod(v615, v615 + 16, v630 + 1, 8);
                                                                              v630 = *(unsigned int *)(v615 + 8);
                                                                            }
                                                                            *(_QWORD *)(*(_QWORD *)v615 + 8 * v630) = v617;
                                                                            v616 = *(_DWORD *)(v615 + 8) + 1;
                                                                            *(_DWORD *)(v615 + 8) = v616;
                                                                            goto LABEL_1065;
                                                                          }
LABEL_1068:
                                                                          *(_QWORD *)&v701 = v695;
                                                                          llvm::Value::replaceUsesWithIf(v598, v695, (unsigned int (*)(uint64_t, uint64_t))sub_1C57BF784, (uint64_t)&v701);
                                                                          v631 = (_QWORD *)v708;
                                                                          if ((_QWORD)v709)
                                                                          {
                                                                            sub_1C4D8AE2C(v708, v709, *((uint64_t *)&v709 + 1));
                                                                            v631 = (_QWORD *)v708;
                                                                          }
                                                                          else
                                                                          {
                                                                            *(_QWORD *)(v708 + 48) = 0;
                                                                            v631[7] = 0;
                                                                          }
                                                                          *(_QWORD *)&v701 = v710;
                                                                          if (v710)
                                                                          {
                                                                            llvm::MetadataTracking::track((uint64_t)&v701, v710, 2);
                                                                            v632 = v701;
                                                                          }
                                                                          else
                                                                          {
                                                                            v632 = 0;
                                                                          }
                                                                          sub_1C4774EF4((uint64_t)v631, 0, v632);
                                                                          if ((_QWORD)v701)
                                                                            llvm::MetadataTracking::untrack((uint64_t)&v701, (unsigned __int8 *)v701);
                                                                          if (v710)
                                                                            llvm::MetadataTracking::untrack((uint64_t)&v710, v710);
                                                                          goto LABEL_1077;
                                                                        }
                                                                        v608 = 1;
                                                                        while (v607 != (llvm::Value *)-4096)
                                                                        {
                                                                          v609 = v605 + v608++;
                                                                          v605 = v609 & (v604 - 1);
                                                                          v607 = *(llvm::Value **)(v603
                                                                                                 + 16
                                                                                                 * v605);
                                                                          if (v607 == v598)
                                                                          {
                                                                            v606 = (llvm::Value **)(v603 + 16 * v605);
                                                                            goto LABEL_1045;
                                                                          }
                                                                        }
                                                                      }
                                                                      v606 = (llvm::Value **)(v603 + 16 * v604);
                                                                      goto LABEL_1045;
                                                                    }
                                                                    if (!sub_1C4D9ED34((uint64_t)&v708, (llvm::Constant *)v565)|| v577 != 40|| !v566|| v566[16] > 0x14u|| (llvm::Constant::isNullValue((llvm::Constant *)v566) & 1) == 0&& (sub_1C4E71060((uint64_t)&v701, (llvm::Constant *)v566) & 1) == 0)
                                                                    {
                                                                      goto LABEL_1019;
                                                                    }
                                                                  }
                                                                  v579 = llvm::Constant::getAllOnesValue(*v535, v585);
                                                                  v587 = *(uint64_t **)(a1 + 24);
                                                                  LOWORD(v703) = 257;
                                                                  v581 = sub_1C506EC1C(v587, v535, (uint64_t)v540, (uint64_t)&v701);
                                                                  v711 = 257;
                                                                  v582 = (uint64_t)v587;
                                                                  v583 = 38;
                                                                  goto LABEL_1018;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v502 != 58)
                                                                  goto LABEL_878;
                                                                if (v706 == *(llvm::APInt **)(v194 - 64))
                                                                {
                                                                  if ((sub_1C4D9ED34((uint64_t)&v709, *(llvm::Constant **)(v194 - 32)) & 1) != 0)goto LABEL_877;
                                                                  v501 = (llvm::APInt *)v708;
                                                                }
                                                                if (v501 != *(llvm::APInt **)(v194 - 32)
                                                                  || (sub_1C4D9ED34((uint64_t)&v709, *(llvm::Constant **)(v194 - 64)) & 1) == 0)
                                                                {
                                                                  goto LABEL_878;
                                                                }
                                                              }
LABEL_877:
                                                              v515 = *(_QWORD *)(a1 + 24);
                                                              v517 = v705;
                                                              v516 = v706;
                                                              LOWORD(v703) = 257;
LABEL_898:
                                                              v527 = sub_1C4D89BCC(v515, v516, (uint64_t)v517, (uint64_t)&v701);
                                                              v711 = 257;
                                                              return (llvm::UndefValue **)llvm::BinaryOperator::CreateNot(v527, (llvm::Type *)&v708, 0);
                                                            }
LABEL_845:
                                                            LOWORD(v703) = 257;
                                                            v493 = (char *)operator new(0x80uLL);
                                                            *((_QWORD *)v493 + 6) = 0;
                                                            *((_QWORD *)v493 + 8) = *(_QWORD *)v434;
                                                            v16 = (uint64_t ***)(v493 + 64);
                                                            *((_QWORD *)v493 + 3) = v493 + 64;
                                                            *((_QWORD *)v493 + 7) = v493 + 64;
                                                            *((_QWORD *)v493 + 9) = 0;
                                                            v493[80] = 57;
                                                            v493[81] = 0;
                                                            *((_WORD *)v493 + 41) = 0;
                                                            *((_DWORD *)v493 + 21) = 2;
                                                            *(_OWORD *)(v493 + 88) = 0u;
                                                            *(_OWORD *)(v493 + 104) = 0u;
                                                            *((_DWORD *)v493 + 30) = 0;
                                                            *(_QWORD *)v493 = v434;
                                                            v496 = *((_QWORD *)v434 + 1);
                                                            v495 = (_QWORD *)((char *)v434 + 8);
                                                            v494 = v496;
                                                            *((_QWORD *)v493 + 1) = v496;
                                                            if (v496)
                                                              *(_QWORD *)(v494 + 16) = v493 + 8;
                                                            *((_QWORD *)v493 + 2) = v495;
                                                            *v495 = v493;
                                                            v497 = (_QWORD *)((char *)v435 + 8);
                                                            v498 = *((_QWORD *)v435 + 1);
                                                            *((_QWORD *)v493 + 5) = v498;
                                                            *((_QWORD *)v493 + 4) = v435;
                                                            if (v498)
                                                              *(_QWORD *)(v498 + 16) = v493 + 40;
                                                            *((_QWORD *)v493 + 6) = v497;
                                                            *v497 = v493 + 32;
                                                            goto LABEL_133;
                                                          case 56:
                                                            v434 = *(llvm::APInt **)(v193 - 64);
                                                            if (!v434)
                                                              goto LABEL_852;
                                                            v706 = *(llvm::APInt **)(v193 - 64);
                                                            v435 = *(llvm::APInt **)(v193 - 32);
                                                            if (!v435)
                                                              goto LABEL_852;
                                                            break;
                                                          default:
                                                            goto LABEL_852;
                                                        }
                                                        v705 = v435;
                                                        v442 = *(unsigned __int8 *)(v194 + 16);
                                                        if (v442 == 5)
                                                        {
                                                          if (*(_WORD *)(v194 + 18) == 30)
                                                          {
                                                            v482 = (llvm::APInt **)(v194
                                                                                  - 32
                                                                                  * (*(_DWORD *)(v194 + 20) & 0x7FFFFFF));
                                                            v443 = *v482;
                                                            v444 = v482[4];
LABEL_818:
                                                            if (v434 == v443 && v435 == v444
                                                              || v434 == v444 && v435 == v443)
                                                            {
                                                              goto LABEL_845;
                                                            }
                                                          }
                                                        }
                                                        else if (v442 == 58)
                                                        {
                                                          v443 = *(llvm::APInt **)(v194 - 64);
                                                          v444 = *(llvm::APInt **)(v194 - 32);
                                                          goto LABEL_818;
                                                        }
                                                        if (v433 != 5)
                                                          goto LABEL_852;
                                                        v440 = *(unsigned __int16 *)(v193 + 18);
LABEL_824:
                                                        if (v440 != 30)
                                                          goto LABEL_852;
                                                        v483 = v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF);
                                                        v434 = *(llvm::APInt **)v483;
                                                        if (!*(_QWORD *)v483)
                                                          goto LABEL_852;
                                                        v706 = *(llvm::APInt **)v483;
                                                        v435 = *(llvm::APInt **)(v483 + 32);
                                                        if (!v435)
                                                          goto LABEL_852;
                                                        goto LABEL_827;
                                                      }
                                                      v429 = *(unsigned __int8 *)(v193 + 16);
                                                      if (v429 == 5)
                                                      {
                                                        if (*(_WORD *)(v193 + 18) != 29)
                                                          goto LABEL_677;
                                                        v430 = v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF);
                                                        v431 = *(llvm::Type **)v430;
                                                        if (!*(_QWORD *)v430)
                                                        {
                                                          v432 = *(llvm::Type **)(v430 + 32);
                                                          goto LABEL_798;
                                                        }
                                                        v707 = *(llvm::Type **)v430;
                                                        v432 = *(llvm::Type **)(v430 + 32);
                                                      }
                                                      else
                                                      {
                                                        if (v429 != 57)
                                                          goto LABEL_677;
                                                        v430 = v193 - 64;
                                                        v431 = *(llvm::Type **)(v193 - 64);
                                                        if (!v431)
                                                        {
                                                          v432 = *(llvm::Type **)(v193 - 32);
                                                          goto LABEL_798;
                                                        }
                                                        v707 = *(llvm::Type **)(v193 - 64);
                                                        v432 = *(llvm::Type **)(v193 - 32);
                                                      }
                                                      if ((llvm::Type *)v194 == v432)
                                                      {
LABEL_800:
                                                        v469 = *(_QWORD *)(a1 + 24);
                                                        LOWORD(v703) = 257;
                                                        v463 = sub_1C506EAA0(v469, v194, (uint64_t)&v701);
                                                        v711 = 257;
                                                        v464 = (char *)operator new(0x80uLL);
                                                        *(_QWORD *)v464 = 0;
                                                        *((_QWORD *)v464 + 2) = 0;
                                                        *((_QWORD *)v464 + 1) = 0;
                                                        *((_QWORD *)v464 + 5) = 0;
                                                        *((_QWORD *)v464 + 6) = 0;
                                                        *((_QWORD *)v464 + 4) = 0;
                                                        v465 = (uint64_t *)(v464 + 32);
                                                        *((_QWORD *)v464 + 8) = *(_QWORD *)v431;
                                                        v16 = (uint64_t ***)(v464 + 64);
                                                        *((_QWORD *)v464 + 3) = v464 + 64;
                                                        *((_QWORD *)v464 + 7) = v464 + 64;
                                                        *((_QWORD *)v464 + 9) = 0;
                                                        v464[80] = 56;
                                                        v464[81] = 0;
                                                        *((_WORD *)v464 + 41) = 0;
                                                        *((_DWORD *)v464 + 21) = 2;
                                                        *((_DWORD *)v464 + 30) = 0;
                                                        *(_OWORD *)(v464 + 104) = 0u;
                                                        *(_OWORD *)(v464 + 88) = 0u;
                                                        *(_QWORD *)v464 = v431;
                                                        v472 = *((_QWORD *)v431 + 1);
                                                        v471 = (_QWORD *)((char *)v431 + 8);
                                                        v470 = v472;
                                                        *((_QWORD *)v464 + 1) = v472;
                                                        if (v472)
                                                          *(_QWORD *)(v470 + 16) = v464 + 8;
                                                        *((_QWORD *)v464 + 2) = v471;
                                                        *v471 = v464;
LABEL_803:
                                                        if (*((_QWORD *)v464 + 4))
                                                        {
                                                          **((_QWORD **)v464 + 6) = *((_QWORD *)v464 + 5);
                                                          v691 = *((_QWORD *)v464 + 5);
                                                          if (v691)
                                                            *(_QWORD *)(v691 + 16) = *((_QWORD *)v464 + 6);
                                                        }
                                                        *v465 = v463;
                                                        if (v463)
                                                        {
                                                          v475 = *(_QWORD *)(v463 + 8);
                                                          v474 = (uint64_t **)(v463 + 8);
                                                          v473 = v475;
                                                          *((_QWORD *)v464 + 5) = v475;
                                                          if (v475)
                                                            *(_QWORD *)(v473 + 16) = v464 + 40;
                                                          *((_QWORD *)v464 + 6) = v474;
                                                          *v474 = v465;
                                                        }
                                                        goto LABEL_840;
                                                      }
LABEL_798:
                                                      if (!v432)
                                                        goto LABEL_677;
                                                      v707 = v432;
                                                      v431 = v432;
                                                      if (v194 != *(_QWORD *)v430)
                                                        goto LABEL_677;
                                                      goto LABEL_800;
                                                    }
                                                    v425 = *(unsigned __int8 *)(v194 + 16);
                                                    if (v425 == 5)
                                                    {
                                                      if (*(_WORD *)(v194 + 18) != 29)
                                                        goto LABEL_675;
                                                      v426 = v194 - 32 * (*(_DWORD *)(v194 + 20) & 0x7FFFFFF);
                                                      v427 = *(llvm::Type **)v426;
                                                      if (*(_QWORD *)v426)
                                                      {
                                                        v707 = *(llvm::Type **)v426;
                                                        v428 = *(llvm::Type **)(v426 + 32);
LABEL_720:
                                                        if ((llvm::Type *)v193 == v428)
                                                          goto LABEL_794;
                                                        goto LABEL_792;
                                                      }
                                                      v428 = *(llvm::Type **)(v426 + 32);
                                                    }
                                                    else
                                                    {
                                                      if (v425 != 57)
                                                        goto LABEL_675;
                                                      v426 = v194 - 64;
                                                      v427 = *(llvm::Type **)(v194 - 64);
                                                      if (v427)
                                                      {
                                                        v707 = *(llvm::Type **)(v194 - 64);
                                                        v428 = *(llvm::Type **)(v194 - 32);
                                                        goto LABEL_720;
                                                      }
                                                      v428 = *(llvm::Type **)(v194 - 32);
                                                    }
LABEL_792:
                                                    if (!v428)
                                                      goto LABEL_675;
                                                    v707 = v428;
                                                    v427 = v428;
                                                    if (v193 != *(_QWORD *)v426)
                                                      goto LABEL_675;
LABEL_794:
                                                    v462 = *(_QWORD *)(a1 + 24);
                                                    LOWORD(v703) = 257;
                                                    v463 = sub_1C506EAA0(v462, v193, (uint64_t)&v701);
                                                    v711 = 257;
                                                    v464 = (char *)operator new(0x80uLL);
                                                    *(_QWORD *)v464 = 0;
                                                    *((_QWORD *)v464 + 2) = 0;
                                                    *((_QWORD *)v464 + 1) = 0;
                                                    *((_QWORD *)v464 + 5) = 0;
                                                    *((_QWORD *)v464 + 6) = 0;
                                                    *((_QWORD *)v464 + 4) = 0;
                                                    v465 = (uint64_t *)(v464 + 32);
                                                    *((_QWORD *)v464 + 8) = *(_QWORD *)v427;
                                                    v16 = (uint64_t ***)(v464 + 64);
                                                    *((_QWORD *)v464 + 3) = v464 + 64;
                                                    *((_QWORD *)v464 + 7) = v464 + 64;
                                                    *((_QWORD *)v464 + 9) = 0;
                                                    v464[80] = 56;
                                                    v464[81] = 0;
                                                    *((_WORD *)v464 + 41) = 0;
                                                    *((_DWORD *)v464 + 21) = 2;
                                                    *((_DWORD *)v464 + 30) = 0;
                                                    *(_OWORD *)(v464 + 104) = 0u;
                                                    *(_OWORD *)(v464 + 88) = 0u;
                                                    *(_QWORD *)v464 = v427;
                                                    v468 = *((_QWORD *)v427 + 1);
                                                    v467 = (_QWORD *)((char *)v427 + 8);
                                                    v466 = v468;
                                                    *((_QWORD *)v464 + 1) = v468;
                                                    if (v468)
                                                      *(_QWORD *)(v466 + 16) = v464 + 8;
                                                    *((_QWORD *)v464 + 2) = v467;
                                                    *v467 = v464;
                                                    goto LABEL_803;
                                                  }
                                                  v381 = __src;
                                                }
                                                else
                                                {
                                                  if (v380)
                                                    v381 = (void *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v380);
                                                  else
                                                    v381 = 0;
                                                  __src = v381;
                                                  v382 = (uint64_t ***)v699;
                                                  LODWORD(v709) = v380;
                                                }
                                                v708 = (uint64_t)v381;
                                                v383 = v380;
                                                goto LABEL_648;
                                              }
                                            }
                                            else
                                            {
                                              if (v358 != 57)
                                                goto LABEL_604;
                                              if (!*(_QWORD *)(v193 - 64))
                                                goto LABEL_604;
                                              v705 = *(llvm **)(v193 - 64);
                                              if ((sub_1C4D89F84((uint64_t)&v701 + 8, *(unsigned __int8 **)(v193 - 32)) & 1) == 0)goto LABEL_604;
                                            }
                                            if (!llvm::MaskedValueIsZero(v705, v699, *(const llvm::APInt **)(a1 + 80), 0, *(const llvm::DataLayout **)(a1 + 56), (llvm::AssumptionCache *)a2, *(const llvm::Instruction **)(a1 + 72), (const llvm::DominatorTree *)1, v692))goto LABEL_604;
                                            v341 = v705;
                                            v361 = (const void **)v699;
                                            v362 = *((unsigned int *)v699 + 2);
                                            if (v362 > 0x40)
                                            {
                                              v363 = (void *)operator new[]();
                                              memcpy(v363, *v361, ((unint64_t)(v362 + 63) >> 3) & 0x3FFFFFF8);
                                              v445 = *(llvm::Constant **)v706;
                                              v446 = (unint64_t)(v362 + 63) >> 6;
                                              v447 = v363;
                                              do
                                              {
                                                v448 = *(_QWORD *)v445;
                                                v445 = (llvm::Constant *)((char *)v445 + 8);
                                                *v447++ ^= v448;
                                                --v446;
                                              }
                                              while (v446);
                                            }
                                            else
                                            {
                                              v363 = (void *)(*(_QWORD *)v706 ^ *(_QWORD *)v699);
                                            }
                                            LODWORD(v709) = v362;
                                            v708 = (uint64_t)v363;
                                            v354 = llvm::ConstantInt::get((llvm::ConstantInt **)v254, (llvm::Type *)&v708, v360);
                                            LOWORD(v703) = 257;
                                            v355 = (char *)operator new(0x80uLL);
                                            *((_QWORD *)v355 + 5) = 0;
                                            v356 = (llvm::Value **)(v355 + 40);
                                            *((_QWORD *)v355 + 6) = 0;
                                            *((_QWORD *)v355 + 8) = *(_QWORD *)v341;
                                            v16 = (uint64_t ***)(v355 + 64);
                                            *((_QWORD *)v355 + 3) = v355 + 64;
                                            *((_QWORD *)v355 + 7) = v355 + 64;
                                            *((_QWORD *)v355 + 9) = 0;
                                            v357 = 58;
LABEL_748:
                                            v355[80] = v357;
                                            v355[81] = 0;
                                            *((_WORD *)v355 + 41) = 0;
                                            *((_DWORD *)v355 + 21) = 2;
                                            *(_OWORD *)(v355 + 88) = 0u;
                                            *(_OWORD *)(v355 + 104) = 0u;
                                            *((_DWORD *)v355 + 30) = 0;
                                            *(_QWORD *)v355 = v341;
                                            v451 = *((_QWORD *)v341 + 1);
                                            v450 = (_QWORD *)((char *)v341 + 8);
                                            v449 = v451;
                                            *((_QWORD *)v355 + 1) = v451;
                                            if (v451)
                                              *(_QWORD *)(v449 + 16) = v355 + 8;
                                            *((_QWORD *)v355 + 2) = v450;
                                            *v450 = v355;
LABEL_751:
                                            *((_QWORD *)v355 + 4) = v354;
                                            if (v354)
                                            {
                                              v454 = v354[1];
                                              v453 = v354 + 1;
                                              v452 = v454;
                                              *v356 = v454;
                                              if (v454)
                                                *((_QWORD *)v452 + 2) = v356;
                                              *((_QWORD *)v355 + 6) = v453;
                                              *v453 = v355 + 32;
                                            }
LABEL_755:
                                            llvm::Value::setName(v16, (uint64_t)&v701);
                                            if (v709 >= 0x41 && v708)
                                              MEMORY[0x1CAA32F9C](v708, 0x1000C8000313F17);
                                            return (llvm::UndefValue **)v16;
                                          }
                                          *(_QWORD *)&v701 = &v705;
                                          *((_QWORD *)&v701 + 1) = &v699;
                                          *(_QWORD *)&v702 = 0;
                                          v338 = *(unsigned __int8 *)(v193 + 16);
                                          if (v338 == 5)
                                          {
                                            if (*(_WORD *)(v193 + 18) != 13)
                                              goto LABEL_593;
                                            v340 = (llvm **)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                                            if (!*v340)
                                              goto LABEL_593;
                                            v705 = *v340;
                                            if ((sub_1C4D8A004((uint64_t)&v701 + 8, v340[4]) & 1) == 0)
                                              goto LABEL_593;
                                          }
                                          else
                                          {
                                            if (v338 != 41)
                                              goto LABEL_593;
                                            if (!*(_QWORD *)(v193 - 64))
                                              goto LABEL_593;
                                            v705 = *(llvm **)(v193 - 64);
                                            if (!sub_1C4D89F84((uint64_t)&v701 + 8, *(unsigned __int8 **)(v193 - 32)))goto LABEL_593;
                                          }
                                          v341 = v705;
                                          v342 = (const void **)v699;
                                          v343 = *((unsigned int *)v699 + 2);
                                          if (v343 >= 0x41)
                                          {
                                            v345 = (void *)operator new[]();
                                            memcpy(v345, *v342, ((unint64_t)(v343 + 63) >> 3) & 0x3FFFFFF8);
                                            v346 = 0;
                                            v347 = *(llvm::Constant **)v706;
                                            v348 = (unint64_t)(v343 + 63) >> 6;
                                            v349 = (unint64_t *)v345;
                                            v350 = v348;
                                            do
                                            {
                                              v351 = *(_QWORD *)v347;
                                              v347 = (llvm::Constant *)((char *)v347 + 8);
                                              v352 = v351 + *v349;
                                              v353 = v352 + 1 <= *v349;
                                              if (v346)
                                              {
                                                ++v352;
                                                v346 = v353;
                                              }
                                              else
                                              {
                                                v346 = v352 < *v349;
                                              }
                                              *v349++ = v352;
                                              --v350;
                                            }
                                            while (v350);
                                            *((_QWORD *)v345 + (v348 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v343;
                                          }
                                          else
                                          {
                                            if ((_DWORD)v343)
                                              v344 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v343;
                                            else
                                              v344 = 0;
                                            v345 = (void *)(v344 & (*(_QWORD *)v706 + *(_QWORD *)v699));
                                          }
                                          LODWORD(v709) = v343;
                                          v708 = (uint64_t)v345;
                                          v354 = llvm::ConstantInt::get((llvm::ConstantInt **)v254, (llvm::Type *)&v708, v339);
                                          LOWORD(v703) = 257;
                                          v355 = (char *)operator new(0x80uLL);
                                          *((_QWORD *)v355 + 5) = 0;
                                          v356 = (llvm::Value **)(v355 + 40);
                                          *((_QWORD *)v355 + 6) = 0;
                                          *((_QWORD *)v355 + 8) = *(_QWORD *)v341;
                                          v16 = (uint64_t ***)(v355 + 64);
                                          *((_QWORD *)v355 + 3) = v355 + 64;
                                          *((_QWORD *)v355 + 7) = v355 + 64;
                                          *((_QWORD *)v355 + 9) = 0;
                                          v357 = 41;
                                          goto LABEL_748;
                                        }
                                      }
                                    }
                                  }
                                  v268 = *(unsigned __int8 *)(v193 + 16);
                                  if (v268 == 55)
                                  {
                                    v319 = *(_QWORD *)(v193 - 64);
                                    if (!v319)
                                      goto LABEL_469;
                                    **((_QWORD **)&v702 + 1) = v319;
                                    if ((sub_1C4D89F84((uint64_t)&v703, *(unsigned __int8 **)(v193 - 32)) & 1) == 0)goto LABEL_469;
                                    goto LABEL_558;
                                  }
                                }
                                if (v268 != 5)
                                  goto LABEL_469;
                                if (*(_WORD *)(v193 + 18) != 27)
                                  goto LABEL_469;
                                v320 = *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF));
                                if (!v320)
                                  goto LABEL_469;
                                **((_QWORD **)&v702 + 1) = v320;
                                if ((sub_1C4D8A004((uint64_t)&v703, *(llvm::Constant **)(v193- 32* (*(_DWORD *)(v193 + 20) & 0x7FFFFFF)+ 32)) & 1) == 0)goto LABEL_469;
                                goto LABEL_558;
                              }
                              v265 = *(unsigned __int8 *)(v193 + 16);
                              if (v265 == 5)
                              {
                                if (*(_WORD *)(v193 + 18) != 28)
                                  goto LABEL_467;
                                if (!sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF))))goto LABEL_467;
                                v267 = *(_QWORD *)(v193 - 32 * (*(_DWORD *)(v193 + 20) & 0x7FFFFFF) + 32);
                                if (!v267)
                                  goto LABEL_467;
                              }
                              else
                              {
                                if (v265 != 56)
                                  goto LABEL_467;
                                if (!sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v193 - 64)))
                                  goto LABEL_467;
                                v267 = *(_QWORD *)(v193 - 32);
                                if (!v267 || *(unsigned __int8 *)(v267 + 16) > 0x14u)
                                  goto LABEL_467;
                              }
                              *(_QWORD *)v702 = v267;
                              v294 = *(_QWORD *)(a1 + 24);
                              v295 = v707;
                              v296 = llvm::ConstantExpr::getNot((llvm::Constant **)__src, v266);
                              LOWORD(v703) = 257;
                              v292 = sub_1C4773594(v294, v295, v296, (uint64_t)&v701);
                              goto LABEL_523;
                            }
                            *(_QWORD *)v702 = v264;
                            v289 = *(_QWORD *)(a1 + 24);
                            v290 = v707;
                            v291 = llvm::ConstantExpr::getNot((llvm::Constant **)__src, v263);
                            LOWORD(v703) = 257;
                            v292 = sub_1C4D89BCC(v289, v290, v291, (uint64_t)&v701);
LABEL_523:
                            v53 = (_QWORD *)v292;
                            v288 = llvm::ConstantExpr::getNot((llvm::Constant **)v194, v293);
LABEL_524:
                            v54 = (llvm::Type *)v288;
                            LOWORD(v703) = 257;
                            goto LABEL_94;
                          }
LABEL_441:
                          v705 = 0;
                          *(_QWORD *)&v701 = &v705;
                          v228 = sub_1C4D9EC28((_QWORD **)&v701, 30, (uint64_t)v706);
                          v192 = v707;
                          if (v228)
                          {
                            LOWORD(v703) = 257;
                            v229 = (_QWORD *)sub_1C4D89BCC(v218, v707, (uint64_t)v705, (uint64_t)&v701);
                            v230 = (uint64_t)__src;
                            LOWORD(v703) = 257;
                            v231 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v231 + 5) = 0;
                            v232 = v231 + 40;
                            *((_QWORD *)v231 + 6) = 0;
                            *((_QWORD *)v231 + 8) = *v229;
                            v16 = (uint64_t ***)(v231 + 64);
                            *((_QWORD *)v231 + 3) = v231 + 64;
                            *((_QWORD *)v231 + 7) = v231 + 64;
                            *((_QWORD *)v231 + 9) = 0;
                            v233 = 58;
                          }
                          else
                          {
                            v248 = *((_QWORD *)v707 + 1);
                            if (!v248)
                              goto LABEL_459;
                            if (*(_QWORD *)(v248 + 8))
                              goto LABEL_459;
                            v249 = v706;
                            if (!v706 || *((unsigned __int8 *)v706 + 16) > 0x14u)
                              goto LABEL_459;
                            v332 = *(llvm::Constant **)v706;
                            if ((*(_DWORD *)(*(_QWORD *)v706 + 8) & 0xFE) == 0x12)
                              v332 = (llvm::Constant *)**((_QWORD **)v332 + 2);
                            v333 = llvm::Constant::getAllOnesValue(v332, v707);
                            v335 = llvm::Constant::replaceUndefsWith(v249, v333, v334);
                            LOWORD(v703) = 257;
                            v229 = (_QWORD *)sub_1C4D89BCC(v218, __src, (uint64_t)v335, (uint64_t)&v701);
                            LOWORD(v703) = 257;
                            v336 = sub_1C506EAA0(v218, (uint64_t)v335, (uint64_t)&v701);
                            LOWORD(v703) = 257;
                            v230 = sub_1C4D89BCC(v218, (_QWORD *)v708, v336, (uint64_t)&v701);
                            LOWORD(v703) = 257;
                            v231 = (char *)operator new(0x80uLL);
                            *((_QWORD *)v231 + 5) = 0;
                            v232 = v231 + 40;
                            *((_QWORD *)v231 + 6) = 0;
                            *((_QWORD *)v231 + 8) = *v229;
                            v16 = (uint64_t ***)(v231 + 64);
                            *((_QWORD *)v231 + 3) = v231 + 64;
                            *((_QWORD *)v231 + 7) = v231 + 64;
                            *((_QWORD *)v231 + 9) = 0;
                            v233 = 57;
                          }
                          v231[80] = v233;
                          v231[81] = 0;
                          *((_WORD *)v231 + 41) = 0;
                          *((_DWORD *)v231 + 21) = 2;
                          *(_OWORD *)(v231 + 88) = 0u;
                          *(_OWORD *)(v231 + 104) = 0u;
                          *((_DWORD *)v231 + 30) = 0;
                          *(_QWORD *)v231 = v229;
                          v236 = v229[1];
                          v235 = v229 + 1;
                          v234 = v236;
                          *((_QWORD *)v231 + 1) = v236;
                          if (v236)
                            *(_QWORD *)(v234 + 16) = v231 + 8;
                          *((_QWORD *)v231 + 2) = v235;
                          *v235 = v231;
                          *((_QWORD *)v231 + 4) = v230;
                          if (v230)
                          {
                            v239 = *(_QWORD *)(v230 + 8);
                            v238 = (_QWORD *)(v230 + 8);
                            v237 = v239;
                            *v232 = v239;
                            if (v239)
                              *(_QWORD *)(v237 + 16) = v232;
                            *((_QWORD *)v231 + 6) = v238;
                            *v238 = v231 + 32;
                          }
                          goto LABEL_133;
                        }
                        if ((sub_1C57BE838((uint64_t **)&v701 + 1, (uint64_t)v192) & 1) != 0)
                          goto LABEL_441;
                        v222 = *(_DWORD *)(a2 + 20) & 0x7FFFFFF;
                      }
                      v224 = -v222;
                      goto LABEL_437;
                    }
                    if (*(_WORD *)(a2 + 18) != 30)
                      goto LABEL_419;
                    v197 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
                    v198 = *(unsigned __int8 *)(v197 + 16);
                    if (v198 == 5)
                    {
                      if (*(_WORD *)(v197 + 18) != 28
                        || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v197 - 32 * (*(_DWORD *)(v197 + 20) & 0x7FFFFFF))) & 1) == 0&& !sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v197 - 32 * (*(_DWORD *)(v197 + 20) & 0x7FFFFFF) + 32)))
                      {
                        goto LABEL_402;
                      }
                    }
                    else if (v198 != 56
                           || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v197 - 64)) & 1) == 0
                           && (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v197 - 32)) & 1) == 0)
                    {
                      goto LABEL_402;
                    }
                    v203 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
                    v204 = *(unsigned __int8 *)(v203 + 16);
                    if (v204 == 5)
                    {
                      if (*(_WORD *)(v203 + 18) != 28)
                        goto LABEL_402;
                      v211 = (_QWORD *)(v203 - 32 * (*(_DWORD *)(v203 + 20) & 0x7FFFFFF));
                      v205 = **((_QWORD **)&v702 + 1);
                      if (**((_QWORD **)&v702 + 1) == *v211)
                        goto LABEL_449;
                      v206 = v211 + 4;
                    }
                    else
                    {
                      if (v204 != 56)
                        goto LABEL_402;
                      v205 = **((_QWORD **)&v702 + 1);
                      if (**((_QWORD **)&v702 + 1) == *(_QWORD *)(v203 - 64))
                        goto LABEL_449;
                      v206 = (_QWORD *)(v203 - 32);
                    }
                    if (v205 == *v206)
                      goto LABEL_449;
LABEL_402:
                    v212 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
                    v213 = *(unsigned __int8 *)(v212 + 16);
                    if (v213 == 5)
                    {
                      if (*(_WORD *)(v212 + 18) != 28
                        || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v212 - 32 * (*(_DWORD *)(v212 + 20) & 0x7FFFFFF))) & 1) == 0&& !sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v212 - 32 * (*(_DWORD *)(v212 + 20) & 0x7FFFFFF) + 32)))
                      {
                        goto LABEL_419;
                      }
                    }
                    else if (v213 != 56
                           || (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v212 - 64)) & 1) == 0
                           && (sub_1C4D9EC28((_QWORD **)&v701, 30, *(_QWORD *)(v212 - 32)) & 1) == 0)
                    {
                      goto LABEL_419;
                    }
                    v210 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
LABEL_411:
                    v214 = *(unsigned __int8 *)(v210 + 16);
                    if (v214 == 5)
                    {
                      if (*(_WORD *)(v210 + 18) != 28)
                        goto LABEL_419;
                      v217 = (_QWORD *)(v210 - 32 * (*(_DWORD *)(v210 + 20) & 0x7FFFFFF));
                      v215 = **((_QWORD **)&v702 + 1);
                      if (**((_QWORD **)&v702 + 1) == *v217)
                        goto LABEL_449;
                      v216 = v217 + 4;
                    }
                    else
                    {
                      if (v214 != 56)
                        goto LABEL_419;
                      v215 = **((_QWORD **)&v702 + 1);
                      if (**((_QWORD **)&v702 + 1) == *(_QWORD *)(v210 - 64))
                        goto LABEL_449;
                      v216 = (_QWORD *)(v210 - 32);
                    }
                    if (v215 != *v216)
                      goto LABEL_419;
LABEL_449:
                    LOWORD(v703) = 257;
                    v240 = (char *)operator new(0x80uLL);
                    *((_QWORD *)v240 + 5) = 0;
                    v241 = v240 + 40;
                    *((_QWORD *)v240 + 6) = 0;
                    *((_QWORD *)v240 + 8) = *(_QWORD *)v193;
                    v16 = (uint64_t ***)(v240 + 64);
                    *((_QWORD *)v240 + 3) = v240 + 64;
                    *((_QWORD *)v240 + 7) = v240 + 64;
                    *((_QWORD *)v240 + 9) = 0;
                    v240[80] = 57;
                    v240[81] = 0;
                    *((_WORD *)v240 + 41) = 0;
                    *((_DWORD *)v240 + 21) = 2;
                    *(_OWORD *)(v240 + 88) = 0u;
                    *(_OWORD *)(v240 + 104) = 0u;
                    *((_DWORD *)v240 + 30) = 0;
                    *(_QWORD *)v240 = v193;
                    v244 = *(_QWORD *)(v193 + 8);
                    v243 = (_QWORD *)(v193 + 8);
                    v242 = v244;
                    *((_QWORD *)v240 + 1) = v244;
                    if (v244)
                      *(_QWORD *)(v242 + 16) = v240 + 8;
                    *((_QWORD *)v240 + 2) = v243;
                    *v243 = v240;
                    *((_QWORD *)v240 + 4) = v194;
                    if (v194)
                    {
                      v247 = *(_QWORD *)(v194 + 8);
                      v246 = (_QWORD *)(v194 + 8);
                      v245 = v247;
                      *v241 = v247;
                      if (v247)
                        *(_QWORD *)(v245 + 16) = v241;
                      *((_QWORD *)v240 + 6) = v246;
                      *v246 = v240 + 32;
                    }
                    goto LABEL_133;
                  }
                }
                else
                {
                  if (v155 != 57)
                    goto LABEL_344;
                  v156 = *(llvm::Type **)(v19 - 64);
                  if (!v156)
                    goto LABEL_354;
                  __src = *(void **)(v19 - 64);
                  v157 = *(llvm::Type **)(v19 - 32);
                  if (!v157)
                    goto LABEL_354;
                }
                v707 = v157;
                *(_QWORD *)&v701 = v156;
                *((_QWORD *)&v701 + 1) = v157;
                v159 = *(unsigned __int8 *)(v20 + 16);
                if (v159 != 5)
                {
                  if (v159 != 58)
                    goto LABEL_343;
                  v160 = *(_QWORD *)(v20 - 64);
                  v161 = *(unsigned __int8 *)(v160 + 16);
                  if (v161 == 5)
                  {
                    if (*(_WORD *)(v160 + 18) != 28)
                      goto LABEL_311;
                    v171 = (void **)(v160 - 32 * (*(_DWORD *)(v160 + 20) & 0x7FFFFFF));
                    v162 = (llvm::Type *)*v171;
                    v163 = (llvm::Type *)v171[4];
                  }
                  else
                  {
                    if (v161 != 56)
                      goto LABEL_311;
                    v162 = *(llvm::Type **)(v160 - 64);
                    v163 = *(llvm::Type **)(v160 - 32);
                  }
                  if ((v156 == v162 && v157 == v163 || v156 == v163 && v157 == v162)
                    && (sub_1C4D9ED34((uint64_t)&v702, *(llvm::Constant **)(v20 - 32)) & 1) != 0)
                  {
LABEL_353:
                    LOWORD(v703) = 257;
                    v191 = sub_1C506EC1C(v18, __src, (uint64_t)v707, (uint64_t)&v701);
                    v711 = 257;
                    v16 = (uint64_t ***)llvm::BinaryOperator::CreateNot((uint64_t)v191, (llvm::Type *)&v708, 0);
                    if (v16)
                      return (llvm::UndefValue **)v16;
                    goto LABEL_354;
                  }
LABEL_311:
                  v172 = *(_QWORD *)(v20 - 32);
                  v173 = *(unsigned __int8 *)(v172 + 16);
                  if (v173 == 5)
                  {
                    if (*(_WORD *)(v172 + 18) != 28)
                      goto LABEL_343;
                    v176 = (unint64_t *)(v172 - 32 * (*(_DWORD *)(v172 + 20) & 0x7FFFFFF));
                    v174 = *v176;
                    v177 = v176[4];
                    if (v701 == __PAIR128__(v177, v174))
                      goto LABEL_320;
                    if ((_QWORD)v701 != v177)
                    {
LABEL_343:
                      v155 = *(unsigned __int8 *)(v19 + 16);
                      goto LABEL_344;
                    }
                  }
                  else
                  {
                    if (v173 != 56)
                      goto LABEL_343;
                    v174 = *(_QWORD *)(v172 - 64);
                    v175 = *(_QWORD *)(v172 - 32);
                    if (v701 == __PAIR128__(v175, v174))
                      goto LABEL_320;
                    if ((_QWORD)v701 != v175)
                      goto LABEL_343;
                  }
                  if (*((_QWORD *)&v701 + 1) == v174)
                  {
LABEL_320:
                    if ((sub_1C4D9ED34((uint64_t)&v702, *(llvm::Constant **)(v20 - 64)) & 1) != 0)
                      goto LABEL_353;
                    goto LABEL_343;
                  }
                  goto LABEL_343;
                }
                if (*(_WORD *)(v20 + 18) != 30)
                  goto LABEL_343;
                v164 = *(_DWORD *)(v20 + 20) & 0x7FFFFFF;
                v165 = -v164;
                v166 = (llvm::Constant **)(v20 - 32 * v164);
                v167 = *v166;
                v168 = *((unsigned __int8 *)*v166 + 16);
                if (v168 == 5)
                {
                  if (*((_WORD *)v167 + 9) != 28)
                    goto LABEL_331;
                  v178 = (llvm::Type **)((char *)v167 - 32 * (*((_DWORD *)v167 + 5) & 0x7FFFFFF));
                  v169 = *v178;
                  v170 = v178[4];
                  if (v156 != v169 || v157 != v170)
                  {
LABEL_327:
                    if (v156 != v170 || v157 != v169)
                      goto LABEL_331;
                  }
                }
                else
                {
                  if (v168 != 56)
                    goto LABEL_331;
                  v169 = (llvm::Type *)*((_QWORD *)v167 - 8);
                  v170 = (llvm::Type *)*((_QWORD *)v167 - 4);
                  if (v156 != v169 || v157 != v170)
                    goto LABEL_327;
                }
                if ((sub_1C4D9EED4((uint64_t)&v702, v166[4]) & 1) != 0)
                  goto LABEL_353;
                v165 = -(uint64_t)(*(_DWORD *)(v20 + 20) & 0x7FFFFFF);
LABEL_331:
                v180 = v20 + 32 * v165;
                v181 = *(_QWORD *)(v180 + 32);
                v182 = *(unsigned __int8 *)(v181 + 16);
                if (v182 == 5)
                {
                  if (*(_WORD *)(v181 + 18) != 28)
                    goto LABEL_343;
                  v186 = (unint64_t *)(v181 - 32 * (*(_DWORD *)(v181 + 20) & 0x7FFFFFF));
                  v183 = *v186;
                  v185 = v186[4];
                  v184 = v701;
                  if ((_QWORD)v701 == v183 && *((_QWORD *)&v701 + 1) == v185)
                    goto LABEL_342;
                }
                else
                {
                  if (v182 != 56)
                    goto LABEL_343;
                  v183 = *(_QWORD *)(v181 - 64);
                  v184 = v701;
                  v185 = *(_QWORD *)(v181 - 32);
                  if (v701 == __PAIR128__(v185, v183))
                  {
LABEL_342:
                    if ((sub_1C4D9EED4((uint64_t)&v702, *(llvm::Constant **)v180) & 1) != 0)
                      goto LABEL_353;
                    goto LABEL_343;
                  }
                }
                if (v184 != v185 || *((_QWORD *)&v701 + 1) != v183)
                  goto LABEL_343;
                goto LABEL_342;
              }
              goto LABEL_211;
            }
            if (*(_WORD *)(v114 + 18) != 28)
              goto LABEL_280;
            v117 = *(_DWORD *)(v114 + 20) & 0x7FFFFFF;
            if (*(_QWORD *)(v114 - 32 * v117))
            {
              __src = *(void **)(v114 - 32 * v117);
              if ((sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v114 - 32 * (*(_DWORD *)(v114 + 20) & 0x7FFFFFF) + 32)) & 1) != 0)
              {
LABEL_211:
                v113 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
                goto LABEL_212;
              }
              v117 = *(_DWORD *)(v114 + 20) & 0x7FFFFFF;
            }
            v118 = *(_QWORD *)(v114 - 32 * v117 + 32);
            if (!v118)
              goto LABEL_280;
            *(_QWORD *)v701 = v118;
            if (!sub_1C4D9EC28((_QWORD **)&v701 + 1, 30, *(_QWORD *)(v114 - 32 * (*(_DWORD *)(v114 + 20) & 0x7FFFFFF))))goto LABEL_280;
            goto LABEL_211;
          }
          if (*(_WORD *)(v69 + 18) != 29)
            goto LABEL_193;
          v83 = *(_QWORD *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF));
          v84 = *(unsigned __int8 *)(v83 + 16);
          if (v84 != 5)
          {
            if (v84 != 58)
              goto LABEL_176;
            v85 = **((_QWORD **)&v702 + 1);
            if (**((_QWORD **)&v702 + 1) != *(_QWORD *)(v83 - 64))
            {
LABEL_141:
              if (v85 != *(_QWORD *)(v83 - 32)
                || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v83 - 64)) & 1) == 0)
              {
                goto LABEL_176;
              }
              goto LABEL_175;
            }
            if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v83 - 32)) & 1) == 0)
            {
              v85 = **((_QWORD **)&v702 + 1);
              goto LABEL_141;
            }
LABEL_175:
            if (*(_QWORD *)v704 == *(_QWORD *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF) + 32))
              goto LABEL_93;
LABEL_176:
            v104 = *(_QWORD *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF) + 32);
            v105 = *(unsigned __int8 *)(v104 + 16);
            if (v105 != 5)
            {
              if (v105 != 58)
                goto LABEL_193;
              v106 = **((_QWORD **)&v702 + 1);
              if (**((_QWORD **)&v702 + 1) != *(_QWORD *)(v104 - 64))
              {
LABEL_181:
                if (v106 != *(_QWORD *)(v104 - 32)
                  || (sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v104 - 64)) & 1) == 0)
                {
                  goto LABEL_193;
                }
                goto LABEL_191;
              }
              if ((sub_1C4D9ED34((uint64_t)&v703, *(llvm::Constant **)(v104 - 32)) & 1) == 0)
              {
                v106 = **((_QWORD **)&v702 + 1);
                goto LABEL_181;
              }
LABEL_191:
              v71 = (_QWORD *)(v69 - 32 * (*(_DWORD *)(v69 + 20) & 0x7FFFFFF));
              goto LABEL_192;
            }
            if (*(_WORD *)(v104 + 18) != 30)
              goto LABEL_193;
            v107 = *(_DWORD *)(v104 + 20) & 0x7FFFFFF;
            v108 = v104 - 32 * v107;
            v109 = **((_QWORD **)&v702 + 1);
            if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v108)
            {
              if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v108 + 32)) & 1) != 0)
                goto LABEL_191;
              v109 = **((_QWORD **)&v702 + 1);
              v110 = -(uint64_t)(*(_DWORD *)(v104 + 20) & 0x7FFFFFF);
            }
            else
            {
              v110 = -v107;
            }
            v111 = v104 + 32 * v110;
            if (v109 != *(_QWORD *)(v111 + 32)
              || !sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v111))
            {
              goto LABEL_193;
            }
            goto LABEL_191;
          }
          if (*(_WORD *)(v83 + 18) != 30)
            goto LABEL_176;
          v90 = *(_DWORD *)(v83 + 20) & 0x7FFFFFF;
          v91 = v83 - 32 * v90;
          v92 = **((_QWORD **)&v702 + 1);
          if (**((_QWORD **)&v702 + 1) == *(_QWORD *)v91)
          {
            if ((sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)(v91 + 32)) & 1) != 0)
              goto LABEL_175;
            v92 = **((_QWORD **)&v702 + 1);
            v93 = -(uint64_t)(*(_DWORD *)(v83 + 20) & 0x7FFFFFF);
          }
          else
          {
            v93 = -v90;
          }
          v103 = v83 + 32 * v93;
          if (v92 != *(_QWORD *)(v103 + 32) || !sub_1C4D9EED4((uint64_t)&v703, *(llvm::Constant **)v103))
            goto LABEL_176;
          goto LABEL_175;
        }
        v22 = *(unsigned __int8 *)(v19 + 16);
        if (v22 == 5)
        {
          if (*(_WORD *)(v19 + 18) != 28)
            goto LABEL_44;
          v29 = v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF);
          v23 = *(_QWORD **)v29;
          if (!*(_QWORD *)v29)
            goto LABEL_44;
          __src = *(void **)v29;
          v24 = *(_QWORD **)(v29 + 32);
          if (!v24)
            goto LABEL_44;
        }
        else
        {
          if (v22 != 56)
            goto LABEL_44;
          v23 = *(_QWORD **)(v19 - 64);
          if (!v23)
            goto LABEL_44;
          __src = *(void **)(v19 - 64);
          v24 = *(_QWORD **)(v19 - 32);
          if (!v24)
            goto LABEL_44;
        }
        v707 = (llvm::Type *)v24;
        v30 = *(unsigned __int8 *)(v20 + 16);
        if (v30 == 5)
        {
          if (*(_WORD *)(v20 + 18) != 29)
            goto LABEL_44;
          v38 = (_QWORD *)(v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF));
          v31 = (_QWORD *)*v38;
          v32 = (_QWORD *)v38[4];
          if (v23 == v31 && v24 == v32)
            goto LABEL_127;
        }
        else
        {
          if (v30 != 57)
            goto LABEL_44;
          v31 = *(_QWORD **)(v20 - 64);
          v32 = *(_QWORD **)(v20 - 32);
          if (v23 == v31 && v24 == v32)
            goto LABEL_127;
        }
        if (v23 == v32 && v24 == v31)
          goto LABEL_127;
LABEL_44:
        v40 = *(unsigned __int8 *)(v20 + 16);
        if (v40 == 5)
        {
          if (*(_WORD *)(v20 + 18) != 28)
            goto LABEL_60;
          v41 = v20 - 32 * (*(_DWORD *)(v20 + 20) & 0x7FFFFFF);
          v23 = *(_QWORD **)v41;
          if (!*(_QWORD *)v41)
            goto LABEL_60;
          __src = *(void **)v41;
          v24 = *(_QWORD **)(v41 + 32);
          if (!v24)
            goto LABEL_60;
        }
        else
        {
          if (v40 != 56)
            goto LABEL_60;
          v23 = *(_QWORD **)(v20 - 64);
          if (!v23)
            goto LABEL_60;
          __src = *(void **)(v20 - 64);
          v24 = *(_QWORD **)(v20 - 32);
          if (!v24)
            goto LABEL_60;
        }
        v707 = (llvm::Type *)v24;
        if (v22 == 5)
        {
          if (*(_WORD *)(v19 + 18) == 29)
          {
            v44 = (_QWORD *)(v19 - 32 * (*(_DWORD *)(v19 + 20) & 0x7FFFFFF));
            v42 = (_QWORD *)*v44;
            v43 = (_QWORD *)v44[4];
LABEL_57:
            if (v23 == v42 && v24 == v43)
              goto LABEL_127;
            if (v23 != v43)
              goto LABEL_60;
LABEL_89:
            if (v24 != v42)
              goto LABEL_90;
LABEL_127:
            LOWORD(v703) = 257;
            v75 = (char *)operator new(0x80uLL);
            *(_QWORD *)v75 = 0;
            *((_QWORD *)v75 + 2) = 0;
            *((_QWORD *)v75 + 1) = 0;
            *((_QWORD *)v75 + 5) = 0;
            *((_QWORD *)v75 + 6) = 0;
            *((_QWORD *)v75 + 4) = 0;
            *((_QWORD *)v75 + 8) = *v23;
            v16 = (uint64_t ***)(v75 + 64);
            *((_QWORD *)v75 + 3) = v75 + 64;
            *((_QWORD *)v75 + 7) = v75 + 64;
            *((_QWORD *)v75 + 9) = 0;
            v75[80] = 58;
            v75[81] = 0;
            *((_WORD *)v75 + 41) = 0;
            *((_DWORD *)v75 + 21) = 2;
            *((_DWORD *)v75 + 30) = 0;
            *(_OWORD *)(v75 + 104) = 0u;
            *(_OWORD *)(v75 + 88) = 0u;
            *(_QWORD *)v75 = v23;
            v78 = v23[1];
            v77 = v23 + 1;
            v76 = v78;
            *((_QWORD *)v75 + 1) = v78;
            if (v78)
              *(_QWORD *)(v76 + 16) = v75 + 8;
            *((_QWORD *)v75 + 2) = v77;
            *v77 = v75;
            if (*((_QWORD *)v75 + 4))
            {
              **((_QWORD **)v75 + 6) = *((_QWORD *)v75 + 5);
              v690 = *((_QWORD *)v75 + 5);
              if (v690)
                *(_QWORD *)(v690 + 16) = *((_QWORD *)v75 + 6);
            }
            *((_QWORD *)v75 + 4) = v24;
            v81 = v24[1];
            v80 = v24 + 1;
            v79 = v81;
            *((_QWORD *)v75 + 5) = v81;
            if (v81)
              *(_QWORD *)(v79 + 16) = v75 + 40;
            *((_QWORD *)v75 + 6) = v80;
            *v80 = v75 + 32;
            goto LABEL_133;
          }
        }
        else if (v22 == 57)
        {
          v42 = *(_QWORD **)(v19 - 64);
          v43 = *(_QWORD **)(v19 - 32);
          goto LABEL_57;
        }
LABEL_60:
        *(_QWORD *)&v701 = &__src;
        *((_QWORD *)&v701 + 1) = &v707;
        *((_QWORD *)&v702 + 1) = &__src;
        v704 = (uint64_t)&v707;
LABEL_91:
        if (sub_1C4E74064((_QWORD **)&v701, 29, v19)
          && sub_1C57BBF2C((uint64_t **)&v702 + 1, *(_QWORD *)(a2 - 32)))
        {
          goto LABEL_93;
        }
        goto LABEL_193;
      }
      v25 = *(unsigned __int16 *)(a2 + 18);
      if (v25 != 30)
        goto LABEL_88;
      v26 = (_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
      v27 = *v26;
      v28 = *(unsigned __int8 *)(*v26 + 16);
      if (v28 == 5)
      {
        if (*(_WORD *)(v27 + 18) != 28)
          goto LABEL_69;
        v33 = v27 - 32 * (*(_DWORD *)(v27 + 20) & 0x7FFFFFF);
        v23 = *(_QWORD **)v33;
        if (!*(_QWORD *)v33)
          goto LABEL_69;
        __src = *(void **)v33;
        v24 = *(_QWORD **)(v33 + 32);
        if (!v24)
          goto LABEL_69;
      }
      else
      {
        if (v28 != 56)
          goto LABEL_69;
        v23 = *(_QWORD **)(v27 - 64);
        if (!v23)
          goto LABEL_69;
        __src = *(void **)(v27 - 64);
        v24 = *(_QWORD **)(v27 - 32);
        if (!v24)
          goto LABEL_69;
      }
      v707 = (llvm::Type *)v24;
      v34 = v26[4];
      v35 = *(unsigned __int8 *)(v34 + 16);
      if (v35 == 5)
      {
        if (*(_WORD *)(v34 + 18) == 29)
        {
          v45 = (_QWORD *)(v34 - 32 * (*(_DWORD *)(v34 + 20) & 0x7FFFFFF));
          v36 = (_QWORD *)*v45;
          v37 = (_QWORD *)v45[4];
LABEL_63:
          v46 = v23 == v36 && v24 == v37;
          if (v46 || v23 == v37 && v24 == v36)
            goto LABEL_127;
        }
      }
      else if (v35 == 57)
      {
        v36 = *(_QWORD **)(v34 - 64);
        v37 = *(_QWORD **)(v34 - 32);
        goto LABEL_63;
      }
LABEL_69:
      v47 = v26[4];
      v48 = *(unsigned __int8 *)(v47 + 16);
      if (v48 == 5)
      {
        if (*(_WORD *)(v47 + 18) != 28)
          goto LABEL_88;
        v49 = v47 - 32 * (*(_DWORD *)(v47 + 20) & 0x7FFFFFF);
        v23 = *(_QWORD **)v49;
        if (!*(_QWORD *)v49)
          goto LABEL_88;
        __src = *(void **)v49;
        v24 = *(_QWORD **)(v49 + 32);
        if (!v24)
          goto LABEL_88;
      }
      else
      {
        if (v48 != 56)
          goto LABEL_88;
        v23 = *(_QWORD **)(v47 - 64);
        if (!v23)
          goto LABEL_88;
        __src = *(void **)(v47 - 64);
        v24 = *(_QWORD **)(v47 - 32);
        if (!v24)
          goto LABEL_88;
      }
      v707 = (llvm::Type *)v24;
      if (v28 == 5)
      {
        if (*(_WORD *)(v27 + 18) != 29)
          goto LABEL_88;
        v51 = (_QWORD *)(v27 - 32 * (*(_DWORD *)(v27 + 20) & 0x7FFFFFF));
        v42 = (_QWORD *)*v51;
        v50 = (_QWORD *)v51[4];
        if (v23 == v42 && v24 == v50)
          goto LABEL_127;
      }
      else
      {
        if (v28 != 57)
          goto LABEL_88;
        v42 = *(_QWORD **)(v27 - 64);
        v50 = *(_QWORD **)(v27 - 32);
        if (v23 == v42 && v24 == v50)
          goto LABEL_127;
      }
      if (v23 == v50)
        goto LABEL_89;
LABEL_88:
      *(_QWORD *)&v701 = &__src;
      *((_QWORD *)&v701 + 1) = &v707;
      *((_QWORD *)&v702 + 1) = &__src;
      v704 = (uint64_t)&v707;
      goto LABEL_102;
    }
  }
  return (llvm::UndefValue **)v16;
}

